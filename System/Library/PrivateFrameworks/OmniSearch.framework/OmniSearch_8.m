unint64_t MobileSMSDocument.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result;

  result = 25705;
  switch(a1)
  {
    case 1:
      result = 0x644974616863;
      break;
    case 2:
      result = 0x4E79616C70736964;
      break;
    case 3:
      result = 2036625250;
      break;
    case 4:
      result = 1836020326;
      break;
    case 5:
      result = 28532;
      break;
    case 6:
      result = 1702125924;
      break;
    case 7:
      result = 0x55746E65746E6F63;
      break;
    case 8:
    case 11:
    case 16:
      result = 0xD000000000000010;
      break;
    case 9:
      result = 0x4E65636976726573;
      break;
    case 10:
      result = 0x656D614E74616863;
      break;
    case 12:
      result = 0x7373654D74616863;
      break;
    case 13:
      result = 0xD000000000000013;
      break;
    case 14:
      result = 0xD000000000000027;
      break;
    case 15:
      result = 0xD00000000000001ALL;
      break;
    case 17:
      result = 0xD000000000000013;
      break;
    case 18:
      result = 0xD000000000000016;
      break;
    case 19:
      result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance MobileSMSDocument.CodingKeys()
{
  return MobileSMSDocument.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MobileSMSDocument.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = MobileSMSDocument.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MobileSMSDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MobileSMSDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MobileSMSDocument.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_163_5();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<MobileSMSDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_64_13();
  lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  OUTLINED_FUNCTION_96_12();
  OUTLINED_FUNCTION_61_15();
  if (!v0)
  {
    OUTLINED_FUNCTION_3_44(1);
    OUTLINED_FUNCTION_3_44(2);
    OUTLINED_FUNCTION_3_44(3);
    OUTLINED_FUNCTION_153_5(*(void *)(v1 + 64));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_9_25();
    v9[0] = *(void *)(v1 + 72);
    OUTLINED_FUNCTION_9_25();
    v8 = (int *)type metadata accessor for MobileSMSDocument(0);
    LOBYTE(v9[0]) = 6;
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_36_25();
    OUTLINED_FUNCTION_150_4(v8[11]);
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_36_25();
    OUTLINED_FUNCTION_90_14();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Photo]);
    lazy protocol witness table accessor for type [Photo] and conformance <A> [A]();
    OUTLINED_FUNCTION_37_24();
    OUTLINED_FUNCTION_192_3(v8[13]);
    OUTLINED_FUNCTION_3_44(9);
    OUTLINED_FUNCTION_192_3(v8[14]);
    OUTLINED_FUNCTION_3_44(10);
    v9[0] = *(void *)(v1 + v8[15]);
    OUTLINED_FUNCTION_9_25();
    OUTLINED_FUNCTION_154_5(*(void *)(v1 + v8[16]));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MobileSMSDocument]);
    lazy protocol witness table accessor for type [MobileSMSDocument] and conformance <A> [A]();
    OUTLINED_FUNCTION_37_24();
    OUTLINED_FUNCTION_117_8(v8[17]);
    lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults();
    OUTLINED_FUNCTION_36_25();
    OUTLINED_FUNCTION_3_44(14);
    uint64_t v3 = OUTLINED_FUNCTION_115_8();
    type metadata accessor for PartialExtractedAttributes(v3);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PartialExtractedAttributes and conformance PartialExtractedAttributes);
    OUTLINED_FUNCTION_4_34();
    OUTLINED_FUNCTION_188_3();
    LOBYTE(v9[0]) = v4;
    type metadata accessor for PreExtractedCard(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedCard and conformance PreExtractedCard);
    OUTLINED_FUNCTION_4_34();
    uint64_t v5 = OUTLINED_FUNCTION_116_9();
    type metadata accessor for PreExtractedContact(v5);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedContact and conformance PreExtractedContact);
    OUTLINED_FUNCTION_4_34();
    OUTLINED_FUNCTION_187_3();
    char v10 = v6;
    type metadata accessor for PreExtractedSharedLink(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedSharedLink and conformance PreExtractedSharedLink);
    OUTLINED_FUNCTION_8_20();
    outlined init with take of URL?(v1 + v8[23], (uint64_t)v9, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    OUTLINED_FUNCTION_152_5();
    lazy protocol witness table accessor for type PreExtractedBreadcrumb and conformance PreExtractedBreadcrumb();
    OUTLINED_FUNCTION_36_25();
  }
  OUTLINED_FUNCTION_26_2();
  v7();
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void MobileSMSDocument.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  v85 = v2;
  uint64_t v71 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_121_8(v6, v64);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_60_13(v9, v65);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_31_25(v12, v66);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_184_0();
  uint64_t v74 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_122_9(v18, v67);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v20 = OUTLINED_FUNCTION_81(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_184_0();
  uint64_t v73 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MobileSMSDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = OUTLINED_FUNCTION_29_11();
  v24 = (int *)type metadata accessor for MobileSMSDocument(v23);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_140_4((uint64_t)v1 + *(int *)(v26 + 68));
  uint64_t v79 = v27;
  v29 = (uint64_t *)((char *)v1 + *(int *)(v28 + 72));
  uint64_t *v29 = 0;
  v29[1] = 0;
  v77 = v29;
  v30 = (char *)v1 + *(int *)(v28 + 76);
  type metadata accessor for PartialExtractedAttributes(0);
  uint64_t v78 = (uint64_t)v30;
  uint64_t v31 = OUTLINED_FUNCTION_47_19();
  __swift_storeEnumTagSinglePayload(v31, v32, v33, v34);
  uint64_t v35 = (uint64_t)v1 + v24[20];
  uint64_t v36 = type metadata accessor for PreExtractedCard(0);
  uint64_t v37 = OUTLINED_FUNCTION_47_19();
  __swift_storeEnumTagSinglePayload(v37, v38, v39, v36);
  uint64_t v40 = type metadata accessor for PreExtractedContact(0);
  uint64_t v41 = OUTLINED_FUNCTION_85_15();
  __swift_storeEnumTagSinglePayload(v41, v42, v43, v40);
  uint64_t v44 = type metadata accessor for PreExtractedSharedLink(0);
  uint64_t v45 = OUTLINED_FUNCTION_84_12();
  __swift_storeEnumTagSinglePayload(v45, v46, v47, v44);
  uint64_t v48 = (uint64_t)v1 + v24[23];
  _s10OmniSearch0B7ContextVSgWOi0_(v84);
  outlined init with take of URL?((uint64_t)v84, v48, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
  __swift_project_boxed_opaque_existential_1(v85, v85[3]);
  lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
    outlined consume of DataDetectorResults?(*(void *)v79);
    swift_bridgeObjectRelease();
    outlined destroy of PQAVerificationModelProtocol?(v78, &demangling cache variable for type metadata for PartialExtractedAttributes?);
    outlined destroy of PQAVerificationModelProtocol?(v35, &demangling cache variable for type metadata for PreExtractedCard?);
    outlined destroy of PQAVerificationModelProtocol?(v76, &demangling cache variable for type metadata for PreExtractedContact?);
    outlined destroy of PQAVerificationModelProtocol?(v75, &demangling cache variable for type metadata for PreExtractedSharedLink?);
    outlined init with take of URL?(v48, (uint64_t)v82, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined release of PreExtractedBreadcrumb?((uint64_t)v82);
  }
  else
  {
    *uint64_t v1 = KeyedDecodingContainer.decode(_:forKey:)();
    v1[1] = v49;
    LOBYTE(v82[0]) = 1;
    v1[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v1[3] = v50;
    v1[4] = OUTLINED_FUNCTION_205_2(2);
    v1[5] = v51;
    v1[6] = OUTLINED_FUNCTION_205_2(3);
    v1[7] = v52;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    v81[0] = 4;
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v1[8] = *(void *)&v82[0];
    OUTLINED_FUNCTION_97_7(5);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v1[9] = *(void *)&v82[0];
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_70_14();
    OUTLINED_FUNCTION_138_3();
    outlined init with take of URL?(v73, (uint64_t)v1 + MEMORY[0x28], &demangling cache variable for type metadata for Date?);
    type metadata accessor for URL();
    LOBYTE(v82[0]) = 7;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_70_14();
    OUTLINED_FUNCTION_138_3();
    outlined init with take of URL?(v72, (uint64_t)v1 + v24[11], &demangling cache variable for type metadata for URL?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Photo]);
    v81[0] = 8;
    lazy protocol witness table accessor for type [Photo] and conformance <A> [A]();
    OUTLINED_FUNCTION_92_15();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(uint64_t *)((char *)v1 + MEMORY[0x30]) = *(void *)&v82[0];
    uint64_t v53 = OUTLINED_FUNCTION_208_3(9);
    v54 = (uint64_t *)((char *)v1 + v24[13]);
    uint64_t *v54 = v53;
    v54[1] = v55;
    LOBYTE(v82[0]) = 10;
    uint64_t v56 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v57 = (uint64_t *)((char *)v1 + MEMORY[0x38]);
    uint64_t *v57 = v56;
    v57[1] = v58;
    OUTLINED_FUNCTION_97_7(11);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    OUTLINED_FUNCTION_202_2();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MobileSMSDocument]);
    lazy protocol witness table accessor for type [MobileSMSDocument] and conformance <A> [A]();
    OUTLINED_FUNCTION_92_15();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(uint64_t *)((char *)v1 + MEMORY[0x40]) = *(void *)&v82[0];
    v81[0] = 13;
    lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults();
    OUTLINED_FUNCTION_203_3();
    OUTLINED_FUNCTION_46_21();
    uint64_t v59 = v83;
    long long v60 = v82[1];
    *(_OWORD *)uint64_t v79 = v82[0];
    *(_OWORD *)(v79 + 16) = v60;
    *(void *)(v79 + 32) = v59;
    uint64_t *v77 = OUTLINED_FUNCTION_208_3(14);
    v77[1] = v61;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PartialExtractedAttributes and conformance PartialExtractedAttributes);
    OUTLINED_FUNCTION_70_14();
    OUTLINED_FUNCTION_46_21();
    outlined assign with take of SearchResultItem?(v74, v78, &demangling cache variable for type metadata for PartialExtractedAttributes?);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedCard and conformance PreExtractedCard);
    OUTLINED_FUNCTION_70_14();
    OUTLINED_FUNCTION_46_21();
    outlined assign with take of SearchResultItem?(v68, v35, &demangling cache variable for type metadata for PreExtractedCard?);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedContact and conformance PreExtractedContact);
    OUTLINED_FUNCTION_46_21();
    outlined assign with take of SearchResultItem?(v69, v76, &demangling cache variable for type metadata for PreExtractedContact?);
    LOBYTE(v82[0]) = 18;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedSharedLink and conformance PreExtractedSharedLink);
    OUTLINED_FUNCTION_70_14();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined assign with take of SearchResultItem?(v70, v75, &demangling cache variable for type metadata for PreExtractedSharedLink?);
    v81[151] = 19;
    lazy protocol witness table accessor for type PreExtractedBreadcrumb and conformance PreExtractedBreadcrumb();
    OUTLINED_FUNCTION_46_21();
    uint64_t v62 = OUTLINED_FUNCTION_25_24();
    v63(v62);
    outlined init with take of URL?((uint64_t)v82, (uint64_t)v80, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined init with take of URL?(v48, (uint64_t)v81, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined release of PreExtractedBreadcrumb?((uint64_t)v81);
    outlined init with take of URL?((uint64_t)v80, v48, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined init with copy of EmailDocument((uint64_t)v1, v71, (void (*)(void))type metadata accessor for MobileSMSDocument);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
    outlined destroy of EmailDocument((uint64_t)v1, (void (*)(void))type metadata accessor for MobileSMSDocument);
  }
  OUTLINED_FUNCTION_100_13();
  OUTLINED_FUNCTION_120_0();
}

uint64_t (*protocol witness for PreExtractedSourceDocument.partialExtractedAttributes.modify in conformance MobileSMSDocument())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void protocol witness for Decodable.init(from:) in conformance MobileSMSDocument()
{
}

void protocol witness for Encodable.encode(to:) in conformance MobileSMSDocument()
{
}

uint64_t CalendarEvent.startDate.getter()
{
  return CalendarEvent.startDate.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_127_6();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_62_14(*(int *)(v2 + 28));
}

uint64_t CalendarEvent.endDate.getter()
{
  return CalendarEvent.endDate.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_127_6();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_62_14(*(int *)(v2 + 32));
}

uint64_t CalendarEvent.locationName.getter()
{
  return CalendarEvent.locationName.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);

  uint64_t v0 = OUTLINED_FUNCTION_78_14();
  v1(v0);
  OUTLINED_FUNCTION_75_2();
  return OUTLINED_FUNCTION_79_0();
}

uint64_t CalendarEvent.organizerNames.getter()
{
  type metadata accessor for CalendarEvent(0);
  return swift_bridgeObjectRetain();
}

uint64_t CalendarEvent.participantNames.getter()
{
  type metadata accessor for CalendarEvent(0);
  return swift_bridgeObjectRetain();
}

uint64_t CalendarEvent.notes.getter()
{
  return CalendarEvent.notes.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);

  uint64_t v0 = OUTLINED_FUNCTION_78_14();
  v1(v0);
  OUTLINED_FUNCTION_75_2();
  return OUTLINED_FUNCTION_79_0();
}

uint64_t CalendarEvent.dataDetectorResults.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_27_7();
  uint64_t v1 = type metadata accessor for CalendarEvent(v0);
  uint64_t v2 = OUTLINED_FUNCTION_51_23(*(int *)(v1 + 52));
  return outlined copy of DataDetectorResults?(v2);
}

double CalendarEvent.dataDetectorResults.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_77_15();
  uint64_t v1 = type metadata accessor for CalendarEvent(v0);
  uint64_t v2 = OUTLINED_FUNCTION_107_12(*(int *)(v1 + 52));
  *(void *)&double result = OUTLINED_FUNCTION_103_14(v2, v3, v4, v5, v6, v7, v8, v9, v10, v12).n128_u64[0];
  return result;
}

uint64_t (*CalendarEvent.dataDetectorResults.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t CalendarEvent.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000258684A80 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEC000000656D614ELL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x657A696E6167726FLL && a2 == 0xEE0073656D614E72;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000258684AA0 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x7365746F6ELL && a2 == 0xE500000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x8000000258684950)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 9;
                }
                else {
                  return 10;
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t CalendarEvent.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7461447472617473;
      break;
    case 4:
      unint64_t result = 0x65746144646E65;
      break;
    case 5:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      unint64_t result = 0x657A696E6167726FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x7365746F6ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance CalendarEvent.CodingKeys()
{
  return CalendarEvent.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance CalendarEvent.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = CalendarEvent.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CalendarEvent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CalendarEvent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void CalendarEvent.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<CalendarEvent.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_4_29();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for CalendarEvent(0);
    OUTLINED_FUNCTION_185_4();
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_8_16();
    OUTLINED_FUNCTION_8_16();
    OUTLINED_FUNCTION_183_4();
    OUTLINED_FUNCTION_2_24();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_45_16();
    OUTLINED_FUNCTION_45_16();
    OUTLINED_FUNCTION_98_10();
    OUTLINED_FUNCTION_2_24();
    lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults();
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_26_2();
  v2();
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void CalendarEvent.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_36_21();
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)v34 - v10;
  v34[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<CalendarEvent.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = OUTLINED_FUNCTION_14_8();
  type metadata accessor for CalendarEvent(v13);
  OUTLINED_FUNCTION_7_2();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v39 = (void *)((char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v40 = v15;
  OUTLINED_FUNCTION_140_4((uint64_t)v39 + *(int *)(v15 + 52));
  uint64_t v37 = v17;
  uint64_t v38 = v4;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  v34[0] = v0;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    unint64_t v36 = v1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    LODWORD(v35) = 0;
    outlined consume of DataDetectorResults?(*v37);
  }
  else
  {
    LOBYTE(v41) = 0;
    uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v19 = v39;
    *uint64_t v39 = v18;
    v19[1] = v20;
    v19[2] = OUTLINED_FUNCTION_149_2(1);
    v19[3] = v21;
    uint64_t v22 = OUTLINED_FUNCTION_149_2(2);
    OUTLINED_FUNCTION_189_3(v22, v23);
    LOBYTE(v41) = 3;
    unint64_t v36 = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of URL?((uint64_t)v11, (uint64_t)v19 + *(int *)(v40 + 28), &demangling cache variable for type metadata for Date?);
    LOBYTE(v41) = 4;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v24 = (int *)v40;
    outlined init with take of URL?(v2, (uint64_t)v19 + *(int *)(v40 + 32), &demangling cache variable for type metadata for Date?);
    LOBYTE(v41) = 5;
    uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_88_10(v25, v26, v24[9]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_114_12();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    LODWORD(v35) = 1;
    *(uint64_t *)((char *)v19 + v24[10]) = v41;
    OUTLINED_FUNCTION_114_12();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(uint64_t *)((char *)v19 + v24[11]) = v41;
    uint64_t v27 = OUTLINED_FUNCTION_149_2(8);
    OUTLINED_FUNCTION_88_10(v27, v28, v24[12]);
    lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    unint64_t v36 = 0;
    OUTLINED_FUNCTION_111_0();
    v29();
    long long v40 = v41;
    long long v35 = v42;
    uint64_t v30 = v43;
    uint64_t v31 = v37;
    outlined consume of DataDetectorResults?(*v37);
    long long v32 = v35;
    *(_OWORD *)uint64_t v31 = v40;
    *((_OWORD *)v31 + 1) = v32;
    v31[4] = v30;
    uint64_t v33 = v39;
    outlined init with copy of EmailDocument((uint64_t)v39, v6, (void (*)(void))type metadata accessor for CalendarEvent);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    outlined destroy of EmailDocument((uint64_t)v33, (void (*)(void))type metadata accessor for CalendarEvent);
  }
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance CalendarEvent()
{
}

void protocol witness for Encodable.encode(to:) in conformance CalendarEvent()
{
}

uint64_t Photo.snippet.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Photo.ocrString.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Photo.date.getter()
{
  return MobileSMSDocument.contentURL.getter();
}

uint64_t Photo.businessNames.getter()
{
  return MobileSMSDocument.photoAttachments.getter();
}

uint64_t Photo.peopleNames.getter()
{
  return EmailDocument.attachmentNames.getter((void (*)(void))type metadata accessor for Photo);
}

uint64_t EmailDocument.attachmentNames.getter(void (*a1)(void))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t Photo.peopleContactIdentifiers.getter()
{
  return EmailDocument.attachmentTypes.getter((void (*)(void))type metadata accessor for Photo);
}

uint64_t EmailDocument.attachmentTypes.getter(void (*a1)(void))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t Photo.peoplePersonIdentifiers.getter()
{
  return EmailDocument.attachmentPaths.getter();
}

uint64_t Photo.extractedEventsLLMConsumableDescription.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Photo.extractedEventsLLMConsumableDescription.setter()
{
  uint64_t v3 = OUTLINED_FUNCTION_20_2();
  type metadata accessor for Photo(v3);
  uint64_t result = OUTLINED_FUNCTION_11_30();
  *unint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Photo.extractedEventsLLMConsumableDescription.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Photo.partialExtractedAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Photo(0);
  return outlined init with copy of SearchResultItem?(v1 + *(int *)(v3 + 68), a1, &demangling cache variable for type metadata for PartialExtractedAttributes?);
}

uint64_t Photo.partialExtractedAttributes.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Photo(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 68), &demangling cache variable for type metadata for PartialExtractedAttributes?);
}

uint64_t (*Photo.partialExtractedAttributes.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Photo.preExtractedCard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Photo(0);
  return outlined init with copy of SearchResultItem?(v1 + *(int *)(v3 + 72), a1, &demangling cache variable for type metadata for PreExtractedCard?);
}

uint64_t Photo.preExtractedCard.setter(uint64_t a1)
{
  type metadata accessor for Photo(0);
  OUTLINED_FUNCTION_193_3();
  return outlined assign with take of SearchResultItem?(a1, v2, &demangling cache variable for type metadata for PreExtractedCard?);
}

uint64_t (*Photo.preExtractedCard.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Photo.preExtractedContact.getter()
{
  return MobileSMSDocument.partialExtractedAttributes.getter();
}

uint64_t Photo.preExtractedContact.setter()
{
  return MobileSMSDocument.partialExtractedAttributes.setter();
}

uint64_t (*Photo.preExtractedContact.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Photo.preExtractedSharedLink.getter()
{
  return MobileSMSDocument.preExtractedCard.getter();
}

uint64_t Photo.preExtractedSharedLink.setter()
{
  return MobileSMSDocument.preExtractedCard.setter();
}

uint64_t (*Photo.preExtractedSharedLink.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void *Photo.preExtractedBreadcrumb.getter()
{
  uint64_t v1 = type metadata accessor for Photo(0);
  uint64_t v2 = outlined init with take of URL?(v0 + *(int *)(v1 + 84), (uint64_t)v11, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
  OUTLINED_FUNCTION_166_5(v2, v3, v4, v5, v6, v7, v8, v9, v11[0]);
  return outlined release of PreExtractedBreadcrumb?((uint64_t)v11);
}

uint64_t Photo.preExtractedBreadcrumb.setter(uint64_t a1)
{
  outlined init with take of URL?(a1, (uint64_t)v11, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
  uint64_t v1 = type metadata accessor for Photo(0);
  OUTLINED_FUNCTION_108_8(*(int *)(v1 + 84), v11[0], v11[1], v11[2], v11[3], v11[4], v11[5], v11[6], v11[7], v11[8], v11[9], v11[10], v11[11], v11[12], v11[13], v11[14], v11[15], v11[16], v11[17],
    v12[0]);
  uint64_t v2 = outlined release of PreExtractedBreadcrumb?((uint64_t)v12);
  return OUTLINED_FUNCTION_165_4((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v11[0]);
}

uint64_t (*Photo.preExtractedBreadcrumb.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Photo.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000258684AC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000258684AE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F73616573 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x8000000258684B00 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v7 = a1 == 0x74657070696E73 && a2 == 0xE700000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6972745372636FLL && a2 == 0xE900000000000067;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 1702125924 && a2 == 0xE400000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            BOOL v10 = a1 == 0x7373656E69737562 && a2 == 0xED000073656D614ELL;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              BOOL v11 = a1 == 0x614E656C706F6570 && a2 == 0xEB0000000073656DLL;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000018 && a2 == 0x8000000258684B20 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x8000000258684B40 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else if (a1 == 0xD000000000000027 && a2 == 0x8000000258684970 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002586849A0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x80000002586849C0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 14;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x80000002586849E0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 15;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x8000000258684A00 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 16;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x8000000258684A20)
              {
                swift_bridgeObjectRelease();
                return 17;
              }
              else
              {
                char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 17;
                }
                else {
                  return 18;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t Photo.CodingKeys.init(intValue:)()
{
  return 18;
}

unint64_t Photo.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
    case 2:
    case 14:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6E6F73616573;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0x74657070696E73;
      break;
    case 6:
      unint64_t result = 0x6E6972745372636FLL;
      break;
    case 7:
      unint64_t result = 1702125924;
      break;
    case 8:
      unint64_t result = 0x7373656E69737562;
      break;
    case 9:
      unint64_t result = 0x614E656C706F6570;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0xD000000000000027;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0xD000000000000016;
      break;
    case 17:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance Photo.CodingKeys()
{
  return Photo.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Photo.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Photo.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance Photo.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = Photo.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Photo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Photo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Photo.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_163_5();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Photo.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_64_13();
  lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  OUTLINED_FUNCTION_96_12();
  OUTLINED_FUNCTION_61_15();
  if (!v0)
  {
    OUTLINED_FUNCTION_3_44(1);
    v7[0] = v1[4];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_9_25();
    OUTLINED_FUNCTION_154_5(v1[5]);
    OUTLINED_FUNCTION_9_25();
    OUTLINED_FUNCTION_153_5(v1[6]);
    OUTLINED_FUNCTION_9_25();
    OUTLINED_FUNCTION_3_44(5);
    OUTLINED_FUNCTION_3_44(6);
    BOOL v6 = (int *)type metadata accessor for Photo(0);
    OUTLINED_FUNCTION_150_4(v6[11]);
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_36_25();
    OUTLINED_FUNCTION_90_14();
    OUTLINED_FUNCTION_9_25();
    v7[0] = *(void *)((char *)v1 + v6[13]);
    OUTLINED_FUNCTION_9_25();
    v7[0] = *(void *)((char *)v1 + v6[14]);
    OUTLINED_FUNCTION_197_4(10);
    OUTLINED_FUNCTION_37_24();
    v7[0] = *(void *)((char *)v1 + v6[15]);
    OUTLINED_FUNCTION_197_4(11);
    OUTLINED_FUNCTION_37_24();
    OUTLINED_FUNCTION_192_3(v6[16]);
    OUTLINED_FUNCTION_3_44(12);
    LOBYTE(v7[0]) = 13;
    type metadata accessor for PartialExtractedAttributes(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PartialExtractedAttributes and conformance PartialExtractedAttributes);
    OUTLINED_FUNCTION_4_34();
    LOBYTE(v7[0]) = 14;
    type metadata accessor for PreExtractedCard(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedCard and conformance PreExtractedCard);
    OUTLINED_FUNCTION_4_34();
    uint64_t v3 = OUTLINED_FUNCTION_115_8();
    type metadata accessor for PreExtractedContact(v3);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedContact and conformance PreExtractedContact);
    OUTLINED_FUNCTION_4_34();
    OUTLINED_FUNCTION_188_3();
    char v8 = v4;
    type metadata accessor for PreExtractedSharedLink(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedSharedLink and conformance PreExtractedSharedLink);
    OUTLINED_FUNCTION_8_20();
    outlined init with take of URL?((uint64_t)v1 + v6[21], (uint64_t)v7, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    OUTLINED_FUNCTION_152_5();
    lazy protocol witness table accessor for type PreExtractedBreadcrumb and conformance PreExtractedBreadcrumb();
    OUTLINED_FUNCTION_36_25();
  }
  OUTLINED_FUNCTION_26_2();
  v5();
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void Photo.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  char v4 = v3;
  uint64_t v59 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_43_23(v8, v54);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_60_13(v11, v55);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_121_8(v14, v56);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v16 = OUTLINED_FUNCTION_81(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_184_0();
  uint64_t v62 = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v19 = OUTLINED_FUNCTION_81(v18);
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_122_9(v20, v57);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Photo.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = OUTLINED_FUNCTION_29_11();
  uint64_t v23 = (int *)type metadata accessor for Photo(v22);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_14_10();
  uint64_t v26 = (uint64_t *)((char *)v2 + *(int *)(v25 + 64));
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v68 = v26;
  uint64_t v27 = OUTLINED_FUNCTION_182_4();
  type metadata accessor for PartialExtractedAttributes(v27);
  uint64_t v67 = v0;
  uint64_t v28 = OUTLINED_FUNCTION_47_19();
  __swift_storeEnumTagSinglePayload(v28, v29, v30, v31);
  uint64_t v32 = OUTLINED_FUNCTION_182_4();
  uint64_t v33 = type metadata accessor for PreExtractedCard(v32);
  uint64_t v34 = OUTLINED_FUNCTION_85_15();
  __swift_storeEnumTagSinglePayload(v34, v35, v36, v33);
  uint64_t v37 = OUTLINED_FUNCTION_182_4();
  uint64_t v38 = type metadata accessor for PreExtractedContact(v37);
  uint64_t v39 = OUTLINED_FUNCTION_84_12();
  __swift_storeEnumTagSinglePayload(v39, v40, v41, v38);
  uint64_t v42 = OUTLINED_FUNCTION_182_4();
  uint64_t v43 = type metadata accessor for PreExtractedSharedLink(v42);
  uint64_t v64 = v0;
  uint64_t v44 = OUTLINED_FUNCTION_47_19();
  __swift_storeEnumTagSinglePayload(v44, v45, v46, v43);
  uint64_t v47 = (uint64_t)v2 + v23[21];
  _s10OmniSearch0B7ContextVSgWOi0_(v72);
  outlined init with take of URL?((uint64_t)v72, v47, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    swift_bridgeObjectRelease();
    outlined destroy of PQAVerificationModelProtocol?(v67, &demangling cache variable for type metadata for PartialExtractedAttributes?);
    outlined destroy of PQAVerificationModelProtocol?(v66, &demangling cache variable for type metadata for PreExtractedCard?);
    outlined destroy of PQAVerificationModelProtocol?(v65, &demangling cache variable for type metadata for PreExtractedContact?);
    outlined destroy of PQAVerificationModelProtocol?(v64, &demangling cache variable for type metadata for PreExtractedSharedLink?);
    outlined init with take of URL?(v47, (uint64_t)v71, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined release of PreExtractedBreadcrumb?((uint64_t)v71);
  }
  else
  {
    *uint64_t v2 = KeyedDecodingContainer.decode(_:forKey:)();
    v2[1] = v48;
    LOBYTE(v71[0]) = 1;
    v2[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v2[3] = v49;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    v70[0] = 2;
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v2[4] = v71[0];
    OUTLINED_FUNCTION_82_13(3);
    v2[5] = v71[0];
    OUTLINED_FUNCTION_82_13(4);
    v2[6] = v71[0];
    v2[7] = OUTLINED_FUNCTION_219_2(5);
    v2[8] = v50;
    v2[9] = OUTLINED_FUNCTION_219_2(6);
    v2[10] = v51;
    type metadata accessor for Date();
    LOBYTE(v71[0]) = 7;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_148_3();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of URL?(v63, (uint64_t)v2 + v23[11], &demangling cache variable for type metadata for Date?);
    v70[0] = 8;
    OUTLINED_FUNCTION_147_4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(uint64_t *)((char *)v2 + v23[12]) = v71[0];
    v70[0] = 9;
    OUTLINED_FUNCTION_147_4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(uint64_t *)((char *)v2 + v23[13]) = v71[0];
    OUTLINED_FUNCTION_81_11(10);
    *(uint64_t *)((char *)v2 + v23[14]) = v71[0];
    OUTLINED_FUNCTION_81_11(11);
    *(uint64_t *)((char *)v2 + v23[15]) = v71[0];
    *uint64_t v68 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v68[1] = v52;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PartialExtractedAttributes and conformance PartialExtractedAttributes);
    OUTLINED_FUNCTION_148_3();
    OUTLINED_FUNCTION_67_16();
    outlined assign with take of SearchResultItem?(v62, v67, &demangling cache variable for type metadata for PartialExtractedAttributes?);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedCard and conformance PreExtractedCard);
    OUTLINED_FUNCTION_148_3();
    OUTLINED_FUNCTION_67_16();
    outlined assign with take of SearchResultItem?(v61, v66, &demangling cache variable for type metadata for PreExtractedCard?);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedContact and conformance PreExtractedContact);
    OUTLINED_FUNCTION_148_3();
    OUTLINED_FUNCTION_67_16();
    outlined assign with take of SearchResultItem?(v60, v65, &demangling cache variable for type metadata for PreExtractedContact?);
    LOBYTE(v71[0]) = 16;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PreExtractedSharedLink and conformance PreExtractedSharedLink);
    OUTLINED_FUNCTION_148_3();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined assign with take of SearchResultItem?(v58, v64, &demangling cache variable for type metadata for PreExtractedSharedLink?);
    lazy protocol witness table accessor for type PreExtractedBreadcrumb and conformance PreExtractedBreadcrumb();
    OUTLINED_FUNCTION_67_16();
    OUTLINED_FUNCTION_30();
    v53();
    outlined init with take of URL?((uint64_t)v71, (uint64_t)v69, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined init with take of URL?(v47, (uint64_t)v70, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined release of PreExtractedBreadcrumb?((uint64_t)v70);
    outlined init with take of URL?((uint64_t)v69, v47, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
    outlined init with copy of EmailDocument((uint64_t)v2, v59, (void (*)(void))type metadata accessor for Photo);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    outlined destroy of EmailDocument((uint64_t)v2, (void (*)(void))type metadata accessor for Photo);
  }
  OUTLINED_FUNCTION_120_0();
}

uint64_t (*protocol witness for PreExtractedSourceDocument.extractedEventsLLMConsumableDescription.modify in conformance Photo())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for PreExtractedSourceDocument.partialExtractedAttributes.modify in conformance Photo())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void protocol witness for Decodable.init(from:) in conformance Photo()
{
}

void protocol witness for Encodable.encode(to:) in conformance Photo()
{
}

uint64_t NoteDocument.folderName.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t NoteDocument.creationDate.getter()
{
  return CalendarEvent.endDate.getter();
}

uint64_t NoteDocument.lastUsedDate.getter()
{
  return NoteDocument.lastUsedDate.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_127_6();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_62_14(*(int *)(v2 + 36));
}

uint64_t NoteDocument.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x53746E65746E6F63 && a2 == 0xEE0074657070696ELL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x614E7265646C6F66 && a2 == 0xEA0000000000656DLL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t NoteDocument.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x53746E65746E6F63;
      break;
    case 3:
      uint64_t result = 0x614E7265646C6F66;
      break;
    case 4:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 5:
      uint64_t result = 0x646573557473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance NoteDocument.CodingKeys()
{
  return NoteDocument.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance NoteDocument.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = NoteDocument.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance NoteDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance NoteDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void NoteDocument.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<NoteDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for NoteDocument(0);
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_8_16();
    OUTLINED_FUNCTION_8_16();
  }
  OUTLINED_FUNCTION_26_2();
  v2();
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void NoteDocument.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  unint64_t v2 = v1;
  uint64_t v39 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<NoteDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = OUTLINED_FUNCTION_29_11();
  uint64_t v41 = type metadata accessor for NoteDocument(v14);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_184_0();
  uint64_t v42 = v16;
  OUTLINED_FUNCTION_110_11(v2);
  lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  OUTLINED_FUNCTION_141_4();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    uint64_t v37 = v8;
    uint64_t v38 = v10;
    uint64_t v17 = v12;
    uint64_t v18 = v39;
    OUTLINED_FUNCTION_169_3();
    uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v20 = v42;
    *uint64_t v42 = v19;
    v20[1] = v21;
    OUTLINED_FUNCTION_94_15();
    uint64_t v22 = OUTLINED_FUNCTION_111_11();
    OUTLINED_FUNCTION_93_11(v22, v23);
    v20[4] = OUTLINED_FUNCTION_111_11();
    v20[5] = v24;
    OUTLINED_FUNCTION_155_4();
    uint64_t v25 = OUTLINED_FUNCTION_111_11();
    v36[3] = v17;
    v20[6] = v25;
    v20[7] = v26;
    uint64_t v27 = type metadata accessor for Date();
    unint64_t v28 = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    uint64_t v29 = (uint64_t)v38;
    v36[1] = v28;
    v36[2] = v27;
    OUTLINED_FUNCTION_180_4();
    uint64_t v30 = v20;
    uint64_t v31 = v41;
    outlined init with take of URL?(v29, (uint64_t)v30 + *(int *)(v41 + 32), &demangling cache variable for type metadata for Date?);
    uint64_t v32 = (uint64_t)v37;
    OUTLINED_FUNCTION_180_4();
    OUTLINED_FUNCTION_111_0();
    v33();
    uint64_t v34 = *(int *)(v31 + 36);
    uint64_t v35 = (uint64_t)v42;
    outlined init with take of URL?(v32, (uint64_t)v42 + v34, &demangling cache variable for type metadata for Date?);
    outlined init with copy of EmailDocument(v35, v18, (void (*)(void))type metadata accessor for NoteDocument);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    outlined destroy of EmailDocument(v35, (void (*)(void))type metadata accessor for NoteDocument);
  }
  OUTLINED_FUNCTION_100_13();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance NoteDocument()
{
}

void protocol witness for Encodable.encode(to:) in conformance NoteDocument()
{
}

uint64_t Reminder.creationDate.getter()
{
  return CalendarEvent.startDate.getter();
}

uint64_t Reminder.dueDate.getter()
{
  return CalendarEvent.endDate.getter();
}

uint64_t Reminder.dueDateIsAllDay.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Reminder(0) + 36));
}

uint64_t Reminder.namedLocation.getter()
{
  return Reminder.namedLocation.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);

  uint64_t v0 = OUTLINED_FUNCTION_78_14();
  v1(v0);
  OUTLINED_FUNCTION_75_2();
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Reminder.physicalAddress.getter()
{
  return Reminder.physicalAddress.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);

  uint64_t v0 = OUTLINED_FUNCTION_78_14();
  v1(v0);
  OUTLINED_FUNCTION_75_2();
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Reminder.url.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_27_7();
  uint64_t v3 = type metadata accessor for Reminder(v2);
  return outlined init with copy of SearchResultItem?(v1 + *(int *)(v3 + 48), v0, &demangling cache variable for type metadata for URL?);
}

uint64_t Reminder.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1702129518 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x65746144657564 && a2 == 0xE700000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x4965746144657564 && a2 == 0xEF7961446C6C4173;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x636F4C64656D616ELL && a2 == 0xED00006E6F697461;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6C61636973796870 && a2 == 0xEF73736572646441;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 7107189 && a2 == 0xE300000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v14) {
                    return 8;
                  }
                  else {
                    return 9;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t Reminder.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 1702129518;
      break;
    case 3:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 4:
      uint64_t result = 0x65746144657564;
      break;
    case 5:
      uint64_t result = 0x4965746144657564;
      break;
    case 6:
      uint64_t result = 0x636F4C64656D616ELL;
      break;
    case 7:
      uint64_t result = 0x6C61636973796870;
      break;
    case 8:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Reminder.CodingKeys()
{
  return Reminder.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Reminder.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Reminder.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Reminder.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Reminder.CodingKeys and conformance Reminder.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Reminder.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Reminder.CodingKeys and conformance Reminder.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Reminder.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Reminder.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type Reminder.CodingKeys and conformance Reminder.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for Reminder(0);
    OUTLINED_FUNCTION_57_16();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_8_16();
    OUTLINED_FUNCTION_8_16();
    KeyedEncodingContainer.encode(_:forKey:)();
    OUTLINED_FUNCTION_204_3();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_26_2();
  v2();
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void Reminder.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v5 = v4;
  uint64_t v37 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_21_7();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_36_21();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Reminder.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v38 = v15;
  uint64_t v39 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = OUTLINED_FUNCTION_22_15();
  uint64_t v42 = type metadata accessor for Reminder(v16);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_123_9();
  uint64_t v18 = v5[3];
  uint64_t v40 = v5;
  __swift_project_boxed_opaque_existential_1(v5, v18);
  lazy protocol witness table accessor for type Reminder.CodingKeys and conformance Reminder.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  }
  else
  {
    uint64_t v19 = (uint64_t)v13;
    uint64_t v41 = v3;
    OUTLINED_FUNCTION_169_3();
    uint64_t *v0 = KeyedDecodingContainer.decode(_:forKey:)();
    v0[1] = v20;
    OUTLINED_FUNCTION_94_15();
    uint64_t v21 = OUTLINED_FUNCTION_209_3();
    uint64_t v22 = (uint64_t)v40;
    OUTLINED_FUNCTION_93_11(v21, v23);
    uint64_t v24 = OUTLINED_FUNCTION_209_3();
    uint64_t v26 = OUTLINED_FUNCTION_189_3(v24, v25);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_190_3();
    uint64_t v36 = v26;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of URL?(v19, (uint64_t)v0 + *(int *)(v42 + 28), &demangling cache variable for type metadata for Date?);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v27 = (int *)v42;
    outlined init with take of URL?(v2, (uint64_t)v0 + *(int *)(v42 + 32), &demangling cache variable for type metadata for Date?);
    *((unsigned char *)v0 + v27[9]) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    uint64_t v28 = OUTLINED_FUNCTION_209_3();
    OUTLINED_FUNCTION_88_10(v28, v29, v27[10]);
    uint64_t v30 = OUTLINED_FUNCTION_209_3();
    uint64_t v31 = (uint64_t *)((char *)v0 + v27[11]);
    *uint64_t v31 = v30;
    v31[1] = v32;
    type metadata accessor for URL();
    char v43 = 8;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    uint64_t v33 = v41;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v34 = OUTLINED_FUNCTION_17_26();
    v35(v34);
    outlined init with take of URL?(v33, (uint64_t)v0 + v27[12], &demangling cache variable for type metadata for URL?);
    outlined init with copy of EmailDocument((uint64_t)v0, v37, (void (*)(void))type metadata accessor for Reminder);
    __swift_destroy_boxed_opaque_existential_1Tm(v22);
    outlined destroy of EmailDocument((uint64_t)v0, (void (*)(void))type metadata accessor for Reminder);
  }
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance Reminder()
{
}

void protocol witness for Encodable.encode(to:) in conformance Reminder()
{
}

uint64_t PhoneHistory.authors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneHistory.recipients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneHistory.callDate.getter()
{
  return MobileSMSDocument.date.getter();
}

uint64_t PhoneHistory.callType.getter()
{
  return Reminder.physicalAddress.getter();
}

uint64_t PhoneHistory.description.getter()
{
  return CalendarEvent.notes.getter();
}

uint64_t PhoneHistory.url.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_27_7();
  uint64_t v3 = type metadata accessor for PhoneHistory(v2);
  return outlined init with copy of SearchResultItem?(v1 + *(int *)(v3 + 52), v0, &demangling cache variable for type metadata for URL?);
}

uint64_t PhoneHistory.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x73726F68747561 && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E65697069636572 && a2 == 0xEA00000000007374;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6D754E656E6F6870 && a2 == 0xEC00000073726562;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x746174536C6C6163 && a2 == 0xEA00000000007375;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x657461446C6C6163 && a2 == 0xE800000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x657079546C6C6163 && a2 == 0xE800000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else if (a1 == 7107189 && a2 == 0xE300000000000000)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    if (v15) {
                      return 9;
                    }
                    else {
                      return 10;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t PhoneHistory.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x73726F68747561;
      break;
    case 2:
      uint64_t result = 0x6E65697069636572;
      break;
    case 3:
      uint64_t result = 0x7069636974726170;
      break;
    case 4:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 5:
      uint64_t result = 0x746174536C6C6163;
      break;
    case 6:
      uint64_t result = 0x657461446C6C6163;
      break;
    case 7:
      uint64_t result = 0x657079546C6C6163;
      break;
    case 8:
      uint64_t result = 0x7470697263736564;
      break;
    case 9:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneHistory.CodingKeys()
{
  return PhoneHistory.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneHistory.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = PhoneHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneHistory.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneHistory.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void PhoneHistory.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneHistory.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_4_29();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for PhoneHistory(0);
    OUTLINED_FUNCTION_118_9();
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_98_10();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void PhoneHistory.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_39();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v20 = OUTLINED_FUNCTION_81(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_17_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneHistory.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = OUTLINED_FUNCTION_66_4();
  uint64_t v34 = (int *)type metadata accessor for PhoneHistory(v22);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_184_0();
  uint64_t v33 = v24;
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  lazy protocol witness table accessor for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    LOBYTE(a10) = 0;
    *uint64_t v33 = KeyedDecodingContainer.decode(_:forKey:)();
    v33[1] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_29_24();
    v33[2] = a10;
    OUTLINED_FUNCTION_247_0();
    OUTLINED_FUNCTION_29_24();
    v33[3] = a10;
    OUTLINED_FUNCTION_199_2();
    OUTLINED_FUNCTION_29_24();
    v33[4] = a10;
    OUTLINED_FUNCTION_198_2();
    OUTLINED_FUNCTION_29_24();
    v33[5] = a10;
    v33[6] = OUTLINED_FUNCTION_71_15(5);
    v33[7] = v26;
    type metadata accessor for Date();
    OUTLINED_FUNCTION_118_9();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_139_4();
    outlined init with take of URL?(v10, (uint64_t)v33 + v34[10], &demangling cache variable for type metadata for Date?);
    uint64_t v27 = OUTLINED_FUNCTION_71_15(7);
    OUTLINED_FUNCTION_88_10(v27, v28, v34[11]);
    uint64_t v29 = OUTLINED_FUNCTION_71_15(8);
    uint64_t v30 = (uint64_t *)((char *)v33 + v34[12]);
    uint64_t *v30 = v29;
    v30[1] = v31;
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_139_4();
    OUTLINED_FUNCTION_26_2();
    v32();
    outlined init with take of URL?(v12, (uint64_t)v33 + v34[13], &demangling cache variable for type metadata for URL?);
    outlined init with copy of EmailDocument((uint64_t)v33, v16, (void (*)(void))type metadata accessor for PhoneHistory);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    outlined destroy of EmailDocument((uint64_t)v33, (void (*)(void))type metadata accessor for PhoneHistory);
  }
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance PhoneHistory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  PhoneHistory.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance PhoneHistory()
{
}

uint64_t VoicemailTranscript.date.getter()
{
  return CalendarEvent.startDate.getter();
}

uint64_t VoicemailTranscript.url.getter()
{
  return CalendarEvent.endDate.getter();
}

uint64_t VoicemailTranscript.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x5479616C70736964 && a2 == 0xEC000000656C7469;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1702125924 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 7107189 && a2 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t VoicemailTranscript.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x5479616C70736964;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 1702125924;
      break;
    case 4:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance VoicemailTranscript.CodingKeys()
{
  return VoicemailTranscript.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance VoicemailTranscript.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = VoicemailTranscript.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VoicemailTranscript.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance VoicemailTranscript.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void VoicemailTranscript.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<VoicemailTranscript.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for VoicemailTranscript(0);
    OUTLINED_FUNCTION_57_16();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_142_5();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void VoicemailTranscript.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v5 = v4;
  uint64_t v19 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_97_1();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_17_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<VoicemailTranscript.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_22_15();
  uint64_t v13 = type metadata accessor for VoicemailTranscript(v12);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_110_11(v5);
  lazy protocol witness table accessor for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  }
  else
  {
    OUTLINED_FUNCTION_169_3();
    *unint64_t v2 = KeyedDecodingContainer.decode(_:forKey:)();
    v2[1] = v15;
    OUTLINED_FUNCTION_94_15();
    v2[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v2[3] = v16;
    v2[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v2[5] = v17;
    type metadata accessor for Date();
    OUTLINED_FUNCTION_136_4();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_190_3();
    OUTLINED_FUNCTION_137_2();
    outlined init with take of URL?(v0, (uint64_t)v2 + *(int *)(v13 + 28), &demangling cache variable for type metadata for Date?);
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_137_2();
    OUTLINED_FUNCTION_111_0();
    v18();
    outlined init with take of URL?(v3, (uint64_t)v2 + *(int *)(v13 + 32), &demangling cache variable for type metadata for URL?);
    outlined init with copy of EmailDocument((uint64_t)v2, v19, (void (*)(void))type metadata accessor for VoicemailTranscript);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    outlined destroy of EmailDocument((uint64_t)v2, (void (*)(void))type metadata accessor for VoicemailTranscript);
  }
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance VoicemailTranscript()
{
}

void protocol witness for Encodable.encode(to:) in conformance VoicemailTranscript()
{
}

uint64_t JournalEntry.url.getter()
{
  return CalendarEvent.startDate.getter();
}

uint64_t JournalEntry.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x5479616C70736964 && a2 == 0xEC000000656C7469;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 7107189 && a2 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t JournalEntry.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x5479616C70736964;
      break;
    case 2:
      uint64_t result = 1954047348;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance JournalEntry.CodingKeys()
{
  return JournalEntry.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance JournalEntry.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = JournalEntry.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance JournalEntry.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance JournalEntry.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void JournalEntry.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<JournalEntry.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for JournalEntry(0);
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void JournalEntry.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v4 = v3;
  uint64_t v17 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_12();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<JournalEntry.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_66_4();
  uint64_t v10 = type metadata accessor for JournalEntry(v9);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_110_11(v4);
  lazy protocol witness table accessor for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    *unint64_t v2 = OUTLINED_FUNCTION_170_5();
    v2[1] = v12;
    v2[2] = OUTLINED_FUNCTION_4_30();
    v2[3] = v13;
    v2[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v2[5] = v14;
    type metadata accessor for URL();
    OUTLINED_FUNCTION_136_4();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_190_3();
    OUTLINED_FUNCTION_69_15();
    uint64_t v15 = OUTLINED_FUNCTION_1_28();
    v16(v15);
    outlined init with take of URL?(v1, (uint64_t)v2 + *(int *)(v10 + 28), &demangling cache variable for type metadata for URL?);
    outlined init with copy of EmailDocument((uint64_t)v2, v17, (void (*)(void))type metadata accessor for JournalEntry);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    outlined destroy of EmailDocument((uint64_t)v2, (void (*)(void))type metadata accessor for JournalEntry);
  }
  OUTLINED_FUNCTION_100_13();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance JournalEntry()
{
}

void protocol witness for Encodable.encode(to:) in conformance JournalEntry()
{
}

uint64_t VoiceMemo.creationDate.getter()
{
  return VoiceMemo.creationDate.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_127_6();
  unint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_62_14(*(int *)(v2 + 24));
}

uint64_t VoiceMemo.durationInSeconds.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VoiceMemo(0) + 28));
}

uint64_t VoiceMemo.url.getter()
{
  return CalendarEvent.endDate.getter();
}

uint64_t VoiceMemo.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000258684560 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 7107189 && a2 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t VoiceMemo.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance VoiceMemo.CodingKeys()
{
  return VoiceMemo.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance VoiceMemo.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = VoiceMemo.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VoiceMemo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance VoiceMemo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void VoiceMemo.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<VoiceMemo.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for VoiceMemo(0);
    OUTLINED_FUNCTION_113_13();
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_24_29();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_142_5();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void VoiceMemo.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v4 = v3;
  uint64_t v22 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v23 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<VoiceMemo.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_14_8();
  uint64_t v13 = (int *)type metadata accessor for VoiceMemo(v12);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  lazy protocol witness table accessor for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    OUTLINED_FUNCTION_169_3();
    *uint64_t v1 = KeyedDecodingContainer.decode(_:forKey:)();
    v1[1] = v15;
    OUTLINED_FUNCTION_94_15();
    v1[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v1[3] = v16;
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_200_2();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of URL?(v2, (uint64_t)v1 + v13[6], &demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_155_4();
    uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v18 = (char *)v1 + v13[7];
    *(void *)uint64_t v18 = v17;
    v18[8] = v19 & 1;
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_200_2();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v20 = OUTLINED_FUNCTION_58_15();
    v21(v20);
    outlined init with take of URL?(v23, (uint64_t)v1 + v13[8], &demangling cache variable for type metadata for URL?);
    outlined init with copy of EmailDocument((uint64_t)v1, v22, (void (*)(void))type metadata accessor for VoiceMemo);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    outlined destroy of EmailDocument((uint64_t)v1, (void (*)(void))type metadata accessor for VoiceMemo);
  }
  OUTLINED_FUNCTION_100_13();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance VoiceMemo()
{
}

void protocol witness for Encodable.encode(to:) in conformance VoiceMemo()
{
}

uint64_t Safari.websiteUrl.getter()
{
  return VoiceMemo.creationDate.getter();
}

uint64_t Safari.body.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Safari.contentType.getter()
{
  return Safari.contentType.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);

  uint64_t v0 = OUTLINED_FUNCTION_78_14();
  v1(v0);
  OUTLINED_FUNCTION_75_2();
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Safari.url.getter()
{
  return NoteDocument.lastUsedDate.getter();
}

uint64_t Safari.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x5465746973626577 && a2 == 0xEC000000656C7469;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x5565746973626577 && a2 == 0xEA00000000006C72;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 2036625250 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 7107189 && a2 == 0xE300000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t Safari.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x5465746973626577;
      break;
    case 2:
      uint64_t result = 0x5565746973626577;
      break;
    case 3:
      uint64_t result = 2036625250;
      break;
    case 4:
      uint64_t result = 0x54746E65746E6F63;
      break;
    case 5:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Safari.CodingKeys()
{
  return Safari.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Safari.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Safari.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Safari.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Safari.CodingKeys and conformance Safari.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Safari.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Safari.CodingKeys and conformance Safari.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Safari.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Safari.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type Safari.CodingKeys and conformance Safari.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for Safari(0);
    OUTLINED_FUNCTION_113_13();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_8_16();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_8_16();
  }
  OUTLINED_FUNCTION_26_2();
  v2();
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void Safari.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  unint64_t v2 = v1;
  uint64_t v35 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v32 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Safari.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_29_11();
  uint64_t v36 = type metadata accessor for Safari(v12);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_184_0();
  uint64_t v37 = v14;
  uint64_t v38 = v2;
  OUTLINED_FUNCTION_110_11(v2);
  lazy protocol witness table accessor for type Safari.CodingKeys and conformance Safari.CodingKeys();
  OUTLINED_FUNCTION_141_4();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  }
  else
  {
    uint64_t v15 = (uint64_t)v10;
    uint64_t v34 = v8;
    OUTLINED_FUNCTION_169_3();
    uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v17 = v37;
    *uint64_t v37 = v16;
    v17[1] = v18;
    v17[2] = OUTLINED_FUNCTION_111_11();
    v17[3] = v19;
    uint64_t v20 = type metadata accessor for URL();
    unint64_t v21 = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    uint64_t v33 = v15;
    OUTLINED_FUNCTION_180_4();
    v32[0] = v21;
    v32[1] = v20;
    uint64_t v22 = (uint64_t)v17;
    uint64_t v23 = (int *)v36;
    outlined init with take of URL?(v33, v22 + *(int *)(v36 + 24), &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_155_4();
    uint64_t v24 = OUTLINED_FUNCTION_111_11();
    uint64_t v25 = (uint64_t *)(v22 + v23[7]);
    *uint64_t v25 = v24;
    v25[1] = v26;
    uint64_t v27 = OUTLINED_FUNCTION_111_11();
    uint64_t v28 = (uint64_t *)(v22 + v23[8]);
    *uint64_t v28 = v27;
    v28[1] = v29;
    uint64_t v30 = (uint64_t)v34;
    OUTLINED_FUNCTION_180_4();
    OUTLINED_FUNCTION_111_0();
    v31();
    outlined init with take of URL?(v30, v22 + v23[9], &demangling cache variable for type metadata for URL?);
    outlined init with copy of EmailDocument(v22, v35, (void (*)(void))type metadata accessor for Safari);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    outlined destroy of EmailDocument(v22, (void (*)(void))type metadata accessor for Safari);
  }
  OUTLINED_FUNCTION_100_13();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance Safari()
{
}

void protocol witness for Encodable.encode(to:) in conformance Safari()
{
}

uint64_t FileDocument.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t FileDocument.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FileDocument.id.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

id FileDocument.item.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t FileDocument.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return FileDocument.contentUrl.getter((SEL *)&selRef_contentCreationDate, MEMORY[0x263F07480], MEMORY[0x263F07490], a1);
}

uint64_t FileDocument.lastUsedDate.getter@<X0>(uint64_t a1@<X8>)
{
  return FileDocument.contentUrl.getter((SEL *)&selRef_lastUsedDate, MEMORY[0x263F07480], MEMORY[0x263F07490], a1);
}

uint64_t FileDocument.contentUrl.getter@<X0>(SEL *a1@<X0>, void (*a2)(id)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  id v9 = objc_msgSend(*(id *)(v4 + 16), sel_attributeSet);
  id v10 = [v9 *a1];

  if (v10)
  {
    a2(v10);

    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 1;
  }
  uint64_t v12 = a3(0);
  return __swift_storeEnumTagSinglePayload(a4, v11, 1, v12);
}

void FileDocument.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<FileDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_13_12();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  lazy protocol witness table accessor for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    LOBYTE(v15) = 0;
    uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v8 = v7;
    lazy protocol witness table accessor for type Data and conformance Data();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    if (v16 >> 60 == 15
      || (type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver), type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem), uint64_t v12 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(), outlined consume of Data?(v15, v16), !v12))
    {
      swift_bridgeObjectRelease();
      lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
      swift_allocError();
      *(void *)uint64_t v9 = 0xD000000000000032;
      *(void *)(v9 + 8) = 0x80000002586848F0;
      *(unsigned char *)(v9 + 16) = 1;
      swift_willThrow();
      uint64_t v10 = OUTLINED_FUNCTION_86_12();
      v11(v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    }
    else
    {
      OUTLINED_FUNCTION_26_2();
      v13();
      *uint64_t v4 = v6;
      v4[1] = v8;
      v4[2] = (uint64_t)v12;
      id v14 = v12;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_120_0();
}

void FileDocument.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v3 = v2;
  v14[2] = *(id *)MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<FileDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  uint64_t v13 = *(void *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v14[0] = 0;
    id v6 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v13, 1, v14);
    id v7 = v14[0];
    if (v6)
    {
      uint64_t v8 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      v14[0] = v8;
      v14[1] = v10;
      lazy protocol witness table accessor for type Data and conformance Data();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_111_0();
      v11();
      outlined consume of Data._Representation((uint64_t)v8, (unint64_t)v10);
      goto LABEL_5;
    }
    uint64_t v12 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  OUTLINED_FUNCTION_111_0();
  v5();
LABEL_5:
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

BOOL static FileDocument.CodingKeys.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void FileDocument.CodingKeys.hash(into:)(uint64_t a1, char a2)
{
}

OmniSearch::FileDocument::CodingKeys_optional __swiftcall FileDocument.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  BOOL v1 = stringValue._countAndFlagsBits == 25705 && stringValue._object == (void *)0xE200000000000000;
  if (v1
    || (object = stringValue._object,
        uint64_t countAndFlagsBits = stringValue._countAndFlagsBits,
        (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (countAndFlagsBits == 1835365481 && object == (void *)0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return (OmniSearch::FileDocument::CodingKeys_optional)1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return (OmniSearch::FileDocument::CodingKeys_optional)1;
    }
    else {
      return (OmniSearch::FileDocument::CodingKeys_optional)2;
    }
  }
}

OmniSearch::FileDocument::CodingKeys_optional __swiftcall FileDocument.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::FileDocument::CodingKeys_optional)2;
}

Swift::Int FileDocument.CodingKeys.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

uint64_t FileDocument.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t FileDocument.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 1835365481;
  }
  else {
    return 25705;
  }
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance FileDocument.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static FileDocument.CodingKeys.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance FileDocument.CodingKeys()
{
  return FileDocument.CodingKeys.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance FileDocument.CodingKeys(uint64_t a1)
{
  FileDocument.CodingKeys.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance FileDocument.CodingKeys()
{
  return FileDocument.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::FileDocument::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance FileDocument.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::FileDocument::CodingKeys_optional *a2@<X8>)
{
  result.value = FileDocument.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance FileDocument.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance FileDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance FileDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void protocol witness for Decodable.init(from:) in conformance FileDocument()
{
}

void protocol witness for Encodable.encode(to:) in conformance FileDocument()
{
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance FileDocument(uint64_t a1, uint64_t a2)
{
  return specialized static SearchItem.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void **)(a2 + 16));
}

uint64_t WalletTransaction.date.getter()
{
  return CalendarEvent.startDate.getter();
}

uint64_t WalletTransaction.city.getter()
{
  return Safari.contentType.getter();
}

uint64_t WalletTransaction.stateOrProvince.getter()
{
  return CalendarEvent.locationName.getter();
}

uint64_t WalletTransaction.country.getter()
{
  return Reminder.namedLocation.getter();
}

uint64_t WalletTransaction.amount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for WalletTransaction(0) + 44));
}

uint64_t WalletTransaction.currencyCode.getter()
{
  return CalendarEvent.notes.getter();
}

uint64_t WalletTransaction.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1702125924 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 2037672291 && a2 == 0xE400000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x50724F6574617473 && a2 == 0xEF65636E69766F72;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x7972746E756F63 && a2 == 0xE700000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v14) {
                    return 8;
                  }
                  else {
                    return 9;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t WalletTransaction.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 1702125924;
      break;
    case 4:
      uint64_t result = 2037672291;
      break;
    case 5:
      uint64_t result = 0x50724F6574617473;
      break;
    case 6:
      uint64_t result = 0x7972746E756F63;
      break;
    case 7:
      uint64_t result = 0x746E756F6D61;
      break;
    case 8:
      uint64_t result = 0x79636E6572727563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance WalletTransaction.CodingKeys()
{
  return WalletTransaction.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance WalletTransaction.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = WalletTransaction.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance WalletTransaction.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance WalletTransaction.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void WalletTransaction.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<WalletTransaction.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_4_29();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for WalletTransaction(0);
    OUTLINED_FUNCTION_185_4();
    type metadata accessor for Date();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_183_4();
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_204_3();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for NSDecimal(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type NSDecimal and conformance NSDecimal);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_98_10();
    OUTLINED_FUNCTION_2_24();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void WalletTransaction.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v4 = v3;
  uint64_t v28 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_12();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<WalletTransaction.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_66_4();
  uint64_t v29 = (int *)type metadata accessor for WalletTransaction(v9);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_123_9();
  OUTLINED_FUNCTION_64_13();
  lazy protocol witness table accessor for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v4);
  }
  else
  {
    uint64_t *v0 = KeyedDecodingContainer.decode(_:forKey:)();
    v0[1] = v11;
    v0[2] = OUTLINED_FUNCTION_42_18(1);
    v0[3] = v12;
    uint64_t v13 = OUTLINED_FUNCTION_42_18(2);
    OUTLINED_FUNCTION_189_3(v13, v14);
    LOBYTE(v30) = 3;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of URL?(v2, (uint64_t)v0 + v29[7], &demangling cache variable for type metadata for Date?);
    uint64_t v15 = OUTLINED_FUNCTION_42_18(4);
    OUTLINED_FUNCTION_88_10(v15, v16, v29[8]);
    uint64_t v17 = OUTLINED_FUNCTION_42_18(5);
    OUTLINED_FUNCTION_88_10(v17, v18, v29[9]);
    uint64_t v19 = OUTLINED_FUNCTION_42_18(6);
    uint64_t v20 = (uint64_t *)((char *)v0 + v29[10]);
    *uint64_t v20 = v19;
    v20[1] = v21;
    type metadata accessor for NSDecimal(0);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type NSDecimal and conformance NSDecimal);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v22 = (char *)v0 + v29[11];
    *(_OWORD *)uint64_t v22 = v30;
    *((_DWORD *)v22 + 4) = v31;
    v22[20] = v32;
    uint64_t v27 = OUTLINED_FUNCTION_42_18(8);
    uint64_t v24 = v23;
    OUTLINED_FUNCTION_24_0();
    v25();
    uint64_t v26 = (uint64_t *)((char *)v0 + v29[12]);
    *uint64_t v26 = v27;
    v26[1] = v24;
    outlined init with copy of EmailDocument((uint64_t)v0, v28, (void (*)(void))type metadata accessor for WalletTransaction);
    __swift_destroy_boxed_opaque_existential_1Tm(v4);
    outlined destroy of EmailDocument((uint64_t)v0, (void (*)(void))type metadata accessor for WalletTransaction);
  }
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance WalletTransaction()
{
}

void protocol witness for Encodable.encode(to:) in conformance WalletTransaction()
{
}

uint64_t WalletPass.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t WalletPass.title.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t WalletPass.description.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t WalletPass.creationDate.getter()
{
  return CalendarEvent.startDate.getter();
}

uint64_t WalletPass.creator.getter()
{
  return Safari.contentType.getter();
}

uint64_t WalletPass.extraData.getter()
{
  type metadata accessor for WalletPass(0);
  return swift_bridgeObjectRetain();
}

uint64_t WalletPass.init(id:title:description:creationDate:creator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_106_13();
  *uint64_t v15 = v13;
  v15[1] = v14;
  v15[2] = v16;
  v15[3] = v17;
  v15[4] = v18;
  v15[5] = v19;
  type metadata accessor for WalletPass(0);
  OUTLINED_FUNCTION_101_11();
  uint64_t result = outlined init with take of URL?(v10, v20, &demangling cache variable for type metadata for Date?);
  uint64_t v22 = (void *)(v11 + *(int *)(v12 + 32));
  *uint64_t v22 = v9;
  v22[1] = a9;
  *(void *)(v11 + *(int *)(v12 + 36)) = 0;
  return result;
}

uint64_t WalletPass.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x726F7461657263 && a2 == 0xE700000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x7461446172747865 && a2 == 0xE900000000000061)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t WalletPass.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 4:
      uint64_t result = 0x726F7461657263;
      break;
    case 5:
      uint64_t result = 0x7461446172747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance WalletPass.CodingKeys()
{
  return WalletPass.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance WalletPass.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = WalletPass.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance WalletPass.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance WalletPass.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void WalletPass.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<WalletPass.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_20_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_2_24();
    type metadata accessor for WalletPass(0);
    OUTLINED_FUNCTION_57_16();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_2_24();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    _sSDyS2SGSDyxq_GSEsSERzSER_rlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String : String] and conformance <> [A : B]);
    OUTLINED_FUNCTION_24_29();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void WalletPass.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<WalletPass.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_66_4();
  uint64_t v21 = (int *)type metadata accessor for WalletPass(v9);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_184_0();
  uint64_t v22 = v11;
  OUTLINED_FUNCTION_64_13();
  lazy protocol witness table accessor for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v3);
  }
  else
  {
    *uint64_t v22 = OUTLINED_FUNCTION_170_5();
    v22[1] = v12;
    uint64_t v13 = OUTLINED_FUNCTION_4_30();
    OUTLINED_FUNCTION_93_11(v13, v14);
    uint64_t v15 = OUTLINED_FUNCTION_4_30();
    OUTLINED_FUNCTION_189_3(v15, v16);
    OUTLINED_FUNCTION_136_4();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
    OUTLINED_FUNCTION_190_3();
    OUTLINED_FUNCTION_69_15();
    outlined init with take of URL?(v1, (uint64_t)v22 + v21[7], &demangling cache variable for type metadata for Date?);
    uint64_t v17 = OUTLINED_FUNCTION_4_30();
    OUTLINED_FUNCTION_88_10(v17, v18, v21[8]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    _sSDyS2SGSDyxq_GSEsSERzSER_rlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String : String] and conformance <> [A : B]);
    OUTLINED_FUNCTION_69_15();
    uint64_t v19 = OUTLINED_FUNCTION_1_28();
    v20(v19);
    *(uint64_t *)((char *)v22 + v21[9]) = v23;
    outlined init with copy of EmailDocument((uint64_t)v22, v5, (void (*)(void))type metadata accessor for WalletPass);
    __swift_destroy_boxed_opaque_existential_1Tm(v3);
    outlined destroy of EmailDocument((uint64_t)v22, (void (*)(void))type metadata accessor for WalletPass);
  }
  OUTLINED_FUNCTION_100_13();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance WalletPass()
{
}

void protocol witness for Encodable.encode(to:) in conformance WalletPass()
{
}

uint64_t Contact.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Contact.name.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Contact.dates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Contact.birthday.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t Contact.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6D754E656E6F6870 && a2 == 0xEC00000073726562;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6464416C69616D65 && a2 == 0xEE00736573736572;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x8000000258684B60 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x7365746164 && a2 == 0xE500000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x7961646874726962 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t Contact.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      unint64_t result = 0x6464416C69616D65;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x7365746164;
      break;
    case 6:
      unint64_t result = 0x7961646874726962;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance Contact.CodingKeys()
{
  return Contact.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Contact.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Contact.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Contact.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Contact.CodingKeys and conformance Contact.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Contact.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Contact.CodingKeys and conformance Contact.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Contact.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Contact.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type Contact.CodingKeys and conformance Contact.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v0)
  {
    OUTLINED_FUNCTION_111_0();
    v8();
  }
  else
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_247_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_38_22();
    OUTLINED_FUNCTION_199_2();
    OUTLINED_FUNCTION_38_22();
    OUTLINED_FUNCTION_198_2();
    OUTLINED_FUNCTION_38_22();
    OUTLINED_FUNCTION_38_22();
    OUTLINED_FUNCTION_118_9();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  }
  OUTLINED_FUNCTION_53_17();
  OUTLINED_FUNCTION_120_0();
}

void Contact.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Contact.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_110_11(v12);
  lazy protocol witness table accessor for type Contact.CodingKeys and conformance Contact.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(a10) = 1;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v33 = v18;
    uint64_t v30 = OUTLINED_FUNCTION_186_4();
    uint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_247_0();
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    OUTLINED_FUNCTION_199_2();
    uint64_t v29 = v21;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_48_17();
    OUTLINED_FUNCTION_198_2();
    uint64_t v32 = v22;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_48_17();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_48_17();
    OUTLINED_FUNCTION_118_9();
    uint64_t v31 = v23;
    swift_bridgeObjectRetain();
    uint64_t v24 = OUTLINED_FUNCTION_186_4();
    uint64_t v26 = v25;
    uint64_t v28 = v24;
    OUTLINED_FUNCTION_26_2();
    v27();
    swift_bridgeObjectRetain();
    *uint64_t v14 = v16;
    v14[1] = v33;
    v14[2] = v30;
    id v14[3] = v20;
    v14[4] = v29;
    v14[5] = v32;
    v14[6] = a10;
    v14[7] = v31;
    v14[8] = v28;
    v14[9] = v26;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance Contact(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Contact.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance Contact()
{
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Contact(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return specialized static SearchItem.== infix(_:_:)((uint64_t)v4) & 1;
}

uint64_t Answer.answer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Answer.answer.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.metadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*Answer.metadata.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.sourceResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*Answer.sourceResults.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.experiences.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*Answer.experiences.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.mediaURL.getter()
{
  return NoteDocument.lastUsedDate.getter();
}

uint64_t Answer.mediaURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Answer(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 36), &demangling cache variable for type metadata for URL?);
}

uint64_t (*Answer.mediaURL.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.lowConfidenceKnowledge.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Answer(0) + 40));
}

uint64_t Answer.lowConfidenceKnowledge.setter(char a1)
{
  uint64_t result = type metadata accessor for Answer(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*Answer.lowConfidenceKnowledge.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.dialog.getter()
{
  return Reminder.physicalAddress.getter();
}

uint64_t Answer.dialog.setter()
{
  uint64_t v3 = OUTLINED_FUNCTION_20_2();
  type metadata accessor for Answer(v3);
  uint64_t result = OUTLINED_FUNCTION_11_30();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Answer.dialog.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t Answer.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x726577736E61 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6552656372756F73 && a2 == 0xED000073746C7573;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E65697265707865 && a2 == 0xEB00000000736563;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x8000000258680270 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v12) {
                return 7;
              }
              else {
                return 8;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t Answer.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726577736E61;
      break;
    case 2:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 3:
      unint64_t result = 0x6552656372756F73;
      break;
    case 4:
      unint64_t result = 0x6E65697265707865;
      break;
    case 5:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0x676F6C616964;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance Answer.CodingKeys()
{
  return Answer.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Answer.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Answer.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Answer.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Answer.CodingKeys and conformance Answer.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Answer.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Answer.CodingKeys and conformance Answer.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Answer.encode(to:)()
{
  OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_33_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Answer.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_61_13();
  lazy protocol witness table accessor for type Answer.CodingKeys and conformance Answer.CodingKeys();
  OUTLINED_FUNCTION_19_28();
  OUTLINED_FUNCTION_4_29();
  if (!v0)
  {
    OUTLINED_FUNCTION_4_29();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    _sSDyS2SGSDyxq_GSEsSERzSER_rlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String : String] and conformance <> [A : B]);
    OUTLINED_FUNCTION_49_19();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
    lazy protocol witness table accessor for type [SearchResult] and conformance <A> [A]();
    OUTLINED_FUNCTION_49_19();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DialogExperience]);
    lazy protocol witness table accessor for type [DialogExperience] and conformance <A> [A]();
    OUTLINED_FUNCTION_49_19();
    type metadata accessor for Answer(0);
    type metadata accessor for URL();
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    OUTLINED_FUNCTION_24_29();
    OUTLINED_FUNCTION_118_9();
    KeyedEncodingContainer.encode(_:forKey:)();
    OUTLINED_FUNCTION_2_24();
  }
  OUTLINED_FUNCTION_111_0();
  v2();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_143_4();
}

void Answer.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v13 = v12;
  uint64_t v34 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v16 = OUTLINED_FUNCTION_81(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_184_0();
  uint64_t v35 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Answer.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = OUTLINED_FUNCTION_66_4();
  uint64_t v20 = type metadata accessor for Answer(v19);
  uint64_t v21 = (int *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_17_1();
  uint64_t v22 = MEMORY[0x263F8EE78];
  v10[4] = Dictionary.init(dictionaryLiteral:)();
  v10[6] = v22;
  uint64_t v23 = (uint64_t)v10 + v21[11];
  uint64_t v24 = type metadata accessor for URL();
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v24);
  uint64_t v25 = v21[12];
  *((unsigned char *)v10 + v25) = 0;
  uint64_t v26 = (uint64_t *)((char *)v10 + v21[13]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v36 = v26;
  uint64_t v37 = (uint64_t)v13;
  unsigned int v27 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  lazy protocol witness table accessor for type Answer.CodingKeys and conformance Answer.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    OUTLINED_FUNCTION_196_3();
    swift_bridgeObjectRelease();
    if (v27) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    outlined destroy of PQAVerificationModelProtocol?(v23, &demangling cache variable for type metadata for URL?);
    swift_bridgeObjectRelease();
  }
  else
  {
    *BOOL v10 = KeyedDecodingContainer.decode(_:forKey:)();
    v10[1] = v28;
    LOBYTE(a10) = 1;
    v10[2] = KeyedDecodingContainer.decode(_:forKey:)();
    v10[3] = v29;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    OUTLINED_FUNCTION_247_0();
    _sSDyS2SGSDyxq_GSEsSERzSER_rlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String : String] and conformance <> [A : B]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    v10[4] = a10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
    OUTLINED_FUNCTION_199_2();
    lazy protocol witness table accessor for type [SearchResult] and conformance <A> [A]();
    OUTLINED_FUNCTION_91_14();
    v10[5] = a10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DialogExperience]);
    OUTLINED_FUNCTION_198_2();
    lazy protocol witness table accessor for type [DialogExperience] and conformance <A> [A]();
    OUTLINED_FUNCTION_91_14();
    v10[6] = a10;
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined assign with take of SearchResultItem?(v35, v23, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_118_9();
    *((unsigned char *)v10 + v25) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    uint64_t v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v32 = v31;
    OUTLINED_FUNCTION_111_0();
    v33();
    swift_bridgeObjectRelease();
    *uint64_t v36 = v30;
    v36[1] = v32;
    outlined init with copy of EmailDocument((uint64_t)v10, v34, (void (*)(void))type metadata accessor for Answer);
    __swift_destroy_boxed_opaque_existential_1Tm(v37);
    outlined destroy of EmailDocument((uint64_t)v10, (void (*)(void))type metadata accessor for Answer);
  }
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance Answer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Answer.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance Answer()
{
}

uint64_t outlined consume of PreExtractedBreadcrumb?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for MobileSMSDocument(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for MobileSMSDocument);
}

uint64_t type metadata accessor for NoteDocument(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for NoteDocument);
}

uint64_t outlined init with take of URL?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_22_9(a1, a2, a3);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v3, v4);
  return v3;
}

uint64_t type metadata accessor for Photo(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for Photo);
}

uint64_t type metadata accessor for CalendarEvent(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for CalendarEvent);
}

uint64_t type metadata accessor for Reminder(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for Reminder);
}

uint64_t type metadata accessor for VoicemailTranscript(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for VoicemailTranscript);
}

uint64_t type metadata accessor for PhoneHistory(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneHistory);
}

uint64_t type metadata accessor for JournalEntry(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for JournalEntry);
}

uint64_t type metadata accessor for Safari(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for Safari);
}

uint64_t type metadata accessor for VoiceMemo(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for VoiceMemo);
}

uint64_t type metadata accessor for WalletTransaction(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for WalletTransaction);
}

uint64_t type metadata accessor for WalletPass(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for WalletPass);
}

uint64_t outlined copy of DataDetectorResults?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *outlined release of PreExtractedBreadcrumb?(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_160_1(a1);
  v3(v2, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
  return v1;
}

uint64_t outlined copy of PreExtractedBreadcrumb?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults()
{
  unint64_t result = lazy protocol witness table cache variable for type DataDetectorResults and conformance DataDetectorResults;
  if (!lazy protocol witness table cache variable for type DataDetectorResults and conformance DataDetectorResults)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DataDetectorResults and conformance DataDetectorResults);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DataDetectorResults and conformance DataDetectorResults;
  if (!lazy protocol witness table cache variable for type DataDetectorResults and conformance DataDetectorResults)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DataDetectorResults and conformance DataDetectorResults);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Date and conformance Date(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A](uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [Photo] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [Photo] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [Photo] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Photo]);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Photo and conformance Photo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Photo] and conformance <A> [A]);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type [Photo] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [Photo] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Photo]);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Photo and conformance Photo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Photo] and conformance <A> [A]);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [MobileSMSDocument] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [MobileSMSDocument] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [MobileSMSDocument] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MobileSMSDocument]);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [MobileSMSDocument] and conformance <A> [A]);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type [MobileSMSDocument] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [MobileSMSDocument] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MobileSMSDocument]);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [MobileSMSDocument] and conformance <A> [A]);
  }
  return result;
}

uint64_t outlined init with copy of EmailDocument(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of EmailDocument(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

unint64_t lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys;
  if (!lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys;
  if (!lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys;
  if (!lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys;
  if (!lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Photo.CodingKeys and conformance Photo.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Reminder.CodingKeys and conformance Reminder.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reminder.CodingKeys and conformance Reminder.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneHistory.CodingKeys and conformance PhoneHistory.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailTranscript.CodingKeys and conformance VoicemailTranscript.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys;
  if (!lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys;
  if (!lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys;
  if (!lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys;
  if (!lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JournalEntry.CodingKeys and conformance JournalEntry.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoiceMemo.CodingKeys and conformance VoiceMemo.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Safari.CodingKeys and conformance Safari.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys;
  if (!lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys;
  if (!lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys;
  if (!lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys;
  if (!lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Safari.CodingKeys and conformance Safari.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletTransaction.CodingKeys and conformance WalletTransaction.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys;
  if (!lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletPass.CodingKeys and conformance WalletPass.CodingKeys);
  }
  return result;
}

unint64_t _sSDyS2SGSDyxq_GSEsSERzSER_rlWlTm_0(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String : String]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Contact.CodingKeys and conformance Contact.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys;
  if (!lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys;
  if (!lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys;
  if (!lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys;
  if (!lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Contact.CodingKeys and conformance Contact.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Answer.CodingKeys and conformance Answer.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys;
  if (!lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys;
  if (!lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys;
  if (!lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys;
  if (!lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Answer.CodingKeys and conformance Answer.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [DialogExperience] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [DialogExperience] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [DialogExperience] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DialogExperience]);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type DialogExperience and conformance DialogExperience);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [DialogExperience] and conformance <A> [A]);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type [DialogExperience] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [DialogExperience] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DialogExperience]);
    lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type DialogExperience and conformance DialogExperience);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [DialogExperience] and conformance <A> [A]);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for EmailDocument(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type EmailDocument and conformance EmailDocument);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type EmailDocument and conformance EmailDocument);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type EmailDocument and conformance EmailDocument);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for MobileSMSDocument(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for CalendarEvent(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type CalendarEvent and conformance CalendarEvent);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type CalendarEvent and conformance CalendarEvent);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type CalendarEvent and conformance CalendarEvent);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for Photo(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Photo and conformance Photo);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Photo and conformance Photo);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Photo and conformance Photo);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for NoteDocument(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type NoteDocument and conformance NoteDocument);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type NoteDocument and conformance NoteDocument);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type NoteDocument and conformance NoteDocument);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for Reminder(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Reminder and conformance Reminder);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Reminder and conformance Reminder);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Reminder and conformance Reminder);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for PhoneHistory(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PhoneHistory and conformance PhoneHistory);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PhoneHistory and conformance PhoneHistory);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type PhoneHistory and conformance PhoneHistory);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for VoicemailTranscript(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type VoicemailTranscript and conformance VoicemailTranscript);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type VoicemailTranscript and conformance VoicemailTranscript);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type VoicemailTranscript and conformance VoicemailTranscript);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for JournalEntry(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type JournalEntry and conformance JournalEntry);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type JournalEntry and conformance JournalEntry);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type JournalEntry and conformance JournalEntry);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for VoiceMemo(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type VoiceMemo and conformance VoiceMemo);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type VoiceMemo and conformance VoiceMemo);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type VoiceMemo and conformance VoiceMemo);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for Safari(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Safari and conformance Safari);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Safari and conformance Safari);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Safari and conformance Safari);
  a1[3] = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for FileDocument(void *a1, uint64_t a2, uint64_t a3)
{
  return instantiation function for generic protocol witness table for FileDocument(a1, a2, a3, (uint64_t (*)(void))lazy protocol witness table accessor for type FileDocument and conformance FileDocument, (uint64_t (*)(void))lazy protocol witness table accessor for type FileDocument and conformance FileDocument, (uint64_t (*)(void))lazy protocol witness table accessor for type FileDocument and conformance FileDocument);
}

unint64_t instantiation function for generic protocol witness table for WalletTransaction(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type WalletTransaction and conformance WalletTransaction);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type WalletTransaction and conformance WalletTransaction);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type WalletTransaction and conformance WalletTransaction);
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for WalletPass(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type WalletPass and conformance WalletPass);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type WalletPass and conformance WalletPass);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type WalletPass and conformance WalletPass);
  a1[3] = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for Contact(void *a1, uint64_t a2, uint64_t a3)
{
  return instantiation function for generic protocol witness table for FileDocument(a1, a2, a3, (uint64_t (*)(void))lazy protocol witness table accessor for type Contact and conformance Contact, (uint64_t (*)(void))lazy protocol witness table accessor for type Contact and conformance Contact, (uint64_t (*)(void))lazy protocol witness table accessor for type Contact and conformance Contact);
}

uint64_t instantiation function for generic protocol witness table for FileDocument(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for Answer(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Answer and conformance Answer);
  a1[2] = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Answer and conformance Answer);
  unint64_t result = lazy protocol witness table accessor for type Date and conformance Date((uint64_t)&lazy protocol witness table cache variable for type Answer and conformance Answer);
  a1[3] = result;
  return result;
}

uint64_t dispatch thunk of DataDetectable.dataDetectorResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *initializeBufferWithCopyOfBuffer for EmailDocument(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    uint64_t v14 = (void *)(v31 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v682 = a2[11];
    uint64_t v10 = a3[12];
    v687 = (char *)a1 + v10;
    v684 = (char *)a2 + v10;
    a1[10] = a2[10];
    a1[11] = v682;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v684;
    v683 = v13;
    uint64_t v685 = v12;
    v13(v687, v15, v12);
    uint64_t v16 = a2;
    uint64_t v17 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v18 = a3[16];
    *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    uint64_t v19 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    v688 = a3;
    uint64_t v23 = a3[19];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      uint64_t v27 = *((void *)v25 + 1);
      uint64_t v28 = *((void *)v25 + 2);
      void *v24 = v26;
      v24[1] = v27;
      uint64_t v29 = *((void *)v25 + 3);
      uint64_t v30 = *((void *)v25 + 4);
      v24[2] = v28;
      v24[3] = v29;
      v24[4] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v32 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v32;
      v24[4] = *((void *)v25 + 4);
    }
    uint64_t v33 = a3;
    uint64_t v34 = a3[20];
    uint64_t v35 = a3[21];
    uint64_t v36 = (void *)((char *)a1 + v34);
    uint64_t v37 = (void *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = (void *)((char *)a1 + v35);
    uint64_t v40 = (void *)((char *)a2 + v35);
    uint64_t v41 = (int *)type metadata accessor for PartialExtractedAttributes(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, (uint64_t)v41))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v43;
      uint64_t v44 = v41[5];
      uint64_t v45 = (void *)((char *)v39 + v44);
      uint64_t v46 = (void *)((char *)v40 + v44);
      uint64_t v47 = type metadata accessor for RentalCarReservation(0);
      swift_bridgeObjectRetain();
      v678 = v41;
      v679 = v39;
      v676 = v40;
      if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
        memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v49 = v46[1];
        *uint64_t v45 = *v46;
        v45[1] = v49;
        uint64_t v50 = v46[3];
        v45[2] = v46[2];
        v45[3] = v50;
        uint64_t v51 = v46[5];
        v45[4] = v46[4];
        v45[5] = v51;
        uint64_t v52 = v46[7];
        v45[6] = v46[6];
        v45[7] = v52;
        uint64_t v53 = v46[9];
        v45[8] = v46[8];
        v45[9] = v53;
        uint64_t v54 = v46[11];
        v45[10] = v46[10];
        v45[11] = v54;
        uint64_t v55 = v46[13];
        v45[12] = v46[12];
        v45[13] = v55;
        uint64_t v56 = v46[15];
        v45[14] = v46[14];
        v45[15] = v56;
        *((unsigned char *)v45 + 128) = *((unsigned char *)v46 + 128);
        *(_WORD *)((char *)v45 + 129) = *(_WORD *)((char *)v46 + 129);
        uint64_t v57 = v46[18];
        v45[17] = v46[17];
        v45[18] = v57;
        uint64_t v58 = v46[20];
        v45[19] = v46[19];
        v45[20] = v58;
        uint64_t v59 = v46[22];
        v45[21] = v46[21];
        v45[22] = v59;
        uint64_t v60 = v46[24];
        v45[23] = v46[23];
        v45[24] = v60;
        uint64_t v61 = v46[26];
        v45[25] = v46[25];
        v45[26] = v61;
        uint64_t v62 = v46[28];
        v45[27] = v46[27];
        v45[28] = v62;
        uint64_t v63 = v46[30];
        v45[29] = v46[29];
        v45[30] = v63;
        uint64_t v64 = v46[32];
        v45[31] = v46[31];
        v45[32] = v64;
        uint64_t v65 = v46[34];
        v45[33] = v46[33];
        v45[34] = v65;
        uint64_t v66 = v46[36];
        v45[35] = v46[35];
        v45[36] = v66;
        uint64_t v67 = v46[38];
        v45[37] = v46[37];
        v45[38] = v67;
        uint64_t v68 = v46[40];
        v45[39] = v46[39];
        v45[40] = v68;
        uint64_t v69 = v46[42];
        v45[41] = v46[41];
        v45[42] = v69;
        uint64_t v70 = v46[44];
        v45[43] = v46[43];
        v45[44] = v70;
        uint64_t v71 = v46[46];
        v45[45] = v46[45];
        v45[46] = v71;
        uint64_t v72 = v46[47];
        *((unsigned char *)v45 + 384) = *((unsigned char *)v46 + 384);
        v45[47] = v72;
        uint64_t v73 = v46[50];
        v45[49] = v46[49];
        v45[50] = v73;
        uint64_t v74 = v46[52];
        v45[51] = v46[51];
        v45[52] = v74;
        uint64_t v75 = *(int *)(v47 + 140);
        __dst = (char *)v45 + v75;
        uint64_t v76 = (char *)v46 + v75;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v685))
        {
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v76, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          v683(__dst, v76, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v685);
        }
        uint64_t v78 = *(int *)(v47 + 144);
        uint64_t v79 = (char *)v45 + v78;
        v80 = (char *)v46 + v78;
        if (__swift_getEnumTagSinglePayload((uint64_t)v46 + v78, 1, v685))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v683(v79, v80, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v685);
        }
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
      }
      uint64_t v82 = v41[6];
      uint64_t v83 = (void *)((char *)v39 + v82);
      v84 = (void *)((char *)v40 + v82);
      uint64_t v85 = type metadata accessor for TicketedTransportation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
        memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        uint64_t v87 = v84[1];
        *uint64_t v83 = *v84;
        v83[1] = v87;
        uint64_t v88 = v84[3];
        v83[2] = v84[2];
        v83[3] = v88;
        uint64_t v89 = v84[5];
        v83[4] = v84[4];
        v83[5] = v89;
        uint64_t v90 = v84[7];
        v83[6] = v84[6];
        v83[7] = v90;
        uint64_t v91 = v84[9];
        v83[8] = v84[8];
        v83[9] = v91;
        uint64_t v92 = v84[11];
        v83[10] = v84[10];
        v83[11] = v92;
        uint64_t v93 = v84[13];
        v83[12] = v84[12];
        v83[13] = v93;
        uint64_t v94 = v84[15];
        v83[14] = v84[14];
        v83[15] = v94;
        *((unsigned char *)v83 + 128) = *((unsigned char *)v84 + 128);
        *(_WORD *)((char *)v83 + 129) = *(_WORD *)((char *)v84 + 129);
        uint64_t v95 = v84[18];
        v83[17] = v84[17];
        v83[18] = v95;
        uint64_t v96 = v84[20];
        v83[19] = v84[19];
        v83[20] = v96;
        uint64_t v97 = v84[22];
        v83[21] = v84[21];
        v83[22] = v97;
        uint64_t v98 = v84[24];
        v83[23] = v84[23];
        v83[24] = v98;
        uint64_t v664 = v84[26];
        v83[25] = v84[25];
        v83[26] = v664;
        uint64_t v99 = v84[28];
        v83[27] = v84[27];
        v83[28] = v99;
        uint64_t v100 = v84[30];
        v83[29] = v84[29];
        v83[30] = v100;
        uint64_t v101 = v84[32];
        v83[31] = v84[31];
        v83[32] = v101;
        uint64_t v102 = v84[34];
        v83[33] = v84[33];
        v83[34] = v102;
        uint64_t v104 = v84[35];
        uint64_t v103 = v84[36];
        *((unsigned char *)v83 + 296) = *((unsigned char *)v84 + 296);
        v83[35] = v104;
        v83[36] = v103;
        uint64_t v668 = v85;
        uint64_t v105 = *(int *)(v85 + 112);
        v646 = (char *)v83 + v105;
        v106 = (char *)v84 + v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v685))
        {
          uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v646, v106, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          v683(v646, v106, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v646, 0, 1, v685);
        }
        uint64_t v108 = *(int *)(v668 + 116);
        v109 = (char *)v83 + v108;
        v110 = (char *)v84 + v108;
        if (__swift_getEnumTagSinglePayload((uint64_t)v84 + v108, 1, v685))
        {
          uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          v683(v109, v110, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v685);
        }
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v668);
      }
      uint64_t v112 = v41[7];
      v113 = (void *)((char *)v39 + v112);
      v114 = (void *)((char *)v40 + v112);
      v115 = (int *)type metadata accessor for TicketedShow(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, (uint64_t)v115))
      {
        uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
        memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        uint64_t v117 = v114[1];
        void *v113 = *v114;
        v113[1] = v117;
        uint64_t v118 = v114[3];
        v113[2] = v114[2];
        v113[3] = v118;
        uint64_t v119 = v114[5];
        v113[4] = v114[4];
        v113[5] = v119;
        uint64_t v120 = v114[7];
        v113[6] = v114[6];
        v113[7] = v120;
        uint64_t v121 = v114[9];
        v113[8] = v114[8];
        v113[9] = v121;
        uint64_t v122 = v114[11];
        v113[10] = v114[10];
        v113[11] = v122;
        uint64_t v123 = v114[13];
        v113[12] = v114[12];
        v113[13] = v123;
        uint64_t v124 = v114[15];
        v113[14] = v114[14];
        v113[15] = v124;
        *((unsigned char *)v113 + 128) = *((unsigned char *)v114 + 128);
        *(_WORD *)((char *)v113 + 129) = *(_WORD *)((char *)v114 + 129);
        uint64_t v125 = v114[18];
        v113[17] = v114[17];
        v113[18] = v125;
        uint64_t v126 = v114[20];
        v113[19] = v114[19];
        v113[20] = v126;
        uint64_t v127 = v114[22];
        v113[21] = v114[21];
        v113[22] = v127;
        uint64_t v128 = v114[24];
        v113[23] = v114[23];
        v113[24] = v128;
        uint64_t v129 = v114[26];
        v113[25] = v114[25];
        v113[26] = v129;
        uint64_t v130 = v114[28];
        v113[27] = v114[27];
        v113[28] = v130;
        uint64_t v669 = v114[30];
        v113[29] = v114[29];
        v113[30] = v669;
        uint64_t v131 = v114[32];
        v113[31] = v114[31];
        v113[32] = v131;
        uint64_t v132 = v114[34];
        v113[33] = v114[33];
        v113[34] = v132;
        uint64_t v133 = v114[36];
        uint64_t v134 = v114[35];
        *((unsigned char *)v113 + 296) = *((unsigned char *)v114 + 296);
        v113[35] = v134;
        v113[36] = v133;
        uint64_t v135 = v114[39];
        v113[38] = v114[38];
        v113[39] = v135;
        uint64_t v136 = v115[29];
        v645 = (char *)v113 + v136;
        v137 = (char *)v114 + v136;
        uint64_t v138 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v138))
        {
          uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v645, v137, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v645, v137, v138);
          __swift_storeEnumTagSinglePayload((uint64_t)v645, 0, 1, v138);
        }
        uint64_t v140 = v115[30];
        v141 = (void *)((char *)v113 + v140);
        v142 = (void *)((char *)v114 + v140);
        uint64_t v143 = v142[1];
        void *v141 = *v142;
        v141[1] = v143;
        uint64_t v144 = v115[31];
        v145 = (char *)v113 + v144;
        v146 = (char *)v114 + v144;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, v685))
        {
          uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
        }
        else
        {
          v683(v145, v146, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v685);
        }
        uint64_t v148 = v115[32];
        v149 = (char *)v113 + v148;
        v150 = (char *)v114 + v148;
        if (__swift_getEnumTagSinglePayload((uint64_t)v114 + v148, 1, v685))
        {
          uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          v683(v149, v150, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v685);
        }
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, (uint64_t)v115);
      }
      uint64_t v152 = v41[8];
      v153 = (void *)((char *)v39 + v152);
      v154 = (void *)((char *)v40 + v152);
      uint64_t v155 = type metadata accessor for Appointment(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v155))
      {
        uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
        memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        uint64_t v157 = v154[1];
        void *v153 = *v154;
        v153[1] = v157;
        uint64_t v158 = v154[3];
        v153[2] = v154[2];
        v153[3] = v158;
        uint64_t v159 = v154[5];
        v153[4] = v154[4];
        v153[5] = v159;
        uint64_t v160 = v154[7];
        v153[6] = v154[6];
        v153[7] = v160;
        uint64_t v161 = v154[9];
        v153[8] = v154[8];
        v153[9] = v161;
        uint64_t v162 = v154[11];
        v153[10] = v154[10];
        v153[11] = v162;
        uint64_t v163 = v154[13];
        v153[12] = v154[12];
        v153[13] = v163;
        uint64_t v164 = v154[15];
        v153[14] = v154[14];
        v153[15] = v164;
        *((unsigned char *)v153 + 128) = *((unsigned char *)v154 + 128);
        *(_WORD *)((char *)v153 + 129) = *(_WORD *)((char *)v154 + 129);
        uint64_t v165 = v154[18];
        v153[17] = v154[17];
        v153[18] = v165;
        uint64_t v166 = v154[20];
        v153[19] = v154[19];
        v153[20] = v166;
        uint64_t v167 = v154[22];
        v153[21] = v154[21];
        v153[22] = v167;
        uint64_t v168 = v154[24];
        v153[23] = v154[23];
        v153[24] = v168;
        uint64_t v169 = v154[26];
        v153[25] = v154[25];
        v153[26] = v169;
        uint64_t v170 = v154[28];
        v153[27] = v154[27];
        v153[28] = v170;
        uint64_t v171 = v154[30];
        v153[29] = v154[29];
        v153[30] = v171;
        uint64_t v172 = v154[32];
        v153[31] = v154[31];
        v153[32] = v172;
        uint64_t v174 = v154[33];
        uint64_t v173 = v154[34];
        *((unsigned char *)v153 + 280) = *((unsigned char *)v154 + 280);
        v153[33] = v174;
        v153[34] = v173;
        uint64_t v175 = v154[37];
        v153[36] = v154[36];
        v153[37] = v175;
        uint64_t v670 = v155;
        uint64_t v176 = *(int *)(v155 + 108);
        v647 = (char *)v153 + v176;
        v177 = (char *)v154 + v176;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v177, 1, v685))
        {
          uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v647, v177, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          v683(v647, v177, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v647, 0, 1, v685);
        }
        uint64_t v179 = *(int *)(v670 + 112);
        v180 = (char *)v153 + v179;
        v181 = (char *)v154 + v179;
        if (__swift_getEnumTagSinglePayload((uint64_t)v154 + v179, 1, v685))
        {
          uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
        }
        else
        {
          v683(v180, v181, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v685);
        }
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        __swift_storeEnumTagSinglePayload((uint64_t)v153, 0, 1, v670);
      }
      uint64_t v183 = v41[9];
      v184 = (void *)((char *)v39 + v183);
      v185 = (void *)((char *)v40 + v183);
      uint64_t v186 = type metadata accessor for Party(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, v186))
      {
        uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
        memcpy(v184, v185, *(void *)(*(void *)(v187 - 8) + 64));
      }
      else
      {
        uint64_t v188 = v185[1];
        void *v184 = *v185;
        v184[1] = v188;
        uint64_t v189 = v185[3];
        v184[2] = v185[2];
        v184[3] = v189;
        uint64_t v190 = v185[5];
        v184[4] = v185[4];
        v184[5] = v190;
        uint64_t v191 = v185[7];
        v184[6] = v185[6];
        v184[7] = v191;
        uint64_t v192 = v185[9];
        v184[8] = v185[8];
        v184[9] = v192;
        uint64_t v193 = v185[11];
        v184[10] = v185[10];
        v184[11] = v193;
        uint64_t v194 = v185[13];
        v184[12] = v185[12];
        v184[13] = v194;
        uint64_t v195 = v185[15];
        v184[14] = v185[14];
        v184[15] = v195;
        *((unsigned char *)v184 + 128) = *((unsigned char *)v185 + 128);
        *(_WORD *)((char *)v184 + 129) = *(_WORD *)((char *)v185 + 129);
        uint64_t v196 = v185[18];
        v184[17] = v185[17];
        v184[18] = v196;
        uint64_t v197 = v185[20];
        v184[19] = v185[19];
        v184[20] = v197;
        uint64_t v198 = v185[22];
        v184[21] = v185[21];
        v184[22] = v198;
        uint64_t v199 = v185[24];
        v184[23] = v185[23];
        v184[24] = v199;
        uint64_t v200 = v185[26];
        v184[25] = v185[25];
        v184[26] = v200;
        uint64_t v201 = v185[28];
        v184[27] = v185[27];
        v184[28] = v201;
        uint64_t v202 = v185[30];
        v184[29] = v185[29];
        v184[30] = v202;
        uint64_t v671 = v186;
        v184[31] = v185[31];
        uint64_t v203 = *(int *)(v186 + 96);
        v648 = (char *)v184 + v203;
        v204 = (char *)v185 + v203;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v204, 1, v685))
        {
          uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v648, v204, *(void *)(*(void *)(v205 - 8) + 64));
        }
        else
        {
          v683(v648, v204, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v648, 0, 1, v685);
        }
        uint64_t v40 = v676;
        uint64_t v206 = *(int *)(v671 + 100);
        v207 = (char *)v184 + v206;
        v208 = (char *)v185 + v206;
        if (__swift_getEnumTagSinglePayload((uint64_t)v185 + v206, 1, v685))
        {
          uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v207, v208, *(void *)(*(void *)(v209 - 8) + 64));
        }
        else
        {
          v683(v207, v208, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v685);
        }
        uint64_t v210 = *(int *)(v671 + 104);
        v211 = (char *)v184 + v210;
        v212 = (char *)v185 + v210;
        uint64_t v213 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v213))
        {
          uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v211, v212, *(void *)(*(void *)(v214 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16))(v211, v212, v213);
          __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v213);
        }
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        __swift_storeEnumTagSinglePayload((uint64_t)v184, 0, 1, v671);
      }
      uint64_t v215 = v41[10];
      v216 = (void *)((char *)v39 + v215);
      v217 = (void *)((char *)v40 + v215);
      uint64_t v218 = type metadata accessor for Trip(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v217, 1, v218))
      {
        uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
        memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
      }
      else
      {
        uint64_t v220 = v217[1];
        void *v216 = *v217;
        v216[1] = v220;
        uint64_t v221 = v217[3];
        v216[2] = v217[2];
        v216[3] = v221;
        uint64_t v222 = v217[5];
        v216[4] = v217[4];
        v216[5] = v222;
        uint64_t v223 = v217[7];
        v216[6] = v217[6];
        v216[7] = v223;
        uint64_t v224 = v217[9];
        v216[8] = v217[8];
        v216[9] = v224;
        uint64_t v225 = v217[11];
        v216[10] = v217[10];
        v216[11] = v225;
        uint64_t v226 = v217[13];
        v216[12] = v217[12];
        v216[13] = v226;
        uint64_t v227 = v217[15];
        v216[14] = v217[14];
        v216[15] = v227;
        *((unsigned char *)v216 + 128) = *((unsigned char *)v217 + 128);
        *(_WORD *)((char *)v216 + 129) = *(_WORD *)((char *)v217 + 129);
        uint64_t v228 = v217[18];
        v216[17] = v217[17];
        v216[18] = v228;
        uint64_t v229 = v217[20];
        v216[19] = v217[19];
        v216[20] = v229;
        uint64_t v230 = v217[22];
        v216[21] = v217[21];
        v216[22] = v230;
        uint64_t v231 = v217[24];
        v216[23] = v217[23];
        v216[24] = v231;
        uint64_t v232 = v217[26];
        v216[25] = v217[25];
        v216[26] = v232;
        v216[27] = v217[27];
        v672 = (int *)v218;
        uint64_t v233 = *(int *)(v218 + 88);
        v650 = (char *)v216 + v233;
        v234 = (char *)v217 + v233;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v685))
        {
          uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v650, v234, *(void *)(*(void *)(v235 - 8) + 64));
        }
        else
        {
          v683(v650, v234, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v650, 0, 1, v685);
        }
        uint64_t v40 = v676;
        uint64_t v236 = v672[23];
        v237 = (char *)v216 + v236;
        v238 = (char *)v217 + v236;
        if (__swift_getEnumTagSinglePayload((uint64_t)v217 + v236, 1, v685))
        {
          uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
        }
        else
        {
          v683(v237, v238, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v685);
        }
        uint64_t v240 = v672[24];
        v241 = (char *)v216 + v240;
        v242 = (char *)v217 + v240;
        *(void *)v241 = *(void *)v242;
        v241[8] = v242[8];
        uint64_t v243 = v672[25];
        v244 = (char *)v216 + v243;
        v245 = (char *)v217 + v243;
        uint64_t v246 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, v246))
        {
          uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16))(v244, v245, v246);
          __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v246);
        }
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, (uint64_t)v672);
      }
      uint64_t v248 = v41[11];
      v249 = (void *)((char *)v39 + v248);
      v250 = (void *)((char *)v40 + v248);
      v251 = (int *)type metadata accessor for FlightReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v250, 1, (uint64_t)v251))
      {
        uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
      }
      else
      {
        uint64_t v253 = v250[1];
        void *v249 = *v250;
        v249[1] = v253;
        uint64_t v254 = v250[3];
        v249[2] = v250[2];
        v249[3] = v254;
        uint64_t v255 = v250[5];
        v249[4] = v250[4];
        v249[5] = v255;
        uint64_t v256 = v250[7];
        v249[6] = v250[6];
        v249[7] = v256;
        uint64_t v257 = v250[9];
        v249[8] = v250[8];
        v249[9] = v257;
        uint64_t v258 = v250[11];
        v249[10] = v250[10];
        v249[11] = v258;
        *((unsigned char *)v249 + 96) = *((unsigned char *)v250 + 96);
        uint64_t v259 = v250[14];
        v249[13] = v250[13];
        v249[14] = v259;
        uint64_t v260 = v251[13];
        v659 = (char *)v249 + v260;
        v665 = (char *)v250 + v260;
        uint64_t v261 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v665, 1, v261))
        {
          uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v659, v665, *(void *)(*(void *)(v262 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v659, v665, v261);
          __swift_storeEnumTagSinglePayload((uint64_t)v659, 0, 1, v261);
        }
        uint64_t v263 = v251[14];
        v264 = (char *)v249 + v263;
        v265 = (char *)v250 + v263;
        if (__swift_getEnumTagSinglePayload((uint64_t)v250 + v263, 1, v261))
        {
          uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v264, v265, v261);
          __swift_storeEnumTagSinglePayload((uint64_t)v264, 0, 1, v261);
        }
        uint64_t v267 = v251[15];
        v268 = (void *)((char *)v249 + v267);
        v269 = (void *)((char *)v250 + v267);
        uint64_t v270 = v269[1];
        void *v268 = *v269;
        v268[1] = v270;
        uint64_t v271 = v251[16];
        v272 = (void *)((char *)v249 + v271);
        v273 = (void *)((char *)v250 + v271);
        uint64_t v274 = v273[1];
        void *v272 = *v273;
        v272[1] = v274;
        uint64_t v275 = v251[17];
        v276 = (void *)((char *)v249 + v275);
        v277 = (void *)((char *)v250 + v275);
        uint64_t v278 = v277[1];
        void *v276 = *v277;
        v276[1] = v278;
        uint64_t v279 = v251[18];
        v673 = (char *)v249 + v279;
        v280 = (char *)v250 + v279;
        uint64_t v281 = type metadata accessor for DateComponents();
        v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v282(v673, v280, v281);
        v282((char *)v249 + v251[19], (char *)v250 + v251[19], v281);
        uint64_t v283 = v251[20];
        v284 = (void *)((char *)v249 + v283);
        v285 = (void *)((char *)v250 + v283);
        uint64_t v286 = v285[1];
        void *v284 = *v285;
        v284[1] = v286;
        uint64_t v287 = v251[21];
        v288 = (void *)((char *)v249 + v287);
        v289 = (void *)((char *)v250 + v287);
        uint64_t v290 = v289[1];
        void *v288 = *v289;
        v288[1] = v290;
        uint64_t v291 = v251[22];
        v292 = (void *)((char *)v249 + v291);
        v293 = (void *)((char *)v250 + v291);
        uint64_t v294 = v293[1];
        void *v292 = *v293;
        v292[1] = v294;
        uint64_t v295 = v251[23];
        v296 = (void *)((char *)v249 + v295);
        v297 = (void *)((char *)v250 + v295);
        v660 = (void *)v297[1];
        void *v296 = *v297;
        v296[1] = v660;
        uint64_t v298 = v251[24];
        v299 = (void *)((char *)v249 + v298);
        v300 = (void *)((char *)v250 + v298);
        uint64_t v674 = v300[1];
        void *v299 = *v300;
        v299[1] = v674;
        uint64_t v301 = v251[25];
        v302 = (void *)((char *)v249 + v301);
        v303 = (void *)((char *)v250 + v301);
        uint64_t v666 = v303[1];
        void *v302 = *v303;
        v302[1] = v666;
        uint64_t v304 = v251[26];
        v305 = (void *)((char *)v249 + v304);
        v306 = (void *)((char *)v250 + v304);
        v656 = (void *)v306[1];
        void *v305 = *v306;
        v305[1] = v656;
        uint64_t v307 = v251[27];
        v308 = (void *)((char *)v249 + v307);
        v309 = (void *)((char *)v250 + v307);
        uint64_t v655 = v309[1];
        void *v308 = *v309;
        v308[1] = v655;
        uint64_t v310 = v251[28];
        v311 = (void *)((char *)v249 + v310);
        v312 = (void *)((char *)v250 + v310);
        uint64_t v654 = v312[1];
        void *v311 = *v312;
        v311[1] = v654;
        uint64_t v313 = v251[29];
        v314 = (void *)((char *)v249 + v313);
        v315 = (void *)((char *)v250 + v313);
        uint64_t v653 = v315[1];
        void *v314 = *v315;
        v314[1] = v653;
        uint64_t v316 = v251[30];
        v317 = (void *)((char *)v249 + v316);
        v318 = (void *)((char *)v250 + v316);
        uint64_t v652 = v318[1];
        void *v317 = *v318;
        v317[1] = v652;
        uint64_t v319 = v251[31];
        v320 = (void *)((char *)v249 + v319);
        v321 = (void *)((char *)v250 + v319);
        uint64_t v651 = v321[1];
        void *v320 = *v321;
        v320[1] = v651;
        uint64_t v322 = v251[32];
        v323 = (void *)((char *)v249 + v322);
        v324 = (void *)((char *)v250 + v322);
        uint64_t v325 = v324[1];
        void *v323 = *v324;
        v323[1] = v325;
        *(void *)((char *)v249 + v251[33]) = *(void *)((char *)v250 + v251[33]);
        *(void *)((char *)v249 + v251[34]) = *(void *)((char *)v250 + v251[34]);
        uint64_t v326 = v251[35];
        v327 = (void *)((char *)v249 + v326);
        v328 = (void *)((char *)v250 + v326);
        uint64_t v329 = v328[1];
        void *v327 = *v328;
        v327[1] = v329;
        uint64_t v330 = v251[36];
        v331 = (void *)((char *)v249 + v330);
        v332 = (void *)((char *)v250 + v330);
        uint64_t v333 = v332[1];
        void *v331 = *v332;
        v331[1] = v333;
        uint64_t v334 = v251[37];
        v335 = (void *)((char *)v249 + v334);
        v336 = (void *)((char *)v250 + v334);
        uint64_t v337 = v336[1];
        void *v335 = *v336;
        v335[1] = v337;
        uint64_t v338 = v251[38];
        v649 = (char *)v249 + v338;
        v339 = (char *)v250 + v338;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v339, 1, v685))
        {
          uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v649, v339, *(void *)(*(void *)(v340 - 8) + 64));
        }
        else
        {
          v683(v649, v339, v685);
          __swift_storeEnumTagSinglePayload((uint64_t)v649, 0, 1, v685);
        }
        uint64_t v40 = v676;
        uint64_t v341 = v251[39];
        v342 = (void *)((char *)v249 + v341);
        v343 = (void *)((char *)v250 + v341);
        uint64_t v344 = v343[1];
        void *v342 = *v343;
        v342[1] = v344;
        uint64_t v345 = v251[40];
        v346 = (void *)((char *)v249 + v345);
        v347 = (void *)((char *)v250 + v345);
        uint64_t v348 = v347[1];
        void *v346 = *v347;
        v346[1] = v348;
        uint64_t v349 = v251[41];
        v350 = (char *)v249 + v349;
        v351 = (char *)v250 + v349;
        v350[8] = v351[8];
        *(void *)v350 = *(void *)v351;
        uint64_t v352 = v251[42];
        v353 = (void *)((char *)v249 + v352);
        v354 = (void *)((char *)v250 + v352);
        uint64_t v355 = v354[1];
        void *v353 = *v354;
        v353[1] = v355;
        uint64_t v356 = v251[43];
        v357 = (char *)v249 + v356;
        v358 = (char *)v250 + v356;
        *(_OWORD *)v357 = *(_OWORD *)v358;
        *(void *)(v357 + 13) = *(void *)(v358 + 13);
        uint64_t v359 = v251[44];
        v360 = (void *)((char *)v249 + v359);
        v361 = (void *)((char *)v250 + v359);
        uint64_t v362 = v361[1];
        void *v360 = *v361;
        v360[1] = v362;
        uint64_t v363 = v251[45];
        v364 = (void *)((char *)v249 + v363);
        v365 = (void *)((char *)v250 + v363);
        uint64_t v366 = v365[1];
        void *v364 = *v365;
        v364[1] = v366;
        uint64_t v367 = v251[46];
        v368 = (void *)((char *)v249 + v367);
        v369 = (void *)((char *)v250 + v367);
        uint64_t v370 = v369[1];
        void *v368 = *v369;
        v368[1] = v370;
        uint64_t v371 = v251[47];
        v372 = (void *)((char *)v249 + v371);
        v373 = (void *)((char *)v250 + v371);
        uint64_t v374 = v373[1];
        void *v372 = *v373;
        v372[1] = v374;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, (uint64_t)v251);
        uint64_t v33 = v688;
        uint64_t v41 = v678;
        uint64_t v39 = v679;
      }
      uint64_t v375 = v41[12];
      v376 = (void *)((char *)v39 + v375);
      v377 = (void *)((char *)v40 + v375);
      v378 = (int *)type metadata accessor for HotelReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v377, 1, (uint64_t)v378))
      {
        uint64_t v379 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
        memcpy(v376, v377, *(void *)(*(void *)(v379 - 8) + 64));
      }
      else
      {
        uint64_t v380 = v377[1];
        void *v376 = *v377;
        v376[1] = v380;
        uint64_t v381 = v377[3];
        v376[2] = v377[2];
        v376[3] = v381;
        uint64_t v382 = v377[5];
        v376[4] = v377[4];
        v376[5] = v382;
        uint64_t v383 = v377[7];
        v376[6] = v377[6];
        v376[7] = v383;
        uint64_t v384 = v377[9];
        v376[8] = v377[8];
        v376[9] = v384;
        uint64_t v385 = v377[11];
        v376[10] = v377[10];
        v376[11] = v385;
        *((unsigned char *)v376 + 96) = *((unsigned char *)v377 + 96);
        uint64_t v386 = v377[14];
        v376[13] = v377[13];
        v376[14] = v386;
        uint64_t v387 = v377[16];
        v376[15] = v377[15];
        v376[16] = v387;
        uint64_t v388 = v378[14];
        v657 = (char *)v376 + v388;
        v661 = (char *)v377 + v388;
        uint64_t v389 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v661, 1, v389))
        {
          uint64_t v390 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v657, v661, *(void *)(*(void *)(v390 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 16))(v657, v661, v389);
          __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v389);
        }
        uint64_t v391 = v378[15];
        v392 = (char *)v376 + v391;
        v393 = (char *)v377 + v391;
        if (__swift_getEnumTagSinglePayload((uint64_t)v377 + v391, 1, v389))
        {
          uint64_t v394 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v392, v393, *(void *)(*(void *)(v394 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 16))(v392, v393, v389);
          __swift_storeEnumTagSinglePayload((uint64_t)v392, 0, 1, v389);
        }
        uint64_t v395 = v378[16];
        v396 = (void *)((char *)v376 + v395);
        v397 = (void *)((char *)v377 + v395);
        uint64_t v398 = v397[1];
        void *v396 = *v397;
        v396[1] = v398;
        uint64_t v399 = v378[17];
        v400 = (void *)((char *)v376 + v399);
        v401 = (void *)((char *)v377 + v399);
        uint64_t v675 = v401[1];
        void *v400 = *v401;
        v400[1] = v675;
        uint64_t v402 = v378[18];
        v403 = (void *)((char *)v376 + v402);
        v404 = (void *)((char *)v377 + v402);
        uint64_t v667 = v404[1];
        void *v403 = *v404;
        v403[1] = v667;
        uint64_t v405 = v378[19];
        v406 = (void *)((char *)v376 + v405);
        v407 = (void *)((char *)v377 + v405);
        v662 = (void *)v407[1];
        void *v406 = *v407;
        v406[1] = v662;
        uint64_t v408 = v378[20];
        v409 = (void *)((char *)v376 + v408);
        v410 = (void *)((char *)v377 + v408);
        uint64_t v411 = v410[1];
        void *v409 = *v410;
        v409[1] = v411;
        *(void *)((char *)v376 + v378[21]) = *(void *)((char *)v377 + v378[21]);
        *(void *)((char *)v376 + v378[22]) = *(void *)((char *)v377 + v378[22]);
        uint64_t v412 = v378[23];
        v413 = (char *)v376 + v412;
        v414 = (char *)v377 + v412;
        *(void *)v413 = *(void *)v414;
        v413[8] = v414[8];
        uint64_t v415 = v378[24];
        v416 = (char *)v376 + v415;
        v417 = (char *)v377 + v415;
        *(void *)v416 = *(void *)v417;
        v416[8] = v417[8];
        uint64_t v418 = v378[25];
        v419 = (void *)((char *)v376 + v418);
        v420 = (void *)((char *)v377 + v418);
        uint64_t v421 = v420[1];
        void *v419 = *v420;
        v419[1] = v421;
        uint64_t v422 = v378[26];
        v423 = (void *)((char *)v376 + v422);
        v424 = (void *)((char *)v377 + v422);
        uint64_t v425 = v424[1];
        void *v423 = *v424;
        v423[1] = v425;
        uint64_t v426 = v378[27];
        v427 = (void *)((char *)v376 + v426);
        v428 = (void *)((char *)v377 + v426);
        uint64_t v429 = v428[1];
        void *v427 = *v428;
        v427[1] = v429;
        uint64_t v430 = v378[28];
        v431 = (void *)((char *)v376 + v430);
        v432 = (void *)((char *)v377 + v430);
        uint64_t v433 = v432[1];
        void *v431 = *v432;
        v431[1] = v433;
        uint64_t v434 = v378[29];
        v435 = (char *)v376 + v434;
        v436 = (char *)v377 + v434;
        *(void *)v435 = *(void *)v436;
        v435[8] = v436[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v376, 0, 1, (uint64_t)v378);
        uint64_t v33 = v688;
        uint64_t v41 = v678;
        uint64_t v39 = v679;
        uint64_t v40 = v676;
      }
      uint64_t v437 = v41[13];
      v438 = (void *)((char *)v39 + v437);
      v439 = (void *)((char *)v40 + v437);
      v440 = (int *)type metadata accessor for RestaurantReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v439, 1, (uint64_t)v440))
      {
        uint64_t v441 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
        memcpy(v438, v439, *(void *)(*(void *)(v441 - 8) + 64));
      }
      else
      {
        uint64_t v442 = v439[1];
        void *v438 = *v439;
        v438[1] = v442;
        uint64_t v443 = v439[3];
        v438[2] = v439[2];
        v438[3] = v443;
        uint64_t v444 = v439[5];
        v438[4] = v439[4];
        v438[5] = v444;
        uint64_t v677 = v439[7];
        v438[6] = v439[6];
        v438[7] = v677;
        uint64_t v445 = v439[9];
        v438[8] = v439[8];
        v438[9] = v445;
        uint64_t v446 = v439[11];
        v438[10] = v439[10];
        v438[11] = v446;
        *((unsigned char *)v438 + 96) = *((unsigned char *)v439 + 96);
        uint64_t v447 = v439[14];
        v438[13] = v439[13];
        v438[14] = v447;
        uint64_t v448 = v439[16];
        v438[15] = v439[15];
        v438[16] = v448;
        uint64_t v449 = v440[14];
        v658 = (char *)v438 + v449;
        v450 = (char *)v439 + v449;
        v663 = (void *)type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v450, 1, (uint64_t)v663))
        {
          uint64_t v451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v658, v450, *(void *)(*(void *)(v451 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(*(v663 - 1) + 16))(v658, v450, v663);
          __swift_storeEnumTagSinglePayload((uint64_t)v658, 0, 1, (uint64_t)v663);
        }
        uint64_t v452 = v440[15];
        v453 = (void *)((char *)v438 + v452);
        v454 = (void *)((char *)v439 + v452);
        uint64_t v455 = v454[1];
        void *v453 = *v454;
        v453[1] = v455;
        uint64_t v456 = v440[16];
        v457 = (void *)((char *)v438 + v456);
        v458 = (void *)((char *)v439 + v456);
        uint64_t v459 = v458[1];
        void *v457 = *v458;
        v457[1] = v459;
        uint64_t v460 = v440[17];
        v461 = (void *)((char *)v438 + v460);
        v462 = (void *)((char *)v439 + v460);
        uint64_t v463 = v462[1];
        void *v461 = *v462;
        v461[1] = v463;
        uint64_t v464 = v440[18];
        v465 = (void *)((char *)v438 + v464);
        v466 = (void *)((char *)v439 + v464);
        uint64_t v467 = v466[1];
        void *v465 = *v466;
        v465[1] = v467;
        uint64_t v468 = v440[19];
        v469 = (void *)((char *)v438 + v468);
        v470 = (void *)((char *)v439 + v468);
        uint64_t v471 = v470[1];
        void *v469 = *v470;
        v469[1] = v471;
        *(void *)((char *)v438 + v440[20]) = *(void *)((char *)v439 + v440[20]);
        uint64_t v472 = v440[21];
        v473 = (void *)((char *)v438 + v472);
        v474 = (void *)((char *)v439 + v472);
        uint64_t v475 = v474[1];
        void *v473 = *v474;
        v473[1] = v475;
        uint64_t v476 = v440[22];
        v477 = (void *)((char *)v438 + v476);
        v478 = (void *)((char *)v439 + v476);
        uint64_t v479 = v478[1];
        void *v477 = *v478;
        v477[1] = v479;
        uint64_t v480 = v440[23];
        v481 = (void *)((char *)v438 + v480);
        v482 = (void *)((char *)v439 + v480);
        uint64_t v483 = v482[1];
        void *v481 = *v482;
        v481[1] = v483;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v438, 0, 1, (uint64_t)v440);
        uint64_t v33 = v688;
        uint64_t v41 = v678;
        uint64_t v39 = v679;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, (uint64_t)v41);
      uint64_t v16 = a2;
      uint64_t v14 = a1;
    }
    uint64_t v484 = v33[22];
    v485 = (void *)((char *)v14 + v484);
    v486 = (void *)((char *)v16 + v484);
    v487 = (int *)type metadata accessor for PreExtractedCard(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v486, 1, (uint64_t)v487))
    {
      uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
      memcpy(v485, v486, *(void *)(*(void *)(v488 - 8) + 64));
    }
    else
    {
      uint64_t v489 = v486[1];
      void *v485 = *v486;
      v485[1] = v489;
      uint64_t v490 = v486[3];
      v485[2] = v486[2];
      v485[3] = v490;
      uint64_t v491 = v486[5];
      v485[4] = v486[4];
      v485[5] = v491;
      uint64_t v492 = v486[7];
      v485[6] = v486[6];
      v485[7] = v492;
      uint64_t v493 = v486[9];
      v485[8] = v486[8];
      v485[9] = v493;
      uint64_t v494 = v486[11];
      v485[10] = v486[10];
      v485[11] = v494;
      uint64_t v495 = v487[10];
      v496 = (char *)v485 + v495;
      v497 = (char *)v486 + v495;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v497, 1, v685))
      {
        uint64_t v498 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v496, v497, *(void *)(*(void *)(v498 - 8) + 64));
      }
      else
      {
        v683(v496, v497, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v496, 0, 1, v685);
      }
      uint64_t v499 = v487[11];
      v500 = (char *)v485 + v499;
      v501 = (char *)v486 + v499;
      if (__swift_getEnumTagSinglePayload((uint64_t)v486 + v499, 1, v685))
      {
        uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v500, v501, *(void *)(*(void *)(v502 - 8) + 64));
      }
      else
      {
        v683(v500, v501, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v500, 0, 1, v685);
      }
      uint64_t v503 = v487[12];
      v504 = (void *)((char *)v485 + v503);
      v505 = (void *)((char *)v486 + v503);
      uint64_t v506 = v505[1];
      void *v504 = *v505;
      v504[1] = v506;
      uint64_t v507 = v487[13];
      v508 = (void *)((char *)v485 + v507);
      v509 = (void *)((char *)v486 + v507);
      uint64_t v510 = v509[1];
      void *v508 = *v509;
      v508[1] = v510;
      uint64_t v511 = v487[14];
      v512 = (void *)((char *)v485 + v511);
      v513 = (void *)((char *)v486 + v511);
      uint64_t v514 = v513[1];
      void *v512 = *v513;
      v512[1] = v514;
      uint64_t v515 = v487[15];
      v516 = (char *)v485 + v515;
      v517 = (char *)v486 + v515;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v517, 1, v685))
      {
        uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
      }
      else
      {
        v683(v516, v517, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, v685);
      }
      uint64_t v519 = v487[16];
      v520 = (void *)((char *)v485 + v519);
      v521 = (void *)((char *)v486 + v519);
      uint64_t v522 = v521[1];
      void *v520 = *v521;
      v520[1] = v522;
      uint64_t v523 = v487[17];
      v524 = (void *)((char *)v485 + v523);
      v525 = (void *)((char *)v486 + v523);
      uint64_t v526 = v525[1];
      void *v524 = *v525;
      v524[1] = v526;
      uint64_t v527 = v487[18];
      v528 = (void *)((char *)v485 + v527);
      v529 = (void *)((char *)v486 + v527);
      uint64_t v530 = v529[1];
      void *v528 = *v529;
      v528[1] = v530;
      uint64_t v531 = v487[19];
      v532 = (void *)((char *)v485 + v531);
      v533 = (void *)((char *)v486 + v531);
      uint64_t v534 = v533[1];
      void *v532 = *v533;
      v532[1] = v534;
      uint64_t v535 = v487[20];
      v536 = (void *)((char *)v485 + v535);
      v537 = (void *)((char *)v486 + v535);
      uint64_t v538 = v537[1];
      void *v536 = *v537;
      v536[1] = v538;
      uint64_t v539 = v487[21];
      v540 = (void *)((char *)v485 + v539);
      v541 = (void *)((char *)v486 + v539);
      uint64_t v542 = v541[1];
      void *v540 = *v541;
      v540[1] = v542;
      uint64_t v543 = v487[22];
      v544 = (void *)((char *)v485 + v543);
      v545 = (void *)((char *)v486 + v543);
      uint64_t v546 = v545[1];
      void *v544 = *v545;
      v544[1] = v546;
      uint64_t v547 = v487[23];
      v548 = (void *)((char *)v485 + v547);
      v549 = (void *)((char *)v486 + v547);
      uint64_t v550 = v549[1];
      void *v548 = *v549;
      v548[1] = v550;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v485, 0, 1, (uint64_t)v487);
      uint64_t v16 = a2;
      uint64_t v14 = a1;
      uint64_t v33 = v688;
    }
    uint64_t v551 = v33[23];
    v552 = (void *)((char *)v14 + v551);
    v553 = (void *)((char *)v16 + v551);
    v554 = (int *)type metadata accessor for PreExtractedContact(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v553, 1, (uint64_t)v554))
    {
      uint64_t v555 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
      memcpy(v552, v553, *(void *)(*(void *)(v555 - 8) + 64));
    }
    else
    {
      uint64_t v556 = v553[1];
      void *v552 = *v553;
      v552[1] = v556;
      uint64_t v557 = v553[3];
      v552[2] = v553[2];
      v552[3] = v557;
      uint64_t v558 = v553[5];
      v552[4] = v553[4];
      v552[5] = v558;
      uint64_t v559 = v553[7];
      v552[6] = v553[6];
      v552[7] = v559;
      uint64_t v560 = v553[9];
      v552[8] = v553[8];
      v552[9] = v560;
      uint64_t v561 = v553[11];
      v552[10] = v553[10];
      v552[11] = v561;
      uint64_t v562 = v554[11];
      v680 = (char *)v552 + v562;
      v563 = (char *)v553 + v562;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v563, 1, v685))
      {
        uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v680, v563, *(void *)(*(void *)(v564 - 8) + 64));
      }
      else
      {
        v683(v680, v563, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v680, 0, 1, v685);
      }
      uint64_t v565 = v554[12];
      v566 = (void *)((char *)v552 + v565);
      v567 = (void *)((char *)v553 + v565);
      uint64_t v568 = v567[1];
      void *v566 = *v567;
      v566[1] = v568;
      *(void *)((char *)v552 + v554[13]) = *(void *)((char *)v553 + v554[13]);
      uint64_t v569 = v554[14];
      v570 = (char *)v552 + v569;
      v571 = (char *)v553 + v569;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = a2;
      uint64_t v14 = a1;
      if (__swift_getEnumTagSinglePayload((uint64_t)v571, 1, v685))
      {
        uint64_t v572 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v570, v571, *(void *)(*(void *)(v572 - 8) + 64));
      }
      else
      {
        v683(v570, v571, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v570, 0, 1, v685);
      }
      *(void *)((char *)v552 + v554[15]) = *(void *)((char *)v553 + v554[15]);
      *(void *)((char *)v552 + v554[16]) = *(void *)((char *)v553 + v554[16]);
      uint64_t v573 = v554[17];
      v574 = (void *)((char *)v552 + v573);
      v575 = (void *)((char *)v553 + v573);
      uint64_t v576 = v575[1];
      void *v574 = *v575;
      v574[1] = v576;
      *(void *)((char *)v552 + v554[18]) = *(void *)((char *)v553 + v554[18]);
      *(void *)((char *)v552 + v554[19]) = *(void *)((char *)v553 + v554[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v552, 0, 1, (uint64_t)v554);
      uint64_t v33 = v688;
    }
    uint64_t v577 = v33[24];
    v578 = (void *)((char *)v14 + v577);
    v579 = (void *)((char *)v16 + v577);
    v580 = (int *)type metadata accessor for PreExtractedSharedLink(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v579, 1, (uint64_t)v580))
    {
      uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
      memcpy(v578, v579, *(void *)(*(void *)(v581 - 8) + 64));
    }
    else
    {
      uint64_t v582 = v579[1];
      void *v578 = *v579;
      v578[1] = v582;
      uint64_t v583 = v579[3];
      v578[2] = v579[2];
      v578[3] = v583;
      uint64_t v584 = v579[5];
      v578[4] = v579[4];
      v578[5] = v584;
      uint64_t v585 = v579[7];
      v578[6] = v579[6];
      v578[7] = v585;
      uint64_t v586 = v580[8];
      v587 = (char *)v578 + v586;
      v588 = (char *)v579 + v586;
      uint64_t v589 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v588, 1, v589))
      {
        uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v587, v588, *(void *)(*(void *)(v590 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v589 - 8) + 16))(v587, v588, v589);
        __swift_storeEnumTagSinglePayload((uint64_t)v587, 0, 1, v589);
      }
      uint64_t v591 = v580[9];
      v592 = (void *)((char *)v578 + v591);
      v593 = (void *)((char *)v579 + v591);
      uint64_t v594 = v593[1];
      void *v592 = *v593;
      v592[1] = v594;
      uint64_t v595 = v580[10];
      v596 = (void *)((char *)v578 + v595);
      v597 = (void *)((char *)v579 + v595);
      uint64_t v598 = v597[1];
      void *v596 = *v597;
      v596[1] = v598;
      uint64_t v599 = v580[11];
      v600 = (void *)((char *)v578 + v599);
      v601 = (void *)((char *)v579 + v599);
      uint64_t v602 = v601[1];
      void *v600 = *v601;
      v600[1] = v602;
      uint64_t v603 = v580[12];
      v604 = (char *)v578 + v603;
      v605 = (char *)v579 + v603;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = a2;
      uint64_t v14 = a1;
      if (__swift_getEnumTagSinglePayload((uint64_t)v605, 1, v685))
      {
        uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
      }
      else
      {
        v683(v604, v605, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v685);
      }
      uint64_t v607 = v580[13];
      v608 = (char *)v578 + v607;
      v609 = (char *)v579 + v607;
      if (__swift_getEnumTagSinglePayload((uint64_t)v579 + v607, 1, v685))
      {
        uint64_t v610 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v608, v609, *(void *)(*(void *)(v610 - 8) + 64));
      }
      else
      {
        v683(v608, v609, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v608, 0, 1, v685);
      }
      uint64_t v611 = v580[14];
      v612 = (char *)v578 + v611;
      v613 = (char *)v579 + v611;
      *(void *)v612 = *(void *)v613;
      v612[8] = v613[8];
      uint64_t v614 = v580[15];
      v615 = (void *)((char *)v578 + v614);
      v616 = (void *)((char *)v579 + v614);
      uint64_t v617 = v616[1];
      void *v615 = *v616;
      v615[1] = v617;
      uint64_t v618 = v580[16];
      v619 = (void *)((char *)v578 + v618);
      v620 = (void *)((char *)v579 + v618);
      uint64_t v621 = v620[1];
      void *v619 = *v620;
      v619[1] = v621;
      uint64_t v622 = v580[17];
      v623 = (void *)((char *)v578 + v622);
      v624 = (void *)((char *)v579 + v622);
      uint64_t v625 = v624[1];
      void *v623 = *v624;
      v623[1] = v625;
      uint64_t v626 = v580[18];
      v627 = (void *)((char *)v578 + v626);
      v628 = (void *)((char *)v579 + v626);
      uint64_t v629 = v628[1];
      void *v627 = *v628;
      v627[1] = v629;
      uint64_t v630 = v580[19];
      v631 = (void *)((char *)v578 + v630);
      v632 = (void *)((char *)v579 + v630);
      uint64_t v633 = v632[1];
      void *v631 = *v632;
      v631[1] = v633;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, (uint64_t)v580);
      uint64_t v33 = v688;
    }
    uint64_t v634 = v33[25];
    v635 = (void *)((char *)v14 + v634);
    v636 = (void *)((char *)v16 + v634);
    uint64_t v637 = *(void *)((char *)v16 + v634 + 8);
    if (v637)
    {
      void *v635 = *v636;
      v635[1] = v637;
      uint64_t v638 = v636[3];
      v635[2] = v636[2];
      v635[3] = v638;
      uint64_t v639 = v636[5];
      v635[4] = v636[4];
      v635[5] = v639;
      uint64_t v640 = v636[7];
      v635[6] = v636[6];
      v635[7] = v640;
      uint64_t v641 = v636[9];
      v635[8] = v636[8];
      v635[9] = v641;
      uint64_t v642 = v636[11];
      v635[10] = v636[10];
      v635[11] = v642;
      uint64_t v681 = v636[13];
      v635[12] = v636[12];
      v635[13] = v681;
      uint64_t v686 = v636[15];
      v635[14] = v636[14];
      v635[15] = v686;
      uint64_t v690 = v636[17];
      v635[16] = v636[16];
      v635[17] = v690;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v635, v636, 0x90uLL);
    }
  }
  return v14;
}

uint64_t destroy for EmailDocument(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[19]))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[21];
  uint64_t v8 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  if (!__swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[5];
    uint64_t v10 = type metadata accessor for RentalCarReservation(0);
    if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v9 + *(int *)(v10 + 140);
      if (!__swift_getEnumTagSinglePayload(v11, 1, v5)) {
        v6(v11, v5);
      }
      uint64_t v12 = v9 + *(int *)(v10 + 144);
      if (!__swift_getEnumTagSinglePayload(v12, 1, v5)) {
        v6(v12, v5);
      }
    }
    uint64_t v13 = v7 + v8[6];
    uint64_t v14 = type metadata accessor for TicketedTransportation(0);
    if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v13 + *(int *)(v14 + 112);
      if (!__swift_getEnumTagSinglePayload(v15, 1, v5)) {
        v6(v15, v5);
      }
      uint64_t v16 = v13 + *(int *)(v14 + 116);
      if (!__swift_getEnumTagSinglePayload(v16, 1, v5)) {
        v6(v16, v5);
      }
    }
    uint64_t v17 = v7 + v8[7];
    uint64_t v18 = (int *)type metadata accessor for TicketedShow(0);
    if (!__swift_getEnumTagSinglePayload(v17, 1, (uint64_t)v18))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v17 + v18[29];
      uint64_t v20 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v19, 1, v20)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = v17 + v18[31];
      if (!__swift_getEnumTagSinglePayload(v21, 1, v5)) {
        v6(v21, v5);
      }
      uint64_t v22 = v17 + v18[32];
      if (!__swift_getEnumTagSinglePayload(v22, 1, v5)) {
        v6(v22, v5);
      }
    }
    uint64_t v23 = v7 + v8[8];
    uint64_t v24 = type metadata accessor for Appointment(0);
    if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23 + *(int *)(v24 + 108);
      if (!__swift_getEnumTagSinglePayload(v25, 1, v5)) {
        v6(v25, v5);
      }
      uint64_t v26 = v23 + *(int *)(v24 + 112);
      if (!__swift_getEnumTagSinglePayload(v26, 1, v5)) {
        v6(v26, v5);
      }
    }
    uint64_t v27 = v7 + v8[9];
    uint64_t v28 = (int *)type metadata accessor for Party(0);
    if (!__swift_getEnumTagSinglePayload(v27, 1, (uint64_t)v28))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = v27 + v28[24];
      if (!__swift_getEnumTagSinglePayload(v29, 1, v5)) {
        v6(v29, v5);
      }
      uint64_t v30 = v27 + v28[25];
      if (!__swift_getEnumTagSinglePayload(v30, 1, v5)) {
        v6(v30, v5);
      }
      uint64_t v31 = v27 + v28[26];
      uint64_t v32 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
      }
    }
    uint64_t v33 = v7 + v8[10];
    uint64_t v34 = (int *)type metadata accessor for Trip(0);
    if (!__swift_getEnumTagSinglePayload(v33, 1, (uint64_t)v34))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v33 + v34[22];
      if (!__swift_getEnumTagSinglePayload(v35, 1, v5)) {
        v6(v35, v5);
      }
      uint64_t v36 = v33 + v34[23];
      if (!__swift_getEnumTagSinglePayload(v36, 1, v5)) {
        v6(v36, v5);
      }
      uint64_t v37 = v33 + v34[25];
      uint64_t v38 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v37, 1, v38)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
      }
    }
    uint64_t v39 = v7 + v8[11];
    uint64_t v40 = (int *)type metadata accessor for FlightReservation(0);
    if (!__swift_getEnumTagSinglePayload(v39, 1, (uint64_t)v40))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v39 + v40[13];
      uint64_t v42 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v41, 1, v42)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      }
      uint64_t v73 = v6;
      uint64_t v43 = v39 + v40[14];
      if (!__swift_getEnumTagSinglePayload(v43, 1, v42)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v43, v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v39 + v40[18];
      uint64_t v45 = type metadata accessor for DateComponents();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8);
      v46(v44, v45);
      v46(v39 + v40[19], v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v39 + v40[38];
      uint64_t v6 = v73;
      if (!__swift_getEnumTagSinglePayload(v47, 1, v5)) {
        v73(v47, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v48 = v7 + v8[12];
    uint64_t v49 = type metadata accessor for HotelReservation(0);
    if (!__swift_getEnumTagSinglePayload(v48, 1, v49))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = v48 + *(int *)(v49 + 56);
      uint64_t v51 = type metadata accessor for DateComponents();
      if (!__swift_getEnumTagSinglePayload(v50, 1, v51)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
      }
      uint64_t v52 = v48 + *(int *)(v49 + 60);
      if (!__swift_getEnumTagSinglePayload(v52, 1, v51)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v52, v51);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v53 = v7 + v8[13];
    uint64_t v54 = type metadata accessor for RestaurantReservation(0);
    if (!__swift_getEnumTagSinglePayload(v53, 1, v54))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v55 = v53 + *(int *)(v54 + 56);
      uint64_t v56 = type metadata accessor for DateComponents();
      if (!__swift_getEnumTagSinglePayload(v55, 1, v56)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v57 = a1 + a2[22];
  uint64_t v58 = (int *)type metadata accessor for PreExtractedCard(0);
  if (!__swift_getEnumTagSinglePayload(v57, 1, (uint64_t)v58))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v57 + v58[10];
    if (!__swift_getEnumTagSinglePayload(v59, 1, v5)) {
      v6(v59, v5);
    }
    uint64_t v60 = v57 + v58[11];
    if (!__swift_getEnumTagSinglePayload(v60, 1, v5)) {
      v6(v60, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = v57 + v58[15];
    if (!__swift_getEnumTagSinglePayload(v61, 1, v5)) {
      v6(v61, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v62 = a1 + a2[23];
  uint64_t v63 = type metadata accessor for PreExtractedContact(0);
  if (!__swift_getEnumTagSinglePayload(v62, 1, v63))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = v62 + *(int *)(v63 + 44);
    if (!__swift_getEnumTagSinglePayload(v64, 1, v5)) {
      v6(v64, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = v62 + *(int *)(v63 + 56);
    if (!__swift_getEnumTagSinglePayload(v65, 1, v5)) {
      v6(v65, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v66 = a1 + a2[24];
  uint64_t v67 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (!__swift_getEnumTagSinglePayload(v66, 1, (uint64_t)v67))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = v66 + v67[8];
    uint64_t v69 = type metadata accessor for URL();
    if (!__swift_getEnumTagSinglePayload(v68, 1, v69)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v68, v69);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v70 = v66 + v67[12];
    if (!__swift_getEnumTagSinglePayload(v70, 1, v5)) {
      v6(v70, v5);
    }
    uint64_t v71 = v66 + v67[13];
    if (!__swift_getEnumTagSinglePayload(v71, 1, v5)) {
      v6(v71, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + a2[25] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for EmailDocument(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v679 = a2[11];
  uint64_t v10 = a3[12];
  uint64_t v685 = (char *)a1 + v10;
  uint64_t v682 = (char *)a2 + v10;
  a1[10] = a2[10];
  a1[11] = v679;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = a1;
  swift_bridgeObjectRetain();
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = v685;
  uint64_t v686 = v11;
  uint64_t v16 = v11;
  uint64_t v17 = a3;
  v680 = v12;
  ((void (*)(char *, char *, uint64_t))v12)(v15, v682, v16);
  uint64_t v18 = v13;
  uint64_t v19 = a3[14];
  *(void *)((char *)v13 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)v13 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[16];
  *(void *)((char *)v13 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)v13 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v21 = a3[18];
  *((unsigned char *)v13 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  uint64_t v22 = (void *)((char *)v13 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[19];
  uint64_t v26 = (void *)((char *)v13 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    uint64_t v29 = *((void *)v27 + 1);
    uint64_t v30 = *((void *)v27 + 2);
    *uint64_t v26 = v28;
    v26[1] = v29;
    uint64_t v31 = *((void *)v27 + 3);
    uint64_t v32 = *((void *)v27 + 4);
    v26[2] = v30;
    v26[3] = v31;
    v26[4] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *((_OWORD *)v27 + 1);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v33;
    v26[4] = *((void *)v27 + 4);
  }
  uint64_t v34 = a3[20];
  uint64_t v35 = a3[21];
  uint64_t v36 = (void *)((char *)v18 + v34);
  uint64_t v37 = (void *)((char *)v14 + v34);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = (void *)((char *)v18 + v35);
  uint64_t v40 = (void *)((char *)v14 + v35);
  uint64_t v41 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  swift_bridgeObjectRetain();
  v683 = v18;
  uint64_t v677 = v14;
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, (uint64_t)v41))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    uint64_t v43 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v43;
    uint64_t v44 = v41[5];
    uint64_t v45 = (void *)((char *)v39 + v44);
    uint64_t v46 = (void *)((char *)v40 + v44);
    uint64_t v47 = type metadata accessor for RentalCarReservation(0);
    swift_bridgeObjectRetain();
    uint64_t v674 = v41;
    uint64_t v675 = v39;
    v672 = v40;
    if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v49 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v49;
      uint64_t v50 = v46[3];
      v45[2] = v46[2];
      v45[3] = v50;
      uint64_t v51 = v46[5];
      v45[4] = v46[4];
      v45[5] = v51;
      uint64_t v52 = v46[7];
      v45[6] = v46[6];
      v45[7] = v52;
      uint64_t v53 = v46[9];
      v45[8] = v46[8];
      v45[9] = v53;
      uint64_t v54 = v46[11];
      v45[10] = v46[10];
      v45[11] = v54;
      uint64_t v55 = v46[13];
      v45[12] = v46[12];
      v45[13] = v55;
      uint64_t v56 = v46[15];
      v45[14] = v46[14];
      v45[15] = v56;
      *((unsigned char *)v45 + 128) = *((unsigned char *)v46 + 128);
      *(_WORD *)((char *)v45 + 129) = *(_WORD *)((char *)v46 + 129);
      uint64_t v57 = v46[18];
      v45[17] = v46[17];
      v45[18] = v57;
      uint64_t v58 = v46[20];
      v45[19] = v46[19];
      v45[20] = v58;
      uint64_t v59 = v46[22];
      v45[21] = v46[21];
      v45[22] = v59;
      uint64_t v60 = v46[24];
      v45[23] = v46[23];
      v45[24] = v60;
      uint64_t v61 = v46[26];
      v45[25] = v46[25];
      v45[26] = v61;
      uint64_t v62 = v46[28];
      v45[27] = v46[27];
      v45[28] = v62;
      uint64_t v63 = v46[30];
      v45[29] = v46[29];
      v45[30] = v63;
      uint64_t v64 = v46[32];
      v45[31] = v46[31];
      v45[32] = v64;
      uint64_t v65 = v46[34];
      v45[33] = v46[33];
      v45[34] = v65;
      uint64_t v66 = v46[36];
      v45[35] = v46[35];
      v45[36] = v66;
      uint64_t v67 = v46[38];
      v45[37] = v46[37];
      v45[38] = v67;
      uint64_t v68 = v46[40];
      v45[39] = v46[39];
      v45[40] = v68;
      uint64_t v69 = v46[42];
      v45[41] = v46[41];
      v45[42] = v69;
      uint64_t v70 = v46[44];
      v45[43] = v46[43];
      v45[44] = v70;
      uint64_t v71 = v46[46];
      v45[45] = v46[45];
      v45[46] = v71;
      uint64_t v72 = v46[47];
      *((unsigned char *)v45 + 384) = *((unsigned char *)v46 + 384);
      v45[47] = v72;
      uint64_t v73 = v46[50];
      v45[49] = v46[49];
      v45[50] = v73;
      uint64_t v74 = v46[52];
      v45[51] = v46[51];
      v45[52] = v74;
      uint64_t v75 = *(int *)(v47 + 140);
      __dst = (char *)v45 + v75;
      uint64_t v76 = (char *)v46 + v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v686))
      {
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dst, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(__dst, v76, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v686);
      }
      uint64_t v78 = *(int *)(v47 + 144);
      uint64_t v79 = (char *)v45 + v78;
      v80 = (char *)v46 + v78;
      if (__swift_getEnumTagSinglePayload((uint64_t)v46 + v78, 1, v686))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v79, v80, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v686);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    uint64_t v82 = v41[6];
    uint64_t v83 = (void *)((char *)v39 + v82);
    v84 = (void *)((char *)v40 + v82);
    uint64_t v85 = type metadata accessor for TicketedTransportation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
    {
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
      memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      uint64_t v87 = v84[1];
      *uint64_t v83 = *v84;
      v83[1] = v87;
      uint64_t v88 = v84[3];
      v83[2] = v84[2];
      v83[3] = v88;
      uint64_t v89 = v84[5];
      v83[4] = v84[4];
      v83[5] = v89;
      uint64_t v90 = v84[7];
      v83[6] = v84[6];
      v83[7] = v90;
      uint64_t v91 = v84[9];
      v83[8] = v84[8];
      v83[9] = v91;
      uint64_t v92 = v84[11];
      v83[10] = v84[10];
      v83[11] = v92;
      uint64_t v93 = v84[13];
      v83[12] = v84[12];
      v83[13] = v93;
      uint64_t v94 = v84[15];
      v83[14] = v84[14];
      v83[15] = v94;
      *((unsigned char *)v83 + 128) = *((unsigned char *)v84 + 128);
      *(_WORD *)((char *)v83 + 129) = *(_WORD *)((char *)v84 + 129);
      uint64_t v95 = v84[18];
      v83[17] = v84[17];
      v83[18] = v95;
      uint64_t v96 = v84[20];
      v83[19] = v84[19];
      v83[20] = v96;
      uint64_t v97 = v84[22];
      v83[21] = v84[21];
      v83[22] = v97;
      uint64_t v98 = v84[24];
      v83[23] = v84[23];
      v83[24] = v98;
      v657 = (void *)v84[26];
      v83[25] = v84[25];
      v83[26] = v657;
      uint64_t v99 = v84[28];
      v83[27] = v84[27];
      v83[28] = v99;
      uint64_t v100 = v84[30];
      v83[29] = v84[29];
      v83[30] = v100;
      uint64_t v101 = v84[32];
      v83[31] = v84[31];
      v83[32] = v101;
      uint64_t v102 = v84[34];
      v83[33] = v84[33];
      v83[34] = v102;
      uint64_t v103 = v84[36];
      uint64_t v104 = v84[35];
      *((unsigned char *)v83 + 296) = *((unsigned char *)v84 + 296);
      v83[35] = v104;
      v83[36] = v103;
      uint64_t v105 = *(int *)(v85 + 112);
      __dsta = (char *)v83 + v105;
      v106 = (char *)v84 + v105;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v686))
      {
        uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dsta, v106, *(void *)(*(void *)(v107 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(__dsta, v106, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v686);
      }
      uint64_t v108 = *(int *)(v85 + 116);
      v109 = (char *)v83 + v108;
      v110 = (char *)v84 + v108;
      if (__swift_getEnumTagSinglePayload((uint64_t)v84 + v108, 1, v686))
      {
        uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v109, v110, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v686);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    uint64_t v112 = v41[7];
    v113 = (void *)((char *)v39 + v112);
    v114 = (void *)((char *)v40 + v112);
    v115 = (int *)type metadata accessor for TicketedShow(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, (uint64_t)v115))
    {
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
      memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
    }
    else
    {
      uint64_t v117 = v114[1];
      void *v113 = *v114;
      v113[1] = v117;
      uint64_t v118 = v114[3];
      v113[2] = v114[2];
      v113[3] = v118;
      uint64_t v119 = v114[5];
      v113[4] = v114[4];
      v113[5] = v119;
      uint64_t v120 = v114[7];
      v113[6] = v114[6];
      v113[7] = v120;
      uint64_t v121 = v114[9];
      v113[8] = v114[8];
      v113[9] = v121;
      uint64_t v122 = v114[11];
      v113[10] = v114[10];
      v113[11] = v122;
      uint64_t v123 = v114[13];
      v113[12] = v114[12];
      v113[13] = v123;
      uint64_t v124 = v114[15];
      v113[14] = v114[14];
      v113[15] = v124;
      *((unsigned char *)v113 + 128) = *((unsigned char *)v114 + 128);
      *(_WORD *)((char *)v113 + 129) = *(_WORD *)((char *)v114 + 129);
      uint64_t v125 = v114[18];
      v113[17] = v114[17];
      v113[18] = v125;
      uint64_t v126 = v114[20];
      v113[19] = v114[19];
      v113[20] = v126;
      uint64_t v127 = v114[22];
      v113[21] = v114[21];
      v113[22] = v127;
      uint64_t v128 = v114[24];
      v113[23] = v114[23];
      v113[24] = v128;
      uint64_t v129 = v114[26];
      v113[25] = v114[25];
      v113[26] = v129;
      uint64_t v130 = v114[28];
      v113[27] = v114[27];
      v113[28] = v130;
      v658 = (void *)v114[30];
      v113[29] = v114[29];
      v113[30] = v658;
      uint64_t v131 = v114[32];
      v113[31] = v114[31];
      v113[32] = v131;
      uint64_t v132 = v114[34];
      v113[33] = v114[33];
      v113[34] = v132;
      uint64_t v133 = v114[36];
      uint64_t v134 = v114[35];
      *((unsigned char *)v113 + 296) = *((unsigned char *)v114 + 296);
      v113[35] = v134;
      v113[36] = v133;
      uint64_t v135 = v114[39];
      v113[38] = v114[38];
      v113[39] = v135;
      uint64_t v136 = v115[29];
      __dstb = (char *)v113 + v136;
      v137 = (char *)v114 + v136;
      uint64_t v138 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v138))
      {
        uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(__dstb, v137, *(void *)(*(void *)(v139 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(__dstb, v137, v138);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v138);
      }
      uint64_t v140 = v115[30];
      v141 = (void *)((char *)v113 + v140);
      v142 = (void *)((char *)v114 + v140);
      uint64_t v143 = v142[1];
      void *v141 = *v142;
      v141[1] = v143;
      uint64_t v144 = v115[31];
      v145 = (char *)v113 + v144;
      v146 = (char *)v114 + v144;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, v686))
      {
        uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v145, v146, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v686);
      }
      uint64_t v148 = v115[32];
      v149 = (char *)v113 + v148;
      v150 = (char *)v114 + v148;
      if (__swift_getEnumTagSinglePayload((uint64_t)v114 + v148, 1, v686))
      {
        uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v149, v150, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v686);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, (uint64_t)v115);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    uint64_t v152 = v41[8];
    v153 = (void *)((char *)v39 + v152);
    v154 = (void *)((char *)v40 + v152);
    uint64_t v155 = type metadata accessor for Appointment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v155))
    {
      uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
      memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
    }
    else
    {
      uint64_t v157 = v154[1];
      void *v153 = *v154;
      v153[1] = v157;
      uint64_t v158 = v154[3];
      v153[2] = v154[2];
      v153[3] = v158;
      uint64_t v159 = v154[5];
      v153[4] = v154[4];
      v153[5] = v159;
      uint64_t v160 = v154[7];
      v153[6] = v154[6];
      v153[7] = v160;
      uint64_t v161 = v154[9];
      v153[8] = v154[8];
      v153[9] = v161;
      uint64_t v162 = v154[11];
      v153[10] = v154[10];
      v153[11] = v162;
      uint64_t v163 = v154[13];
      v153[12] = v154[12];
      v153[13] = v163;
      uint64_t v164 = v154[15];
      v153[14] = v154[14];
      v153[15] = v164;
      *((unsigned char *)v153 + 128) = *((unsigned char *)v154 + 128);
      *(_WORD *)((char *)v153 + 129) = *(_WORD *)((char *)v154 + 129);
      uint64_t v165 = v154[18];
      v153[17] = v154[17];
      v153[18] = v165;
      uint64_t v166 = v154[20];
      v153[19] = v154[19];
      v153[20] = v166;
      uint64_t v167 = v154[22];
      v153[21] = v154[21];
      v153[22] = v167;
      uint64_t v168 = v154[24];
      v153[23] = v154[23];
      v153[24] = v168;
      uint64_t v169 = v154[26];
      v153[25] = v154[25];
      v153[26] = v169;
      uint64_t v170 = v154[28];
      v153[27] = v154[27];
      v153[28] = v170;
      uint64_t v171 = v154[30];
      v153[29] = v154[29];
      v153[30] = v171;
      uint64_t v172 = v154[32];
      v153[31] = v154[31];
      v153[32] = v172;
      uint64_t v173 = v154[34];
      uint64_t v174 = v154[33];
      *((unsigned char *)v153 + 280) = *((unsigned char *)v154 + 280);
      v153[33] = v174;
      v153[34] = v173;
      uint64_t v175 = v154[37];
      v153[36] = v154[36];
      v153[37] = v175;
      uint64_t v176 = *(int *)(v155 + 108);
      __dstc = (char *)v153 + v176;
      v177 = (char *)v154 + v176;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v177, 1, v686))
      {
        uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstc, v177, *(void *)(*(void *)(v178 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(__dstc, v177, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v686);
      }
      uint64_t v179 = *(int *)(v155 + 112);
      v180 = (char *)v153 + v179;
      v181 = (char *)v154 + v179;
      if (__swift_getEnumTagSinglePayload((uint64_t)v154 + v179, 1, v686))
      {
        uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v180, v181, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v686);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v153, 0, 1, v155);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    uint64_t v183 = v41[9];
    v184 = (void *)((char *)v39 + v183);
    v185 = (void *)((char *)v40 + v183);
    uint64_t v186 = (int *)type metadata accessor for Party(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, (uint64_t)v186))
    {
      uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
      memcpy(v184, v185, *(void *)(*(void *)(v187 - 8) + 64));
    }
    else
    {
      uint64_t v188 = v185[1];
      void *v184 = *v185;
      v184[1] = v188;
      uint64_t v189 = v185[3];
      v184[2] = v185[2];
      v184[3] = v189;
      uint64_t v190 = v185[5];
      v184[4] = v185[4];
      v184[5] = v190;
      uint64_t v191 = v185[7];
      v184[6] = v185[6];
      v184[7] = v191;
      uint64_t v192 = v185[9];
      v184[8] = v185[8];
      v184[9] = v192;
      uint64_t v193 = v185[11];
      v184[10] = v185[10];
      v184[11] = v193;
      uint64_t v194 = v185[13];
      v184[12] = v185[12];
      v184[13] = v194;
      uint64_t v195 = v185[15];
      v184[14] = v185[14];
      v184[15] = v195;
      *((unsigned char *)v184 + 128) = *((unsigned char *)v185 + 128);
      *(_WORD *)((char *)v184 + 129) = *(_WORD *)((char *)v185 + 129);
      uint64_t v196 = v185[18];
      v184[17] = v185[17];
      v184[18] = v196;
      uint64_t v197 = v185[20];
      v184[19] = v185[19];
      v184[20] = v197;
      uint64_t v198 = v185[22];
      v184[21] = v185[21];
      v184[22] = v198;
      uint64_t v199 = v185[24];
      v184[23] = v185[23];
      v184[24] = v199;
      uint64_t v200 = v185[26];
      v184[25] = v185[25];
      v184[26] = v200;
      uint64_t v201 = v185[28];
      v184[27] = v185[27];
      v184[28] = v201;
      uint64_t v202 = v185[30];
      v184[29] = v185[29];
      v184[30] = v202;
      v184[31] = v185[31];
      uint64_t v203 = v186[24];
      __dstd = (char *)v184 + v203;
      v204 = (char *)v185 + v203;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v204, 1, v686))
      {
        uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstd, v204, *(void *)(*(void *)(v205 - 8) + 64));
      }
      else
      {
        v680();
        __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v686);
      }
      uint64_t v206 = v186[25];
      v207 = (char *)v184 + v206;
      v208 = (char *)v185 + v206;
      if (__swift_getEnumTagSinglePayload((uint64_t)v185 + v206, 1, v686))
      {
        uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v207, v208, *(void *)(*(void *)(v209 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v207, v208, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v686);
      }
      uint64_t v210 = v186[26];
      v211 = (char *)v184 + v210;
      v212 = (char *)v185 + v210;
      uint64_t v213 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v213))
      {
        uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v211, v212, *(void *)(*(void *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16))(v211, v212, v213);
        __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v213);
      }
      uint64_t v40 = v672;
      __swift_storeEnumTagSinglePayload((uint64_t)v184, 0, 1, (uint64_t)v186);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    uint64_t v215 = v41[10];
    v216 = (void *)((char *)v39 + v215);
    v217 = (void *)((char *)v40 + v215);
    uint64_t v218 = (int *)type metadata accessor for Trip(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v217, 1, (uint64_t)v218))
    {
      uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
      memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
    }
    else
    {
      uint64_t v220 = v217[1];
      void *v216 = *v217;
      v216[1] = v220;
      uint64_t v221 = v217[3];
      v216[2] = v217[2];
      v216[3] = v221;
      uint64_t v222 = v217[5];
      v216[4] = v217[4];
      v216[5] = v222;
      uint64_t v223 = v217[7];
      v216[6] = v217[6];
      v216[7] = v223;
      uint64_t v224 = v217[9];
      v216[8] = v217[8];
      v216[9] = v224;
      uint64_t v225 = v217[11];
      v216[10] = v217[10];
      v216[11] = v225;
      uint64_t v226 = v217[13];
      v216[12] = v217[12];
      v216[13] = v226;
      uint64_t v227 = v217[15];
      v216[14] = v217[14];
      v216[15] = v227;
      *((unsigned char *)v216 + 128) = *((unsigned char *)v217 + 128);
      *(_WORD *)((char *)v216 + 129) = *(_WORD *)((char *)v217 + 129);
      uint64_t v228 = v217[18];
      v216[17] = v217[17];
      v216[18] = v228;
      uint64_t v229 = v217[20];
      v216[19] = v217[19];
      v216[20] = v229;
      uint64_t v230 = v217[22];
      v216[21] = v217[21];
      v216[22] = v230;
      uint64_t v231 = v217[24];
      v216[23] = v217[23];
      v216[24] = v231;
      uint64_t v232 = v217[26];
      v216[25] = v217[25];
      v216[26] = v232;
      v216[27] = v217[27];
      uint64_t v233 = v218[22];
      __dste = (char *)v216 + v233;
      v234 = (char *)v217 + v233;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v686))
      {
        uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dste, v234, *(void *)(*(void *)(v235 - 8) + 64));
      }
      else
      {
        v680();
        __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v686);
      }
      uint64_t v236 = v218[23];
      v237 = (char *)v216 + v236;
      v238 = (char *)v217 + v236;
      if (__swift_getEnumTagSinglePayload((uint64_t)v217 + v236, 1, v686))
      {
        uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v237, v238, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v686);
      }
      uint64_t v240 = v218[24];
      v241 = (char *)v216 + v240;
      v242 = (char *)v217 + v240;
      *(void *)v241 = *(void *)v242;
      v241[8] = v242[8];
      uint64_t v243 = v218[25];
      v244 = (char *)v216 + v243;
      v245 = (char *)v217 + v243;
      uint64_t v246 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, v246))
      {
        uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16))(v244, v245, v246);
        __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v246);
      }
      uint64_t v40 = v672;
      __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, (uint64_t)v218);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    uint64_t v248 = v41[11];
    v249 = (void *)((char *)v39 + v248);
    v250 = (void *)((char *)v40 + v248);
    v251 = (int *)type metadata accessor for FlightReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v250, 1, (uint64_t)v251))
    {
      uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
      memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
    }
    else
    {
      uint64_t v253 = v250[1];
      void *v249 = *v250;
      v249[1] = v253;
      uint64_t v254 = v250[3];
      v249[2] = v250[2];
      v249[3] = v254;
      uint64_t v255 = v250[5];
      v249[4] = v250[4];
      v249[5] = v255;
      uint64_t v256 = v250[7];
      v249[6] = v250[6];
      v249[7] = v256;
      uint64_t v257 = v250[9];
      v249[8] = v250[8];
      v249[9] = v257;
      uint64_t v258 = v250[11];
      v249[10] = v250[10];
      v249[11] = v258;
      *((unsigned char *)v249 + 96) = *((unsigned char *)v250 + 96);
      uint64_t v259 = v250[14];
      v249[13] = v250[13];
      v249[14] = v259;
      uint64_t v260 = v251[13];
      __dstf = (char *)v249 + v260;
      uint64_t v654 = (char *)v250 + v260;
      uint64_t v261 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v654, 1, v261))
      {
        uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(__dstf, v654, *(void *)(*(void *)(v262 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(__dstf, v654, v261);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v261);
      }
      uint64_t v263 = v251[14];
      v264 = (char *)v249 + v263;
      v265 = (char *)v250 + v263;
      if (__swift_getEnumTagSinglePayload((uint64_t)v250 + v263, 1, v261))
      {
        uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v264, v265, v261);
        __swift_storeEnumTagSinglePayload((uint64_t)v264, 0, 1, v261);
      }
      uint64_t v267 = v251[15];
      v268 = (void *)((char *)v249 + v267);
      v269 = (void *)((char *)v250 + v267);
      uint64_t v270 = v269[1];
      void *v268 = *v269;
      v268[1] = v270;
      uint64_t v271 = v251[16];
      v272 = (void *)((char *)v249 + v271);
      v273 = (void *)((char *)v250 + v271);
      uint64_t v274 = v273[1];
      void *v272 = *v273;
      v272[1] = v274;
      uint64_t v275 = v251[17];
      v276 = (void *)((char *)v249 + v275);
      v277 = (void *)((char *)v250 + v275);
      uint64_t v278 = v277[1];
      void *v276 = *v277;
      v276[1] = v278;
      uint64_t v279 = v251[18];
      __dsth = (char *)v249 + v279;
      v280 = (char *)v250 + v279;
      uint64_t v281 = type metadata accessor for DateComponents();
      v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v282(__dsth, v280, v281);
      v282((char *)v249 + v251[19], (char *)v250 + v251[19], v281);
      uint64_t v283 = v251[20];
      v284 = (void *)((char *)v249 + v283);
      v285 = (void *)((char *)v250 + v283);
      uint64_t v286 = v285[1];
      void *v284 = *v285;
      v284[1] = v286;
      uint64_t v287 = v251[21];
      v288 = (void *)((char *)v249 + v287);
      v289 = (void *)((char *)v250 + v287);
      uint64_t v650 = v289[1];
      void *v288 = *v289;
      v288[1] = v650;
      uint64_t v290 = v251[22];
      uint64_t v291 = (void *)((char *)v249 + v290);
      v292 = (void *)((char *)v250 + v290);
      uint64_t v293 = v292[1];
      *uint64_t v291 = *v292;
      v291[1] = v293;
      uint64_t v294 = v251[23];
      uint64_t v295 = (void *)((char *)v249 + v294);
      v296 = (void *)((char *)v250 + v294);
      __dsti = (void *)v296[1];
      *uint64_t v295 = *v296;
      v295[1] = __dsti;
      uint64_t v297 = v251[24];
      uint64_t v298 = (void *)((char *)v249 + v297);
      v299 = (void *)((char *)v250 + v297);
      uint64_t v655 = v299[1];
      *uint64_t v298 = *v299;
      v298[1] = v655;
      uint64_t v300 = v251[25];
      uint64_t v301 = (void *)((char *)v249 + v300);
      v302 = (void *)((char *)v250 + v300);
      uint64_t v651 = v302[1];
      *uint64_t v301 = *v302;
      v301[1] = v651;
      uint64_t v303 = v251[26];
      uint64_t v304 = (void *)((char *)v249 + v303);
      v305 = (void *)((char *)v250 + v303);
      uint64_t v649 = v305[1];
      *uint64_t v304 = *v305;
      v304[1] = v649;
      uint64_t v306 = v251[27];
      uint64_t v307 = (void *)((char *)v249 + v306);
      v308 = (void *)((char *)v250 + v306);
      uint64_t v648 = v308[1];
      *uint64_t v307 = *v308;
      v307[1] = v648;
      uint64_t v309 = v251[28];
      uint64_t v310 = (void *)((char *)v249 + v309);
      v311 = (void *)((char *)v250 + v309);
      uint64_t v647 = v311[1];
      *uint64_t v310 = *v311;
      v310[1] = v647;
      uint64_t v312 = v251[29];
      uint64_t v313 = (void *)((char *)v249 + v312);
      v314 = (void *)((char *)v250 + v312);
      uint64_t v646 = v314[1];
      *uint64_t v313 = *v314;
      v313[1] = v646;
      uint64_t v315 = v251[30];
      uint64_t v316 = (void *)((char *)v249 + v315);
      v317 = (void *)((char *)v250 + v315);
      uint64_t v645 = v317[1];
      *uint64_t v316 = *v317;
      v316[1] = v645;
      uint64_t v318 = v251[31];
      uint64_t v319 = (void *)((char *)v249 + v318);
      v320 = (void *)((char *)v250 + v318);
      uint64_t v644 = v320[1];
      *uint64_t v319 = *v320;
      v319[1] = v644;
      uint64_t v321 = v251[32];
      uint64_t v322 = (void *)((char *)v249 + v321);
      v323 = (void *)((char *)v250 + v321);
      uint64_t v324 = v323[1];
      *uint64_t v322 = *v323;
      v322[1] = v324;
      *(void *)((char *)v249 + v251[33]) = *(void *)((char *)v250 + v251[33]);
      *(void *)((char *)v249 + v251[34]) = *(void *)((char *)v250 + v251[34]);
      uint64_t v325 = v251[35];
      uint64_t v326 = (void *)((char *)v249 + v325);
      v327 = (void *)((char *)v250 + v325);
      uint64_t v328 = v327[1];
      *uint64_t v326 = *v327;
      v326[1] = v328;
      uint64_t v329 = v251[36];
      uint64_t v330 = (void *)((char *)v249 + v329);
      v331 = (void *)((char *)v250 + v329);
      uint64_t v332 = v331[1];
      *uint64_t v330 = *v331;
      v330[1] = v332;
      uint64_t v333 = v251[37];
      uint64_t v334 = (void *)((char *)v249 + v333);
      v335 = (void *)((char *)v250 + v333);
      uint64_t v336 = v335[1];
      *uint64_t v334 = *v335;
      v334[1] = v336;
      uint64_t v337 = v251[38];
      v659 = (char *)v249 + v337;
      uint64_t v338 = (char *)v250 + v337;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v338, 1, v686))
      {
        uint64_t v339 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v659, v338, *(void *)(*(void *)(v339 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v680)(v659, v338, v686);
        __swift_storeEnumTagSinglePayload((uint64_t)v659, 0, 1, v686);
      }
      uint64_t v340 = v251[39];
      uint64_t v341 = (void *)((char *)v249 + v340);
      v342 = (void *)((char *)v250 + v340);
      uint64_t v343 = v342[1];
      *uint64_t v341 = *v342;
      v341[1] = v343;
      uint64_t v344 = v251[40];
      uint64_t v345 = (void *)((char *)v249 + v344);
      v346 = (void *)((char *)v250 + v344);
      uint64_t v347 = v346[1];
      *uint64_t v345 = *v346;
      v345[1] = v347;
      uint64_t v348 = v251[41];
      uint64_t v349 = (char *)v249 + v348;
      v350 = (char *)v250 + v348;
      v349[8] = v350[8];
      *(void *)uint64_t v349 = *(void *)v350;
      uint64_t v351 = v251[42];
      uint64_t v352 = (void *)((char *)v249 + v351);
      v353 = (void *)((char *)v250 + v351);
      uint64_t v354 = v353[1];
      *uint64_t v352 = *v353;
      v352[1] = v354;
      uint64_t v355 = v251[43];
      uint64_t v356 = (char *)v249 + v355;
      v357 = (char *)v250 + v355;
      *(_OWORD *)uint64_t v356 = *(_OWORD *)v357;
      *(void *)(v356 + 13) = *(void *)(v357 + 13);
      uint64_t v358 = v251[44];
      uint64_t v359 = (void *)((char *)v249 + v358);
      v360 = (void *)((char *)v250 + v358);
      uint64_t v361 = v360[1];
      *uint64_t v359 = *v360;
      v359[1] = v361;
      uint64_t v362 = v251[45];
      uint64_t v363 = (void *)((char *)v249 + v362);
      v364 = (void *)((char *)v250 + v362);
      uint64_t v365 = v364[1];
      *uint64_t v363 = *v364;
      v363[1] = v365;
      uint64_t v366 = v251[46];
      uint64_t v367 = (void *)((char *)v249 + v366);
      v368 = (void *)((char *)v250 + v366);
      uint64_t v369 = v368[1];
      *uint64_t v367 = *v368;
      v367[1] = v369;
      uint64_t v370 = v251[47];
      uint64_t v371 = (void *)((char *)v249 + v370);
      v372 = (void *)((char *)v250 + v370);
      uint64_t v373 = v372[1];
      *uint64_t v371 = *v372;
      v371[1] = v373;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, (uint64_t)v251);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
      uint64_t v40 = v672;
    }
    uint64_t v374 = v41[12];
    uint64_t v375 = (void *)((char *)v39 + v374);
    v376 = (void *)((char *)v40 + v374);
    v377 = (int *)type metadata accessor for HotelReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v376, 1, (uint64_t)v377))
    {
      uint64_t v378 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
      memcpy(v375, v376, *(void *)(*(void *)(v378 - 8) + 64));
    }
    else
    {
      uint64_t v379 = v376[1];
      *uint64_t v375 = *v376;
      v375[1] = v379;
      uint64_t v380 = v376[3];
      v375[2] = v376[2];
      v375[3] = v380;
      uint64_t v381 = v376[5];
      v375[4] = v376[4];
      v375[5] = v381;
      uint64_t v382 = v376[7];
      v375[6] = v376[6];
      v375[7] = v382;
      uint64_t v383 = v376[9];
      v375[8] = v376[8];
      v375[9] = v383;
      uint64_t v384 = v376[11];
      v375[10] = v376[10];
      v375[11] = v384;
      *((unsigned char *)v375 + 96) = *((unsigned char *)v376 + 96);
      uint64_t v385 = v376[14];
      v375[13] = v376[13];
      v375[14] = v385;
      uint64_t v386 = v376[16];
      v375[15] = v376[15];
      v375[16] = v386;
      uint64_t v387 = v377[14];
      __dstg = (char *)v375 + v387;
      uint64_t v652 = (char *)v376 + v387;
      uint64_t v388 = type metadata accessor for DateComponents();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v652, 1, v388))
      {
        uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(__dstg, v652, *(void *)(*(void *)(v389 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 16))(__dstg, v652, v388);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstg, 0, 1, v388);
      }
      uint64_t v390 = v377[15];
      uint64_t v391 = (char *)v375 + v390;
      v392 = (char *)v376 + v390;
      if (__swift_getEnumTagSinglePayload((uint64_t)v376 + v390, 1, v388))
      {
        uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v391, v392, *(void *)(*(void *)(v393 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 16))(v391, v392, v388);
        __swift_storeEnumTagSinglePayload((uint64_t)v391, 0, 1, v388);
      }
      uint64_t v394 = v377[16];
      uint64_t v395 = (void *)((char *)v375 + v394);
      v396 = (void *)((char *)v376 + v394);
      uint64_t v397 = v396[1];
      *uint64_t v395 = *v396;
      v395[1] = v397;
      uint64_t v398 = v377[17];
      uint64_t v399 = (void *)((char *)v375 + v398);
      v400 = (void *)((char *)v376 + v398);
      __dstj = (void *)v400[1];
      *uint64_t v399 = *v400;
      v399[1] = __dstj;
      uint64_t v401 = v377[18];
      uint64_t v402 = (void *)((char *)v375 + v401);
      v403 = (void *)((char *)v376 + v401);
      v660 = (void *)v403[1];
      *uint64_t v402 = *v403;
      v402[1] = v660;
      uint64_t v404 = v377[19];
      uint64_t v405 = (void *)((char *)v375 + v404);
      v406 = (void *)((char *)v376 + v404);
      uint64_t v656 = v406[1];
      *uint64_t v405 = *v406;
      v405[1] = v656;
      uint64_t v407 = v377[20];
      uint64_t v408 = (void *)((char *)v375 + v407);
      v409 = (void *)((char *)v376 + v407);
      uint64_t v410 = v409[1];
      *uint64_t v408 = *v409;
      v408[1] = v410;
      *(void *)((char *)v375 + v377[21]) = *(void *)((char *)v376 + v377[21]);
      *(void *)((char *)v375 + v377[22]) = *(void *)((char *)v376 + v377[22]);
      uint64_t v411 = v377[23];
      uint64_t v412 = (char *)v375 + v411;
      v413 = (char *)v376 + v411;
      *(void *)uint64_t v412 = *(void *)v413;
      v412[8] = v413[8];
      uint64_t v414 = v377[24];
      uint64_t v415 = (char *)v375 + v414;
      v416 = (char *)v376 + v414;
      *(void *)uint64_t v415 = *(void *)v416;
      v415[8] = v416[8];
      uint64_t v417 = v377[25];
      uint64_t v418 = (void *)((char *)v375 + v417);
      v419 = (void *)((char *)v376 + v417);
      uint64_t v420 = v419[1];
      *uint64_t v418 = *v419;
      v418[1] = v420;
      uint64_t v421 = v377[26];
      uint64_t v422 = (void *)((char *)v375 + v421);
      v423 = (void *)((char *)v376 + v421);
      uint64_t v424 = v423[1];
      *uint64_t v422 = *v423;
      v422[1] = v424;
      uint64_t v425 = v377[27];
      uint64_t v426 = (void *)((char *)v375 + v425);
      v427 = (void *)((char *)v376 + v425);
      uint64_t v428 = v427[1];
      *uint64_t v426 = *v427;
      v426[1] = v428;
      uint64_t v429 = v377[28];
      uint64_t v430 = (void *)((char *)v375 + v429);
      v431 = (void *)((char *)v376 + v429);
      uint64_t v432 = v431[1];
      *uint64_t v430 = *v431;
      v430[1] = v432;
      uint64_t v433 = v377[29];
      uint64_t v434 = (char *)v375 + v433;
      v435 = (char *)v376 + v433;
      *(void *)uint64_t v434 = *(void *)v435;
      v434[8] = v435[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, (uint64_t)v377);
      uint64_t v41 = v674;
      uint64_t v39 = v675;
      uint64_t v40 = v672;
    }
    uint64_t v436 = v41[13];
    uint64_t v437 = (void *)((char *)v39 + v436);
    v438 = (void *)((char *)v40 + v436);
    v439 = (int *)type metadata accessor for RestaurantReservation(0);
    uint64_t v17 = a3;
    if (__swift_getEnumTagSinglePayload((uint64_t)v438, 1, (uint64_t)v439))
    {
      uint64_t v440 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
      memcpy(v437, v438, *(void *)(*(void *)(v440 - 8) + 64));
    }
    else
    {
      uint64_t v441 = v438[1];
      *uint64_t v437 = *v438;
      v437[1] = v441;
      uint64_t v442 = v438[3];
      v437[2] = v438[2];
      v437[3] = v442;
      uint64_t v443 = v438[5];
      v437[4] = v438[4];
      v437[5] = v443;
      uint64_t v444 = v438[7];
      v437[6] = v438[6];
      v437[7] = v444;
      uint64_t v445 = v438[9];
      v437[8] = v438[8];
      v437[9] = v445;
      uint64_t v446 = v438[11];
      v437[10] = v438[10];
      v437[11] = v446;
      *((unsigned char *)v437 + 96) = *((unsigned char *)v438 + 96);
      uint64_t v447 = v438[14];
      v437[13] = v438[13];
      v437[14] = v447;
      uint64_t v448 = v438[16];
      v437[15] = v438[15];
      v437[16] = v448;
      uint64_t v449 = v439[14];
      v673 = (char *)v437 + v449;
      v450 = (char *)v438 + v449;
      uint64_t v653 = type metadata accessor for DateComponents();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v450, 1, v653))
      {
        uint64_t v451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v673, v450, *(void *)(*(void *)(v451 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v653 - 8) + 16))(v673, v450, v653);
        __swift_storeEnumTagSinglePayload((uint64_t)v673, 0, 1, v653);
      }
      uint64_t v452 = v439[15];
      v453 = (void *)((char *)v437 + v452);
      v454 = (void *)((char *)v438 + v452);
      uint64_t v455 = v454[1];
      void *v453 = *v454;
      v453[1] = v455;
      uint64_t v456 = v439[16];
      v457 = (void *)((char *)v437 + v456);
      v458 = (void *)((char *)v438 + v456);
      uint64_t v459 = v458[1];
      void *v457 = *v458;
      v457[1] = v459;
      uint64_t v460 = v439[17];
      v461 = (void *)((char *)v437 + v460);
      v462 = (void *)((char *)v438 + v460);
      uint64_t v463 = v462[1];
      void *v461 = *v462;
      v461[1] = v463;
      uint64_t v464 = v439[18];
      v465 = (void *)((char *)v437 + v464);
      v466 = (void *)((char *)v438 + v464);
      uint64_t v467 = v466[1];
      void *v465 = *v466;
      v465[1] = v467;
      uint64_t v468 = v439[19];
      v469 = (void *)((char *)v437 + v468);
      v470 = (void *)((char *)v438 + v468);
      uint64_t v471 = v470[1];
      void *v469 = *v470;
      v469[1] = v471;
      *(void *)((char *)v437 + v439[20]) = *(void *)((char *)v438 + v439[20]);
      uint64_t v472 = v439[21];
      v473 = (void *)((char *)v437 + v472);
      v474 = (void *)((char *)v438 + v472);
      uint64_t v475 = v474[1];
      void *v473 = *v474;
      v473[1] = v475;
      uint64_t v476 = v439[22];
      v477 = (void *)((char *)v437 + v476);
      v478 = (void *)((char *)v438 + v476);
      uint64_t v479 = v478[1];
      void *v477 = *v478;
      v477[1] = v479;
      uint64_t v480 = v439[23];
      v481 = (void *)((char *)v437 + v480);
      v482 = (void *)((char *)v438 + v480);
      uint64_t v483 = v482[1];
      void *v481 = *v482;
      v481[1] = v483;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v437, 0, 1, (uint64_t)v439);
      uint64_t v17 = a3;
      uint64_t v41 = v674;
      uint64_t v39 = v675;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, (uint64_t)v41);
    uint64_t v18 = v683;
    uint64_t v14 = v677;
  }
  uint64_t v484 = v17[22];
  v485 = (void *)((char *)v18 + v484);
  v486 = (void *)((char *)v14 + v484);
  v487 = (int *)type metadata accessor for PreExtractedCard(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v486, 1, (uint64_t)v487))
  {
    uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v485, v486, *(void *)(*(void *)(v488 - 8) + 64));
  }
  else
  {
    uint64_t v489 = v486[1];
    void *v485 = *v486;
    v485[1] = v489;
    uint64_t v490 = v486[3];
    v485[2] = v486[2];
    v485[3] = v490;
    uint64_t v491 = v486[5];
    v485[4] = v486[4];
    v485[5] = v491;
    uint64_t v492 = v486[7];
    v485[6] = v486[6];
    v485[7] = v492;
    uint64_t v493 = v486[9];
    v485[8] = v486[8];
    v485[9] = v493;
    uint64_t v494 = v486[11];
    v485[10] = v486[10];
    v485[11] = v494;
    uint64_t v495 = v487[10];
    v496 = (char *)v485 + v495;
    v497 = (char *)v486 + v495;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v497, 1, v686))
    {
      uint64_t v498 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v496, v497, *(void *)(*(void *)(v498 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v496, v497, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v496, 0, 1, v686);
    }
    uint64_t v499 = v487[11];
    v500 = (char *)v485 + v499;
    v501 = (char *)v486 + v499;
    uint64_t v17 = a3;
    if (__swift_getEnumTagSinglePayload((uint64_t)v486 + v499, 1, v686))
    {
      uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v500, v501, *(void *)(*(void *)(v502 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v500, v501, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v500, 0, 1, v686);
    }
    uint64_t v503 = v487[12];
    v504 = (void *)((char *)v485 + v503);
    v505 = (void *)((char *)v486 + v503);
    uint64_t v506 = v505[1];
    void *v504 = *v505;
    v504[1] = v506;
    uint64_t v507 = v487[13];
    v508 = (void *)((char *)v485 + v507);
    v509 = (void *)((char *)v486 + v507);
    uint64_t v510 = v509[1];
    void *v508 = *v509;
    v508[1] = v510;
    uint64_t v511 = v487[14];
    v512 = (void *)((char *)v485 + v511);
    v513 = (void *)((char *)v486 + v511);
    uint64_t v514 = v513[1];
    void *v512 = *v513;
    v512[1] = v514;
    uint64_t v515 = v487[15];
    v516 = (char *)v485 + v515;
    v517 = (char *)v486 + v515;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v517, 1, v686))
    {
      uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v516, v517, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, v686);
    }
    uint64_t v519 = v487[16];
    v520 = (void *)((char *)v485 + v519);
    v521 = (void *)((char *)v486 + v519);
    uint64_t v522 = v521[1];
    void *v520 = *v521;
    v520[1] = v522;
    uint64_t v523 = v487[17];
    v524 = (void *)((char *)v485 + v523);
    v525 = (void *)((char *)v486 + v523);
    uint64_t v526 = v525[1];
    void *v524 = *v525;
    v524[1] = v526;
    uint64_t v527 = v487[18];
    v528 = (void *)((char *)v485 + v527);
    v529 = (void *)((char *)v486 + v527);
    uint64_t v530 = v529[1];
    void *v528 = *v529;
    v528[1] = v530;
    uint64_t v531 = v487[19];
    v532 = (void *)((char *)v485 + v531);
    v533 = (void *)((char *)v486 + v531);
    uint64_t v534 = v533[1];
    void *v532 = *v533;
    v532[1] = v534;
    uint64_t v535 = v487[20];
    v536 = (void *)((char *)v485 + v535);
    v537 = (void *)((char *)v486 + v535);
    uint64_t v538 = v537[1];
    void *v536 = *v537;
    v536[1] = v538;
    uint64_t v539 = v487[21];
    v540 = (void *)((char *)v485 + v539);
    v541 = (void *)((char *)v486 + v539);
    uint64_t v542 = v541[1];
    void *v540 = *v541;
    v540[1] = v542;
    uint64_t v543 = v487[22];
    v544 = (void *)((char *)v485 + v543);
    v545 = (void *)((char *)v486 + v543);
    uint64_t v546 = v545[1];
    void *v544 = *v545;
    v544[1] = v546;
    uint64_t v547 = v487[23];
    v548 = (void *)((char *)v485 + v547);
    v549 = (void *)((char *)v486 + v547);
    uint64_t v550 = v549[1];
    void *v548 = *v549;
    v548[1] = v550;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v485, 0, 1, (uint64_t)v487);
    uint64_t v18 = v683;
    uint64_t v14 = v677;
  }
  uint64_t v551 = v17[23];
  v552 = (void *)((char *)v18 + v551);
  v553 = (void *)((char *)v14 + v551);
  v554 = (int *)type metadata accessor for PreExtractedContact(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v553, 1, (uint64_t)v554))
  {
    uint64_t v555 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v552, v553, *(void *)(*(void *)(v555 - 8) + 64));
  }
  else
  {
    uint64_t v556 = v553[1];
    void *v552 = *v553;
    v552[1] = v556;
    uint64_t v557 = v553[3];
    v552[2] = v553[2];
    v552[3] = v557;
    uint64_t v558 = v553[5];
    v552[4] = v553[4];
    v552[5] = v558;
    uint64_t v559 = v553[7];
    v552[6] = v553[6];
    v552[7] = v559;
    uint64_t v560 = v553[9];
    v552[8] = v553[8];
    v552[9] = v560;
    uint64_t v561 = v553[11];
    v552[10] = v553[10];
    v552[11] = v561;
    uint64_t v562 = v554[11];
    v676 = (char *)v552 + v562;
    v563 = (char *)v553 + v562;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v563, 1, v686))
    {
      uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v676, v563, *(void *)(*(void *)(v564 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v676, v563, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v676, 0, 1, v686);
    }
    uint64_t v565 = v554[12];
    v566 = (void *)((char *)v552 + v565);
    v567 = (void *)((char *)v553 + v565);
    uint64_t v568 = v567[1];
    void *v566 = *v567;
    v566[1] = v568;
    *(void *)((char *)v552 + v554[13]) = *(void *)((char *)v553 + v554[13]);
    uint64_t v569 = v554[14];
    v570 = (char *)v552 + v569;
    v571 = (char *)v553 + v569;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = v683;
    uint64_t v17 = a3;
    uint64_t v14 = v677;
    if (__swift_getEnumTagSinglePayload((uint64_t)v571, 1, v686))
    {
      uint64_t v572 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v570, v571, *(void *)(*(void *)(v572 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v570, v571, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v570, 0, 1, v686);
    }
    *(void *)((char *)v552 + v554[15]) = *(void *)((char *)v553 + v554[15]);
    *(void *)((char *)v552 + v554[16]) = *(void *)((char *)v553 + v554[16]);
    uint64_t v573 = v554[17];
    v574 = (void *)((char *)v552 + v573);
    v575 = (void *)((char *)v553 + v573);
    uint64_t v576 = v575[1];
    void *v574 = *v575;
    v574[1] = v576;
    *(void *)((char *)v552 + v554[18]) = *(void *)((char *)v553 + v554[18]);
    *(void *)((char *)v552 + v554[19]) = *(void *)((char *)v553 + v554[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v552, 0, 1, (uint64_t)v554);
  }
  uint64_t v577 = v17[24];
  v578 = (void *)((char *)v18 + v577);
  v579 = (void *)((char *)v14 + v577);
  v580 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v579, 1, (uint64_t)v580))
  {
    uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v578, v579, *(void *)(*(void *)(v581 - 8) + 64));
  }
  else
  {
    uint64_t v582 = v579[1];
    void *v578 = *v579;
    v578[1] = v582;
    uint64_t v583 = v579[3];
    v578[2] = v579[2];
    v578[3] = v583;
    uint64_t v584 = v579[5];
    v578[4] = v579[4];
    v578[5] = v584;
    uint64_t v585 = v579[7];
    v578[6] = v579[6];
    v578[7] = v585;
    uint64_t v586 = v580[8];
    v587 = (char *)v578 + v586;
    v588 = (char *)v579 + v586;
    uint64_t v589 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v588, 1, v589))
    {
      uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v587, v588, *(void *)(*(void *)(v590 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v589 - 8) + 16))(v587, v588, v589);
      __swift_storeEnumTagSinglePayload((uint64_t)v587, 0, 1, v589);
    }
    uint64_t v591 = v580[9];
    v592 = (void *)((char *)v578 + v591);
    v593 = (void *)((char *)v579 + v591);
    uint64_t v594 = v593[1];
    void *v592 = *v593;
    v592[1] = v594;
    uint64_t v595 = v580[10];
    v596 = (void *)((char *)v578 + v595);
    v597 = (void *)((char *)v579 + v595);
    uint64_t v598 = v597[1];
    void *v596 = *v597;
    v596[1] = v598;
    uint64_t v599 = v580[11];
    v600 = (void *)((char *)v578 + v599);
    v601 = (void *)((char *)v579 + v599);
    uint64_t v602 = v601[1];
    void *v600 = *v601;
    v600[1] = v602;
    uint64_t v603 = v580[12];
    v604 = (char *)v578 + v603;
    v605 = (char *)v579 + v603;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = v683;
    uint64_t v17 = a3;
    uint64_t v14 = v677;
    if (__swift_getEnumTagSinglePayload((uint64_t)v605, 1, v686))
    {
      uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v604, v605, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v686);
    }
    uint64_t v607 = v580[13];
    v608 = (char *)v578 + v607;
    v609 = (char *)v579 + v607;
    if (__swift_getEnumTagSinglePayload((uint64_t)v579 + v607, 1, v686))
    {
      uint64_t v610 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v608, v609, *(void *)(*(void *)(v610 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v680)(v608, v609, v686);
      __swift_storeEnumTagSinglePayload((uint64_t)v608, 0, 1, v686);
    }
    uint64_t v611 = v580[14];
    v612 = (char *)v578 + v611;
    v613 = (char *)v579 + v611;
    *(void *)v612 = *(void *)v613;
    v612[8] = v613[8];
    uint64_t v614 = v580[15];
    v615 = (void *)((char *)v578 + v614);
    v616 = (void *)((char *)v579 + v614);
    uint64_t v617 = v616[1];
    void *v615 = *v616;
    v615[1] = v617;
    uint64_t v618 = v580[16];
    v619 = (void *)((char *)v578 + v618);
    v620 = (void *)((char *)v579 + v618);
    uint64_t v621 = v620[1];
    void *v619 = *v620;
    v619[1] = v621;
    uint64_t v622 = v580[17];
    v623 = (void *)((char *)v578 + v622);
    v624 = (void *)((char *)v579 + v622);
    uint64_t v625 = v624[1];
    void *v623 = *v624;
    v623[1] = v625;
    uint64_t v626 = v580[18];
    v627 = (void *)((char *)v578 + v626);
    v628 = (void *)((char *)v579 + v626);
    uint64_t v629 = v628[1];
    void *v627 = *v628;
    v627[1] = v629;
    uint64_t v630 = v580[19];
    v631 = (void *)((char *)v578 + v630);
    v632 = (void *)((char *)v579 + v630);
    uint64_t v633 = v632[1];
    void *v631 = *v632;
    v631[1] = v633;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, (uint64_t)v580);
  }
  uint64_t v634 = v17[25];
  v635 = (void *)((char *)v18 + v634);
  v636 = (void *)((char *)v14 + v634);
  uint64_t v637 = *(void *)((char *)v14 + v634 + 8);
  if (v637)
  {
    void *v635 = *v636;
    v635[1] = v637;
    uint64_t v638 = v636[3];
    v635[2] = v636[2];
    v635[3] = v638;
    uint64_t v639 = v636[5];
    v635[4] = v636[4];
    v635[5] = v639;
    uint64_t v640 = v636[7];
    v635[6] = v636[6];
    v635[7] = v640;
    uint64_t v641 = v636[9];
    v635[8] = v636[8];
    v635[9] = v641;
    uint64_t v642 = v636[11];
    v635[10] = v636[10];
    v635[11] = v642;
    uint64_t v678 = v636[13];
    v635[12] = v636[12];
    v635[13] = v678;
    uint64_t v681 = v636[15];
    v635[14] = v636[14];
    v635[15] = v681;
    uint64_t v687 = v636[17];
    v635[16] = v636[16];
    v635[17] = v687;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = v683;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v635, v636, 0x90uLL);
  }
  return v18;
}

void *assignWithCopy for EmailDocument(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[4] = v4[4];
  v5[5] = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[6] = v4[6];
  v5[7] = v4[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[8] = v4[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[9] = v4[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[10] = v4[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[11] = v4[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[12];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v1223 = *(void *)(v9 - 8);
  uint64_t v1224 = v9;
  v1211 = *(void (**)(char *, char *, uint64_t))(v1223 + 24);
  v1211(v7, v8, v9);
  *(void *)((char *)v5 + a3[13]) = *(void *)((char *)v4 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[14]) = *(void *)((char *)v4 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[15]) = *(void *)((char *)v4 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + a3[16]) = *((unsigned char *)v4 + a3[16]);
  *((unsigned char *)v5 + a3[17]) = *((unsigned char *)v4 + a3[17]);
  uint64_t v10 = a3[18];
  uint64_t v11 = (void *)((char *)v5 + v10);
  uint64_t v12 = (void *)((char *)v4 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[19];
  uint64_t v14 = (void *)((char *)v5 + v13);
  uint64_t v15 = (char *)v4 + v13;
  uint64_t v16 = *(void *)((char *)v4 + v13);
  if (*(void *)((char *)v5 + v13))
  {
    if (v16)
    {
      *uint64_t v14 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14[1] = *((void *)v15 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14[2] = *((void *)v15 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v14[3] = *((void *)v15 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14[4] = *((void *)v15 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of DataDetectorResults((uint64_t)v5 + v13);
      uint64_t v17 = *((void *)v15 + 4);
      long long v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v18;
      v14[4] = v17;
    }
  }
  else if (v16)
  {
    *uint64_t v14 = v16;
    v14[1] = *((void *)v15 + 1);
    v14[2] = *((void *)v15 + 2);
    id v14[3] = *((void *)v15 + 3);
    v14[4] = *((void *)v15 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)v15;
    long long v20 = *((_OWORD *)v15 + 1);
    v14[4] = *((void *)v15 + 4);
    *(_OWORD *)uint64_t v14 = v19;
    *((_OWORD *)v14 + 1) = v20;
  }
  uint64_t v21 = a3[20];
  uint64_t v22 = (void *)((char *)v5 + v21);
  uint64_t v23 = (void *)((char *)v4 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[21];
  uint64_t v25 = (void *)((char *)v5 + v24);
  uint64_t v26 = (void *)((char *)v4 + v24);
  uint64_t v27 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, (uint64_t)v27);
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27);
  v1221 = v4;
  v1222 = v5;
  v1217 = v27;
  v1220 = a3;
  if (!EnumTagSinglePayload)
  {
    if (v29)
    {
      outlined destroy of EmailDocument((uint64_t)v25, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
      goto LABEL_14;
    }
    *uint64_t v25 = *v26;
    v25[1] = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v37 = v27[5];
    uint64_t v38 = (uint64_t)v25 + v37;
    uint64_t v39 = (uint64_t)v26 + v37;
    uint64_t v40 = type metadata accessor for RentalCarReservation(0);
    int v41 = __swift_getEnumTagSinglePayload(v38, 1, v40);
    int v42 = __swift_getEnumTagSinglePayload(v39, 1, v40);
    v1213 = v26;
    v1216 = v25;
    if (v41)
    {
      if (!v42)
      {
        *(void *)uint64_t v38 = *(void *)v39;
        *(void *)(v38 + 8) = *(void *)(v39 + 8);
        *(void *)(v38 + 16) = *(void *)(v39 + 16);
        *(void *)(v38 + 24) = *(void *)(v39 + 24);
        *(void *)(v38 + 32) = *(void *)(v39 + 32);
        *(void *)(v38 + 40) = *(void *)(v39 + 40);
        *(void *)(v38 + 48) = *(void *)(v39 + 48);
        *(void *)(v38 + 56) = *(void *)(v39 + 56);
        *(void *)(v38 + 64) = *(void *)(v39 + 64);
        *(void *)(v38 + 72) = *(void *)(v39 + 72);
        *(void *)(v38 + 80) = *(void *)(v39 + 80);
        *(void *)(v38 + 88) = *(void *)(v39 + 88);
        *(void *)(v38 + 96) = *(void *)(v39 + 96);
        *(void *)(v38 + 104) = *(void *)(v39 + 104);
        *(void *)(v38 + 112) = *(void *)(v39 + 112);
        *(void *)(v38 + 120) = *(void *)(v39 + 120);
        *(unsigned char *)(v38 + 128) = *(unsigned char *)(v39 + 128);
        *(unsigned char *)(v38 + 129) = *(unsigned char *)(v39 + 129);
        *(unsigned char *)(v38 + 130) = *(unsigned char *)(v39 + 130);
        *(void *)(v38 + 136) = *(void *)(v39 + 136);
        *(void *)(v38 + 144) = *(void *)(v39 + 144);
        *(void *)(v38 + 152) = *(void *)(v39 + 152);
        *(void *)(v38 + 160) = *(void *)(v39 + 160);
        *(void *)(v38 + 168) = *(void *)(v39 + 168);
        *(void *)(v38 + 176) = *(void *)(v39 + 176);
        *(void *)(v38 + 184) = *(void *)(v39 + 184);
        *(void *)(v38 + 192) = *(void *)(v39 + 192);
        *(void *)(v38 + 200) = *(void *)(v39 + 200);
        *(void *)(v38 + 208) = *(void *)(v39 + 208);
        *(void *)(v38 + 216) = *(void *)(v39 + 216);
        *(void *)(v38 + 224) = *(void *)(v39 + 224);
        *(void *)(v38 + 232) = *(void *)(v39 + 232);
        *(void *)(v38 + 240) = *(void *)(v39 + 240);
        *(void *)(v38 + 248) = *(void *)(v39 + 248);
        *(void *)(v38 + 256) = *(void *)(v39 + 256);
        *(void *)(v38 + 264) = *(void *)(v39 + 264);
        *(void *)(v38 + 272) = *(void *)(v39 + 272);
        *(void *)(v38 + 280) = *(void *)(v39 + 280);
        *(void *)(v38 + 288) = *(void *)(v39 + 288);
        *(void *)(v38 + 296) = *(void *)(v39 + 296);
        *(void *)(v38 + 304) = *(void *)(v39 + 304);
        *(void *)(v38 + 312) = *(void *)(v39 + 312);
        *(void *)(v38 + 320) = *(void *)(v39 + 320);
        *(void *)(v38 + 328) = *(void *)(v39 + 328);
        *(void *)(v38 + 336) = *(void *)(v39 + 336);
        *(void *)(v38 + 344) = *(void *)(v39 + 344);
        *(void *)(v38 + 352) = *(void *)(v39 + 352);
        *(void *)(v38 + 360) = *(void *)(v39 + 360);
        *(void *)(v38 + 368) = *(void *)(v39 + 368);
        uint64_t v43 = *(void *)(v39 + 376);
        *(unsigned char *)(v38 + 384) = *(unsigned char *)(v39 + 384);
        *(void *)(v38 + 376) = v43;
        *(void *)(v38 + 392) = *(void *)(v39 + 392);
        *(void *)(v38 + 400) = *(void *)(v39 + 400);
        *(void *)(v38 + 408) = *(void *)(v39 + 408);
        *(void *)(v38 + 416) = *(void *)(v39 + 416);
        uint64_t v44 = *(int *)(v40 + 140);
        __dst = (void *)(v38 + v44);
        uint64_t v45 = (const void *)(v39 + v44);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v46 = v1224;
        if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v1224))
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v45, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(__dst, v45, v1224);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v1224);
        }
        uint64_t v578 = *(int *)(v40 + 144);
        v579 = (void *)(v38 + v578);
        v580 = (const void *)(v39 + v578);
        if (__swift_getEnumTagSinglePayload(v39 + v578, 1, v1224))
        {
          uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v579, v580, *(void *)(*(void *)(v581 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v579, v580, v1224);
          __swift_storeEnumTagSinglePayload((uint64_t)v579, 0, 1, v1224);
        }
        uint64_t v582 = v38;
        uint64_t v583 = v40;
        goto LABEL_230;
      }
LABEL_24:
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy((void *)v38, (const void *)v39, *(void *)(*(void *)(v52 - 8) + 64));
      uint64_t v46 = v1224;
      goto LABEL_240;
    }
    if (v42)
    {
      outlined destroy of EmailDocument(v38, (void (*)(void))type metadata accessor for RentalCarReservation);
      goto LABEL_24;
    }
    *(void *)uint64_t v38 = *(void *)v39;
    *(void *)(v38 + 8) = *(void *)(v39 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 16) = *(void *)(v39 + 16);
    *(void *)(v38 + 24) = *(void *)(v39 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 32) = *(void *)(v39 + 32);
    *(void *)(v38 + 40) = *(void *)(v39 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 48) = *(void *)(v39 + 48);
    *(void *)(v38 + 56) = *(void *)(v39 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 64) = *(void *)(v39 + 64);
    *(void *)(v38 + 72) = *(void *)(v39 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 80) = *(void *)(v39 + 80);
    *(void *)(v38 + 88) = *(void *)(v39 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 96) = *(void *)(v39 + 96);
    *(void *)(v38 + 104) = *(void *)(v39 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 112) = *(void *)(v39 + 112);
    *(void *)(v38 + 120) = *(void *)(v39 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v38 + 128) = *(unsigned char *)(v39 + 128);
    *(unsigned char *)(v38 + 129) = *(unsigned char *)(v39 + 129);
    *(unsigned char *)(v38 + 130) = *(unsigned char *)(v39 + 130);
    *(void *)(v38 + 136) = *(void *)(v39 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 144) = *(void *)(v39 + 144);
    *(void *)(v38 + 152) = *(void *)(v39 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 160) = *(void *)(v39 + 160);
    *(void *)(v38 + 168) = *(void *)(v39 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 176) = *(void *)(v39 + 176);
    *(void *)(v38 + 184) = *(void *)(v39 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 192) = *(void *)(v39 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 200) = *(void *)(v39 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 208) = *(void *)(v39 + 208);
    *(void *)(v38 + 216) = *(void *)(v39 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 224) = *(void *)(v39 + 224);
    *(void *)(v38 + 232) = *(void *)(v39 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 240) = *(void *)(v39 + 240);
    *(void *)(v38 + 248) = *(void *)(v39 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 256) = *(void *)(v39 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 264) = *(void *)(v39 + 264);
    *(void *)(v38 + 272) = *(void *)(v39 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 280) = *(void *)(v39 + 280);
    *(void *)(v38 + 288) = *(void *)(v39 + 288);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 296) = *(void *)(v39 + 296);
    *(void *)(v38 + 304) = *(void *)(v39 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 312) = *(void *)(v39 + 312);
    *(void *)(v38 + 320) = *(void *)(v39 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 328) = *(void *)(v39 + 328);
    *(void *)(v38 + 336) = *(void *)(v39 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 344) = *(void *)(v39 + 344);
    *(void *)(v38 + 352) = *(void *)(v39 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 360) = *(void *)(v39 + 360);
    *(void *)(v38 + 368) = *(void *)(v39 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v572 = *(void *)(v39 + 376);
    *(unsigned char *)(v38 + 384) = *(unsigned char *)(v39 + 384);
    *(void *)(v38 + 376) = v572;
    *(void *)(v38 + 392) = *(void *)(v39 + 392);
    *(void *)(v38 + 400) = *(void *)(v39 + 400);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v38 + 408) = *(void *)(v39 + 408);
    *(void *)(v38 + 416) = *(void *)(v39 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v573 = *(int *)(v40 + 140);
    v574 = (char *)(v38 + v573);
    v575 = (char *)(v39 + v573);
    uint64_t v46 = v1224;
    int v576 = __swift_getEnumTagSinglePayload(v38 + v573, 1, v1224);
    int v577 = __swift_getEnumTagSinglePayload((uint64_t)v575, 1, v1224);
    if (v576)
    {
      if (!v577)
      {
        (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v574, v575, v1224);
        __swift_storeEnumTagSinglePayload((uint64_t)v574, 0, 1, v1224);
        goto LABEL_234;
      }
    }
    else
    {
      if (!v577)
      {
        v1211(v574, v575, v1224);
LABEL_234:
        uint64_t v585 = *(int *)(v40 + 144);
        uint64_t v586 = (char *)(v38 + v585);
        v587 = (char *)(v39 + v585);
        int v588 = __swift_getEnumTagSinglePayload(v38 + v585, 1, v1224);
        int v589 = __swift_getEnumTagSinglePayload((uint64_t)v587, 1, v1224);
        if (v588)
        {
          if (!v589)
          {
            (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v586, v587, v1224);
            uint64_t v582 = (uint64_t)v586;
            uint64_t v583 = v1224;
LABEL_230:
            __swift_storeEnumTagSinglePayload(v582, 0, 1, v583);
            goto LABEL_240;
          }
        }
        else
        {
          if (!v589)
          {
            v1211(v586, v587, v1224);
LABEL_240:
            uint64_t v591 = v27[6];
            uint64_t v592 = (uint64_t)v25 + v591;
            uint64_t v593 = (uint64_t)v26 + v591;
            uint64_t v594 = type metadata accessor for TicketedTransportation(0);
            int v595 = __swift_getEnumTagSinglePayload(v592, 1, v594);
            int v596 = __swift_getEnumTagSinglePayload(v593, 1, v594);
            if (v595)
            {
              if (!v596)
              {
                *(void *)uint64_t v592 = *(void *)v593;
                *(void *)(v592 + 8) = *(void *)(v593 + 8);
                *(void *)(v592 + 16) = *(void *)(v593 + 16);
                *(void *)(v592 + 24) = *(void *)(v593 + 24);
                *(void *)(v592 + 32) = *(void *)(v593 + 32);
                *(void *)(v592 + 40) = *(void *)(v593 + 40);
                *(void *)(v592 + 48) = *(void *)(v593 + 48);
                *(void *)(v592 + 56) = *(void *)(v593 + 56);
                *(void *)(v592 + 64) = *(void *)(v593 + 64);
                *(void *)(v592 + 72) = *(void *)(v593 + 72);
                *(void *)(v592 + 80) = *(void *)(v593 + 80);
                *(void *)(v592 + 88) = *(void *)(v593 + 88);
                *(void *)(v592 + 96) = *(void *)(v593 + 96);
                *(void *)(v592 + 104) = *(void *)(v593 + 104);
                *(void *)(v592 + 112) = *(void *)(v593 + 112);
                *(void *)(v592 + 120) = *(void *)(v593 + 120);
                *(unsigned char *)(v592 + 128) = *(unsigned char *)(v593 + 128);
                *(unsigned char *)(v592 + 129) = *(unsigned char *)(v593 + 129);
                *(unsigned char *)(v592 + 130) = *(unsigned char *)(v593 + 130);
                *(void *)(v592 + 136) = *(void *)(v593 + 136);
                *(void *)(v592 + 144) = *(void *)(v593 + 144);
                *(void *)(v592 + 152) = *(void *)(v593 + 152);
                *(void *)(v592 + 160) = *(void *)(v593 + 160);
                *(void *)(v592 + 168) = *(void *)(v593 + 168);
                *(void *)(v592 + 176) = *(void *)(v593 + 176);
                *(void *)(v592 + 184) = *(void *)(v593 + 184);
                *(void *)(v592 + 192) = *(void *)(v593 + 192);
                *(void *)(v592 + 200) = *(void *)(v593 + 200);
                *(void *)(v592 + 208) = *(void *)(v593 + 208);
                *(void *)(v592 + 216) = *(void *)(v593 + 216);
                *(void *)(v592 + 224) = *(void *)(v593 + 224);
                *(void *)(v592 + 232) = *(void *)(v593 + 232);
                *(void *)(v592 + 240) = *(void *)(v593 + 240);
                *(void *)(v592 + 248) = *(void *)(v593 + 248);
                *(void *)(v592 + 256) = *(void *)(v593 + 256);
                *(void *)(v592 + 264) = *(void *)(v593 + 264);
                *(void *)(v592 + 272) = *(void *)(v593 + 272);
                *(void *)(v592 + 280) = *(void *)(v593 + 280);
                uint64_t v597 = *(void *)(v593 + 288);
                *(unsigned char *)(v592 + 296) = *(unsigned char *)(v593 + 296);
                *(void *)(v592 + 288) = v597;
                uint64_t v598 = *(int *)(v594 + 112);
                __dstc = (void *)(v592 + v598);
                uint64_t v599 = (const void *)(v593 + v598);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v46 = v1224;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (__swift_getEnumTagSinglePayload((uint64_t)v599, 1, v1224))
                {
                  uint64_t v600 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                  memcpy(__dstc, v599, *(void *)(*(void *)(v600 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(__dstc, v599, v1224);
                  __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v1224);
                }
                uint64_t v610 = *(int *)(v594 + 116);
                uint64_t v611 = (void *)(v592 + v610);
                v612 = (const void *)(v593 + v610);
                if (__swift_getEnumTagSinglePayload(v593 + v610, 1, v1224))
                {
                  uint64_t v613 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                  memcpy(v611, v612, *(void *)(*(void *)(v613 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v611, v612, v1224);
                  __swift_storeEnumTagSinglePayload((uint64_t)v611, 0, 1, v1224);
                }
                uint64_t v614 = v592;
                uint64_t v615 = v594;
                goto LABEL_256;
              }
              goto LABEL_246;
            }
            if (v596)
            {
              outlined destroy of EmailDocument(v592, (void (*)(void))type metadata accessor for TicketedTransportation);
LABEL_246:
              size_t v601 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?)
                                           - 8)
                               + 64);
              uint64_t v602 = (void *)v592;
              uint64_t v603 = (const void *)v593;
              goto LABEL_247;
            }
            *(void *)uint64_t v592 = *(void *)v593;
            *(void *)(v592 + 8) = *(void *)(v593 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 16) = *(void *)(v593 + 16);
            *(void *)(v592 + 24) = *(void *)(v593 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 32) = *(void *)(v593 + 32);
            *(void *)(v592 + 40) = *(void *)(v593 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 48) = *(void *)(v593 + 48);
            *(void *)(v592 + 56) = *(void *)(v593 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 64) = *(void *)(v593 + 64);
            *(void *)(v592 + 72) = *(void *)(v593 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 80) = *(void *)(v593 + 80);
            *(void *)(v592 + 88) = *(void *)(v593 + 88);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 96) = *(void *)(v593 + 96);
            *(void *)(v592 + 104) = *(void *)(v593 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 112) = *(void *)(v593 + 112);
            *(void *)(v592 + 120) = *(void *)(v593 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v592 + 128) = *(unsigned char *)(v593 + 128);
            *(unsigned char *)(v592 + 129) = *(unsigned char *)(v593 + 129);
            *(unsigned char *)(v592 + 130) = *(unsigned char *)(v593 + 130);
            *(void *)(v592 + 136) = *(void *)(v593 + 136);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 144) = *(void *)(v593 + 144);
            *(void *)(v592 + 152) = *(void *)(v593 + 152);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 160) = *(void *)(v593 + 160);
            *(void *)(v592 + 168) = *(void *)(v593 + 168);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 176) = *(void *)(v593 + 176);
            *(void *)(v592 + 184) = *(void *)(v593 + 184);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 192) = *(void *)(v593 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 200) = *(void *)(v593 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 208) = *(void *)(v593 + 208);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 216) = *(void *)(v593 + 216);
            *(void *)(v592 + 224) = *(void *)(v593 + 224);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 232) = *(void *)(v593 + 232);
            *(void *)(v592 + 240) = *(void *)(v593 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 248) = *(void *)(v593 + 248);
            *(void *)(v592 + 256) = *(void *)(v593 + 256);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 264) = *(void *)(v593 + 264);
            *(void *)(v592 + 272) = *(void *)(v593 + 272);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v592 + 280) = *(void *)(v593 + 280);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v604 = *(void *)(v593 + 288);
            *(unsigned char *)(v592 + 296) = *(unsigned char *)(v593 + 296);
            *(void *)(v592 + 288) = v604;
            uint64_t v605 = *(int *)(v594 + 112);
            uint64_t v606 = (char *)(v592 + v605);
            uint64_t v607 = (char *)(v593 + v605);
            int v608 = __swift_getEnumTagSinglePayload(v592 + v605, 1, v46);
            int v609 = __swift_getEnumTagSinglePayload((uint64_t)v607, 1, v46);
            if (v608)
            {
              if (!v609)
              {
                (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v606, v607, v46);
                __swift_storeEnumTagSinglePayload((uint64_t)v606, 0, 1, v46);
LABEL_315:
                uint64_t v699 = *(int *)(v594 + 116);
                v700 = (char *)(v592 + v699);
                uint64_t v701 = v593 + v699;
                int v702 = __swift_getEnumTagSinglePayload(v592 + v699, 1, v46);
                int v703 = __swift_getEnumTagSinglePayload(v701, 1, v46);
                if (v702)
                {
                  if (!v703)
                  {
                    (*(void (**)(char *, uint64_t, uint64_t))(v1223 + 16))(v700, v701, v46);
                    uint64_t v614 = (uint64_t)v700;
                    uint64_t v615 = v46;
LABEL_256:
                    __swift_storeEnumTagSinglePayload(v614, 0, 1, v615);
                    goto LABEL_257;
                  }
                }
                else
                {
                  if (!v703)
                  {
                    v1211(v700, (char *)v701, v46);
LABEL_257:
                    uint64_t v616 = v27[7];
                    uint64_t v617 = (uint64_t)v25 + v616;
                    uint64_t v618 = (uint64_t)v26 + v616;
                    v619 = (int *)type metadata accessor for TicketedShow(0);
                    int v620 = __swift_getEnumTagSinglePayload(v617, 1, (uint64_t)v619);
                    int v621 = __swift_getEnumTagSinglePayload(v618, 1, (uint64_t)v619);
                    if (v620)
                    {
                      if (!v621)
                      {
                        *(void *)uint64_t v617 = *(void *)v618;
                        *(void *)(v617 + 8) = *(void *)(v618 + 8);
                        *(void *)(v617 + 16) = *(void *)(v618 + 16);
                        *(void *)(v617 + 24) = *(void *)(v618 + 24);
                        *(void *)(v617 + 32) = *(void *)(v618 + 32);
                        *(void *)(v617 + 40) = *(void *)(v618 + 40);
                        *(void *)(v617 + 48) = *(void *)(v618 + 48);
                        *(void *)(v617 + 56) = *(void *)(v618 + 56);
                        *(void *)(v617 + 64) = *(void *)(v618 + 64);
                        *(void *)(v617 + 72) = *(void *)(v618 + 72);
                        *(void *)(v617 + 80) = *(void *)(v618 + 80);
                        *(void *)(v617 + 88) = *(void *)(v618 + 88);
                        *(void *)(v617 + 96) = *(void *)(v618 + 96);
                        *(void *)(v617 + 104) = *(void *)(v618 + 104);
                        *(void *)(v617 + 112) = *(void *)(v618 + 112);
                        *(void *)(v617 + 120) = *(void *)(v618 + 120);
                        *(unsigned char *)(v617 + 128) = *(unsigned char *)(v618 + 128);
                        *(unsigned char *)(v617 + 129) = *(unsigned char *)(v618 + 129);
                        *(unsigned char *)(v617 + 130) = *(unsigned char *)(v618 + 130);
                        *(void *)(v617 + 136) = *(void *)(v618 + 136);
                        *(void *)(v617 + 144) = *(void *)(v618 + 144);
                        *(void *)(v617 + 152) = *(void *)(v618 + 152);
                        *(void *)(v617 + 160) = *(void *)(v618 + 160);
                        *(void *)(v617 + 168) = *(void *)(v618 + 168);
                        *(void *)(v617 + 176) = *(void *)(v618 + 176);
                        *(void *)(v617 + 184) = *(void *)(v618 + 184);
                        *(void *)(v617 + 192) = *(void *)(v618 + 192);
                        *(void *)(v617 + 200) = *(void *)(v618 + 200);
                        *(void *)(v617 + 208) = *(void *)(v618 + 208);
                        *(void *)(v617 + 216) = *(void *)(v618 + 216);
                        *(void *)(v617 + 224) = *(void *)(v618 + 224);
                        *(void *)(v617 + 232) = *(void *)(v618 + 232);
                        *(void *)(v617 + 240) = *(void *)(v618 + 240);
                        *(void *)(v617 + 248) = *(void *)(v618 + 248);
                        *(void *)(v617 + 256) = *(void *)(v618 + 256);
                        *(void *)(v617 + 264) = *(void *)(v618 + 264);
                        *(void *)(v617 + 272) = *(void *)(v618 + 272);
                        *(void *)(v617 + 280) = *(void *)(v618 + 280);
                        uint64_t v622 = *(void *)(v618 + 288);
                        *(unsigned char *)(v617 + 296) = *(unsigned char *)(v618 + 296);
                        *(void *)(v617 + 288) = v622;
                        *(void *)(v617 + 304) = *(void *)(v618 + 304);
                        *(void *)(v617 + 312) = *(void *)(v618 + 312);
                        uint64_t v623 = v619[29];
                        __dstd = (void *)(v617 + v623);
                        v1176 = (const void *)(v618 + v623);
                        uint64_t v624 = type metadata accessor for URL();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1176, 1, v624))
                        {
                          uint64_t v625 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                          memcpy(__dstd, v1176, *(void *)(*(void *)(v625 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v624 - 8) + 16))(__dstd, v1176, v624);
                          __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v624);
                        }
                        uint64_t v46 = v1224;
                        uint64_t v636 = v619[30];
                        uint64_t v637 = (void *)(v617 + v636);
                        uint64_t v638 = (void *)(v618 + v636);
                        *uint64_t v637 = *v638;
                        v637[1] = v638[1];
                        uint64_t v639 = v619[31];
                        uint64_t v640 = (void *)(v617 + v639);
                        uint64_t v641 = (const void *)(v618 + v639);
                        swift_bridgeObjectRetain();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v641, 1, v1224))
                        {
                          uint64_t v642 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                          memcpy(v640, v641, *(void *)(*(void *)(v642 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v640, v641, v1224);
                          __swift_storeEnumTagSinglePayload((uint64_t)v640, 0, 1, v1224);
                        }
                        uint64_t v643 = v619[32];
                        uint64_t v644 = (void *)(v617 + v643);
                        uint64_t v645 = (const void *)(v618 + v643);
                        if (__swift_getEnumTagSinglePayload(v618 + v643, 1, v1224))
                        {
                          uint64_t v646 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                          memcpy(v644, v645, *(void *)(*(void *)(v646 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v644, v645, v1224);
                          __swift_storeEnumTagSinglePayload((uint64_t)v644, 0, 1, v1224);
                        }
                        uint64_t v647 = v617;
                        uint64_t v648 = (uint64_t)v619;
                        goto LABEL_276;
                      }
                      goto LABEL_263;
                    }
                    if (v621)
                    {
                      outlined destroy of EmailDocument(v617, (void (*)(void))type metadata accessor for TicketedShow);
LABEL_263:
                      size_t v626 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?)
                                                   - 8)
                                       + 64);
                      v627 = (void *)v617;
                      v628 = (const void *)v618;
                      goto LABEL_264;
                    }
                    *(void *)uint64_t v617 = *(void *)v618;
                    *(void *)(v617 + 8) = *(void *)(v618 + 8);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 16) = *(void *)(v618 + 16);
                    *(void *)(v617 + 24) = *(void *)(v618 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 32) = *(void *)(v618 + 32);
                    *(void *)(v617 + 40) = *(void *)(v618 + 40);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 48) = *(void *)(v618 + 48);
                    *(void *)(v617 + 56) = *(void *)(v618 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 64) = *(void *)(v618 + 64);
                    *(void *)(v617 + 72) = *(void *)(v618 + 72);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 80) = *(void *)(v618 + 80);
                    *(void *)(v617 + 88) = *(void *)(v618 + 88);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 96) = *(void *)(v618 + 96);
                    *(void *)(v617 + 104) = *(void *)(v618 + 104);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 112) = *(void *)(v618 + 112);
                    *(void *)(v617 + 120) = *(void *)(v618 + 120);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(unsigned char *)(v617 + 128) = *(unsigned char *)(v618 + 128);
                    *(unsigned char *)(v617 + 129) = *(unsigned char *)(v618 + 129);
                    *(unsigned char *)(v617 + 130) = *(unsigned char *)(v618 + 130);
                    *(void *)(v617 + 136) = *(void *)(v618 + 136);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 144) = *(void *)(v618 + 144);
                    *(void *)(v617 + 152) = *(void *)(v618 + 152);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 160) = *(void *)(v618 + 160);
                    *(void *)(v617 + 168) = *(void *)(v618 + 168);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 176) = *(void *)(v618 + 176);
                    *(void *)(v617 + 184) = *(void *)(v618 + 184);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 192) = *(void *)(v618 + 192);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 200) = *(void *)(v618 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 208) = *(void *)(v618 + 208);
                    *(void *)(v617 + 216) = *(void *)(v618 + 216);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 224) = *(void *)(v618 + 224);
                    *(void *)(v617 + 232) = *(void *)(v618 + 232);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 240) = *(void *)(v618 + 240);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 248) = *(void *)(v618 + 248);
                    *(void *)(v617 + 256) = *(void *)(v618 + 256);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 264) = *(void *)(v618 + 264);
                    *(void *)(v617 + 272) = *(void *)(v618 + 272);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v617 + 280) = *(void *)(v618 + 280);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v629 = *(void *)(v618 + 288);
                    *(unsigned char *)(v617 + 296) = *(unsigned char *)(v618 + 296);
                    *(void *)(v617 + 288) = v629;
                    *(void *)(v617 + 304) = *(void *)(v618 + 304);
                    *(void *)(v617 + 312) = *(void *)(v618 + 312);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v630 = v619[29];
                    v631 = (void *)(v617 + v630);
                    v632 = (const void *)(v618 + v630);
                    uint64_t v633 = type metadata accessor for URL();
                    int v634 = __swift_getEnumTagSinglePayload((uint64_t)v631, 1, v633);
                    int v635 = __swift_getEnumTagSinglePayload((uint64_t)v632, 1, v633);
                    if (v634)
                    {
                      uint64_t v46 = v1224;
                      if (!v635)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v633 - 8) + 16))(v631, v632, v633);
                        __swift_storeEnumTagSinglePayload((uint64_t)v631, 0, 1, v633);
                        goto LABEL_321;
                      }
                    }
                    else
                    {
                      uint64_t v704 = *(void *)(v633 - 8);
                      uint64_t v46 = v1224;
                      if (!v635)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v704 + 24))(v631, v632, v633);
LABEL_321:
                        uint64_t v706 = v619[30];
                        v707 = (void *)(v617 + v706);
                        v708 = (void *)(v618 + v706);
                        void *v707 = *v708;
                        v707[1] = v708[1];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        uint64_t v709 = v619[31];
                        v710 = (char *)(v617 + v709);
                        v711 = (char *)(v618 + v709);
                        int v712 = __swift_getEnumTagSinglePayload(v617 + v709, 1, v46);
                        int v713 = __swift_getEnumTagSinglePayload((uint64_t)v711, 1, v46);
                        if (v712)
                        {
                          if (!v713)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v710, v711, v46);
                            __swift_storeEnumTagSinglePayload((uint64_t)v710, 0, 1, v46);
LABEL_342:
                            uint64_t v727 = v619[32];
                            v728 = (char *)(v617 + v727);
                            uint64_t v729 = v618 + v727;
                            int v730 = __swift_getEnumTagSinglePayload(v617 + v727, 1, v46);
                            int v731 = __swift_getEnumTagSinglePayload(v729, 1, v46);
                            if (v730)
                            {
                              if (!v731)
                              {
                                (*(void (**)(char *, uint64_t, uint64_t))(v1223 + 16))(v728, v729, v46);
                                uint64_t v647 = (uint64_t)v728;
                                uint64_t v648 = v46;
LABEL_276:
                                __swift_storeEnumTagSinglePayload(v647, 0, 1, v648);
                                goto LABEL_277;
                              }
                            }
                            else
                            {
                              if (!v731)
                              {
                                v1211(v728, (char *)v729, v46);
LABEL_277:
                                uint64_t v649 = v27[8];
                                uint64_t v650 = (uint64_t)v25 + v649;
                                uint64_t v651 = (uint64_t)v26 + v649;
                                uint64_t v652 = type metadata accessor for Appointment(0);
                                int v653 = __swift_getEnumTagSinglePayload(v650, 1, v652);
                                int v654 = __swift_getEnumTagSinglePayload(v651, 1, v652);
                                if (v653)
                                {
                                  if (!v654)
                                  {
                                    *(void *)uint64_t v650 = *(void *)v651;
                                    *(void *)(v650 + 8) = *(void *)(v651 + 8);
                                    *(void *)(v650 + 16) = *(void *)(v651 + 16);
                                    *(void *)(v650 + 24) = *(void *)(v651 + 24);
                                    *(void *)(v650 + 32) = *(void *)(v651 + 32);
                                    *(void *)(v650 + 40) = *(void *)(v651 + 40);
                                    *(void *)(v650 + 48) = *(void *)(v651 + 48);
                                    *(void *)(v650 + 56) = *(void *)(v651 + 56);
                                    *(void *)(v650 + 64) = *(void *)(v651 + 64);
                                    *(void *)(v650 + 72) = *(void *)(v651 + 72);
                                    *(void *)(v650 + 80) = *(void *)(v651 + 80);
                                    *(void *)(v650 + 88) = *(void *)(v651 + 88);
                                    *(void *)(v650 + 96) = *(void *)(v651 + 96);
                                    *(void *)(v650 + 104) = *(void *)(v651 + 104);
                                    *(void *)(v650 + 112) = *(void *)(v651 + 112);
                                    *(void *)(v650 + 120) = *(void *)(v651 + 120);
                                    *(unsigned char *)(v650 + 128) = *(unsigned char *)(v651 + 128);
                                    *(unsigned char *)(v650 + 129) = *(unsigned char *)(v651 + 129);
                                    *(unsigned char *)(v650 + 130) = *(unsigned char *)(v651 + 130);
                                    *(void *)(v650 + 136) = *(void *)(v651 + 136);
                                    *(void *)(v650 + 144) = *(void *)(v651 + 144);
                                    *(void *)(v650 + 152) = *(void *)(v651 + 152);
                                    *(void *)(v650 + 160) = *(void *)(v651 + 160);
                                    *(void *)(v650 + 168) = *(void *)(v651 + 168);
                                    *(void *)(v650 + 176) = *(void *)(v651 + 176);
                                    *(void *)(v650 + 184) = *(void *)(v651 + 184);
                                    *(void *)(v650 + 192) = *(void *)(v651 + 192);
                                    *(void *)(v650 + 200) = *(void *)(v651 + 200);
                                    *(void *)(v650 + 208) = *(void *)(v651 + 208);
                                    *(void *)(v650 + 216) = *(void *)(v651 + 216);
                                    *(void *)(v650 + 224) = *(void *)(v651 + 224);
                                    *(void *)(v650 + 232) = *(void *)(v651 + 232);
                                    *(void *)(v650 + 240) = *(void *)(v651 + 240);
                                    *(void *)(v650 + 248) = *(void *)(v651 + 248);
                                    *(void *)(v650 + 256) = *(void *)(v651 + 256);
                                    *(void *)(v650 + 264) = *(void *)(v651 + 264);
                                    uint64_t v655 = *(void *)(v651 + 272);
                                    *(unsigned char *)(v650 + 280) = *(unsigned char *)(v651 + 280);
                                    *(void *)(v650 + 272) = v655;
                                    *(void *)(v650 + 288) = *(void *)(v651 + 288);
                                    *(void *)(v650 + 296) = *(void *)(v651 + 296);
                                    uint64_t v656 = *(int *)(v652 + 108);
                                    __dste = (void *)(v650 + v656);
                                    v657 = (const void *)(v651 + v656);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    uint64_t v46 = v1224;
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v657, 1, v1224))
                                    {
                                      uint64_t v658 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                      memcpy(__dste, v657, *(void *)(*(void *)(v658 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(__dste, v657, v1224);
                                      __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v1224);
                                    }
                                    uint64_t v668 = *(int *)(v652 + 112);
                                    uint64_t v669 = (void *)(v650 + v668);
                                    uint64_t v670 = (const void *)(v651 + v668);
                                    if (__swift_getEnumTagSinglePayload(v651 + v668, 1, v1224))
                                    {
                                      uint64_t v671 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                      memcpy(v669, v670, *(void *)(*(void *)(v671 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v669, v670, v1224);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v669, 0, 1, v1224);
                                    }
                                    uint64_t v672 = v650;
                                    uint64_t v673 = v652;
                                    goto LABEL_293;
                                  }
                                  goto LABEL_283;
                                }
                                if (v654)
                                {
                                  outlined destroy of EmailDocument(v650, (void (*)(void))type metadata accessor for Appointment);
LABEL_283:
                                  size_t v659 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?)
                                                               - 8)
                                                   + 64);
                                  v660 = (void *)v650;
                                  v661 = (const void *)v651;
                                  goto LABEL_284;
                                }
                                *(void *)uint64_t v650 = *(void *)v651;
                                *(void *)(v650 + 8) = *(void *)(v651 + 8);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 16) = *(void *)(v651 + 16);
                                *(void *)(v650 + 24) = *(void *)(v651 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 32) = *(void *)(v651 + 32);
                                *(void *)(v650 + 40) = *(void *)(v651 + 40);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 48) = *(void *)(v651 + 48);
                                *(void *)(v650 + 56) = *(void *)(v651 + 56);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 64) = *(void *)(v651 + 64);
                                *(void *)(v650 + 72) = *(void *)(v651 + 72);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 80) = *(void *)(v651 + 80);
                                *(void *)(v650 + 88) = *(void *)(v651 + 88);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 96) = *(void *)(v651 + 96);
                                *(void *)(v650 + 104) = *(void *)(v651 + 104);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 112) = *(void *)(v651 + 112);
                                *(void *)(v650 + 120) = *(void *)(v651 + 120);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(unsigned char *)(v650 + 128) = *(unsigned char *)(v651 + 128);
                                *(unsigned char *)(v650 + 129) = *(unsigned char *)(v651 + 129);
                                *(unsigned char *)(v650 + 130) = *(unsigned char *)(v651 + 130);
                                *(void *)(v650 + 136) = *(void *)(v651 + 136);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 144) = *(void *)(v651 + 144);
                                *(void *)(v650 + 152) = *(void *)(v651 + 152);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 160) = *(void *)(v651 + 160);
                                *(void *)(v650 + 168) = *(void *)(v651 + 168);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 176) = *(void *)(v651 + 176);
                                *(void *)(v650 + 184) = *(void *)(v651 + 184);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 192) = *(void *)(v651 + 192);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 200) = *(void *)(v651 + 200);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 208) = *(void *)(v651 + 208);
                                *(void *)(v650 + 216) = *(void *)(v651 + 216);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 224) = *(void *)(v651 + 224);
                                *(void *)(v650 + 232) = *(void *)(v651 + 232);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 240) = *(void *)(v651 + 240);
                                *(void *)(v650 + 248) = *(void *)(v651 + 248);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v650 + 256) = *(void *)(v651 + 256);
                                *(void *)(v650 + 264) = *(void *)(v651 + 264);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v662 = *(void *)(v651 + 272);
                                *(unsigned char *)(v650 + 280) = *(unsigned char *)(v651 + 280);
                                *(void *)(v650 + 272) = v662;
                                *(void *)(v650 + 288) = *(void *)(v651 + 288);
                                *(void *)(v650 + 296) = *(void *)(v651 + 296);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v663 = *(int *)(v652 + 108);
                                uint64_t v664 = (char *)(v650 + v663);
                                v665 = (char *)(v651 + v663);
                                int v666 = __swift_getEnumTagSinglePayload(v650 + v663, 1, v46);
                                int v667 = __swift_getEnumTagSinglePayload((uint64_t)v665, 1, v46);
                                if (v666)
                                {
                                  if (!v667)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v664, v665, v46);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v664, 0, 1, v46);
LABEL_327:
                                    uint64_t v715 = *(int *)(v652 + 112);
                                    v716 = (char *)(v650 + v715);
                                    uint64_t v717 = v651 + v715;
                                    int v718 = __swift_getEnumTagSinglePayload(v650 + v715, 1, v46);
                                    int v719 = __swift_getEnumTagSinglePayload(v717, 1, v46);
                                    if (v718)
                                    {
                                      if (!v719)
                                      {
                                        (*(void (**)(char *, uint64_t, uint64_t))(v1223 + 16))(v716, v717, v46);
                                        uint64_t v672 = (uint64_t)v716;
                                        uint64_t v673 = v46;
LABEL_293:
                                        __swift_storeEnumTagSinglePayload(v672, 0, 1, v673);
                                        goto LABEL_294;
                                      }
                                    }
                                    else
                                    {
                                      if (!v719)
                                      {
                                        v1211(v716, (char *)v717, v46);
LABEL_294:
                                        uint64_t v674 = v27[9];
                                        uint64_t v675 = (uint64_t)v25 + v674;
                                        uint64_t v676 = (uint64_t)v26 + v674;
                                        uint64_t v677 = (int *)type metadata accessor for Party(0);
                                        int v678 = __swift_getEnumTagSinglePayload(v675, 1, (uint64_t)v677);
                                        int v679 = __swift_getEnumTagSinglePayload(v676, 1, (uint64_t)v677);
                                        if (v678)
                                        {
                                          if (!v679)
                                          {
                                            *(void *)uint64_t v675 = *(void *)v676;
                                            *(void *)(v675 + 8) = *(void *)(v676 + 8);
                                            *(void *)(v675 + 16) = *(void *)(v676 + 16);
                                            *(void *)(v675 + 24) = *(void *)(v676 + 24);
                                            *(void *)(v675 + 32) = *(void *)(v676 + 32);
                                            *(void *)(v675 + 40) = *(void *)(v676 + 40);
                                            *(void *)(v675 + 48) = *(void *)(v676 + 48);
                                            *(void *)(v675 + 56) = *(void *)(v676 + 56);
                                            *(void *)(v675 + 64) = *(void *)(v676 + 64);
                                            *(void *)(v675 + 72) = *(void *)(v676 + 72);
                                            *(void *)(v675 + 80) = *(void *)(v676 + 80);
                                            *(void *)(v675 + 88) = *(void *)(v676 + 88);
                                            *(void *)(v675 + 96) = *(void *)(v676 + 96);
                                            *(void *)(v675 + 104) = *(void *)(v676 + 104);
                                            *(void *)(v675 + 112) = *(void *)(v676 + 112);
                                            *(void *)(v675 + 120) = *(void *)(v676 + 120);
                                            *(unsigned char *)(v675 + 128) = *(unsigned char *)(v676 + 128);
                                            *(unsigned char *)(v675 + 129) = *(unsigned char *)(v676 + 129);
                                            *(unsigned char *)(v675 + 130) = *(unsigned char *)(v676 + 130);
                                            *(void *)(v675 + 136) = *(void *)(v676 + 136);
                                            *(void *)(v675 + 144) = *(void *)(v676 + 144);
                                            *(void *)(v675 + 152) = *(void *)(v676 + 152);
                                            *(void *)(v675 + 160) = *(void *)(v676 + 160);
                                            *(void *)(v675 + 168) = *(void *)(v676 + 168);
                                            *(void *)(v675 + 176) = *(void *)(v676 + 176);
                                            *(void *)(v675 + 184) = *(void *)(v676 + 184);
                                            *(void *)(v675 + 192) = *(void *)(v676 + 192);
                                            *(void *)(v675 + 200) = *(void *)(v676 + 200);
                                            *(void *)(v675 + 208) = *(void *)(v676 + 208);
                                            *(void *)(v675 + 216) = *(void *)(v676 + 216);
                                            *(void *)(v675 + 224) = *(void *)(v676 + 224);
                                            *(void *)(v675 + 232) = *(void *)(v676 + 232);
                                            *(void *)(v675 + 240) = *(void *)(v676 + 240);
                                            *(void *)(v675 + 248) = *(void *)(v676 + 248);
                                            uint64_t v680 = v677[24];
                                            __dstf = (void *)(v675 + v680);
                                            uint64_t v681 = (const void *)(v676 + v680);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            uint64_t v46 = v1224;
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            if (__swift_getEnumTagSinglePayload((uint64_t)v681, 1, v1224))
                                            {
                                              uint64_t v682 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                              memcpy(__dstf, v681, *(void *)(*(void *)(v682 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(__dstf, v681, v1224);
                                              __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v1224);
                                            }
                                            uint64_t v689 = v677[25];
                                            uint64_t v690 = (void *)(v675 + v689);
                                            v691 = (const void *)(v676 + v689);
                                            if (__swift_getEnumTagSinglePayload(v676 + v689, 1, v1224))
                                            {
                                              uint64_t v692 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                              memcpy(v690, v691, *(void *)(*(void *)(v692 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v690, v691, v1224);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v690, 0, 1, v1224);
                                            }
                                            uint64_t v693 = v677[26];
                                            v694 = (void *)(v675 + v693);
                                            v695 = (const void *)(v676 + v693);
                                            uint64_t v696 = type metadata accessor for URL();
                                            if (__swift_getEnumTagSinglePayload((uint64_t)v695, 1, v696))
                                            {
                                              uint64_t v697 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                              memcpy(v694, v695, *(void *)(*(void *)(v697 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v696 - 8) + 16))(v694, v695, v696);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v694, 0, 1, v696);
                                            }
                                            __swift_storeEnumTagSinglePayload(v675, 0, 1, (uint64_t)v677);
LABEL_361:
                                            uint64_t v741 = v27[10];
                                            uint64_t v742 = (uint64_t)v25 + v741;
                                            uint64_t v743 = (uint64_t)v26 + v741;
                                            v744 = (int *)type metadata accessor for Trip(0);
                                            int v745 = __swift_getEnumTagSinglePayload(v742, 1, (uint64_t)v744);
                                            int v746 = __swift_getEnumTagSinglePayload(v743, 1, (uint64_t)v744);
                                            if (v745)
                                            {
                                              if (!v746)
                                              {
                                                *(void *)uint64_t v742 = *(void *)v743;
                                                *(void *)(v742 + 8) = *(void *)(v743 + 8);
                                                *(void *)(v742 + 16) = *(void *)(v743 + 16);
                                                *(void *)(v742 + 24) = *(void *)(v743 + 24);
                                                *(void *)(v742 + 32) = *(void *)(v743 + 32);
                                                *(void *)(v742 + 40) = *(void *)(v743 + 40);
                                                *(void *)(v742 + 48) = *(void *)(v743 + 48);
                                                *(void *)(v742 + 56) = *(void *)(v743 + 56);
                                                *(void *)(v742 + 64) = *(void *)(v743 + 64);
                                                *(void *)(v742 + 72) = *(void *)(v743 + 72);
                                                *(void *)(v742 + 80) = *(void *)(v743 + 80);
                                                *(void *)(v742 + 88) = *(void *)(v743 + 88);
                                                *(void *)(v742 + 96) = *(void *)(v743 + 96);
                                                *(void *)(v742 + 104) = *(void *)(v743 + 104);
                                                *(void *)(v742 + 112) = *(void *)(v743 + 112);
                                                *(void *)(v742 + 120) = *(void *)(v743 + 120);
                                                *(unsigned char *)(v742 + 128) = *(unsigned char *)(v743 + 128);
                                                *(unsigned char *)(v742 + 129) = *(unsigned char *)(v743 + 129);
                                                *(unsigned char *)(v742 + 130) = *(unsigned char *)(v743 + 130);
                                                *(void *)(v742 + 136) = *(void *)(v743 + 136);
                                                *(void *)(v742 + 144) = *(void *)(v743 + 144);
                                                *(void *)(v742 + 152) = *(void *)(v743 + 152);
                                                *(void *)(v742 + 160) = *(void *)(v743 + 160);
                                                *(void *)(v742 + 168) = *(void *)(v743 + 168);
                                                *(void *)(v742 + 176) = *(void *)(v743 + 176);
                                                *(void *)(v742 + 184) = *(void *)(v743 + 184);
                                                *(void *)(v742 + 192) = *(void *)(v743 + 192);
                                                *(void *)(v742 + 200) = *(void *)(v743 + 200);
                                                *(void *)(v742 + 208) = *(void *)(v743 + 208);
                                                *(void *)(v742 + 216) = *(void *)(v743 + 216);
                                                uint64_t v747 = v744[22];
                                                __dstg = (void *)(v742 + v747);
                                                v1178 = (const void *)(v743 + v747);
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                if (__swift_getEnumTagSinglePayload((uint64_t)v1178, 1, v1224))
                                                {
                                                  uint64_t v748 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                  memcpy(__dstg, v1178, *(void *)(*(void *)(v748 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(__dstg, v1178, v1224);
                                                  __swift_storeEnumTagSinglePayload((uint64_t)__dstg, 0, 1, v1224);
                                                }
                                                uint64_t v757 = v744[23];
                                                v758 = (void *)(v742 + v757);
                                                v759 = (const void *)(v743 + v757);
                                                if (__swift_getEnumTagSinglePayload(v743 + v757, 1, v1224))
                                                {
                                                  uint64_t v760 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                  memcpy(v758, v759, *(void *)(*(void *)(v760 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(v758, v759, v1224);
                                                  __swift_storeEnumTagSinglePayload((uint64_t)v758, 0, 1, v1224);
                                                }
                                                uint64_t v761 = v744[24];
                                                uint64_t v762 = v742 + v761;
                                                v763 = (uint64_t *)(v743 + v761);
                                                uint64_t v764 = *v763;
                                                *(unsigned char *)(v762 + 8) = *((unsigned char *)v763 + 8);
                                                *(void *)uint64_t v762 = v764;
                                                uint64_t v765 = v744[25];
                                                v766 = (void *)(v742 + v765);
                                                v767 = (const void *)(v743 + v765);
                                                uint64_t v768 = type metadata accessor for URL();
                                                if (__swift_getEnumTagSinglePayload((uint64_t)v767, 1, v768))
                                                {
                                                  uint64_t v769 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                  memcpy(v766, v767, *(void *)(*(void *)(v769 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v768 - 8) + 16))(v766, v767, v768);
                                                  __swift_storeEnumTagSinglePayload((uint64_t)v766, 0, 1, v768);
                                                }
                                                uint64_t v770 = v742;
                                                uint64_t v771 = (uint64_t)v744;
                                                goto LABEL_380;
                                              }
                                              goto LABEL_367;
                                            }
                                            if (v746)
                                            {
                                              outlined destroy of EmailDocument(v742, (void (*)(void))type metadata accessor for Trip);
LABEL_367:
                                              size_t v749 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?)
                                                                           - 8)
                                                               + 64);
                                              v750 = (void *)v742;
                                              v751 = (const void *)v743;
                                              goto LABEL_368;
                                            }
                                            *(void *)uint64_t v742 = *(void *)v743;
                                            *(void *)(v742 + 8) = *(void *)(v743 + 8);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 16) = *(void *)(v743 + 16);
                                            *(void *)(v742 + 24) = *(void *)(v743 + 24);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 32) = *(void *)(v743 + 32);
                                            *(void *)(v742 + 40) = *(void *)(v743 + 40);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 48) = *(void *)(v743 + 48);
                                            *(void *)(v742 + 56) = *(void *)(v743 + 56);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 64) = *(void *)(v743 + 64);
                                            *(void *)(v742 + 72) = *(void *)(v743 + 72);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 80) = *(void *)(v743 + 80);
                                            *(void *)(v742 + 88) = *(void *)(v743 + 88);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 96) = *(void *)(v743 + 96);
                                            *(void *)(v742 + 104) = *(void *)(v743 + 104);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 112) = *(void *)(v743 + 112);
                                            *(void *)(v742 + 120) = *(void *)(v743 + 120);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(unsigned char *)(v742 + 128) = *(unsigned char *)(v743 + 128);
                                            *(unsigned char *)(v742 + 129) = *(unsigned char *)(v743 + 129);
                                            *(unsigned char *)(v742 + 130) = *(unsigned char *)(v743 + 130);
                                            *(void *)(v742 + 136) = *(void *)(v743 + 136);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 144) = *(void *)(v743 + 144);
                                            *(void *)(v742 + 152) = *(void *)(v743 + 152);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 160) = *(void *)(v743 + 160);
                                            *(void *)(v742 + 168) = *(void *)(v743 + 168);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 176) = *(void *)(v743 + 176);
                                            *(void *)(v742 + 184) = *(void *)(v743 + 184);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 192) = *(void *)(v743 + 192);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 200) = *(void *)(v743 + 200);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v742 + 208) = *(void *)(v743 + 208);
                                            *(void *)(v742 + 216) = *(void *)(v743 + 216);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            uint64_t v752 = v744[22];
                                            v753 = (char *)(v742 + v752);
                                            v754 = (char *)(v743 + v752);
                                            int v755 = __swift_getEnumTagSinglePayload(v742 + v752, 1, v46);
                                            int v756 = __swift_getEnumTagSinglePayload((uint64_t)v754, 1, v46);
                                            if (v755)
                                            {
                                              if (!v756)
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v753, v754, v46);
                                                __swift_storeEnumTagSinglePayload((uint64_t)v753, 0, 1, v46);
                                                goto LABEL_402;
                                              }
                                            }
                                            else
                                            {
                                              if (!v756)
                                              {
                                                v1211(v753, v754, v46);
LABEL_402:
                                                uint64_t v885 = v744[23];
                                                v886 = (char *)(v742 + v885);
                                                v887 = (char *)(v743 + v885);
                                                int v888 = __swift_getEnumTagSinglePayload(v742 + v885, 1, v46);
                                                int v889 = __swift_getEnumTagSinglePayload((uint64_t)v887, 1, v46);
                                                if (v888)
                                                {
                                                  if (!v889)
                                                  {
                                                    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v886, v887, v46);
                                                    __swift_storeEnumTagSinglePayload((uint64_t)v886, 0, 1, v46);
LABEL_414:
                                                    uint64_t v898 = v744[24];
                                                    uint64_t v899 = v742 + v898;
                                                    v900 = (uint64_t *)(v743 + v898);
                                                    uint64_t v901 = *v900;
                                                    *(unsigned char *)(v899 + 8) = *((unsigned char *)v900 + 8);
                                                    *(void *)uint64_t v899 = v901;
                                                    uint64_t v902 = v744[25];
                                                    uint64_t v903 = v742 + v902;
                                                    uint64_t v904 = v743 + v902;
                                                    uint64_t v905 = type metadata accessor for URL();
                                                    int v906 = __swift_getEnumTagSinglePayload(v903, 1, v905);
                                                    int v907 = __swift_getEnumTagSinglePayload(v904, 1, v905);
                                                    if (v906)
                                                    {
                                                      if (!v907)
                                                      {
                                                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v905 - 8) + 16))(v903, v904, v905);
                                                        uint64_t v770 = v903;
                                                        uint64_t v771 = v905;
LABEL_380:
                                                        __swift_storeEnumTagSinglePayload(v770, 0, 1, v771);
                                                        goto LABEL_381;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      uint64_t v976 = *(void *)(v905 - 8);
                                                      if (!v907)
                                                      {
                                                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v976 + 24))(v903, v904, v905);
LABEL_381:
                                                        uint64_t v772 = v27[11];
                                                        uint64_t v773 = (uint64_t)v25 + v772;
                                                        uint64_t v774 = (uint64_t)v26 + v772;
                                                        v775 = (int *)type metadata accessor for FlightReservation(0);
                                                        int v776 = __swift_getEnumTagSinglePayload(v773, 1, (uint64_t)v775);
                                                        int v777 = __swift_getEnumTagSinglePayload(v774, 1, (uint64_t)v775);
                                                        if (v776)
                                                        {
                                                          if (!v777)
                                                          {
                                                            *(void *)uint64_t v773 = *(void *)v774;
                                                            *(void *)(v773 + 8) = *(void *)(v774 + 8);
                                                            *(void *)(v773 + 16) = *(void *)(v774 + 16);
                                                            *(void *)(v773 + 24) = *(void *)(v774 + 24);
                                                            *(void *)(v773 + 32) = *(void *)(v774 + 32);
                                                            *(void *)(v773 + 40) = *(void *)(v774 + 40);
                                                            *(void *)(v773 + 48) = *(void *)(v774 + 48);
                                                            *(void *)(v773 + 56) = *(void *)(v774 + 56);
                                                            *(void *)(v773 + 64) = *(void *)(v774 + 64);
                                                            *(void *)(v773 + 72) = *(void *)(v774 + 72);
                                                            *(void *)(v773 + 80) = *(void *)(v774 + 80);
                                                            *(void *)(v773 + 88) = *(void *)(v774 + 88);
                                                            *(unsigned char *)(v773 + 96) = *(unsigned char *)(v774 + 96);
                                                            *(void *)(v773 + 104) = *(void *)(v774 + 104);
                                                            *(void *)(v773 + 112) = *(void *)(v774 + 112);
                                                            uint64_t v778 = v775[13];
                                                            v1208 = (void *)(v773 + v778);
                                                            v1187 = (const void *)(v774 + v778);
                                                            uint64_t v1184 = type metadata accessor for URL();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            if (__swift_getEnumTagSinglePayload((uint64_t)v1187, 1, v1184))
                                                            {
                                                              uint64_t v779 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                              memcpy(v1208, v1187, *(void *)(*(void *)(v779 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1184 - 8) + 16))(v1208, v1187, v1184);
                                                              __swift_storeEnumTagSinglePayload((uint64_t)v1208, 0, 1, v1184);
                                                            }
                                                            uint64_t v787 = v775[14];
                                                            v788 = (void *)(v773 + v787);
                                                            v789 = (const void *)(v774 + v787);
                                                            if (__swift_getEnumTagSinglePayload(v774 + v787, 1, v1184))
                                                            {
                                                              uint64_t v790 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                              memcpy(v788, v789, *(void *)(*(void *)(v790 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1184 - 8) + 16))(v788, v789, v1184);
                                                              __swift_storeEnumTagSinglePayload((uint64_t)v788, 0, 1, v1184);
                                                            }
                                                            uint64_t v791 = v775[15];
                                                            v792 = (void *)(v773 + v791);
                                                            v793 = (void *)(v774 + v791);
                                                            void *v792 = *v793;
                                                            v792[1] = v793[1];
                                                            uint64_t v794 = v775[16];
                                                            v795 = (void *)(v773 + v794);
                                                            v796 = (void *)(v774 + v794);
                                                            void *v795 = *v796;
                                                            v795[1] = v796[1];
                                                            uint64_t v797 = v775[17];
                                                            v798 = (void *)(v773 + v797);
                                                            v799 = (void *)(v774 + v797);
                                                            void *v798 = *v799;
                                                            v798[1] = v799[1];
                                                            uint64_t v800 = v775[18];
                                                            v1209 = (void *)(v773 + v800);
                                                            uint64_t v801 = v774 + v800;
                                                            uint64_t v802 = type metadata accessor for DateComponents();
                                                            v803 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v802 - 8) + 16);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            v803(v1209, v801, v802);
                                                            v803((void *)(v773 + v775[19]), v774 + v775[19], v802);
                                                            uint64_t v804 = v775[20];
                                                            v805 = (void *)(v773 + v804);
                                                            v806 = (void *)(v774 + v804);
                                                            void *v805 = *v806;
                                                            v805[1] = v806[1];
                                                            uint64_t v807 = v775[21];
                                                            v808 = (void *)(v773 + v807);
                                                            v809 = (void *)(v774 + v807);
                                                            void *v808 = *v809;
                                                            v808[1] = v809[1];
                                                            uint64_t v810 = v775[22];
                                                            v811 = (void *)(v773 + v810);
                                                            v812 = (void *)(v774 + v810);
                                                            void *v811 = *v812;
                                                            v811[1] = v812[1];
                                                            uint64_t v813 = v775[23];
                                                            v814 = (void *)(v773 + v813);
                                                            v815 = (void *)(v774 + v813);
                                                            void *v814 = *v815;
                                                            v814[1] = v815[1];
                                                            uint64_t v816 = v775[24];
                                                            v817 = (void *)(v773 + v816);
                                                            v818 = (void *)(v774 + v816);
                                                            void *v817 = *v818;
                                                            v817[1] = v818[1];
                                                            uint64_t v819 = v775[25];
                                                            v820 = (void *)(v773 + v819);
                                                            v821 = (void *)(v774 + v819);
                                                            void *v820 = *v821;
                                                            v820[1] = v821[1];
                                                            uint64_t v822 = v775[26];
                                                            v823 = (void *)(v773 + v822);
                                                            v824 = (void *)(v774 + v822);
                                                            void *v823 = *v824;
                                                            v823[1] = v824[1];
                                                            uint64_t v825 = v775[27];
                                                            v826 = (void *)(v773 + v825);
                                                            v827 = (void *)(v774 + v825);
                                                            void *v826 = *v827;
                                                            v826[1] = v827[1];
                                                            uint64_t v828 = v775[28];
                                                            v829 = (void *)(v773 + v828);
                                                            v830 = (void *)(v774 + v828);
                                                            void *v829 = *v830;
                                                            v829[1] = v830[1];
                                                            uint64_t v831 = v775[29];
                                                            v832 = (void *)(v773 + v831);
                                                            v833 = (void *)(v774 + v831);
                                                            void *v832 = *v833;
                                                            v832[1] = v833[1];
                                                            uint64_t v834 = v775[30];
                                                            v835 = (void *)(v773 + v834);
                                                            v836 = (void *)(v774 + v834);
                                                            void *v835 = *v836;
                                                            v835[1] = v836[1];
                                                            uint64_t v837 = v775[31];
                                                            v838 = (void *)(v773 + v837);
                                                            v839 = (void *)(v774 + v837);
                                                            void *v838 = *v839;
                                                            v838[1] = v839[1];
                                                            uint64_t v840 = v775[32];
                                                            v841 = (void *)(v773 + v840);
                                                            v842 = (void *)(v774 + v840);
                                                            void *v841 = *v842;
                                                            v841[1] = v842[1];
                                                            *(void *)(v773 + v775[33]) = *(void *)(v774 + v775[33]);
                                                            *(void *)(v773 + v775[34]) = *(void *)(v774 + v775[34]);
                                                            uint64_t v843 = v775[35];
                                                            v844 = (void *)(v773 + v843);
                                                            v845 = (void *)(v774 + v843);
                                                            void *v844 = *v845;
                                                            v844[1] = v845[1];
                                                            uint64_t v846 = v775[36];
                                                            v847 = (void *)(v773 + v846);
                                                            v848 = (void *)(v774 + v846);
                                                            void *v847 = *v848;
                                                            v847[1] = v848[1];
                                                            uint64_t v849 = v775[37];
                                                            v850 = (void *)(v773 + v849);
                                                            v851 = (void *)(v774 + v849);
                                                            void *v850 = *v851;
                                                            v850[1] = v851[1];
                                                            uint64_t v852 = v775[38];
                                                            __dsth = (void *)(v773 + v852);
                                                            v853 = (const void *)(v774 + v852);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            if (__swift_getEnumTagSinglePayload((uint64_t)v853, 1, v1224))
                                                            {
                                                              uint64_t v854 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                              memcpy(__dsth, v853, *(void *)(*(void *)(v854 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, const void *, uint64_t))(v1223 + 16))(__dsth, v853, v1224);
                                                              __swift_storeEnumTagSinglePayload((uint64_t)__dsth, 0, 1, v1224);
                                                            }
                                                            uint64_t v26 = v1213;
                                                            uint64_t v855 = v775[39];
                                                            v856 = (void *)(v773 + v855);
                                                            v857 = (void *)(v774 + v855);
                                                            void *v856 = *v857;
                                                            v856[1] = v857[1];
                                                            uint64_t v858 = v775[40];
                                                            v859 = (void *)(v773 + v858);
                                                            v860 = (void *)(v774 + v858);
                                                            void *v859 = *v860;
                                                            v859[1] = v860[1];
                                                            uint64_t v861 = v775[41];
                                                            uint64_t v862 = v773 + v861;
                                                            v863 = (uint64_t *)(v774 + v861);
                                                            uint64_t v864 = *v863;
                                                            *(unsigned char *)(v862 + 8) = *((unsigned char *)v863 + 8);
                                                            *(void *)uint64_t v862 = v864;
                                                            uint64_t v865 = v775[42];
                                                            v866 = (void *)(v773 + v865);
                                                            v867 = (void *)(v774 + v865);
                                                            void *v866 = *v867;
                                                            v866[1] = v867[1];
                                                            uint64_t v868 = v775[43];
                                                            uint64_t v869 = v773 + v868;
                                                            v870 = (long long *)(v774 + v868);
                                                            long long v871 = *v870;
                                                            *(void *)(v869 + 13) = *(void *)((char *)v870 + 13);
                                                            *(_OWORD *)uint64_t v869 = v871;
                                                            uint64_t v872 = v775[44];
                                                            v873 = (void *)(v773 + v872);
                                                            v874 = (void *)(v774 + v872);
                                                            void *v873 = *v874;
                                                            v873[1] = v874[1];
                                                            uint64_t v875 = v775[45];
                                                            v876 = (void *)(v773 + v875);
                                                            v877 = (void *)(v774 + v875);
                                                            void *v876 = *v877;
                                                            v876[1] = v877[1];
                                                            uint64_t v878 = v775[46];
                                                            v879 = (void *)(v773 + v878);
                                                            v880 = (void *)(v774 + v878);
                                                            void *v879 = *v880;
                                                            v879[1] = v880[1];
                                                            uint64_t v881 = v775[47];
                                                            v882 = (void *)(v773 + v881);
                                                            v883 = (void *)(v774 + v881);
                                                            void *v882 = *v883;
                                                            v882[1] = v883[1];
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            __swift_storeEnumTagSinglePayload(v773, 0, 1, (uint64_t)v775);
                                                            uint64_t v25 = v1216;
                                                            uint64_t v27 = v1217;
LABEL_430:
                                                            uint64_t v1007 = v27[12];
                                                            uint64_t v1008 = (uint64_t)v25 + v1007;
                                                            uint64_t v1009 = (uint64_t)v26 + v1007;
                                                            v1010 = (int *)type metadata accessor for HotelReservation(0);
                                                            int v1011 = __swift_getEnumTagSinglePayload(v1008, 1, (uint64_t)v1010);
                                                            int v1012 = __swift_getEnumTagSinglePayload(v1009, 1, (uint64_t)v1010);
                                                            if (v1011)
                                                            {
                                                              if (!v1012)
                                                              {
                                                                *(void *)uint64_t v1008 = *(void *)v1009;
                                                                *(void *)(v1008 + 8) = *(void *)(v1009 + 8);
                                                                *(void *)(v1008 + 16) = *(void *)(v1009 + 16);
                                                                *(void *)(v1008 + 24) = *(void *)(v1009 + 24);
                                                                *(void *)(v1008 + 32) = *(void *)(v1009 + 32);
                                                                *(void *)(v1008 + 40) = *(void *)(v1009 + 40);
                                                                *(void *)(v1008 + 48) = *(void *)(v1009 + 48);
                                                                *(void *)(v1008 + 56) = *(void *)(v1009 + 56);
                                                                *(void *)(v1008 + 64) = *(void *)(v1009 + 64);
                                                                *(void *)(v1008 + 72) = *(void *)(v1009 + 72);
                                                                *(void *)(v1008 + 80) = *(void *)(v1009 + 80);
                                                                *(void *)(v1008 + 88) = *(void *)(v1009 + 88);
                                                                *(unsigned char *)(v1008 + 96) = *(unsigned char *)(v1009 + 96);
                                                                *(void *)(v1008 + 104) = *(void *)(v1009 + 104);
                                                                *(void *)(v1008 + 112) = *(void *)(v1009 + 112);
                                                                *(void *)(v1008 + 120) = *(void *)(v1009 + 120);
                                                                *(void *)(v1008 + 128) = *(void *)(v1009 + 128);
                                                                uint64_t v1013 = v1010[14];
                                                                v1210 = (void *)(v1008 + v1013);
                                                                v1185 = (const void *)(v1009 + v1013);
                                                                uint64_t v1180 = type metadata accessor for DateComponents();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                if (__swift_getEnumTagSinglePayload((uint64_t)v1185, 1, v1180))
                                                                {
                                                                  uint64_t v1014 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                  memcpy(v1210, v1185, *(void *)(*(void *)(v1014 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1180 - 8) + 16))(v1210, v1185, v1180);
                                                                  __swift_storeEnumTagSinglePayload((uint64_t)v1210, 0, 1, v1180);
                                                                }
                                                                uint64_t v1022 = v1010[15];
                                                                v1023 = (void *)(v1008 + v1022);
                                                                v1024 = (const void *)(v1009 + v1022);
                                                                if (__swift_getEnumTagSinglePayload(v1009 + v1022, 1, v1180))
                                                                {
                                                                  uint64_t v1025 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                  memcpy(v1023, v1024, *(void *)(*(void *)(v1025 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1180 - 8) + 16))(v1023, v1024, v1180);
                                                                  __swift_storeEnumTagSinglePayload((uint64_t)v1023, 0, 1, v1180);
                                                                }
                                                                uint64_t v1026 = v1010[16];
                                                                v1027 = (void *)(v1008 + v1026);
                                                                v1028 = (void *)(v1009 + v1026);
                                                                void *v1027 = *v1028;
                                                                v1027[1] = v1028[1];
                                                                uint64_t v1029 = v1010[17];
                                                                v1030 = (void *)(v1008 + v1029);
                                                                v1031 = (void *)(v1009 + v1029);
                                                                void *v1030 = *v1031;
                                                                v1030[1] = v1031[1];
                                                                uint64_t v1032 = v1010[18];
                                                                v1033 = (void *)(v1008 + v1032);
                                                                v1034 = (void *)(v1009 + v1032);
                                                                void *v1033 = *v1034;
                                                                v1033[1] = v1034[1];
                                                                uint64_t v1035 = v1010[19];
                                                                v1036 = (void *)(v1008 + v1035);
                                                                v1037 = (void *)(v1009 + v1035);
                                                                void *v1036 = *v1037;
                                                                v1036[1] = v1037[1];
                                                                uint64_t v1038 = v1010[20];
                                                                v1039 = (void *)(v1008 + v1038);
                                                                v1040 = (void *)(v1009 + v1038);
                                                                void *v1039 = *v1040;
                                                                v1039[1] = v1040[1];
                                                                *(void *)(v1008 + v1010[21]) = *(void *)(v1009 + v1010[21]);
                                                                *(void *)(v1008 + v1010[22]) = *(void *)(v1009 + v1010[22]);
                                                                uint64_t v1041 = v1010[23];
                                                                uint64_t v1042 = v1008 + v1041;
                                                                v1043 = (uint64_t *)(v1009 + v1041);
                                                                uint64_t v1044 = *v1043;
                                                                *(unsigned char *)(v1042 + 8) = *((unsigned char *)v1043 + 8);
                                                                *(void *)uint64_t v1042 = v1044;
                                                                uint64_t v1045 = v1010[24];
                                                                uint64_t v1046 = v1008 + v1045;
                                                                v1047 = (uint64_t *)(v1009 + v1045);
                                                                uint64_t v1048 = *v1047;
                                                                *(unsigned char *)(v1046 + 8) = *((unsigned char *)v1047 + 8);
                                                                *(void *)uint64_t v1046 = v1048;
                                                                uint64_t v1049 = v1010[25];
                                                                v1050 = (void *)(v1008 + v1049);
                                                                v1051 = (void *)(v1009 + v1049);
                                                                void *v1050 = *v1051;
                                                                v1050[1] = v1051[1];
                                                                uint64_t v1052 = v1010[26];
                                                                v1053 = (void *)(v1008 + v1052);
                                                                v1054 = (void *)(v1009 + v1052);
                                                                void *v1053 = *v1054;
                                                                v1053[1] = v1054[1];
                                                                uint64_t v1055 = v1010[27];
                                                                v1056 = (void *)(v1008 + v1055);
                                                                v1057 = (void *)(v1009 + v1055);
                                                                void *v1056 = *v1057;
                                                                v1056[1] = v1057[1];
                                                                uint64_t v1058 = v1010[28];
                                                                v1059 = (void *)(v1008 + v1058);
                                                                v1060 = (void *)(v1009 + v1058);
                                                                void *v1059 = *v1060;
                                                                v1059[1] = v1060[1];
                                                                uint64_t v1061 = v1010[29];
                                                                uint64_t v1062 = v1008 + v1061;
                                                                v1063 = (uint64_t *)(v1009 + v1061);
                                                                uint64_t v1064 = *v1063;
                                                                *(unsigned char *)(v1062 + 8) = *((unsigned char *)v1063 + 8);
                                                                *(void *)uint64_t v1062 = v1064;
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                __swift_storeEnumTagSinglePayload(v1008, 0, 1, (uint64_t)v1010);
                                                                uint64_t v4 = v1221;
                                                                uint64_t v5 = v1222;
                                                                uint64_t v27 = v1217;
                                                                a3 = v1220;
                                                                uint64_t v26 = v1213;
                                                                uint64_t v25 = v1216;
LABEL_446:
                                                                uint64_t v1065 = v27[13];
                                                                uint64_t v25 = (void *)((char *)v25 + v1065);
                                                                uint64_t v26 = (void *)((char *)v26 + v1065);
                                                                v1066 = (int *)type metadata accessor for RestaurantReservation(0);
                                                                int v1067 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, (uint64_t)v1066);
                                                                int v1068 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v1066);
                                                                if (v1067)
                                                                {
                                                                  if (!v1068)
                                                                  {
                                                                    *uint64_t v25 = *v26;
                                                                    v25[1] = v26[1];
                                                                    v25[2] = v26[2];
                                                                    v25[3] = v26[3];
                                                                    v25[4] = v26[4];
                                                                    v25[5] = v26[5];
                                                                    v25[6] = v26[6];
                                                                    v25[7] = v26[7];
                                                                    v25[8] = v26[8];
                                                                    v25[9] = v26[9];
                                                                    v25[10] = v26[10];
                                                                    v25[11] = v26[11];
                                                                    *((unsigned char *)v25 + 96) = *((unsigned char *)v26 + 96);
                                                                    v25[13] = v26[13];
                                                                    v25[14] = v26[14];
                                                                    v25[15] = v26[15];
                                                                    v25[16] = v26[16];
                                                                    uint64_t v1069 = v1066[14];
                                                                    v1219 = (char *)v25 + v1069;
                                                                    __dsti = (char *)v26 + v1069;
                                                                    uint64_t v1070 = type metadata accessor for DateComponents();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    if (__swift_getEnumTagSinglePayload((uint64_t)__dsti, 1, v1070))
                                                                    {
                                                                      uint64_t v1071 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                      memcpy(v1219, __dsti, *(void *)(*(void *)(v1071 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1070 - 8) + 16))(v1219, __dsti, v1070);
                                                                      __swift_storeEnumTagSinglePayload((uint64_t)v1219, 0, 1, v1070);
                                                                    }
                                                                    uint64_t v1078 = v1066[15];
                                                                    v1079 = (void *)((char *)v25 + v1078);
                                                                    v1080 = (void *)((char *)v26 + v1078);
                                                                    void *v1079 = *v1080;
                                                                    v1079[1] = v1080[1];
                                                                    uint64_t v1081 = v1066[16];
                                                                    v1082 = (void *)((char *)v25 + v1081);
                                                                    v1083 = (void *)((char *)v26 + v1081);
                                                                    void *v1082 = *v1083;
                                                                    v1082[1] = v1083[1];
                                                                    uint64_t v1084 = v1066[17];
                                                                    v1085 = (void *)((char *)v25 + v1084);
                                                                    v1086 = (void *)((char *)v26 + v1084);
                                                                    void *v1085 = *v1086;
                                                                    v1085[1] = v1086[1];
                                                                    uint64_t v1087 = v1066[18];
                                                                    v1088 = (void *)((char *)v25 + v1087);
                                                                    v1089 = (void *)((char *)v26 + v1087);
                                                                    void *v1088 = *v1089;
                                                                    v1088[1] = v1089[1];
                                                                    uint64_t v1090 = v1066[19];
                                                                    v1091 = (void *)((char *)v25 + v1090);
                                                                    v1092 = (void *)((char *)v26 + v1090);
                                                                    void *v1091 = *v1092;
                                                                    v1091[1] = v1092[1];
                                                                    *(void *)((char *)v25 + v1066[20]) = *(void *)((char *)v26 + v1066[20]);
                                                                    uint64_t v1093 = v1066[21];
                                                                    v1094 = (void *)((char *)v25 + v1093);
                                                                    v1095 = (void *)((char *)v26 + v1093);
                                                                    void *v1094 = *v1095;
                                                                    v1094[1] = v1095[1];
                                                                    uint64_t v1096 = v1066[22];
                                                                    v1097 = (void *)((char *)v25 + v1096);
                                                                    v1098 = (void *)((char *)v26 + v1096);
                                                                    void *v1097 = *v1098;
                                                                    v1097[1] = v1098[1];
                                                                    uint64_t v1099 = v1066[23];
                                                                    v1100 = (void *)((char *)v25 + v1099);
                                                                    v1101 = (void *)((char *)v26 + v1099);
                                                                    void *v1100 = *v1101;
                                                                    v1100[1] = v1101[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v1066);
                                                                    uint64_t v4 = v1221;
                                                                    uint64_t v5 = v1222;
                                                                    a3 = v1220;
                                                                    goto LABEL_112;
                                                                  }
                                                                  goto LABEL_452;
                                                                }
                                                                if (v1068)
                                                                {
                                                                  outlined destroy of EmailDocument((uint64_t)v25, (void (*)(void))type metadata accessor for RestaurantReservation);
LABEL_452:
                                                                  uint64_t v35 = (uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?;
                                                                  goto LABEL_15;
                                                                }
                                                                *uint64_t v25 = *v26;
                                                                v25[1] = v26[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[2] = v26[2];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[3] = v26[3];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[4] = v26[4];
                                                                v25[5] = v26[5];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[6] = v26[6];
                                                                v25[7] = v26[7];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[8] = v26[8];
                                                                v25[9] = v26[9];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[10] = v26[10];
                                                                v25[11] = v26[11];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *((unsigned char *)v25 + 96) = *((unsigned char *)v26 + 96);
                                                                v25[13] = v26[13];
                                                                v25[14] = v26[14];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v25[15] = v26[15];
                                                                v25[16] = v26[16];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v1072 = v1066[14];
                                                                v1073 = (char *)v25 + v1072;
                                                                v1074 = (char *)v26 + v1072;
                                                                uint64_t v1075 = type metadata accessor for DateComponents();
                                                                int v1076 = __swift_getEnumTagSinglePayload((uint64_t)v1073, 1, v1075);
                                                                int v1077 = __swift_getEnumTagSinglePayload((uint64_t)v1074, 1, v1075);
                                                                if (v1076)
                                                                {
                                                                  if (!v1077)
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1075 - 8) + 16))(v1073, v1074, v1075);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v1073, 0, 1, v1075);
LABEL_467:
                                                                    uint64_t v1111 = v1066[15];
                                                                    v1112 = (void *)((char *)v25 + v1111);
                                                                    v1113 = (void *)((char *)v26 + v1111);
                                                                    void *v1112 = *v1113;
                                                                    v1112[1] = v1113[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1114 = v1066[16];
                                                                    v1115 = (void *)((char *)v25 + v1114);
                                                                    v1116 = (void *)((char *)v26 + v1114);
                                                                    void *v1115 = *v1116;
                                                                    v1115[1] = v1116[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1117 = v1066[17];
                                                                    v1118 = (void *)((char *)v25 + v1117);
                                                                    v1119 = (void *)((char *)v26 + v1117);
                                                                    void *v1118 = *v1119;
                                                                    v1118[1] = v1119[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1120 = v1066[18];
                                                                    v1121 = (void *)((char *)v25 + v1120);
                                                                    v1122 = (void *)((char *)v26 + v1120);
                                                                    void *v1121 = *v1122;
                                                                    v1121[1] = v1122[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1123 = v1066[19];
                                                                    v1124 = (void *)((char *)v25 + v1123);
                                                                    v1125 = (void *)((char *)v26 + v1123);
                                                                    void *v1124 = *v1125;
                                                                    v1124[1] = v1125[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)((char *)v25 + v1066[20]) = *(void *)((char *)v26 + v1066[20]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1126 = v1066[21];
                                                                    v1127 = (void *)((char *)v25 + v1126);
                                                                    v1128 = (void *)((char *)v26 + v1126);
                                                                    void *v1127 = *v1128;
                                                                    v1127[1] = v1128[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1129 = v1066[22];
                                                                    v1130 = (void *)((char *)v25 + v1129);
                                                                    v1131 = (void *)((char *)v26 + v1129);
                                                                    void *v1130 = *v1131;
                                                                    v1130[1] = v1131[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1132 = v1066[23];
                                                                    v1133 = (void *)((char *)v25 + v1132);
                                                                    v1134 = (void *)((char *)v26 + v1132);
                                                                    void *v1133 = *v1134;
                                                                    v1133[1] = v1134[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    goto LABEL_112;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v1109 = *(void *)(v1075 - 8);
                                                                  if (!v1077)
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1109 + 24))(v1073, v1074, v1075);
                                                                    goto LABEL_467;
                                                                  }
                                                                  (*(void (**)(char *, uint64_t))(v1109 + 8))(v1073, v1075);
                                                                }
                                                                uint64_t v1110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                memcpy(v1073, v1074, *(void *)(*(void *)(v1110 - 8) + 64));
                                                                goto LABEL_467;
                                                              }
                                                              goto LABEL_436;
                                                            }
                                                            if (v1012)
                                                            {
                                                              outlined destroy of EmailDocument(v1008, (void (*)(void))type metadata accessor for HotelReservation);
LABEL_436:
                                                              uint64_t v1015 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
                                                              memcpy((void *)v1008, (const void *)v1009, *(void *)(*(void *)(v1015 - 8) + 64));
LABEL_437:
                                                              uint64_t v4 = v1221;
                                                              uint64_t v5 = v1222;
                                                              a3 = v1220;
                                                              goto LABEL_446;
                                                            }
                                                            *(void *)uint64_t v1008 = *(void *)v1009;
                                                            *(void *)(v1008 + 8) = *(void *)(v1009 + 8);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 16) = *(void *)(v1009 + 16);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 24) = *(void *)(v1009 + 24);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 32) = *(void *)(v1009 + 32);
                                                            *(void *)(v1008 + 40) = *(void *)(v1009 + 40);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 48) = *(void *)(v1009 + 48);
                                                            *(void *)(v1008 + 56) = *(void *)(v1009 + 56);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 64) = *(void *)(v1009 + 64);
                                                            *(void *)(v1008 + 72) = *(void *)(v1009 + 72);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 80) = *(void *)(v1009 + 80);
                                                            *(void *)(v1008 + 88) = *(void *)(v1009 + 88);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(unsigned char *)(v1008 + 96) = *(unsigned char *)(v1009 + 96);
                                                            *(void *)(v1008 + 104) = *(void *)(v1009 + 104);
                                                            *(void *)(v1008 + 112) = *(void *)(v1009 + 112);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1008 + 120) = *(void *)(v1009 + 120);
                                                            *(void *)(v1008 + 128) = *(void *)(v1009 + 128);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            uint64_t v1016 = v1010[14];
                                                            v1017 = (void *)(v1008 + v1016);
                                                            v1018 = (const void *)(v1009 + v1016);
                                                            uint64_t v1019 = type metadata accessor for DateComponents();
                                                            int v1020 = __swift_getEnumTagSinglePayload((uint64_t)v1017, 1, v1019);
                                                            int v1021 = __swift_getEnumTagSinglePayload((uint64_t)v1018, 1, v1019);
                                                            if (v1020)
                                                            {
                                                              if (!v1021)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1019 - 8) + 16))(v1017, v1018, v1019);
                                                                __swift_storeEnumTagSinglePayload((uint64_t)v1017, 0, 1, v1019);
                                                                goto LABEL_461;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t v1102 = *(void *)(v1019 - 8);
                                                              if (!v1021)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(v1102 + 24))(v1017, v1018, v1019);
LABEL_461:
                                                                uint64_t v1104 = v1010[15];
                                                                v1105 = (void *)(v1008 + v1104);
                                                                v1106 = (const void *)(v1009 + v1104);
                                                                int v1107 = __swift_getEnumTagSinglePayload(v1008 + v1104, 1, v1019);
                                                                int v1108 = __swift_getEnumTagSinglePayload((uint64_t)v1106, 1, v1019);
                                                                if (v1107)
                                                                {
                                                                  if (!v1108)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1019 - 8) + 16))(v1105, v1106, v1019);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v1105, 0, 1, v1019);
LABEL_471:
                                                                    uint64_t v27 = v1217;
                                                                    uint64_t v1137 = v1010[16];
                                                                    v1138 = (void *)(v1008 + v1137);
                                                                    v1139 = (void *)(v1009 + v1137);
                                                                    void *v1138 = *v1139;
                                                                    v1138[1] = v1139[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1140 = v1010[17];
                                                                    v1141 = (void *)(v1008 + v1140);
                                                                    v1142 = (void *)(v1009 + v1140);
                                                                    void *v1141 = *v1142;
                                                                    v1141[1] = v1142[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1143 = v1010[18];
                                                                    v1144 = (void *)(v1008 + v1143);
                                                                    v1145 = (void *)(v1009 + v1143);
                                                                    void *v1144 = *v1145;
                                                                    v1144[1] = v1145[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1146 = v1010[19];
                                                                    v1147 = (void *)(v1008 + v1146);
                                                                    v1148 = (void *)(v1009 + v1146);
                                                                    void *v1147 = *v1148;
                                                                    v1147[1] = v1148[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1149 = v1010[20];
                                                                    v1150 = (void *)(v1008 + v1149);
                                                                    v1151 = (void *)(v1009 + v1149);
                                                                    void *v1150 = *v1151;
                                                                    v1150[1] = v1151[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1008 + v1010[21]) = *(void *)(v1009 + v1010[21]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1008 + v1010[22]) = *(void *)(v1009 + v1010[22]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1152 = v1010[23];
                                                                    uint64_t v1153 = v1008 + v1152;
                                                                    v1154 = (uint64_t *)(v1009 + v1152);
                                                                    uint64_t v1155 = *v1154;
                                                                    *(unsigned char *)(v1153 + 8) = *((unsigned char *)v1154 + 8);
                                                                    *(void *)uint64_t v1153 = v1155;
                                                                    uint64_t v1156 = v1010[24];
                                                                    uint64_t v1157 = v1008 + v1156;
                                                                    uint64_t v1158 = v1009 + v1156;
                                                                    LOBYTE(v1155) = *(unsigned char *)(v1158 + 8);
                                                                    *(void *)uint64_t v1157 = *(void *)v1158;
                                                                    *(unsigned char *)(v1157 + 8) = v1155;
                                                                    uint64_t v1159 = v1010[25];
                                                                    v1160 = (void *)(v1008 + v1159);
                                                                    v1161 = (void *)(v1009 + v1159);
                                                                    void *v1160 = *v1161;
                                                                    v1160[1] = v1161[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1162 = v1010[26];
                                                                    v1163 = (void *)(v1008 + v1162);
                                                                    v1164 = (void *)(v1009 + v1162);
                                                                    void *v1163 = *v1164;
                                                                    v1163[1] = v1164[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1165 = v1010[27];
                                                                    v1166 = (void *)(v1008 + v1165);
                                                                    v1167 = (void *)(v1009 + v1165);
                                                                    void *v1166 = *v1167;
                                                                    v1166[1] = v1167[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1168 = v1010[28];
                                                                    v1169 = (void *)(v1008 + v1168);
                                                                    v1170 = (void *)(v1009 + v1168);
                                                                    void *v1169 = *v1170;
                                                                    v1169[1] = v1170[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1171 = v1010[29];
                                                                    uint64_t v1172 = v1008 + v1171;
                                                                    v1173 = (uint64_t *)(v1009 + v1171);
                                                                    uint64_t v1174 = *v1173;
                                                                    *(unsigned char *)(v1172 + 8) = *((unsigned char *)v1173 + 8);
                                                                    *(void *)uint64_t v1172 = v1174;
                                                                    goto LABEL_437;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v1135 = *(void *)(v1019 - 8);
                                                                  if (!v1108)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(v1135 + 24))(v1105, v1106, v1019);
                                                                    goto LABEL_471;
                                                                  }
                                                                  (*(void (**)(void *, uint64_t))(v1135 + 8))(v1105, v1019);
                                                                }
                                                                uint64_t v1136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                memcpy(v1105, v1106, *(void *)(*(void *)(v1136 - 8) + 64));
                                                                goto LABEL_471;
                                                              }
                                                              (*(void (**)(void *, uint64_t))(v1102 + 8))(v1017, v1019);
                                                            }
                                                            uint64_t v1103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                            memcpy(v1017, v1018, *(void *)(*(void *)(v1103 - 8) + 64));
                                                            goto LABEL_461;
                                                          }
LABEL_387:
                                                          uint64_t v780 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
                                                          memcpy((void *)v773, (const void *)v774, *(void *)(*(void *)(v780 - 8) + 64));
                                                          goto LABEL_430;
                                                        }
                                                        if (v777)
                                                        {
                                                          outlined destroy of EmailDocument(v773, (void (*)(void))type metadata accessor for FlightReservation);
                                                          goto LABEL_387;
                                                        }
                                                        *(void *)uint64_t v773 = *(void *)v774;
                                                        *(void *)(v773 + 8) = *(void *)(v774 + 8);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v773 + 16) = *(void *)(v774 + 16);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v773 + 24) = *(void *)(v774 + 24);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v773 + 32) = *(void *)(v774 + 32);
                                                        *(void *)(v773 + 40) = *(void *)(v774 + 40);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v773 + 48) = *(void *)(v774 + 48);
                                                        *(void *)(v773 + 56) = *(void *)(v774 + 56);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v773 + 64) = *(void *)(v774 + 64);
                                                        *(void *)(v773 + 72) = *(void *)(v774 + 72);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v773 + 80) = *(void *)(v774 + 80);
                                                        *(void *)(v773 + 88) = *(void *)(v774 + 88);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(unsigned char *)(v773 + 96) = *(unsigned char *)(v774 + 96);
                                                        *(void *)(v773 + 104) = *(void *)(v774 + 104);
                                                        *(void *)(v773 + 112) = *(void *)(v774 + 112);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        uint64_t v781 = v775[13];
                                                        v782 = (void *)(v773 + v781);
                                                        v783 = (const void *)(v774 + v781);
                                                        uint64_t v784 = type metadata accessor for URL();
                                                        int v785 = __swift_getEnumTagSinglePayload((uint64_t)v782, 1, v784);
                                                        int v786 = __swift_getEnumTagSinglePayload((uint64_t)v783, 1, v784);
                                                        if (v785)
                                                        {
                                                          if (!v786)
                                                          {
                                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v784 - 8) + 16))(v782, v783, v784);
                                                            __swift_storeEnumTagSinglePayload((uint64_t)v782, 0, 1, v784);
                                                            goto LABEL_408;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t v890 = *(void *)(v784 - 8);
                                                          if (!v786)
                                                          {
                                                            (*(void (**)(void *, const void *, uint64_t))(v890 + 24))(v782, v783, v784);
LABEL_408:
                                                            uint64_t v892 = v775[14];
                                                            v893 = (void *)(v773 + v892);
                                                            v894 = (const void *)(v774 + v892);
                                                            int v895 = __swift_getEnumTagSinglePayload(v773 + v892, 1, v784);
                                                            int v896 = __swift_getEnumTagSinglePayload((uint64_t)v894, 1, v784);
                                                            if (v895)
                                                            {
                                                              if (!v896)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v784 - 8) + 16))(v893, v894, v784);
                                                                __swift_storeEnumTagSinglePayload((uint64_t)v893, 0, 1, v784);
                                                                goto LABEL_420;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t v908 = *(void *)(v784 - 8);
                                                              if (!v896)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(v908 + 24))(v893, v894, v784);
LABEL_420:
                                                                uint64_t v27 = v1217;
                                                                uint64_t v910 = v775[15];
                                                                v911 = (void *)(v773 + v910);
                                                                v912 = (void *)(v774 + v910);
                                                                void *v911 = *v912;
                                                                v911[1] = v912[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v913 = v775[16];
                                                                v914 = (void *)(v773 + v913);
                                                                v915 = (void *)(v774 + v913);
                                                                void *v914 = *v915;
                                                                v914[1] = v915[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v916 = v775[17];
                                                                v917 = (void *)(v773 + v916);
                                                                v918 = (void *)(v774 + v916);
                                                                void *v917 = *v918;
                                                                v917[1] = v918[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v919 = v775[18];
                                                                uint64_t v920 = v773 + v919;
                                                                uint64_t v921 = v774 + v919;
                                                                uint64_t v922 = type metadata accessor for DateComponents();
                                                                v923 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v922 - 8) + 24);
                                                                v923(v920, v921, v922);
                                                                v923(v773 + v775[19], v774 + v775[19], v922);
                                                                uint64_t v924 = v775[20];
                                                                v925 = (void *)(v773 + v924);
                                                                v926 = (void *)(v774 + v924);
                                                                void *v925 = *v926;
                                                                v925[1] = v926[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v927 = v775[21];
                                                                v928 = (void *)(v773 + v927);
                                                                v929 = (void *)(v774 + v927);
                                                                void *v928 = *v929;
                                                                v928[1] = v929[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v930 = v775[22];
                                                                v931 = (void *)(v773 + v930);
                                                                v932 = (void *)(v774 + v930);
                                                                void *v931 = *v932;
                                                                v931[1] = v932[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v933 = v775[23];
                                                                v934 = (void *)(v773 + v933);
                                                                v935 = (void *)(v774 + v933);
                                                                void *v934 = *v935;
                                                                v934[1] = v935[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v936 = v775[24];
                                                                v937 = (void *)(v773 + v936);
                                                                v938 = (void *)(v774 + v936);
                                                                void *v937 = *v938;
                                                                v937[1] = v938[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v939 = v775[25];
                                                                v940 = (void *)(v773 + v939);
                                                                v941 = (void *)(v774 + v939);
                                                                void *v940 = *v941;
                                                                v940[1] = v941[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v942 = v775[26];
                                                                v943 = (void *)(v773 + v942);
                                                                v944 = (void *)(v774 + v942);
                                                                void *v943 = *v944;
                                                                v943[1] = v944[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v945 = v775[27];
                                                                v946 = (void *)(v773 + v945);
                                                                v947 = (void *)(v774 + v945);
                                                                void *v946 = *v947;
                                                                v946[1] = v947[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v948 = v775[28];
                                                                v949 = (void *)(v773 + v948);
                                                                v950 = (void *)(v774 + v948);
                                                                void *v949 = *v950;
                                                                v949[1] = v950[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v951 = v775[29];
                                                                v952 = (void *)(v773 + v951);
                                                                v953 = (void *)(v774 + v951);
                                                                void *v952 = *v953;
                                                                v952[1] = v953[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v954 = v775[30];
                                                                v955 = (void *)(v773 + v954);
                                                                v956 = (void *)(v774 + v954);
                                                                void *v955 = *v956;
                                                                v955[1] = v956[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v957 = v775[31];
                                                                v958 = (void *)(v773 + v957);
                                                                v959 = (void *)(v774 + v957);
                                                                void *v958 = *v959;
                                                                v958[1] = v959[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v960 = v775[32];
                                                                v961 = (void *)(v773 + v960);
                                                                v962 = (void *)(v774 + v960);
                                                                void *v961 = *v962;
                                                                v961[1] = v962[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v773 + v775[33]) = *(void *)(v774 + v775[33]);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v773 + v775[34]) = *(void *)(v774 + v775[34]);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v963 = v775[35];
                                                                v964 = (void *)(v773 + v963);
                                                                v965 = (void *)(v774 + v963);
                                                                void *v964 = *v965;
                                                                v964[1] = v965[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v966 = v775[36];
                                                                v967 = (void *)(v773 + v966);
                                                                v968 = (void *)(v774 + v966);
                                                                void *v967 = *v968;
                                                                v967[1] = v968[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v969 = v775[37];
                                                                v970 = (void *)(v773 + v969);
                                                                v971 = (void *)(v774 + v969);
                                                                void *v970 = *v971;
                                                                v970[1] = v971[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v972 = v775[38];
                                                                v973 = (char *)(v773 + v972);
                                                                v974 = (char *)(v774 + v972);
                                                                LODWORD(v922) = __swift_getEnumTagSinglePayload(v773 + v972, 1, v1224);
                                                                int v975 = __swift_getEnumTagSinglePayload((uint64_t)v974, 1, v1224);
                                                                if (v922)
                                                                {
                                                                  if (!v975)
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v973, v974, v1224);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v973, 0, 1, v1224);
LABEL_429:
                                                                    uint64_t v978 = v775[39];
                                                                    v979 = (void *)(v773 + v978);
                                                                    v980 = (void *)(v774 + v978);
                                                                    void *v979 = *v980;
                                                                    v979[1] = v980[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v981 = v775[40];
                                                                    v982 = (void *)(v773 + v981);
                                                                    v983 = (void *)(v774 + v981);
                                                                    void *v982 = *v983;
                                                                    v982[1] = v983[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v984 = v775[41];
                                                                    uint64_t v985 = v773 + v984;
                                                                    v986 = (uint64_t *)(v774 + v984);
                                                                    uint64_t v987 = *v986;
                                                                    *(unsigned char *)(v985 + 8) = *((unsigned char *)v986 + 8);
                                                                    *(void *)uint64_t v985 = v987;
                                                                    uint64_t v988 = v775[42];
                                                                    v989 = (void *)(v773 + v988);
                                                                    v990 = (void *)(v774 + v988);
                                                                    void *v989 = *v990;
                                                                    v989[1] = v990[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v991 = v775[43];
                                                                    uint64_t v992 = v773 + v991;
                                                                    v993 = (long long *)(v774 + v991);
                                                                    long long v994 = *v993;
                                                                    *(void *)(v992 + 13) = *(void *)((char *)v993 + 13);
                                                                    *(_OWORD *)uint64_t v992 = v994;
                                                                    uint64_t v995 = v775[44];
                                                                    v996 = (void *)(v773 + v995);
                                                                    v997 = (void *)(v774 + v995);
                                                                    void *v996 = *v997;
                                                                    v996[1] = v997[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v998 = v775[45];
                                                                    v999 = (void *)(v773 + v998);
                                                                    v1000 = (void *)(v774 + v998);
                                                                    void *v999 = *v1000;
                                                                    v999[1] = v1000[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1001 = v775[46];
                                                                    v1002 = (void *)(v773 + v1001);
                                                                    v1003 = (void *)(v774 + v1001);
                                                                    void *v1002 = *v1003;
                                                                    v1002[1] = v1003[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1004 = v775[47];
                                                                    v1005 = (void *)(v773 + v1004);
                                                                    v1006 = (void *)(v774 + v1004);
                                                                    void *v1005 = *v1006;
                                                                    v1005[1] = v1006[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    goto LABEL_430;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  if (!v975)
                                                                  {
                                                                    v1211(v973, v974, v1224);
                                                                    goto LABEL_429;
                                                                  }
                                                                  (*(void (**)(char *, uint64_t))(v1223 + 8))(v973, v1224);
                                                                }
                                                                uint64_t v977 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                                memcpy(v973, v974, *(void *)(*(void *)(v977 - 8) + 64));
                                                                goto LABEL_429;
                                                              }
                                                              (*(void (**)(void *, uint64_t))(v908 + 8))(v893, v784);
                                                            }
                                                            uint64_t v909 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                            memcpy(v893, v894, *(void *)(*(void *)(v909 - 8) + 64));
                                                            goto LABEL_420;
                                                          }
                                                          (*(void (**)(void *, uint64_t))(v890 + 8))(v782, v784);
                                                        }
                                                        uint64_t v891 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                        memcpy(v782, v783, *(void *)(*(void *)(v891 - 8) + 64));
                                                        goto LABEL_408;
                                                      }
                                                      (*(void (**)(uint64_t, uint64_t))(v976 + 8))(v903, v905);
                                                    }
                                                    size_t v749 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                                                                 - 8)
                                                                     + 64);
                                                    v750 = (void *)v903;
                                                    v751 = (const void *)v904;
LABEL_368:
                                                    memcpy(v750, v751, v749);
                                                    goto LABEL_381;
                                                  }
                                                }
                                                else
                                                {
                                                  if (!v889)
                                                  {
                                                    v1211(v886, v887, v46);
                                                    goto LABEL_414;
                                                  }
                                                  (*(void (**)(char *, uint64_t))(v1223 + 8))(v886, v46);
                                                }
                                                uint64_t v897 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                memcpy(v886, v887, *(void *)(*(void *)(v897 - 8) + 64));
                                                goto LABEL_414;
                                              }
                                              (*(void (**)(char *, uint64_t))(v1223 + 8))(v753, v46);
                                            }
                                            uint64_t v884 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                            memcpy(v753, v754, *(void *)(*(void *)(v884 - 8) + 64));
                                            goto LABEL_402;
                                          }
LABEL_300:
                                          uint64_t v683 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
                                          memcpy((void *)v675, (const void *)v676, *(void *)(*(void *)(v683 - 8) + 64));
                                          goto LABEL_361;
                                        }
                                        if (v679)
                                        {
                                          outlined destroy of EmailDocument(v675, (void (*)(void))type metadata accessor for Party);
                                          goto LABEL_300;
                                        }
                                        *(void *)uint64_t v675 = *(void *)v676;
                                        *(void *)(v675 + 8) = *(void *)(v676 + 8);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 16) = *(void *)(v676 + 16);
                                        *(void *)(v675 + 24) = *(void *)(v676 + 24);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 32) = *(void *)(v676 + 32);
                                        *(void *)(v675 + 40) = *(void *)(v676 + 40);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 48) = *(void *)(v676 + 48);
                                        *(void *)(v675 + 56) = *(void *)(v676 + 56);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 64) = *(void *)(v676 + 64);
                                        *(void *)(v675 + 72) = *(void *)(v676 + 72);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 80) = *(void *)(v676 + 80);
                                        *(void *)(v675 + 88) = *(void *)(v676 + 88);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 96) = *(void *)(v676 + 96);
                                        *(void *)(v675 + 104) = *(void *)(v676 + 104);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 112) = *(void *)(v676 + 112);
                                        *(void *)(v675 + 120) = *(void *)(v676 + 120);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(unsigned char *)(v675 + 128) = *(unsigned char *)(v676 + 128);
                                        *(unsigned char *)(v675 + 129) = *(unsigned char *)(v676 + 129);
                                        *(unsigned char *)(v675 + 130) = *(unsigned char *)(v676 + 130);
                                        *(void *)(v675 + 136) = *(void *)(v676 + 136);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 144) = *(void *)(v676 + 144);
                                        *(void *)(v675 + 152) = *(void *)(v676 + 152);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 160) = *(void *)(v676 + 160);
                                        *(void *)(v675 + 168) = *(void *)(v676 + 168);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 176) = *(void *)(v676 + 176);
                                        *(void *)(v675 + 184) = *(void *)(v676 + 184);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 192) = *(void *)(v676 + 192);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 200) = *(void *)(v676 + 200);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 208) = *(void *)(v676 + 208);
                                        *(void *)(v675 + 216) = *(void *)(v676 + 216);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 224) = *(void *)(v676 + 224);
                                        *(void *)(v675 + 232) = *(void *)(v676 + 232);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v675 + 240) = *(void *)(v676 + 240);
                                        *(void *)(v675 + 248) = *(void *)(v676 + 248);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        uint64_t v684 = v677[24];
                                        uint64_t v685 = (char *)(v675 + v684);
                                        uint64_t v686 = (char *)(v676 + v684);
                                        int v687 = __swift_getEnumTagSinglePayload(v675 + v684, 1, v46);
                                        int v688 = __swift_getEnumTagSinglePayload((uint64_t)v686, 1, v46);
                                        if (v687)
                                        {
                                          if (!v688)
                                          {
                                            (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v685, v686, v46);
                                            __swift_storeEnumTagSinglePayload((uint64_t)v685, 0, 1, v46);
                                            goto LABEL_333;
                                          }
                                        }
                                        else
                                        {
                                          if (!v688)
                                          {
                                            v1211(v685, v686, v46);
LABEL_333:
                                            uint64_t v721 = v677[25];
                                            v722 = (char *)(v675 + v721);
                                            v723 = (char *)(v676 + v721);
                                            int v724 = __swift_getEnumTagSinglePayload(v675 + v721, 1, v46);
                                            int v725 = __swift_getEnumTagSinglePayload((uint64_t)v723, 1, v46);
                                            if (v724)
                                            {
                                              if (!v725)
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v722, v723, v46);
                                                __swift_storeEnumTagSinglePayload((uint64_t)v722, 0, 1, v46);
                                                goto LABEL_351;
                                              }
                                            }
                                            else
                                            {
                                              if (!v725)
                                              {
                                                v1211(v722, v723, v46);
LABEL_351:
                                                uint64_t v733 = v677[26];
                                                v734 = (void *)(v675 + v733);
                                                v735 = (const void *)(v676 + v733);
                                                uint64_t v736 = type metadata accessor for URL();
                                                int v737 = __swift_getEnumTagSinglePayload((uint64_t)v734, 1, v736);
                                                int v738 = __swift_getEnumTagSinglePayload((uint64_t)v735, 1, v736);
                                                if (v737)
                                                {
                                                  if (!v738)
                                                  {
                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v736 - 8) + 16))(v734, v735, v736);
                                                    __swift_storeEnumTagSinglePayload((uint64_t)v734, 0, 1, v736);
LABEL_360:
                                                    uint64_t v46 = v1224;
                                                    goto LABEL_361;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t v739 = *(void *)(v736 - 8);
                                                  if (!v738)
                                                  {
                                                    (*(void (**)(void *, const void *, uint64_t))(v739 + 24))(v734, v735, v736);
                                                    goto LABEL_360;
                                                  }
                                                  (*(void (**)(void *, uint64_t))(v739 + 8))(v734, v736);
                                                }
                                                uint64_t v740 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                memcpy(v734, v735, *(void *)(*(void *)(v740 - 8) + 64));
                                                goto LABEL_360;
                                              }
                                              (*(void (**)(char *, uint64_t))(v1223 + 8))(v722, v46);
                                            }
                                            uint64_t v732 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                            memcpy(v722, v723, *(void *)(*(void *)(v732 - 8) + 64));
                                            goto LABEL_351;
                                          }
                                          (*(void (**)(char *, uint64_t))(v1223 + 8))(v685, v46);
                                        }
                                        uint64_t v720 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                        memcpy(v685, v686, *(void *)(*(void *)(v720 - 8) + 64));
                                        goto LABEL_333;
                                      }
                                      (*(void (**)(char *, uint64_t))(v1223 + 8))(v716, v46);
                                    }
                                    size_t v659 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                                                 - 8)
                                                     + 64);
                                    v660 = v716;
                                    v661 = (const void *)v717;
LABEL_284:
                                    memcpy(v660, v661, v659);
                                    goto LABEL_294;
                                  }
                                }
                                else
                                {
                                  if (!v667)
                                  {
                                    v1211(v664, v665, v46);
                                    goto LABEL_327;
                                  }
                                  (*(void (**)(char *, uint64_t))(v1223 + 8))(v664, v46);
                                }
                                uint64_t v714 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                memcpy(v664, v665, *(void *)(*(void *)(v714 - 8) + 64));
                                goto LABEL_327;
                              }
                              (*(void (**)(char *, uint64_t))(v1223 + 8))(v728, v46);
                            }
                            size_t v626 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                                         - 8)
                                             + 64);
                            v627 = v728;
                            v628 = (const void *)v729;
LABEL_264:
                            memcpy(v627, v628, v626);
                            goto LABEL_277;
                          }
                        }
                        else
                        {
                          if (!v713)
                          {
                            v1211(v710, v711, v46);
                            goto LABEL_342;
                          }
                          (*(void (**)(char *, uint64_t))(v1223 + 8))(v710, v46);
                        }
                        uint64_t v726 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                        memcpy(v710, v711, *(void *)(*(void *)(v726 - 8) + 64));
                        goto LABEL_342;
                      }
                      (*(void (**)(void *, uint64_t))(v704 + 8))(v631, v633);
                    }
                    uint64_t v705 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                    memcpy(v631, v632, *(void *)(*(void *)(v705 - 8) + 64));
                    goto LABEL_321;
                  }
                  (*(void (**)(char *, uint64_t))(v1223 + 8))(v700, v46);
                }
                size_t v601 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                             - 8)
                                 + 64);
                uint64_t v602 = v700;
                uint64_t v603 = (const void *)v701;
LABEL_247:
                memcpy(v602, v603, v601);
                goto LABEL_257;
              }
            }
            else
            {
              if (!v609)
              {
                v1211(v606, v607, v46);
                goto LABEL_315;
              }
              (*(void (**)(char *, uint64_t))(v1223 + 8))(v606, v46);
            }
            uint64_t v698 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v606, v607, *(void *)(*(void *)(v698 - 8) + 64));
            goto LABEL_315;
          }
          (*(void (**)(char *, uint64_t))(v1223 + 8))(v586, v1224);
        }
        uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v586, v587, *(void *)(*(void *)(v590 - 8) + 64));
        goto LABEL_240;
      }
      (*(void (**)(char *, uint64_t))(v1223 + 8))(v574, v1224);
    }
    uint64_t v584 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v574, v575, *(void *)(*(void *)(v584 - 8) + 64));
    goto LABEL_234;
  }
  if (v29)
  {
LABEL_14:
    uint64_t v35 = &demangling cache variable for type metadata for PartialExtractedAttributes?;
LABEL_15:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(v35);
    memcpy(v25, v26, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_112;
  }
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  uint64_t v30 = v27[5];
  uint64_t v31 = (void *)((char *)v25 + v30);
  uint64_t v32 = (void *)((char *)v26 + v30);
  uint64_t v33 = type metadata accessor for RentalCarReservation(0);
  swift_bridgeObjectRetain();
  v1212 = v26;
  v1215 = v25;
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    *uint64_t v31 = *v32;
    v31[1] = v32[1];
    v31[2] = v32[2];
    v31[3] = v32[3];
    v31[4] = v32[4];
    v31[5] = v32[5];
    v31[6] = v32[6];
    v31[7] = v32[7];
    v31[8] = v32[8];
    v31[9] = v32[9];
    v31[10] = v32[10];
    v31[11] = v32[11];
    v31[12] = v32[12];
    v31[13] = v32[13];
    v31[14] = v32[14];
    v31[15] = v32[15];
    *((unsigned char *)v31 + 128) = *((unsigned char *)v32 + 128);
    *((unsigned char *)v31 + 129) = *((unsigned char *)v32 + 129);
    *((unsigned char *)v31 + 130) = *((unsigned char *)v32 + 130);
    v31[17] = v32[17];
    v31[18] = v32[18];
    v31[19] = v32[19];
    v31[20] = v32[20];
    v31[21] = v32[21];
    v31[22] = v32[22];
    v31[23] = v32[23];
    v31[24] = v32[24];
    v31[25] = v32[25];
    v31[26] = v32[26];
    v31[27] = v32[27];
    v31[28] = v32[28];
    v31[29] = v32[29];
    v31[30] = v32[30];
    v31[31] = v32[31];
    v31[32] = v32[32];
    v31[33] = v32[33];
    v31[34] = v32[34];
    v31[35] = v32[35];
    v31[36] = v32[36];
    v31[37] = v32[37];
    v31[38] = v32[38];
    v31[39] = v32[39];
    v31[40] = v32[40];
    v31[41] = v32[41];
    v31[42] = v32[42];
    v31[43] = v32[43];
    v31[44] = v32[44];
    v31[45] = v32[45];
    v31[46] = v32[46];
    uint64_t v48 = v32[47];
    *((unsigned char *)v31 + 384) = *((unsigned char *)v32 + 384);
    v31[47] = v48;
    v31[49] = v32[49];
    v31[50] = v32[50];
    v31[51] = v32[51];
    v31[52] = v32[52];
    uint64_t v49 = *(int *)(v33 + 140);
    v1198 = (char *)v31 + v49;
    uint64_t v50 = (char *)v32 + v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v1224))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1198, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1198, v50, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v1198, 0, 1, v1224);
    }
    uint64_t v53 = *(int *)(v33 + 144);
    uint64_t v54 = (char *)v31 + v53;
    uint64_t v55 = (char *)v32 + v53;
    if (__swift_getEnumTagSinglePayload((uint64_t)v32 + v53, 1, v1224))
    {
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v54, v55, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v1224);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
  }
  uint64_t v57 = v27[6];
  uint64_t v58 = (void *)((char *)v25 + v57);
  uint64_t v59 = (void *)((char *)v26 + v57);
  uint64_t v60 = type metadata accessor for TicketedTransportation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
    memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    *uint64_t v58 = *v59;
    v58[1] = v59[1];
    v58[2] = v59[2];
    v58[3] = v59[3];
    v58[4] = v59[4];
    v58[5] = v59[5];
    v58[6] = v59[6];
    v58[7] = v59[7];
    v58[8] = v59[8];
    v58[9] = v59[9];
    v58[10] = v59[10];
    v58[11] = v59[11];
    v58[12] = v59[12];
    v58[13] = v59[13];
    v58[14] = v59[14];
    v58[15] = v59[15];
    *((unsigned char *)v58 + 128) = *((unsigned char *)v59 + 128);
    *((unsigned char *)v58 + 129) = *((unsigned char *)v59 + 129);
    *((unsigned char *)v58 + 130) = *((unsigned char *)v59 + 130);
    v58[17] = v59[17];
    v58[18] = v59[18];
    v58[19] = v59[19];
    v58[20] = v59[20];
    v58[21] = v59[21];
    v58[22] = v59[22];
    v58[23] = v59[23];
    v58[24] = v59[24];
    v58[25] = v59[25];
    v58[26] = v59[26];
    v58[27] = v59[27];
    v58[28] = v59[28];
    v58[29] = v59[29];
    v58[30] = v59[30];
    v58[31] = v59[31];
    v58[32] = v59[32];
    v58[33] = v59[33];
    v58[34] = v59[34];
    v58[35] = v59[35];
    uint64_t v62 = v59[36];
    *((unsigned char *)v58 + 296) = *((unsigned char *)v59 + 296);
    v58[36] = v62;
    uint64_t v63 = *(int *)(v60 + 112);
    v1199 = (char *)v58 + v63;
    uint64_t v64 = (char *)v59 + v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v1224))
    {
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1199, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1199, v64, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v1199, 0, 1, v1224);
    }
    uint64_t v66 = v60;
    uint64_t v67 = *(int *)(v60 + 116);
    uint64_t v68 = (char *)v58 + v67;
    uint64_t v69 = (char *)v59 + v67;
    if (__swift_getEnumTagSinglePayload((uint64_t)v59 + v67, 1, v1224))
    {
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v68, v69, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v1224);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v66);
  }
  uint64_t v71 = v27[7];
  uint64_t v72 = (void *)((char *)v25 + v71);
  uint64_t v73 = (void *)((char *)v26 + v71);
  uint64_t v74 = (int *)type metadata accessor for TicketedShow(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, (uint64_t)v74))
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
    memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    *uint64_t v72 = *v73;
    v72[1] = v73[1];
    v72[2] = v73[2];
    v72[3] = v73[3];
    v72[4] = v73[4];
    v72[5] = v73[5];
    v72[6] = v73[6];
    v72[7] = v73[7];
    v72[8] = v73[8];
    v72[9] = v73[9];
    v72[10] = v73[10];
    v72[11] = v73[11];
    v72[12] = v73[12];
    v72[13] = v73[13];
    v72[14] = v73[14];
    v72[15] = v73[15];
    *((unsigned char *)v72 + 128) = *((unsigned char *)v73 + 128);
    *((unsigned char *)v72 + 129) = *((unsigned char *)v73 + 129);
    *((unsigned char *)v72 + 130) = *((unsigned char *)v73 + 130);
    v72[17] = v73[17];
    v72[18] = v73[18];
    v72[19] = v73[19];
    v72[20] = v73[20];
    v72[21] = v73[21];
    v72[22] = v73[22];
    v72[23] = v73[23];
    v72[24] = v73[24];
    v72[25] = v73[25];
    v72[26] = v73[26];
    v72[27] = v73[27];
    v72[28] = v73[28];
    v72[29] = v73[29];
    v72[30] = v73[30];
    v72[31] = v73[31];
    v72[32] = v73[32];
    v72[33] = v73[33];
    v72[34] = v73[34];
    v72[35] = v73[35];
    uint64_t v76 = v73[36];
    *((unsigned char *)v72 + 296) = *((unsigned char *)v73 + 296);
    v72[36] = v76;
    v72[38] = v73[38];
    v72[39] = v73[39];
    uint64_t v77 = v74[29];
    v1200 = (char *)v72 + v77;
    v1175 = (char *)v73 + v77;
    uint64_t v78 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1175, 1, v78))
    {
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v1200, v1175, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v1200, v1175, v78);
      __swift_storeEnumTagSinglePayload((uint64_t)v1200, 0, 1, v78);
    }
    uint64_t v80 = v74[30];
    uint64_t v81 = (void *)((char *)v72 + v80);
    uint64_t v82 = (void *)((char *)v73 + v80);
    *uint64_t v81 = *v82;
    v81[1] = v82[1];
    uint64_t v83 = v74[31];
    v84 = (char *)v72 + v83;
    uint64_t v85 = (char *)v73 + v83;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v1224))
    {
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v84, v85, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v1224);
    }
    uint64_t v87 = v74[32];
    uint64_t v88 = (char *)v72 + v87;
    uint64_t v89 = (char *)v73 + v87;
    if (__swift_getEnumTagSinglePayload((uint64_t)v73 + v87, 1, v1224))
    {
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v88, v89, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v1224);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, (uint64_t)v74);
  }
  uint64_t v91 = v27[8];
  uint64_t v92 = (void *)((char *)v25 + v91);
  uint64_t v93 = (void *)((char *)v26 + v91);
  uint64_t v94 = type metadata accessor for Appointment(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
    memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    *uint64_t v92 = *v93;
    v92[1] = v93[1];
    v92[2] = v93[2];
    v92[3] = v93[3];
    v92[4] = v93[4];
    v92[5] = v93[5];
    v92[6] = v93[6];
    v92[7] = v93[7];
    v92[8] = v93[8];
    v92[9] = v93[9];
    v92[10] = v93[10];
    v92[11] = v93[11];
    v92[12] = v93[12];
    v92[13] = v93[13];
    v92[14] = v93[14];
    v92[15] = v93[15];
    *((unsigned char *)v92 + 128) = *((unsigned char *)v93 + 128);
    *((unsigned char *)v92 + 129) = *((unsigned char *)v93 + 129);
    *((unsigned char *)v92 + 130) = *((unsigned char *)v93 + 130);
    v92[17] = v93[17];
    v92[18] = v93[18];
    v92[19] = v93[19];
    v92[20] = v93[20];
    v92[21] = v93[21];
    v92[22] = v93[22];
    v92[23] = v93[23];
    v92[24] = v93[24];
    v92[25] = v93[25];
    v92[26] = v93[26];
    v92[27] = v93[27];
    v92[28] = v93[28];
    v92[29] = v93[29];
    v92[30] = v93[30];
    v92[31] = v93[31];
    v92[32] = v93[32];
    v92[33] = v93[33];
    uint64_t v96 = v93[34];
    *((unsigned char *)v92 + 280) = *((unsigned char *)v93 + 280);
    v92[34] = v96;
    v92[36] = v93[36];
    v92[37] = v93[37];
    uint64_t v97 = *(int *)(v94 + 108);
    v1201 = (char *)v92 + v97;
    uint64_t v98 = (char *)v93 + v97;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v1224))
    {
      uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1201, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1201, v98, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v1201, 0, 1, v1224);
    }
    uint64_t v100 = v94;
    uint64_t v101 = *(int *)(v94 + 112);
    uint64_t v102 = (char *)v92 + v101;
    uint64_t v103 = (char *)v93 + v101;
    if (__swift_getEnumTagSinglePayload((uint64_t)v93 + v101, 1, v1224))
    {
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v102, v103, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v1224);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v100);
  }
  uint64_t v105 = v27[9];
  v106 = (void *)((char *)v25 + v105);
  uint64_t v107 = (void *)((char *)v26 + v105);
  uint64_t v108 = type metadata accessor for Party(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v108))
  {
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
    memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    void *v106 = *v107;
    v106[1] = v107[1];
    v106[2] = v107[2];
    v106[3] = v107[3];
    v106[4] = v107[4];
    v106[5] = v107[5];
    v106[6] = v107[6];
    v106[7] = v107[7];
    v106[8] = v107[8];
    v106[9] = v107[9];
    v106[10] = v107[10];
    v106[11] = v107[11];
    v106[12] = v107[12];
    v106[13] = v107[13];
    v106[14] = v107[14];
    v106[15] = v107[15];
    *((unsigned char *)v106 + 128) = *((unsigned char *)v107 + 128);
    *((unsigned char *)v106 + 129) = *((unsigned char *)v107 + 129);
    *((unsigned char *)v106 + 130) = *((unsigned char *)v107 + 130);
    v106[17] = v107[17];
    v106[18] = v107[18];
    v106[19] = v107[19];
    v106[20] = v107[20];
    v106[21] = v107[21];
    v106[22] = v107[22];
    v106[23] = v107[23];
    v106[24] = v107[24];
    v106[25] = v107[25];
    v106[26] = v107[26];
    v106[27] = v107[27];
    v106[28] = v107[28];
    v106[29] = v107[29];
    v106[30] = v107[30];
    __dsta = (int *)v108;
    v106[31] = v107[31];
    uint64_t v110 = *(int *)(v108 + 96);
    v1202 = (char *)v106 + v110;
    uint64_t v111 = (char *)v107 + v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v1224))
    {
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1202, v111, *(void *)(*(void *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1202, v111, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v1202, 0, 1, v1224);
    }
    uint64_t v113 = *(int *)(v108 + 100);
    v114 = (char *)v106 + v113;
    v115 = (char *)v107 + v113;
    if (__swift_getEnumTagSinglePayload((uint64_t)v107 + v113, 1, v1224))
    {
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v114, v115, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v1224);
    }
    uint64_t v117 = __dsta[26];
    uint64_t v118 = (char *)v106 + v117;
    uint64_t v119 = (char *)v107 + v117;
    uint64_t v120 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v119, 1, v120))
    {
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
      __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v120);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, (uint64_t)__dsta);
  }
  uint64_t v122 = v27[10];
  uint64_t v123 = (void *)((char *)v25 + v122);
  uint64_t v124 = (void *)((char *)v26 + v122);
  uint64_t v125 = type metadata accessor for Trip(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, v125))
  {
    uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
    memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
  }
  else
  {
    *uint64_t v123 = *v124;
    v123[1] = v124[1];
    v123[2] = v124[2];
    v123[3] = v124[3];
    v123[4] = v124[4];
    v123[5] = v124[5];
    v123[6] = v124[6];
    v123[7] = v124[7];
    v123[8] = v124[8];
    v123[9] = v124[9];
    v123[10] = v124[10];
    v123[11] = v124[11];
    v123[12] = v124[12];
    v123[13] = v124[13];
    v123[14] = v124[14];
    v123[15] = v124[15];
    *((unsigned char *)v123 + 128) = *((unsigned char *)v124 + 128);
    *((unsigned char *)v123 + 129) = *((unsigned char *)v124 + 129);
    *((unsigned char *)v123 + 130) = *((unsigned char *)v124 + 130);
    v123[17] = v124[17];
    v123[18] = v124[18];
    v123[19] = v124[19];
    v123[20] = v124[20];
    v123[21] = v124[21];
    v123[22] = v124[22];
    v123[23] = v124[23];
    v123[24] = v124[24];
    v123[25] = v124[25];
    v123[26] = v124[26];
    __dstb = (int *)v125;
    v123[27] = v124[27];
    uint64_t v127 = *(int *)(v125 + 88);
    v1203 = (char *)v123 + v127;
    v1177 = (char *)v124 + v127;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1177, 1, v1224))
    {
      uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1203, v1177, *(void *)(*(void *)(v128 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1203, v1177, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v1203, 0, 1, v1224);
    }
    uint64_t v129 = *(int *)(v125 + 92);
    uint64_t v130 = (char *)v123 + v129;
    uint64_t v131 = (char *)v124 + v129;
    if (__swift_getEnumTagSinglePayload((uint64_t)v124 + v129, 1, v1224))
    {
      uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v130, v131, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v1224);
    }
    uint64_t v133 = __dstb[24];
    uint64_t v134 = (char *)v123 + v133;
    uint64_t v135 = (char *)v124 + v133;
    uint64_t v136 = *(void *)v135;
    v134[8] = v135[8];
    *(void *)uint64_t v134 = v136;
    uint64_t v137 = __dstb[25];
    uint64_t v138 = (char *)v123 + v137;
    uint64_t v139 = (char *)v124 + v137;
    uint64_t v140 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v140))
    {
      uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
      __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v140);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, (uint64_t)__dstb);
  }
  uint64_t v142 = v27[11];
  uint64_t v143 = (void *)((char *)v25 + v142);
  uint64_t v144 = (void *)((char *)v26 + v142);
  v145 = (int *)type metadata accessor for FlightReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, (uint64_t)v145))
  {
    uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
    memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
  }
  else
  {
    *uint64_t v143 = *v144;
    v143[1] = v144[1];
    v143[2] = v144[2];
    v143[3] = v144[3];
    v143[4] = v144[4];
    v143[5] = v144[5];
    v143[6] = v144[6];
    v143[7] = v144[7];
    v143[8] = v144[8];
    v143[9] = v144[9];
    v143[10] = v144[10];
    v143[11] = v144[11];
    *((unsigned char *)v143 + 96) = *((unsigned char *)v144 + 96);
    v143[13] = v144[13];
    v143[14] = v144[14];
    uint64_t v147 = v145[13];
    v1204 = (char *)v143 + v147;
    v1186 = (char *)v144 + v147;
    uint64_t v1181 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1186, 1, v1181))
    {
      uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v1204, v1186, *(void *)(*(void *)(v148 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1181 - 8) + 16))(v1204, v1186, v1181);
      __swift_storeEnumTagSinglePayload((uint64_t)v1204, 0, 1, v1181);
    }
    uint64_t v149 = v145[14];
    v150 = (char *)v143 + v149;
    uint64_t v151 = (char *)v144 + v149;
    if (__swift_getEnumTagSinglePayload((uint64_t)v144 + v149, 1, v1181))
    {
      uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1181 - 8) + 16))(v150, v151, v1181);
      __swift_storeEnumTagSinglePayload((uint64_t)v150, 0, 1, v1181);
    }
    uint64_t v153 = v145[15];
    v154 = (void *)((char *)v143 + v153);
    uint64_t v155 = (void *)((char *)v144 + v153);
    void *v154 = *v155;
    v154[1] = v155[1];
    uint64_t v156 = v145[16];
    uint64_t v157 = (void *)((char *)v143 + v156);
    uint64_t v158 = (void *)((char *)v144 + v156);
    *uint64_t v157 = *v158;
    v157[1] = v158[1];
    uint64_t v159 = v145[17];
    uint64_t v160 = (void *)((char *)v143 + v159);
    uint64_t v161 = (void *)((char *)v144 + v159);
    *uint64_t v160 = *v161;
    v160[1] = v161[1];
    uint64_t v162 = v145[18];
    v1205 = (char *)v143 + v162;
    uint64_t v163 = (char *)v144 + v162;
    uint64_t v164 = type metadata accessor for DateComponents();
    uint64_t v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v165(v1205, v163, v164);
    v165((char *)v143 + v145[19], (char *)v144 + v145[19], v164);
    uint64_t v166 = v145[20];
    uint64_t v167 = (void *)((char *)v143 + v166);
    uint64_t v168 = (void *)((char *)v144 + v166);
    *uint64_t v167 = *v168;
    v167[1] = v168[1];
    uint64_t v169 = v145[21];
    uint64_t v170 = (void *)((char *)v143 + v169);
    uint64_t v171 = (void *)((char *)v144 + v169);
    *uint64_t v170 = *v171;
    v170[1] = v171[1];
    uint64_t v172 = v145[22];
    uint64_t v173 = (void *)((char *)v143 + v172);
    uint64_t v174 = (void *)((char *)v144 + v172);
    *uint64_t v173 = *v174;
    v173[1] = v174[1];
    uint64_t v175 = v145[23];
    uint64_t v176 = (void *)((char *)v143 + v175);
    v177 = (void *)((char *)v144 + v175);
    *uint64_t v176 = *v177;
    v176[1] = v177[1];
    uint64_t v178 = v145[24];
    uint64_t v179 = (void *)((char *)v143 + v178);
    v180 = (void *)((char *)v144 + v178);
    *uint64_t v179 = *v180;
    v179[1] = v180[1];
    uint64_t v181 = v145[25];
    uint64_t v182 = (void *)((char *)v143 + v181);
    uint64_t v183 = (void *)((char *)v144 + v181);
    *uint64_t v182 = *v183;
    v182[1] = v183[1];
    uint64_t v184 = v145[26];
    v185 = (void *)((char *)v143 + v184);
    uint64_t v186 = (void *)((char *)v144 + v184);
    void *v185 = *v186;
    v185[1] = v186[1];
    uint64_t v187 = v145[27];
    uint64_t v188 = (void *)((char *)v143 + v187);
    uint64_t v189 = (void *)((char *)v144 + v187);
    *uint64_t v188 = *v189;
    v188[1] = v189[1];
    uint64_t v190 = v145[28];
    uint64_t v191 = (void *)((char *)v143 + v190);
    uint64_t v192 = (void *)((char *)v144 + v190);
    *uint64_t v191 = *v192;
    v191[1] = v192[1];
    uint64_t v193 = v145[29];
    uint64_t v194 = (void *)((char *)v143 + v193);
    uint64_t v195 = (void *)((char *)v144 + v193);
    *uint64_t v194 = *v195;
    v194[1] = v195[1];
    uint64_t v196 = v145[30];
    uint64_t v197 = (void *)((char *)v143 + v196);
    uint64_t v198 = (void *)((char *)v144 + v196);
    *uint64_t v197 = *v198;
    v197[1] = v198[1];
    uint64_t v199 = v145[31];
    uint64_t v200 = (void *)((char *)v143 + v199);
    uint64_t v201 = (void *)((char *)v144 + v199);
    *uint64_t v200 = *v201;
    v200[1] = v201[1];
    uint64_t v202 = v145[32];
    uint64_t v203 = (void *)((char *)v143 + v202);
    v204 = (void *)((char *)v144 + v202);
    *uint64_t v203 = *v204;
    v203[1] = v204[1];
    *(void *)((char *)v143 + v145[33]) = *(void *)((char *)v144 + v145[33]);
    *(void *)((char *)v143 + v145[34]) = *(void *)((char *)v144 + v145[34]);
    uint64_t v205 = v145[35];
    uint64_t v206 = (void *)((char *)v143 + v205);
    v207 = (void *)((char *)v144 + v205);
    *uint64_t v206 = *v207;
    v206[1] = v207[1];
    uint64_t v208 = v145[36];
    uint64_t v209 = (void *)((char *)v143 + v208);
    uint64_t v210 = (void *)((char *)v144 + v208);
    *uint64_t v209 = *v210;
    v209[1] = v210[1];
    uint64_t v211 = v145[37];
    v212 = (void *)((char *)v143 + v211);
    uint64_t v213 = (void *)((char *)v144 + v211);
    void *v212 = *v213;
    v212[1] = v213[1];
    uint64_t v214 = v145[38];
    v1206 = (char *)v143 + v214;
    uint64_t v215 = (char *)v144 + v214;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v215, 1, v1224))
    {
      uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1206, v215, *(void *)(*(void *)(v216 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1206, v215, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v1206, 0, 1, v1224);
    }
    uint64_t v26 = v1212;
    uint64_t v217 = v145[39];
    uint64_t v218 = (void *)((char *)v143 + v217);
    uint64_t v219 = (void *)((char *)v144 + v217);
    *uint64_t v218 = *v219;
    v218[1] = v219[1];
    uint64_t v220 = v145[40];
    uint64_t v221 = (void *)((char *)v143 + v220);
    uint64_t v222 = (void *)((char *)v144 + v220);
    *uint64_t v221 = *v222;
    v221[1] = v222[1];
    uint64_t v223 = v145[41];
    uint64_t v224 = (char *)v143 + v223;
    uint64_t v225 = (char *)v144 + v223;
    uint64_t v226 = *(void *)v225;
    v224[8] = v225[8];
    *(void *)uint64_t v224 = v226;
    uint64_t v227 = v145[42];
    uint64_t v228 = (void *)((char *)v143 + v227);
    uint64_t v229 = (void *)((char *)v144 + v227);
    *uint64_t v228 = *v229;
    v228[1] = v229[1];
    uint64_t v230 = v145[43];
    uint64_t v231 = (char *)v143 + v230;
    uint64_t v232 = (char *)v144 + v230;
    long long v233 = *(_OWORD *)v232;
    *(void *)(v231 + 13) = *(void *)(v232 + 13);
    *(_OWORD *)uint64_t v231 = v233;
    uint64_t v234 = v145[44];
    uint64_t v235 = (void *)((char *)v143 + v234);
    uint64_t v236 = (void *)((char *)v144 + v234);
    *uint64_t v235 = *v236;
    v235[1] = v236[1];
    uint64_t v237 = v145[45];
    v238 = (void *)((char *)v143 + v237);
    uint64_t v239 = (void *)((char *)v144 + v237);
    void *v238 = *v239;
    v238[1] = v239[1];
    uint64_t v240 = v145[46];
    v241 = (void *)((char *)v143 + v240);
    v242 = (void *)((char *)v144 + v240);
    void *v241 = *v242;
    v241[1] = v242[1];
    uint64_t v243 = v145[47];
    v244 = (void *)((char *)v143 + v243);
    v245 = (void *)((char *)v144 + v243);
    void *v244 = *v245;
    v244[1] = v245[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, (uint64_t)v145);
    uint64_t v25 = v1215;
    uint64_t v27 = v1217;
  }
  uint64_t v246 = v27[12];
  uint64_t v247 = (void *)((char *)v25 + v246);
  uint64_t v248 = (void *)((char *)v26 + v246);
  v249 = (int *)type metadata accessor for HotelReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v248, 1, (uint64_t)v249))
  {
    uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
    memcpy(v247, v248, *(void *)(*(void *)(v250 - 8) + 64));
    uint64_t v4 = v1221;
  }
  else
  {
    *uint64_t v247 = *v248;
    v247[1] = v248[1];
    v247[2] = v248[2];
    v247[3] = v248[3];
    v247[4] = v248[4];
    v247[5] = v248[5];
    v247[6] = v248[6];
    v247[7] = v248[7];
    v247[8] = v248[8];
    v247[9] = v248[9];
    v247[10] = v248[10];
    v247[11] = v248[11];
    *((unsigned char *)v247 + 96) = *((unsigned char *)v248 + 96);
    v247[13] = v248[13];
    v247[14] = v248[14];
    v247[15] = v248[15];
    v247[16] = v248[16];
    uint64_t v251 = v249[14];
    v1207 = (char *)v247 + v251;
    v1182 = (char *)v248 + v251;
    uint64_t v1179 = type metadata accessor for DateComponents();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1182, 1, v1179))
    {
      uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v1207, v1182, *(void *)(*(void *)(v252 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1179 - 8) + 16))(v1207, v1182, v1179);
      __swift_storeEnumTagSinglePayload((uint64_t)v1207, 0, 1, v1179);
    }
    uint64_t v253 = v249[15];
    uint64_t v254 = (char *)v247 + v253;
    uint64_t v255 = (char *)v248 + v253;
    if (__swift_getEnumTagSinglePayload((uint64_t)v248 + v253, 1, v1179))
    {
      uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1179 - 8) + 16))(v254, v255, v1179);
      __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v1179);
    }
    uint64_t v257 = v249[16];
    uint64_t v258 = (void *)((char *)v247 + v257);
    uint64_t v259 = (void *)((char *)v248 + v257);
    *uint64_t v258 = *v259;
    v258[1] = v259[1];
    uint64_t v260 = v249[17];
    uint64_t v261 = (void *)((char *)v247 + v260);
    uint64_t v262 = (void *)((char *)v248 + v260);
    *uint64_t v261 = *v262;
    v261[1] = v262[1];
    uint64_t v263 = v249[18];
    v264 = (void *)((char *)v247 + v263);
    v265 = (void *)((char *)v248 + v263);
    void *v264 = *v265;
    v264[1] = v265[1];
    uint64_t v266 = v249[19];
    uint64_t v267 = (void *)((char *)v247 + v266);
    v268 = (void *)((char *)v248 + v266);
    *uint64_t v267 = *v268;
    v267[1] = v268[1];
    uint64_t v269 = v249[20];
    uint64_t v270 = (void *)((char *)v247 + v269);
    uint64_t v271 = (void *)((char *)v248 + v269);
    *uint64_t v270 = *v271;
    v270[1] = v271[1];
    *(void *)((char *)v247 + v249[21]) = *(void *)((char *)v248 + v249[21]);
    *(void *)((char *)v247 + v249[22]) = *(void *)((char *)v248 + v249[22]);
    uint64_t v272 = v249[23];
    v273 = (char *)v247 + v272;
    uint64_t v274 = (char *)v248 + v272;
    uint64_t v275 = *(void *)v274;
    v273[8] = v274[8];
    *(void *)v273 = v275;
    uint64_t v276 = v249[24];
    v277 = (char *)v247 + v276;
    uint64_t v278 = (char *)v248 + v276;
    uint64_t v279 = *(void *)v278;
    v277[8] = v278[8];
    *(void *)v277 = v279;
    uint64_t v280 = v249[25];
    uint64_t v281 = (void *)((char *)v247 + v280);
    v282 = (void *)((char *)v248 + v280);
    *uint64_t v281 = *v282;
    v281[1] = v282[1];
    uint64_t v283 = v249[26];
    v284 = (void *)((char *)v247 + v283);
    v285 = (void *)((char *)v248 + v283);
    void *v284 = *v285;
    v284[1] = v285[1];
    uint64_t v286 = v249[27];
    uint64_t v287 = (void *)((char *)v247 + v286);
    v288 = (void *)((char *)v248 + v286);
    *uint64_t v287 = *v288;
    v287[1] = v288[1];
    uint64_t v289 = v249[28];
    uint64_t v290 = (void *)((char *)v247 + v289);
    uint64_t v291 = (void *)((char *)v248 + v289);
    *uint64_t v290 = *v291;
    v290[1] = v291[1];
    uint64_t v292 = v249[29];
    uint64_t v293 = (char *)v247 + v292;
    uint64_t v294 = (char *)v248 + v292;
    uint64_t v295 = *(void *)v294;
    v293[8] = v294[8];
    *(void *)uint64_t v293 = v295;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v247, 0, 1, (uint64_t)v249);
    uint64_t v4 = v1221;
    uint64_t v25 = v1215;
    uint64_t v27 = v1217;
    uint64_t v26 = v1212;
  }
  uint64_t v296 = v27[13];
  uint64_t v297 = (void *)((char *)v25 + v296);
  uint64_t v298 = (void *)((char *)v26 + v296);
  v299 = (int *)type metadata accessor for RestaurantReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v298, 1, (uint64_t)v299))
  {
    uint64_t v300 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
    memcpy(v297, v298, *(void *)(*(void *)(v300 - 8) + 64));
    uint64_t v5 = v1222;
    a3 = v1220;
  }
  else
  {
    void *v297 = *v298;
    v297[1] = v298[1];
    v297[2] = v298[2];
    v297[3] = v298[3];
    v297[4] = v298[4];
    v297[5] = v298[5];
    v297[6] = v298[6];
    v297[7] = v298[7];
    v297[8] = v298[8];
    v297[9] = v298[9];
    v297[10] = v298[10];
    v297[11] = v298[11];
    *((unsigned char *)v297 + 96) = *((unsigned char *)v298 + 96);
    v297[13] = v298[13];
    v297[14] = v298[14];
    v297[15] = v298[15];
    v297[16] = v298[16];
    uint64_t v301 = v299[14];
    v1214 = (char *)v297 + v301;
    v1183 = (char *)v298 + v301;
    uint64_t v302 = type metadata accessor for DateComponents();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1183, 1, v302))
    {
      uint64_t v303 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v1214, v1183, *(void *)(*(void *)(v303 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v1214, v1183, v302);
      __swift_storeEnumTagSinglePayload((uint64_t)v1214, 0, 1, v302);
    }
    uint64_t v304 = v299[15];
    v305 = (void *)((char *)v297 + v304);
    uint64_t v306 = (void *)((char *)v298 + v304);
    void *v305 = *v306;
    v305[1] = v306[1];
    uint64_t v307 = v299[16];
    v308 = (void *)((char *)v297 + v307);
    uint64_t v309 = (void *)((char *)v298 + v307);
    void *v308 = *v309;
    v308[1] = v309[1];
    uint64_t v310 = v299[17];
    v311 = (void *)((char *)v297 + v310);
    uint64_t v312 = (void *)((char *)v298 + v310);
    void *v311 = *v312;
    v311[1] = v312[1];
    uint64_t v313 = v299[18];
    v314 = (void *)((char *)v297 + v313);
    uint64_t v315 = (void *)((char *)v298 + v313);
    void *v314 = *v315;
    v314[1] = v315[1];
    uint64_t v316 = v299[19];
    v317 = (void *)((char *)v297 + v316);
    uint64_t v318 = (void *)((char *)v298 + v316);
    void *v317 = *v318;
    v317[1] = v318[1];
    *(void *)((char *)v297 + v299[20]) = *(void *)((char *)v298 + v299[20]);
    uint64_t v319 = v299[21];
    v320 = (void *)((char *)v297 + v319);
    uint64_t v321 = (void *)((char *)v298 + v319);
    void *v320 = *v321;
    v320[1] = v321[1];
    uint64_t v322 = v299[22];
    v323 = (void *)((char *)v297 + v322);
    uint64_t v324 = (void *)((char *)v298 + v322);
    void *v323 = *v324;
    v323[1] = v324[1];
    uint64_t v325 = v299[23];
    uint64_t v326 = (void *)((char *)v297 + v325);
    v327 = (void *)((char *)v298 + v325);
    *uint64_t v326 = *v327;
    v326[1] = v327[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v297, 0, 1, (uint64_t)v299);
    uint64_t v4 = v1221;
    uint64_t v5 = v1222;
    uint64_t v27 = v1217;
    a3 = v1220;
    uint64_t v25 = v1215;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v27);
LABEL_112:
  uint64_t v328 = a3[22];
  uint64_t v329 = (void *)((char *)v5 + v328);
  uint64_t v330 = (void *)((char *)v4 + v328);
  v331 = (int *)type metadata accessor for PreExtractedCard(0);
  int v332 = __swift_getEnumTagSinglePayload((uint64_t)v329, 1, (uint64_t)v331);
  int v333 = __swift_getEnumTagSinglePayload((uint64_t)v330, 1, (uint64_t)v331);
  if (v332)
  {
    if (!v333)
    {
      *uint64_t v329 = *v330;
      v329[1] = v330[1];
      v329[2] = v330[2];
      v329[3] = v330[3];
      v329[4] = v330[4];
      v329[5] = v330[5];
      v329[6] = v330[6];
      v329[7] = v330[7];
      v329[8] = v330[8];
      v329[9] = v330[9];
      v329[10] = v330[10];
      v329[11] = v330[11];
      uint64_t v334 = v331[10];
      v335 = (char *)v329 + v334;
      uint64_t v336 = (char *)v330 + v334;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v336, 1, v1224))
      {
        uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v335, v336, *(void *)(*(void *)(v337 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v335, v336, v1224);
        __swift_storeEnumTagSinglePayload((uint64_t)v335, 0, 1, v1224);
      }
      uint64_t v4 = v1221;
      uint64_t v345 = v331[11];
      v346 = (char *)v329 + v345;
      uint64_t v347 = (char *)v330 + v345;
      if (__swift_getEnumTagSinglePayload((uint64_t)v330 + v345, 1, v1224))
      {
        uint64_t v348 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v346, v347, *(void *)(*(void *)(v348 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v346, v347, v1224);
        __swift_storeEnumTagSinglePayload((uint64_t)v346, 0, 1, v1224);
      }
      uint64_t v349 = v331[12];
      v350 = (void *)((char *)v329 + v349);
      uint64_t v351 = (void *)((char *)v330 + v349);
      void *v350 = *v351;
      v350[1] = v351[1];
      uint64_t v352 = v331[13];
      v353 = (void *)((char *)v329 + v352);
      uint64_t v354 = (void *)((char *)v330 + v352);
      void *v353 = *v354;
      v353[1] = v354[1];
      uint64_t v355 = v331[14];
      uint64_t v356 = (void *)((char *)v329 + v355);
      v357 = (void *)((char *)v330 + v355);
      *uint64_t v356 = *v357;
      v356[1] = v357[1];
      uint64_t v358 = v331[15];
      uint64_t v359 = (char *)v329 + v358;
      v360 = (char *)v330 + v358;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v360, 1, v1224))
      {
        uint64_t v361 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v359, v360, *(void *)(*(void *)(v361 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v359, v360, v1224);
        __swift_storeEnumTagSinglePayload((uint64_t)v359, 0, 1, v1224);
      }
      uint64_t v362 = v331[16];
      uint64_t v363 = (void *)((char *)v329 + v362);
      v364 = (void *)((char *)v330 + v362);
      *uint64_t v363 = *v364;
      v363[1] = v364[1];
      uint64_t v365 = v331[17];
      uint64_t v366 = (void *)((char *)v329 + v365);
      uint64_t v367 = (void *)((char *)v330 + v365);
      *uint64_t v366 = *v367;
      v366[1] = v367[1];
      uint64_t v368 = v331[18];
      uint64_t v369 = (void *)((char *)v329 + v368);
      uint64_t v370 = (void *)((char *)v330 + v368);
      void *v369 = *v370;
      v369[1] = v370[1];
      uint64_t v371 = v331[19];
      v372 = (void *)((char *)v329 + v371);
      uint64_t v373 = (void *)((char *)v330 + v371);
      void *v372 = *v373;
      v372[1] = v373[1];
      uint64_t v374 = v331[20];
      uint64_t v375 = (void *)((char *)v329 + v374);
      v376 = (void *)((char *)v330 + v374);
      *uint64_t v375 = *v376;
      v375[1] = v376[1];
      uint64_t v377 = v331[21];
      uint64_t v378 = (void *)((char *)v329 + v377);
      uint64_t v379 = (void *)((char *)v330 + v377);
      void *v378 = *v379;
      v378[1] = v379[1];
      uint64_t v380 = v331[22];
      uint64_t v381 = (void *)((char *)v329 + v380);
      uint64_t v382 = (void *)((char *)v330 + v380);
      *uint64_t v381 = *v382;
      v381[1] = v382[1];
      uint64_t v383 = v331[23];
      uint64_t v384 = (void *)((char *)v329 + v383);
      uint64_t v385 = (void *)((char *)v330 + v383);
      *uint64_t v384 = *v385;
      v384[1] = v385[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v329, 0, 1, (uint64_t)v331);
      uint64_t v5 = v1222;
      a3 = v1220;
      goto LABEL_130;
    }
LABEL_118:
    uint64_t v338 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v329, v330, *(void *)(*(void *)(v338 - 8) + 64));
LABEL_130:
    uint64_t v342 = v1224;
    goto LABEL_131;
  }
  if (v333)
  {
    outlined destroy of EmailDocument((uint64_t)v329, (void (*)(void))type metadata accessor for PreExtractedCard);
    goto LABEL_118;
  }
  *uint64_t v329 = *v330;
  v329[1] = v330[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v329[2] = v330[2];
  v329[3] = v330[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v329[4] = v330[4];
  v329[5] = v330[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v329[6] = v330[6];
  v329[7] = v330[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v329[8] = v330[8];
  v329[9] = v330[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v329[10] = v330[10];
  v329[11] = v330[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v339 = v331[10];
  uint64_t v340 = (char *)v329 + v339;
  uint64_t v341 = (char *)v330 + v339;
  uint64_t v342 = v1224;
  int v343 = __swift_getEnumTagSinglePayload((uint64_t)v329 + v339, 1, v1224);
  int v344 = __swift_getEnumTagSinglePayload((uint64_t)v341, 1, v1224);
  if (v343)
  {
    if (!v344)
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v340, v341, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v340, 0, 1, v1224);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v344)
  {
    (*(void (**)(char *, uint64_t))(v1223 + 8))(v340, v1224);
LABEL_148:
    uint64_t v411 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v340, v341, *(void *)(*(void *)(v411 - 8) + 64));
    goto LABEL_149;
  }
  v1211(v340, v341, v1224);
LABEL_149:
  uint64_t v412 = v331[11];
  v413 = (char *)v329 + v412;
  uint64_t v414 = (char *)v330 + v412;
  int v415 = __swift_getEnumTagSinglePayload((uint64_t)v329 + v412, 1, v1224);
  int v416 = __swift_getEnumTagSinglePayload((uint64_t)v414, 1, v1224);
  if (v415)
  {
    if (!v416)
    {
      (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v413, v414, v1224);
      __swift_storeEnumTagSinglePayload((uint64_t)v413, 0, 1, v1224);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v416)
  {
    (*(void (**)(char *, uint64_t))(v1223 + 8))(v413, v1224);
LABEL_160:
    uint64_t v426 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v413, v414, *(void *)(*(void *)(v426 - 8) + 64));
    goto LABEL_161;
  }
  v1211(v413, v414, v1224);
LABEL_161:
  uint64_t v427 = v331[12];
  uint64_t v428 = (void *)((char *)v329 + v427);
  uint64_t v429 = (void *)((char *)v330 + v427);
  void *v428 = *v429;
  v428[1] = v429[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v430 = v331[13];
  v431 = (void *)((char *)v329 + v430);
  uint64_t v432 = (void *)((char *)v330 + v430);
  void *v431 = *v432;
  v431[1] = v432[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v433 = v331[14];
  uint64_t v434 = (void *)((char *)v329 + v433);
  v435 = (void *)((char *)v330 + v433);
  *uint64_t v434 = *v435;
  v434[1] = v435[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v436 = v331[15];
  uint64_t v437 = (char *)v329 + v436;
  v438 = (char *)v330 + v436;
  int v439 = __swift_getEnumTagSinglePayload((uint64_t)v329 + v436, 1, v1224);
  int v440 = __swift_getEnumTagSinglePayload((uint64_t)v438, 1, v1224);
  if (!v439)
  {
    if (!v440)
    {
      v1211(v437, v438, v1224);
      goto LABEL_189;
    }
    (*(void (**)(char *, uint64_t))(v1223 + 8))(v437, v1224);
    goto LABEL_188;
  }
  if (v440)
  {
LABEL_188:
    uint64_t v499 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v437, v438, *(void *)(*(void *)(v499 - 8) + 64));
    goto LABEL_189;
  }
  (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v437, v438, v1224);
  __swift_storeEnumTagSinglePayload((uint64_t)v437, 0, 1, v1224);
LABEL_189:
  uint64_t v500 = v331[16];
  v501 = (void *)((char *)v329 + v500);
  uint64_t v502 = (void *)((char *)v330 + v500);
  void *v501 = *v502;
  v501[1] = v502[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v503 = v331[17];
  v504 = (void *)((char *)v329 + v503);
  v505 = (void *)((char *)v330 + v503);
  void *v504 = *v505;
  v504[1] = v505[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v506 = v331[18];
  uint64_t v507 = (void *)((char *)v329 + v506);
  v508 = (void *)((char *)v330 + v506);
  *uint64_t v507 = *v508;
  v507[1] = v508[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v509 = v331[19];
  uint64_t v510 = (void *)((char *)v329 + v509);
  uint64_t v511 = (void *)((char *)v330 + v509);
  *uint64_t v510 = *v511;
  v510[1] = v511[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v512 = v331[20];
  v513 = (void *)((char *)v329 + v512);
  uint64_t v514 = (void *)((char *)v330 + v512);
  void *v513 = *v514;
  v513[1] = v514[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v515 = v331[21];
  v516 = (void *)((char *)v329 + v515);
  v517 = (void *)((char *)v330 + v515);
  void *v516 = *v517;
  v516[1] = v517[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v518 = v331[22];
  uint64_t v519 = (void *)((char *)v329 + v518);
  v520 = (void *)((char *)v330 + v518);
  *uint64_t v519 = *v520;
  v519[1] = v520[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v521 = v331[23];
  uint64_t v522 = (void *)((char *)v329 + v521);
  uint64_t v523 = (void *)((char *)v330 + v521);
  *uint64_t v522 = *v523;
  v522[1] = v523[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_131:
  uint64_t v386 = a3[23];
  uint64_t v387 = (void *)((char *)v5 + v386);
  uint64_t v388 = (void *)((char *)v4 + v386);
  uint64_t v389 = (int *)type metadata accessor for PreExtractedContact(0);
  int v390 = __swift_getEnumTagSinglePayload((uint64_t)v387, 1, (uint64_t)v389);
  int v391 = __swift_getEnumTagSinglePayload((uint64_t)v388, 1, (uint64_t)v389);
  if (!v390)
  {
    if (v391)
    {
      outlined destroy of EmailDocument((uint64_t)v387, (void (*)(void))type metadata accessor for PreExtractedContact);
      goto LABEL_137;
    }
    *uint64_t v387 = *v388;
    v387[1] = v388[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v387[2] = v388[2];
    v387[3] = v388[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v387[4] = v388[4];
    v387[5] = v388[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v387[6] = v388[6];
    v387[7] = v388[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v387[8] = v388[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v387[9] = v388[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v387[10] = v388[10];
    v387[11] = v388[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v396 = v389[11];
    uint64_t v397 = (char *)v387 + v396;
    uint64_t v398 = (char *)v388 + v396;
    int v399 = __swift_getEnumTagSinglePayload((uint64_t)v387 + v396, 1, v342);
    int v400 = __swift_getEnumTagSinglePayload((uint64_t)v398, 1, v342);
    if (v399)
    {
      if (!v400)
      {
        (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v397, v398, v342);
        __swift_storeEnumTagSinglePayload((uint64_t)v397, 0, 1, v342);
        goto LABEL_155;
      }
    }
    else
    {
      if (!v400)
      {
        v1211(v397, v398, v342);
LABEL_155:
        uint64_t v418 = v389[12];
        v419 = (void *)((char *)v387 + v418);
        uint64_t v420 = (void *)((char *)v388 + v418);
        void *v419 = *v420;
        v419[1] = v420[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v387 + v389[13]) = *(void *)((char *)v388 + v389[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v421 = v389[14];
        uint64_t v422 = (char *)v387 + v421;
        v423 = (char *)v388 + v421;
        int v424 = __swift_getEnumTagSinglePayload((uint64_t)v387 + v421, 1, v342);
        int v425 = __swift_getEnumTagSinglePayload((uint64_t)v423, 1, v342);
        if (v424)
        {
          if (!v425)
          {
            (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v422, v423, v342);
            __swift_storeEnumTagSinglePayload((uint64_t)v422, 0, 1, v342);
LABEL_167:
            *(void *)((char *)v387 + v389[15]) = *(void *)((char *)v388 + v389[15]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v387 + v389[16]) = *(void *)((char *)v388 + v389[16]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v442 = v389[17];
            uint64_t v443 = (void *)((char *)v387 + v442);
            uint64_t v444 = (void *)((char *)v388 + v442);
            *uint64_t v443 = *v444;
            v443[1] = v444[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v387 + v389[18]) = *(void *)((char *)v388 + v389[18]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v387 + v389[19]) = *(void *)((char *)v388 + v389[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_168;
          }
        }
        else
        {
          if (!v425)
          {
            v1211(v422, v423, v342);
            goto LABEL_167;
          }
          (*(void (**)(char *, uint64_t))(v1223 + 8))(v422, v342);
        }
        uint64_t v441 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v422, v423, *(void *)(*(void *)(v441 - 8) + 64));
        goto LABEL_167;
      }
      (*(void (**)(char *, uint64_t))(v1223 + 8))(v397, v342);
    }
    uint64_t v417 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v397, v398, *(void *)(*(void *)(v417 - 8) + 64));
    goto LABEL_155;
  }
  if (v391)
  {
LABEL_137:
    uint64_t v395 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v387, v388, *(void *)(*(void *)(v395 - 8) + 64));
    goto LABEL_168;
  }
  *uint64_t v387 = *v388;
  v387[1] = v388[1];
  v387[2] = v388[2];
  v387[3] = v388[3];
  v387[4] = v388[4];
  v387[5] = v388[5];
  v387[6] = v388[6];
  v387[7] = v388[7];
  v387[8] = v388[8];
  v387[9] = v388[9];
  v387[10] = v388[10];
  v387[11] = v388[11];
  uint64_t v392 = v389[11];
  v1218 = (char *)v387 + v392;
  uint64_t v393 = (char *)v388 + v392;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v393, 1, v1224))
  {
    uint64_t v394 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v1218, v393, *(void *)(*(void *)(v394 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v1218, v393, v1224);
    __swift_storeEnumTagSinglePayload((uint64_t)v1218, 0, 1, v1224);
  }
  uint64_t v4 = v1221;
  uint64_t v5 = v1222;
  a3 = v1220;
  uint64_t v401 = v389[12];
  uint64_t v402 = (void *)((char *)v387 + v401);
  v403 = (void *)((char *)v388 + v401);
  *uint64_t v402 = *v403;
  v402[1] = v403[1];
  *(void *)((char *)v387 + v389[13]) = *(void *)((char *)v388 + v389[13]);
  uint64_t v404 = v389[14];
  uint64_t v405 = (char *)v387 + v404;
  v406 = (char *)v388 + v404;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v406, 1, v1224))
  {
    uint64_t v407 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v405, v406, *(void *)(*(void *)(v407 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v405, v406, v1224);
    __swift_storeEnumTagSinglePayload((uint64_t)v405, 0, 1, v1224);
  }
  *(void *)((char *)v387 + v389[15]) = *(void *)((char *)v388 + v389[15]);
  *(void *)((char *)v387 + v389[16]) = *(void *)((char *)v388 + v389[16]);
  uint64_t v408 = v389[17];
  v409 = (void *)((char *)v387 + v408);
  uint64_t v410 = (void *)((char *)v388 + v408);
  void *v409 = *v410;
  v409[1] = v410[1];
  *(void *)((char *)v387 + v389[18]) = *(void *)((char *)v388 + v389[18]);
  *(void *)((char *)v387 + v389[19]) = *(void *)((char *)v388 + v389[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v387, 0, 1, (uint64_t)v389);
LABEL_168:
  uint64_t v445 = a3[24];
  uint64_t v446 = (void *)((char *)v5 + v445);
  uint64_t v447 = (void *)((char *)v4 + v445);
  uint64_t v448 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  int v449 = __swift_getEnumTagSinglePayload((uint64_t)v446, 1, (uint64_t)v448);
  int v450 = __swift_getEnumTagSinglePayload((uint64_t)v447, 1, (uint64_t)v448);
  if (!v449)
  {
    if (v450)
    {
      outlined destroy of EmailDocument((uint64_t)v446, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
      goto LABEL_174;
    }
    *uint64_t v446 = *v447;
    v446[1] = v447[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v446[2] = v447[2];
    v446[3] = v447[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v446[4] = v447[4];
    v446[5] = v447[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v446[6] = v447[6];
    v446[7] = v447[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v457 = v448[8];
    v458 = (char *)v446 + v457;
    uint64_t v459 = (char *)v447 + v457;
    uint64_t v460 = type metadata accessor for URL();
    int v461 = __swift_getEnumTagSinglePayload((uint64_t)v458, 1, v460);
    int v462 = __swift_getEnumTagSinglePayload((uint64_t)v459, 1, v460);
    if (v461)
    {
      if (!v462)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v460 - 8) + 16))(v458, v459, v460);
        __swift_storeEnumTagSinglePayload((uint64_t)v458, 0, 1, v460);
        goto LABEL_193;
      }
    }
    else
    {
      uint64_t v524 = *(void *)(v460 - 8);
      if (!v462)
      {
        (*(void (**)(char *, char *, uint64_t))(v524 + 24))(v458, v459, v460);
LABEL_193:
        uint64_t v526 = v448[9];
        uint64_t v527 = (void *)((char *)v446 + v526);
        v528 = (void *)((char *)v447 + v526);
        *uint64_t v527 = *v528;
        v527[1] = v528[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v529 = v448[10];
        uint64_t v530 = (void *)((char *)v446 + v529);
        uint64_t v531 = (void *)((char *)v447 + v529);
        *uint64_t v530 = *v531;
        v530[1] = v531[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v532 = v448[11];
        v533 = (void *)((char *)v446 + v532);
        uint64_t v534 = (void *)((char *)v447 + v532);
        void *v533 = *v534;
        v533[1] = v534[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v535 = v448[12];
        v536 = (char *)v446 + v535;
        v537 = (char *)v447 + v535;
        int v538 = __swift_getEnumTagSinglePayload((uint64_t)v446 + v535, 1, v1224);
        int v539 = __swift_getEnumTagSinglePayload((uint64_t)v537, 1, v1224);
        if (v538)
        {
          if (!v539)
          {
            (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v536, v537, v1224);
            __swift_storeEnumTagSinglePayload((uint64_t)v536, 0, 1, v1224);
            goto LABEL_199;
          }
        }
        else
        {
          if (!v539)
          {
            v1211(v536, v537, v1224);
LABEL_199:
            uint64_t v541 = v448[13];
            uint64_t v542 = (char *)v446 + v541;
            uint64_t v543 = (char *)v447 + v541;
            int v544 = __swift_getEnumTagSinglePayload((uint64_t)v446 + v541, 1, v1224);
            int v545 = __swift_getEnumTagSinglePayload((uint64_t)v543, 1, v1224);
            if (v544)
            {
              if (!v545)
              {
                (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v542, v543, v1224);
                __swift_storeEnumTagSinglePayload((uint64_t)v542, 0, 1, v1224);
LABEL_205:
                uint64_t v547 = v448[14];
                v548 = (char *)v446 + v547;
                v549 = (char *)v447 + v547;
                uint64_t v550 = *(void *)v549;
                v548[8] = v549[8];
                *(void *)v548 = v550;
                uint64_t v551 = v448[15];
                v552 = (void *)((char *)v446 + v551);
                v553 = (void *)((char *)v447 + v551);
                void *v552 = *v553;
                v552[1] = v553[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v554 = v448[16];
                uint64_t v555 = (void *)((char *)v446 + v554);
                uint64_t v556 = (void *)((char *)v447 + v554);
                *uint64_t v555 = *v556;
                v555[1] = v556[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v557 = v448[17];
                uint64_t v558 = (void *)((char *)v446 + v557);
                uint64_t v559 = (void *)((char *)v447 + v557);
                *uint64_t v558 = *v559;
                v558[1] = v559[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v560 = v448[18];
                uint64_t v561 = (void *)((char *)v446 + v560);
                uint64_t v562 = (void *)((char *)v447 + v560);
                *uint64_t v561 = *v562;
                v561[1] = v562[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v563 = v448[19];
                uint64_t v564 = (void *)((char *)v446 + v563);
                uint64_t v565 = (void *)((char *)v447 + v563);
                *uint64_t v564 = *v565;
                v564[1] = v565[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_206;
              }
            }
            else
            {
              if (!v545)
              {
                v1211(v542, v543, v1224);
                goto LABEL_205;
              }
              (*(void (**)(char *, uint64_t))(v1223 + 8))(v542, v1224);
            }
            uint64_t v546 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v542, v543, *(void *)(*(void *)(v546 - 8) + 64));
            goto LABEL_205;
          }
          (*(void (**)(char *, uint64_t))(v1223 + 8))(v536, v1224);
        }
        uint64_t v540 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v536, v537, *(void *)(*(void *)(v540 - 8) + 64));
        goto LABEL_199;
      }
      (*(void (**)(char *, uint64_t))(v524 + 8))(v458, v460);
    }
    uint64_t v525 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v458, v459, *(void *)(*(void *)(v525 - 8) + 64));
    goto LABEL_193;
  }
  if (v450)
  {
LABEL_174:
    uint64_t v456 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v446, v447, *(void *)(*(void *)(v456 - 8) + 64));
    goto LABEL_206;
  }
  *uint64_t v446 = *v447;
  v446[1] = v447[1];
  v446[2] = v447[2];
  v446[3] = v447[3];
  v446[4] = v447[4];
  v446[5] = v447[5];
  v446[6] = v447[6];
  v446[7] = v447[7];
  uint64_t v451 = v448[8];
  uint64_t v452 = (char *)v446 + v451;
  v453 = (char *)v447 + v451;
  uint64_t v454 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v453, 1, v454))
  {
    uint64_t v455 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v452, v453, *(void *)(*(void *)(v455 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v454 - 8) + 16))(v452, v453, v454);
    __swift_storeEnumTagSinglePayload((uint64_t)v452, 0, 1, v454);
  }
  uint64_t v4 = v1221;
  uint64_t v5 = v1222;
  a3 = v1220;
  uint64_t v463 = v448[9];
  uint64_t v464 = (void *)((char *)v446 + v463);
  v465 = (void *)((char *)v447 + v463);
  *uint64_t v464 = *v465;
  v464[1] = v465[1];
  uint64_t v466 = v448[10];
  uint64_t v467 = (void *)((char *)v446 + v466);
  uint64_t v468 = (void *)((char *)v447 + v466);
  *uint64_t v467 = *v468;
  v467[1] = v468[1];
  uint64_t v469 = v448[11];
  v470 = (void *)((char *)v446 + v469);
  uint64_t v471 = (void *)((char *)v447 + v469);
  void *v470 = *v471;
  v470[1] = v471[1];
  uint64_t v472 = v448[12];
  v473 = (char *)v446 + v472;
  v474 = (char *)v447 + v472;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v474, 1, v1224))
  {
    uint64_t v475 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v473, v474, *(void *)(*(void *)(v475 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v473, v474, v1224);
    __swift_storeEnumTagSinglePayload((uint64_t)v473, 0, 1, v1224);
  }
  uint64_t v476 = v448[13];
  v477 = (char *)v446 + v476;
  v478 = (char *)v447 + v476;
  if (__swift_getEnumTagSinglePayload((uint64_t)v447 + v476, 1, v1224))
  {
    uint64_t v479 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v477, v478, *(void *)(*(void *)(v479 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1223 + 16))(v477, v478, v1224);
    __swift_storeEnumTagSinglePayload((uint64_t)v477, 0, 1, v1224);
  }
  uint64_t v480 = v448[14];
  v481 = (char *)v446 + v480;
  v482 = (char *)v447 + v480;
  uint64_t v483 = *(void *)v482;
  v481[8] = v482[8];
  *(void *)v481 = v483;
  uint64_t v484 = v448[15];
  v485 = (void *)((char *)v446 + v484);
  v486 = (void *)((char *)v447 + v484);
  void *v485 = *v486;
  v485[1] = v486[1];
  uint64_t v487 = v448[16];
  uint64_t v488 = (void *)((char *)v446 + v487);
  uint64_t v489 = (void *)((char *)v447 + v487);
  *uint64_t v488 = *v489;
  v488[1] = v489[1];
  uint64_t v490 = v448[17];
  uint64_t v491 = (void *)((char *)v446 + v490);
  uint64_t v492 = (void *)((char *)v447 + v490);
  *uint64_t v491 = *v492;
  v491[1] = v492[1];
  uint64_t v493 = v448[18];
  uint64_t v494 = (void *)((char *)v446 + v493);
  uint64_t v495 = (void *)((char *)v447 + v493);
  *uint64_t v494 = *v495;
  v494[1] = v495[1];
  uint64_t v496 = v448[19];
  v497 = (void *)((char *)v446 + v496);
  uint64_t v498 = (void *)((char *)v447 + v496);
  void *v497 = *v498;
  v497[1] = v498[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v446, 0, 1, (uint64_t)v448);
LABEL_206:
  uint64_t v566 = a3[25];
  v567 = (void *)((char *)v5 + v566);
  uint64_t v568 = (void *)((char *)v4 + v566);
  uint64_t v569 = *(void *)((char *)v5 + v566 + 8);
  uint64_t v570 = *(void *)((char *)v4 + v566 + 8);
  if (!v569)
  {
    if (v570)
    {
      void *v567 = *v568;
      v567[1] = v568[1];
      v567[2] = v568[2];
      v567[3] = v568[3];
      v567[4] = v568[4];
      v567[5] = v568[5];
      v567[6] = v568[6];
      v567[7] = v568[7];
      v567[8] = v568[8];
      v567[9] = v568[9];
      v567[10] = v568[10];
      v567[11] = v568[11];
      v567[12] = v568[12];
      v567[13] = v568[13];
      v567[14] = v568[14];
      v567[15] = v568[15];
      v567[16] = v568[16];
      v567[17] = v568[17];
      swift_bridgeObjectRetain();
      uint64_t v5 = v1222;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v5;
    }
LABEL_212:
    memcpy(v567, v568, 0x90uLL);
    return v5;
  }
  if (!v570)
  {
    outlined destroy of PreExtractedBreadcrumb((uint64_t)v567);
    goto LABEL_212;
  }
  void *v567 = *v568;
  v567[1] = v568[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[2] = v568[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[3] = v568[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[4] = v568[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[5] = v568[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[6] = v568[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[7] = v568[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[8] = v568[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[9] = v568[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[10] = v568[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[11] = v568[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[12] = v568[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[13] = v568[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[14] = v568[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[15] = v568[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[16] = v568[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[17] = v568[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t outlined destroy of DataDetectorResults(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of PreExtractedBreadcrumb(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for EmailDocument(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  uint64_t v9 = a3[12];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v301 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v301(v10, v11, v12);
  uint64_t v13 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  uint64_t v16 = a3[19];
  uint64_t v17 = a3[20];
  long long v18 = (char *)a1 + v16;
  long long v19 = (char *)a2 + v16;
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)long long v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v17);
  *((void *)v18 + 4) = *((void *)v19 + 4);
  *(_OWORD *)((char *)a1 + v17) = v21;
  uint64_t v22 = a3[21];
  uint64_t v23 = (_OWORD *)((char *)a1 + v22);
  uint64_t v24 = (_OWORD *)((char *)a2 + v22);
  uint64_t v25 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, (uint64_t)v25))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *uint64_t v23 = *v24;
    uint64_t v27 = v25[5];
    uint64_t v28 = (_OWORD *)((char *)v23 + v27);
    int v29 = (_OWORD *)((char *)v24 + v27);
    uint64_t v30 = type metadata accessor for RentalCarReservation(0);
    v299 = v24;
    uint64_t v300 = v25;
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      long long v32 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v32;
      long long v33 = v29[3];
      v28[2] = v29[2];
      v28[3] = v33;
      long long v34 = v29[5];
      v28[4] = v29[4];
      v28[5] = v34;
      long long v35 = v29[7];
      v28[6] = v29[6];
      v28[7] = v35;
      *((unsigned char *)v28 + 128) = *((unsigned char *)v29 + 128);
      *(_WORD *)((char *)v28 + 129) = *(_WORD *)((char *)v29 + 129);
      *((void *)v28 + 17) = *((void *)v29 + 17);
      long long v36 = v29[10];
      v28[9] = v29[9];
      v28[10] = v36;
      long long v37 = v29[12];
      v28[11] = v29[11];
      v28[12] = v37;
      long long v38 = v29[14];
      v28[13] = v29[13];
      v28[14] = v38;
      v28[15] = v29[15];
      *((void *)v28 + 32) = *((void *)v29 + 32);
      *(_OWORD *)((char *)v28 + 264) = *(_OWORD *)((char *)v29 + 264);
      *(_OWORD *)((char *)v28 + 280) = *(_OWORD *)((char *)v29 + 280);
      *(_OWORD *)((char *)v28 + 296) = *(_OWORD *)((char *)v29 + 296);
      *(_OWORD *)((char *)v28 + 312) = *(_OWORD *)((char *)v29 + 312);
      *(_OWORD *)((char *)v28 + 328) = *(_OWORD *)((char *)v29 + 328);
      *(_OWORD *)((char *)v28 + 344) = *(_OWORD *)((char *)v29 + 344);
      *(_OWORD *)((char *)v28 + 360) = *(_OWORD *)((char *)v29 + 360);
      *((unsigned char *)v28 + 384) = *((unsigned char *)v29 + 384);
      *((void *)v28 + 47) = *((void *)v29 + 47);
      *(_OWORD *)((char *)v28 + 392) = *(_OWORD *)((char *)v29 + 392);
      *(_OWORD *)((char *)v28 + 408) = *(_OWORD *)((char *)v29 + 408);
      uint64_t v39 = *(int *)(v30 + 140);
      uint64_t v40 = (char *)v28 + v39;
      int v41 = (char *)v29 + v39;
      if (__swift_getEnumTagSinglePayload((uint64_t)v29 + v39, 1, v12))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v301(v40, v41, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v12);
      }
      uint64_t v43 = *(int *)(v30 + 144);
      uint64_t v44 = (char *)v28 + v43;
      uint64_t v45 = (char *)v29 + v43;
      if (__swift_getEnumTagSinglePayload((uint64_t)v29 + v43, 1, v12))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        v301(v44, v45, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v12);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v47 = v25[6];
    uint64_t v48 = (_OWORD *)((char *)v23 + v47);
    uint64_t v49 = (_OWORD *)((char *)v24 + v47);
    uint64_t v50 = type metadata accessor for TicketedTransportation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      long long v52 = v49[1];
      *uint64_t v48 = *v49;
      v48[1] = v52;
      long long v53 = v49[3];
      v48[2] = v49[2];
      v48[3] = v53;
      long long v54 = v49[5];
      v48[4] = v49[4];
      v48[5] = v54;
      long long v55 = v49[7];
      v48[6] = v49[6];
      v48[7] = v55;
      *((unsigned char *)v48 + 128) = *((unsigned char *)v49 + 128);
      *(_WORD *)((char *)v48 + 129) = *(_WORD *)((char *)v49 + 129);
      *((void *)v48 + 17) = *((void *)v49 + 17);
      long long v56 = v49[10];
      v48[9] = v49[9];
      v48[10] = v56;
      long long v57 = v49[12];
      v48[11] = v49[11];
      v48[12] = v57;
      *((void *)v48 + 26) = *((void *)v49 + 26);
      *(_OWORD *)((char *)v48 + 216) = *(_OWORD *)((char *)v49 + 216);
      *(_OWORD *)((char *)v48 + 232) = *(_OWORD *)((char *)v49 + 232);
      *(_OWORD *)((char *)v48 + 248) = *(_OWORD *)((char *)v49 + 248);
      *(_OWORD *)((char *)v48 + 264) = *(_OWORD *)((char *)v49 + 264);
      *((unsigned char *)v48 + 296) = *((unsigned char *)v49 + 296);
      uint64_t v58 = *((void *)v49 + 36);
      *((void *)v48 + 35) = *((void *)v49 + 35);
      *((void *)v48 + 36) = v58;
      uint64_t v59 = *(int *)(v50 + 112);
      uint64_t v60 = (char *)v48 + v59;
      uint64_t v61 = (char *)v49 + v59;
      if (__swift_getEnumTagSinglePayload((uint64_t)v49 + v59, 1, v12))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        v301(v60, v61, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v12);
      }
      uint64_t v63 = *(int *)(v50 + 116);
      uint64_t v64 = (char *)v48 + v63;
      uint64_t v65 = (char *)v49 + v63;
      if (__swift_getEnumTagSinglePayload((uint64_t)v49 + v63, 1, v12))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        v301(v64, v65, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v12);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v67 = v25[7];
    uint64_t v68 = (_OWORD *)((char *)v23 + v67);
    uint64_t v69 = (_OWORD *)((char *)v24 + v67);
    uint64_t v70 = (int *)type metadata accessor for TicketedShow(0);
    uint64_t v298 = (uint64_t)v23;
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, (uint64_t)v70))
    {
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
      memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      long long v72 = v69[1];
      *uint64_t v68 = *v69;
      v68[1] = v72;
      long long v73 = v69[3];
      v68[2] = v69[2];
      v68[3] = v73;
      long long v74 = v69[5];
      v68[4] = v69[4];
      v68[5] = v74;
      long long v75 = v69[7];
      v68[6] = v69[6];
      v68[7] = v75;
      *((unsigned char *)v68 + 128) = *((unsigned char *)v69 + 128);
      *(_WORD *)((char *)v68 + 129) = *(_WORD *)((char *)v69 + 129);
      *((void *)v68 + 17) = *((void *)v69 + 17);
      long long v76 = v69[10];
      v68[9] = v69[9];
      v68[10] = v76;
      long long v77 = v69[12];
      v68[11] = v69[11];
      v68[12] = v77;
      long long v78 = v69[14];
      v68[13] = v69[13];
      v68[14] = v78;
      *((void *)v68 + 30) = *((void *)v69 + 30);
      *(_OWORD *)((char *)v68 + 248) = *(_OWORD *)((char *)v69 + 248);
      *(_OWORD *)((char *)v68 + 264) = *(_OWORD *)((char *)v69 + 264);
      *((unsigned char *)v68 + 296) = *((unsigned char *)v69 + 296);
      uint64_t v79 = *((void *)v69 + 36);
      *((void *)v68 + 35) = *((void *)v69 + 35);
      *((void *)v68 + 36) = v79;
      v68[19] = v69[19];
      uint64_t v80 = v70[29];
      uint64_t v81 = (char *)v68 + v80;
      uint64_t v82 = (char *)v69 + v80;
      uint64_t v83 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
        __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
      }
      *(_OWORD *)((char *)v68 + v70[30]) = *(_OWORD *)((char *)v69 + v70[30]);
      uint64_t v85 = v70[31];
      uint64_t v86 = (char *)v68 + v85;
      uint64_t v87 = (char *)v69 + v85;
      uint64_t v23 = (_OWORD *)v298;
      if (__swift_getEnumTagSinglePayload((uint64_t)v69 + v85, 1, v12))
      {
        uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        v301(v86, v87, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v12);
      }
      uint64_t v89 = v70[32];
      uint64_t v90 = (char *)v68 + v89;
      uint64_t v91 = (char *)v69 + v89;
      if (__swift_getEnumTagSinglePayload((uint64_t)v69 + v89, 1, v12))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        v301(v90, v91, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v12);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, (uint64_t)v70);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v93 = v25[8];
    uint64_t v94 = (_OWORD *)((char *)v23 + v93);
    uint64_t v95 = (_OWORD *)((char *)v24 + v93);
    uint64_t v96 = type metadata accessor for Appointment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
    {
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
      memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      long long v98 = v95[1];
      *uint64_t v94 = *v95;
      v94[1] = v98;
      long long v99 = v95[3];
      v94[2] = v95[2];
      v94[3] = v99;
      long long v100 = v95[5];
      v94[4] = v95[4];
      v94[5] = v100;
      long long v101 = v95[7];
      v94[6] = v95[6];
      v94[7] = v101;
      *((unsigned char *)v94 + 128) = *((unsigned char *)v95 + 128);
      *(_WORD *)((char *)v94 + 129) = *(_WORD *)((char *)v95 + 129);
      *((void *)v94 + 17) = *((void *)v95 + 17);
      long long v102 = v95[10];
      v94[9] = v95[9];
      v94[10] = v102;
      long long v103 = v95[12];
      v94[11] = v95[11];
      v94[12] = v103;
      long long v104 = v95[14];
      v94[13] = v95[13];
      v94[14] = v104;
      long long v105 = v95[16];
      v94[15] = v95[15];
      v94[16] = v105;
      *((unsigned char *)v94 + 280) = *((unsigned char *)v95 + 280);
      *((void *)v94 + 34) = *((void *)v95 + 34);
      v94[18] = v95[18];
      uint64_t v106 = *(int *)(v96 + 108);
      uint64_t v107 = (char *)v94 + v106;
      uint64_t v108 = (char *)v95 + v106;
      if (__swift_getEnumTagSinglePayload((uint64_t)v95 + v106, 1, v12))
      {
        uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        v301(v107, v108, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v12);
      }
      uint64_t v110 = *(int *)(v96 + 112);
      uint64_t v111 = (char *)v94 + v110;
      uint64_t v112 = (char *)v95 + v110;
      if (__swift_getEnumTagSinglePayload((uint64_t)v95 + v110, 1, v12))
      {
        uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        v301(v111, v112, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v12);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v96);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v114 = v25[9];
    v115 = (_OWORD *)((char *)v23 + v114);
    uint64_t v116 = (_OWORD *)((char *)v24 + v114);
    uint64_t v117 = (int *)type metadata accessor for Party(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, (uint64_t)v117))
    {
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
      memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
    }
    else
    {
      long long v119 = v116[1];
      _OWORD *v115 = *v116;
      v115[1] = v119;
      long long v120 = v116[3];
      v115[2] = v116[2];
      v115[3] = v120;
      long long v121 = v116[5];
      v115[4] = v116[4];
      v115[5] = v121;
      long long v122 = v116[7];
      v115[6] = v116[6];
      v115[7] = v122;
      *((unsigned char *)v115 + 128) = *((unsigned char *)v116 + 128);
      *(_WORD *)((char *)v115 + 129) = *(_WORD *)((char *)v116 + 129);
      *((void *)v115 + 17) = *((void *)v116 + 17);
      long long v123 = v116[10];
      v115[9] = v116[9];
      v115[10] = v123;
      long long v124 = v116[12];
      v115[11] = v116[11];
      v115[12] = v124;
      long long v125 = v116[14];
      v115[13] = v116[13];
      v115[14] = v125;
      v115[15] = v116[15];
      uint64_t v126 = v117[24];
      uint64_t v127 = (char *)v115 + v126;
      uint64_t v128 = (char *)v116 + v126;
      if (__swift_getEnumTagSinglePayload((uint64_t)v116 + v126, 1, v12))
      {
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
      }
      else
      {
        v301(v127, v128, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v12);
      }
      uint64_t v130 = v117[25];
      uint64_t v131 = (char *)v115 + v130;
      uint64_t v132 = (char *)v116 + v130;
      if (__swift_getEnumTagSinglePayload((uint64_t)v116 + v130, 1, v12))
      {
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        v301(v131, v132, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v12);
      }
      uint64_t v134 = v117[26];
      uint64_t v135 = (char *)v115 + v134;
      uint64_t v136 = (char *)v116 + v134;
      uint64_t v137 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, v137))
      {
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
        __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v137);
      }
      uint64_t v23 = (_OWORD *)v298;
      __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, (uint64_t)v117);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v139 = v25[10];
    uint64_t v140 = (_OWORD *)((char *)v23 + v139);
    uint64_t v141 = (_OWORD *)((char *)v24 + v139);
    uint64_t v142 = (int *)type metadata accessor for Trip(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, (uint64_t)v142))
    {
      uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
      memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
    }
    else
    {
      long long v144 = v141[1];
      *uint64_t v140 = *v141;
      v140[1] = v144;
      long long v145 = v141[3];
      v140[2] = v141[2];
      v140[3] = v145;
      long long v146 = v141[5];
      v140[4] = v141[4];
      v140[5] = v146;
      long long v147 = v141[7];
      v140[6] = v141[6];
      v140[7] = v147;
      *((unsigned char *)v140 + 128) = *((unsigned char *)v141 + 128);
      *(_WORD *)((char *)v140 + 129) = *(_WORD *)((char *)v141 + 129);
      *((void *)v140 + 17) = *((void *)v141 + 17);
      long long v148 = v141[10];
      v140[9] = v141[9];
      v140[10] = v148;
      long long v149 = v141[12];
      v140[11] = v141[11];
      v140[12] = v149;
      v140[13] = v141[13];
      uint64_t v150 = v142[22];
      uint64_t v151 = (char *)v140 + v150;
      uint64_t v152 = (char *)v141 + v150;
      if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v150, 1, v12))
      {
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        v301(v151, v152, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v12);
      }
      uint64_t v154 = v142[23];
      uint64_t v155 = (char *)v140 + v154;
      uint64_t v156 = (char *)v141 + v154;
      if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v154, 1, v12))
      {
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        v301(v155, v156, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v12);
      }
      uint64_t v158 = v142[24];
      uint64_t v159 = (char *)v140 + v158;
      uint64_t v160 = (char *)v141 + v158;
      *(void *)uint64_t v159 = *(void *)v160;
      v159[8] = v160[8];
      uint64_t v161 = v142[25];
      uint64_t v162 = (char *)v140 + v161;
      uint64_t v163 = (char *)v141 + v161;
      uint64_t v164 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v164))
      {
        uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v162, v163, v164);
        __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v164);
      }
      uint64_t v23 = (_OWORD *)v298;
      __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, (uint64_t)v142);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v166 = v25[11];
    uint64_t v167 = (_OWORD *)((char *)v23 + v166);
    uint64_t v168 = (_OWORD *)((char *)v24 + v166);
    uint64_t v169 = (int *)type metadata accessor for FlightReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v168, 1, (uint64_t)v169))
    {
      uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
      memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
    }
    else
    {
      long long v171 = v168[1];
      *uint64_t v167 = *v168;
      v167[1] = v171;
      long long v172 = v168[3];
      v167[2] = v168[2];
      v167[3] = v172;
      long long v173 = v168[5];
      v167[4] = v168[4];
      v167[5] = v173;
      *((unsigned char *)v167 + 96) = *((unsigned char *)v168 + 96);
      *(_OWORD *)((char *)v167 + 104) = *(_OWORD *)((char *)v168 + 104);
      uint64_t v174 = v169[13];
      uint64_t v175 = (char *)v167 + v174;
      uint64_t v176 = (char *)v168 + v174;
      uint64_t v177 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v176, 1, v177))
      {
        uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
        __swift_storeEnumTagSinglePayload((uint64_t)v175, 0, 1, v177);
      }
      uint64_t v179 = v169[14];
      v180 = (char *)v167 + v179;
      uint64_t v181 = (char *)v168 + v179;
      uint64_t v297 = v12;
      if (__swift_getEnumTagSinglePayload((uint64_t)v168 + v179, 1, v177))
      {
        uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v180, v181, v177);
        __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v177);
      }
      *(_OWORD *)((char *)v167 + v169[15]) = *(_OWORD *)((char *)v168 + v169[15]);
      *(_OWORD *)((char *)v167 + v169[16]) = *(_OWORD *)((char *)v168 + v169[16]);
      *(_OWORD *)((char *)v167 + v169[17]) = *(_OWORD *)((char *)v168 + v169[17]);
      uint64_t v183 = v169[18];
      uint64_t v184 = (char *)v167 + v183;
      v185 = (char *)v168 + v183;
      uint64_t v186 = type metadata accessor for DateComponents();
      uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32);
      v187(v184, v185, v186);
      v187((char *)v167 + v169[19], (char *)v168 + v169[19], v186);
      *(_OWORD *)((char *)v167 + v169[20]) = *(_OWORD *)((char *)v168 + v169[20]);
      *(_OWORD *)((char *)v167 + v169[21]) = *(_OWORD *)((char *)v168 + v169[21]);
      *(_OWORD *)((char *)v167 + v169[22]) = *(_OWORD *)((char *)v168 + v169[22]);
      *(_OWORD *)((char *)v167 + v169[23]) = *(_OWORD *)((char *)v168 + v169[23]);
      *(_OWORD *)((char *)v167 + v169[24]) = *(_OWORD *)((char *)v168 + v169[24]);
      *(_OWORD *)((char *)v167 + v169[25]) = *(_OWORD *)((char *)v168 + v169[25]);
      *(_OWORD *)((char *)v167 + v169[26]) = *(_OWORD *)((char *)v168 + v169[26]);
      *(_OWORD *)((char *)v167 + v169[27]) = *(_OWORD *)((char *)v168 + v169[27]);
      *(_OWORD *)((char *)v167 + v169[28]) = *(_OWORD *)((char *)v168 + v169[28]);
      *(_OWORD *)((char *)v167 + v169[29]) = *(_OWORD *)((char *)v168 + v169[29]);
      *(_OWORD *)((char *)v167 + v169[30]) = *(_OWORD *)((char *)v168 + v169[30]);
      *(_OWORD *)((char *)v167 + v169[31]) = *(_OWORD *)((char *)v168 + v169[31]);
      *(_OWORD *)((char *)v167 + v169[32]) = *(_OWORD *)((char *)v168 + v169[32]);
      *(void *)((char *)v167 + v169[33]) = *(void *)((char *)v168 + v169[33]);
      *(void *)((char *)v167 + v169[34]) = *(void *)((char *)v168 + v169[34]);
      *(_OWORD *)((char *)v167 + v169[35]) = *(_OWORD *)((char *)v168 + v169[35]);
      *(_OWORD *)((char *)v167 + v169[36]) = *(_OWORD *)((char *)v168 + v169[36]);
      *(_OWORD *)((char *)v167 + v169[37]) = *(_OWORD *)((char *)v168 + v169[37]);
      uint64_t v188 = v169[38];
      uint64_t v189 = (char *)v167 + v188;
      uint64_t v190 = (char *)v168 + v188;
      uint64_t v12 = v297;
      if (__swift_getEnumTagSinglePayload((uint64_t)v168 + v188, 1, v297))
      {
        uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
      }
      else
      {
        v301(v189, v190, v297);
        __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v297);
      }
      uint64_t v23 = (_OWORD *)v298;
      *(_OWORD *)((char *)v167 + v169[39]) = *(_OWORD *)((char *)v168 + v169[39]);
      *(_OWORD *)((char *)v167 + v169[40]) = *(_OWORD *)((char *)v168 + v169[40]);
      uint64_t v192 = v169[41];
      uint64_t v193 = (char *)v167 + v192;
      uint64_t v194 = (char *)v168 + v192;
      *(void *)uint64_t v193 = *(void *)v194;
      v193[8] = v194[8];
      *(_OWORD *)((char *)v167 + v169[42]) = *(_OWORD *)((char *)v168 + v169[42]);
      uint64_t v195 = v169[43];
      uint64_t v196 = (char *)v167 + v195;
      uint64_t v197 = (char *)v168 + v195;
      *(_OWORD *)uint64_t v196 = *(_OWORD *)v197;
      *(void *)(v196 + 13) = *(void *)(v197 + 13);
      *(_OWORD *)((char *)v167 + v169[44]) = *(_OWORD *)((char *)v168 + v169[44]);
      *(_OWORD *)((char *)v167 + v169[45]) = *(_OWORD *)((char *)v168 + v169[45]);
      *(_OWORD *)((char *)v167 + v169[46]) = *(_OWORD *)((char *)v168 + v169[46]);
      *(_OWORD *)((char *)v167 + v169[47]) = *(_OWORD *)((char *)v168 + v169[47]);
      __swift_storeEnumTagSinglePayload((uint64_t)v167, 0, 1, (uint64_t)v169);
      uint64_t v24 = v299;
      uint64_t v25 = v300;
    }
    uint64_t v198 = v25[12];
    uint64_t v199 = (_OWORD *)((char *)v23 + v198);
    uint64_t v200 = (_OWORD *)((char *)v24 + v198);
    uint64_t v201 = (int *)type metadata accessor for HotelReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, (uint64_t)v201))
    {
      uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
      memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
    }
    else
    {
      long long v203 = v200[1];
      *uint64_t v199 = *v200;
      v199[1] = v203;
      long long v204 = v200[3];
      v199[2] = v200[2];
      v199[3] = v204;
      long long v205 = v200[5];
      v199[4] = v200[4];
      v199[5] = v205;
      *((unsigned char *)v199 + 96) = *((unsigned char *)v200 + 96);
      *(_OWORD *)((char *)v199 + 104) = *(_OWORD *)((char *)v200 + 104);
      *(_OWORD *)((char *)v199 + 120) = *(_OWORD *)((char *)v200 + 120);
      uint64_t v206 = v201[14];
      v207 = (char *)v199 + v206;
      uint64_t v208 = (char *)v200 + v206;
      uint64_t v209 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v209))
      {
        uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v207, v208, *(void *)(*(void *)(v210 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32))(v207, v208, v209);
        __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v209);
      }
      uint64_t v211 = v201[15];
      v212 = (char *)v199 + v211;
      uint64_t v213 = (char *)v200 + v211;
      if (__swift_getEnumTagSinglePayload((uint64_t)v200 + v211, 1, v209))
      {
        uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v212, v213, *(void *)(*(void *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32))(v212, v213, v209);
        __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v209);
      }
      uint64_t v25 = v300;
      *(_OWORD *)((char *)v199 + v201[16]) = *(_OWORD *)((char *)v200 + v201[16]);
      *(_OWORD *)((char *)v199 + v201[17]) = *(_OWORD *)((char *)v200 + v201[17]);
      *(_OWORD *)((char *)v199 + v201[18]) = *(_OWORD *)((char *)v200 + v201[18]);
      *(_OWORD *)((char *)v199 + v201[19]) = *(_OWORD *)((char *)v200 + v201[19]);
      *(_OWORD *)((char *)v199 + v201[20]) = *(_OWORD *)((char *)v200 + v201[20]);
      *(void *)((char *)v199 + v201[21]) = *(void *)((char *)v200 + v201[21]);
      *(void *)((char *)v199 + v201[22]) = *(void *)((char *)v200 + v201[22]);
      uint64_t v215 = v201[23];
      uint64_t v216 = (char *)v199 + v215;
      uint64_t v217 = (char *)v200 + v215;
      v216[8] = v217[8];
      *(void *)uint64_t v216 = *(void *)v217;
      uint64_t v218 = v201[24];
      uint64_t v219 = (char *)v199 + v218;
      uint64_t v220 = (char *)v200 + v218;
      v219[8] = v220[8];
      *(void *)uint64_t v219 = *(void *)v220;
      *(_OWORD *)((char *)v199 + v201[25]) = *(_OWORD *)((char *)v200 + v201[25]);
      *(_OWORD *)((char *)v199 + v201[26]) = *(_OWORD *)((char *)v200 + v201[26]);
      *(_OWORD *)((char *)v199 + v201[27]) = *(_OWORD *)((char *)v200 + v201[27]);
      *(_OWORD *)((char *)v199 + v201[28]) = *(_OWORD *)((char *)v200 + v201[28]);
      uint64_t v221 = v201[29];
      uint64_t v222 = (char *)v199 + v221;
      uint64_t v223 = (char *)v200 + v221;
      *(void *)uint64_t v222 = *(void *)v223;
      v222[8] = v223[8];
      __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, (uint64_t)v201);
      uint64_t v23 = (_OWORD *)v298;
      uint64_t v24 = v299;
    }
    uint64_t v224 = v25[13];
    uint64_t v225 = (_OWORD *)((char *)v23 + v224);
    uint64_t v226 = (_OWORD *)((char *)v24 + v224);
    uint64_t v227 = (int *)type metadata accessor for RestaurantReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v226, 1, (uint64_t)v227))
    {
      uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
      memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
    }
    else
    {
      long long v229 = v226[1];
      *uint64_t v225 = *v226;
      v225[1] = v229;
      long long v230 = v226[3];
      v225[2] = v226[2];
      v225[3] = v230;
      long long v231 = v226[5];
      v225[4] = v226[4];
      v225[5] = v231;
      *((unsigned char *)v225 + 96) = *((unsigned char *)v226 + 96);
      *(_OWORD *)((char *)v225 + 104) = *(_OWORD *)((char *)v226 + 104);
      *(_OWORD *)((char *)v225 + 120) = *(_OWORD *)((char *)v226 + 120);
      uint64_t v232 = v227[14];
      long long v233 = (char *)v225 + v232;
      uint64_t v234 = (char *)v226 + v232;
      uint64_t v235 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v235))
      {
        uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v233, v234, *(void *)(*(void *)(v236 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
        __swift_storeEnumTagSinglePayload((uint64_t)v233, 0, 1, v235);
      }
      *(_OWORD *)((char *)v225 + v227[15]) = *(_OWORD *)((char *)v226 + v227[15]);
      *(_OWORD *)((char *)v225 + v227[16]) = *(_OWORD *)((char *)v226 + v227[16]);
      *(_OWORD *)((char *)v225 + v227[17]) = *(_OWORD *)((char *)v226 + v227[17]);
      *(_OWORD *)((char *)v225 + v227[18]) = *(_OWORD *)((char *)v226 + v227[18]);
      *(_OWORD *)((char *)v225 + v227[19]) = *(_OWORD *)((char *)v226 + v227[19]);
      *(void *)((char *)v225 + v227[20]) = *(void *)((char *)v226 + v227[20]);
      *(_OWORD *)((char *)v225 + v227[21]) = *(_OWORD *)((char *)v226 + v227[21]);
      *(_OWORD *)((char *)v225 + v227[22]) = *(_OWORD *)((char *)v226 + v227[22]);
      *(_OWORD *)((char *)v225 + v227[23]) = *(_OWORD *)((char *)v226 + v227[23]);
      __swift_storeEnumTagSinglePayload((uint64_t)v225, 0, 1, (uint64_t)v227);
      uint64_t v25 = v300;
    }
    __swift_storeEnumTagSinglePayload(v298, 0, 1, (uint64_t)v25);
  }
  uint64_t v237 = a3[22];
  v238 = (_OWORD *)((char *)a1 + v237);
  uint64_t v239 = (_OWORD *)((char *)a2 + v237);
  uint64_t v240 = (int *)type metadata accessor for PreExtractedCard(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v239, 1, (uint64_t)v240))
  {
    uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v238, v239, *(void *)(*(void *)(v241 - 8) + 64));
  }
  else
  {
    long long v242 = v239[1];
    _OWORD *v238 = *v239;
    v238[1] = v242;
    long long v243 = v239[3];
    v238[2] = v239[2];
    v238[3] = v243;
    long long v244 = v239[5];
    v238[4] = v239[4];
    v238[5] = v244;
    uint64_t v245 = v240[10];
    uint64_t v246 = (char *)v238 + v245;
    uint64_t v247 = (char *)v239 + v245;
    if (__swift_getEnumTagSinglePayload((uint64_t)v239 + v245, 1, v12))
    {
      uint64_t v248 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
    }
    else
    {
      v301(v246, v247, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, v12);
    }
    uint64_t v249 = v240[11];
    uint64_t v250 = (char *)v238 + v249;
    uint64_t v251 = (char *)v239 + v249;
    if (__swift_getEnumTagSinglePayload((uint64_t)v239 + v249, 1, v12))
    {
      uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v250, v251, *(void *)(*(void *)(v252 - 8) + 64));
    }
    else
    {
      v301(v250, v251, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v250, 0, 1, v12);
    }
    *(_OWORD *)((char *)v238 + v240[12]) = *(_OWORD *)((char *)v239 + v240[12]);
    *(_OWORD *)((char *)v238 + v240[13]) = *(_OWORD *)((char *)v239 + v240[13]);
    *(_OWORD *)((char *)v238 + v240[14]) = *(_OWORD *)((char *)v239 + v240[14]);
    uint64_t v253 = v240[15];
    uint64_t v254 = (char *)v238 + v253;
    uint64_t v255 = (char *)v239 + v253;
    if (__swift_getEnumTagSinglePayload((uint64_t)v239 + v253, 1, v12))
    {
      uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
    }
    else
    {
      v301(v254, v255, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v12);
    }
    *(_OWORD *)((char *)v238 + v240[16]) = *(_OWORD *)((char *)v239 + v240[16]);
    *(_OWORD *)((char *)v238 + v240[17]) = *(_OWORD *)((char *)v239 + v240[17]);
    *(_OWORD *)((char *)v238 + v240[18]) = *(_OWORD *)((char *)v239 + v240[18]);
    *(_OWORD *)((char *)v238 + v240[19]) = *(_OWORD *)((char *)v239 + v240[19]);
    *(_OWORD *)((char *)v238 + v240[20]) = *(_OWORD *)((char *)v239 + v240[20]);
    *(_OWORD *)((char *)v238 + v240[21]) = *(_OWORD *)((char *)v239 + v240[21]);
    *(_OWORD *)((char *)v238 + v240[22]) = *(_OWORD *)((char *)v239 + v240[22]);
    *(_OWORD *)((char *)v238 + v240[23]) = *(_OWORD *)((char *)v239 + v240[23]);
    __swift_storeEnumTagSinglePayload((uint64_t)v238, 0, 1, (uint64_t)v240);
  }
  uint64_t v257 = a3[23];
  uint64_t v258 = (_OWORD *)((char *)a1 + v257);
  uint64_t v259 = (_OWORD *)((char *)a2 + v257);
  uint64_t v260 = (int *)type metadata accessor for PreExtractedContact(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v259, 1, (uint64_t)v260))
  {
    uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
  }
  else
  {
    long long v262 = v259[1];
    *uint64_t v258 = *v259;
    v258[1] = v262;
    long long v263 = v259[3];
    v258[2] = v259[2];
    v258[3] = v263;
    long long v264 = v259[5];
    v258[4] = v259[4];
    v258[5] = v264;
    uint64_t v265 = v260[11];
    uint64_t v266 = (char *)v258 + v265;
    uint64_t v267 = (char *)v259 + v265;
    if (__swift_getEnumTagSinglePayload((uint64_t)v259 + v265, 1, v12))
    {
      uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
    }
    else
    {
      v301(v266, v267, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v12);
    }
    *(_OWORD *)((char *)v258 + v260[12]) = *(_OWORD *)((char *)v259 + v260[12]);
    *(void *)((char *)v258 + v260[13]) = *(void *)((char *)v259 + v260[13]);
    uint64_t v269 = v260[14];
    uint64_t v270 = (char *)v258 + v269;
    uint64_t v271 = (char *)v259 + v269;
    if (__swift_getEnumTagSinglePayload((uint64_t)v259 + v269, 1, v12))
    {
      uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v270, v271, *(void *)(*(void *)(v272 - 8) + 64));
    }
    else
    {
      v301(v270, v271, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v270, 0, 1, v12);
    }
    *(void *)((char *)v258 + v260[15]) = *(void *)((char *)v259 + v260[15]);
    *(void *)((char *)v258 + v260[16]) = *(void *)((char *)v259 + v260[16]);
    *(_OWORD *)((char *)v258 + v260[17]) = *(_OWORD *)((char *)v259 + v260[17]);
    *(void *)((char *)v258 + v260[18]) = *(void *)((char *)v259 + v260[18]);
    *(void *)((char *)v258 + v260[19]) = *(void *)((char *)v259 + v260[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v258, 0, 1, (uint64_t)v260);
  }
  uint64_t v273 = a3[24];
  uint64_t v274 = (_OWORD *)((char *)a1 + v273);
  uint64_t v275 = (_OWORD *)((char *)a2 + v273);
  uint64_t v276 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v275, 1, (uint64_t)v276))
  {
    uint64_t v277 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v274, v275, *(void *)(*(void *)(v277 - 8) + 64));
  }
  else
  {
    long long v278 = v275[1];
    *uint64_t v274 = *v275;
    v274[1] = v278;
    long long v279 = v275[3];
    v274[2] = v275[2];
    v274[3] = v279;
    uint64_t v280 = v276[8];
    uint64_t v281 = (char *)v274 + v280;
    v282 = (char *)v275 + v280;
    uint64_t v283 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v282, 1, v283))
    {
      uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v281, v282, *(void *)(*(void *)(v284 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 32))(v281, v282, v283);
      __swift_storeEnumTagSinglePayload((uint64_t)v281, 0, 1, v283);
    }
    *(_OWORD *)((char *)v274 + v276[9]) = *(_OWORD *)((char *)v275 + v276[9]);
    *(_OWORD *)((char *)v274 + v276[10]) = *(_OWORD *)((char *)v275 + v276[10]);
    *(_OWORD *)((char *)v274 + v276[11]) = *(_OWORD *)((char *)v275 + v276[11]);
    uint64_t v285 = v276[12];
    uint64_t v286 = (char *)v274 + v285;
    uint64_t v287 = (char *)v275 + v285;
    if (__swift_getEnumTagSinglePayload((uint64_t)v275 + v285, 1, v12))
    {
      uint64_t v288 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
    }
    else
    {
      v301(v286, v287, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v286, 0, 1, v12);
    }
    uint64_t v289 = v276[13];
    uint64_t v290 = (char *)v274 + v289;
    uint64_t v291 = (char *)v275 + v289;
    if (__swift_getEnumTagSinglePayload((uint64_t)v275 + v289, 1, v12))
    {
      uint64_t v292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
    }
    else
    {
      v301(v290, v291, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v290, 0, 1, v12);
    }
    uint64_t v293 = v276[14];
    uint64_t v294 = (char *)v274 + v293;
    uint64_t v295 = (char *)v275 + v293;
    *(void *)uint64_t v294 = *(void *)v295;
    v294[8] = v295[8];
    *(_OWORD *)((char *)v274 + v276[15]) = *(_OWORD *)((char *)v275 + v276[15]);
    *(_OWORD *)((char *)v274 + v276[16]) = *(_OWORD *)((char *)v275 + v276[16]);
    *(_OWORD *)((char *)v274 + v276[17]) = *(_OWORD *)((char *)v275 + v276[17]);
    *(_OWORD *)((char *)v274 + v276[18]) = *(_OWORD *)((char *)v275 + v276[18]);
    *(_OWORD *)((char *)v274 + v276[19]) = *(_OWORD *)((char *)v275 + v276[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v274, 0, 1, (uint64_t)v276);
  }
  memcpy((char *)a1 + a3[25], (char *)a2 + a3[25], 0x90uLL);
  return a1;
}

void *assignWithTake for EmailDocument(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[12];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v1253 = type metadata accessor for Date();
  uint64_t v1254 = *(void *)(v1253 - 8);
  v1252 = *(void (**)(char *, char *))(v1254 + 40);
  v1252(v11, v12);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[18];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[19];
  long long v20 = (void *)((char *)a1 + v19);
  long long v21 = (void *)((char *)a2 + v19);
  if (*(void *)((char *)a1 + v19))
  {
    if (*v21)
    {
      *long long v20 = *v21;
      swift_bridgeObjectRelease();
      v20[1] = v21[1];
      swift_bridgeObjectRelease();
      v20[2] = v21[2];
      swift_bridgeObjectRelease();
      v20[3] = v21[3];
      swift_bridgeObjectRelease();
      v20[4] = v21[4];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    outlined destroy of DataDetectorResults((uint64_t)v20);
  }
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  v20[4] = v21[4];
LABEL_6:
  uint64_t v23 = v1253;
  uint64_t v24 = a3[20];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[21];
  uint64_t v30 = (uint64_t)a1 + v29;
  uint64_t v31 = (uint64_t)a2 + v29;
  long long v32 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v30, 1, (uint64_t)v32);
  __src = (char *)v31;
  int v34 = __swift_getEnumTagSinglePayload(v31, 1, (uint64_t)v32);
  v1255 = v32;
  if (EnumTagSinglePayload)
  {
    if (!v34)
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      uint64_t v35 = v32[5];
      long long v36 = (_OWORD *)(v30 + v35);
      long long v37 = &__src[v35];
      uint64_t v38 = type metadata accessor for RentalCarReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
        uint64_t v40 = v1255;
      }
      else
      {
        uint64_t v63 = v30;
        long long v64 = *((_OWORD *)v37 + 1);
        *long long v36 = *(_OWORD *)v37;
        v36[1] = v64;
        long long v65 = *((_OWORD *)v37 + 3);
        v36[2] = *((_OWORD *)v37 + 2);
        v36[3] = v65;
        long long v66 = *((_OWORD *)v37 + 5);
        void v36[4] = *((_OWORD *)v37 + 4);
        v36[5] = v66;
        long long v67 = *((_OWORD *)v37 + 7);
        v36[6] = *((_OWORD *)v37 + 6);
        v36[7] = v67;
        *((unsigned char *)v36 + 128) = v37[128];
        *(_WORD *)((char *)v36 + 129) = *(_WORD *)(v37 + 129);
        *((void *)v36 + 17) = *((void *)v37 + 17);
        long long v68 = *((_OWORD *)v37 + 10);
        v36[9] = *((_OWORD *)v37 + 9);
        v36[10] = v68;
        long long v69 = *((_OWORD *)v37 + 12);
        v36[11] = *((_OWORD *)v37 + 11);
        v36[12] = v69;
        long long v70 = *((_OWORD *)v37 + 14);
        v36[13] = *((_OWORD *)v37 + 13);
        v36[14] = v70;
        v36[15] = *((_OWORD *)v37 + 15);
        *((void *)v36 + 32) = *((void *)v37 + 32);
        *(_OWORD *)((char *)v36 + 264) = *(_OWORD *)(v37 + 264);
        *(_OWORD *)((char *)v36 + 280) = *(_OWORD *)(v37 + 280);
        *(_OWORD *)((char *)v36 + 296) = *(_OWORD *)(v37 + 296);
        *(_OWORD *)((char *)v36 + 312) = *(_OWORD *)(v37 + 312);
        *(_OWORD *)((char *)v36 + 328) = *(_OWORD *)(v37 + 328);
        *(_OWORD *)((char *)v36 + 344) = *(_OWORD *)(v37 + 344);
        *(_OWORD *)((char *)v36 + 360) = *(_OWORD *)(v37 + 360);
        *((unsigned char *)v36 + 384) = v37[384];
        *((void *)v36 + 47) = *((void *)v37 + 47);
        *(_OWORD *)((char *)v36 + 392) = *(_OWORD *)(v37 + 392);
        *(_OWORD *)((char *)v36 + 408) = *(_OWORD *)(v37 + 408);
        uint64_t v71 = *(int *)(v38 + 140);
        long long v72 = (char *)v36 + v71;
        long long v73 = &v37[v71];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v71], 1, v1253))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v72, v73, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v1253);
        }
        uint64_t v76 = *(int *)(v38 + 144);
        long long v77 = (char *)v36 + v76;
        long long v78 = &v37[v76];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v76], 1, v1253))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v77, v78, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v1253);
        }
        uint64_t v40 = v1255;
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
        uint64_t v30 = v63;
      }
      uint64_t v80 = v40[6];
      uint64_t v81 = (_OWORD *)(v30 + v80);
      uint64_t v82 = &__src[v80];
      uint64_t v83 = type metadata accessor for TicketedTransportation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        uint64_t v85 = v30;
        long long v86 = *((_OWORD *)v82 + 1);
        *uint64_t v81 = *(_OWORD *)v82;
        v81[1] = v86;
        long long v87 = *((_OWORD *)v82 + 3);
        v81[2] = *((_OWORD *)v82 + 2);
        v81[3] = v87;
        long long v88 = *((_OWORD *)v82 + 5);
        v81[4] = *((_OWORD *)v82 + 4);
        v81[5] = v88;
        long long v89 = *((_OWORD *)v82 + 7);
        v81[6] = *((_OWORD *)v82 + 6);
        v81[7] = v89;
        *((unsigned char *)v81 + 128) = v82[128];
        *(_WORD *)((char *)v81 + 129) = *(_WORD *)(v82 + 129);
        *((void *)v81 + 17) = *((void *)v82 + 17);
        long long v90 = *((_OWORD *)v82 + 10);
        v81[9] = *((_OWORD *)v82 + 9);
        v81[10] = v90;
        long long v91 = *((_OWORD *)v82 + 12);
        v81[11] = *((_OWORD *)v82 + 11);
        v81[12] = v91;
        *((void *)v81 + 26) = *((void *)v82 + 26);
        *(_OWORD *)((char *)v81 + 216) = *(_OWORD *)(v82 + 216);
        *(_OWORD *)((char *)v81 + 232) = *(_OWORD *)(v82 + 232);
        *(_OWORD *)((char *)v81 + 248) = *(_OWORD *)(v82 + 248);
        *(_OWORD *)((char *)v81 + 264) = *(_OWORD *)(v82 + 264);
        *((unsigned char *)v81 + 296) = v82[296];
        uint64_t v92 = *((void *)v82 + 36);
        *((void *)v81 + 35) = *((void *)v82 + 35);
        *((void *)v81 + 36) = v92;
        uint64_t v93 = *(int *)(v83 + 112);
        uint64_t v94 = (char *)v81 + v93;
        uint64_t v95 = &v82[v93];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v93], 1, v1253))
        {
          uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v94, v95, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v1253);
        }
        uint64_t v97 = *(int *)(v83 + 116);
        long long v98 = (char *)v81 + v97;
        long long v99 = &v82[v97];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v97], 1, v1253))
        {
          uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v98, v99, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v1253);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
        uint64_t v30 = v85;
      }
      long long v101 = v1255;
      uint64_t v102 = v1255[7];
      long long v103 = (_OWORD *)(v30 + v102);
      long long v104 = &__src[v102];
      long long v105 = (int *)type metadata accessor for TicketedShow(0);
      uint64_t v1250 = v30;
      if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, (uint64_t)v105))
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
        memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        long long v107 = *((_OWORD *)v104 + 1);
        *long long v103 = *(_OWORD *)v104;
        v103[1] = v107;
        long long v108 = *((_OWORD *)v104 + 3);
        v103[2] = *((_OWORD *)v104 + 2);
        v103[3] = v108;
        long long v109 = *((_OWORD *)v104 + 5);
        v103[4] = *((_OWORD *)v104 + 4);
        v103[5] = v109;
        long long v110 = *((_OWORD *)v104 + 7);
        v103[6] = *((_OWORD *)v104 + 6);
        v103[7] = v110;
        *((unsigned char *)v103 + 128) = v104[128];
        *(_WORD *)((char *)v103 + 129) = *(_WORD *)(v104 + 129);
        *((void *)v103 + 17) = *((void *)v104 + 17);
        long long v111 = *((_OWORD *)v104 + 10);
        v103[9] = *((_OWORD *)v104 + 9);
        v103[10] = v111;
        long long v112 = *((_OWORD *)v104 + 12);
        v103[11] = *((_OWORD *)v104 + 11);
        v103[12] = v112;
        long long v113 = *((_OWORD *)v104 + 14);
        v103[13] = *((_OWORD *)v104 + 13);
        v103[14] = v113;
        *((void *)v103 + 30) = *((void *)v104 + 30);
        *(_OWORD *)((char *)v103 + 248) = *(_OWORD *)(v104 + 248);
        *(_OWORD *)((char *)v103 + 264) = *(_OWORD *)(v104 + 264);
        *((unsigned char *)v103 + 296) = v104[296];
        uint64_t v114 = *((void *)v104 + 36);
        *((void *)v103 + 35) = *((void *)v104 + 35);
        *((void *)v103 + 36) = v114;
        v103[19] = *((_OWORD *)v104 + 19);
        uint64_t v115 = v105[29];
        uint64_t v116 = (char *)v103 + v115;
        uint64_t v117 = &v104[v115];
        uint64_t v118 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
        {
          uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
        }
        *(_OWORD *)((char *)v103 + v105[30]) = *(_OWORD *)&v104[v105[30]];
        uint64_t v120 = v105[31];
        long long v121 = (char *)v103 + v120;
        long long v122 = &v104[v120];
        long long v101 = v1255;
        if (__swift_getEnumTagSinglePayload((uint64_t)&v104[v120], 1, v1253))
        {
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v121, v122, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v1253);
        }
        uint64_t v124 = v105[32];
        long long v125 = (char *)v103 + v124;
        uint64_t v126 = &v104[v124];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v104[v124], 1, v1253))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v125, v126, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v1253);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, (uint64_t)v105);
        uint64_t v30 = v1250;
      }
      uint64_t v128 = v101[8];
      uint64_t v129 = (_OWORD *)(v30 + v128);
      uint64_t v130 = &__src[v128];
      uint64_t v131 = type metadata accessor for Appointment(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v131))
      {
        uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
        memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
        uint64_t v133 = v30;
        long long v134 = *((_OWORD *)v130 + 1);
        *uint64_t v129 = *(_OWORD *)v130;
        v129[1] = v134;
        long long v135 = *((_OWORD *)v130 + 3);
        v129[2] = *((_OWORD *)v130 + 2);
        v129[3] = v135;
        long long v136 = *((_OWORD *)v130 + 5);
        v129[4] = *((_OWORD *)v130 + 4);
        v129[5] = v136;
        long long v137 = *((_OWORD *)v130 + 7);
        v129[6] = *((_OWORD *)v130 + 6);
        v129[7] = v137;
        *((unsigned char *)v129 + 128) = v130[128];
        *(_WORD *)((char *)v129 + 129) = *(_WORD *)(v130 + 129);
        *((void *)v129 + 17) = *((void *)v130 + 17);
        long long v138 = *((_OWORD *)v130 + 10);
        v129[9] = *((_OWORD *)v130 + 9);
        v129[10] = v138;
        long long v139 = *((_OWORD *)v130 + 12);
        v129[11] = *((_OWORD *)v130 + 11);
        v129[12] = v139;
        long long v140 = *((_OWORD *)v130 + 14);
        v129[13] = *((_OWORD *)v130 + 13);
        v129[14] = v140;
        long long v141 = *((_OWORD *)v130 + 16);
        v129[15] = *((_OWORD *)v130 + 15);
        v129[16] = v141;
        *((unsigned char *)v129 + 280) = v130[280];
        *((void *)v129 + 34) = *((void *)v130 + 34);
        v129[18] = *((_OWORD *)v130 + 18);
        uint64_t v142 = *(int *)(v131 + 108);
        uint64_t v143 = (char *)v129 + v142;
        long long v144 = &v130[v142];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v130[v142], 1, v1253))
        {
          uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v143, v144, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v1253);
        }
        uint64_t v146 = *(int *)(v131 + 112);
        long long v147 = (char *)v129 + v146;
        long long v148 = &v130[v146];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v130[v146], 1, v1253))
        {
          uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v147, v148, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, v1253);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v131);
        uint64_t v30 = v133;
      }
      uint64_t v150 = v1255;
      uint64_t v151 = v1255[9];
      uint64_t v152 = (_OWORD *)(v30 + v151);
      uint64_t v153 = &__src[v151];
      uint64_t v154 = (int *)type metadata accessor for Party(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v153, 1, (uint64_t)v154))
      {
        uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
        memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        long long v156 = *((_OWORD *)v153 + 1);
        *uint64_t v152 = *(_OWORD *)v153;
        v152[1] = v156;
        long long v157 = *((_OWORD *)v153 + 3);
        v152[2] = *((_OWORD *)v153 + 2);
        v152[3] = v157;
        long long v158 = *((_OWORD *)v153 + 5);
        v152[4] = *((_OWORD *)v153 + 4);
        v152[5] = v158;
        long long v159 = *((_OWORD *)v153 + 7);
        v152[6] = *((_OWORD *)v153 + 6);
        v152[7] = v159;
        *((unsigned char *)v152 + 128) = v153[128];
        *(_WORD *)((char *)v152 + 129) = *(_WORD *)(v153 + 129);
        *((void *)v152 + 17) = *((void *)v153 + 17);
        long long v160 = *((_OWORD *)v153 + 10);
        v152[9] = *((_OWORD *)v153 + 9);
        v152[10] = v160;
        long long v161 = *((_OWORD *)v153 + 12);
        v152[11] = *((_OWORD *)v153 + 11);
        v152[12] = v161;
        long long v162 = *((_OWORD *)v153 + 14);
        v152[13] = *((_OWORD *)v153 + 13);
        v152[14] = v162;
        v152[15] = *((_OWORD *)v153 + 15);
        uint64_t v163 = v154[24];
        uint64_t v164 = (char *)v152 + v163;
        uint64_t v165 = &v153[v163];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v153[v163], 1, v1253))
        {
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v164, v165, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v1253);
        }
        uint64_t v167 = v154[25];
        uint64_t v168 = (char *)v152 + v167;
        uint64_t v169 = &v153[v167];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v153[v167], 1, v1253))
        {
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v168, v169, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v1253);
        }
        uint64_t v171 = v154[26];
        long long v172 = (char *)v152 + v171;
        long long v173 = &v153[v171];
        uint64_t v174 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v173, 1, v174))
        {
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v172, v173, *(void *)(*(void *)(v175 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
          __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v174);
        }
        uint64_t v150 = v1255;
        __swift_storeEnumTagSinglePayload((uint64_t)v152, 0, 1, (uint64_t)v154);
        uint64_t v30 = v1250;
      }
      uint64_t v176 = v150[10];
      uint64_t v177 = (_OWORD *)(v30 + v176);
      uint64_t v178 = &__src[v176];
      uint64_t v179 = (int *)type metadata accessor for Trip(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v178, 1, (uint64_t)v179))
      {
        uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
        memcpy(v177, v178, *(void *)(*(void *)(v180 - 8) + 64));
      }
      else
      {
        long long v181 = *((_OWORD *)v178 + 1);
        _OWORD *v177 = *(_OWORD *)v178;
        v177[1] = v181;
        long long v182 = *((_OWORD *)v178 + 3);
        v177[2] = *((_OWORD *)v178 + 2);
        v177[3] = v182;
        long long v183 = *((_OWORD *)v178 + 5);
        v177[4] = *((_OWORD *)v178 + 4);
        v177[5] = v183;
        long long v184 = *((_OWORD *)v178 + 7);
        v177[6] = *((_OWORD *)v178 + 6);
        v177[7] = v184;
        *((unsigned char *)v177 + 128) = v178[128];
        *(_WORD *)((char *)v177 + 129) = *(_WORD *)(v178 + 129);
        *((void *)v177 + 17) = *((void *)v178 + 17);
        long long v185 = *((_OWORD *)v178 + 10);
        v177[9] = *((_OWORD *)v178 + 9);
        v177[10] = v185;
        long long v186 = *((_OWORD *)v178 + 12);
        v177[11] = *((_OWORD *)v178 + 11);
        v177[12] = v186;
        v177[13] = *((_OWORD *)v178 + 13);
        uint64_t v187 = v179[22];
        uint64_t v188 = (char *)v177 + v187;
        uint64_t v189 = &v178[v187];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v178[v187], 1, v1253))
        {
          uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v188, v189, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v1253);
        }
        uint64_t v191 = v179[23];
        uint64_t v192 = (char *)v177 + v191;
        uint64_t v193 = &v178[v191];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v178[v191], 1, v1253))
        {
          uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v192, v193, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v192, 0, 1, v1253);
        }
        uint64_t v195 = v179[24];
        uint64_t v196 = (char *)v177 + v195;
        uint64_t v197 = &v178[v195];
        *(void *)uint64_t v196 = *(void *)v197;
        v196[8] = v197[8];
        uint64_t v198 = v179[25];
        uint64_t v199 = (char *)v177 + v198;
        uint64_t v200 = &v178[v198];
        uint64_t v201 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v201))
        {
          uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
          __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v201);
        }
        uint64_t v150 = v1255;
        __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, (uint64_t)v179);
        uint64_t v30 = v1250;
      }
      uint64_t v203 = v150[11];
      long long v204 = (_OWORD *)(v30 + v203);
      long long v205 = &__src[v203];
      uint64_t v206 = (int *)type metadata accessor for FlightReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v205, 1, (uint64_t)v206))
      {
        uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        memcpy(v204, v205, *(void *)(*(void *)(v207 - 8) + 64));
      }
      else
      {
        long long v208 = *((_OWORD *)v205 + 1);
        _OWORD *v204 = *(_OWORD *)v205;
        v204[1] = v208;
        long long v209 = *((_OWORD *)v205 + 3);
        v204[2] = *((_OWORD *)v205 + 2);
        v204[3] = v209;
        long long v210 = *((_OWORD *)v205 + 5);
        v204[4] = *((_OWORD *)v205 + 4);
        v204[5] = v210;
        *((unsigned char *)v204 + 96) = v205[96];
        *(_OWORD *)((char *)v204 + 104) = *(_OWORD *)(v205 + 104);
        uint64_t v211 = v206[13];
        v212 = (char *)v204 + v211;
        uint64_t v213 = &v205[v211];
        uint64_t v214 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v213, 1, v214))
        {
          uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
          __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v214);
        }
        uint64_t v216 = v206[14];
        uint64_t v217 = (char *)v204 + v216;
        uint64_t v218 = &v205[v216];
        v1249 = a3;
        if (__swift_getEnumTagSinglePayload((uint64_t)&v205[v216], 1, v214))
        {
          uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v217, v218, v214);
          __swift_storeEnumTagSinglePayload((uint64_t)v217, 0, 1, v214);
        }
        *(_OWORD *)((char *)v204 + v206[15]) = *(_OWORD *)&v205[v206[15]];
        *(_OWORD *)((char *)v204 + v206[16]) = *(_OWORD *)&v205[v206[16]];
        *(_OWORD *)((char *)v204 + v206[17]) = *(_OWORD *)&v205[v206[17]];
        uint64_t v220 = v206[18];
        uint64_t v221 = (char *)v204 + v220;
        uint64_t v222 = &v205[v220];
        uint64_t v223 = type metadata accessor for DateComponents();
        uint64_t v224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32);
        v224(v221, v222, v223);
        v224((char *)v204 + v206[19], &v205[v206[19]], v223);
        *(_OWORD *)((char *)v204 + v206[20]) = *(_OWORD *)&v205[v206[20]];
        *(_OWORD *)((char *)v204 + v206[21]) = *(_OWORD *)&v205[v206[21]];
        *(_OWORD *)((char *)v204 + v206[22]) = *(_OWORD *)&v205[v206[22]];
        *(_OWORD *)((char *)v204 + v206[23]) = *(_OWORD *)&v205[v206[23]];
        *(_OWORD *)((char *)v204 + v206[24]) = *(_OWORD *)&v205[v206[24]];
        *(_OWORD *)((char *)v204 + v206[25]) = *(_OWORD *)&v205[v206[25]];
        *(_OWORD *)((char *)v204 + v206[26]) = *(_OWORD *)&v205[v206[26]];
        *(_OWORD *)((char *)v204 + v206[27]) = *(_OWORD *)&v205[v206[27]];
        *(_OWORD *)((char *)v204 + v206[28]) = *(_OWORD *)&v205[v206[28]];
        *(_OWORD *)((char *)v204 + v206[29]) = *(_OWORD *)&v205[v206[29]];
        *(_OWORD *)((char *)v204 + v206[30]) = *(_OWORD *)&v205[v206[30]];
        *(_OWORD *)((char *)v204 + v206[31]) = *(_OWORD *)&v205[v206[31]];
        *(_OWORD *)((char *)v204 + v206[32]) = *(_OWORD *)&v205[v206[32]];
        *(void *)((char *)v204 + v206[33]) = *(void *)&v205[v206[33]];
        *(void *)((char *)v204 + v206[34]) = *(void *)&v205[v206[34]];
        *(_OWORD *)((char *)v204 + v206[35]) = *(_OWORD *)&v205[v206[35]];
        *(_OWORD *)((char *)v204 + v206[36]) = *(_OWORD *)&v205[v206[36]];
        *(_OWORD *)((char *)v204 + v206[37]) = *(_OWORD *)&v205[v206[37]];
        uint64_t v225 = v206[38];
        uint64_t v226 = (char *)v204 + v225;
        uint64_t v227 = &v205[v225];
        uint64_t v23 = v1253;
        if (__swift_getEnumTagSinglePayload((uint64_t)&v205[v225], 1, v1253))
        {
          uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v226, v227, v1253);
          __swift_storeEnumTagSinglePayload((uint64_t)v226, 0, 1, v1253);
        }
        a3 = v1249;
        uint64_t v150 = v1255;
        *(_OWORD *)((char *)v204 + v206[39]) = *(_OWORD *)&v205[v206[39]];
        *(_OWORD *)((char *)v204 + v206[40]) = *(_OWORD *)&v205[v206[40]];
        uint64_t v229 = v206[41];
        long long v230 = (char *)v204 + v229;
        long long v231 = &v205[v229];
        *(void *)long long v230 = *(void *)v231;
        v230[8] = v231[8];
        *(_OWORD *)((char *)v204 + v206[42]) = *(_OWORD *)&v205[v206[42]];
        uint64_t v232 = v206[43];
        long long v233 = (char *)v204 + v232;
        uint64_t v234 = &v205[v232];
        *(_OWORD *)long long v233 = *(_OWORD *)v234;
        *(void *)(v233 + 13) = *(void *)(v234 + 13);
        *(_OWORD *)((char *)v204 + v206[44]) = *(_OWORD *)&v205[v206[44]];
        *(_OWORD *)((char *)v204 + v206[45]) = *(_OWORD *)&v205[v206[45]];
        *(_OWORD *)((char *)v204 + v206[46]) = *(_OWORD *)&v205[v206[46]];
        *(_OWORD *)((char *)v204 + v206[47]) = *(_OWORD *)&v205[v206[47]];
        __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, (uint64_t)v206);
        uint64_t v30 = v1250;
      }
      uint64_t v235 = v150[12];
      uint64_t v236 = (_OWORD *)(v30 + v235);
      uint64_t v237 = &__src[v235];
      v238 = (int *)type metadata accessor for HotelReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v238))
      {
        uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
        memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
      }
      else
      {
        long long v240 = *((_OWORD *)v237 + 1);
        *uint64_t v236 = *(_OWORD *)v237;
        v236[1] = v240;
        long long v241 = *((_OWORD *)v237 + 3);
        v236[2] = *((_OWORD *)v237 + 2);
        v236[3] = v241;
        long long v242 = *((_OWORD *)v237 + 5);
        v236[4] = *((_OWORD *)v237 + 4);
        v236[5] = v242;
        *((unsigned char *)v236 + 96) = v237[96];
        *(_OWORD *)((char *)v236 + 104) = *(_OWORD *)(v237 + 104);
        *(_OWORD *)((char *)v236 + 120) = *(_OWORD *)(v237 + 120);
        uint64_t v243 = v238[14];
        long long v244 = (char *)v236 + v243;
        uint64_t v245 = &v237[v243];
        uint64_t v246 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, v246))
        {
          uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 32))(v244, v245, v246);
          __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v246);
        }
        uint64_t v248 = v238[15];
        uint64_t v249 = (char *)v236 + v248;
        uint64_t v250 = &v237[v248];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v237[v248], 1, v246))
        {
          uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v249, v250, *(void *)(*(void *)(v251 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 32))(v249, v250, v246);
          __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, v246);
        }
        uint64_t v150 = v1255;
        *(_OWORD *)((char *)v236 + v238[16]) = *(_OWORD *)&v237[v238[16]];
        *(_OWORD *)((char *)v236 + v238[17]) = *(_OWORD *)&v237[v238[17]];
        *(_OWORD *)((char *)v236 + v238[18]) = *(_OWORD *)&v237[v238[18]];
        *(_OWORD *)((char *)v236 + v238[19]) = *(_OWORD *)&v237[v238[19]];
        *(_OWORD *)((char *)v236 + v238[20]) = *(_OWORD *)&v237[v238[20]];
        *(void *)((char *)v236 + v238[21]) = *(void *)&v237[v238[21]];
        *(void *)((char *)v236 + v238[22]) = *(void *)&v237[v238[22]];
        uint64_t v252 = v238[23];
        uint64_t v253 = (char *)v236 + v252;
        uint64_t v254 = &v237[v252];
        v253[8] = v254[8];
        *(void *)uint64_t v253 = *(void *)v254;
        uint64_t v255 = v238[24];
        uint64_t v256 = (char *)v236 + v255;
        uint64_t v257 = &v237[v255];
        v256[8] = v257[8];
        *(void *)uint64_t v256 = *(void *)v257;
        *(_OWORD *)((char *)v236 + v238[25]) = *(_OWORD *)&v237[v238[25]];
        *(_OWORD *)((char *)v236 + v238[26]) = *(_OWORD *)&v237[v238[26]];
        *(_OWORD *)((char *)v236 + v238[27]) = *(_OWORD *)&v237[v238[27]];
        *(_OWORD *)((char *)v236 + v238[28]) = *(_OWORD *)&v237[v238[28]];
        uint64_t v258 = v238[29];
        uint64_t v259 = (char *)v236 + v258;
        uint64_t v260 = &v237[v258];
        *(void *)uint64_t v259 = *(void *)v260;
        v259[8] = v260[8];
        __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, (uint64_t)v238);
        uint64_t v30 = v1250;
      }
      uint64_t v261 = v150[13];
      long long v262 = (_OWORD *)(v30 + v261);
      long long v263 = &__src[v261];
      long long v264 = (int *)type metadata accessor for RestaurantReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v263, 1, (uint64_t)v264))
      {
        uint64_t v265 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
        memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
      }
      else
      {
        uint64_t v266 = v30;
        long long v267 = *((_OWORD *)v263 + 1);
        *long long v262 = *(_OWORD *)v263;
        v262[1] = v267;
        long long v268 = *((_OWORD *)v263 + 3);
        v262[2] = *((_OWORD *)v263 + 2);
        v262[3] = v268;
        long long v269 = *((_OWORD *)v263 + 5);
        v262[4] = *((_OWORD *)v263 + 4);
        v262[5] = v269;
        *((unsigned char *)v262 + 96) = v263[96];
        *(_OWORD *)((char *)v262 + 104) = *(_OWORD *)(v263 + 104);
        *(_OWORD *)((char *)v262 + 120) = *(_OWORD *)(v263 + 120);
        uint64_t v270 = v264[14];
        uint64_t v271 = (char *)v262 + v270;
        uint64_t v272 = &v263[v270];
        uint64_t v273 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v272, 1, v273))
        {
          uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v271, v272, *(void *)(*(void *)(v274 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 32))(v271, v272, v273);
          __swift_storeEnumTagSinglePayload((uint64_t)v271, 0, 1, v273);
        }
        *(_OWORD *)((char *)v262 + v264[15]) = *(_OWORD *)&v263[v264[15]];
        *(_OWORD *)((char *)v262 + v264[16]) = *(_OWORD *)&v263[v264[16]];
        *(_OWORD *)((char *)v262 + v264[17]) = *(_OWORD *)&v263[v264[17]];
        *(_OWORD *)((char *)v262 + v264[18]) = *(_OWORD *)&v263[v264[18]];
        *(_OWORD *)((char *)v262 + v264[19]) = *(_OWORD *)&v263[v264[19]];
        *(void *)((char *)v262 + v264[20]) = *(void *)&v263[v264[20]];
        *(_OWORD *)((char *)v262 + v264[21]) = *(_OWORD *)&v263[v264[21]];
        *(_OWORD *)((char *)v262 + v264[22]) = *(_OWORD *)&v263[v264[22]];
        *(_OWORD *)((char *)v262 + v264[23]) = *(_OWORD *)&v263[v264[23]];
        __swift_storeEnumTagSinglePayload((uint64_t)v262, 0, 1, (uint64_t)v264);
        uint64_t v30 = v266;
        uint64_t v23 = v1253;
      }
      uint64_t v275 = (uint64_t)v1255;
      uint64_t v276 = v30;
      goto LABEL_110;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    outlined destroy of EmailDocument(v30, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
LABEL_12:
    size_t v41 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?)
                                - 8)
                    + 64);
    uint64_t v42 = (void *)v30;
    uint64_t v43 = (const void *)v31;
LABEL_13:
    memcpy(v42, v43, v41);
    goto LABEL_111;
  }
  uint64_t v44 = *(void *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = v32[5];
  uint64_t v46 = v30 + v45;
  uint64_t v47 = (uint64_t)&__src[v45];
  uint64_t v48 = type metadata accessor for RentalCarReservation(0);
  int v49 = __swift_getEnumTagSinglePayload(v46, 1, v48);
  int v50 = __swift_getEnumTagSinglePayload(v47, 1, v48);
  if (v49)
  {
    if (!v50)
    {
      uint64_t v51 = v30;
      long long v52 = *(_OWORD *)(v47 + 16);
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      *(_OWORD *)(v46 + 16) = v52;
      long long v53 = *(_OWORD *)(v47 + 48);
      *(_OWORD *)(v46 + 32) = *(_OWORD *)(v47 + 32);
      *(_OWORD *)(v46 + 48) = v53;
      long long v54 = *(_OWORD *)(v47 + 80);
      *(_OWORD *)(v46 + 64) = *(_OWORD *)(v47 + 64);
      *(_OWORD *)(v46 + 80) = v54;
      long long v55 = *(_OWORD *)(v47 + 112);
      *(_OWORD *)(v46 + 96) = *(_OWORD *)(v47 + 96);
      *(_OWORD *)(v46 + 112) = v55;
      *(unsigned char *)(v46 + 128) = *(unsigned char *)(v47 + 128);
      *(_WORD *)(v46 + 129) = *(_WORD *)(v47 + 129);
      *(void *)(v46 + 136) = *(void *)(v47 + 136);
      long long v56 = *(_OWORD *)(v47 + 160);
      *(_OWORD *)(v46 + 144) = *(_OWORD *)(v47 + 144);
      *(_OWORD *)(v46 + 160) = v56;
      long long v57 = *(_OWORD *)(v47 + 192);
      *(_OWORD *)(v46 + 176) = *(_OWORD *)(v47 + 176);
      *(_OWORD *)(v46 + 192) = v57;
      long long v58 = *(_OWORD *)(v47 + 224);
      *(_OWORD *)(v46 + 208) = *(_OWORD *)(v47 + 208);
      *(_OWORD *)(v46 + 224) = v58;
      *(_OWORD *)(v46 + 240) = *(_OWORD *)(v47 + 240);
      *(void *)(v46 + 256) = *(void *)(v47 + 256);
      *(_OWORD *)(v46 + 264) = *(_OWORD *)(v47 + 264);
      *(_OWORD *)(v46 + 280) = *(_OWORD *)(v47 + 280);
      *(_OWORD *)(v46 + 296) = *(_OWORD *)(v47 + 296);
      *(_OWORD *)(v46 + 312) = *(_OWORD *)(v47 + 312);
      *(_OWORD *)(v46 + 328) = *(_OWORD *)(v47 + 328);
      *(_OWORD *)(v46 + 344) = *(_OWORD *)(v47 + 344);
      *(_OWORD *)(v46 + 360) = *(_OWORD *)(v47 + 360);
      *(unsigned char *)(v46 + 384) = *(unsigned char *)(v47 + 384);
      *(void *)(v46 + 376) = *(void *)(v47 + 376);
      *(_OWORD *)(v46 + 392) = *(_OWORD *)(v47 + 392);
      *(_OWORD *)(v46 + 408) = *(_OWORD *)(v47 + 408);
      uint64_t v59 = *(int *)(v48 + 140);
      uint64_t v60 = (void *)(v46 + v59);
      uint64_t v61 = (const void *)(v47 + v59);
      if (__swift_getEnumTagSinglePayload(v47 + v59, 1, v1253))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v60, v61, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v1253);
      }
      uint64_t v553 = *(int *)(v48 + 144);
      uint64_t v554 = (void *)(v46 + v553);
      uint64_t v555 = (const void *)(v47 + v553);
      if (__swift_getEnumTagSinglePayload(v47 + v553, 1, v1253))
      {
        uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v554, v555, *(void *)(*(void *)(v556 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v554, v555, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v554, 0, 1, v1253);
      }
      __swift_storeEnumTagSinglePayload(v46, 0, 1, v48);
      uint64_t v30 = v51;
      goto LABEL_237;
    }
LABEL_22:
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
    memcpy((void *)v46, (const void *)v47, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_238;
  }
  if (v50)
  {
    outlined destroy of EmailDocument(v46, (void (*)(void))type metadata accessor for RentalCarReservation);
    goto LABEL_22;
  }
  uint64_t v483 = *(void *)(v47 + 8);
  *(void *)uint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = v483;
  swift_bridgeObjectRelease();
  uint64_t v484 = *(void *)(v47 + 24);
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = v484;
  swift_bridgeObjectRelease();
  uint64_t v485 = *(void *)(v47 + 40);
  *(void *)(v46 + 32) = *(void *)(v47 + 32);
  *(void *)(v46 + 40) = v485;
  swift_bridgeObjectRelease();
  uint64_t v486 = *(void *)(v47 + 56);
  *(void *)(v46 + 48) = *(void *)(v47 + 48);
  *(void *)(v46 + 56) = v486;
  swift_bridgeObjectRelease();
  uint64_t v487 = *(void *)(v47 + 72);
  *(void *)(v46 + 64) = *(void *)(v47 + 64);
  *(void *)(v46 + 72) = v487;
  swift_bridgeObjectRelease();
  uint64_t v488 = *(void *)(v47 + 88);
  *(void *)(v46 + 80) = *(void *)(v47 + 80);
  *(void *)(v46 + 88) = v488;
  swift_bridgeObjectRelease();
  uint64_t v489 = *(void *)(v47 + 104);
  *(void *)(v46 + 96) = *(void *)(v47 + 96);
  *(void *)(v46 + 104) = v489;
  swift_bridgeObjectRelease();
  uint64_t v490 = *(void *)(v47 + 120);
  *(void *)(v46 + 112) = *(void *)(v47 + 112);
  *(void *)(v46 + 120) = v490;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 128) = *(unsigned char *)(v47 + 128);
  *(unsigned char *)(v46 + 129) = *(unsigned char *)(v47 + 129);
  *(unsigned char *)(v46 + 130) = *(unsigned char *)(v47 + 130);
  *(void *)(v46 + 136) = *(void *)(v47 + 136);
  swift_bridgeObjectRelease();
  uint64_t v491 = *(void *)(v47 + 152);
  *(void *)(v46 + 144) = *(void *)(v47 + 144);
  *(void *)(v46 + 152) = v491;
  swift_bridgeObjectRelease();
  uint64_t v492 = *(void *)(v47 + 168);
  *(void *)(v46 + 160) = *(void *)(v47 + 160);
  *(void *)(v46 + 168) = v492;
  swift_bridgeObjectRelease();
  uint64_t v493 = *(void *)(v47 + 184);
  *(void *)(v46 + 176) = *(void *)(v47 + 176);
  *(void *)(v46 + 184) = v493;
  swift_bridgeObjectRelease();
  *(void *)(v46 + 192) = *(void *)(v47 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v46 + 200) = *(void *)(v47 + 200);
  swift_bridgeObjectRelease();
  uint64_t v494 = *(void *)(v47 + 216);
  *(void *)(v46 + 208) = *(void *)(v47 + 208);
  *(void *)(v46 + 216) = v494;
  swift_bridgeObjectRelease();
  uint64_t v495 = *(void *)(v47 + 232);
  *(void *)(v46 + 224) = *(void *)(v47 + 224);
  *(void *)(v46 + 232) = v495;
  swift_bridgeObjectRelease();
  uint64_t v496 = *(void *)(v47 + 248);
  *(void *)(v46 + 240) = *(void *)(v47 + 240);
  *(void *)(v46 + 248) = v496;
  swift_bridgeObjectRelease();
  *(void *)(v46 + 256) = *(void *)(v47 + 256);
  swift_bridgeObjectRelease();
  uint64_t v497 = *(void *)(v47 + 272);
  *(void *)(v46 + 264) = *(void *)(v47 + 264);
  *(void *)(v46 + 272) = v497;
  swift_bridgeObjectRelease();
  uint64_t v498 = *(void *)(v47 + 288);
  *(void *)(v46 + 280) = *(void *)(v47 + 280);
  *(void *)(v46 + 288) = v498;
  swift_bridgeObjectRelease();
  uint64_t v499 = *(void *)(v47 + 304);
  *(void *)(v46 + 296) = *(void *)(v47 + 296);
  *(void *)(v46 + 304) = v499;
  swift_bridgeObjectRelease();
  uint64_t v500 = *(void *)(v47 + 320);
  *(void *)(v46 + 312) = *(void *)(v47 + 312);
  *(void *)(v46 + 320) = v500;
  swift_bridgeObjectRelease();
  uint64_t v501 = *(void *)(v47 + 336);
  *(void *)(v46 + 328) = *(void *)(v47 + 328);
  *(void *)(v46 + 336) = v501;
  swift_bridgeObjectRelease();
  uint64_t v502 = *(void *)(v47 + 352);
  *(void *)(v46 + 344) = *(void *)(v47 + 344);
  *(void *)(v46 + 352) = v502;
  swift_bridgeObjectRelease();
  uint64_t v503 = *(void *)(v47 + 368);
  *(void *)(v46 + 360) = *(void *)(v47 + 360);
  *(void *)(v46 + 368) = v503;
  swift_bridgeObjectRelease();
  *(void *)(v46 + 376) = *(void *)(v47 + 376);
  *(unsigned char *)(v46 + 384) = *(unsigned char *)(v47 + 384);
  uint64_t v504 = *(void *)(v47 + 400);
  *(void *)(v46 + 392) = *(void *)(v47 + 392);
  *(void *)(v46 + 400) = v504;
  swift_bridgeObjectRelease();
  uint64_t v505 = *(void *)(v47 + 416);
  *(void *)(v46 + 408) = *(void *)(v47 + 408);
  *(void *)(v46 + 416) = v505;
  swift_bridgeObjectRelease();
  uint64_t v506 = *(int *)(v48 + 140);
  uint64_t v507 = (const void *)(v47 + v506);
  v1233 = (void *)(v46 + v506);
  int v508 = __swift_getEnumTagSinglePayload(v46 + v506, 1, v1253);
  int v509 = __swift_getEnumTagSinglePayload((uint64_t)v507, 1, v1253);
  if (v508)
  {
    if (v509)
    {
      size_t v510 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v511 = v1233;
LABEL_228:
      memcpy(v511, v507, v510);
      goto LABEL_231;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1233, v507, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1233, 0, 1, v1253);
  }
  else
  {
    if (v509)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1233, v1253);
      size_t v510 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v511 = v1233;
      goto LABEL_228;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1233, v507, v1253);
  }
LABEL_231:
  uint64_t v557 = *(int *)(v48 + 144);
  uint64_t v558 = (void *)(v46 + v557);
  uint64_t v559 = (const void *)(v47 + v557);
  int v560 = __swift_getEnumTagSinglePayload((uint64_t)v558, 1, v1253);
  int v561 = __swift_getEnumTagSinglePayload((uint64_t)v559, 1, v1253);
  if (!v560)
  {
    if (!v561)
    {
      ((void (*)(void *, const void *, uint64_t))v1252)(v558, v559, v1253);
      goto LABEL_237;
    }
    (*(void (**)(void *, uint64_t))(v1254 + 8))(v558, v1253);
    goto LABEL_236;
  }
  if (v561)
  {
LABEL_236:
    uint64_t v562 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v558, v559, *(void *)(*(void *)(v562 - 8) + 64));
    goto LABEL_237;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v558, v559, v1253);
  __swift_storeEnumTagSinglePayload((uint64_t)v558, 0, 1, v1253);
LABEL_237:
  long long v32 = v1255;
LABEL_238:
  uint64_t v563 = v32[6];
  uint64_t v564 = v30 + v563;
  uint64_t v565 = (uint64_t)&__src[v563];
  uint64_t v566 = type metadata accessor for TicketedTransportation(0);
  int v567 = __swift_getEnumTagSinglePayload(v564, 1, v566);
  int v568 = __swift_getEnumTagSinglePayload(v565, 1, v566);
  if (v567)
  {
    if (!v568)
    {
      uint64_t v569 = v30;
      long long v570 = *(_OWORD *)(v565 + 16);
      *(_OWORD *)uint64_t v564 = *(_OWORD *)v565;
      *(_OWORD *)(v564 + 16) = v570;
      long long v571 = *(_OWORD *)(v565 + 48);
      *(_OWORD *)(v564 + 32) = *(_OWORD *)(v565 + 32);
      *(_OWORD *)(v564 + 48) = v571;
      long long v572 = *(_OWORD *)(v565 + 80);
      *(_OWORD *)(v564 + 64) = *(_OWORD *)(v565 + 64);
      *(_OWORD *)(v564 + 80) = v572;
      long long v573 = *(_OWORD *)(v565 + 112);
      *(_OWORD *)(v564 + 96) = *(_OWORD *)(v565 + 96);
      *(_OWORD *)(v564 + 112) = v573;
      *(unsigned char *)(v564 + 128) = *(unsigned char *)(v565 + 128);
      *(_WORD *)(v564 + 129) = *(_WORD *)(v565 + 129);
      *(void *)(v564 + 136) = *(void *)(v565 + 136);
      long long v574 = *(_OWORD *)(v565 + 160);
      *(_OWORD *)(v564 + 144) = *(_OWORD *)(v565 + 144);
      *(_OWORD *)(v564 + 160) = v574;
      long long v575 = *(_OWORD *)(v565 + 192);
      *(_OWORD *)(v564 + 176) = *(_OWORD *)(v565 + 176);
      *(_OWORD *)(v564 + 192) = v575;
      *(void *)(v564 + 208) = *(void *)(v565 + 208);
      *(_OWORD *)(v564 + 216) = *(_OWORD *)(v565 + 216);
      *(_OWORD *)(v564 + 232) = *(_OWORD *)(v565 + 232);
      *(_OWORD *)(v564 + 248) = *(_OWORD *)(v565 + 248);
      *(_OWORD *)(v564 + 264) = *(_OWORD *)(v565 + 264);
      *(unsigned char *)(v564 + 296) = *(unsigned char *)(v565 + 296);
      uint64_t v576 = *(void *)(v565 + 288);
      *(void *)(v564 + 280) = *(void *)(v565 + 280);
      *(void *)(v564 + 288) = v576;
      uint64_t v577 = *(int *)(v566 + 112);
      uint64_t v578 = (void *)(v564 + v577);
      v579 = (const void *)(v565 + v577);
      if (__swift_getEnumTagSinglePayload(v565 + v577, 1, v1253))
      {
        uint64_t v580 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v578, v579, *(void *)(*(void *)(v580 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v578, v579, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, v1253);
      }
      uint64_t v603 = *(int *)(v566 + 116);
      uint64_t v604 = (void *)(v564 + v603);
      uint64_t v605 = (const void *)(v565 + v603);
      if (__swift_getEnumTagSinglePayload(v565 + v603, 1, v1253))
      {
        uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v604, v605, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v1253);
      }
      __swift_storeEnumTagSinglePayload(v564, 0, 1, v566);
      uint64_t v30 = v569;
      goto LABEL_265;
    }
LABEL_244:
    uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
    memcpy((void *)v564, (const void *)v565, *(void *)(*(void *)(v581 - 8) + 64));
    goto LABEL_266;
  }
  if (v568)
  {
    outlined destroy of EmailDocument(v564, (void (*)(void))type metadata accessor for TicketedTransportation);
    goto LABEL_244;
  }
  uint64_t v582 = *(void *)(v565 + 8);
  *(void *)uint64_t v564 = *(void *)v565;
  *(void *)(v564 + 8) = v582;
  swift_bridgeObjectRelease();
  uint64_t v583 = *(void *)(v565 + 24);
  *(void *)(v564 + 16) = *(void *)(v565 + 16);
  *(void *)(v564 + 24) = v583;
  swift_bridgeObjectRelease();
  uint64_t v584 = *(void *)(v565 + 40);
  *(void *)(v564 + 32) = *(void *)(v565 + 32);
  *(void *)(v564 + 40) = v584;
  swift_bridgeObjectRelease();
  uint64_t v585 = *(void *)(v565 + 56);
  *(void *)(v564 + 48) = *(void *)(v565 + 48);
  *(void *)(v564 + 56) = v585;
  swift_bridgeObjectRelease();
  uint64_t v586 = *(void *)(v565 + 72);
  *(void *)(v564 + 64) = *(void *)(v565 + 64);
  *(void *)(v564 + 72) = v586;
  swift_bridgeObjectRelease();
  uint64_t v587 = *(void *)(v565 + 88);
  *(void *)(v564 + 80) = *(void *)(v565 + 80);
  *(void *)(v564 + 88) = v587;
  swift_bridgeObjectRelease();
  uint64_t v588 = *(void *)(v565 + 104);
  *(void *)(v564 + 96) = *(void *)(v565 + 96);
  *(void *)(v564 + 104) = v588;
  swift_bridgeObjectRelease();
  uint64_t v589 = *(void *)(v565 + 120);
  *(void *)(v564 + 112) = *(void *)(v565 + 112);
  *(void *)(v564 + 120) = v589;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v564 + 128) = *(unsigned char *)(v565 + 128);
  *(unsigned char *)(v564 + 129) = *(unsigned char *)(v565 + 129);
  *(unsigned char *)(v564 + 130) = *(unsigned char *)(v565 + 130);
  *(void *)(v564 + 136) = *(void *)(v565 + 136);
  swift_bridgeObjectRelease();
  uint64_t v590 = *(void *)(v565 + 152);
  *(void *)(v564 + 144) = *(void *)(v565 + 144);
  *(void *)(v564 + 152) = v590;
  swift_bridgeObjectRelease();
  uint64_t v591 = *(void *)(v565 + 168);
  *(void *)(v564 + 160) = *(void *)(v565 + 160);
  *(void *)(v564 + 168) = v591;
  swift_bridgeObjectRelease();
  uint64_t v592 = *(void *)(v565 + 184);
  *(void *)(v564 + 176) = *(void *)(v565 + 176);
  *(void *)(v564 + 184) = v592;
  swift_bridgeObjectRelease();
  *(void *)(v564 + 192) = *(void *)(v565 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v564 + 200) = *(void *)(v565 + 200);
  swift_bridgeObjectRelease();
  *(void *)(v564 + 208) = *(void *)(v565 + 208);
  swift_bridgeObjectRelease();
  uint64_t v593 = *(void *)(v565 + 224);
  *(void *)(v564 + 216) = *(void *)(v565 + 216);
  *(void *)(v564 + 224) = v593;
  swift_bridgeObjectRelease();
  uint64_t v594 = *(void *)(v565 + 240);
  *(void *)(v564 + 232) = *(void *)(v565 + 232);
  *(void *)(v564 + 240) = v594;
  swift_bridgeObjectRelease();
  uint64_t v595 = *(void *)(v565 + 256);
  *(void *)(v564 + 248) = *(void *)(v565 + 248);
  *(void *)(v564 + 256) = v595;
  swift_bridgeObjectRelease();
  uint64_t v596 = *(void *)(v565 + 272);
  *(void *)(v564 + 264) = *(void *)(v565 + 264);
  *(void *)(v564 + 272) = v596;
  swift_bridgeObjectRelease();
  *(void *)(v564 + 280) = *(void *)(v565 + 280);
  swift_bridgeObjectRelease();
  *(void *)(v564 + 288) = *(void *)(v565 + 288);
  *(unsigned char *)(v564 + 296) = *(unsigned char *)(v565 + 296);
  uint64_t v597 = *(int *)(v566 + 112);
  uint64_t v598 = (const void *)(v565 + v597);
  v1234 = (void *)(v564 + v597);
  int v599 = __swift_getEnumTagSinglePayload(v564 + v597, 1, v1253);
  int v600 = __swift_getEnumTagSinglePayload((uint64_t)v598, 1, v1253);
  if (v599)
  {
    if (v600)
    {
      size_t v601 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v602 = v1234;
LABEL_255:
      memcpy(v602, v598, v601);
      goto LABEL_259;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1234, v598, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1234, 0, 1, v1253);
  }
  else
  {
    if (v600)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1234, v1253);
      size_t v601 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v602 = v1234;
      goto LABEL_255;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1234, v598, v1253);
  }
LABEL_259:
  uint64_t v607 = *(int *)(v566 + 116);
  int v608 = (void *)(v564 + v607);
  int v609 = (const void *)(v565 + v607);
  int v610 = __swift_getEnumTagSinglePayload((uint64_t)v608, 1, v1253);
  int v611 = __swift_getEnumTagSinglePayload((uint64_t)v609, 1, v1253);
  if (!v610)
  {
    if (!v611)
    {
      ((void (*)(void *, const void *, uint64_t))v1252)(v608, v609, v1253);
      goto LABEL_265;
    }
    (*(void (**)(void *, uint64_t))(v1254 + 8))(v608, v1253);
    goto LABEL_264;
  }
  if (v611)
  {
LABEL_264:
    uint64_t v612 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v608, v609, *(void *)(*(void *)(v612 - 8) + 64));
    goto LABEL_265;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v608, v609, v1253);
  __swift_storeEnumTagSinglePayload((uint64_t)v608, 0, 1, v1253);
LABEL_265:
  long long v32 = v1255;
LABEL_266:
  uint64_t v613 = v32[7];
  uint64_t v614 = v30 + v613;
  uint64_t v615 = (uint64_t)&__src[v613];
  uint64_t v616 = (int *)type metadata accessor for TicketedShow(0);
  int v617 = __swift_getEnumTagSinglePayload(v614, 1, (uint64_t)v616);
  int v618 = __swift_getEnumTagSinglePayload(v615, 1, (uint64_t)v616);
  uint64_t v1251 = v30;
  if (!v617)
  {
    if (v618)
    {
      outlined destroy of EmailDocument(v614, (void (*)(void))type metadata accessor for TicketedShow);
      goto LABEL_272;
    }
    uint64_t v633 = *(void *)(v615 + 8);
    *(void *)uint64_t v614 = *(void *)v615;
    *(void *)(v614 + 8) = v633;
    swift_bridgeObjectRelease();
    uint64_t v634 = *(void *)(v615 + 24);
    *(void *)(v614 + 16) = *(void *)(v615 + 16);
    *(void *)(v614 + 24) = v634;
    swift_bridgeObjectRelease();
    uint64_t v635 = *(void *)(v615 + 40);
    *(void *)(v614 + 32) = *(void *)(v615 + 32);
    *(void *)(v614 + 40) = v635;
    swift_bridgeObjectRelease();
    uint64_t v636 = *(void *)(v615 + 56);
    *(void *)(v614 + 48) = *(void *)(v615 + 48);
    *(void *)(v614 + 56) = v636;
    swift_bridgeObjectRelease();
    uint64_t v637 = *(void *)(v615 + 72);
    *(void *)(v614 + 64) = *(void *)(v615 + 64);
    *(void *)(v614 + 72) = v637;
    swift_bridgeObjectRelease();
    uint64_t v638 = *(void *)(v615 + 88);
    *(void *)(v614 + 80) = *(void *)(v615 + 80);
    *(void *)(v614 + 88) = v638;
    swift_bridgeObjectRelease();
    uint64_t v639 = *(void *)(v615 + 104);
    *(void *)(v614 + 96) = *(void *)(v615 + 96);
    *(void *)(v614 + 104) = v639;
    swift_bridgeObjectRelease();
    uint64_t v640 = *(void *)(v615 + 120);
    *(void *)(v614 + 112) = *(void *)(v615 + 112);
    *(void *)(v614 + 120) = v640;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v614 + 128) = *(unsigned char *)(v615 + 128);
    *(unsigned char *)(v614 + 129) = *(unsigned char *)(v615 + 129);
    *(unsigned char *)(v614 + 130) = *(unsigned char *)(v615 + 130);
    *(void *)(v614 + 136) = *(void *)(v615 + 136);
    swift_bridgeObjectRelease();
    uint64_t v641 = *(void *)(v615 + 152);
    *(void *)(v614 + 144) = *(void *)(v615 + 144);
    *(void *)(v614 + 152) = v641;
    swift_bridgeObjectRelease();
    uint64_t v642 = *(void *)(v615 + 168);
    *(void *)(v614 + 160) = *(void *)(v615 + 160);
    *(void *)(v614 + 168) = v642;
    swift_bridgeObjectRelease();
    uint64_t v643 = *(void *)(v615 + 184);
    *(void *)(v614 + 176) = *(void *)(v615 + 176);
    *(void *)(v614 + 184) = v643;
    swift_bridgeObjectRelease();
    *(void *)(v614 + 192) = *(void *)(v615 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v614 + 200) = *(void *)(v615 + 200);
    swift_bridgeObjectRelease();
    uint64_t v644 = *(void *)(v615 + 216);
    *(void *)(v614 + 208) = *(void *)(v615 + 208);
    *(void *)(v614 + 216) = v644;
    swift_bridgeObjectRelease();
    uint64_t v645 = *(void *)(v615 + 232);
    *(void *)(v614 + 224) = *(void *)(v615 + 224);
    *(void *)(v614 + 232) = v645;
    swift_bridgeObjectRelease();
    *(void *)(v614 + 240) = *(void *)(v615 + 240);
    swift_bridgeObjectRelease();
    uint64_t v646 = *(void *)(v615 + 256);
    *(void *)(v614 + 248) = *(void *)(v615 + 248);
    *(void *)(v614 + 256) = v646;
    swift_bridgeObjectRelease();
    uint64_t v647 = *(void *)(v615 + 272);
    *(void *)(v614 + 264) = *(void *)(v615 + 264);
    *(void *)(v614 + 272) = v647;
    swift_bridgeObjectRelease();
    *(void *)(v614 + 280) = *(void *)(v615 + 280);
    swift_bridgeObjectRelease();
    *(void *)(v614 + 288) = *(void *)(v615 + 288);
    *(unsigned char *)(v614 + 296) = *(unsigned char *)(v615 + 296);
    uint64_t v648 = *(void *)(v615 + 312);
    *(void *)(v614 + 304) = *(void *)(v615 + 304);
    *(void *)(v614 + 312) = v648;
    swift_bridgeObjectRelease();
    v1245 = v616;
    uint64_t v649 = v616[29];
    uint64_t v650 = v614 + v649;
    uint64_t v651 = (const void *)(v615 + v649);
    uint64_t v652 = type metadata accessor for URL();
    v1235 = (void *)v650;
    LODWORD(v650) = __swift_getEnumTagSinglePayload(v650, 1, v652);
    int v653 = __swift_getEnumTagSinglePayload((uint64_t)v651, 1, v652);
    if (v650)
    {
      if (v653)
      {
        size_t v654 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v655 = v1235;
LABEL_286:
        memcpy(v655, v651, v654);
        goto LABEL_290;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v652 - 8) + 32))(v1235, v651, v652);
      __swift_storeEnumTagSinglePayload((uint64_t)v1235, 0, 1, v652);
    }
    else
    {
      uint64_t v664 = *(void *)(v652 - 8);
      if (v653)
      {
        (*(void (**)(void *, uint64_t))(v664 + 8))(v1235, v652);
        size_t v654 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v655 = v1235;
        goto LABEL_286;
      }
      (*(void (**)(void *, const void *, uint64_t))(v664 + 40))(v1235, v651, v652);
    }
LABEL_290:
    uint64_t v665 = v1245[30];
    int v666 = (void *)(v614 + v665);
    int v667 = (uint64_t *)(v615 + v665);
    uint64_t v669 = *v667;
    uint64_t v668 = v667[1];
    *int v666 = v669;
    v666[1] = v668;
    swift_bridgeObjectRelease();
    uint64_t v670 = v1245[31];
    uint64_t v671 = (void *)(v614 + v670);
    uint64_t v672 = (const void *)(v615 + v670);
    int v673 = __swift_getEnumTagSinglePayload(v614 + v670, 1, v1253);
    int v674 = __swift_getEnumTagSinglePayload((uint64_t)v672, 1, v1253);
    if (v673)
    {
      if (!v674)
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v671, v672, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v671, 0, 1, v1253);
        goto LABEL_296;
      }
    }
    else
    {
      if (!v674)
      {
        ((void (*)(void *, const void *, uint64_t))v1252)(v671, v672, v1253);
LABEL_296:
        uint64_t v676 = v1245[32];
        uint64_t v677 = (void *)(v614 + v676);
        int v678 = (const void *)(v615 + v676);
        int v679 = __swift_getEnumTagSinglePayload((uint64_t)v677, 1, v1253);
        int v680 = __swift_getEnumTagSinglePayload((uint64_t)v678, 1, v1253);
        if (v679)
        {
          if (!v680)
          {
            (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v677, v678, v1253);
            __swift_storeEnumTagSinglePayload((uint64_t)v677, 0, 1, v1253);
LABEL_302:
            long long v32 = v1255;
            goto LABEL_303;
          }
        }
        else
        {
          if (!v680)
          {
            ((void (*)(void *, const void *, uint64_t))v1252)(v677, v678, v1253);
            goto LABEL_302;
          }
          (*(void (**)(void *, uint64_t))(v1254 + 8))(v677, v1253);
        }
        uint64_t v681 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v677, v678, *(void *)(*(void *)(v681 - 8) + 64));
        goto LABEL_302;
      }
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v671, v1253);
    }
    uint64_t v675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v671, v672, *(void *)(*(void *)(v675 - 8) + 64));
    goto LABEL_296;
  }
  if (v618)
  {
LABEL_272:
    uint64_t v632 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
    memcpy((void *)v614, (const void *)v615, *(void *)(*(void *)(v632 - 8) + 64));
    goto LABEL_303;
  }
  long long v619 = *(_OWORD *)(v615 + 16);
  *(_OWORD *)uint64_t v614 = *(_OWORD *)v615;
  *(_OWORD *)(v614 + 16) = v619;
  long long v620 = *(_OWORD *)(v615 + 48);
  *(_OWORD *)(v614 + 32) = *(_OWORD *)(v615 + 32);
  *(_OWORD *)(v614 + 48) = v620;
  long long v621 = *(_OWORD *)(v615 + 80);
  *(_OWORD *)(v614 + 64) = *(_OWORD *)(v615 + 64);
  *(_OWORD *)(v614 + 80) = v621;
  long long v622 = *(_OWORD *)(v615 + 112);
  *(_OWORD *)(v614 + 96) = *(_OWORD *)(v615 + 96);
  *(_OWORD *)(v614 + 112) = v622;
  *(unsigned char *)(v614 + 128) = *(unsigned char *)(v615 + 128);
  *(_WORD *)(v614 + 129) = *(_WORD *)(v615 + 129);
  *(void *)(v614 + 136) = *(void *)(v615 + 136);
  long long v623 = *(_OWORD *)(v615 + 160);
  *(_OWORD *)(v614 + 144) = *(_OWORD *)(v615 + 144);
  *(_OWORD *)(v614 + 160) = v623;
  long long v624 = *(_OWORD *)(v615 + 192);
  *(_OWORD *)(v614 + 176) = *(_OWORD *)(v615 + 176);
  *(_OWORD *)(v614 + 192) = v624;
  long long v625 = *(_OWORD *)(v615 + 224);
  *(_OWORD *)(v614 + 208) = *(_OWORD *)(v615 + 208);
  *(_OWORD *)(v614 + 224) = v625;
  *(void *)(v614 + 240) = *(void *)(v615 + 240);
  *(_OWORD *)(v614 + 248) = *(_OWORD *)(v615 + 248);
  *(_OWORD *)(v614 + 264) = *(_OWORD *)(v615 + 264);
  *(unsigned char *)(v614 + 296) = *(unsigned char *)(v615 + 296);
  uint64_t v626 = *(void *)(v615 + 288);
  *(void *)(v614 + 280) = *(void *)(v615 + 280);
  *(void *)(v614 + 288) = v626;
  *(_OWORD *)(v614 + 304) = *(_OWORD *)(v615 + 304);
  uint64_t v627 = v616[29];
  v628 = (void *)(v614 + v627);
  uint64_t v629 = (const void *)(v615 + v627);
  uint64_t v630 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v629, 1, v630))
  {
    uint64_t v631 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v628, v629, *(void *)(*(void *)(v631 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v630 - 8) + 32))(v628, v629, v630);
    __swift_storeEnumTagSinglePayload((uint64_t)v628, 0, 1, v630);
  }
  *(_OWORD *)(v614 + v616[30]) = *(_OWORD *)(v615 + v616[30]);
  uint64_t v656 = v616[31];
  v657 = (void *)(v614 + v656);
  uint64_t v658 = (const void *)(v615 + v656);
  long long v32 = v1255;
  if (__swift_getEnumTagSinglePayload(v615 + v656, 1, v1253))
  {
    uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v657, v658, *(void *)(*(void *)(v659 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v657, v658, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v1253);
  }
  uint64_t v660 = v616[32];
  v661 = (void *)(v614 + v660);
  uint64_t v662 = (const void *)(v615 + v660);
  if (__swift_getEnumTagSinglePayload(v615 + v660, 1, v1253))
  {
    uint64_t v663 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v661, v662, *(void *)(*(void *)(v663 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v661, v662, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v661, 0, 1, v1253);
  }
  __swift_storeEnumTagSinglePayload(v614, 0, 1, (uint64_t)v616);
  uint64_t v30 = v1251;
LABEL_303:
  uint64_t v682 = v32[8];
  uint64_t v683 = v30 + v682;
  uint64_t v684 = (uint64_t)&__src[v682];
  uint64_t v685 = type metadata accessor for Appointment(0);
  int v686 = __swift_getEnumTagSinglePayload(v683, 1, v685);
  int v687 = __swift_getEnumTagSinglePayload(v684, 1, v685);
  if (v686)
  {
    if (!v687)
    {
      uint64_t v688 = v30;
      long long v689 = *(_OWORD *)(v684 + 16);
      *(_OWORD *)uint64_t v683 = *(_OWORD *)v684;
      *(_OWORD *)(v683 + 16) = v689;
      long long v690 = *(_OWORD *)(v684 + 48);
      *(_OWORD *)(v683 + 32) = *(_OWORD *)(v684 + 32);
      *(_OWORD *)(v683 + 48) = v690;
      long long v691 = *(_OWORD *)(v684 + 80);
      *(_OWORD *)(v683 + 64) = *(_OWORD *)(v684 + 64);
      *(_OWORD *)(v683 + 80) = v691;
      long long v692 = *(_OWORD *)(v684 + 112);
      *(_OWORD *)(v683 + 96) = *(_OWORD *)(v684 + 96);
      *(_OWORD *)(v683 + 112) = v692;
      *(unsigned char *)(v683 + 128) = *(unsigned char *)(v684 + 128);
      *(_WORD *)(v683 + 129) = *(_WORD *)(v684 + 129);
      *(void *)(v683 + 136) = *(void *)(v684 + 136);
      long long v693 = *(_OWORD *)(v684 + 160);
      *(_OWORD *)(v683 + 144) = *(_OWORD *)(v684 + 144);
      *(_OWORD *)(v683 + 160) = v693;
      long long v694 = *(_OWORD *)(v684 + 192);
      *(_OWORD *)(v683 + 176) = *(_OWORD *)(v684 + 176);
      *(_OWORD *)(v683 + 192) = v694;
      long long v695 = *(_OWORD *)(v684 + 224);
      *(_OWORD *)(v683 + 208) = *(_OWORD *)(v684 + 208);
      *(_OWORD *)(v683 + 224) = v695;
      long long v696 = *(_OWORD *)(v684 + 256);
      *(_OWORD *)(v683 + 240) = *(_OWORD *)(v684 + 240);
      *(_OWORD *)(v683 + 256) = v696;
      *(unsigned char *)(v683 + 280) = *(unsigned char *)(v684 + 280);
      *(void *)(v683 + 272) = *(void *)(v684 + 272);
      *(_OWORD *)(v683 + 288) = *(_OWORD *)(v684 + 288);
      uint64_t v697 = *(int *)(v685 + 108);
      uint64_t v698 = (void *)(v683 + v697);
      uint64_t v699 = (const void *)(v684 + v697);
      if (__swift_getEnumTagSinglePayload(v684 + v697, 1, v1253))
      {
        uint64_t v700 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v698, v699, *(void *)(*(void *)(v700 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v698, v699, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v698, 0, 1, v1253);
      }
      uint64_t v724 = *(int *)(v685 + 112);
      int v725 = (void *)(v683 + v724);
      uint64_t v726 = (const void *)(v684 + v724);
      if (__swift_getEnumTagSinglePayload(v684 + v724, 1, v1253))
      {
        uint64_t v727 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v725, v726, *(void *)(*(void *)(v727 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v725, v726, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, v1253);
      }
      __swift_storeEnumTagSinglePayload(v683, 0, 1, v685);
      uint64_t v30 = v688;
      goto LABEL_331;
    }
LABEL_309:
    uint64_t v701 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
    memcpy((void *)v683, (const void *)v684, *(void *)(*(void *)(v701 - 8) + 64));
    goto LABEL_332;
  }
  if (v687)
  {
    outlined destroy of EmailDocument(v683, (void (*)(void))type metadata accessor for Appointment);
    goto LABEL_309;
  }
  uint64_t v702 = *(void *)(v684 + 8);
  *(void *)uint64_t v683 = *(void *)v684;
  *(void *)(v683 + 8) = v702;
  swift_bridgeObjectRelease();
  uint64_t v703 = *(void *)(v684 + 24);
  *(void *)(v683 + 16) = *(void *)(v684 + 16);
  *(void *)(v683 + 24) = v703;
  swift_bridgeObjectRelease();
  uint64_t v704 = *(void *)(v684 + 40);
  *(void *)(v683 + 32) = *(void *)(v684 + 32);
  *(void *)(v683 + 40) = v704;
  swift_bridgeObjectRelease();
  uint64_t v705 = *(void *)(v684 + 56);
  *(void *)(v683 + 48) = *(void *)(v684 + 48);
  *(void *)(v683 + 56) = v705;
  swift_bridgeObjectRelease();
  uint64_t v706 = *(void *)(v684 + 72);
  *(void *)(v683 + 64) = *(void *)(v684 + 64);
  *(void *)(v683 + 72) = v706;
  swift_bridgeObjectRelease();
  uint64_t v707 = *(void *)(v684 + 88);
  *(void *)(v683 + 80) = *(void *)(v684 + 80);
  *(void *)(v683 + 88) = v707;
  swift_bridgeObjectRelease();
  uint64_t v708 = *(void *)(v684 + 104);
  *(void *)(v683 + 96) = *(void *)(v684 + 96);
  *(void *)(v683 + 104) = v708;
  swift_bridgeObjectRelease();
  uint64_t v709 = *(void *)(v684 + 120);
  *(void *)(v683 + 112) = *(void *)(v684 + 112);
  *(void *)(v683 + 120) = v709;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v683 + 128) = *(unsigned char *)(v684 + 128);
  *(unsigned char *)(v683 + 129) = *(unsigned char *)(v684 + 129);
  *(unsigned char *)(v683 + 130) = *(unsigned char *)(v684 + 130);
  *(void *)(v683 + 136) = *(void *)(v684 + 136);
  swift_bridgeObjectRelease();
  uint64_t v710 = *(void *)(v684 + 152);
  *(void *)(v683 + 144) = *(void *)(v684 + 144);
  *(void *)(v683 + 152) = v710;
  swift_bridgeObjectRelease();
  uint64_t v711 = *(void *)(v684 + 168);
  *(void *)(v683 + 160) = *(void *)(v684 + 160);
  *(void *)(v683 + 168) = v711;
  swift_bridgeObjectRelease();
  uint64_t v712 = *(void *)(v684 + 184);
  *(void *)(v683 + 176) = *(void *)(v684 + 176);
  *(void *)(v683 + 184) = v712;
  swift_bridgeObjectRelease();
  *(void *)(v683 + 192) = *(void *)(v684 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v683 + 200) = *(void *)(v684 + 200);
  swift_bridgeObjectRelease();
  uint64_t v713 = *(void *)(v684 + 216);
  *(void *)(v683 + 208) = *(void *)(v684 + 208);
  *(void *)(v683 + 216) = v713;
  swift_bridgeObjectRelease();
  uint64_t v714 = *(void *)(v684 + 232);
  *(void *)(v683 + 224) = *(void *)(v684 + 224);
  *(void *)(v683 + 232) = v714;
  swift_bridgeObjectRelease();
  uint64_t v715 = *(void *)(v684 + 248);
  *(void *)(v683 + 240) = *(void *)(v684 + 240);
  *(void *)(v683 + 248) = v715;
  swift_bridgeObjectRelease();
  uint64_t v716 = *(void *)(v684 + 264);
  *(void *)(v683 + 256) = *(void *)(v684 + 256);
  *(void *)(v683 + 264) = v716;
  swift_bridgeObjectRelease();
  *(void *)(v683 + 272) = *(void *)(v684 + 272);
  *(unsigned char *)(v683 + 280) = *(unsigned char *)(v684 + 280);
  uint64_t v717 = *(void *)(v684 + 296);
  *(void *)(v683 + 288) = *(void *)(v684 + 288);
  *(void *)(v683 + 296) = v717;
  swift_bridgeObjectRelease();
  uint64_t v718 = *(int *)(v685 + 108);
  int v719 = (const void *)(v684 + v718);
  v1236 = (void *)(v683 + v718);
  int v720 = __swift_getEnumTagSinglePayload(v683 + v718, 1, v1253);
  int v721 = __swift_getEnumTagSinglePayload((uint64_t)v719, 1, v1253);
  if (v720)
  {
    if (v721)
    {
      size_t v722 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      v723 = v1236;
LABEL_320:
      memcpy(v723, v719, v722);
      goto LABEL_325;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1236, v719, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1236, 0, 1, v1253);
  }
  else
  {
    if (v721)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1236, v1253);
      size_t v722 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      v723 = v1236;
      goto LABEL_320;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1236, v719, v1253);
  }
LABEL_325:
  uint64_t v728 = *(int *)(v685 + 112);
  uint64_t v729 = (void *)(v683 + v728);
  int v730 = (const void *)(v684 + v728);
  int v731 = __swift_getEnumTagSinglePayload((uint64_t)v729, 1, v1253);
  int v732 = __swift_getEnumTagSinglePayload((uint64_t)v730, 1, v1253);
  if (!v731)
  {
    if (!v732)
    {
      ((void (*)(void *, const void *, uint64_t))v1252)(v729, v730, v1253);
      goto LABEL_331;
    }
    (*(void (**)(void *, uint64_t))(v1254 + 8))(v729, v1253);
    goto LABEL_330;
  }
  if (v732)
  {
LABEL_330:
    uint64_t v733 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v729, v730, *(void *)(*(void *)(v733 - 8) + 64));
    goto LABEL_331;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v729, v730, v1253);
  __swift_storeEnumTagSinglePayload((uint64_t)v729, 0, 1, v1253);
LABEL_331:
  long long v32 = v1255;
LABEL_332:
  uint64_t v734 = v32[9];
  uint64_t v735 = v30 + v734;
  uint64_t v736 = (uint64_t)&__src[v734];
  int v737 = (int *)type metadata accessor for Party(0);
  int v738 = __swift_getEnumTagSinglePayload(v735, 1, (uint64_t)v737);
  int v739 = __swift_getEnumTagSinglePayload(v736, 1, (uint64_t)v737);
  if (v738)
  {
    if (!v739)
    {
      long long v740 = *(_OWORD *)(v736 + 16);
      *(_OWORD *)uint64_t v735 = *(_OWORD *)v736;
      *(_OWORD *)(v735 + 16) = v740;
      long long v741 = *(_OWORD *)(v736 + 48);
      *(_OWORD *)(v735 + 32) = *(_OWORD *)(v736 + 32);
      *(_OWORD *)(v735 + 48) = v741;
      long long v742 = *(_OWORD *)(v736 + 80);
      *(_OWORD *)(v735 + 64) = *(_OWORD *)(v736 + 64);
      *(_OWORD *)(v735 + 80) = v742;
      long long v743 = *(_OWORD *)(v736 + 112);
      *(_OWORD *)(v735 + 96) = *(_OWORD *)(v736 + 96);
      *(_OWORD *)(v735 + 112) = v743;
      *(unsigned char *)(v735 + 128) = *(unsigned char *)(v736 + 128);
      *(_WORD *)(v735 + 129) = *(_WORD *)(v736 + 129);
      *(void *)(v735 + 136) = *(void *)(v736 + 136);
      long long v744 = *(_OWORD *)(v736 + 160);
      *(_OWORD *)(v735 + 144) = *(_OWORD *)(v736 + 144);
      *(_OWORD *)(v735 + 160) = v744;
      long long v745 = *(_OWORD *)(v736 + 192);
      *(_OWORD *)(v735 + 176) = *(_OWORD *)(v736 + 176);
      *(_OWORD *)(v735 + 192) = v745;
      long long v746 = *(_OWORD *)(v736 + 224);
      *(_OWORD *)(v735 + 208) = *(_OWORD *)(v736 + 208);
      *(_OWORD *)(v735 + 224) = v746;
      *(_OWORD *)(v735 + 240) = *(_OWORD *)(v736 + 240);
      uint64_t v747 = v737[24];
      uint64_t v748 = (void *)(v735 + v747);
      size_t v749 = (const void *)(v736 + v747);
      if (__swift_getEnumTagSinglePayload(v736 + v747, 1, v1253))
      {
        uint64_t v750 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v748, v749, *(void *)(*(void *)(v750 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v748, v749, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v748, 0, 1, v1253);
      }
      uint64_t v772 = v737[25];
      uint64_t v773 = (void *)(v735 + v772);
      uint64_t v774 = (const void *)(v736 + v772);
      if (__swift_getEnumTagSinglePayload(v736 + v772, 1, v1253))
      {
        uint64_t v775 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v773, v774, *(void *)(*(void *)(v775 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v773, v774, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v773, 0, 1, v1253);
      }
      uint64_t v776 = v737[26];
      int v777 = (void *)(v735 + v776);
      uint64_t v778 = (const void *)(v736 + v776);
      uint64_t v779 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v778, 1, v779))
      {
        uint64_t v780 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v777, v778, *(void *)(*(void *)(v780 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v779 - 8) + 32))(v777, v778, v779);
        __swift_storeEnumTagSinglePayload((uint64_t)v777, 0, 1, v779);
      }
      __swift_storeEnumTagSinglePayload(v735, 0, 1, (uint64_t)v737);
      uint64_t v30 = v1251;
      goto LABEL_370;
    }
LABEL_338:
    uint64_t v751 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
    memcpy((void *)v735, (const void *)v736, *(void *)(*(void *)(v751 - 8) + 64));
    goto LABEL_371;
  }
  if (v739)
  {
    outlined destroy of EmailDocument(v735, (void (*)(void))type metadata accessor for Party);
    goto LABEL_338;
  }
  uint64_t v752 = *(void *)(v736 + 8);
  *(void *)uint64_t v735 = *(void *)v736;
  *(void *)(v735 + 8) = v752;
  swift_bridgeObjectRelease();
  uint64_t v753 = *(void *)(v736 + 24);
  *(void *)(v735 + 16) = *(void *)(v736 + 16);
  *(void *)(v735 + 24) = v753;
  swift_bridgeObjectRelease();
  uint64_t v754 = *(void *)(v736 + 40);
  *(void *)(v735 + 32) = *(void *)(v736 + 32);
  *(void *)(v735 + 40) = v754;
  swift_bridgeObjectRelease();
  uint64_t v755 = *(void *)(v736 + 56);
  *(void *)(v735 + 48) = *(void *)(v736 + 48);
  *(void *)(v735 + 56) = v755;
  swift_bridgeObjectRelease();
  uint64_t v756 = *(void *)(v736 + 72);
  *(void *)(v735 + 64) = *(void *)(v736 + 64);
  *(void *)(v735 + 72) = v756;
  swift_bridgeObjectRelease();
  uint64_t v757 = *(void *)(v736 + 88);
  *(void *)(v735 + 80) = *(void *)(v736 + 80);
  *(void *)(v735 + 88) = v757;
  swift_bridgeObjectRelease();
  uint64_t v758 = *(void *)(v736 + 104);
  *(void *)(v735 + 96) = *(void *)(v736 + 96);
  *(void *)(v735 + 104) = v758;
  swift_bridgeObjectRelease();
  uint64_t v759 = *(void *)(v736 + 120);
  *(void *)(v735 + 112) = *(void *)(v736 + 112);
  *(void *)(v735 + 120) = v759;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v735 + 128) = *(unsigned char *)(v736 + 128);
  *(unsigned char *)(v735 + 129) = *(unsigned char *)(v736 + 129);
  *(unsigned char *)(v735 + 130) = *(unsigned char *)(v736 + 130);
  *(void *)(v735 + 136) = *(void *)(v736 + 136);
  swift_bridgeObjectRelease();
  uint64_t v760 = *(void *)(v736 + 152);
  *(void *)(v735 + 144) = *(void *)(v736 + 144);
  *(void *)(v735 + 152) = v760;
  swift_bridgeObjectRelease();
  uint64_t v761 = *(void *)(v736 + 168);
  *(void *)(v735 + 160) = *(void *)(v736 + 160);
  *(void *)(v735 + 168) = v761;
  swift_bridgeObjectRelease();
  uint64_t v762 = *(void *)(v736 + 184);
  *(void *)(v735 + 176) = *(void *)(v736 + 176);
  *(void *)(v735 + 184) = v762;
  swift_bridgeObjectRelease();
  *(void *)(v735 + 192) = *(void *)(v736 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v735 + 200) = *(void *)(v736 + 200);
  swift_bridgeObjectRelease();
  uint64_t v763 = *(void *)(v736 + 216);
  *(void *)(v735 + 208) = *(void *)(v736 + 208);
  *(void *)(v735 + 216) = v763;
  swift_bridgeObjectRelease();
  uint64_t v764 = *(void *)(v736 + 232);
  *(void *)(v735 + 224) = *(void *)(v736 + 224);
  *(void *)(v735 + 232) = v764;
  swift_bridgeObjectRelease();
  uint64_t v765 = *(void *)(v736 + 248);
  *(void *)(v735 + 240) = *(void *)(v736 + 240);
  *(void *)(v735 + 248) = v765;
  swift_bridgeObjectRelease();
  uint64_t v766 = v737[24];
  v767 = (const void *)(v736 + v766);
  v1237 = (void *)(v735 + v766);
  int v768 = __swift_getEnumTagSinglePayload(v735 + v766, 1, v1253);
  int v769 = __swift_getEnumTagSinglePayload((uint64_t)v767, 1, v1253);
  if (v768)
  {
    if (v769)
    {
      size_t v770 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v771 = v1237;
LABEL_352:
      memcpy(v771, v767, v770);
      goto LABEL_356;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1237, v767, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1237, 0, 1, v1253);
  }
  else
  {
    if (v769)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1237, v1253);
      size_t v770 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v771 = v1237;
      goto LABEL_352;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1237, v767, v1253);
  }
LABEL_356:
  uint64_t v781 = v737[25];
  v782 = (const void *)(v736 + v781);
  v1238 = (void *)(v735 + v781);
  int v783 = __swift_getEnumTagSinglePayload(v735 + v781, 1, v1253);
  int v784 = __swift_getEnumTagSinglePayload((uint64_t)v782, 1, v1253);
  if (v783)
  {
    if (v784)
    {
      size_t v785 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      int v786 = v1238;
LABEL_361:
      memcpy(v786, v782, v785);
      goto LABEL_364;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1238, v782, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1238, 0, 1, v1253);
  }
  else
  {
    if (v784)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1238, v1253);
      size_t v785 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      int v786 = v1238;
      goto LABEL_361;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1238, v782, v1253);
  }
LABEL_364:
  uint64_t v787 = v737[26];
  v788 = (void *)(v735 + v787);
  v789 = (const void *)(v736 + v787);
  uint64_t v790 = type metadata accessor for URL();
  int v791 = __swift_getEnumTagSinglePayload((uint64_t)v788, 1, v790);
  int v792 = __swift_getEnumTagSinglePayload((uint64_t)v789, 1, v790);
  if (!v791)
  {
    uint64_t v793 = *(void *)(v790 - 8);
    if (!v792)
    {
      (*(void (**)(void *, const void *, uint64_t))(v793 + 40))(v788, v789, v790);
      goto LABEL_370;
    }
    (*(void (**)(void *, uint64_t))(v793 + 8))(v788, v790);
    goto LABEL_369;
  }
  if (v792)
  {
LABEL_369:
    uint64_t v794 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v788, v789, *(void *)(*(void *)(v794 - 8) + 64));
    goto LABEL_370;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v790 - 8) + 32))(v788, v789, v790);
  __swift_storeEnumTagSinglePayload((uint64_t)v788, 0, 1, v790);
LABEL_370:
  long long v32 = v1255;
LABEL_371:
  uint64_t v795 = v32[10];
  uint64_t v796 = v30 + v795;
  uint64_t v797 = (uint64_t)&__src[v795];
  v798 = (int *)type metadata accessor for Trip(0);
  int v799 = __swift_getEnumTagSinglePayload(v796, 1, (uint64_t)v798);
  int v800 = __swift_getEnumTagSinglePayload(v797, 1, (uint64_t)v798);
  if (v799)
  {
    if (!v800)
    {
      long long v801 = *(_OWORD *)(v797 + 16);
      *(_OWORD *)uint64_t v796 = *(_OWORD *)v797;
      *(_OWORD *)(v796 + 16) = v801;
      long long v802 = *(_OWORD *)(v797 + 48);
      *(_OWORD *)(v796 + 32) = *(_OWORD *)(v797 + 32);
      *(_OWORD *)(v796 + 48) = v802;
      long long v803 = *(_OWORD *)(v797 + 80);
      *(_OWORD *)(v796 + 64) = *(_OWORD *)(v797 + 64);
      *(_OWORD *)(v796 + 80) = v803;
      long long v804 = *(_OWORD *)(v797 + 112);
      *(_OWORD *)(v796 + 96) = *(_OWORD *)(v797 + 96);
      *(_OWORD *)(v796 + 112) = v804;
      *(unsigned char *)(v796 + 128) = *(unsigned char *)(v797 + 128);
      *(_WORD *)(v796 + 129) = *(_WORD *)(v797 + 129);
      *(void *)(v796 + 136) = *(void *)(v797 + 136);
      long long v805 = *(_OWORD *)(v797 + 160);
      *(_OWORD *)(v796 + 144) = *(_OWORD *)(v797 + 144);
      *(_OWORD *)(v796 + 160) = v805;
      long long v806 = *(_OWORD *)(v797 + 192);
      *(_OWORD *)(v796 + 176) = *(_OWORD *)(v797 + 176);
      *(_OWORD *)(v796 + 192) = v806;
      *(_OWORD *)(v796 + 208) = *(_OWORD *)(v797 + 208);
      uint64_t v807 = v798[22];
      v808 = (void *)(v796 + v807);
      v809 = (const void *)(v797 + v807);
      if (__swift_getEnumTagSinglePayload(v797 + v807, 1, v1253))
      {
        uint64_t v810 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v808, v809, *(void *)(*(void *)(v810 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v808, v809, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v808, 0, 1, v1253);
      }
      uint64_t v830 = v798[23];
      uint64_t v831 = (void *)(v796 + v830);
      v832 = (const void *)(v797 + v830);
      if (__swift_getEnumTagSinglePayload(v797 + v830, 1, v1253))
      {
        uint64_t v833 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v831, v832, *(void *)(*(void *)(v833 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v831, v832, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v831, 0, 1, v1253);
      }
      uint64_t v834 = v798[24];
      uint64_t v835 = v796 + v834;
      uint64_t v836 = v797 + v834;
      *(void *)uint64_t v835 = *(void *)v836;
      *(unsigned char *)(v835 + 8) = *(unsigned char *)(v836 + 8);
      uint64_t v837 = v798[25];
      v838 = (void *)(v796 + v837);
      v839 = (const void *)(v797 + v837);
      uint64_t v840 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v839, 1, v840))
      {
        uint64_t v841 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v838, v839, *(void *)(*(void *)(v841 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v840 - 8) + 32))(v838, v839, v840);
        __swift_storeEnumTagSinglePayload((uint64_t)v838, 0, 1, v840);
      }
      __swift_storeEnumTagSinglePayload(v796, 0, 1, (uint64_t)v798);
      uint64_t v30 = v1251;
      goto LABEL_409;
    }
LABEL_377:
    uint64_t v811 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
    memcpy((void *)v796, (const void *)v797, *(void *)(*(void *)(v811 - 8) + 64));
    goto LABEL_410;
  }
  if (v800)
  {
    outlined destroy of EmailDocument(v796, (void (*)(void))type metadata accessor for Trip);
    goto LABEL_377;
  }
  uint64_t v812 = *(void *)(v797 + 8);
  *(void *)uint64_t v796 = *(void *)v797;
  *(void *)(v796 + 8) = v812;
  swift_bridgeObjectRelease();
  uint64_t v813 = *(void *)(v797 + 24);
  *(void *)(v796 + 16) = *(void *)(v797 + 16);
  *(void *)(v796 + 24) = v813;
  swift_bridgeObjectRelease();
  uint64_t v814 = *(void *)(v797 + 40);
  *(void *)(v796 + 32) = *(void *)(v797 + 32);
  *(void *)(v796 + 40) = v814;
  swift_bridgeObjectRelease();
  uint64_t v815 = *(void *)(v797 + 56);
  *(void *)(v796 + 48) = *(void *)(v797 + 48);
  *(void *)(v796 + 56) = v815;
  swift_bridgeObjectRelease();
  uint64_t v816 = *(void *)(v797 + 72);
  *(void *)(v796 + 64) = *(void *)(v797 + 64);
  *(void *)(v796 + 72) = v816;
  swift_bridgeObjectRelease();
  uint64_t v817 = *(void *)(v797 + 88);
  *(void *)(v796 + 80) = *(void *)(v797 + 80);
  *(void *)(v796 + 88) = v817;
  swift_bridgeObjectRelease();
  uint64_t v818 = *(void *)(v797 + 104);
  *(void *)(v796 + 96) = *(void *)(v797 + 96);
  *(void *)(v796 + 104) = v818;
  swift_bridgeObjectRelease();
  uint64_t v819 = *(void *)(v797 + 120);
  *(void *)(v796 + 112) = *(void *)(v797 + 112);
  *(void *)(v796 + 120) = v819;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v796 + 128) = *(unsigned char *)(v797 + 128);
  *(unsigned char *)(v796 + 129) = *(unsigned char *)(v797 + 129);
  *(unsigned char *)(v796 + 130) = *(unsigned char *)(v797 + 130);
  *(void *)(v796 + 136) = *(void *)(v797 + 136);
  swift_bridgeObjectRelease();
  uint64_t v820 = *(void *)(v797 + 152);
  *(void *)(v796 + 144) = *(void *)(v797 + 144);
  *(void *)(v796 + 152) = v820;
  swift_bridgeObjectRelease();
  uint64_t v821 = *(void *)(v797 + 168);
  *(void *)(v796 + 160) = *(void *)(v797 + 160);
  *(void *)(v796 + 168) = v821;
  swift_bridgeObjectRelease();
  uint64_t v822 = *(void *)(v797 + 184);
  *(void *)(v796 + 176) = *(void *)(v797 + 176);
  *(void *)(v796 + 184) = v822;
  swift_bridgeObjectRelease();
  *(void *)(v796 + 192) = *(void *)(v797 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v796 + 200) = *(void *)(v797 + 200);
  swift_bridgeObjectRelease();
  uint64_t v823 = *(void *)(v797 + 216);
  *(void *)(v796 + 208) = *(void *)(v797 + 208);
  *(void *)(v796 + 216) = v823;
  swift_bridgeObjectRelease();
  uint64_t v824 = v798[22];
  uint64_t v825 = (const void *)(v797 + v824);
  v1239 = (void *)(v796 + v824);
  int v826 = __swift_getEnumTagSinglePayload(v796 + v824, 1, v1253);
  int v827 = __swift_getEnumTagSinglePayload((uint64_t)v825, 1, v1253);
  if (v826)
  {
    if (v827)
    {
      size_t v828 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      v829 = v1239;
LABEL_391:
      memcpy(v829, v825, v828);
      goto LABEL_395;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1239, v825, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1239, 0, 1, v1253);
  }
  else
  {
    if (v827)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1239, v1253);
      size_t v828 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      v829 = v1239;
      goto LABEL_391;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1239, v825, v1253);
  }
LABEL_395:
  uint64_t v842 = v798[23];
  uint64_t v843 = (const void *)(v797 + v842);
  v1240 = (void *)(v796 + v842);
  int v844 = __swift_getEnumTagSinglePayload(v796 + v842, 1, v1253);
  int v845 = __swift_getEnumTagSinglePayload((uint64_t)v843, 1, v1253);
  if (v844)
  {
    if (v845)
    {
      size_t v846 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      v847 = v1240;
LABEL_400:
      memcpy(v847, v843, v846);
      goto LABEL_403;
    }
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v1240, v843, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v1240, 0, 1, v1253);
  }
  else
  {
    if (v845)
    {
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1240, v1253);
      size_t v846 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      v847 = v1240;
      goto LABEL_400;
    }
    ((void (*)(void *, const void *, uint64_t))v1252)(v1240, v843, v1253);
  }
LABEL_403:
  uint64_t v848 = v798[24];
  uint64_t v849 = v796 + v848;
  uint64_t v850 = v797 + v848;
  *(void *)uint64_t v849 = *(void *)v850;
  *(unsigned char *)(v849 + 8) = *(unsigned char *)(v850 + 8);
  uint64_t v851 = v798[25];
  uint64_t v852 = (void *)(v796 + v851);
  v853 = (const void *)(v797 + v851);
  uint64_t v854 = type metadata accessor for URL();
  int v855 = __swift_getEnumTagSinglePayload((uint64_t)v852, 1, v854);
  int v856 = __swift_getEnumTagSinglePayload((uint64_t)v853, 1, v854);
  if (!v855)
  {
    uint64_t v857 = *(void *)(v854 - 8);
    if (!v856)
    {
      (*(void (**)(void *, const void *, uint64_t))(v857 + 40))(v852, v853, v854);
      goto LABEL_409;
    }
    (*(void (**)(void *, uint64_t))(v857 + 8))(v852, v854);
    goto LABEL_408;
  }
  if (v856)
  {
LABEL_408:
    uint64_t v858 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v852, v853, *(void *)(*(void *)(v858 - 8) + 64));
    goto LABEL_409;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v854 - 8) + 32))(v852, v853, v854);
  __swift_storeEnumTagSinglePayload((uint64_t)v852, 0, 1, v854);
LABEL_409:
  long long v32 = v1255;
LABEL_410:
  uint64_t v859 = v32[11];
  uint64_t v860 = v30 + v859;
  uint64_t v861 = (uint64_t)&__src[v859];
  uint64_t v862 = (int *)type metadata accessor for FlightReservation(0);
  int v863 = __swift_getEnumTagSinglePayload(v860, 1, (uint64_t)v862);
  int v864 = __swift_getEnumTagSinglePayload(v861, 1, (uint64_t)v862);
  if (!v863)
  {
    if (v864)
    {
      outlined destroy of EmailDocument(v860, (void (*)(void))type metadata accessor for FlightReservation);
      goto LABEL_416;
    }
    uint64_t v874 = *(void *)(v861 + 8);
    *(void *)uint64_t v860 = *(void *)v861;
    *(void *)(v860 + 8) = v874;
    swift_bridgeObjectRelease();
    *(void *)(v860 + 16) = *(void *)(v861 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v860 + 24) = *(void *)(v861 + 24);
    swift_bridgeObjectRelease();
    uint64_t v875 = *(void *)(v861 + 40);
    *(void *)(v860 + 32) = *(void *)(v861 + 32);
    *(void *)(v860 + 40) = v875;
    swift_bridgeObjectRelease();
    uint64_t v876 = *(void *)(v861 + 56);
    *(void *)(v860 + 48) = *(void *)(v861 + 48);
    *(void *)(v860 + 56) = v876;
    swift_bridgeObjectRelease();
    uint64_t v877 = *(void *)(v861 + 72);
    *(void *)(v860 + 64) = *(void *)(v861 + 64);
    *(void *)(v860 + 72) = v877;
    swift_bridgeObjectRelease();
    uint64_t v878 = *(void *)(v861 + 88);
    *(void *)(v860 + 80) = *(void *)(v861 + 80);
    *(void *)(v860 + 88) = v878;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v860 + 96) = *(unsigned char *)(v861 + 96);
    uint64_t v879 = *(void *)(v861 + 112);
    *(void *)(v860 + 104) = *(void *)(v861 + 104);
    *(void *)(v860 + 112) = v879;
    swift_bridgeObjectRelease();
    uint64_t v880 = v862[13];
    uint64_t v881 = v860 + v880;
    v882 = (const void *)(v861 + v880);
    uint64_t v883 = type metadata accessor for URL();
    v1241 = (void *)v881;
    LODWORD(v881) = __swift_getEnumTagSinglePayload(v881, 1, v883);
    int v884 = __swift_getEnumTagSinglePayload((uint64_t)v882, 1, v883);
    if (v881)
    {
      if (v884)
      {
        size_t v885 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        v886 = v1241;
LABEL_430:
        memcpy(v886, v882, v885);
        goto LABEL_434;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v883 - 8) + 32))(v1241, v882, v883);
      __swift_storeEnumTagSinglePayload((uint64_t)v1241, 0, 1, v883);
    }
    else
    {
      uint64_t v906 = *(void *)(v883 - 8);
      if (v884)
      {
        (*(void (**)(void *, uint64_t))(v906 + 8))(v1241, v883);
        size_t v885 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        v886 = v1241;
        goto LABEL_430;
      }
      (*(void (**)(void *, const void *, uint64_t))(v906 + 40))(v1241, v882, v883);
    }
LABEL_434:
    uint64_t v907 = v862[14];
    uint64_t v908 = (const void *)(v861 + v907);
    v1242 = (void *)(v860 + v907);
    int v909 = __swift_getEnumTagSinglePayload(v860 + v907, 1, v883);
    int v910 = __swift_getEnumTagSinglePayload((uint64_t)v908, 1, v883);
    if (v909)
    {
      if (v910)
      {
        size_t v911 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        v912 = v1242;
LABEL_439:
        memcpy(v912, v908, v911);
        goto LABEL_442;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v883 - 8) + 32))(v1242, v908, v883);
      __swift_storeEnumTagSinglePayload((uint64_t)v1242, 0, 1, v883);
    }
    else
    {
      uint64_t v913 = *(void *)(v883 - 8);
      if (v910)
      {
        (*(void (**)(void *, uint64_t))(v913 + 8))(v1242, v883);
        size_t v911 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        v912 = v1242;
        goto LABEL_439;
      }
      (*(void (**)(void *, const void *, uint64_t))(v913 + 40))(v1242, v908, v883);
    }
LABEL_442:
    uint64_t v914 = v862[15];
    v915 = (void *)(v860 + v914);
    uint64_t v916 = (uint64_t *)(v861 + v914);
    uint64_t v918 = *v916;
    uint64_t v917 = v916[1];
    void *v915 = v918;
    v915[1] = v917;
    swift_bridgeObjectRelease();
    uint64_t v919 = v862[16];
    uint64_t v920 = (void *)(v860 + v919);
    uint64_t v921 = (uint64_t *)(v861 + v919);
    uint64_t v923 = *v921;
    uint64_t v922 = v921[1];
    *uint64_t v920 = v923;
    v920[1] = v922;
    swift_bridgeObjectRelease();
    uint64_t v924 = v862[17];
    v925 = (void *)(v860 + v924);
    v926 = (uint64_t *)(v861 + v924);
    uint64_t v928 = *v926;
    uint64_t v927 = v926[1];
    void *v925 = v928;
    v925[1] = v927;
    swift_bridgeObjectRelease();
    uint64_t v929 = v862[18];
    v1246 = (void *)(v860 + v929);
    uint64_t v930 = v861 + v929;
    uint64_t v931 = type metadata accessor for DateComponents();
    v932 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v931 - 8) + 40);
    v932(v1246, v930, v931);
    v932((void *)(v860 + v862[19]), v861 + v862[19], v931);
    uint64_t v933 = v862[20];
    v934 = (void *)(v860 + v933);
    v935 = (uint64_t *)(v861 + v933);
    uint64_t v937 = *v935;
    uint64_t v936 = v935[1];
    void *v934 = v937;
    v934[1] = v936;
    swift_bridgeObjectRelease();
    uint64_t v938 = v862[21];
    uint64_t v939 = (void *)(v860 + v938);
    v940 = (uint64_t *)(v861 + v938);
    uint64_t v942 = *v940;
    uint64_t v941 = v940[1];
    *uint64_t v939 = v942;
    v939[1] = v941;
    swift_bridgeObjectRelease();
    uint64_t v943 = v862[22];
    v944 = (void *)(v860 + v943);
    uint64_t v945 = (uint64_t *)(v861 + v943);
    uint64_t v947 = *v945;
    uint64_t v946 = v945[1];
    void *v944 = v947;
    v944[1] = v946;
    swift_bridgeObjectRelease();
    uint64_t v948 = v862[23];
    v949 = (void *)(v860 + v948);
    v950 = (uint64_t *)(v861 + v948);
    uint64_t v952 = *v950;
    uint64_t v951 = v950[1];
    void *v949 = v952;
    v949[1] = v951;
    swift_bridgeObjectRelease();
    uint64_t v953 = v862[24];
    uint64_t v954 = (void *)(v860 + v953);
    v955 = (uint64_t *)(v861 + v953);
    uint64_t v957 = *v955;
    uint64_t v956 = v955[1];
    *uint64_t v954 = v957;
    v954[1] = v956;
    swift_bridgeObjectRelease();
    uint64_t v958 = v862[25];
    v959 = (void *)(v860 + v958);
    uint64_t v960 = (uint64_t *)(v861 + v958);
    uint64_t v962 = *v960;
    uint64_t v961 = v960[1];
    void *v959 = v962;
    v959[1] = v961;
    swift_bridgeObjectRelease();
    uint64_t v963 = v862[26];
    v964 = (void *)(v860 + v963);
    v965 = (uint64_t *)(v861 + v963);
    uint64_t v967 = *v965;
    uint64_t v966 = v965[1];
    void *v964 = v967;
    v964[1] = v966;
    swift_bridgeObjectRelease();
    uint64_t v968 = v862[27];
    uint64_t v969 = (void *)(v860 + v968);
    v970 = (uint64_t *)(v861 + v968);
    uint64_t v972 = *v970;
    uint64_t v971 = v970[1];
    *uint64_t v969 = v972;
    v969[1] = v971;
    swift_bridgeObjectRelease();
    uint64_t v973 = v862[28];
    v974 = (void *)(v860 + v973);
    int v975 = (uint64_t *)(v861 + v973);
    uint64_t v977 = *v975;
    uint64_t v976 = v975[1];
    void *v974 = v977;
    v974[1] = v976;
    swift_bridgeObjectRelease();
    uint64_t v978 = v862[29];
    v979 = (void *)(v860 + v978);
    v980 = (uint64_t *)(v861 + v978);
    uint64_t v982 = *v980;
    uint64_t v981 = v980[1];
    void *v979 = v982;
    v979[1] = v981;
    swift_bridgeObjectRelease();
    uint64_t v983 = v862[30];
    uint64_t v984 = (void *)(v860 + v983);
    uint64_t v985 = (uint64_t *)(v861 + v983);
    uint64_t v987 = *v985;
    uint64_t v986 = v985[1];
    *uint64_t v984 = v987;
    v984[1] = v986;
    swift_bridgeObjectRelease();
    uint64_t v988 = v862[31];
    v989 = (void *)(v860 + v988);
    v990 = (uint64_t *)(v861 + v988);
    uint64_t v992 = *v990;
    uint64_t v991 = v990[1];
    void *v989 = v992;
    v989[1] = v991;
    swift_bridgeObjectRelease();
    uint64_t v993 = v862[32];
    long long v994 = (void *)(v860 + v993);
    uint64_t v995 = (uint64_t *)(v861 + v993);
    uint64_t v997 = *v995;
    uint64_t v996 = v995[1];
    *long long v994 = v997;
    v994[1] = v996;
    swift_bridgeObjectRelease();
    *(void *)(v860 + v862[33]) = *(void *)(v861 + v862[33]);
    swift_bridgeObjectRelease();
    *(void *)(v860 + v862[34]) = *(void *)(v861 + v862[34]);
    swift_bridgeObjectRelease();
    uint64_t v998 = v862[35];
    v999 = (void *)(v860 + v998);
    v1000 = (uint64_t *)(v861 + v998);
    uint64_t v1002 = *v1000;
    uint64_t v1001 = v1000[1];
    void *v999 = v1002;
    v999[1] = v1001;
    swift_bridgeObjectRelease();
    uint64_t v1003 = v862[36];
    uint64_t v1004 = (void *)(v860 + v1003);
    v1005 = (uint64_t *)(v861 + v1003);
    uint64_t v1007 = *v1005;
    uint64_t v1006 = v1005[1];
    *uint64_t v1004 = v1007;
    v1004[1] = v1006;
    swift_bridgeObjectRelease();
    uint64_t v1008 = v862[37];
    uint64_t v1009 = (void *)(v860 + v1008);
    v1010 = (uint64_t *)(v861 + v1008);
    uint64_t v1012 = *v1010;
    uint64_t v1011 = v1010[1];
    *uint64_t v1009 = v1012;
    v1009[1] = v1011;
    swift_bridgeObjectRelease();
    uint64_t v1013 = v862[38];
    uint64_t v1014 = (void *)(v860 + v1013);
    uint64_t v1015 = v861 + v1013;
    uint64_t v23 = v1253;
    int v1016 = __swift_getEnumTagSinglePayload(v860 + v1013, 1, v1253);
    v1247 = (void *)v1015;
    int v1017 = __swift_getEnumTagSinglePayload(v1015, 1, v1253);
    if (v1016)
    {
      uint64_t v30 = v1251;
      if (!v1017)
      {
        (*(void (**)(void *, void *, uint64_t))(v1254 + 32))(v1014, v1247, v1253);
        __swift_storeEnumTagSinglePayload((uint64_t)v1014, 0, 1, v1253);
LABEL_448:
        uint64_t v1019 = v862[39];
        int v1020 = (void *)(v860 + v1019);
        int v1021 = (uint64_t *)(v861 + v1019);
        uint64_t v1023 = *v1021;
        uint64_t v1022 = v1021[1];
        *int v1020 = v1023;
        v1020[1] = v1022;
        swift_bridgeObjectRelease();
        uint64_t v1024 = v862[40];
        uint64_t v1025 = (void *)(v860 + v1024);
        uint64_t v1026 = (uint64_t *)(v861 + v1024);
        uint64_t v1028 = *v1026;
        uint64_t v1027 = v1026[1];
        *uint64_t v1025 = v1028;
        v1025[1] = v1027;
        swift_bridgeObjectRelease();
        uint64_t v1029 = v862[41];
        uint64_t v1030 = v860 + v1029;
        uint64_t v1031 = v861 + v1029;
        *(void *)uint64_t v1030 = *(void *)v1031;
        *(unsigned char *)(v1030 + 8) = *(unsigned char *)(v1031 + 8);
        uint64_t v1032 = v862[42];
        v1033 = (void *)(v860 + v1032);
        v1034 = (uint64_t *)(v861 + v1032);
        uint64_t v1036 = *v1034;
        uint64_t v1035 = v1034[1];
        void *v1033 = v1036;
        v1033[1] = v1035;
        swift_bridgeObjectRelease();
        uint64_t v1037 = v862[43];
        uint64_t v1038 = v860 + v1037;
        uint64_t v1039 = v861 + v1037;
        *(_OWORD *)uint64_t v1038 = *(_OWORD *)v1039;
        *(void *)(v1038 + 13) = *(void *)(v1039 + 13);
        uint64_t v1040 = v862[44];
        uint64_t v1041 = (void *)(v860 + v1040);
        uint64_t v1042 = (uint64_t *)(v861 + v1040);
        uint64_t v1044 = *v1042;
        uint64_t v1043 = v1042[1];
        *uint64_t v1041 = v1044;
        v1041[1] = v1043;
        swift_bridgeObjectRelease();
        uint64_t v1045 = v862[45];
        uint64_t v1046 = (void *)(v860 + v1045);
        v1047 = (uint64_t *)(v861 + v1045);
        uint64_t v1049 = *v1047;
        uint64_t v1048 = v1047[1];
        *uint64_t v1046 = v1049;
        v1046[1] = v1048;
        swift_bridgeObjectRelease();
        uint64_t v1050 = v862[46];
        v1051 = (void *)(v860 + v1050);
        uint64_t v1052 = (uint64_t *)(v861 + v1050);
        uint64_t v1054 = *v1052;
        uint64_t v1053 = v1052[1];
        void *v1051 = v1054;
        v1051[1] = v1053;
        swift_bridgeObjectRelease();
        uint64_t v1055 = v862[47];
        v1056 = (void *)(v860 + v1055);
        v1057 = (uint64_t *)(v861 + v1055);
        uint64_t v1059 = *v1057;
        uint64_t v1058 = v1057[1];
        void *v1056 = v1059;
        v1056[1] = v1058;
        swift_bridgeObjectRelease();
        long long v32 = v1255;
        goto LABEL_449;
      }
    }
    else
    {
      uint64_t v30 = v1251;
      if (!v1017)
      {
        ((void (*)(void *, void *, uint64_t))v1252)(v1014, v1247, v1253);
        goto LABEL_448;
      }
      (*(void (**)(void *, uint64_t))(v1254 + 8))(v1014, v1253);
    }
    uint64_t v1018 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v1014, v1247, *(void *)(*(void *)(v1018 - 8) + 64));
    goto LABEL_448;
  }
  if (v864)
  {
LABEL_416:
    uint64_t v873 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
    memcpy((void *)v860, (const void *)v861, *(void *)(*(void *)(v873 - 8) + 64));
    goto LABEL_449;
  }
  long long v865 = *(_OWORD *)(v861 + 16);
  *(_OWORD *)uint64_t v860 = *(_OWORD *)v861;
  *(_OWORD *)(v860 + 16) = v865;
  long long v866 = *(_OWORD *)(v861 + 48);
  *(_OWORD *)(v860 + 32) = *(_OWORD *)(v861 + 32);
  *(_OWORD *)(v860 + 48) = v866;
  long long v867 = *(_OWORD *)(v861 + 80);
  *(_OWORD *)(v860 + 64) = *(_OWORD *)(v861 + 64);
  *(_OWORD *)(v860 + 80) = v867;
  *(unsigned char *)(v860 + 96) = *(unsigned char *)(v861 + 96);
  *(_OWORD *)(v860 + 104) = *(_OWORD *)(v861 + 104);
  uint64_t v868 = v862[13];
  uint64_t v869 = (void *)(v860 + v868);
  v870 = (const void *)(v861 + v868);
  uint64_t v871 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v870, 1, v871))
  {
    uint64_t v872 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v869, v870, *(void *)(*(void *)(v872 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v871 - 8) + 32))(v869, v870, v871);
    __swift_storeEnumTagSinglePayload((uint64_t)v869, 0, 1, v871);
  }
  uint64_t v887 = v862[14];
  int v888 = (void *)(v860 + v887);
  int v889 = (const void *)(v861 + v887);
  if (__swift_getEnumTagSinglePayload(v861 + v887, 1, v871))
  {
    uint64_t v890 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v888, v889, *(void *)(*(void *)(v890 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v871 - 8) + 32))(v888, v889, v871);
    __swift_storeEnumTagSinglePayload((uint64_t)v888, 0, 1, v871);
  }
  *(_OWORD *)(v860 + v862[15]) = *(_OWORD *)(v861 + v862[15]);
  *(_OWORD *)(v860 + v862[16]) = *(_OWORD *)(v861 + v862[16]);
  *(_OWORD *)(v860 + v862[17]) = *(_OWORD *)(v861 + v862[17]);
  uint64_t v891 = v862[18];
  uint64_t v892 = v860 + v891;
  uint64_t v893 = v861 + v891;
  uint64_t v894 = type metadata accessor for DateComponents();
  int v895 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v894 - 8) + 32);
  v895(v892, v893, v894);
  v895(v860 + v862[19], v861 + v862[19], v894);
  *(_OWORD *)(v860 + v862[20]) = *(_OWORD *)(v861 + v862[20]);
  *(_OWORD *)(v860 + v862[21]) = *(_OWORD *)(v861 + v862[21]);
  *(_OWORD *)(v860 + v862[22]) = *(_OWORD *)(v861 + v862[22]);
  *(_OWORD *)(v860 + v862[23]) = *(_OWORD *)(v861 + v862[23]);
  *(_OWORD *)(v860 + v862[24]) = *(_OWORD *)(v861 + v862[24]);
  *(_OWORD *)(v860 + v862[25]) = *(_OWORD *)(v861 + v862[25]);
  *(_OWORD *)(v860 + v862[26]) = *(_OWORD *)(v861 + v862[26]);
  *(_OWORD *)(v860 + v862[27]) = *(_OWORD *)(v861 + v862[27]);
  *(_OWORD *)(v860 + v862[28]) = *(_OWORD *)(v861 + v862[28]);
  *(_OWORD *)(v860 + v862[29]) = *(_OWORD *)(v861 + v862[29]);
  *(_OWORD *)(v860 + v862[30]) = *(_OWORD *)(v861 + v862[30]);
  *(_OWORD *)(v860 + v862[31]) = *(_OWORD *)(v861 + v862[31]);
  *(_OWORD *)(v860 + v862[32]) = *(_OWORD *)(v861 + v862[32]);
  *(void *)(v860 + v862[33]) = *(void *)(v861 + v862[33]);
  *(void *)(v860 + v862[34]) = *(void *)(v861 + v862[34]);
  *(_OWORD *)(v860 + v862[35]) = *(_OWORD *)(v861 + v862[35]);
  *(_OWORD *)(v860 + v862[36]) = *(_OWORD *)(v861 + v862[36]);
  *(_OWORD *)(v860 + v862[37]) = *(_OWORD *)(v861 + v862[37]);
  uint64_t v896 = v862[38];
  uint64_t v897 = (void *)(v860 + v896);
  uint64_t v898 = (const void *)(v861 + v896);
  uint64_t v23 = v1253;
  if (__swift_getEnumTagSinglePayload(v861 + v896, 1, v1253))
  {
    uint64_t v899 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v897, v898, *(void *)(*(void *)(v899 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1254 + 32))(v897, v898, v1253);
    __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, v1253);
  }
  long long v32 = v1255;
  *(_OWORD *)(v860 + v862[39]) = *(_OWORD *)(v861 + v862[39]);
  *(_OWORD *)(v860 + v862[40]) = *(_OWORD *)(v861 + v862[40]);
  uint64_t v900 = v862[41];
  uint64_t v901 = v860 + v900;
  uint64_t v902 = v861 + v900;
  *(void *)uint64_t v901 = *(void *)v902;
  *(unsigned char *)(v901 + 8) = *(unsigned char *)(v902 + 8);
  *(_OWORD *)(v860 + v862[42]) = *(_OWORD *)(v861 + v862[42]);
  uint64_t v903 = v862[43];
  uint64_t v904 = v860 + v903;
  uint64_t v905 = v861 + v903;
  *(_OWORD *)uint64_t v904 = *(_OWORD *)v905;
  *(void *)(v904 + 13) = *(void *)(v905 + 13);
  *(_OWORD *)(v860 + v862[44]) = *(_OWORD *)(v861 + v862[44]);
  *(_OWORD *)(v860 + v862[45]) = *(_OWORD *)(v861 + v862[45]);
  *(_OWORD *)(v860 + v862[46]) = *(_OWORD *)(v861 + v862[46]);
  *(_OWORD *)(v860 + v862[47]) = *(_OWORD *)(v861 + v862[47]);
  __swift_storeEnumTagSinglePayload(v860, 0, 1, (uint64_t)v862);
  uint64_t v30 = v1251;
LABEL_449:
  uint64_t v1060 = v32[12];
  uint64_t v1061 = v30 + v1060;
  uint64_t v1062 = (uint64_t)&__src[v1060];
  v1063 = (int *)type metadata accessor for HotelReservation(0);
  int v1064 = __swift_getEnumTagSinglePayload(v1061, 1, (uint64_t)v1063);
  int v1065 = __swift_getEnumTagSinglePayload(v1062, 1, (uint64_t)v1063);
  if (!v1064)
  {
    if (v1065)
    {
      outlined destroy of EmailDocument(v1061, (void (*)(void))type metadata accessor for HotelReservation);
      goto LABEL_455;
    }
    uint64_t v1075 = *(void *)(v1062 + 8);
    *(void *)uint64_t v1061 = *(void *)v1062;
    *(void *)(v1061 + 8) = v1075;
    swift_bridgeObjectRelease();
    *(void *)(v1061 + 16) = *(void *)(v1062 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v1061 + 24) = *(void *)(v1062 + 24);
    swift_bridgeObjectRelease();
    uint64_t v1076 = *(void *)(v1062 + 40);
    *(void *)(v1061 + 32) = *(void *)(v1062 + 32);
    *(void *)(v1061 + 40) = v1076;
    swift_bridgeObjectRelease();
    uint64_t v1077 = *(void *)(v1062 + 56);
    *(void *)(v1061 + 48) = *(void *)(v1062 + 48);
    *(void *)(v1061 + 56) = v1077;
    swift_bridgeObjectRelease();
    uint64_t v1078 = *(void *)(v1062 + 72);
    *(void *)(v1061 + 64) = *(void *)(v1062 + 64);
    *(void *)(v1061 + 72) = v1078;
    swift_bridgeObjectRelease();
    uint64_t v1079 = *(void *)(v1062 + 88);
    *(void *)(v1061 + 80) = *(void *)(v1062 + 80);
    *(void *)(v1061 + 88) = v1079;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1061 + 96) = *(unsigned char *)(v1062 + 96);
    uint64_t v1080 = *(void *)(v1062 + 112);
    *(void *)(v1061 + 104) = *(void *)(v1062 + 104);
    *(void *)(v1061 + 112) = v1080;
    swift_bridgeObjectRelease();
    uint64_t v1081 = *(void *)(v1062 + 128);
    *(void *)(v1061 + 120) = *(void *)(v1062 + 120);
    *(void *)(v1061 + 128) = v1081;
    swift_bridgeObjectRelease();
    uint64_t v1082 = v1063[14];
    uint64_t v1083 = v1061 + v1082;
    uint64_t v1084 = (const void *)(v1062 + v1082);
    uint64_t v1085 = type metadata accessor for DateComponents();
    v1243 = (void *)v1083;
    LODWORD(v1083) = __swift_getEnumTagSinglePayload(v1083, 1, v1085);
    v1248 = (void *)v1085;
    int v1086 = __swift_getEnumTagSinglePayload((uint64_t)v1084, 1, v1085);
    if (v1083)
    {
      if (v1086)
      {
        size_t v1087 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                      - 8)
                          + 64);
        v1088 = v1243;
LABEL_466:
        memcpy(v1088, v1084, v1087);
        goto LABEL_470;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1085 - 8) + 32))(v1243, v1084, v1085);
      __swift_storeEnumTagSinglePayload((uint64_t)v1243, 0, 1, v1085);
    }
    else
    {
      uint64_t v1102 = *(void *)(v1085 - 8);
      if (v1086)
      {
        (*(void (**)(void *, uint64_t))(v1102 + 8))(v1243, v1085);
        size_t v1087 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                      - 8)
                          + 64);
        v1088 = v1243;
        goto LABEL_466;
      }
      (*(void (**)(void *, const void *, uint64_t))(v1102 + 40))(v1243, v1084, v1085);
    }
LABEL_470:
    uint64_t v1103 = v1063[15];
    uint64_t v1104 = (const void *)(v1062 + v1103);
    v1244 = (void *)(v1061 + v1103);
    int v1105 = __swift_getEnumTagSinglePayload(v1061 + v1103, 1, (uint64_t)v1248);
    int v1106 = __swift_getEnumTagSinglePayload((uint64_t)v1104, 1, (uint64_t)v1248);
    if (v1105)
    {
      if (!v1106)
      {
        (*(void (**)(void *, const void *, void *))(*(v1248 - 1) + 32))(v1244, v1104, v1248);
        __swift_storeEnumTagSinglePayload((uint64_t)v1244, 0, 1, (uint64_t)v1248);
        goto LABEL_478;
      }
      size_t v1107 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                    - 8)
                        + 64);
      int v1108 = v1244;
    }
    else
    {
      uint64_t v1109 = *(v1248 - 1);
      if (!v1106)
      {
        (*(void (**)(void *, const void *, void *))(v1109 + 40))(v1244, v1104, v1248);
        goto LABEL_478;
      }
      (*(void (**)(void *, void *))(v1109 + 8))(v1244, v1248);
      size_t v1107 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                    - 8)
                        + 64);
      int v1108 = v1244;
    }
    memcpy(v1108, v1104, v1107);
LABEL_478:
    uint64_t v23 = v1253;
    uint64_t v1110 = v1063[16];
    uint64_t v1111 = (void *)(v1061 + v1110);
    v1112 = (uint64_t *)(v1062 + v1110);
    uint64_t v1114 = *v1112;
    uint64_t v1113 = v1112[1];
    *uint64_t v1111 = v1114;
    v1111[1] = v1113;
    swift_bridgeObjectRelease();
    uint64_t v1115 = v1063[17];
    v1116 = (void *)(v1061 + v1115);
    uint64_t v1117 = (uint64_t *)(v1062 + v1115);
    uint64_t v1119 = *v1117;
    uint64_t v1118 = v1117[1];
    void *v1116 = v1119;
    v1116[1] = v1118;
    swift_bridgeObjectRelease();
    uint64_t v1120 = v1063[18];
    v1121 = (void *)(v1061 + v1120);
    v1122 = (uint64_t *)(v1062 + v1120);
    uint64_t v1124 = *v1122;
    uint64_t v1123 = v1122[1];
    void *v1121 = v1124;
    v1121[1] = v1123;
    swift_bridgeObjectRelease();
    uint64_t v1125 = v1063[19];
    uint64_t v1126 = (void *)(v1061 + v1125);
    v1127 = (uint64_t *)(v1062 + v1125);
    uint64_t v1129 = *v1127;
    uint64_t v1128 = v1127[1];
    *uint64_t v1126 = v1129;
    v1126[1] = v1128;
    swift_bridgeObjectRelease();
    uint64_t v1130 = v1063[20];
    v1131 = (void *)(v1061 + v1130);
    uint64_t v1132 = (uint64_t *)(v1062 + v1130);
    uint64_t v1134 = *v1132;
    uint64_t v1133 = v1132[1];
    void *v1131 = v1134;
    v1131[1] = v1133;
    swift_bridgeObjectRelease();
    *(void *)(v1061 + v1063[21]) = *(void *)(v1062 + v1063[21]);
    swift_bridgeObjectRelease();
    *(void *)(v1061 + v1063[22]) = *(void *)(v1062 + v1063[22]);
    swift_bridgeObjectRelease();
    uint64_t v1135 = v1063[23];
    uint64_t v1136 = v1061 + v1135;
    uint64_t v1137 = v1062 + v1135;
    *(void *)uint64_t v1136 = *(void *)v1137;
    *(unsigned char *)(v1136 + 8) = *(unsigned char *)(v1137 + 8);
    uint64_t v1138 = v1063[24];
    uint64_t v1139 = v1061 + v1138;
    uint64_t v1140 = v1062 + v1138;
    *(unsigned char *)(v1139 + 8) = *(unsigned char *)(v1140 + 8);
    *(void *)uint64_t v1139 = *(void *)v1140;
    uint64_t v1141 = v1063[25];
    v1142 = (void *)(v1061 + v1141);
    uint64_t v1143 = (uint64_t *)(v1062 + v1141);
    uint64_t v1145 = *v1143;
    uint64_t v1144 = v1143[1];
    void *v1142 = v1145;
    v1142[1] = v1144;
    swift_bridgeObjectRelease();
    uint64_t v1146 = v1063[26];
    v1147 = (void *)(v1061 + v1146);
    v1148 = (uint64_t *)(v1062 + v1146);
    uint64_t v1150 = *v1148;
    uint64_t v1149 = v1148[1];
    void *v1147 = v1150;
    v1147[1] = v1149;
    swift_bridgeObjectRelease();
    uint64_t v1151 = v1063[27];
    uint64_t v1152 = (void *)(v1061 + v1151);
    uint64_t v1153 = (uint64_t *)(v1062 + v1151);
    uint64_t v1155 = *v1153;
    uint64_t v1154 = v1153[1];
    *uint64_t v1152 = v1155;
    v1152[1] = v1154;
    swift_bridgeObjectRelease();
    uint64_t v1156 = v1063[28];
    uint64_t v1157 = (void *)(v1061 + v1156);
    uint64_t v1158 = (uint64_t *)(v1062 + v1156);
    uint64_t v1160 = *v1158;
    uint64_t v1159 = v1158[1];
    *uint64_t v1157 = v1160;
    v1157[1] = v1159;
    swift_bridgeObjectRelease();
    uint64_t v1161 = v1063[29];
    uint64_t v1162 = v1061 + v1161;
    uint64_t v1163 = v1062 + v1161;
    *(void *)uint64_t v1162 = *(void *)v1163;
    *(unsigned char *)(v1162 + 8) = *(unsigned char *)(v1163 + 8);
    long long v32 = v1255;
    goto LABEL_479;
  }
  if (v1065)
  {
LABEL_455:
    uint64_t v1074 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
    memcpy((void *)v1061, (const void *)v1062, *(void *)(*(void *)(v1074 - 8) + 64));
    goto LABEL_479;
  }
  long long v1066 = *(_OWORD *)(v1062 + 16);
  *(_OWORD *)uint64_t v1061 = *(_OWORD *)v1062;
  *(_OWORD *)(v1061 + 16) = v1066;
  long long v1067 = *(_OWORD *)(v1062 + 48);
  *(_OWORD *)(v1061 + 32) = *(_OWORD *)(v1062 + 32);
  *(_OWORD *)(v1061 + 48) = v1067;
  long long v1068 = *(_OWORD *)(v1062 + 80);
  *(_OWORD *)(v1061 + 64) = *(_OWORD *)(v1062 + 64);
  *(_OWORD *)(v1061 + 80) = v1068;
  *(unsigned char *)(v1061 + 96) = *(unsigned char *)(v1062 + 96);
  *(_OWORD *)(v1061 + 104) = *(_OWORD *)(v1062 + 104);
  *(_OWORD *)(v1061 + 120) = *(_OWORD *)(v1062 + 120);
  uint64_t v1069 = v1063[14];
  uint64_t v1070 = (void *)(v1061 + v1069);
  uint64_t v1071 = (const void *)(v1062 + v1069);
  uint64_t v1072 = type metadata accessor for DateComponents();
  if (__swift_getEnumTagSinglePayload((uint64_t)v1071, 1, v1072))
  {
    uint64_t v1073 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1070, v1071, *(void *)(*(void *)(v1073 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1072 - 8) + 32))(v1070, v1071, v1072);
    __swift_storeEnumTagSinglePayload((uint64_t)v1070, 0, 1, v1072);
  }
  uint64_t v1089 = v1063[15];
  uint64_t v1090 = (void *)(v1061 + v1089);
  v1091 = (const void *)(v1062 + v1089);
  if (__swift_getEnumTagSinglePayload(v1062 + v1089, 1, v1072))
  {
    uint64_t v1092 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1090, v1091, *(void *)(*(void *)(v1092 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1072 - 8) + 32))(v1090, v1091, v1072);
    __swift_storeEnumTagSinglePayload((uint64_t)v1090, 0, 1, v1072);
  }
  long long v32 = v1255;
  *(_OWORD *)(v1061 + v1063[16]) = *(_OWORD *)(v1062 + v1063[16]);
  *(_OWORD *)(v1061 + v1063[17]) = *(_OWORD *)(v1062 + v1063[17]);
  *(_OWORD *)(v1061 + v1063[18]) = *(_OWORD *)(v1062 + v1063[18]);
  *(_OWORD *)(v1061 + v1063[19]) = *(_OWORD *)(v1062 + v1063[19]);
  *(_OWORD *)(v1061 + v1063[20]) = *(_OWORD *)(v1062 + v1063[20]);
  *(void *)(v1061 + v1063[21]) = *(void *)(v1062 + v1063[21]);
  *(void *)(v1061 + v1063[22]) = *(void *)(v1062 + v1063[22]);
  uint64_t v1093 = v1063[23];
  uint64_t v1094 = v1061 + v1093;
  uint64_t v1095 = v1062 + v1093;
  *(unsigned char *)(v1094 + 8) = *(unsigned char *)(v1095 + 8);
  *(void *)uint64_t v1094 = *(void *)v1095;
  uint64_t v1096 = v1063[24];
  uint64_t v1097 = v1061 + v1096;
  uint64_t v1098 = v1062 + v1096;
  *(unsigned char *)(v1097 + 8) = *(unsigned char *)(v1098 + 8);
  *(void *)uint64_t v1097 = *(void *)v1098;
  *(_OWORD *)(v1061 + v1063[25]) = *(_OWORD *)(v1062 + v1063[25]);
  *(_OWORD *)(v1061 + v1063[26]) = *(_OWORD *)(v1062 + v1063[26]);
  *(_OWORD *)(v1061 + v1063[27]) = *(_OWORD *)(v1062 + v1063[27]);
  *(_OWORD *)(v1061 + v1063[28]) = *(_OWORD *)(v1062 + v1063[28]);
  uint64_t v1099 = v1063[29];
  uint64_t v1100 = v1061 + v1099;
  uint64_t v1101 = v1062 + v1099;
  *(void *)uint64_t v1100 = *(void *)v1101;
  *(unsigned char *)(v1100 + 8) = *(unsigned char *)(v1101 + 8);
  __swift_storeEnumTagSinglePayload(v1061, 0, 1, (uint64_t)v1063);
  uint64_t v30 = v1251;
LABEL_479:
  uint64_t v1164 = v32[13];
  uint64_t v1165 = v30 + v1164;
  uint64_t v1166 = (uint64_t)&__src[v1164];
  v1167 = (int *)type metadata accessor for RestaurantReservation(0);
  int v1168 = __swift_getEnumTagSinglePayload(v1165, 1, (uint64_t)v1167);
  int v1169 = __swift_getEnumTagSinglePayload(v1166, 1, (uint64_t)v1167);
  if (v1168)
  {
    if (!v1169)
    {
      long long v1170 = *(_OWORD *)(v1166 + 16);
      *(_OWORD *)uint64_t v1165 = *(_OWORD *)v1166;
      *(_OWORD *)(v1165 + 16) = v1170;
      long long v1171 = *(_OWORD *)(v1166 + 48);
      *(_OWORD *)(v1165 + 32) = *(_OWORD *)(v1166 + 32);
      *(_OWORD *)(v1165 + 48) = v1171;
      long long v1172 = *(_OWORD *)(v1166 + 80);
      *(_OWORD *)(v1165 + 64) = *(_OWORD *)(v1166 + 64);
      *(_OWORD *)(v1165 + 80) = v1172;
      *(unsigned char *)(v1165 + 96) = *(unsigned char *)(v1166 + 96);
      *(_OWORD *)(v1165 + 104) = *(_OWORD *)(v1166 + 104);
      *(_OWORD *)(v1165 + 120) = *(_OWORD *)(v1166 + 120);
      uint64_t v1173 = v1167[14];
      uint64_t v1174 = (void *)(v1165 + v1173);
      v1175 = (const void *)(v1166 + v1173);
      uint64_t v1176 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v1175, 1, v1176))
      {
        uint64_t v1177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v1174, v1175, *(void *)(*(void *)(v1177 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1176 - 8) + 32))(v1174, v1175, v1176);
        __swift_storeEnumTagSinglePayload((uint64_t)v1174, 0, 1, v1176);
      }
      *(_OWORD *)(v1165 + v1167[15]) = *(_OWORD *)(v1166 + v1167[15]);
      *(_OWORD *)(v1165 + v1167[16]) = *(_OWORD *)(v1166 + v1167[16]);
      *(_OWORD *)(v1165 + v1167[17]) = *(_OWORD *)(v1166 + v1167[17]);
      *(_OWORD *)(v1165 + v1167[18]) = *(_OWORD *)(v1166 + v1167[18]);
      *(_OWORD *)(v1165 + v1167[19]) = *(_OWORD *)(v1166 + v1167[19]);
      *(void *)(v1165 + v1167[20]) = *(void *)(v1166 + v1167[20]);
      *(_OWORD *)(v1165 + v1167[21]) = *(_OWORD *)(v1166 + v1167[21]);
      *(_OWORD *)(v1165 + v1167[22]) = *(_OWORD *)(v1166 + v1167[22]);
      *(_OWORD *)(v1165 + v1167[23]) = *(_OWORD *)(v1166 + v1167[23]);
      uint64_t v276 = v1165;
      uint64_t v275 = (uint64_t)v1167;
LABEL_110:
      __swift_storeEnumTagSinglePayload(v276, 0, 1, v275);
      goto LABEL_111;
    }
    goto LABEL_485;
  }
  if (v1169)
  {
    outlined destroy of EmailDocument(v1165, (void (*)(void))type metadata accessor for RestaurantReservation);
LABEL_485:
    size_t v41 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?)
                                - 8)
                    + 64);
    uint64_t v42 = (void *)v1165;
    uint64_t v43 = (const void *)v1166;
    goto LABEL_13;
  }
  uint64_t v1178 = *(void *)(v1166 + 8);
  *(void *)uint64_t v1165 = *(void *)v1166;
  *(void *)(v1165 + 8) = v1178;
  swift_bridgeObjectRelease();
  *(void *)(v1165 + 16) = *(void *)(v1166 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v1165 + 24) = *(void *)(v1166 + 24);
  swift_bridgeObjectRelease();
  uint64_t v1179 = *(void *)(v1166 + 40);
  *(void *)(v1165 + 32) = *(void *)(v1166 + 32);
  *(void *)(v1165 + 40) = v1179;
  swift_bridgeObjectRelease();
  uint64_t v1180 = *(void *)(v1166 + 56);
  *(void *)(v1165 + 48) = *(void *)(v1166 + 48);
  *(void *)(v1165 + 56) = v1180;
  swift_bridgeObjectRelease();
  uint64_t v1181 = *(void *)(v1166 + 72);
  *(void *)(v1165 + 64) = *(void *)(v1166 + 64);
  *(void *)(v1165 + 72) = v1181;
  swift_bridgeObjectRelease();
  uint64_t v1182 = *(void *)(v1166 + 88);
  *(void *)(v1165 + 80) = *(void *)(v1166 + 80);
  *(void *)(v1165 + 88) = v1182;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1165 + 96) = *(unsigned char *)(v1166 + 96);
  uint64_t v1183 = *(void *)(v1166 + 112);
  *(void *)(v1165 + 104) = *(void *)(v1166 + 104);
  *(void *)(v1165 + 112) = v1183;
  swift_bridgeObjectRelease();
  uint64_t v1184 = *(void *)(v1166 + 128);
  *(void *)(v1165 + 120) = *(void *)(v1166 + 120);
  *(void *)(v1165 + 128) = v1184;
  swift_bridgeObjectRelease();
  uint64_t v1185 = v1167[14];
  uint64_t v1186 = v1165 + v1185;
  v1187 = (const void *)(v1166 + v1185);
  uint64_t v1188 = type metadata accessor for DateComponents();
  uint64_t v1256 = v1186;
  LODWORD(v1186) = __swift_getEnumTagSinglePayload(v1186, 1, v1188);
  int v1189 = __swift_getEnumTagSinglePayload((uint64_t)v1187, 1, v1188);
  if (v1186)
  {
    if (!v1189)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v1188 - 8) + 32))(v1256, v1187, v1188);
      __swift_storeEnumTagSinglePayload(v1256, 0, 1, v1188);
      goto LABEL_496;
    }
    size_t v1190 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                  - 8)
                      + 64);
    v1191 = (void *)v1256;
  }
  else
  {
    uint64_t v1192 = *(void *)(v1188 - 8);
    if (!v1189)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v1192 + 40))(v1256, v1187, v1188);
      goto LABEL_496;
    }
    (*(void (**)(uint64_t, uint64_t))(v1192 + 8))(v1256, v1188);
    size_t v1190 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                  - 8)
                      + 64);
    v1191 = (void *)v1256;
  }
  memcpy(v1191, v1187, v1190);
LABEL_496:
  uint64_t v1193 = v1167[15];
  v1194 = (void *)(v1165 + v1193);
  v1195 = (uint64_t *)(v1166 + v1193);
  uint64_t v1197 = *v1195;
  uint64_t v1196 = v1195[1];
  void *v1194 = v1197;
  v1194[1] = v1196;
  swift_bridgeObjectRelease();
  uint64_t v1198 = v1167[16];
  v1199 = (void *)(v1165 + v1198);
  v1200 = (uint64_t *)(v1166 + v1198);
  uint64_t v1202 = *v1200;
  uint64_t v1201 = v1200[1];
  void *v1199 = v1202;
  v1199[1] = v1201;
  swift_bridgeObjectRelease();
  uint64_t v1203 = v1167[17];
  v1204 = (void *)(v1165 + v1203);
  v1205 = (uint64_t *)(v1166 + v1203);
  uint64_t v1207 = *v1205;
  uint64_t v1206 = v1205[1];
  void *v1204 = v1207;
  v1204[1] = v1206;
  swift_bridgeObjectRelease();
  uint64_t v1208 = v1167[18];
  v1209 = (void *)(v1165 + v1208);
  v1210 = (uint64_t *)(v1166 + v1208);
  uint64_t v1212 = *v1210;
  uint64_t v1211 = v1210[1];
  void *v1209 = v1212;
  v1209[1] = v1211;
  swift_bridgeObjectRelease();
  uint64_t v1213 = v1167[19];
  v1214 = (void *)(v1165 + v1213);
  v1215 = (uint64_t *)(v1166 + v1213);
  uint64_t v1217 = *v1215;
  uint64_t v1216 = v1215[1];
  void *v1214 = v1217;
  v1214[1] = v1216;
  swift_bridgeObjectRelease();
  *(void *)(v1165 + v1167[20]) = *(void *)(v1166 + v1167[20]);
  swift_bridgeObjectRelease();
  uint64_t v1218 = v1167[21];
  v1219 = (void *)(v1165 + v1218);
  v1220 = (uint64_t *)(v1166 + v1218);
  uint64_t v1222 = *v1220;
  uint64_t v1221 = v1220[1];
  void *v1219 = v1222;
  v1219[1] = v1221;
  swift_bridgeObjectRelease();
  uint64_t v1223 = v1167[22];
  uint64_t v1224 = (void *)(v1165 + v1223);
  v1225 = (uint64_t *)(v1166 + v1223);
  uint64_t v1227 = *v1225;
  uint64_t v1226 = v1225[1];
  *uint64_t v1224 = v1227;
  v1224[1] = v1226;
  swift_bridgeObjectRelease();
  uint64_t v1228 = v1167[23];
  v1229 = (void *)(v1165 + v1228);
  v1230 = (uint64_t *)(v1166 + v1228);
  uint64_t v1232 = *v1230;
  uint64_t v1231 = v1230[1];
  void *v1229 = v1232;
  v1229[1] = v1231;
  swift_bridgeObjectRelease();
LABEL_111:
  uint64_t v277 = a3[22];
  long long v278 = (void *)((char *)a1 + v277);
  long long v279 = (void *)((char *)a2 + v277);
  uint64_t v280 = (int *)type metadata accessor for PreExtractedCard(0);
  int v281 = __swift_getEnumTagSinglePayload((uint64_t)v278, 1, (uint64_t)v280);
  int v282 = __swift_getEnumTagSinglePayload((uint64_t)v279, 1, (uint64_t)v280);
  if (!v281)
  {
    if (v282)
    {
      outlined destroy of EmailDocument((uint64_t)v278, (void (*)(void))type metadata accessor for PreExtractedCard);
      goto LABEL_117;
    }
    uint64_t v291 = v279[1];
    *long long v278 = *v279;
    v278[1] = v291;
    swift_bridgeObjectRelease();
    uint64_t v292 = v279[3];
    v278[2] = v279[2];
    v278[3] = v292;
    swift_bridgeObjectRelease();
    uint64_t v293 = v279[5];
    v278[4] = v279[4];
    v278[5] = v293;
    swift_bridgeObjectRelease();
    uint64_t v294 = v279[7];
    v278[6] = v279[6];
    v278[7] = v294;
    swift_bridgeObjectRelease();
    uint64_t v295 = v279[9];
    v278[8] = v279[8];
    v278[9] = v295;
    swift_bridgeObjectRelease();
    uint64_t v296 = v279[11];
    v278[10] = v279[10];
    v278[11] = v296;
    swift_bridgeObjectRelease();
    uint64_t v297 = v280[10];
    uint64_t v298 = (char *)v278 + v297;
    v299 = (char *)v279 + v297;
    int v300 = __swift_getEnumTagSinglePayload((uint64_t)v278 + v297, 1, v23);
    int v301 = __swift_getEnumTagSinglePayload((uint64_t)v299, 1, v23);
    if (v300)
    {
      if (!v301)
      {
        (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v298, v299, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v298, 0, 1, v23);
        goto LABEL_132;
      }
    }
    else
    {
      if (!v301)
      {
        ((void (*)(char *, char *, uint64_t))v1252)(v298, v299, v23);
LABEL_132:
        uint64_t v311 = v280[11];
        uint64_t v312 = (char *)v278 + v311;
        uint64_t v313 = (char *)v279 + v311;
        int v314 = __swift_getEnumTagSinglePayload((uint64_t)v278 + v311, 1, v23);
        int v315 = __swift_getEnumTagSinglePayload((uint64_t)v313, 1, v23);
        if (v314)
        {
          if (!v315)
          {
            (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v312, v313, v23);
            __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, v23);
            goto LABEL_138;
          }
        }
        else
        {
          if (!v315)
          {
            ((void (*)(char *, char *, uint64_t))v1252)(v312, v313, v23);
LABEL_138:
            uint64_t v317 = v280[12];
            uint64_t v318 = (void *)((char *)v278 + v317);
            uint64_t v319 = (void *)((char *)v279 + v317);
            uint64_t v321 = *v319;
            uint64_t v320 = v319[1];
            void *v318 = v321;
            v318[1] = v320;
            swift_bridgeObjectRelease();
            uint64_t v322 = v280[13];
            v323 = (void *)((char *)v278 + v322);
            uint64_t v324 = (void *)((char *)v279 + v322);
            uint64_t v326 = *v324;
            uint64_t v325 = v324[1];
            void *v323 = v326;
            v323[1] = v325;
            swift_bridgeObjectRelease();
            uint64_t v327 = v280[14];
            uint64_t v328 = (void *)((char *)v278 + v327);
            uint64_t v329 = (void *)((char *)v279 + v327);
            uint64_t v331 = *v329;
            uint64_t v330 = v329[1];
            void *v328 = v331;
            v328[1] = v330;
            swift_bridgeObjectRelease();
            uint64_t v332 = v280[15];
            int v333 = (char *)v278 + v332;
            uint64_t v334 = (char *)v279 + v332;
            int v335 = __swift_getEnumTagSinglePayload((uint64_t)v278 + v332, 1, v23);
            int v336 = __swift_getEnumTagSinglePayload((uint64_t)v334, 1, v23);
            if (v335)
            {
              if (!v336)
              {
                (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v333, v334, v23);
                __swift_storeEnumTagSinglePayload((uint64_t)v333, 0, 1, v23);
LABEL_144:
                uint64_t v338 = v280[16];
                uint64_t v339 = (void *)((char *)v278 + v338);
                uint64_t v340 = (void *)((char *)v279 + v338);
                uint64_t v342 = *v340;
                uint64_t v341 = v340[1];
                void *v339 = v342;
                v339[1] = v341;
                swift_bridgeObjectRelease();
                uint64_t v343 = v280[17];
                int v344 = (void *)((char *)v278 + v343);
                uint64_t v345 = (void *)((char *)v279 + v343);
                uint64_t v347 = *v345;
                uint64_t v346 = v345[1];
                *int v344 = v347;
                v344[1] = v346;
                swift_bridgeObjectRelease();
                uint64_t v348 = v280[18];
                uint64_t v349 = (void *)((char *)v278 + v348);
                v350 = (void *)((char *)v279 + v348);
                uint64_t v352 = *v350;
                uint64_t v351 = v350[1];
                *uint64_t v349 = v352;
                v349[1] = v351;
                swift_bridgeObjectRelease();
                uint64_t v353 = v280[19];
                uint64_t v354 = (void *)((char *)v278 + v353);
                uint64_t v355 = (void *)((char *)v279 + v353);
                uint64_t v357 = *v355;
                uint64_t v356 = v355[1];
                void *v354 = v357;
                v354[1] = v356;
                swift_bridgeObjectRelease();
                uint64_t v358 = v280[20];
                uint64_t v359 = (void *)((char *)v278 + v358);
                v360 = (void *)((char *)v279 + v358);
                uint64_t v362 = *v360;
                uint64_t v361 = v360[1];
                *uint64_t v359 = v362;
                v359[1] = v361;
                swift_bridgeObjectRelease();
                uint64_t v363 = v280[21];
                v364 = (void *)((char *)v278 + v363);
                uint64_t v365 = (void *)((char *)v279 + v363);
                uint64_t v367 = *v365;
                uint64_t v366 = v365[1];
                void *v364 = v367;
                v364[1] = v366;
                swift_bridgeObjectRelease();
                uint64_t v368 = v280[22];
                uint64_t v369 = (void *)((char *)v278 + v368);
                uint64_t v370 = (void *)((char *)v279 + v368);
                uint64_t v372 = *v370;
                uint64_t v371 = v370[1];
                void *v369 = v372;
                v369[1] = v371;
                swift_bridgeObjectRelease();
                uint64_t v373 = v280[23];
                uint64_t v374 = (void *)((char *)v278 + v373);
                uint64_t v375 = (void *)((char *)v279 + v373);
                uint64_t v377 = *v375;
                uint64_t v376 = v375[1];
                *uint64_t v374 = v377;
                v374[1] = v376;
                swift_bridgeObjectRelease();
                goto LABEL_145;
              }
            }
            else
            {
              if (!v336)
              {
                ((void (*)(char *, char *, uint64_t))v1252)(v333, v334, v23);
                goto LABEL_144;
              }
              (*(void (**)(char *, uint64_t))(v1254 + 8))(v333, v23);
            }
            uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v333, v334, *(void *)(*(void *)(v337 - 8) + 64));
            goto LABEL_144;
          }
          (*(void (**)(char *, uint64_t))(v1254 + 8))(v312, v23);
        }
        uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v312, v313, *(void *)(*(void *)(v316 - 8) + 64));
        goto LABEL_138;
      }
      (*(void (**)(char *, uint64_t))(v1254 + 8))(v298, v23);
    }
    uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v298, v299, *(void *)(*(void *)(v310 - 8) + 64));
    goto LABEL_132;
  }
  if (v282)
  {
LABEL_117:
    uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v278, v279, *(void *)(*(void *)(v290 - 8) + 64));
    goto LABEL_145;
  }
  long long v283 = *((_OWORD *)v279 + 1);
  *(_OWORD *)long long v278 = *(_OWORD *)v279;
  *((_OWORD *)v278 + 1) = v283;
  long long v284 = *((_OWORD *)v279 + 3);
  *((_OWORD *)v278 + 2) = *((_OWORD *)v279 + 2);
  *((_OWORD *)v278 + 3) = v284;
  long long v285 = *((_OWORD *)v279 + 5);
  *((_OWORD *)v278 + 4) = *((_OWORD *)v279 + 4);
  *((_OWORD *)v278 + 5) = v285;
  uint64_t v286 = v280[10];
  uint64_t v287 = (char *)v278 + v286;
  uint64_t v288 = (char *)v279 + v286;
  if (__swift_getEnumTagSinglePayload((uint64_t)v279 + v286, 1, v23))
  {
    uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v287, v288, *(void *)(*(void *)(v289 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v287, v288, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v287, 0, 1, v23);
  }
  uint64_t v302 = v280[11];
  uint64_t v303 = (char *)v278 + v302;
  uint64_t v304 = (char *)v279 + v302;
  if (__swift_getEnumTagSinglePayload((uint64_t)v279 + v302, 1, v23))
  {
    uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v303, v304, *(void *)(*(void *)(v305 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v303, v304, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v303, 0, 1, v23);
  }
  *(_OWORD *)((char *)v278 + v280[12]) = *(_OWORD *)((char *)v279 + v280[12]);
  *(_OWORD *)((char *)v278 + v280[13]) = *(_OWORD *)((char *)v279 + v280[13]);
  *(_OWORD *)((char *)v278 + v280[14]) = *(_OWORD *)((char *)v279 + v280[14]);
  uint64_t v306 = v280[15];
  uint64_t v307 = (char *)v278 + v306;
  v308 = (char *)v279 + v306;
  if (__swift_getEnumTagSinglePayload((uint64_t)v279 + v306, 1, v23))
  {
    uint64_t v309 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v307, v308, *(void *)(*(void *)(v309 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v307, v308, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v307, 0, 1, v23);
  }
  *(_OWORD *)((char *)v278 + v280[16]) = *(_OWORD *)((char *)v279 + v280[16]);
  *(_OWORD *)((char *)v278 + v280[17]) = *(_OWORD *)((char *)v279 + v280[17]);
  *(_OWORD *)((char *)v278 + v280[18]) = *(_OWORD *)((char *)v279 + v280[18]);
  *(_OWORD *)((char *)v278 + v280[19]) = *(_OWORD *)((char *)v279 + v280[19]);
  *(_OWORD *)((char *)v278 + v280[20]) = *(_OWORD *)((char *)v279 + v280[20]);
  *(_OWORD *)((char *)v278 + v280[21]) = *(_OWORD *)((char *)v279 + v280[21]);
  *(_OWORD *)((char *)v278 + v280[22]) = *(_OWORD *)((char *)v279 + v280[22]);
  *(_OWORD *)((char *)v278 + v280[23]) = *(_OWORD *)((char *)v279 + v280[23]);
  __swift_storeEnumTagSinglePayload((uint64_t)v278, 0, 1, (uint64_t)v280);
LABEL_145:
  uint64_t v378 = a3[23];
  uint64_t v379 = (void *)((char *)a1 + v378);
  uint64_t v380 = (void *)((char *)a2 + v378);
  uint64_t v381 = (int *)type metadata accessor for PreExtractedContact(0);
  int v382 = __swift_getEnumTagSinglePayload((uint64_t)v379, 1, (uint64_t)v381);
  int v383 = __swift_getEnumTagSinglePayload((uint64_t)v380, 1, (uint64_t)v381);
  if (!v382)
  {
    if (v383)
    {
      outlined destroy of EmailDocument((uint64_t)v379, (void (*)(void))type metadata accessor for PreExtractedContact);
      goto LABEL_151;
    }
    uint64_t v392 = v380[1];
    *uint64_t v379 = *v380;
    v379[1] = v392;
    swift_bridgeObjectRelease();
    uint64_t v393 = v380[3];
    v379[2] = v380[2];
    v379[3] = v393;
    swift_bridgeObjectRelease();
    uint64_t v394 = v380[5];
    v379[4] = v380[4];
    v379[5] = v394;
    swift_bridgeObjectRelease();
    uint64_t v395 = v380[7];
    v379[6] = v380[6];
    v379[7] = v395;
    swift_bridgeObjectRelease();
    v379[8] = v380[8];
    swift_bridgeObjectRelease();
    v379[9] = v380[9];
    swift_bridgeObjectRelease();
    uint64_t v396 = v380[11];
    v379[10] = v380[10];
    v379[11] = v396;
    swift_bridgeObjectRelease();
    uint64_t v397 = v381[11];
    uint64_t v398 = (char *)v379 + v397;
    int v399 = (char *)v380 + v397;
    int v400 = __swift_getEnumTagSinglePayload((uint64_t)v379 + v397, 1, v23);
    int v401 = __swift_getEnumTagSinglePayload((uint64_t)v399, 1, v23);
    if (v400)
    {
      if (!v401)
      {
        (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v398, v399, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, v23);
        goto LABEL_163;
      }
    }
    else
    {
      if (!v401)
      {
        ((void (*)(char *, char *, uint64_t))v1252)(v398, v399, v23);
LABEL_163:
        uint64_t v407 = v381[12];
        uint64_t v408 = (void *)((char *)v379 + v407);
        v409 = (void *)((char *)v380 + v407);
        uint64_t v411 = *v409;
        uint64_t v410 = v409[1];
        *uint64_t v408 = v411;
        v408[1] = v410;
        swift_bridgeObjectRelease();
        *(void *)((char *)v379 + v381[13]) = *(void *)((char *)v380 + v381[13]);
        swift_bridgeObjectRelease();
        uint64_t v412 = v381[14];
        v413 = (char *)v379 + v412;
        uint64_t v414 = (char *)v380 + v412;
        int v415 = __swift_getEnumTagSinglePayload((uint64_t)v379 + v412, 1, v23);
        int v416 = __swift_getEnumTagSinglePayload((uint64_t)v414, 1, v23);
        if (v415)
        {
          if (!v416)
          {
            (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v413, v414, v23);
            __swift_storeEnumTagSinglePayload((uint64_t)v413, 0, 1, v23);
LABEL_169:
            *(void *)((char *)v379 + v381[15]) = *(void *)((char *)v380 + v381[15]);
            swift_bridgeObjectRelease();
            *(void *)((char *)v379 + v381[16]) = *(void *)((char *)v380 + v381[16]);
            swift_bridgeObjectRelease();
            uint64_t v418 = v381[17];
            v419 = (void *)((char *)v379 + v418);
            uint64_t v420 = (void *)((char *)v380 + v418);
            uint64_t v422 = *v420;
            uint64_t v421 = v420[1];
            void *v419 = v422;
            v419[1] = v421;
            swift_bridgeObjectRelease();
            *(void *)((char *)v379 + v381[18]) = *(void *)((char *)v380 + v381[18]);
            swift_bridgeObjectRelease();
            *(void *)((char *)v379 + v381[19]) = *(void *)((char *)v380 + v381[19]);
            swift_bridgeObjectRelease();
            goto LABEL_170;
          }
        }
        else
        {
          if (!v416)
          {
            ((void (*)(char *, char *, uint64_t))v1252)(v413, v414, v23);
            goto LABEL_169;
          }
          (*(void (**)(char *, uint64_t))(v1254 + 8))(v413, v23);
        }
        uint64_t v417 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v413, v414, *(void *)(*(void *)(v417 - 8) + 64));
        goto LABEL_169;
      }
      (*(void (**)(char *, uint64_t))(v1254 + 8))(v398, v23);
    }
    uint64_t v406 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v398, v399, *(void *)(*(void *)(v406 - 8) + 64));
    goto LABEL_163;
  }
  if (v383)
  {
LABEL_151:
    uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v379, v380, *(void *)(*(void *)(v391 - 8) + 64));
    goto LABEL_170;
  }
  long long v384 = *((_OWORD *)v380 + 1);
  *(_OWORD *)uint64_t v379 = *(_OWORD *)v380;
  *((_OWORD *)v379 + 1) = v384;
  long long v385 = *((_OWORD *)v380 + 3);
  *((_OWORD *)v379 + 2) = *((_OWORD *)v380 + 2);
  *((_OWORD *)v379 + 3) = v385;
  long long v386 = *((_OWORD *)v380 + 5);
  *((_OWORD *)v379 + 4) = *((_OWORD *)v380 + 4);
  *((_OWORD *)v379 + 5) = v386;
  uint64_t v387 = v381[11];
  uint64_t v388 = (char *)v379 + v387;
  uint64_t v389 = (char *)v380 + v387;
  if (__swift_getEnumTagSinglePayload((uint64_t)v380 + v387, 1, v23))
  {
    uint64_t v390 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v388, v389, *(void *)(*(void *)(v390 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v388, v389, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v388, 0, 1, v23);
  }
  *(_OWORD *)((char *)v379 + v381[12]) = *(_OWORD *)((char *)v380 + v381[12]);
  *(void *)((char *)v379 + v381[13]) = *(void *)((char *)v380 + v381[13]);
  uint64_t v402 = v381[14];
  v403 = (char *)v379 + v402;
  uint64_t v404 = (char *)v380 + v402;
  if (__swift_getEnumTagSinglePayload((uint64_t)v380 + v402, 1, v23))
  {
    uint64_t v405 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v403, v404, *(void *)(*(void *)(v405 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v403, v404, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v403, 0, 1, v23);
  }
  *(void *)((char *)v379 + v381[15]) = *(void *)((char *)v380 + v381[15]);
  *(void *)((char *)v379 + v381[16]) = *(void *)((char *)v380 + v381[16]);
  *(_OWORD *)((char *)v379 + v381[17]) = *(_OWORD *)((char *)v380 + v381[17]);
  *(void *)((char *)v379 + v381[18]) = *(void *)((char *)v380 + v381[18]);
  *(void *)((char *)v379 + v381[19]) = *(void *)((char *)v380 + v381[19]);
  __swift_storeEnumTagSinglePayload((uint64_t)v379, 0, 1, (uint64_t)v381);
LABEL_170:
  uint64_t v423 = a3[24];
  int v424 = (void *)((char *)a1 + v423);
  int v425 = (void *)((char *)a2 + v423);
  uint64_t v426 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  int v427 = __swift_getEnumTagSinglePayload((uint64_t)v424, 1, (uint64_t)v426);
  int v428 = __swift_getEnumTagSinglePayload((uint64_t)v425, 1, (uint64_t)v426);
  if (!v427)
  {
    if (v428)
    {
      outlined destroy of EmailDocument((uint64_t)v424, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
      goto LABEL_176;
    }
    uint64_t v437 = v425[1];
    void *v424 = *v425;
    v424[1] = v437;
    swift_bridgeObjectRelease();
    uint64_t v438 = v425[3];
    v424[2] = v425[2];
    v424[3] = v438;
    swift_bridgeObjectRelease();
    uint64_t v439 = v425[5];
    v424[4] = v425[4];
    v424[5] = v439;
    swift_bridgeObjectRelease();
    uint64_t v440 = v425[7];
    v424[6] = v425[6];
    v424[7] = v440;
    swift_bridgeObjectRelease();
    uint64_t v441 = v426[8];
    uint64_t v442 = (char *)v424 + v441;
    uint64_t v443 = (char *)v425 + v441;
    uint64_t v444 = type metadata accessor for URL();
    int v445 = __swift_getEnumTagSinglePayload((uint64_t)v442, 1, v444);
    int v446 = __swift_getEnumTagSinglePayload((uint64_t)v443, 1, v444);
    if (v445)
    {
      if (!v446)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 32))(v442, v443, v444);
        __swift_storeEnumTagSinglePayload((uint64_t)v442, 0, 1, v444);
        goto LABEL_191;
      }
    }
    else
    {
      uint64_t v458 = *(void *)(v444 - 8);
      if (!v446)
      {
        (*(void (**)(char *, char *, uint64_t))(v458 + 40))(v442, v443, v444);
LABEL_191:
        uint64_t v460 = v426[9];
        int v461 = (void *)((char *)v424 + v460);
        int v462 = (void *)((char *)v425 + v460);
        uint64_t v464 = *v462;
        uint64_t v463 = v462[1];
        void *v461 = v464;
        v461[1] = v463;
        swift_bridgeObjectRelease();
        uint64_t v465 = v426[10];
        uint64_t v466 = (void *)((char *)v424 + v465);
        uint64_t v467 = (void *)((char *)v425 + v465);
        uint64_t v469 = *v467;
        uint64_t v468 = v467[1];
        void *v466 = v469;
        v466[1] = v468;
        swift_bridgeObjectRelease();
        uint64_t v470 = v426[11];
        uint64_t v471 = (void *)((char *)v424 + v470);
        uint64_t v472 = (void *)((char *)v425 + v470);
        uint64_t v474 = *v472;
        uint64_t v473 = v472[1];
        *uint64_t v471 = v474;
        v471[1] = v473;
        swift_bridgeObjectRelease();
        uint64_t v475 = v426[12];
        uint64_t v476 = (char *)v424 + v475;
        v477 = (char *)v425 + v475;
        int v478 = __swift_getEnumTagSinglePayload((uint64_t)v424 + v475, 1, v1253);
        int v479 = __swift_getEnumTagSinglePayload((uint64_t)v477, 1, v1253);
        if (v478)
        {
          if (v479)
          {
            uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v476, v477, *(void *)(*(void *)(v480 - 8) + 64));
            uint64_t v481 = v1253;
          }
          else
          {
            uint64_t v481 = v1253;
            (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v476, v477, v1253);
            __swift_storeEnumTagSinglePayload((uint64_t)v476, 0, 1, v1253);
          }
        }
        else
        {
          uint64_t v481 = v1253;
          if (v479)
          {
            (*(void (**)(char *, uint64_t))(v1254 + 8))(v476, v1253);
            uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v476, v477, *(void *)(*(void *)(v482 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1252)(v476, v477, v1253);
          }
        }
        uint64_t v512 = v426[13];
        v513 = (char *)v424 + v512;
        uint64_t v514 = (char *)v425 + v512;
        int v515 = __swift_getEnumTagSinglePayload((uint64_t)v424 + v512, 1, v481);
        uint64_t v516 = v481;
        int v517 = v515;
        int v518 = __swift_getEnumTagSinglePayload((uint64_t)v514, 1, v516);
        if (v517)
        {
          if (!v518)
          {
            (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v513, v514, v1253);
            __swift_storeEnumTagSinglePayload((uint64_t)v513, 0, 1, v1253);
LABEL_213:
            uint64_t v520 = v426[14];
            uint64_t v521 = (char *)v424 + v520;
            uint64_t v522 = (char *)v425 + v520;
            *(void *)uint64_t v521 = *(void *)v522;
            v521[8] = v522[8];
            uint64_t v523 = v426[15];
            uint64_t v524 = (void *)((char *)v424 + v523);
            uint64_t v525 = (void *)((char *)v425 + v523);
            uint64_t v527 = *v525;
            uint64_t v526 = v525[1];
            void *v524 = v527;
            v524[1] = v526;
            swift_bridgeObjectRelease();
            uint64_t v528 = v426[16];
            uint64_t v529 = (void *)((char *)v424 + v528);
            uint64_t v530 = (void *)((char *)v425 + v528);
            uint64_t v532 = *v530;
            uint64_t v531 = v530[1];
            void *v529 = v532;
            v529[1] = v531;
            swift_bridgeObjectRelease();
            uint64_t v533 = v426[17];
            uint64_t v534 = (void *)((char *)v424 + v533);
            uint64_t v535 = (void *)((char *)v425 + v533);
            uint64_t v537 = *v535;
            uint64_t v536 = v535[1];
            *uint64_t v534 = v537;
            v534[1] = v536;
            swift_bridgeObjectRelease();
            uint64_t v538 = v426[18];
            int v539 = (void *)((char *)v424 + v538);
            uint64_t v540 = (void *)((char *)v425 + v538);
            uint64_t v542 = *v540;
            uint64_t v541 = v540[1];
            *int v539 = v542;
            v539[1] = v541;
            swift_bridgeObjectRelease();
            uint64_t v543 = v426[19];
            int v544 = (void *)((char *)v424 + v543);
            int v545 = (void *)((char *)v425 + v543);
            uint64_t v547 = *v545;
            uint64_t v546 = v545[1];
            void *v544 = v547;
            v544[1] = v546;
            swift_bridgeObjectRelease();
            goto LABEL_214;
          }
        }
        else
        {
          if (!v518)
          {
            ((void (*)(char *, char *, uint64_t))v1252)(v513, v514, v1253);
            goto LABEL_213;
          }
          (*(void (**)(char *, uint64_t))(v1254 + 8))(v513, v1253);
        }
        uint64_t v519 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v513, v514, *(void *)(*(void *)(v519 - 8) + 64));
        goto LABEL_213;
      }
      (*(void (**)(char *, uint64_t))(v458 + 8))(v442, v444);
    }
    uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v442, v443, *(void *)(*(void *)(v459 - 8) + 64));
    goto LABEL_191;
  }
  if (v428)
  {
LABEL_176:
    uint64_t v436 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v424, v425, *(void *)(*(void *)(v436 - 8) + 64));
    goto LABEL_214;
  }
  long long v429 = *((_OWORD *)v425 + 1);
  *(_OWORD *)int v424 = *(_OWORD *)v425;
  *((_OWORD *)v424 + 1) = v429;
  long long v430 = *((_OWORD *)v425 + 3);
  *((_OWORD *)v424 + 2) = *((_OWORD *)v425 + 2);
  *((_OWORD *)v424 + 3) = v430;
  uint64_t v431 = v426[8];
  uint64_t v432 = (char *)v424 + v431;
  uint64_t v433 = (char *)v425 + v431;
  uint64_t v434 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v433, 1, v434))
  {
    uint64_t v435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v432, v433, *(void *)(*(void *)(v435 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v434 - 8) + 32))(v432, v433, v434);
    __swift_storeEnumTagSinglePayload((uint64_t)v432, 0, 1, v434);
  }
  *(_OWORD *)((char *)v424 + v426[9]) = *(_OWORD *)((char *)v425 + v426[9]);
  *(_OWORD *)((char *)v424 + v426[10]) = *(_OWORD *)((char *)v425 + v426[10]);
  *(_OWORD *)((char *)v424 + v426[11]) = *(_OWORD *)((char *)v425 + v426[11]);
  uint64_t v447 = v426[12];
  uint64_t v448 = (char *)v424 + v447;
  int v449 = (char *)v425 + v447;
  if (__swift_getEnumTagSinglePayload((uint64_t)v425 + v447, 1, v23))
  {
    uint64_t v450 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v448, v449, *(void *)(*(void *)(v450 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v448, v449, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v448, 0, 1, v23);
  }
  uint64_t v451 = v426[13];
  uint64_t v452 = (char *)v424 + v451;
  v453 = (char *)v425 + v451;
  if (__swift_getEnumTagSinglePayload((uint64_t)v425 + v451, 1, v23))
  {
    uint64_t v454 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v452, v453, *(void *)(*(void *)(v454 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1254 + 32))(v452, v453, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v452, 0, 1, v23);
  }
  uint64_t v455 = v426[14];
  uint64_t v456 = (char *)v424 + v455;
  uint64_t v457 = (char *)v425 + v455;
  *(void *)uint64_t v456 = *(void *)v457;
  v456[8] = v457[8];
  *(_OWORD *)((char *)v424 + v426[15]) = *(_OWORD *)((char *)v425 + v426[15]);
  *(_OWORD *)((char *)v424 + v426[16]) = *(_OWORD *)((char *)v425 + v426[16]);
  *(_OWORD *)((char *)v424 + v426[17]) = *(_OWORD *)((char *)v425 + v426[17]);
  *(_OWORD *)((char *)v424 + v426[18]) = *(_OWORD *)((char *)v425 + v426[18]);
  *(_OWORD *)((char *)v424 + v426[19]) = *(_OWORD *)((char *)v425 + v426[19]);
  __swift_storeEnumTagSinglePayload((uint64_t)v424, 0, 1, (uint64_t)v426);
LABEL_214:
  uint64_t v548 = a3[25];
  v549 = (void *)((char *)a1 + v548);
  uint64_t v550 = (void *)((char *)a2 + v548);
  if (!*(void *)((char *)a1 + v548 + 8))
  {
LABEL_218:
    memcpy(v549, v550, 0x90uLL);
    return a1;
  }
  uint64_t v551 = v550[1];
  if (!v551)
  {
    outlined destroy of PreExtractedBreadcrumb((uint64_t)v549);
    goto LABEL_218;
  }
  void *v549 = *v550;
  v549[1] = v551;
  swift_bridgeObjectRelease();
  v549[2] = v550[2];
  swift_bridgeObjectRelease();
  v549[3] = v550[3];
  swift_bridgeObjectRelease();
  v549[4] = v550[4];
  swift_bridgeObjectRelease();
  v549[5] = v550[5];
  swift_bridgeObjectRelease();
  v549[6] = v550[6];
  swift_bridgeObjectRelease();
  v549[7] = v550[7];
  swift_bridgeObjectRelease();
  v549[8] = v550[8];
  swift_bridgeObjectRelease();
  v549[9] = v550[9];
  swift_bridgeObjectRelease();
  v549[10] = v550[10];
  swift_bridgeObjectRelease();
  v549[11] = v550[11];
  swift_bridgeObjectRelease();
  v549[12] = v550[12];
  swift_bridgeObjectRelease();
  v549[13] = v550[13];
  swift_bridgeObjectRelease();
  v549[14] = v550[14];
  swift_bridgeObjectRelease();
  v549[15] = v550[15];
  swift_bridgeObjectRelease();
  v549[16] = v550[16];
  swift_bridgeObjectRelease();
  v549[17] = v550[17];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailDocument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2584FD2BC);
}

uint64_t sub_2584FD2BC()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v1[12];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      uint64_t v5 = v1[21];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        uint64_t v5 = v1[22];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v8 + 84) == v0)
        {
          uint64_t v5 = v1[23];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          uint64_t v5 = v1[24];
        }
      }
    }
  }
  uint64_t v9 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v9, v10, v11);
}

uint64_t storeEnumTagSinglePayload for EmailDocument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2584FD3D8);
}

void sub_2584FD3D8()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = v0[12];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v5 + 84) == v1)
      {
        uint64_t v4 = v0[21];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v6 + 84) == v1)
        {
          uint64_t v4 = v0[22];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          OUTLINED_FUNCTION_29_3();
          if (*(_DWORD *)(v7 + 84) == v1)
          {
            uint64_t v4 = v0[23];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            uint64_t v4 = v0[24];
          }
        }
      }
    }
    uint64_t v8 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
  }
}

void type metadata completion function for EmailDocument()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PartialExtractedAttributes?, (void (*)(uint64_t))type metadata accessor for PartialExtractedAttributes);
    if (v1 <= 0x3F)
    {
      type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedCard?, (void (*)(uint64_t))type metadata accessor for PreExtractedCard);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedContact?, (void (*)(uint64_t))type metadata accessor for PreExtractedContact);
        if (v3 <= 0x3F)
        {
          type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedSharedLink?, (void (*)(uint64_t))type metadata accessor for PreExtractedSharedLink);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MobileSMSDocument(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v17 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    uint64_t v11 = a3[10];
    long long v692 = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v692, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v692, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v692, 0, 1, v13);
    }
    uint64_t v18 = a3;
    uint64_t v19 = a3[11];
    long long v20 = (char *)a1 + v19;
    long long v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for URL();
    uint64_t v687 = v22;
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v24 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    uint64_t v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[14];
    uint64_t v29 = a3[15];
    uint64_t v30 = (void *)((char *)a1 + v28);
    uint64_t v31 = (void *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
    uint64_t v33 = a3[17];
    *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    long long v691 = a1;
    long long v693 = a2;
    int v34 = (void *)((char *)a1 + v33);
    uint64_t v35 = (void *)((char *)a2 + v33);
    uint64_t v36 = *v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36)
    {
      uint64_t v37 = v35[1];
      uint64_t v38 = v35[2];
      *int v34 = v36;
      v34[1] = v37;
      uint64_t v39 = v35[3];
      uint64_t v40 = v35[4];
      void v34[2] = v38;
      v34[3] = v39;
      v34[4] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v41 = *((_OWORD *)v35 + 1);
      *(_OWORD *)int v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v41;
      v34[4] = v35[4];
    }
    uint64_t v17 = v691;
    uint64_t v42 = a3[18];
    uint64_t v43 = a3[19];
    uint64_t v44 = (void *)((char *)v691 + v42);
    uint64_t v45 = (void *)((char *)v693 + v42);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = (void *)((char *)v691 + v43);
    uint64_t v48 = (void *)((char *)v693 + v43);
    int v49 = (int *)type metadata accessor for PartialExtractedAttributes(0);
    swift_bridgeObjectRetain();
    uint64_t v688 = v14;
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, (uint64_t)v49))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      uint64_t v51 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v51;
      uint64_t v52 = v49[5];
      long long v53 = (void *)((char *)v47 + v52);
      long long v54 = (void *)((char *)v48 + v52);
      uint64_t v55 = type metadata accessor for RentalCarReservation(0);
      swift_bridgeObjectRetain();
      uint64_t v683 = v47;
      uint64_t v684 = v49;
      uint64_t v681 = v48;
      if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
        memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        uint64_t v57 = v54[1];
        *long long v53 = *v54;
        v53[1] = v57;
        uint64_t v58 = v54[3];
        v53[2] = v54[2];
        v53[3] = v58;
        uint64_t v59 = v54[5];
        v53[4] = v54[4];
        v53[5] = v59;
        uint64_t v60 = v54[7];
        v53[6] = v54[6];
        v53[7] = v60;
        uint64_t v61 = v54[9];
        v53[8] = v54[8];
        v53[9] = v61;
        uint64_t v62 = v54[11];
        v53[10] = v54[10];
        v53[11] = v62;
        uint64_t v63 = v54[13];
        v53[12] = v54[12];
        v53[13] = v63;
        uint64_t v64 = v54[15];
        v53[14] = v54[14];
        v53[15] = v64;
        *((unsigned char *)v53 + 128) = *((unsigned char *)v54 + 128);
        *(_WORD *)((char *)v53 + 129) = *(_WORD *)((char *)v54 + 129);
        uint64_t v65 = v54[18];
        v53[17] = v54[17];
        v53[18] = v65;
        uint64_t v66 = v54[20];
        v53[19] = v54[19];
        v53[20] = v66;
        uint64_t v67 = v54[22];
        v53[21] = v54[21];
        v53[22] = v67;
        uint64_t v68 = v54[24];
        v53[23] = v54[23];
        v53[24] = v68;
        uint64_t v69 = v54[26];
        v53[25] = v54[25];
        v53[26] = v69;
        uint64_t v70 = v54[28];
        v53[27] = v54[27];
        v53[28] = v70;
        uint64_t v71 = v54[30];
        v53[29] = v54[29];
        v53[30] = v71;
        uint64_t v672 = v54[32];
        v53[31] = v54[31];
        v53[32] = v672;
        uint64_t v72 = v54[34];
        v53[33] = v54[33];
        v53[34] = v72;
        uint64_t v73 = v54[36];
        v53[35] = v54[35];
        v53[36] = v73;
        uint64_t v74 = v54[38];
        v53[37] = v54[37];
        v53[38] = v74;
        uint64_t v75 = v54[40];
        v53[39] = v54[39];
        v53[40] = v75;
        uint64_t v76 = v54[42];
        v53[41] = v54[41];
        v53[42] = v76;
        uint64_t v77 = v54[44];
        v53[43] = v54[43];
        v53[44] = v77;
        uint64_t v78 = v54[46];
        v53[45] = v54[45];
        v53[46] = v78;
        uint64_t v79 = v54[47];
        *((unsigned char *)v53 + 384) = *((unsigned char *)v54 + 384);
        v53[47] = v79;
        uint64_t v80 = v54[50];
        v53[49] = v54[49];
        v53[50] = v80;
        uint64_t v81 = v54[52];
        v53[51] = v54[51];
        v53[52] = v81;
        uint64_t v82 = *(int *)(v55 + 140);
        __dst = (char *)v53 + v82;
        uint64_t v83 = (char *)v54 + v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v14))
        {
          uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v83, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v83, v14);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v14);
        }
        uint64_t v85 = *(int *)(v55 + 144);
        long long v86 = (char *)v53 + v85;
        long long v87 = (char *)v54 + v85;
        if (__swift_getEnumTagSinglePayload((uint64_t)v54 + v85, 1, v14))
        {
          uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v86, v87, v14);
          __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v14);
        }
        int v49 = v684;
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
      }
      uint64_t v89 = v49[6];
      long long v90 = (void *)((char *)v47 + v89);
      long long v91 = (void *)((char *)v48 + v89);
      uint64_t v92 = type metadata accessor for TicketedTransportation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v92))
      {
        uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
        memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        uint64_t v94 = v91[1];
        *long long v90 = *v91;
        v90[1] = v94;
        uint64_t v95 = v91[3];
        v90[2] = v91[2];
        v90[3] = v95;
        uint64_t v96 = v91[5];
        v90[4] = v91[4];
        v90[5] = v96;
        uint64_t v97 = v91[7];
        v90[6] = v91[6];
        v90[7] = v97;
        uint64_t v98 = v91[9];
        v90[8] = v91[8];
        v90[9] = v98;
        uint64_t v99 = v91[11];
        v90[10] = v91[10];
        v90[11] = v99;
        uint64_t v100 = v91[13];
        v90[12] = v91[12];
        v90[13] = v100;
        uint64_t v101 = v91[15];
        v90[14] = v91[14];
        v90[15] = v101;
        *((unsigned char *)v90 + 128) = *((unsigned char *)v91 + 128);
        *(_WORD *)((char *)v90 + 129) = *(_WORD *)((char *)v91 + 129);
        uint64_t v102 = v91[18];
        v90[17] = v91[17];
        v90[18] = v102;
        uint64_t v103 = v91[20];
        v90[19] = v91[19];
        v90[20] = v103;
        uint64_t v104 = v91[22];
        v90[21] = v91[21];
        v90[22] = v104;
        uint64_t v105 = v91[24];
        v90[23] = v91[23];
        v90[24] = v105;
        uint64_t v673 = v91[26];
        v90[25] = v91[25];
        v90[26] = v673;
        uint64_t v106 = v91[28];
        v90[27] = v91[27];
        v90[28] = v106;
        uint64_t v107 = v91[30];
        v90[29] = v91[29];
        v90[30] = v107;
        uint64_t v108 = v91[32];
        v90[31] = v91[31];
        v90[32] = v108;
        uint64_t v109 = v91[34];
        v90[33] = v91[33];
        v90[34] = v109;
        uint64_t v110 = v91[36];
        uint64_t v111 = v91[35];
        *((unsigned char *)v90 + 296) = *((unsigned char *)v91 + 296);
        v90[35] = v111;
        v90[36] = v110;
        uint64_t v112 = *(int *)(v92 + 112);
        uint64_t v646 = (char *)v90 + v112;
        uint64_t v648 = (void *)v92;
        long long v113 = (char *)v91 + v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v688))
        {
          uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v646, v113, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v646, v113, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v646, 0, 1, v688);
        }
        uint64_t v115 = *(int *)(v92 + 116);
        uint64_t v116 = (char *)v90 + v115;
        uint64_t v117 = (char *)v91 + v115;
        if (__swift_getEnumTagSinglePayload((uint64_t)v91 + v115, 1, v688))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v116, v117, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v688);
        }
        int v49 = v684;
        __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, (uint64_t)v648);
      }
      uint64_t v119 = v49[7];
      uint64_t v120 = (void *)((char *)v47 + v119);
      long long v121 = (void *)((char *)v48 + v119);
      uint64_t v122 = type metadata accessor for TicketedShow(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v122))
      {
        uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
        memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
      }
      else
      {
        uint64_t v124 = v121[1];
        *uint64_t v120 = *v121;
        v120[1] = v124;
        uint64_t v125 = v121[3];
        v120[2] = v121[2];
        v120[3] = v125;
        uint64_t v126 = v121[5];
        v120[4] = v121[4];
        v120[5] = v126;
        uint64_t v127 = v121[7];
        v120[6] = v121[6];
        v120[7] = v127;
        uint64_t v128 = v121[9];
        v120[8] = v121[8];
        v120[9] = v128;
        uint64_t v129 = v121[11];
        v120[10] = v121[10];
        v120[11] = v129;
        uint64_t v130 = v121[13];
        v120[12] = v121[12];
        v120[13] = v130;
        uint64_t v131 = v121[15];
        v120[14] = v121[14];
        v120[15] = v131;
        *((unsigned char *)v120 + 128) = *((unsigned char *)v121 + 128);
        *(_WORD *)((char *)v120 + 129) = *(_WORD *)((char *)v121 + 129);
        uint64_t v132 = v121[18];
        v120[17] = v121[17];
        v120[18] = v132;
        uint64_t v133 = v121[20];
        v120[19] = v121[19];
        v120[20] = v133;
        uint64_t v134 = v121[22];
        v120[21] = v121[21];
        v120[22] = v134;
        uint64_t v135 = v121[24];
        v120[23] = v121[23];
        v120[24] = v135;
        uint64_t v136 = v121[26];
        v120[25] = v121[25];
        v120[26] = v136;
        uint64_t v137 = v121[28];
        v120[27] = v121[27];
        v120[28] = v137;
        uint64_t v674 = v121[30];
        v120[29] = v121[29];
        v120[30] = v674;
        uint64_t v138 = v121[32];
        v120[31] = v121[31];
        v120[32] = v138;
        uint64_t v139 = v121[34];
        v120[33] = v121[33];
        v120[34] = v139;
        uint64_t v141 = v121[35];
        uint64_t v140 = v121[36];
        *((unsigned char *)v120 + 296) = *((unsigned char *)v121 + 296);
        v120[35] = v141;
        v120[36] = v140;
        uint64_t v142 = v121[39];
        v120[38] = v121[38];
        v120[39] = v142;
        uint64_t v143 = *(int *)(v122 + 116);
        uint64_t v645 = (char *)v120 + v143;
        uint64_t v647 = (int *)v122;
        long long v144 = (char *)v121 + v143;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v687))
        {
          uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v645, v144, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v687 - 8) + 16))(v645, v144, v687);
          __swift_storeEnumTagSinglePayload((uint64_t)v645, 0, 1, v687);
        }
        uint64_t v146 = v647[30];
        long long v147 = (void *)((char *)v120 + v146);
        long long v148 = (void *)((char *)v121 + v146);
        uint64_t v149 = v148[1];
        *long long v147 = *v148;
        v147[1] = v149;
        uint64_t v150 = v647[31];
        uint64_t v151 = (char *)v120 + v150;
        uint64_t v152 = (char *)v121 + v150;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v152, 1, v688))
        {
          uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v151, v152, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v688);
        }
        uint64_t v154 = v647[32];
        uint64_t v155 = (char *)v120 + v154;
        long long v156 = (char *)v121 + v154;
        if (__swift_getEnumTagSinglePayload((uint64_t)v121 + v154, 1, v688))
        {
          uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v155, v156, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v688);
        }
        int v49 = v684;
        __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, (uint64_t)v647);
      }
      uint64_t v158 = v49[8];
      long long v159 = (void *)((char *)v47 + v158);
      long long v160 = (void *)((char *)v48 + v158);
      uint64_t v161 = type metadata accessor for Appointment(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v160, 1, v161))
      {
        uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
        memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
      }
      else
      {
        uint64_t v163 = v160[1];
        *long long v159 = *v160;
        v159[1] = v163;
        uint64_t v164 = v160[3];
        v159[2] = v160[2];
        v159[3] = v164;
        uint64_t v165 = v160[5];
        v159[4] = v160[4];
        v159[5] = v165;
        uint64_t v166 = v160[7];
        v159[6] = v160[6];
        v159[7] = v166;
        uint64_t v167 = v160[9];
        v159[8] = v160[8];
        v159[9] = v167;
        uint64_t v168 = v160[11];
        v159[10] = v160[10];
        v159[11] = v168;
        uint64_t v169 = v160[13];
        v159[12] = v160[12];
        v159[13] = v169;
        uint64_t v170 = v160[15];
        v159[14] = v160[14];
        v159[15] = v170;
        *((unsigned char *)v159 + 128) = *((unsigned char *)v160 + 128);
        *(_WORD *)((char *)v159 + 129) = *(_WORD *)((char *)v160 + 129);
        uint64_t v171 = v160[18];
        v159[17] = v160[17];
        v159[18] = v171;
        uint64_t v172 = v160[20];
        v159[19] = v160[19];
        v159[20] = v172;
        uint64_t v173 = v160[22];
        v159[21] = v160[21];
        v159[22] = v173;
        uint64_t v174 = v160[24];
        v159[23] = v160[23];
        v159[24] = v174;
        uint64_t v175 = v160[26];
        v159[25] = v160[25];
        v159[26] = v175;
        uint64_t v176 = v160[28];
        v159[27] = v160[27];
        v159[28] = v176;
        uint64_t v177 = v160[30];
        v159[29] = v160[29];
        v159[30] = v177;
        uint64_t v178 = v160[32];
        v159[31] = v160[31];
        v159[32] = v178;
        uint64_t v180 = v160[33];
        uint64_t v179 = v160[34];
        *((unsigned char *)v159 + 280) = *((unsigned char *)v160 + 280);
        v159[33] = v180;
        v159[34] = v179;
        uint64_t v181 = v161;
        uint64_t v182 = v160[37];
        v159[36] = v160[36];
        v159[37] = v182;
        uint64_t v650 = v181;
        uint64_t v183 = *(int *)(v181 + 108);
        uint64_t v649 = (char *)v159 + v183;
        long long v184 = (char *)v160 + v183;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v184, 1, v688))
        {
          uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v649, v184, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v649, v184, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v649, 0, 1, v688);
        }
        uint64_t v186 = *(int *)(v650 + 112);
        uint64_t v187 = (char *)v159 + v186;
        uint64_t v188 = (char *)v160 + v186;
        if (__swift_getEnumTagSinglePayload((uint64_t)v160 + v186, 1, v688))
        {
          uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v187, v188, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v688);
        }
        int v49 = v684;
        __swift_storeEnumTagSinglePayload((uint64_t)v159, 0, 1, v650);
      }
      uint64_t v190 = v49[9];
      uint64_t v191 = (void *)((char *)v47 + v190);
      uint64_t v192 = (void *)((char *)v48 + v190);
      uint64_t v193 = type metadata accessor for Party(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v192, 1, v193))
      {
        uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
        memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        uint64_t v195 = v192[1];
        *uint64_t v191 = *v192;
        v191[1] = v195;
        uint64_t v196 = v192[3];
        v191[2] = v192[2];
        v191[3] = v196;
        uint64_t v197 = v192[5];
        v191[4] = v192[4];
        v191[5] = v197;
        uint64_t v198 = v192[7];
        v191[6] = v192[6];
        v191[7] = v198;
        uint64_t v199 = v192[9];
        v191[8] = v192[8];
        v191[9] = v199;
        uint64_t v200 = v192[11];
        v191[10] = v192[10];
        v191[11] = v200;
        uint64_t v201 = v192[13];
        v191[12] = v192[12];
        v191[13] = v201;
        uint64_t v202 = v192[15];
        v191[14] = v192[14];
        v191[15] = v202;
        *((unsigned char *)v191 + 128) = *((unsigned char *)v192 + 128);
        *(_WORD *)((char *)v191 + 129) = *(_WORD *)((char *)v192 + 129);
        uint64_t v203 = v192[18];
        v191[17] = v192[17];
        v191[18] = v203;
        uint64_t v204 = v192[20];
        v191[19] = v192[19];
        v191[20] = v204;
        uint64_t v205 = v192[22];
        v191[21] = v192[21];
        v191[22] = v205;
        uint64_t v206 = v192[24];
        v191[23] = v192[23];
        v191[24] = v206;
        uint64_t v207 = v192[26];
        v191[25] = v192[25];
        v191[26] = v207;
        uint64_t v208 = v192[28];
        v191[27] = v192[27];
        v191[28] = v208;
        uint64_t v209 = v192[30];
        v191[29] = v192[29];
        v191[30] = v209;
        v191[31] = v192[31];
        uint64_t v653 = v193;
        uint64_t v210 = *(int *)(v193 + 96);
        uint64_t v651 = (char *)v191 + v210;
        uint64_t v211 = (char *)v192 + v210;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v211, 1, v688))
        {
          uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v651, v211, *(void *)(*(void *)(v212 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v651, v211, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v651, 0, 1, v688);
        }
        uint64_t v213 = *(int *)(v193 + 100);
        uint64_t v214 = (char *)v191 + v213;
        uint64_t v215 = (char *)v192 + v213;
        if (__swift_getEnumTagSinglePayload((uint64_t)v192 + v213, 1, v688))
        {
          uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v214, v215, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v214, v215, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v688);
        }
        uint64_t v217 = *(int *)(v653 + 104);
        uint64_t v218 = (char *)v191 + v217;
        uint64_t v219 = (char *)v192 + v217;
        if (__swift_getEnumTagSinglePayload((uint64_t)v192 + v217, 1, v687))
        {
          uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v687 - 8) + 16))(v218, v219, v687);
          __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v687);
        }
        int v49 = v684;
        __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v653);
      }
      uint64_t v221 = v49[10];
      uint64_t v222 = (void *)((char *)v47 + v221);
      uint64_t v223 = (void *)((char *)v48 + v221);
      uint64_t v224 = type metadata accessor for Trip(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v223, 1, v224))
      {
        uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
        memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
      }
      else
      {
        uint64_t v226 = v223[1];
        *uint64_t v222 = *v223;
        v222[1] = v226;
        uint64_t v227 = v223[3];
        v222[2] = v223[2];
        v222[3] = v227;
        uint64_t v228 = v223[5];
        v222[4] = v223[4];
        v222[5] = v228;
        uint64_t v229 = v223[7];
        v222[6] = v223[6];
        v222[7] = v229;
        uint64_t v230 = v223[9];
        v222[8] = v223[8];
        v222[9] = v230;
        uint64_t v231 = v223[11];
        v222[10] = v223[10];
        v222[11] = v231;
        uint64_t v232 = v223[13];
        v222[12] = v223[12];
        v222[13] = v232;
        uint64_t v233 = v223[15];
        v222[14] = v223[14];
        v222[15] = v233;
        *((unsigned char *)v222 + 128) = *((unsigned char *)v223 + 128);
        *(_WORD *)((char *)v222 + 129) = *(_WORD *)((char *)v223 + 129);
        uint64_t v234 = v223[18];
        v222[17] = v223[17];
        v222[18] = v234;
        uint64_t v235 = v223[20];
        v222[19] = v223[19];
        v222[20] = v235;
        uint64_t v236 = v223[22];
        v222[21] = v223[21];
        v222[22] = v236;
        uint64_t v237 = v223[24];
        v222[23] = v223[23];
        v222[24] = v237;
        uint64_t v238 = v223[26];
        v222[25] = v223[25];
        v222[26] = v238;
        v222[27] = v223[27];
        uint64_t v656 = v224;
        uint64_t v239 = *(int *)(v224 + 88);
        size_t v654 = (char *)v222 + v239;
        long long v240 = (char *)v223 + v239;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v240, 1, v688))
        {
          uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v654, v240, *(void *)(*(void *)(v241 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v654, v240, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v654, 0, 1, v688);
        }
        uint64_t v242 = *(int *)(v224 + 92);
        uint64_t v243 = (char *)v222 + v242;
        long long v244 = (char *)v223 + v242;
        if (__swift_getEnumTagSinglePayload((uint64_t)v223 + v242, 1, v688))
        {
          uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v243, v244, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v243, 0, 1, v688);
        }
        uint64_t v246 = *(int *)(v656 + 96);
        uint64_t v247 = (char *)v222 + v246;
        uint64_t v248 = (char *)v223 + v246;
        *(void *)uint64_t v247 = *(void *)v248;
        v247[8] = v248[8];
        uint64_t v249 = *(int *)(v656 + 100);
        uint64_t v250 = (char *)v222 + v249;
        uint64_t v251 = (char *)v223 + v249;
        if (__swift_getEnumTagSinglePayload((uint64_t)v223 + v249, 1, v687))
        {
          uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v250, v251, *(void *)(*(void *)(v252 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v687 - 8) + 16))(v250, v251, v687);
          __swift_storeEnumTagSinglePayload((uint64_t)v250, 0, 1, v687);
        }
        int v49 = v684;
        __swift_storeEnumTagSinglePayload((uint64_t)v222, 0, 1, v656);
      }
      uint64_t v253 = v49[11];
      uint64_t v254 = (void *)((char *)v47 + v253);
      uint64_t v255 = (void *)((char *)v48 + v253);
      uint64_t v256 = (int *)type metadata accessor for FlightReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, (uint64_t)v256))
      {
        uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
      }
      else
      {
        uint64_t v258 = v255[1];
        *uint64_t v254 = *v255;
        v254[1] = v258;
        uint64_t v259 = v255[3];
        v254[2] = v255[2];
        v254[3] = v259;
        uint64_t v260 = v255[5];
        v254[4] = v255[4];
        v254[5] = v260;
        uint64_t v261 = v255[7];
        v254[6] = v255[6];
        v254[7] = v261;
        uint64_t v262 = v255[9];
        v254[8] = v255[8];
        v254[9] = v262;
        uint64_t v263 = v255[11];
        v254[10] = v255[10];
        v254[11] = v263;
        *((unsigned char *)v254 + 96) = *((unsigned char *)v255 + 96);
        uint64_t v264 = v255[14];
        v254[13] = v255[13];
        v254[14] = v264;
        uint64_t v265 = v256[13];
        uint64_t v669 = (char *)v254 + v265;
        uint64_t v675 = (char *)v255 + v265;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v675, 1, v687))
        {
          uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v669, v675, *(void *)(*(void *)(v266 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v687 - 8) + 16))(v669, v675, v687);
          __swift_storeEnumTagSinglePayload((uint64_t)v669, 0, 1, v687);
        }
        uint64_t v267 = v256[14];
        long long v268 = (char *)v254 + v267;
        long long v269 = (char *)v255 + v267;
        if (__swift_getEnumTagSinglePayload((uint64_t)v255 + v267, 1, v687))
        {
          uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v687 - 8) + 16))(v268, v269, v687);
          __swift_storeEnumTagSinglePayload((uint64_t)v268, 0, 1, v687);
        }
        uint64_t v271 = v256[15];
        uint64_t v272 = (void *)((char *)v254 + v271);
        uint64_t v273 = (void *)((char *)v255 + v271);
        uint64_t v274 = v273[1];
        void *v272 = *v273;
        v272[1] = v274;
        uint64_t v275 = v256[16];
        uint64_t v276 = (void *)((char *)v254 + v275);
        uint64_t v277 = (void *)((char *)v255 + v275);
        uint64_t v278 = v277[1];
        void *v276 = *v277;
        v276[1] = v278;
        uint64_t v279 = v256[17];
        uint64_t v280 = (void *)((char *)v254 + v279);
        int v281 = (void *)((char *)v255 + v279);
        uint64_t v282 = v281[1];
        void *v280 = *v281;
        v280[1] = v282;
        uint64_t v283 = v256[18];
        uint64_t v676 = (char *)v254 + v283;
        long long v284 = (char *)v255 + v283;
        uint64_t v285 = type metadata accessor for DateComponents();
        uint64_t v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v286(v676, v284, v285);
        v286((char *)v254 + v256[19], (char *)v255 + v256[19], v285);
        uint64_t v287 = v256[20];
        uint64_t v288 = (void *)((char *)v254 + v287);
        uint64_t v289 = (void *)((char *)v255 + v287);
        uint64_t v290 = v289[1];
        void *v288 = *v289;
        v288[1] = v290;
        uint64_t v291 = v256[21];
        uint64_t v292 = (void *)((char *)v254 + v291);
        uint64_t v293 = (void *)((char *)v255 + v291);
        uint64_t v294 = v293[1];
        void *v292 = *v293;
        v292[1] = v294;
        uint64_t v295 = v256[22];
        uint64_t v296 = (void *)((char *)v254 + v295);
        uint64_t v297 = (void *)((char *)v255 + v295);
        uint64_t v677 = v297[1];
        void *v296 = *v297;
        v296[1] = v677;
        uint64_t v298 = v256[23];
        v299 = (void *)((char *)v254 + v298);
        int v300 = (void *)((char *)v255 + v298);
        uint64_t v670 = (void *)v300[1];
        void *v299 = *v300;
        v299[1] = v670;
        uint64_t v301 = v256[24];
        uint64_t v302 = (void *)((char *)v254 + v301);
        uint64_t v303 = (void *)((char *)v255 + v301);
        uint64_t v665 = v303[1];
        void *v302 = *v303;
        v302[1] = v665;
        uint64_t v304 = v256[25];
        uint64_t v305 = (void *)((char *)v254 + v304);
        uint64_t v306 = (void *)((char *)v255 + v304);
        uint64_t v662 = (void *)v306[1];
        void *v305 = *v306;
        v305[1] = v662;
        uint64_t v307 = v256[26];
        v308 = (void *)((char *)v254 + v307);
        uint64_t v309 = (void *)((char *)v255 + v307);
        uint64_t v661 = v309[1];
        void *v308 = *v309;
        v308[1] = v661;
        uint64_t v310 = v256[27];
        uint64_t v311 = (void *)((char *)v254 + v310);
        uint64_t v312 = (void *)((char *)v255 + v310);
        uint64_t v660 = v312[1];
        void *v311 = *v312;
        v311[1] = v660;
        uint64_t v313 = v256[28];
        int v314 = (void *)((char *)v254 + v313);
        int v315 = (void *)((char *)v255 + v313);
        uint64_t v659 = v315[1];
        void *v314 = *v315;
        v314[1] = v659;
        uint64_t v316 = v256[29];
        uint64_t v317 = (void *)((char *)v254 + v316);
        uint64_t v318 = (void *)((char *)v255 + v316);
        uint64_t v658 = v318[1];
        void *v317 = *v318;
        v317[1] = v658;
        uint64_t v319 = v256[30];
        uint64_t v320 = (void *)((char *)v254 + v319);
        uint64_t v321 = (void *)((char *)v255 + v319);
        uint64_t v657 = v321[1];
        void *v320 = *v321;
        v320[1] = v657;
        uint64_t v322 = v256[31];
        v323 = (void *)((char *)v254 + v322);
        uint64_t v324 = (void *)((char *)v255 + v322);
        uint64_t v655 = (void *)v324[1];
        void *v323 = *v324;
        v323[1] = v655;
        uint64_t v325 = v256[32];
        uint64_t v326 = (void *)((char *)v254 + v325);
        uint64_t v327 = (void *)((char *)v255 + v325);
        uint64_t v328 = v327[1];
        *uint64_t v326 = *v327;
        v326[1] = v328;
        *(void *)((char *)v254 + v256[33]) = *(void *)((char *)v255 + v256[33]);
        *(void *)((char *)v254 + v256[34]) = *(void *)((char *)v255 + v256[34]);
        uint64_t v329 = v256[35];
        uint64_t v330 = (void *)((char *)v254 + v329);
        uint64_t v331 = (void *)((char *)v255 + v329);
        uint64_t v332 = v331[1];
        *uint64_t v330 = *v331;
        v330[1] = v332;
        uint64_t v333 = v256[36];
        uint64_t v334 = (void *)((char *)v254 + v333);
        int v335 = (void *)((char *)v255 + v333);
        uint64_t v336 = v335[1];
        *uint64_t v334 = *v335;
        v334[1] = v336;
        uint64_t v337 = v256[37];
        uint64_t v338 = (void *)((char *)v254 + v337);
        uint64_t v339 = (void *)((char *)v255 + v337);
        uint64_t v340 = v339[1];
        *uint64_t v338 = *v339;
        v338[1] = v340;
        uint64_t v341 = v256[38];
        uint64_t v652 = (char *)v254 + v341;
        uint64_t v342 = (char *)v255 + v341;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v342, 1, v688))
        {
          uint64_t v343 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v652, v342, *(void *)(*(void *)(v343 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v652, v342, v688);
          __swift_storeEnumTagSinglePayload((uint64_t)v652, 0, 1, v688);
        }
        uint64_t v47 = v683;
        uint64_t v344 = v256[39];
        uint64_t v345 = (void *)((char *)v254 + v344);
        uint64_t v346 = (void *)((char *)v255 + v344);
        uint64_t v347 = v346[1];
        *uint64_t v345 = *v346;
        v345[1] = v347;
        uint64_t v348 = v256[40];
        uint64_t v349 = (void *)((char *)v254 + v348);
        v350 = (void *)((char *)v255 + v348);
        uint64_t v351 = v350[1];
        *uint64_t v349 = *v350;
        v349[1] = v351;
        uint64_t v352 = v256[41];
        uint64_t v353 = (char *)v254 + v352;
        uint64_t v354 = (char *)v255 + v352;
        v353[8] = v354[8];
        *(void *)uint64_t v353 = *(void *)v354;
        uint64_t v355 = v256[42];
        uint64_t v356 = (void *)((char *)v254 + v355);
        uint64_t v357 = (void *)((char *)v255 + v355);
        uint64_t v358 = v357[1];
        *uint64_t v356 = *v357;
        v356[1] = v358;
        uint64_t v359 = v256[43];
        v360 = (char *)v254 + v359;
        uint64_t v361 = (char *)v255 + v359;
        *(_OWORD *)v360 = *(_OWORD *)v361;
        *(void *)(v360 + 13) = *(void *)(v361 + 13);
        uint64_t v362 = v256[44];
        uint64_t v363 = (void *)((char *)v254 + v362);
        v364 = (void *)((char *)v255 + v362);
        uint64_t v365 = v364[1];
        *uint64_t v363 = *v364;
        v363[1] = v365;
        uint64_t v366 = v256[45];
        uint64_t v367 = (void *)((char *)v254 + v366);
        uint64_t v368 = (void *)((char *)v255 + v366);
        uint64_t v369 = v368[1];
        *uint64_t v367 = *v368;
        v367[1] = v369;
        uint64_t v370 = v256[46];
        uint64_t v371 = (void *)((char *)v254 + v370);
        uint64_t v372 = (void *)((char *)v255 + v370);
        uint64_t v373 = v372[1];
        *uint64_t v371 = *v372;
        v371[1] = v373;
        uint64_t v374 = v256[47];
        uint64_t v375 = (void *)((char *)v254 + v374);
        uint64_t v376 = (void *)((char *)v255 + v374);
        uint64_t v377 = v376[1];
        *uint64_t v375 = *v376;
        v375[1] = v377;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, (uint64_t)v256);
        uint64_t v17 = v691;
        int v49 = v684;
        uint64_t v48 = v681;
      }
      uint64_t v378 = v49[12];
      uint64_t v379 = (void *)((char *)v47 + v378);
      uint64_t v380 = (void *)((char *)v48 + v378);
      uint64_t v381 = (int *)type metadata accessor for HotelReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v380, 1, (uint64_t)v381))
      {
        uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
        memcpy(v379, v380, *(void *)(*(void *)(v382 - 8) + 64));
      }
      else
      {
        uint64_t v383 = v380[1];
        *uint64_t v379 = *v380;
        v379[1] = v383;
        uint64_t v384 = v380[3];
        v379[2] = v380[2];
        v379[3] = v384;
        uint64_t v385 = v380[5];
        v379[4] = v380[4];
        v379[5] = v385;
        uint64_t v678 = v380[7];
        v379[6] = v380[6];
        v379[7] = v678;
        uint64_t v386 = v380[9];
        v379[8] = v380[8];
        v379[9] = v386;
        uint64_t v387 = v380[11];
        v379[10] = v380[10];
        v379[11] = v387;
        *((unsigned char *)v379 + 96) = *((unsigned char *)v380 + 96);
        uint64_t v388 = v380[14];
        v379[13] = v380[13];
        v379[14] = v388;
        uint64_t v389 = v380[16];
        v379[15] = v380[15];
        v379[16] = v389;
        uint64_t v390 = v381[14];
        uint64_t v663 = (char *)v379 + v390;
        int v666 = (char *)v380 + v390;
        uint64_t v391 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v666, 1, v391))
        {
          uint64_t v392 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v663, v666, *(void *)(*(void *)(v392 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v663, v666, v391);
          __swift_storeEnumTagSinglePayload((uint64_t)v663, 0, 1, v391);
        }
        uint64_t v393 = v381[15];
        uint64_t v394 = (char *)v379 + v393;
        uint64_t v395 = (char *)v380 + v393;
        if (__swift_getEnumTagSinglePayload((uint64_t)v380 + v393, 1, v391))
        {
          uint64_t v396 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v394, v395, *(void *)(*(void *)(v396 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v394, v395, v391);
          __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v391);
        }
        uint64_t v397 = v381[16];
        uint64_t v398 = (void *)((char *)v379 + v397);
        int v399 = (void *)((char *)v380 + v397);
        uint64_t v400 = v399[1];
        *uint64_t v398 = *v399;
        v398[1] = v400;
        uint64_t v401 = v381[17];
        uint64_t v402 = (void *)((char *)v379 + v401);
        v403 = (void *)((char *)v380 + v401);
        uint64_t v679 = v403[1];
        *uint64_t v402 = *v403;
        v402[1] = v679;
        uint64_t v404 = v381[18];
        uint64_t v405 = (void *)((char *)v379 + v404);
        uint64_t v406 = (void *)((char *)v380 + v404);
        uint64_t v671 = (void *)v406[1];
        *uint64_t v405 = *v406;
        v405[1] = v671;
        uint64_t v407 = v381[19];
        uint64_t v408 = (void *)((char *)v379 + v407);
        v409 = (void *)((char *)v380 + v407);
        uint64_t v667 = v409[1];
        *uint64_t v408 = *v409;
        v408[1] = v667;
        uint64_t v410 = v381[20];
        uint64_t v411 = (void *)((char *)v379 + v410);
        uint64_t v412 = (void *)((char *)v380 + v410);
        uint64_t v413 = v412[1];
        *uint64_t v411 = *v412;
        v411[1] = v413;
        *(void *)((char *)v379 + v381[21]) = *(void *)((char *)v380 + v381[21]);
        *(void *)((char *)v379 + v381[22]) = *(void *)((char *)v380 + v381[22]);
        uint64_t v414 = v381[23];
        int v415 = (char *)v379 + v414;
        int v416 = (char *)v380 + v414;
        *(void *)int v415 = *(void *)v416;
        v415[8] = v416[8];
        uint64_t v417 = v381[24];
        uint64_t v418 = (char *)v379 + v417;
        v419 = (char *)v380 + v417;
        *(void *)uint64_t v418 = *(void *)v419;
        v418[8] = v419[8];
        uint64_t v420 = v381[25];
        uint64_t v421 = (void *)((char *)v379 + v420);
        uint64_t v422 = (void *)((char *)v380 + v420);
        uint64_t v423 = v422[1];
        *uint64_t v421 = *v422;
        v421[1] = v423;
        uint64_t v424 = v381[26];
        int v425 = (void *)((char *)v379 + v424);
        uint64_t v426 = (void *)((char *)v380 + v424);
        uint64_t v427 = v426[1];
        *int v425 = *v426;
        v425[1] = v427;
        uint64_t v428 = v381[27];
        long long v429 = (void *)((char *)v379 + v428);
        long long v430 = (void *)((char *)v380 + v428);
        uint64_t v431 = v430[1];
        *long long v429 = *v430;
        v429[1] = v431;
        uint64_t v432 = v381[28];
        uint64_t v433 = (void *)((char *)v379 + v432);
        uint64_t v434 = (void *)((char *)v380 + v432);
        uint64_t v435 = v434[1];
        *uint64_t v433 = *v434;
        v433[1] = v435;
        uint64_t v436 = v381[29];
        uint64_t v437 = (char *)v379 + v436;
        uint64_t v438 = (char *)v380 + v436;
        *(void *)uint64_t v437 = *(void *)v438;
        v437[8] = v438[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v379, 0, 1, (uint64_t)v381);
        uint64_t v17 = v691;
        uint64_t v47 = v683;
        int v49 = v684;
        uint64_t v48 = v681;
      }
      uint64_t v439 = v49[13];
      uint64_t v440 = (void *)((char *)v47 + v439);
      uint64_t v441 = (void *)((char *)v48 + v439);
      uint64_t v442 = (int *)type metadata accessor for RestaurantReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v441, 1, (uint64_t)v442))
      {
        uint64_t v443 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
        memcpy(v440, v441, *(void *)(*(void *)(v443 - 8) + 64));
      }
      else
      {
        uint64_t v444 = v441[1];
        void *v440 = *v441;
        v440[1] = v444;
        uint64_t v445 = v441[3];
        v440[2] = v441[2];
        v440[3] = v445;
        uint64_t v446 = v441[5];
        v440[4] = v441[4];
        v440[5] = v446;
        uint64_t v682 = v441[7];
        v440[6] = v441[6];
        v440[7] = v682;
        uint64_t v680 = v441[9];
        v440[8] = v441[8];
        v440[9] = v680;
        uint64_t v447 = v441[11];
        v440[10] = v441[10];
        v440[11] = v447;
        *((unsigned char *)v440 + 96) = *((unsigned char *)v441 + 96);
        uint64_t v448 = v441[14];
        v440[13] = v441[13];
        v440[14] = v448;
        uint64_t v449 = v441[16];
        v440[15] = v441[15];
        v440[16] = v449;
        uint64_t v450 = v442[14];
        uint64_t v664 = (char *)v440 + v450;
        uint64_t v451 = (char *)v441 + v450;
        uint64_t v668 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v451, 1, v668))
        {
          uint64_t v452 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v664, v451, *(void *)(*(void *)(v452 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v668 - 8) + 16))(v664, v451, v668);
          __swift_storeEnumTagSinglePayload((uint64_t)v664, 0, 1, v668);
        }
        uint64_t v453 = v442[15];
        uint64_t v454 = (void *)((char *)v440 + v453);
        uint64_t v455 = (void *)((char *)v441 + v453);
        uint64_t v456 = v455[1];
        void *v454 = *v455;
        v454[1] = v456;
        uint64_t v457 = v442[16];
        uint64_t v458 = (void *)((char *)v440 + v457);
        uint64_t v459 = (void *)((char *)v441 + v457);
        uint64_t v460 = v459[1];
        void *v458 = *v459;
        v458[1] = v460;
        uint64_t v461 = v442[17];
        int v462 = (void *)((char *)v440 + v461);
        uint64_t v463 = (void *)((char *)v441 + v461);
        uint64_t v464 = v463[1];
        void *v462 = *v463;
        v462[1] = v464;
        uint64_t v465 = v442[18];
        uint64_t v466 = (void *)((char *)v440 + v465);
        uint64_t v467 = (void *)((char *)v441 + v465);
        uint64_t v468 = v467[1];
        void *v466 = *v467;
        v466[1] = v468;
        uint64_t v469 = v442[19];
        uint64_t v470 = (void *)((char *)v440 + v469);
        uint64_t v471 = (void *)((char *)v441 + v469);
        uint64_t v472 = v471[1];
        void *v470 = *v471;
        v470[1] = v472;
        *(void *)((char *)v440 + v442[20]) = *(void *)((char *)v441 + v442[20]);
        uint64_t v473 = v442[21];
        uint64_t v474 = (void *)((char *)v440 + v473);
        uint64_t v475 = (void *)((char *)v441 + v473);
        uint64_t v476 = v475[1];
        void *v474 = *v475;
        v474[1] = v476;
        uint64_t v477 = v442[22];
        int v478 = (void *)((char *)v440 + v477);
        int v479 = (void *)((char *)v441 + v477);
        uint64_t v480 = v479[1];
        void *v478 = *v479;
        v478[1] = v480;
        uint64_t v481 = v442[23];
        uint64_t v482 = (void *)((char *)v440 + v481);
        uint64_t v483 = (void *)((char *)v441 + v481);
        uint64_t v484 = v483[1];
        void *v482 = *v483;
        v482[1] = v484;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v440, 0, 1, (uint64_t)v442);
        uint64_t v17 = v691;
        uint64_t v47 = v683;
        int v49 = v684;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, (uint64_t)v49);
      uint64_t v18 = a3;
    }
    uint64_t v485 = v18[20];
    uint64_t v486 = (void *)((char *)v17 + v485);
    uint64_t v487 = (void *)((char *)v693 + v485);
    uint64_t v488 = (int *)type metadata accessor for PreExtractedCard(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v487, 1, (uint64_t)v488))
    {
      uint64_t v489 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
      memcpy(v486, v487, *(void *)(*(void *)(v489 - 8) + 64));
    }
    else
    {
      uint64_t v490 = v487[1];
      void *v486 = *v487;
      v486[1] = v490;
      uint64_t v491 = v487[3];
      v486[2] = v487[2];
      v486[3] = v491;
      uint64_t v492 = v487[5];
      v486[4] = v487[4];
      v486[5] = v492;
      uint64_t v493 = v487[7];
      v486[6] = v487[6];
      v486[7] = v493;
      uint64_t v494 = v487[9];
      v486[8] = v487[8];
      v486[9] = v494;
      uint64_t v495 = v487[11];
      v486[10] = v487[10];
      v486[11] = v495;
      uint64_t v496 = v488[10];
      uint64_t v497 = (char *)v486 + v496;
      uint64_t v498 = (char *)v487 + v496;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v498, 1, v688))
      {
        uint64_t v499 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v497, v498, *(void *)(*(void *)(v499 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v497, v498, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v497, 0, 1, v688);
      }
      uint64_t v500 = v488[11];
      uint64_t v501 = (char *)v486 + v500;
      uint64_t v502 = (char *)v487 + v500;
      if (__swift_getEnumTagSinglePayload((uint64_t)v487 + v500, 1, v688))
      {
        uint64_t v503 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v501, v502, *(void *)(*(void *)(v503 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v501, v502, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v501, 0, 1, v688);
      }
      uint64_t v504 = v488[12];
      uint64_t v505 = (void *)((char *)v486 + v504);
      uint64_t v506 = (void *)((char *)v487 + v504);
      uint64_t v507 = v506[1];
      void *v505 = *v506;
      v505[1] = v507;
      uint64_t v508 = v488[13];
      int v509 = (void *)((char *)v486 + v508);
      size_t v510 = (void *)((char *)v487 + v508);
      uint64_t v511 = v510[1];
      void *v509 = *v510;
      v509[1] = v511;
      uint64_t v512 = v488[14];
      v513 = (void *)((char *)v486 + v512);
      uint64_t v514 = (void *)((char *)v487 + v512);
      uint64_t v515 = v514[1];
      void *v513 = *v514;
      v513[1] = v515;
      uint64_t v516 = v488[15];
      int v517 = (char *)v486 + v516;
      int v518 = (char *)v487 + v516;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v518, 1, v688))
      {
        uint64_t v519 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v517, v518, *(void *)(*(void *)(v519 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v517, v518, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v517, 0, 1, v688);
      }
      uint64_t v520 = v488[16];
      uint64_t v521 = (void *)((char *)v486 + v520);
      uint64_t v522 = (void *)((char *)v487 + v520);
      uint64_t v523 = v522[1];
      void *v521 = *v522;
      v521[1] = v523;
      uint64_t v524 = v488[17];
      uint64_t v525 = (void *)((char *)v486 + v524);
      uint64_t v526 = (void *)((char *)v487 + v524);
      uint64_t v527 = v526[1];
      void *v525 = *v526;
      v525[1] = v527;
      uint64_t v528 = v488[18];
      uint64_t v529 = (void *)((char *)v486 + v528);
      uint64_t v530 = (void *)((char *)v487 + v528);
      uint64_t v531 = v530[1];
      void *v529 = *v530;
      v529[1] = v531;
      uint64_t v532 = v488[19];
      uint64_t v533 = (void *)((char *)v486 + v532);
      uint64_t v534 = (void *)((char *)v487 + v532);
      uint64_t v535 = v534[1];
      void *v533 = *v534;
      v533[1] = v535;
      uint64_t v536 = v488[20];
      uint64_t v537 = (void *)((char *)v486 + v536);
      uint64_t v538 = (void *)((char *)v487 + v536);
      uint64_t v539 = v538[1];
      void *v537 = *v538;
      v537[1] = v539;
      uint64_t v540 = v488[21];
      uint64_t v541 = (void *)((char *)v486 + v540);
      uint64_t v542 = (void *)((char *)v487 + v540);
      uint64_t v543 = v542[1];
      void *v541 = *v542;
      v541[1] = v543;
      uint64_t v544 = v488[22];
      int v545 = (void *)((char *)v486 + v544);
      uint64_t v546 = (void *)((char *)v487 + v544);
      uint64_t v547 = v546[1];
      void *v545 = *v546;
      v545[1] = v547;
      uint64_t v548 = v488[23];
      v549 = (void *)((char *)v486 + v548);
      uint64_t v550 = (void *)((char *)v487 + v548);
      uint64_t v551 = v550[1];
      void *v549 = *v550;
      v549[1] = v551;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v486, 0, 1, (uint64_t)v488);
      uint64_t v18 = a3;
      uint64_t v17 = v691;
    }
    uint64_t v552 = v18[21];
    uint64_t v553 = (void *)((char *)v17 + v552);
    uint64_t v554 = (void *)((char *)v693 + v552);
    uint64_t v555 = (int *)type metadata accessor for PreExtractedContact(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v554, 1, (uint64_t)v555))
    {
      uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
      memcpy(v553, v554, *(void *)(*(void *)(v556 - 8) + 64));
    }
    else
    {
      uint64_t v557 = v554[1];
      void *v553 = *v554;
      v553[1] = v557;
      uint64_t v558 = v554[3];
      v553[2] = v554[2];
      v553[3] = v558;
      uint64_t v559 = v554[5];
      v553[4] = v554[4];
      v553[5] = v559;
      uint64_t v560 = v554[7];
      v553[6] = v554[6];
      v553[7] = v560;
      uint64_t v561 = v554[9];
      v553[8] = v554[8];
      v553[9] = v561;
      uint64_t v562 = v554[11];
      v553[10] = v554[10];
      v553[11] = v562;
      uint64_t v563 = v555[11];
      uint64_t v685 = (char *)v553 + v563;
      uint64_t v564 = (char *)v554 + v563;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v564, 1, v688))
      {
        uint64_t v565 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v685, v564, *(void *)(*(void *)(v565 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v685, v564, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v685, 0, 1, v688);
      }
      uint64_t v566 = v555[12];
      int v567 = (void *)((char *)v553 + v566);
      int v568 = (void *)((char *)v554 + v566);
      uint64_t v569 = v568[1];
      void *v567 = *v568;
      v567[1] = v569;
      *(void *)((char *)v553 + v555[13]) = *(void *)((char *)v554 + v555[13]);
      uint64_t v570 = v555[14];
      long long v571 = (char *)v553 + v570;
      long long v572 = (char *)v554 + v570;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = a3;
      if (__swift_getEnumTagSinglePayload((uint64_t)v572, 1, v688))
      {
        uint64_t v573 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v571, v572, *(void *)(*(void *)(v573 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v571, v572, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v571, 0, 1, v688);
      }
      *(void *)((char *)v553 + v555[15]) = *(void *)((char *)v554 + v555[15]);
      *(void *)((char *)v553 + v555[16]) = *(void *)((char *)v554 + v555[16]);
      uint64_t v574 = v555[17];
      long long v575 = (void *)((char *)v553 + v574);
      uint64_t v576 = (void *)((char *)v554 + v574);
      uint64_t v577 = v576[1];
      void *v575 = *v576;
      v575[1] = v577;
      *(void *)((char *)v553 + v555[18]) = *(void *)((char *)v554 + v555[18]);
      *(void *)((char *)v553 + v555[19]) = *(void *)((char *)v554 + v555[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v553, 0, 1, (uint64_t)v555);
      uint64_t v17 = v691;
    }
    uint64_t v578 = v18[22];
    v579 = (void *)((char *)v17 + v578);
    uint64_t v580 = (void *)((char *)v693 + v578);
    uint64_t v581 = (int *)type metadata accessor for PreExtractedSharedLink(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v580, 1, (uint64_t)v581))
    {
      uint64_t v582 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
      memcpy(v579, v580, *(void *)(*(void *)(v582 - 8) + 64));
    }
    else
    {
      uint64_t v583 = v580[1];
      void *v579 = *v580;
      v579[1] = v583;
      uint64_t v584 = v580[3];
      v579[2] = v580[2];
      v579[3] = v584;
      uint64_t v585 = v580[5];
      v579[4] = v580[4];
      v579[5] = v585;
      uint64_t v586 = v580[7];
      v579[6] = v580[6];
      v579[7] = v586;
      uint64_t v587 = v581[8];
      uint64_t v588 = (char *)v579 + v587;
      uint64_t v589 = (char *)v580 + v587;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v589, 1, v687))
      {
        uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v588, v589, *(void *)(*(void *)(v590 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v687 - 8) + 16))(v588, v589, v687);
        __swift_storeEnumTagSinglePayload((uint64_t)v588, 0, 1, v687);
      }
      uint64_t v591 = v581[9];
      uint64_t v592 = (void *)((char *)v579 + v591);
      uint64_t v593 = (void *)((char *)v580 + v591);
      uint64_t v594 = v593[1];
      void *v592 = *v593;
      v592[1] = v594;
      uint64_t v595 = v581[10];
      uint64_t v596 = (void *)((char *)v579 + v595);
      uint64_t v597 = (void *)((char *)v580 + v595);
      uint64_t v598 = v597[1];
      void *v596 = *v597;
      v596[1] = v598;
      uint64_t v599 = v581[11];
      int v600 = (void *)((char *)v579 + v599);
      size_t v601 = (void *)((char *)v580 + v599);
      uint64_t v602 = v601[1];
      void *v600 = *v601;
      v600[1] = v602;
      uint64_t v603 = v581[12];
      uint64_t v604 = (char *)v579 + v603;
      uint64_t v605 = (char *)v580 + v603;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v605, 1, v688))
      {
        uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v604, v605, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v688);
      }
      uint64_t v607 = v581[13];
      int v608 = (char *)v579 + v607;
      int v609 = (char *)v580 + v607;
      if (__swift_getEnumTagSinglePayload((uint64_t)v580 + v607, 1, v688))
      {
        uint64_t v610 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v608, v609, *(void *)(*(void *)(v610 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v688 - 8) + 16))(v608, v609, v688);
        __swift_storeEnumTagSinglePayload((uint64_t)v608, 0, 1, v688);
      }
      uint64_t v611 = v581[14];
      uint64_t v612 = (char *)v579 + v611;
      uint64_t v613 = (char *)v580 + v611;
      *(void *)uint64_t v612 = *(void *)v613;
      v612[8] = v613[8];
      uint64_t v614 = v581[15];
      uint64_t v615 = (void *)((char *)v579 + v614);
      uint64_t v616 = (void *)((char *)v580 + v614);
      uint64_t v617 = v616[1];
      void *v615 = *v616;
      v615[1] = v617;
      uint64_t v618 = v581[16];
      long long v619 = (void *)((char *)v579 + v618);
      long long v620 = (void *)((char *)v580 + v618);
      uint64_t v621 = v620[1];
      void *v619 = *v620;
      v619[1] = v621;
      uint64_t v622 = v581[17];
      long long v623 = (void *)((char *)v579 + v622);
      long long v624 = (void *)((char *)v580 + v622);
      uint64_t v625 = v624[1];
      void *v623 = *v624;
      v623[1] = v625;
      uint64_t v626 = v581[18];
      uint64_t v627 = (void *)((char *)v579 + v626);
      v628 = (void *)((char *)v580 + v626);
      uint64_t v629 = v628[1];
      void *v627 = *v628;
      v627[1] = v629;
      uint64_t v630 = v581[19];
      uint64_t v631 = (void *)((char *)v579 + v630);
      uint64_t v632 = (void *)((char *)v580 + v630);
      uint64_t v633 = v632[1];
      void *v631 = *v632;
      v631[1] = v633;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v579, 0, 1, (uint64_t)v581);
      uint64_t v17 = v691;
    }
    uint64_t v634 = v18[23];
    uint64_t v635 = (void *)((char *)v17 + v634);
    uint64_t v636 = (void *)((char *)v693 + v634);
    uint64_t v637 = *(void *)((char *)v693 + v634 + 8);
    if (v637)
    {
      void *v635 = *v636;
      v635[1] = v637;
      uint64_t v638 = v636[3];
      v635[2] = v636[2];
      v635[3] = v638;
      uint64_t v639 = v636[5];
      v635[4] = v636[4];
      v635[5] = v639;
      uint64_t v640 = v636[7];
      v635[6] = v636[6];
      v635[7] = v640;
      uint64_t v641 = v636[9];
      v635[8] = v636[8];
      v635[9] = v641;
      uint64_t v642 = v636[11];
      v635[10] = v636[10];
      v635[11] = v642;
      uint64_t v686 = v636[13];
      v635[12] = v636[12];
      v635[13] = v686;
      uint64_t v689 = v636[15];
      v635[14] = v636[14];
      v635[15] = v689;
      uint64_t v694 = v636[17];
      v635[16] = v636[16];
      v635[17] = v694;
      swift_bridgeObjectRetain();
      uint64_t v17 = v691;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v635, v636, 0x90uLL);
    }
  }
  return v17;
}

uint64_t destroy for MobileSMSDocument(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[17]))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[19];
  uint64_t v9 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  if (!__swift_getEnumTagSinglePayload(v8, 1, (uint64_t)v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v9[5];
    uint64_t v11 = type metadata accessor for RentalCarReservation(0);
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + *(int *)(v11 + 140);
      if (!__swift_getEnumTagSinglePayload(v12, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v12, v5);
      }
      uint64_t v13 = v10 + *(int *)(v11 + 144);
      if (!__swift_getEnumTagSinglePayload(v13, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v13, v5);
      }
    }
    uint64_t v14 = v8 + v9[6];
    uint64_t v15 = type metadata accessor for TicketedTransportation(0);
    if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v14 + *(int *)(v15 + 112);
      if (!__swift_getEnumTagSinglePayload(v16, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v16, v5);
      }
      uint64_t v17 = v14 + *(int *)(v15 + 116);
      if (!__swift_getEnumTagSinglePayload(v17, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v17, v5);
      }
    }
    uint64_t v18 = v8 + v9[7];
    uint64_t v19 = (int *)type metadata accessor for TicketedShow(0);
    if (!__swift_getEnumTagSinglePayload(v18, 1, (uint64_t)v19))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v18 + v19[29];
      if (!__swift_getEnumTagSinglePayload(v20, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v20, v7);
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = v18 + v19[31];
      if (!__swift_getEnumTagSinglePayload(v21, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v21, v5);
      }
      uint64_t v22 = v18 + v19[32];
      if (!__swift_getEnumTagSinglePayload(v22, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v22, v5);
      }
    }
    uint64_t v23 = v8 + v9[8];
    uint64_t v24 = type metadata accessor for Appointment(0);
    if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23 + *(int *)(v24 + 108);
      if (!__swift_getEnumTagSinglePayload(v25, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v25, v5);
      }
      uint64_t v26 = v23 + *(int *)(v24 + 112);
      if (!__swift_getEnumTagSinglePayload(v26, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v26, v5);
      }
    }
    uint64_t v27 = v8 + v9[9];
    uint64_t v28 = (int *)type metadata accessor for Party(0);
    if (!__swift_getEnumTagSinglePayload(v27, 1, (uint64_t)v28))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = v27 + v28[24];
      if (!__swift_getEnumTagSinglePayload(v29, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v29, v5);
      }
      uint64_t v30 = v27 + v28[25];
      if (!__swift_getEnumTagSinglePayload(v30, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v30, v5);
      }
      uint64_t v31 = v27 + v28[26];
      if (!__swift_getEnumTagSinglePayload(v31, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v31, v7);
      }
    }
    uint64_t v32 = v8 + v9[10];
    uint64_t v33 = (int *)type metadata accessor for Trip(0);
    if (!__swift_getEnumTagSinglePayload(v32, 1, (uint64_t)v33))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v32 + v33[22];
      if (!__swift_getEnumTagSinglePayload(v34, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v34, v5);
      }
      uint64_t v35 = v32 + v33[23];
      if (!__swift_getEnumTagSinglePayload(v35, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v35, v5);
      }
      uint64_t v36 = v32 + v33[25];
      if (!__swift_getEnumTagSinglePayload(v36, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v36, v7);
      }
    }
    uint64_t v37 = v8 + v9[11];
    uint64_t v38 = (int *)type metadata accessor for FlightReservation(0);
    if (!__swift_getEnumTagSinglePayload(v37, 1, (uint64_t)v38))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v37 + v38[13];
      if (!__swift_getEnumTagSinglePayload(v39, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v39, v7);
      }
      uint64_t v40 = v37 + v38[14];
      if (!__swift_getEnumTagSinglePayload(v40, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v40, v7);
      }
      uint64_t v69 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v37 + v38[18];
      uint64_t v42 = type metadata accessor for DateComponents();
      uint64_t v43 = *(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8);
      v43(v41, v42);
      v43(v37 + v38[19], v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v37 + v38[38];
      if (!__swift_getEnumTagSinglePayload(v44, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v44, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v69;
    }
    uint64_t v45 = v8 + v9[12];
    uint64_t v46 = type metadata accessor for HotelReservation(0);
    if (!__swift_getEnumTagSinglePayload(v45, 1, v46))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v45 + *(int *)(v46 + 56);
      uint64_t v48 = type metadata accessor for DateComponents();
      if (!__swift_getEnumTagSinglePayload(v47, 1, v48)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      }
      uint64_t v49 = v45 + *(int *)(v46 + 60);
      if (!__swift_getEnumTagSinglePayload(v49, 1, v48)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v49, v48);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v50 = v8 + v9[13];
    uint64_t v51 = type metadata accessor for RestaurantReservation(0);
    if (!__swift_getEnumTagSinglePayload(v50, 1, v51))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = v50 + *(int *)(v51 + 56);
      uint64_t v53 = type metadata accessor for DateComponents();
      if (!__swift_getEnumTagSinglePayload(v52, 1, v53)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v54 = a1 + a2[20];
  uint64_t v55 = (int *)type metadata accessor for PreExtractedCard(0);
  if (!__swift_getEnumTagSinglePayload(v54, 1, (uint64_t)v55))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = v54 + v55[10];
    if (!__swift_getEnumTagSinglePayload(v56, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v56, v5);
    }
    uint64_t v57 = v54 + v55[11];
    if (!__swift_getEnumTagSinglePayload(v57, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v57, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v58 = v54 + v55[15];
    if (!__swift_getEnumTagSinglePayload(v58, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v58, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v59 = a1 + a2[21];
  uint64_t v60 = type metadata accessor for PreExtractedContact(0);
  if (!__swift_getEnumTagSinglePayload(v59, 1, v60))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = v59 + *(int *)(v60 + 44);
    if (!__swift_getEnumTagSinglePayload(v61, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v61, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v62 = v59 + *(int *)(v60 + 56);
    if (!__swift_getEnumTagSinglePayload(v62, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v62, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v63 = a1 + a2[22];
  uint64_t v64 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (!__swift_getEnumTagSinglePayload(v63, 1, (uint64_t)v64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = v63 + v64[8];
    if (!__swift_getEnumTagSinglePayload(v65, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v65, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = v63 + v64[12];
    if (!__swift_getEnumTagSinglePayload(v66, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v66, v5);
    }
    uint64_t v67 = v63 + v64[13];
    if (!__swift_getEnumTagSinglePayload(v67, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v67, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + a2[23] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for MobileSMSDocument(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v12 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v690 = v12;
  uint64_t v685 = v19;
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v21 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[14];
  uint64_t v26 = a3[15];
  uint64_t v27 = (void *)((char *)a1 + v25);
  uint64_t v28 = (void *)((char *)a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v30 = a3[17];
  uint64_t v688 = a3;
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)((char *)a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33)
  {
    uint64_t v34 = *((void *)v32 + 1);
    uint64_t v35 = *((void *)v32 + 2);
    *uint64_t v31 = v33;
    v31[1] = v34;
    uint64_t v36 = *((void *)v32 + 3);
    uint64_t v37 = *((void *)v32 + 4);
    v31[2] = v35;
    v31[3] = v36;
    v31[4] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v38 = *((_OWORD *)v32 + 1);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v38;
    v31[4] = *((void *)v32 + 4);
  }
  uint64_t v39 = v688;
  uint64_t v40 = v688[18];
  uint64_t v41 = v688[19];
  uint64_t v42 = (void *)((char *)a1 + v40);
  uint64_t v43 = (void *)((char *)a2 + v40);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = (void *)((char *)a1 + v41);
  uint64_t v46 = (void *)((char *)a2 + v41);
  uint64_t v47 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, (uint64_t)v47))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    uint64_t v49 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v49;
    uint64_t v50 = v47[5];
    uint64_t v51 = (void *)((char *)v45 + v50);
    uint64_t v52 = (void *)((char *)v46 + v50);
    uint64_t v53 = type metadata accessor for RentalCarReservation(0);
    swift_bridgeObjectRetain();
    uint64_t v681 = v47;
    uint64_t v682 = v45;
    uint64_t v679 = v46;
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      uint64_t v55 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v55;
      uint64_t v56 = v52[3];
      v51[2] = v52[2];
      v51[3] = v56;
      uint64_t v57 = v52[5];
      v51[4] = v52[4];
      v51[5] = v57;
      uint64_t v58 = v52[7];
      v51[6] = v52[6];
      v51[7] = v58;
      uint64_t v59 = v52[9];
      v51[8] = v52[8];
      v51[9] = v59;
      uint64_t v60 = v52[11];
      v51[10] = v52[10];
      v51[11] = v60;
      uint64_t v61 = v52[13];
      v51[12] = v52[12];
      v51[13] = v61;
      uint64_t v62 = v52[15];
      v51[14] = v52[14];
      v51[15] = v62;
      *((unsigned char *)v51 + 128) = *((unsigned char *)v52 + 128);
      *(_WORD *)((char *)v51 + 129) = *(_WORD *)((char *)v52 + 129);
      uint64_t v63 = v52[18];
      v51[17] = v52[17];
      v51[18] = v63;
      uint64_t v64 = v52[20];
      v51[19] = v52[19];
      v51[20] = v64;
      uint64_t v65 = v52[22];
      v51[21] = v52[21];
      v51[22] = v65;
      uint64_t v66 = v52[24];
      v51[23] = v52[23];
      v51[24] = v66;
      uint64_t v67 = v52[26];
      v51[25] = v52[25];
      v51[26] = v67;
      uint64_t v68 = v52[28];
      v51[27] = v52[27];
      v51[28] = v68;
      uint64_t v69 = v52[30];
      v51[29] = v52[29];
      v51[30] = v69;
      __dstf = (void *)v52[32];
      v51[31] = v52[31];
      v51[32] = __dstf;
      uint64_t v70 = v52[34];
      v51[33] = v52[33];
      v51[34] = v70;
      uint64_t v71 = v52[36];
      v51[35] = v52[35];
      v51[36] = v71;
      uint64_t v72 = v52[38];
      v51[37] = v52[37];
      v51[38] = v72;
      uint64_t v73 = v52[40];
      v51[39] = v52[39];
      v51[40] = v73;
      uint64_t v74 = v52[42];
      v51[41] = v52[41];
      v51[42] = v74;
      uint64_t v75 = v52[44];
      v51[43] = v52[43];
      v51[44] = v75;
      uint64_t v76 = v52[46];
      v51[45] = v52[45];
      v51[46] = v76;
      uint64_t v77 = v52[47];
      *((unsigned char *)v51 + 384) = *((unsigned char *)v52 + 384);
      v51[47] = v77;
      uint64_t v78 = v52[50];
      v51[49] = v52[49];
      v51[50] = v78;
      uint64_t v79 = v52[52];
      v51[51] = v52[51];
      v51[52] = v79;
      uint64_t v80 = *(int *)(v53 + 140);
      uint64_t v667 = (char *)v51 + v80;
      uint64_t v81 = (char *)v52 + v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v690))
      {
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v667, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v667, v81, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v667, 0, 1, v690);
      }
      uint64_t v83 = *(int *)(v53 + 144);
      uint64_t v84 = (char *)v51 + v83;
      uint64_t v85 = (char *)v52 + v83;
      if (__swift_getEnumTagSinglePayload((uint64_t)v52 + v83, 1, v690))
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v84, v85, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v690);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
      uint64_t v45 = v682;
    }
    uint64_t v87 = v47[6];
    uint64_t v88 = (void *)((char *)v45 + v87);
    uint64_t v89 = (void *)((char *)v46 + v87);
    uint64_t v90 = type metadata accessor for TicketedTransportation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
    {
      uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
      memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      uint64_t v92 = v89[1];
      *uint64_t v88 = *v89;
      v88[1] = v92;
      uint64_t v93 = v89[3];
      v88[2] = v89[2];
      v88[3] = v93;
      uint64_t v94 = v89[5];
      v88[4] = v89[4];
      v88[5] = v94;
      uint64_t v95 = v89[7];
      v88[6] = v89[6];
      v88[7] = v95;
      uint64_t v96 = v89[9];
      v88[8] = v89[8];
      v88[9] = v96;
      uint64_t v97 = v89[11];
      v88[10] = v89[10];
      v88[11] = v97;
      uint64_t v98 = v89[13];
      v88[12] = v89[12];
      v88[13] = v98;
      uint64_t v99 = v89[15];
      v88[14] = v89[14];
      v88[15] = v99;
      *((unsigned char *)v88 + 128) = *((unsigned char *)v89 + 128);
      *(_WORD *)((char *)v88 + 129) = *(_WORD *)((char *)v89 + 129);
      uint64_t v100 = v89[18];
      v88[17] = v89[17];
      v88[18] = v100;
      uint64_t v101 = v89[20];
      v88[19] = v89[19];
      v88[20] = v101;
      uint64_t v102 = v89[22];
      v88[21] = v89[21];
      v88[22] = v102;
      uint64_t v103 = v89[24];
      v88[23] = v89[23];
      v88[24] = v103;
      uint64_t v654 = v89[26];
      v88[25] = v89[25];
      v88[26] = v654;
      uint64_t v104 = v89[28];
      v88[27] = v89[27];
      v88[28] = v104;
      uint64_t v105 = v89[30];
      v88[29] = v89[29];
      v88[30] = v105;
      uint64_t v106 = v89[32];
      v88[31] = v89[31];
      v88[32] = v106;
      uint64_t v107 = v89[34];
      v88[33] = v89[33];
      v88[34] = v107;
      uint64_t v108 = v89[36];
      uint64_t v109 = v89[35];
      *((unsigned char *)v88 + 296) = *((unsigned char *)v89 + 296);
      v88[35] = v109;
      v88[36] = v108;
      uint64_t v668 = v90;
      uint64_t v110 = *(int *)(v90 + 112);
      __dst = (char *)v88 + v110;
      uint64_t v111 = (char *)v89 + v110;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v690))
      {
        uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dst, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(__dst, v111, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v690);
      }
      uint64_t v113 = *(int *)(v90 + 116);
      uint64_t v114 = (char *)v88 + v113;
      uint64_t v115 = (char *)v89 + v113;
      if (__swift_getEnumTagSinglePayload((uint64_t)v89 + v113, 1, v690))
      {
        uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v114, v115, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v690);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v668);
      uint64_t v45 = v682;
    }
    uint64_t v117 = v47[7];
    uint64_t v118 = (void *)((char *)v45 + v117);
    uint64_t v119 = (void *)((char *)v46 + v117);
    uint64_t v120 = (int *)type metadata accessor for TicketedShow(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v119, 1, (uint64_t)v120))
    {
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
      memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      uint64_t v122 = v119[1];
      *uint64_t v118 = *v119;
      v118[1] = v122;
      uint64_t v123 = v119[3];
      v118[2] = v119[2];
      v118[3] = v123;
      uint64_t v124 = v119[5];
      v118[4] = v119[4];
      v118[5] = v124;
      uint64_t v125 = v119[7];
      v118[6] = v119[6];
      v118[7] = v125;
      uint64_t v126 = v119[9];
      v118[8] = v119[8];
      v118[9] = v126;
      uint64_t v127 = v119[11];
      v118[10] = v119[10];
      v118[11] = v127;
      uint64_t v128 = v119[13];
      v118[12] = v119[12];
      v118[13] = v128;
      uint64_t v129 = v119[15];
      v118[14] = v119[14];
      v118[15] = v129;
      *((unsigned char *)v118 + 128) = *((unsigned char *)v119 + 128);
      *(_WORD *)((char *)v118 + 129) = *(_WORD *)((char *)v119 + 129);
      uint64_t v130 = v119[18];
      v118[17] = v119[17];
      v118[18] = v130;
      uint64_t v131 = v119[20];
      v118[19] = v119[19];
      v118[20] = v131;
      uint64_t v132 = v119[22];
      v118[21] = v119[21];
      v118[22] = v132;
      uint64_t v133 = v119[24];
      v118[23] = v119[23];
      v118[24] = v133;
      uint64_t v134 = v119[26];
      v118[25] = v119[25];
      v118[26] = v134;
      uint64_t v135 = v119[28];
      v118[27] = v119[27];
      v118[28] = v135;
      uint64_t v655 = v119[30];
      v118[29] = v119[29];
      v118[30] = v655;
      uint64_t v136 = v119[32];
      v118[31] = v119[31];
      v118[32] = v136;
      uint64_t v137 = v119[34];
      v118[33] = v119[33];
      v118[34] = v137;
      uint64_t v138 = v119[36];
      uint64_t v139 = v119[35];
      *((unsigned char *)v118 + 296) = *((unsigned char *)v119 + 296);
      v118[35] = v139;
      v118[36] = v138;
      uint64_t v140 = v119[39];
      v118[38] = v119[38];
      v118[39] = v140;
      uint64_t v669 = (uint64_t)v120;
      uint64_t v141 = v120[29];
      __dsta = (char *)v118 + v141;
      uint64_t v142 = (char *)v119 + v141;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v685))
      {
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(__dsta, v142, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(__dsta, v142, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v685);
      }
      uint64_t v144 = v120[30];
      uint64_t v145 = (void *)((char *)v118 + v144);
      uint64_t v146 = (void *)((char *)v119 + v144);
      uint64_t v147 = v146[1];
      void *v145 = *v146;
      v145[1] = v147;
      uint64_t v148 = v120[31];
      uint64_t v149 = (char *)v118 + v148;
      uint64_t v150 = (char *)v119 + v148;
      swift_bridgeObjectRetain();
      uint64_t v47 = v681;
      if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v690))
      {
        uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v149, v150, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v690);
      }
      uint64_t v152 = *(int *)(v669 + 128);
      uint64_t v153 = (char *)v118 + v152;
      uint64_t v154 = (char *)v119 + v152;
      if (__swift_getEnumTagSinglePayload((uint64_t)v119 + v152, 1, v690))
      {
        uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v153, v154, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v153, 0, 1, v690);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v669);
      uint64_t v45 = v682;
    }
    uint64_t v156 = v47[8];
    uint64_t v157 = (void *)((char *)v45 + v156);
    uint64_t v158 = (void *)((char *)v46 + v156);
    uint64_t v159 = type metadata accessor for Appointment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v158, 1, v159))
    {
      uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
      memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
    }
    else
    {
      uint64_t v161 = v158[1];
      *uint64_t v157 = *v158;
      v157[1] = v161;
      uint64_t v162 = v158[3];
      v157[2] = v158[2];
      v157[3] = v162;
      uint64_t v163 = v158[5];
      v157[4] = v158[4];
      v157[5] = v163;
      uint64_t v164 = v158[7];
      v157[6] = v158[6];
      v157[7] = v164;
      uint64_t v165 = v158[9];
      v157[8] = v158[8];
      v157[9] = v165;
      uint64_t v166 = v158[11];
      v157[10] = v158[10];
      v157[11] = v166;
      uint64_t v167 = v158[13];
      v157[12] = v158[12];
      v157[13] = v167;
      uint64_t v168 = v158[15];
      v157[14] = v158[14];
      v157[15] = v168;
      *((unsigned char *)v157 + 128) = *((unsigned char *)v158 + 128);
      *(_WORD *)((char *)v157 + 129) = *(_WORD *)((char *)v158 + 129);
      uint64_t v169 = v158[18];
      v157[17] = v158[17];
      v157[18] = v169;
      uint64_t v170 = v158[20];
      v157[19] = v158[19];
      v157[20] = v170;
      uint64_t v171 = v158[22];
      v157[21] = v158[21];
      v157[22] = v171;
      uint64_t v172 = v158[24];
      v157[23] = v158[23];
      v157[24] = v172;
      uint64_t v173 = v158[26];
      v157[25] = v158[25];
      v157[26] = v173;
      uint64_t v174 = v158[28];
      v157[27] = v158[27];
      v157[28] = v174;
      uint64_t v175 = v158[30];
      v157[29] = v158[29];
      v157[30] = v175;
      uint64_t v176 = v158[32];
      v157[31] = v158[31];
      v157[32] = v176;
      uint64_t v177 = v158[34];
      uint64_t v178 = v158[33];
      *((unsigned char *)v157 + 280) = *((unsigned char *)v158 + 280);
      v157[33] = v178;
      v157[34] = v177;
      uint64_t v179 = v159;
      uint64_t v180 = v158[37];
      v157[36] = v158[36];
      v157[37] = v180;
      uint64_t v670 = v179;
      uint64_t v181 = *(int *)(v179 + 108);
      __dstb = (char *)v157 + v181;
      uint64_t v182 = (char *)v158 + v181;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v182, 1, v690))
      {
        uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstb, v182, *(void *)(*(void *)(v183 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(__dstb, v182, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v690);
      }
      uint64_t v184 = *(int *)(v670 + 112);
      uint64_t v185 = (char *)v157 + v184;
      uint64_t v186 = (char *)v158 + v184;
      uint64_t v47 = v681;
      if (__swift_getEnumTagSinglePayload((uint64_t)v158 + v184, 1, v690))
      {
        uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v185, v186, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v690);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v157, 0, 1, v670);
      uint64_t v45 = v682;
    }
    uint64_t v188 = v47[9];
    uint64_t v189 = (void *)((char *)v45 + v188);
    uint64_t v190 = (void *)((char *)v46 + v188);
    uint64_t v191 = type metadata accessor for Party(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v191))
    {
      uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
      memcpy(v189, v190, *(void *)(*(void *)(v192 - 8) + 64));
    }
    else
    {
      uint64_t v193 = v190[1];
      *uint64_t v189 = *v190;
      v189[1] = v193;
      uint64_t v194 = v190[3];
      v189[2] = v190[2];
      v189[3] = v194;
      uint64_t v195 = v190[5];
      v189[4] = v190[4];
      v189[5] = v195;
      uint64_t v196 = v190[7];
      v189[6] = v190[6];
      v189[7] = v196;
      uint64_t v197 = v190[9];
      v189[8] = v190[8];
      v189[9] = v197;
      uint64_t v198 = v190[11];
      v189[10] = v190[10];
      v189[11] = v198;
      uint64_t v199 = v190[13];
      v189[12] = v190[12];
      v189[13] = v199;
      uint64_t v200 = v190[15];
      v189[14] = v190[14];
      v189[15] = v200;
      *((unsigned char *)v189 + 128) = *((unsigned char *)v190 + 128);
      *(_WORD *)((char *)v189 + 129) = *(_WORD *)((char *)v190 + 129);
      uint64_t v201 = v190[18];
      v189[17] = v190[17];
      v189[18] = v201;
      uint64_t v202 = v190[20];
      v189[19] = v190[19];
      v189[20] = v202;
      uint64_t v203 = v190[22];
      v189[21] = v190[21];
      v189[22] = v203;
      uint64_t v204 = v190[24];
      v189[23] = v190[23];
      v189[24] = v204;
      uint64_t v205 = v190[26];
      v189[25] = v190[25];
      v189[26] = v205;
      uint64_t v206 = v190[28];
      v189[27] = v190[27];
      v189[28] = v206;
      uint64_t v207 = v190[30];
      v189[29] = v190[29];
      v189[30] = v207;
      v189[31] = v190[31];
      uint64_t v671 = v191;
      uint64_t v208 = *(int *)(v191 + 96);
      __dstc = (char *)v189 + v208;
      uint64_t v209 = (char *)v190 + v208;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v209, 1, v690))
      {
        uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstc, v209, *(void *)(*(void *)(v210 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(__dstc, v209, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v690);
      }
      uint64_t v211 = *(int *)(v191 + 100);
      uint64_t v212 = (char *)v189 + v211;
      uint64_t v213 = (char *)v190 + v211;
      if (__swift_getEnumTagSinglePayload((uint64_t)v190 + v211, 1, v690))
      {
        uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v212, v213, *(void *)(*(void *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v212, v213, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v690);
      }
      uint64_t v215 = *(int *)(v671 + 104);
      uint64_t v216 = (char *)v189 + v215;
      uint64_t v217 = (char *)v190 + v215;
      if (__swift_getEnumTagSinglePayload((uint64_t)v190 + v215, 1, v685))
      {
        uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v216, v217, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, v685);
      }
      uint64_t v47 = v681;
      __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v671);
      uint64_t v45 = v682;
    }
    uint64_t v219 = v47[10];
    uint64_t v220 = (void *)((char *)v45 + v219);
    uint64_t v221 = (void *)((char *)v46 + v219);
    uint64_t v222 = type metadata accessor for Trip(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v221, 1, v222))
    {
      uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
      memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
    }
    else
    {
      uint64_t v224 = v221[1];
      *uint64_t v220 = *v221;
      v220[1] = v224;
      uint64_t v225 = v221[3];
      v220[2] = v221[2];
      v220[3] = v225;
      uint64_t v226 = v221[5];
      v220[4] = v221[4];
      v220[5] = v226;
      uint64_t v227 = v221[7];
      v220[6] = v221[6];
      v220[7] = v227;
      uint64_t v228 = v221[9];
      v220[8] = v221[8];
      v220[9] = v228;
      uint64_t v229 = v221[11];
      v220[10] = v221[10];
      v220[11] = v229;
      uint64_t v230 = v221[13];
      v220[12] = v221[12];
      v220[13] = v230;
      uint64_t v231 = v221[15];
      v220[14] = v221[14];
      v220[15] = v231;
      *((unsigned char *)v220 + 128) = *((unsigned char *)v221 + 128);
      *(_WORD *)((char *)v220 + 129) = *(_WORD *)((char *)v221 + 129);
      uint64_t v232 = v221[18];
      v220[17] = v221[17];
      v220[18] = v232;
      uint64_t v233 = v221[20];
      v220[19] = v221[19];
      v220[20] = v233;
      uint64_t v234 = v221[22];
      v220[21] = v221[21];
      v220[22] = v234;
      uint64_t v235 = v221[24];
      v220[23] = v221[23];
      v220[24] = v235;
      uint64_t v236 = v221[26];
      v220[25] = v221[25];
      v220[26] = v236;
      v220[27] = v221[27];
      uint64_t v672 = v222;
      uint64_t v237 = *(int *)(v222 + 88);
      __dstd = (char *)v220 + v237;
      uint64_t v238 = (char *)v221 + v237;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v238, 1, v690))
      {
        uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstd, v238, *(void *)(*(void *)(v239 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(__dstd, v238, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v690);
      }
      uint64_t v240 = *(int *)(v222 + 92);
      uint64_t v241 = (char *)v220 + v240;
      uint64_t v242 = (char *)v221 + v240;
      uint64_t v47 = v681;
      if (__swift_getEnumTagSinglePayload((uint64_t)v221 + v240, 1, v690))
      {
        uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v241, v242, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v241, 0, 1, v690);
      }
      uint64_t v244 = *(int *)(v672 + 96);
      uint64_t v245 = (char *)v220 + v244;
      uint64_t v246 = (char *)v221 + v244;
      *(void *)uint64_t v245 = *(void *)v246;
      v245[8] = v246[8];
      uint64_t v247 = *(int *)(v672 + 100);
      uint64_t v248 = (char *)v220 + v247;
      uint64_t v249 = (char *)v221 + v247;
      if (__swift_getEnumTagSinglePayload((uint64_t)v221 + v247, 1, v685))
      {
        uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v248, v249, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v685);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v672);
      uint64_t v45 = v682;
    }
    uint64_t v251 = v47[11];
    uint64_t v252 = (void *)((char *)v45 + v251);
    uint64_t v253 = (void *)((char *)v46 + v251);
    uint64_t v254 = (int *)type metadata accessor for FlightReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v253, 1, (uint64_t)v254))
    {
      uint64_t v255 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
      memcpy(v252, v253, *(void *)(*(void *)(v255 - 8) + 64));
    }
    else
    {
      uint64_t v256 = v253[1];
      *uint64_t v252 = *v253;
      v252[1] = v256;
      uint64_t v257 = v253[3];
      v252[2] = v253[2];
      v252[3] = v257;
      uint64_t v258 = v253[5];
      v252[4] = v253[4];
      v252[5] = v258;
      uint64_t v259 = v253[7];
      v252[6] = v253[6];
      v252[7] = v259;
      uint64_t v260 = v253[9];
      v252[8] = v253[8];
      v252[9] = v260;
      uint64_t v261 = v253[11];
      v252[10] = v253[10];
      v252[11] = v261;
      *((unsigned char *)v252 + 96) = *((unsigned char *)v253 + 96);
      uint64_t v262 = v253[14];
      v252[13] = v253[13];
      v252[14] = v262;
      uint64_t v263 = v254[13];
      uint64_t v673 = (char *)v252 + v263;
      __dste = (char *)v253 + v263;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)__dste, 1, v685))
      {
        uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v673, __dste, *(void *)(*(void *)(v264 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v673, __dste, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v673, 0, 1, v685);
      }
      uint64_t v265 = v254[14];
      uint64_t v266 = (char *)v252 + v265;
      uint64_t v267 = (char *)v253 + v265;
      if (__swift_getEnumTagSinglePayload((uint64_t)v253 + v265, 1, v685))
      {
        uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v266, v267, v685);
        __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v685);
      }
      uint64_t v269 = v254[15];
      uint64_t v270 = (void *)((char *)v252 + v269);
      uint64_t v271 = (void *)((char *)v253 + v269);
      uint64_t v272 = v271[1];
      *uint64_t v270 = *v271;
      v270[1] = v272;
      uint64_t v273 = v254[16];
      uint64_t v274 = (void *)((char *)v252 + v273);
      uint64_t v275 = (void *)((char *)v253 + v273);
      uint64_t v276 = v275[1];
      *uint64_t v274 = *v275;
      v274[1] = v276;
      uint64_t v277 = v254[17];
      uint64_t v278 = (void *)((char *)v252 + v277);
      uint64_t v279 = (void *)((char *)v253 + v277);
      uint64_t v280 = v279[1];
      *uint64_t v278 = *v279;
      v278[1] = v280;
      uint64_t v281 = v254[18];
      uint64_t v674 = (char *)v252 + v281;
      uint64_t v282 = (char *)v253 + v281;
      uint64_t v283 = type metadata accessor for DateComponents();
      long long v284 = *(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v284(v674, v282, v283);
      v284((char *)v252 + v254[19], (char *)v253 + v254[19], v283);
      uint64_t v285 = v254[20];
      uint64_t v286 = (void *)((char *)v252 + v285);
      uint64_t v287 = (void *)((char *)v253 + v285);
      uint64_t v288 = v287[1];
      *uint64_t v286 = *v287;
      v286[1] = v288;
      uint64_t v289 = v254[21];
      uint64_t v290 = (void *)((char *)v252 + v289);
      uint64_t v291 = (void *)((char *)v253 + v289);
      uint64_t v292 = v291[1];
      *uint64_t v290 = *v291;
      v290[1] = v292;
      uint64_t v293 = v254[22];
      uint64_t v294 = (void *)((char *)v252 + v293);
      uint64_t v295 = (void *)((char *)v253 + v293);
      uint64_t v675 = v295[1];
      *uint64_t v294 = *v295;
      v294[1] = v675;
      uint64_t v296 = v254[23];
      uint64_t v297 = (void *)((char *)v252 + v296);
      uint64_t v298 = (void *)((char *)v253 + v296);
      __dstg = (void *)v298[1];
      void *v297 = *v298;
      v297[1] = __dstg;
      uint64_t v299 = v254[24];
      int v300 = (void *)((char *)v252 + v299);
      uint64_t v301 = (void *)((char *)v253 + v299);
      uint64_t v656 = v301[1];
      void *v300 = *v301;
      v300[1] = v656;
      uint64_t v302 = v254[25];
      uint64_t v303 = (void *)((char *)v252 + v302);
      uint64_t v304 = (void *)((char *)v253 + v302);
      uint64_t v650 = v304[1];
      void *v303 = *v304;
      v303[1] = v650;
      uint64_t v305 = v254[26];
      uint64_t v306 = (void *)((char *)v252 + v305);
      uint64_t v307 = (void *)((char *)v253 + v305);
      uint64_t v649 = v307[1];
      void *v306 = *v307;
      v306[1] = v649;
      uint64_t v308 = v254[27];
      uint64_t v309 = (void *)((char *)v252 + v308);
      uint64_t v310 = (void *)((char *)v253 + v308);
      uint64_t v648 = v310[1];
      void *v309 = *v310;
      v309[1] = v648;
      uint64_t v311 = v254[28];
      uint64_t v312 = (void *)((char *)v252 + v311);
      uint64_t v313 = (void *)((char *)v253 + v311);
      uint64_t v647 = v313[1];
      void *v312 = *v313;
      v312[1] = v647;
      uint64_t v314 = v254[29];
      int v315 = (void *)((char *)v252 + v314);
      uint64_t v316 = (void *)((char *)v253 + v314);
      uint64_t v646 = v316[1];
      void *v315 = *v316;
      v315[1] = v646;
      uint64_t v317 = v254[30];
      uint64_t v318 = (void *)((char *)v252 + v317);
      uint64_t v319 = (void *)((char *)v253 + v317);
      uint64_t v645 = v319[1];
      void *v318 = *v319;
      v318[1] = v645;
      uint64_t v320 = v254[31];
      uint64_t v321 = (void *)((char *)v252 + v320);
      uint64_t v322 = (void *)((char *)v253 + v320);
      uint64_t v644 = v322[1];
      void *v321 = *v322;
      v321[1] = v644;
      uint64_t v323 = v254[32];
      uint64_t v324 = (void *)((char *)v252 + v323);
      uint64_t v325 = (void *)((char *)v253 + v323);
      uint64_t v326 = v325[1];
      void *v324 = *v325;
      v324[1] = v326;
      *(void *)((char *)v252 + v254[33]) = *(void *)((char *)v253 + v254[33]);
      *(void *)((char *)v252 + v254[34]) = *(void *)((char *)v253 + v254[34]);
      uint64_t v327 = v254[35];
      uint64_t v328 = (void *)((char *)v252 + v327);
      uint64_t v329 = (void *)((char *)v253 + v327);
      uint64_t v330 = v329[1];
      void *v328 = *v329;
      v328[1] = v330;
      uint64_t v331 = v254[36];
      uint64_t v332 = (void *)((char *)v252 + v331);
      uint64_t v333 = (void *)((char *)v253 + v331);
      uint64_t v334 = v333[1];
      void *v332 = *v333;
      v332[1] = v334;
      uint64_t v335 = v254[37];
      uint64_t v336 = (void *)((char *)v252 + v335);
      uint64_t v337 = (void *)((char *)v253 + v335);
      uint64_t v338 = v337[1];
      void *v336 = *v337;
      v336[1] = v338;
      uint64_t v339 = v254[38];
      uint64_t v651 = (char *)v252 + v339;
      uint64_t v340 = (char *)v253 + v339;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v340, 1, v690))
      {
        uint64_t v341 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v651, v340, *(void *)(*(void *)(v341 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v651, v340, v690);
        __swift_storeEnumTagSinglePayload((uint64_t)v651, 0, 1, v690);
      }
      uint64_t v46 = v679;
      uint64_t v342 = v254[39];
      uint64_t v343 = (void *)((char *)v252 + v342);
      uint64_t v344 = (void *)((char *)v253 + v342);
      uint64_t v345 = v344[1];
      void *v343 = *v344;
      v343[1] = v345;
      uint64_t v346 = v254[40];
      uint64_t v347 = (void *)((char *)v252 + v346);
      uint64_t v348 = (void *)((char *)v253 + v346);
      uint64_t v349 = v348[1];
      void *v347 = *v348;
      v347[1] = v349;
      uint64_t v350 = v254[41];
      uint64_t v351 = (char *)v252 + v350;
      uint64_t v352 = (char *)v253 + v350;
      v351[8] = v352[8];
      *(void *)uint64_t v351 = *(void *)v352;
      uint64_t v353 = v254[42];
      uint64_t v354 = (void *)((char *)v252 + v353);
      uint64_t v355 = (void *)((char *)v253 + v353);
      uint64_t v356 = v355[1];
      void *v354 = *v355;
      v354[1] = v356;
      uint64_t v357 = v254[43];
      uint64_t v358 = (char *)v252 + v357;
      uint64_t v359 = (char *)v253 + v357;
      *(_OWORD *)uint64_t v358 = *(_OWORD *)v359;
      *(void *)(v358 + 13) = *(void *)(v359 + 13);
      uint64_t v360 = v254[44];
      uint64_t v361 = (void *)((char *)v252 + v360);
      uint64_t v362 = (void *)((char *)v253 + v360);
      uint64_t v363 = v362[1];
      void *v361 = *v362;
      v361[1] = v363;
      uint64_t v364 = v254[45];
      uint64_t v365 = (void *)((char *)v252 + v364);
      uint64_t v366 = (void *)((char *)v253 + v364);
      uint64_t v367 = v366[1];
      void *v365 = *v366;
      v365[1] = v367;
      uint64_t v368 = v254[46];
      uint64_t v369 = (void *)((char *)v252 + v368);
      uint64_t v370 = (void *)((char *)v253 + v368);
      uint64_t v371 = v370[1];
      void *v369 = *v370;
      v369[1] = v371;
      uint64_t v372 = v254[47];
      uint64_t v373 = (void *)((char *)v252 + v372);
      uint64_t v374 = (void *)((char *)v253 + v372);
      uint64_t v375 = v374[1];
      void *v373 = *v374;
      v373[1] = v375;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v252, 0, 1, (uint64_t)v254);
      uint64_t v39 = v688;
      uint64_t v47 = v681;
      uint64_t v45 = v682;
    }
    uint64_t v376 = v47[12];
    uint64_t v377 = (void *)((char *)v45 + v376);
    uint64_t v378 = (void *)((char *)v46 + v376);
    uint64_t v379 = (int *)type metadata accessor for HotelReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v378, 1, (uint64_t)v379))
    {
      uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
      memcpy(v377, v378, *(void *)(*(void *)(v380 - 8) + 64));
    }
    else
    {
      uint64_t v381 = v378[1];
      void *v377 = *v378;
      v377[1] = v381;
      uint64_t v382 = v378[3];
      v377[2] = v378[2];
      v377[3] = v382;
      uint64_t v383 = v378[5];
      v377[4] = v378[4];
      v377[5] = v383;
      uint64_t v384 = v378[7];
      v377[6] = v378[6];
      v377[7] = v384;
      uint64_t v385 = v378[9];
      v377[8] = v378[8];
      v377[9] = v385;
      uint64_t v386 = v378[11];
      v377[10] = v378[10];
      v377[11] = v386;
      *((unsigned char *)v377 + 96) = *((unsigned char *)v378 + 96);
      uint64_t v387 = v378[14];
      v377[13] = v378[13];
      v377[14] = v387;
      uint64_t v388 = v378[16];
      v377[15] = v378[15];
      v377[16] = v388;
      uint64_t v389 = v379[14];
      uint64_t v676 = (char *)v377 + v389;
      uint64_t v652 = (char *)v378 + v389;
      uint64_t v390 = type metadata accessor for DateComponents();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v652, 1, v390))
      {
        uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v676, v652, *(void *)(*(void *)(v391 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 16))(v676, v652, v390);
        __swift_storeEnumTagSinglePayload((uint64_t)v676, 0, 1, v390);
      }
      uint64_t v392 = v379[15];
      uint64_t v393 = (char *)v377 + v392;
      uint64_t v394 = (char *)v378 + v392;
      if (__swift_getEnumTagSinglePayload((uint64_t)v378 + v392, 1, v390))
      {
        uint64_t v395 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v393, v394, *(void *)(*(void *)(v395 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 16))(v393, v394, v390);
        __swift_storeEnumTagSinglePayload((uint64_t)v393, 0, 1, v390);
      }
      uint64_t v396 = v379[16];
      uint64_t v397 = (void *)((char *)v377 + v396);
      uint64_t v398 = (void *)((char *)v378 + v396);
      uint64_t v399 = v398[1];
      void *v397 = *v398;
      v397[1] = v399;
      uint64_t v400 = v379[17];
      uint64_t v401 = (void *)((char *)v377 + v400);
      uint64_t v402 = (void *)((char *)v378 + v400);
      uint64_t v677 = v402[1];
      void *v401 = *v402;
      v401[1] = v677;
      uint64_t v403 = v379[18];
      uint64_t v404 = (void *)((char *)v377 + v403);
      uint64_t v405 = (void *)((char *)v378 + v403);
      __dsth = (void *)v405[1];
      void *v404 = *v405;
      v404[1] = __dsth;
      uint64_t v406 = v379[19];
      uint64_t v407 = (void *)((char *)v377 + v406);
      uint64_t v408 = (void *)((char *)v378 + v406);
      uint64_t v657 = v408[1];
      void *v407 = *v408;
      v407[1] = v657;
      uint64_t v409 = v379[20];
      uint64_t v410 = (void *)((char *)v377 + v409);
      uint64_t v411 = (void *)((char *)v378 + v409);
      uint64_t v412 = v411[1];
      void *v410 = *v411;
      v410[1] = v412;
      *(void *)((char *)v377 + v379[21]) = *(void *)((char *)v378 + v379[21]);
      *(void *)((char *)v377 + v379[22]) = *(void *)((char *)v378 + v379[22]);
      uint64_t v413 = v379[23];
      uint64_t v414 = (char *)v377 + v413;
      int v415 = (char *)v378 + v413;
      *(void *)uint64_t v414 = *(void *)v415;
      v414[8] = v415[8];
      uint64_t v416 = v379[24];
      uint64_t v417 = (char *)v377 + v416;
      uint64_t v418 = (char *)v378 + v416;
      *(void *)uint64_t v417 = *(void *)v418;
      v417[8] = v418[8];
      uint64_t v419 = v379[25];
      uint64_t v420 = (void *)((char *)v377 + v419);
      uint64_t v421 = (void *)((char *)v378 + v419);
      uint64_t v422 = v421[1];
      void *v420 = *v421;
      v420[1] = v422;
      uint64_t v423 = v379[26];
      uint64_t v424 = (void *)((char *)v377 + v423);
      int v425 = (void *)((char *)v378 + v423);
      uint64_t v426 = v425[1];
      void *v424 = *v425;
      v424[1] = v426;
      uint64_t v427 = v379[27];
      uint64_t v428 = (void *)((char *)v377 + v427);
      long long v429 = (void *)((char *)v378 + v427);
      uint64_t v430 = v429[1];
      void *v428 = *v429;
      v428[1] = v430;
      uint64_t v431 = v379[28];
      uint64_t v432 = (void *)((char *)v377 + v431);
      uint64_t v433 = (void *)((char *)v378 + v431);
      uint64_t v434 = v433[1];
      void *v432 = *v433;
      v432[1] = v434;
      uint64_t v435 = v379[29];
      uint64_t v436 = (char *)v377 + v435;
      uint64_t v437 = (char *)v378 + v435;
      *(void *)uint64_t v436 = *(void *)v437;
      v436[8] = v437[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v377, 0, 1, (uint64_t)v379);
      uint64_t v39 = v688;
      uint64_t v47 = v681;
      uint64_t v45 = v682;
      uint64_t v46 = v679;
    }
    uint64_t v438 = v47[13];
    uint64_t v439 = (void *)((char *)v45 + v438);
    uint64_t v440 = (void *)((char *)v46 + v438);
    uint64_t v441 = (int *)type metadata accessor for RestaurantReservation(0);
    uint64_t v15 = a2;
    if (__swift_getEnumTagSinglePayload((uint64_t)v440, 1, (uint64_t)v441))
    {
      uint64_t v442 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
      memcpy(v439, v440, *(void *)(*(void *)(v442 - 8) + 64));
    }
    else
    {
      uint64_t v443 = v440[1];
      void *v439 = *v440;
      v439[1] = v443;
      uint64_t v444 = v440[3];
      v439[2] = v440[2];
      v439[3] = v444;
      uint64_t v445 = v440[5];
      v439[4] = v440[4];
      v439[5] = v445;
      uint64_t v678 = v440[7];
      v439[6] = v440[6];
      v439[7] = v678;
      uint64_t v446 = v440[9];
      v439[8] = v440[8];
      v439[9] = v446;
      uint64_t v447 = v440[11];
      v439[10] = v440[10];
      v439[11] = v447;
      *((unsigned char *)v439 + 96) = *((unsigned char *)v440 + 96);
      uint64_t v448 = v440[14];
      v439[13] = v440[13];
      v439[14] = v448;
      uint64_t v449 = v440[16];
      v439[15] = v440[15];
      v439[16] = v449;
      uint64_t v450 = v441[14];
      uint64_t v680 = (char *)v439 + v450;
      uint64_t v451 = (char *)v440 + v450;
      uint64_t v653 = (void *)type metadata accessor for DateComponents();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v451, 1, (uint64_t)v653))
      {
        uint64_t v452 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v680, v451, *(void *)(*(void *)(v452 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(*(v653 - 1) + 16))(v680, v451, v653);
        __swift_storeEnumTagSinglePayload((uint64_t)v680, 0, 1, (uint64_t)v653);
      }
      uint64_t v453 = v441[15];
      uint64_t v454 = (void *)((char *)v439 + v453);
      uint64_t v455 = (void *)((char *)v440 + v453);
      uint64_t v456 = v455[1];
      void *v454 = *v455;
      v454[1] = v456;
      uint64_t v457 = v441[16];
      uint64_t v458 = (void *)((char *)v439 + v457);
      uint64_t v459 = (void *)((char *)v440 + v457);
      uint64_t v460 = v459[1];
      void *v458 = *v459;
      v458[1] = v460;
      uint64_t v461 = v441[17];
      int v462 = (void *)((char *)v439 + v461);
      uint64_t v463 = (void *)((char *)v440 + v461);
      uint64_t v464 = v463[1];
      void *v462 = *v463;
      v462[1] = v464;
      uint64_t v465 = v441[18];
      uint64_t v466 = (void *)((char *)v439 + v465);
      uint64_t v467 = (void *)((char *)v440 + v465);
      uint64_t v468 = v467[1];
      void *v466 = *v467;
      v466[1] = v468;
      uint64_t v469 = v441[19];
      uint64_t v470 = (void *)((char *)v439 + v469);
      uint64_t v471 = (void *)((char *)v440 + v469);
      uint64_t v472 = v471[1];
      void *v470 = *v471;
      v470[1] = v472;
      *(void *)((char *)v439 + v441[20]) = *(void *)((char *)v440 + v441[20]);
      uint64_t v473 = v441[21];
      uint64_t v474 = (void *)((char *)v439 + v473);
      uint64_t v475 = (void *)((char *)v440 + v473);
      uint64_t v476 = v475[1];
      void *v474 = *v475;
      v474[1] = v476;
      uint64_t v477 = v441[22];
      int v478 = (void *)((char *)v439 + v477);
      int v479 = (void *)((char *)v440 + v477);
      uint64_t v480 = v479[1];
      void *v478 = *v479;
      v478[1] = v480;
      uint64_t v481 = v441[23];
      uint64_t v482 = (void *)((char *)v439 + v481);
      uint64_t v483 = (void *)((char *)v440 + v481);
      uint64_t v484 = v483[1];
      void *v482 = *v483;
      v482[1] = v484;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v439, 0, 1, (uint64_t)v441);
      uint64_t v15 = a2;
      uint64_t v39 = v688;
      uint64_t v47 = v681;
      uint64_t v45 = v682;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, (uint64_t)v47);
    uint64_t v14 = a1;
  }
  uint64_t v485 = v39[20];
  uint64_t v486 = (void *)((char *)v14 + v485);
  uint64_t v487 = (void *)((char *)v15 + v485);
  uint64_t v488 = (int *)type metadata accessor for PreExtractedCard(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v487, 1, (uint64_t)v488))
  {
    uint64_t v489 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v486, v487, *(void *)(*(void *)(v489 - 8) + 64));
  }
  else
  {
    uint64_t v490 = v487[1];
    void *v486 = *v487;
    v486[1] = v490;
    uint64_t v491 = v487[3];
    v486[2] = v487[2];
    v486[3] = v491;
    uint64_t v492 = v487[5];
    v486[4] = v487[4];
    v486[5] = v492;
    uint64_t v493 = v487[7];
    v486[6] = v487[6];
    v486[7] = v493;
    uint64_t v494 = v487[9];
    v486[8] = v487[8];
    v486[9] = v494;
    uint64_t v495 = v487[11];
    v486[10] = v487[10];
    v486[11] = v495;
    uint64_t v496 = v488[10];
    uint64_t v497 = (char *)v486 + v496;
    uint64_t v498 = (char *)v487 + v496;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v498, 1, v690))
    {
      uint64_t v499 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v497, v498, *(void *)(*(void *)(v499 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v497, v498, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v497, 0, 1, v690);
    }
    uint64_t v500 = v488[11];
    uint64_t v501 = (char *)v486 + v500;
    uint64_t v502 = (char *)v487 + v500;
    uint64_t v15 = a2;
    if (__swift_getEnumTagSinglePayload((uint64_t)v487 + v500, 1, v690))
    {
      uint64_t v503 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v501, v502, *(void *)(*(void *)(v503 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v501, v502, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v501, 0, 1, v690);
    }
    uint64_t v504 = v488[12];
    uint64_t v505 = (void *)((char *)v486 + v504);
    uint64_t v506 = (void *)((char *)v487 + v504);
    uint64_t v507 = v506[1];
    void *v505 = *v506;
    v505[1] = v507;
    uint64_t v508 = v488[13];
    int v509 = (void *)((char *)v486 + v508);
    size_t v510 = (void *)((char *)v487 + v508);
    uint64_t v511 = v510[1];
    void *v509 = *v510;
    v509[1] = v511;
    uint64_t v512 = v488[14];
    v513 = (void *)((char *)v486 + v512);
    uint64_t v514 = (void *)((char *)v487 + v512);
    uint64_t v515 = v514[1];
    void *v513 = *v514;
    v513[1] = v515;
    uint64_t v516 = v488[15];
    int v517 = (char *)v486 + v516;
    int v518 = (char *)v487 + v516;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v518, 1, v690))
    {
      uint64_t v519 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v517, v518, *(void *)(*(void *)(v519 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v517, v518, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v517, 0, 1, v690);
    }
    uint64_t v520 = v488[16];
    uint64_t v521 = (void *)((char *)v486 + v520);
    uint64_t v522 = (void *)((char *)v487 + v520);
    uint64_t v523 = v522[1];
    void *v521 = *v522;
    v521[1] = v523;
    uint64_t v524 = v488[17];
    uint64_t v525 = (void *)((char *)v486 + v524);
    uint64_t v526 = (void *)((char *)v487 + v524);
    uint64_t v527 = v526[1];
    void *v525 = *v526;
    v525[1] = v527;
    uint64_t v528 = v488[18];
    uint64_t v529 = (void *)((char *)v486 + v528);
    uint64_t v530 = (void *)((char *)v487 + v528);
    uint64_t v531 = v530[1];
    void *v529 = *v530;
    v529[1] = v531;
    uint64_t v532 = v488[19];
    uint64_t v533 = (void *)((char *)v486 + v532);
    uint64_t v534 = (void *)((char *)v487 + v532);
    uint64_t v535 = v534[1];
    void *v533 = *v534;
    v533[1] = v535;
    uint64_t v536 = v488[20];
    uint64_t v537 = (void *)((char *)v486 + v536);
    uint64_t v538 = (void *)((char *)v487 + v536);
    uint64_t v539 = v538[1];
    void *v537 = *v538;
    v537[1] = v539;
    uint64_t v540 = v488[21];
    uint64_t v541 = (void *)((char *)v486 + v540);
    uint64_t v542 = (void *)((char *)v487 + v540);
    uint64_t v543 = v542[1];
    void *v541 = *v542;
    v541[1] = v543;
    uint64_t v544 = v488[22];
    int v545 = (void *)((char *)v486 + v544);
    uint64_t v546 = (void *)((char *)v487 + v544);
    uint64_t v547 = v546[1];
    void *v545 = *v546;
    v545[1] = v547;
    uint64_t v548 = v488[23];
    v549 = (void *)((char *)v486 + v548);
    uint64_t v550 = (void *)((char *)v487 + v548);
    uint64_t v551 = v550[1];
    void *v549 = *v550;
    v549[1] = v551;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v486, 0, 1, (uint64_t)v488);
    uint64_t v39 = v688;
    uint64_t v14 = a1;
  }
  uint64_t v552 = v39[21];
  uint64_t v553 = (void *)((char *)v14 + v552);
  uint64_t v554 = (void *)((char *)v15 + v552);
  uint64_t v555 = (int *)type metadata accessor for PreExtractedContact(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v554, 1, (uint64_t)v555))
  {
    uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v553, v554, *(void *)(*(void *)(v556 - 8) + 64));
  }
  else
  {
    uint64_t v557 = v554[1];
    void *v553 = *v554;
    v553[1] = v557;
    uint64_t v558 = v554[3];
    v553[2] = v554[2];
    v553[3] = v558;
    uint64_t v559 = v554[5];
    v553[4] = v554[4];
    v553[5] = v559;
    uint64_t v560 = v554[7];
    v553[6] = v554[6];
    v553[7] = v560;
    uint64_t v561 = v554[9];
    v553[8] = v554[8];
    v553[9] = v561;
    uint64_t v562 = v554[11];
    v553[10] = v554[10];
    v553[11] = v562;
    uint64_t v563 = v555[11];
    uint64_t v683 = (char *)v553 + v563;
    uint64_t v564 = (char *)v554 + v563;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v564, 1, v690))
    {
      uint64_t v565 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v683, v564, *(void *)(*(void *)(v565 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v683, v564, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v683, 0, 1, v690);
    }
    uint64_t v566 = v555[12];
    int v567 = (void *)((char *)v553 + v566);
    int v568 = (void *)((char *)v554 + v566);
    uint64_t v569 = v568[1];
    void *v567 = *v568;
    v567[1] = v569;
    *(void *)((char *)v553 + v555[13]) = *(void *)((char *)v554 + v555[13]);
    uint64_t v570 = v555[14];
    long long v571 = (char *)v553 + v570;
    long long v572 = (char *)v554 + v570;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = a1;
    uint64_t v15 = a2;
    if (__swift_getEnumTagSinglePayload((uint64_t)v572, 1, v690))
    {
      uint64_t v573 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v571, v572, *(void *)(*(void *)(v573 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v571, v572, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v571, 0, 1, v690);
    }
    *(void *)((char *)v553 + v555[15]) = *(void *)((char *)v554 + v555[15]);
    *(void *)((char *)v553 + v555[16]) = *(void *)((char *)v554 + v555[16]);
    uint64_t v574 = v555[17];
    long long v575 = (void *)((char *)v553 + v574);
    uint64_t v576 = (void *)((char *)v554 + v574);
    uint64_t v577 = v576[1];
    void *v575 = *v576;
    v575[1] = v577;
    *(void *)((char *)v553 + v555[18]) = *(void *)((char *)v554 + v555[18]);
    *(void *)((char *)v553 + v555[19]) = *(void *)((char *)v554 + v555[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v553, 0, 1, (uint64_t)v555);
    uint64_t v39 = v688;
  }
  uint64_t v578 = v39[22];
  v579 = (void *)((char *)v14 + v578);
  uint64_t v580 = (void *)((char *)v15 + v578);
  uint64_t v581 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v580, 1, (uint64_t)v581))
  {
    uint64_t v582 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v579, v580, *(void *)(*(void *)(v582 - 8) + 64));
  }
  else
  {
    uint64_t v583 = v580[1];
    void *v579 = *v580;
    v579[1] = v583;
    uint64_t v584 = v580[3];
    v579[2] = v580[2];
    v579[3] = v584;
    uint64_t v585 = v580[5];
    v579[4] = v580[4];
    v579[5] = v585;
    uint64_t v586 = v580[7];
    v579[6] = v580[6];
    v579[7] = v586;
    uint64_t v587 = v581[8];
    uint64_t v588 = (char *)v579 + v587;
    uint64_t v589 = (char *)v580 + v587;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v589, 1, v685))
    {
      uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v588, v589, *(void *)(*(void *)(v590 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v588, v589, v685);
      __swift_storeEnumTagSinglePayload((uint64_t)v588, 0, 1, v685);
    }
    uint64_t v591 = v581[9];
    uint64_t v592 = (void *)((char *)v579 + v591);
    uint64_t v593 = (void *)((char *)v580 + v591);
    uint64_t v594 = v593[1];
    void *v592 = *v593;
    v592[1] = v594;
    uint64_t v595 = v581[10];
    uint64_t v596 = (void *)((char *)v579 + v595);
    uint64_t v597 = (void *)((char *)v580 + v595);
    uint64_t v598 = v597[1];
    void *v596 = *v597;
    v596[1] = v598;
    uint64_t v599 = v581[11];
    int v600 = (void *)((char *)v579 + v599);
    size_t v601 = (void *)((char *)v580 + v599);
    uint64_t v602 = v601[1];
    void *v600 = *v601;
    v600[1] = v602;
    uint64_t v603 = v581[12];
    uint64_t v604 = (char *)v579 + v603;
    uint64_t v605 = (char *)v580 + v603;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v605, 1, v690))
    {
      uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v604, v605, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v690);
    }
    uint64_t v607 = v581[13];
    int v608 = (char *)v579 + v607;
    int v609 = (char *)v580 + v607;
    if (__swift_getEnumTagSinglePayload((uint64_t)v580 + v607, 1, v690))
    {
      uint64_t v610 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v608, v609, *(void *)(*(void *)(v610 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 16))(v608, v609, v690);
      __swift_storeEnumTagSinglePayload((uint64_t)v608, 0, 1, v690);
    }
    uint64_t v611 = v581[14];
    uint64_t v612 = (char *)v579 + v611;
    uint64_t v613 = (char *)v580 + v611;
    *(void *)uint64_t v612 = *(void *)v613;
    v612[8] = v613[8];
    uint64_t v614 = v581[15];
    uint64_t v615 = (void *)((char *)v579 + v614);
    uint64_t v616 = (void *)((char *)v580 + v614);
    uint64_t v617 = v616[1];
    void *v615 = *v616;
    v615[1] = v617;
    uint64_t v618 = v581[16];
    long long v619 = (void *)((char *)v579 + v618);
    long long v620 = (void *)((char *)v580 + v618);
    uint64_t v621 = v620[1];
    void *v619 = *v620;
    v619[1] = v621;
    uint64_t v622 = v581[17];
    long long v623 = (void *)((char *)v579 + v622);
    long long v624 = (void *)((char *)v580 + v622);
    uint64_t v625 = v624[1];
    void *v623 = *v624;
    v623[1] = v625;
    uint64_t v626 = v581[18];
    uint64_t v627 = (void *)((char *)v579 + v626);
    v628 = (void *)((char *)v580 + v626);
    uint64_t v629 = v628[1];
    void *v627 = *v628;
    v627[1] = v629;
    uint64_t v630 = v581[19];
    uint64_t v631 = (void *)((char *)v579 + v630);
    uint64_t v632 = (void *)((char *)v580 + v630);
    uint64_t v633 = v632[1];
    void *v631 = *v632;
    v631[1] = v633;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v579, 0, 1, (uint64_t)v581);
    uint64_t v39 = v688;
  }
  uint64_t v634 = v39[23];
  uint64_t v635 = (void *)((char *)v14 + v634);
  uint64_t v636 = (void *)((char *)v15 + v634);
  uint64_t v637 = *(void *)((char *)v15 + v634 + 8);
  if (v637)
  {
    void *v635 = *v636;
    v635[1] = v637;
    uint64_t v638 = v636[3];
    v635[2] = v636[2];
    v635[3] = v638;
    uint64_t v639 = v636[5];
    v635[4] = v636[4];
    v635[5] = v639;
    uint64_t v640 = v636[7];
    v635[6] = v636[6];
    v635[7] = v640;
    uint64_t v641 = v636[9];
    v635[8] = v636[8];
    v635[9] = v641;
    uint64_t v642 = v636[11];
    v635[10] = v636[10];
    v635[11] = v642;
    uint64_t v684 = v636[13];
    v635[12] = v636[12];
    v635[13] = v684;
    uint64_t v687 = v636[15];
    v635[14] = v636[14];
    v635[15] = v687;
    uint64_t v691 = v636[17];
    v635[16] = v636[16];
    v635[17] = v691;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v635, v636, 0x90uLL);
  }
  return v14;
}

void *assignWithCopy for MobileSMSDocument(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[4] = v4[4];
  v5[5] = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[6] = v4[6];
  v5[7] = v4[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[8] = v4[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[9] = v4[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[11];
  uint64_t v15 = (char *)v5 + v14;
  uint64_t v16 = (char *)v4 + v14;
  uint64_t v17 = type metadata accessor for URL();
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  uint64_t v1255 = v17;
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
LABEL_13:
  *(void *)((char *)v5 + a3[12]) = *(void *)((char *)v4 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)((char *)v5 + v22);
  uint64_t v24 = (void *)((char *)v4 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[14];
  uint64_t v26 = (void *)((char *)v5 + v25);
  uint64_t v27 = (void *)((char *)v4 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[15]) = *(void *)((char *)v4 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[16]) = *(void *)((char *)v4 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[17];
  uint64_t v29 = (void *)((char *)v5 + v28);
  uint64_t v30 = (char *)v4 + v28;
  uint64_t v31 = *(void *)((char *)v4 + v28);
  uint64_t v1261 = v9;
  if (*(void *)((char *)v5 + v28))
  {
    if (v31)
    {
      void *v29 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29[1] = *((void *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29[2] = *((void *)v30 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29[3] = *((void *)v30 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29[4] = *((void *)v30 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of DataDetectorResults((uint64_t)v5 + v28);
      uint64_t v32 = *((void *)v30 + 4);
      long long v33 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v33;
      v29[4] = v32;
    }
  }
  else if (v31)
  {
    void *v29 = v31;
    v29[1] = *((void *)v30 + 1);
    v29[2] = *((void *)v30 + 2);
    v29[3] = *((void *)v30 + 3);
    v29[4] = *((void *)v30 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *(_OWORD *)v30;
    long long v35 = *((_OWORD *)v30 + 1);
    v29[4] = *((void *)v30 + 4);
    *(_OWORD *)uint64_t v29 = v34;
    *((_OWORD *)v29 + 1) = v35;
  }
  uint64_t v36 = a3[18];
  uint64_t v37 = (void *)((char *)v5 + v36);
  long long v38 = (void *)((char *)v4 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[19];
  uint64_t v40 = (void *)((char *)v5 + v39);
  v1260 = a3;
  uint64_t v41 = (void *)((char *)v4 + v39);
  uint64_t v42 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  int v43 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, (uint64_t)v42);
  int v44 = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, (uint64_t)v42);
  uint64_t v1256 = v42;
  v1259 = v5;
  if (!v43)
  {
    if (v44)
    {
      outlined destroy of EmailDocument((uint64_t)v40, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
      goto LABEL_28;
    }
    *uint64_t v40 = *v41;
    v40[1] = v41[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v54 = v42[5];
    uint64_t v55 = (uint64_t)v40 + v54;
    uint64_t v56 = (uint64_t)v41 + v54;
    uint64_t v57 = type metadata accessor for RentalCarReservation(0);
    int v58 = __swift_getEnumTagSinglePayload(v55, 1, v57);
    int v59 = __swift_getEnumTagSinglePayload(v56, 1, v57);
    v1252 = v40;
    uint64_t v1254 = v4;
    v1249 = v41;
    if (v58)
    {
      if (!v59)
      {
        *(void *)uint64_t v55 = *(void *)v56;
        *(void *)(v55 + 8) = *(void *)(v56 + 8);
        *(void *)(v55 + 16) = *(void *)(v56 + 16);
        *(void *)(v55 + 24) = *(void *)(v56 + 24);
        *(void *)(v55 + 32) = *(void *)(v56 + 32);
        *(void *)(v55 + 40) = *(void *)(v56 + 40);
        *(void *)(v55 + 48) = *(void *)(v56 + 48);
        *(void *)(v55 + 56) = *(void *)(v56 + 56);
        *(void *)(v55 + 64) = *(void *)(v56 + 64);
        *(void *)(v55 + 72) = *(void *)(v56 + 72);
        *(void *)(v55 + 80) = *(void *)(v56 + 80);
        *(void *)(v55 + 88) = *(void *)(v56 + 88);
        *(void *)(v55 + 96) = *(void *)(v56 + 96);
        *(void *)(v55 + 104) = *(void *)(v56 + 104);
        *(void *)(v55 + 112) = *(void *)(v56 + 112);
        *(void *)(v55 + 120) = *(void *)(v56 + 120);
        *(unsigned char *)(v55 + 128) = *(unsigned char *)(v56 + 128);
        *(unsigned char *)(v55 + 129) = *(unsigned char *)(v56 + 129);
        *(unsigned char *)(v55 + 130) = *(unsigned char *)(v56 + 130);
        *(void *)(v55 + 136) = *(void *)(v56 + 136);
        *(void *)(v55 + 144) = *(void *)(v56 + 144);
        *(void *)(v55 + 152) = *(void *)(v56 + 152);
        *(void *)(v55 + 160) = *(void *)(v56 + 160);
        *(void *)(v55 + 168) = *(void *)(v56 + 168);
        *(void *)(v55 + 176) = *(void *)(v56 + 176);
        *(void *)(v55 + 184) = *(void *)(v56 + 184);
        *(void *)(v55 + 192) = *(void *)(v56 + 192);
        *(void *)(v55 + 200) = *(void *)(v56 + 200);
        *(void *)(v55 + 208) = *(void *)(v56 + 208);
        *(void *)(v55 + 216) = *(void *)(v56 + 216);
        *(void *)(v55 + 224) = *(void *)(v56 + 224);
        *(void *)(v55 + 232) = *(void *)(v56 + 232);
        *(void *)(v55 + 240) = *(void *)(v56 + 240);
        *(void *)(v55 + 248) = *(void *)(v56 + 248);
        *(void *)(v55 + 256) = *(void *)(v56 + 256);
        *(void *)(v55 + 264) = *(void *)(v56 + 264);
        *(void *)(v55 + 272) = *(void *)(v56 + 272);
        *(void *)(v55 + 280) = *(void *)(v56 + 280);
        *(void *)(v55 + 288) = *(void *)(v56 + 288);
        *(void *)(v55 + 296) = *(void *)(v56 + 296);
        *(void *)(v55 + 304) = *(void *)(v56 + 304);
        *(void *)(v55 + 312) = *(void *)(v56 + 312);
        *(void *)(v55 + 320) = *(void *)(v56 + 320);
        *(void *)(v55 + 328) = *(void *)(v56 + 328);
        *(void *)(v55 + 336) = *(void *)(v56 + 336);
        *(void *)(v55 + 344) = *(void *)(v56 + 344);
        *(void *)(v55 + 352) = *(void *)(v56 + 352);
        *(void *)(v55 + 360) = *(void *)(v56 + 360);
        *(void *)(v55 + 368) = *(void *)(v56 + 368);
        uint64_t v60 = *(void *)(v56 + 376);
        *(unsigned char *)(v55 + 384) = *(unsigned char *)(v56 + 384);
        *(void *)(v55 + 376) = v60;
        *(void *)(v55 + 392) = *(void *)(v56 + 392);
        *(void *)(v55 + 400) = *(void *)(v56 + 400);
        *(void *)(v55 + 408) = *(void *)(v56 + 408);
        *(void *)(v55 + 416) = *(void *)(v56 + 416);
        uint64_t v61 = *(int *)(v57 + 140);
        __dst = (void *)(v55 + v61);
        uint64_t v62 = (const void *)(v56 + v61);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v9))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v62, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dst, v62, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v9);
        }
        uint64_t v594 = *(int *)(v57 + 144);
        uint64_t v595 = (void *)(v55 + v594);
        uint64_t v596 = (const void *)(v56 + v594);
        if (__swift_getEnumTagSinglePayload(v56 + v594, 1, v9))
        {
          uint64_t v597 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v595, v596, *(void *)(*(void *)(v597 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v595, v596, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v595, 0, 1, v9);
        }
        uint64_t v598 = v55;
        uint64_t v599 = v57;
        goto LABEL_245;
      }
LABEL_39:
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy((void *)v55, (const void *)v56, *(void *)(*(void *)(v68 - 8) + 64));
      goto LABEL_255;
    }
    if (v59)
    {
      outlined destroy of EmailDocument(v55, (void (*)(void))type metadata accessor for RentalCarReservation);
      goto LABEL_39;
    }
    *(void *)uint64_t v55 = *(void *)v56;
    *(void *)(v55 + 8) = *(void *)(v56 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 16) = *(void *)(v56 + 16);
    *(void *)(v55 + 24) = *(void *)(v56 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 32) = *(void *)(v56 + 32);
    *(void *)(v55 + 40) = *(void *)(v56 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 48) = *(void *)(v56 + 48);
    *(void *)(v55 + 56) = *(void *)(v56 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 64) = *(void *)(v56 + 64);
    *(void *)(v55 + 72) = *(void *)(v56 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 80) = *(void *)(v56 + 80);
    *(void *)(v55 + 88) = *(void *)(v56 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 96) = *(void *)(v56 + 96);
    *(void *)(v55 + 104) = *(void *)(v56 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 112) = *(void *)(v56 + 112);
    *(void *)(v55 + 120) = *(void *)(v56 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v55 + 128) = *(unsigned char *)(v56 + 128);
    *(unsigned char *)(v55 + 129) = *(unsigned char *)(v56 + 129);
    *(unsigned char *)(v55 + 130) = *(unsigned char *)(v56 + 130);
    *(void *)(v55 + 136) = *(void *)(v56 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 144) = *(void *)(v56 + 144);
    *(void *)(v55 + 152) = *(void *)(v56 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 160) = *(void *)(v56 + 160);
    *(void *)(v55 + 168) = *(void *)(v56 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 176) = *(void *)(v56 + 176);
    *(void *)(v55 + 184) = *(void *)(v56 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 192) = *(void *)(v56 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 200) = *(void *)(v56 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 208) = *(void *)(v56 + 208);
    *(void *)(v55 + 216) = *(void *)(v56 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 224) = *(void *)(v56 + 224);
    *(void *)(v55 + 232) = *(void *)(v56 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 240) = *(void *)(v56 + 240);
    *(void *)(v55 + 248) = *(void *)(v56 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 256) = *(void *)(v56 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 264) = *(void *)(v56 + 264);
    *(void *)(v55 + 272) = *(void *)(v56 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 280) = *(void *)(v56 + 280);
    *(void *)(v55 + 288) = *(void *)(v56 + 288);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 296) = *(void *)(v56 + 296);
    *(void *)(v55 + 304) = *(void *)(v56 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 312) = *(void *)(v56 + 312);
    *(void *)(v55 + 320) = *(void *)(v56 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 328) = *(void *)(v56 + 328);
    *(void *)(v55 + 336) = *(void *)(v56 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 344) = *(void *)(v56 + 344);
    *(void *)(v55 + 352) = *(void *)(v56 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 360) = *(void *)(v56 + 360);
    *(void *)(v55 + 368) = *(void *)(v56 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v588 = *(void *)(v56 + 376);
    *(unsigned char *)(v55 + 384) = *(unsigned char *)(v56 + 384);
    *(void *)(v55 + 376) = v588;
    *(void *)(v55 + 392) = *(void *)(v56 + 392);
    *(void *)(v55 + 400) = *(void *)(v56 + 400);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 408) = *(void *)(v56 + 408);
    *(void *)(v55 + 416) = *(void *)(v56 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v1237 = (int *)v57;
    uint64_t v589 = *(int *)(v57 + 140);
    uint64_t v590 = (void *)(v55 + v589);
    uint64_t v591 = (const void *)(v56 + v589);
    int v592 = __swift_getEnumTagSinglePayload(v55 + v589, 1, v9);
    int v593 = __swift_getEnumTagSinglePayload((uint64_t)v591, 1, v9);
    if (v592)
    {
      if (!v593)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v590, v591, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v590, 0, 1, v9);
        goto LABEL_249;
      }
    }
    else
    {
      uint64_t v600 = *(void *)(v9 - 8);
      if (!v593)
      {
        (*(void (**)(void *, const void *, uint64_t))(v600 + 24))(v590, v591, v9);
LABEL_249:
        uint64_t v602 = v1237[36];
        uint64_t v603 = (void *)(v55 + v602);
        uint64_t v604 = (const void *)(v56 + v602);
        int v605 = __swift_getEnumTagSinglePayload(v55 + v602, 1, v9);
        int v606 = __swift_getEnumTagSinglePayload((uint64_t)v604, 1, v9);
        if (v605)
        {
          if (!v606)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v603, v604, v9);
            uint64_t v598 = (uint64_t)v603;
            uint64_t v599 = v9;
LABEL_245:
            __swift_storeEnumTagSinglePayload(v598, 0, 1, v599);
            goto LABEL_255;
          }
        }
        else
        {
          uint64_t v607 = *(void *)(v9 - 8);
          if (!v606)
          {
            (*(void (**)(void *, const void *, uint64_t))(v607 + 24))(v603, v604, v9);
LABEL_255:
            uint64_t v609 = v42[6];
            uint64_t v610 = (uint64_t)v40 + v609;
            uint64_t v611 = (uint64_t)v41 + v609;
            uint64_t v612 = type metadata accessor for TicketedTransportation(0);
            int v613 = __swift_getEnumTagSinglePayload(v610, 1, v612);
            int v614 = __swift_getEnumTagSinglePayload(v611, 1, v612);
            if (v613)
            {
              if (!v614)
              {
                *(void *)uint64_t v610 = *(void *)v611;
                *(void *)(v610 + 8) = *(void *)(v611 + 8);
                *(void *)(v610 + 16) = *(void *)(v611 + 16);
                *(void *)(v610 + 24) = *(void *)(v611 + 24);
                *(void *)(v610 + 32) = *(void *)(v611 + 32);
                *(void *)(v610 + 40) = *(void *)(v611 + 40);
                *(void *)(v610 + 48) = *(void *)(v611 + 48);
                *(void *)(v610 + 56) = *(void *)(v611 + 56);
                *(void *)(v610 + 64) = *(void *)(v611 + 64);
                *(void *)(v610 + 72) = *(void *)(v611 + 72);
                *(void *)(v610 + 80) = *(void *)(v611 + 80);
                *(void *)(v610 + 88) = *(void *)(v611 + 88);
                *(void *)(v610 + 96) = *(void *)(v611 + 96);
                *(void *)(v610 + 104) = *(void *)(v611 + 104);
                *(void *)(v610 + 112) = *(void *)(v611 + 112);
                *(void *)(v610 + 120) = *(void *)(v611 + 120);
                *(unsigned char *)(v610 + 128) = *(unsigned char *)(v611 + 128);
                *(unsigned char *)(v610 + 129) = *(unsigned char *)(v611 + 129);
                *(unsigned char *)(v610 + 130) = *(unsigned char *)(v611 + 130);
                *(void *)(v610 + 136) = *(void *)(v611 + 136);
                *(void *)(v610 + 144) = *(void *)(v611 + 144);
                *(void *)(v610 + 152) = *(void *)(v611 + 152);
                *(void *)(v610 + 160) = *(void *)(v611 + 160);
                *(void *)(v610 + 168) = *(void *)(v611 + 168);
                *(void *)(v610 + 176) = *(void *)(v611 + 176);
                *(void *)(v610 + 184) = *(void *)(v611 + 184);
                *(void *)(v610 + 192) = *(void *)(v611 + 192);
                *(void *)(v610 + 200) = *(void *)(v611 + 200);
                *(void *)(v610 + 208) = *(void *)(v611 + 208);
                *(void *)(v610 + 216) = *(void *)(v611 + 216);
                *(void *)(v610 + 224) = *(void *)(v611 + 224);
                *(void *)(v610 + 232) = *(void *)(v611 + 232);
                *(void *)(v610 + 240) = *(void *)(v611 + 240);
                *(void *)(v610 + 248) = *(void *)(v611 + 248);
                *(void *)(v610 + 256) = *(void *)(v611 + 256);
                *(void *)(v610 + 264) = *(void *)(v611 + 264);
                *(void *)(v610 + 272) = *(void *)(v611 + 272);
                *(void *)(v610 + 280) = *(void *)(v611 + 280);
                uint64_t v615 = *(void *)(v611 + 288);
                *(unsigned char *)(v610 + 296) = *(unsigned char *)(v611 + 296);
                *(void *)(v610 + 288) = v615;
                uint64_t v616 = *(int *)(v612 + 112);
                __dstf = (void *)(v610 + v616);
                uint64_t v617 = (const void *)(v611 + v616);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (__swift_getEnumTagSinglePayload((uint64_t)v617, 1, v9))
                {
                  uint64_t v618 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                  memcpy(__dstf, v617, *(void *)(*(void *)(v618 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dstf, v617, v9);
                  __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v9);
                }
                uint64_t v628 = *(int *)(v612 + 116);
                uint64_t v629 = (void *)(v610 + v628);
                uint64_t v630 = (const void *)(v611 + v628);
                if (__swift_getEnumTagSinglePayload(v611 + v628, 1, v9))
                {
                  uint64_t v631 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                  memcpy(v629, v630, *(void *)(*(void *)(v631 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v629, v630, v9);
                  __swift_storeEnumTagSinglePayload((uint64_t)v629, 0, 1, v9);
                }
                uint64_t v632 = v610;
                uint64_t v633 = v612;
                goto LABEL_271;
              }
              goto LABEL_261;
            }
            if (v614)
            {
              outlined destroy of EmailDocument(v610, (void (*)(void))type metadata accessor for TicketedTransportation);
LABEL_261:
              size_t v619 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?)
                                           - 8)
                               + 64);
              long long v620 = (void *)v610;
              uint64_t v621 = (const void *)v611;
              goto LABEL_262;
            }
            *(void *)uint64_t v610 = *(void *)v611;
            *(void *)(v610 + 8) = *(void *)(v611 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 16) = *(void *)(v611 + 16);
            *(void *)(v610 + 24) = *(void *)(v611 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 32) = *(void *)(v611 + 32);
            *(void *)(v610 + 40) = *(void *)(v611 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 48) = *(void *)(v611 + 48);
            *(void *)(v610 + 56) = *(void *)(v611 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 64) = *(void *)(v611 + 64);
            *(void *)(v610 + 72) = *(void *)(v611 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 80) = *(void *)(v611 + 80);
            *(void *)(v610 + 88) = *(void *)(v611 + 88);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 96) = *(void *)(v611 + 96);
            *(void *)(v610 + 104) = *(void *)(v611 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 112) = *(void *)(v611 + 112);
            *(void *)(v610 + 120) = *(void *)(v611 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v610 + 128) = *(unsigned char *)(v611 + 128);
            *(unsigned char *)(v610 + 129) = *(unsigned char *)(v611 + 129);
            *(unsigned char *)(v610 + 130) = *(unsigned char *)(v611 + 130);
            *(void *)(v610 + 136) = *(void *)(v611 + 136);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 144) = *(void *)(v611 + 144);
            *(void *)(v610 + 152) = *(void *)(v611 + 152);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 160) = *(void *)(v611 + 160);
            *(void *)(v610 + 168) = *(void *)(v611 + 168);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 176) = *(void *)(v611 + 176);
            *(void *)(v610 + 184) = *(void *)(v611 + 184);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 192) = *(void *)(v611 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 200) = *(void *)(v611 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 208) = *(void *)(v611 + 208);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 216) = *(void *)(v611 + 216);
            *(void *)(v610 + 224) = *(void *)(v611 + 224);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 232) = *(void *)(v611 + 232);
            *(void *)(v610 + 240) = *(void *)(v611 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 248) = *(void *)(v611 + 248);
            *(void *)(v610 + 256) = *(void *)(v611 + 256);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 264) = *(void *)(v611 + 264);
            *(void *)(v610 + 272) = *(void *)(v611 + 272);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v610 + 280) = *(void *)(v611 + 280);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v622 = *(void *)(v611 + 288);
            *(unsigned char *)(v610 + 296) = *(unsigned char *)(v611 + 296);
            *(void *)(v610 + 288) = v622;
            v1238 = (int *)v612;
            uint64_t v623 = *(int *)(v612 + 112);
            long long v624 = (void *)(v610 + v623);
            uint64_t v625 = (const void *)(v611 + v623);
            int v626 = __swift_getEnumTagSinglePayload(v610 + v623, 1, v9);
            int v627 = __swift_getEnumTagSinglePayload((uint64_t)v625, 1, v9);
            if (v626)
            {
              if (!v627)
              {
                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v624, v625, v9);
                __swift_storeEnumTagSinglePayload((uint64_t)v624, 0, 1, v9);
LABEL_370:
                uint64_t v862 = v1238[29];
                int v863 = (void *)(v610 + v862);
                uint64_t v864 = v611 + v862;
                int v865 = __swift_getEnumTagSinglePayload(v610 + v862, 1, v9);
                int v866 = __swift_getEnumTagSinglePayload(v864, 1, v9);
                if (v865)
                {
                  if (!v866)
                  {
                    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v863, v864, v9);
                    uint64_t v632 = (uint64_t)v863;
                    uint64_t v633 = v9;
LABEL_271:
                    __swift_storeEnumTagSinglePayload(v632, 0, 1, v633);
                    goto LABEL_272;
                  }
                }
                else
                {
                  uint64_t v900 = *(void *)(v9 - 8);
                  if (!v866)
                  {
                    (*(void (**)(void *, uint64_t, uint64_t))(v900 + 24))(v863, v864, v9);
LABEL_272:
                    uint64_t v634 = v42[7];
                    uint64_t v635 = (uint64_t)v40 + v634;
                    uint64_t v636 = (uint64_t)v41 + v634;
                    uint64_t v637 = type metadata accessor for TicketedShow(0);
                    int v638 = __swift_getEnumTagSinglePayload(v635, 1, v637);
                    int v639 = __swift_getEnumTagSinglePayload(v636, 1, v637);
                    if (v638)
                    {
                      if (!v639)
                      {
                        *(void *)uint64_t v635 = *(void *)v636;
                        *(void *)(v635 + 8) = *(void *)(v636 + 8);
                        *(void *)(v635 + 16) = *(void *)(v636 + 16);
                        *(void *)(v635 + 24) = *(void *)(v636 + 24);
                        *(void *)(v635 + 32) = *(void *)(v636 + 32);
                        *(void *)(v635 + 40) = *(void *)(v636 + 40);
                        *(void *)(v635 + 48) = *(void *)(v636 + 48);
                        *(void *)(v635 + 56) = *(void *)(v636 + 56);
                        *(void *)(v635 + 64) = *(void *)(v636 + 64);
                        *(void *)(v635 + 72) = *(void *)(v636 + 72);
                        *(void *)(v635 + 80) = *(void *)(v636 + 80);
                        *(void *)(v635 + 88) = *(void *)(v636 + 88);
                        *(void *)(v635 + 96) = *(void *)(v636 + 96);
                        *(void *)(v635 + 104) = *(void *)(v636 + 104);
                        *(void *)(v635 + 112) = *(void *)(v636 + 112);
                        *(void *)(v635 + 120) = *(void *)(v636 + 120);
                        *(unsigned char *)(v635 + 128) = *(unsigned char *)(v636 + 128);
                        *(unsigned char *)(v635 + 129) = *(unsigned char *)(v636 + 129);
                        *(unsigned char *)(v635 + 130) = *(unsigned char *)(v636 + 130);
                        *(void *)(v635 + 136) = *(void *)(v636 + 136);
                        *(void *)(v635 + 144) = *(void *)(v636 + 144);
                        *(void *)(v635 + 152) = *(void *)(v636 + 152);
                        *(void *)(v635 + 160) = *(void *)(v636 + 160);
                        *(void *)(v635 + 168) = *(void *)(v636 + 168);
                        *(void *)(v635 + 176) = *(void *)(v636 + 176);
                        *(void *)(v635 + 184) = *(void *)(v636 + 184);
                        *(void *)(v635 + 192) = *(void *)(v636 + 192);
                        *(void *)(v635 + 200) = *(void *)(v636 + 200);
                        *(void *)(v635 + 208) = *(void *)(v636 + 208);
                        *(void *)(v635 + 216) = *(void *)(v636 + 216);
                        *(void *)(v635 + 224) = *(void *)(v636 + 224);
                        *(void *)(v635 + 232) = *(void *)(v636 + 232);
                        *(void *)(v635 + 240) = *(void *)(v636 + 240);
                        *(void *)(v635 + 248) = *(void *)(v636 + 248);
                        *(void *)(v635 + 256) = *(void *)(v636 + 256);
                        *(void *)(v635 + 264) = *(void *)(v636 + 264);
                        *(void *)(v635 + 272) = *(void *)(v636 + 272);
                        *(void *)(v635 + 280) = *(void *)(v636 + 280);
                        uint64_t v640 = *(void *)(v636 + 288);
                        *(unsigned char *)(v635 + 296) = *(unsigned char *)(v636 + 296);
                        *(void *)(v635 + 288) = v640;
                        *(void *)(v635 + 304) = *(void *)(v636 + 304);
                        *(void *)(v635 + 312) = *(void *)(v636 + 312);
                        uint64_t v641 = *(int *)(v637 + 116);
                        __dstg = (void *)(v635 + v641);
                        v1239 = (int *)v637;
                        uint64_t v642 = (const void *)(v636 + v641);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v642, 1, v1255))
                        {
                          uint64_t v643 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                          memcpy(__dstg, v642, *(void *)(*(void *)(v643 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(__dstg, v642, v1255);
                          __swift_storeEnumTagSinglePayload((uint64_t)__dstg, 0, 1, v1255);
                        }
                        uint64_t v653 = v1239[30];
                        uint64_t v654 = (void *)(v635 + v653);
                        uint64_t v655 = (void *)(v636 + v653);
                        *uint64_t v654 = *v655;
                        v654[1] = v655[1];
                        uint64_t v656 = v1239[31];
                        uint64_t v657 = (void *)(v635 + v656);
                        uint64_t v658 = (const void *)(v636 + v656);
                        swift_bridgeObjectRetain();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v658, 1, v9))
                        {
                          uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                          memcpy(v657, v658, *(void *)(*(void *)(v659 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v657, v658, v9);
                          __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v9);
                        }
                        uint64_t v660 = v1239[32];
                        uint64_t v661 = (void *)(v635 + v660);
                        uint64_t v662 = (const void *)(v636 + v660);
                        if (__swift_getEnumTagSinglePayload(v636 + v660, 1, v9))
                        {
                          uint64_t v663 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                          memcpy(v661, v662, *(void *)(*(void *)(v663 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v661, v662, v9);
                          __swift_storeEnumTagSinglePayload((uint64_t)v661, 0, 1, v9);
                        }
                        uint64_t v664 = v635;
                        uint64_t v665 = (uint64_t)v1239;
                        goto LABEL_291;
                      }
                      goto LABEL_278;
                    }
                    if (v639)
                    {
                      outlined destroy of EmailDocument(v635, (void (*)(void))type metadata accessor for TicketedShow);
LABEL_278:
                      size_t v644 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?)
                                                   - 8)
                                       + 64);
                      uint64_t v645 = (void *)v635;
                      uint64_t v646 = (const void *)v636;
                      goto LABEL_279;
                    }
                    *(void *)uint64_t v635 = *(void *)v636;
                    *(void *)(v635 + 8) = *(void *)(v636 + 8);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 16) = *(void *)(v636 + 16);
                    *(void *)(v635 + 24) = *(void *)(v636 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 32) = *(void *)(v636 + 32);
                    *(void *)(v635 + 40) = *(void *)(v636 + 40);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 48) = *(void *)(v636 + 48);
                    *(void *)(v635 + 56) = *(void *)(v636 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 64) = *(void *)(v636 + 64);
                    *(void *)(v635 + 72) = *(void *)(v636 + 72);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 80) = *(void *)(v636 + 80);
                    *(void *)(v635 + 88) = *(void *)(v636 + 88);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 96) = *(void *)(v636 + 96);
                    *(void *)(v635 + 104) = *(void *)(v636 + 104);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 112) = *(void *)(v636 + 112);
                    *(void *)(v635 + 120) = *(void *)(v636 + 120);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(unsigned char *)(v635 + 128) = *(unsigned char *)(v636 + 128);
                    *(unsigned char *)(v635 + 129) = *(unsigned char *)(v636 + 129);
                    *(unsigned char *)(v635 + 130) = *(unsigned char *)(v636 + 130);
                    *(void *)(v635 + 136) = *(void *)(v636 + 136);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 144) = *(void *)(v636 + 144);
                    *(void *)(v635 + 152) = *(void *)(v636 + 152);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 160) = *(void *)(v636 + 160);
                    *(void *)(v635 + 168) = *(void *)(v636 + 168);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 176) = *(void *)(v636 + 176);
                    *(void *)(v635 + 184) = *(void *)(v636 + 184);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 192) = *(void *)(v636 + 192);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 200) = *(void *)(v636 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 208) = *(void *)(v636 + 208);
                    *(void *)(v635 + 216) = *(void *)(v636 + 216);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 224) = *(void *)(v636 + 224);
                    *(void *)(v635 + 232) = *(void *)(v636 + 232);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 240) = *(void *)(v636 + 240);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 248) = *(void *)(v636 + 248);
                    *(void *)(v635 + 256) = *(void *)(v636 + 256);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 264) = *(void *)(v636 + 264);
                    *(void *)(v635 + 272) = *(void *)(v636 + 272);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v635 + 280) = *(void *)(v636 + 280);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v647 = *(void *)(v636 + 288);
                    *(unsigned char *)(v635 + 296) = *(unsigned char *)(v636 + 296);
                    *(void *)(v635 + 288) = v647;
                    *(void *)(v635 + 304) = *(void *)(v636 + 304);
                    *(void *)(v635 + 312) = *(void *)(v636 + 312);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v1240 = (int *)v637;
                    uint64_t v648 = *(int *)(v637 + 116);
                    uint64_t v649 = (void *)(v635 + v648);
                    uint64_t v650 = (const void *)(v636 + v648);
                    int v651 = __swift_getEnumTagSinglePayload(v635 + v648, 1, v1255);
                    int v652 = __swift_getEnumTagSinglePayload((uint64_t)v650, 1, v1255);
                    if (v651)
                    {
                      if (!v652)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v649, v650, v1255);
                        __swift_storeEnumTagSinglePayload((uint64_t)v649, 0, 1, v1255);
                        goto LABEL_376;
                      }
                    }
                    else
                    {
                      uint64_t v867 = *(void *)(v1255 - 8);
                      if (!v652)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v867 + 24))(v649, v650, v1255);
LABEL_376:
                        uint64_t v869 = v1240[30];
                        v870 = (void *)(v635 + v869);
                        uint64_t v871 = (void *)(v636 + v869);
                        void *v870 = *v871;
                        v870[1] = v871[1];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        uint64_t v872 = v1240[31];
                        uint64_t v873 = (void *)(v635 + v872);
                        uint64_t v874 = (const void *)(v636 + v872);
                        int v875 = __swift_getEnumTagSinglePayload(v635 + v872, 1, v9);
                        int v876 = __swift_getEnumTagSinglePayload((uint64_t)v874, 1, v9);
                        if (v875)
                        {
                          if (!v876)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v873, v874, v9);
                            __swift_storeEnumTagSinglePayload((uint64_t)v873, 0, 1, v9);
LABEL_405:
                            uint64_t v903 = v1240[32];
                            uint64_t v904 = (void *)(v635 + v903);
                            uint64_t v905 = v636 + v903;
                            int v906 = __swift_getEnumTagSinglePayload(v635 + v903, 1, v9);
                            int v907 = __swift_getEnumTagSinglePayload(v905, 1, v9);
                            if (v906)
                            {
                              if (!v907)
                              {
                                (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v904, v905, v9);
                                uint64_t v664 = (uint64_t)v904;
                                uint64_t v665 = v9;
LABEL_291:
                                __swift_storeEnumTagSinglePayload(v664, 0, 1, v665);
                                goto LABEL_292;
                              }
                            }
                            else
                            {
                              uint64_t v927 = *(void *)(v9 - 8);
                              if (!v907)
                              {
                                (*(void (**)(void *, uint64_t, uint64_t))(v927 + 24))(v904, v905, v9);
LABEL_292:
                                uint64_t v666 = v42[8];
                                uint64_t v667 = (uint64_t)v40 + v666;
                                uint64_t v668 = (uint64_t)v41 + v666;
                                uint64_t v669 = type metadata accessor for Appointment(0);
                                int v670 = __swift_getEnumTagSinglePayload(v667, 1, v669);
                                int v671 = __swift_getEnumTagSinglePayload(v668, 1, v669);
                                if (v670)
                                {
                                  if (!v671)
                                  {
                                    *(void *)uint64_t v667 = *(void *)v668;
                                    *(void *)(v667 + 8) = *(void *)(v668 + 8);
                                    *(void *)(v667 + 16) = *(void *)(v668 + 16);
                                    *(void *)(v667 + 24) = *(void *)(v668 + 24);
                                    *(void *)(v667 + 32) = *(void *)(v668 + 32);
                                    *(void *)(v667 + 40) = *(void *)(v668 + 40);
                                    *(void *)(v667 + 48) = *(void *)(v668 + 48);
                                    *(void *)(v667 + 56) = *(void *)(v668 + 56);
                                    *(void *)(v667 + 64) = *(void *)(v668 + 64);
                                    *(void *)(v667 + 72) = *(void *)(v668 + 72);
                                    *(void *)(v667 + 80) = *(void *)(v668 + 80);
                                    *(void *)(v667 + 88) = *(void *)(v668 + 88);
                                    *(void *)(v667 + 96) = *(void *)(v668 + 96);
                                    *(void *)(v667 + 104) = *(void *)(v668 + 104);
                                    *(void *)(v667 + 112) = *(void *)(v668 + 112);
                                    *(void *)(v667 + 120) = *(void *)(v668 + 120);
                                    *(unsigned char *)(v667 + 128) = *(unsigned char *)(v668 + 128);
                                    *(unsigned char *)(v667 + 129) = *(unsigned char *)(v668 + 129);
                                    *(unsigned char *)(v667 + 130) = *(unsigned char *)(v668 + 130);
                                    *(void *)(v667 + 136) = *(void *)(v668 + 136);
                                    *(void *)(v667 + 144) = *(void *)(v668 + 144);
                                    *(void *)(v667 + 152) = *(void *)(v668 + 152);
                                    *(void *)(v667 + 160) = *(void *)(v668 + 160);
                                    *(void *)(v667 + 168) = *(void *)(v668 + 168);
                                    *(void *)(v667 + 176) = *(void *)(v668 + 176);
                                    *(void *)(v667 + 184) = *(void *)(v668 + 184);
                                    *(void *)(v667 + 192) = *(void *)(v668 + 192);
                                    *(void *)(v667 + 200) = *(void *)(v668 + 200);
                                    *(void *)(v667 + 208) = *(void *)(v668 + 208);
                                    *(void *)(v667 + 216) = *(void *)(v668 + 216);
                                    *(void *)(v667 + 224) = *(void *)(v668 + 224);
                                    *(void *)(v667 + 232) = *(void *)(v668 + 232);
                                    *(void *)(v667 + 240) = *(void *)(v668 + 240);
                                    *(void *)(v667 + 248) = *(void *)(v668 + 248);
                                    *(void *)(v667 + 256) = *(void *)(v668 + 256);
                                    *(void *)(v667 + 264) = *(void *)(v668 + 264);
                                    uint64_t v672 = *(void *)(v668 + 272);
                                    *(unsigned char *)(v667 + 280) = *(unsigned char *)(v668 + 280);
                                    *(void *)(v667 + 272) = v672;
                                    *(void *)(v667 + 288) = *(void *)(v668 + 288);
                                    *(void *)(v667 + 296) = *(void *)(v668 + 296);
                                    uint64_t v673 = *(int *)(v669 + 108);
                                    __dsth = (void *)(v667 + v673);
                                    uint64_t v674 = (const void *)(v668 + v673);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v674, 1, v9))
                                    {
                                      uint64_t v675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                      memcpy(__dsth, v674, *(void *)(*(void *)(v675 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dsth, v674, v9);
                                      __swift_storeEnumTagSinglePayload((uint64_t)__dsth, 0, 1, v9);
                                    }
                                    uint64_t v685 = *(int *)(v669 + 112);
                                    uint64_t v686 = (void *)(v667 + v685);
                                    uint64_t v687 = (const void *)(v668 + v685);
                                    if (__swift_getEnumTagSinglePayload(v668 + v685, 1, v9))
                                    {
                                      uint64_t v688 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                      memcpy(v686, v687, *(void *)(*(void *)(v688 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v686, v687, v9);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v686, 0, 1, v9);
                                    }
                                    uint64_t v689 = v667;
                                    uint64_t v690 = v669;
                                    goto LABEL_308;
                                  }
                                  goto LABEL_298;
                                }
                                if (v671)
                                {
                                  outlined destroy of EmailDocument(v667, (void (*)(void))type metadata accessor for Appointment);
LABEL_298:
                                  size_t v676 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?)
                                                               - 8)
                                                   + 64);
                                  uint64_t v677 = (void *)v667;
                                  uint64_t v678 = (const void *)v668;
                                  goto LABEL_299;
                                }
                                *(void *)uint64_t v667 = *(void *)v668;
                                *(void *)(v667 + 8) = *(void *)(v668 + 8);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 16) = *(void *)(v668 + 16);
                                *(void *)(v667 + 24) = *(void *)(v668 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 32) = *(void *)(v668 + 32);
                                *(void *)(v667 + 40) = *(void *)(v668 + 40);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 48) = *(void *)(v668 + 48);
                                *(void *)(v667 + 56) = *(void *)(v668 + 56);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 64) = *(void *)(v668 + 64);
                                *(void *)(v667 + 72) = *(void *)(v668 + 72);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 80) = *(void *)(v668 + 80);
                                *(void *)(v667 + 88) = *(void *)(v668 + 88);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 96) = *(void *)(v668 + 96);
                                *(void *)(v667 + 104) = *(void *)(v668 + 104);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 112) = *(void *)(v668 + 112);
                                *(void *)(v667 + 120) = *(void *)(v668 + 120);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(unsigned char *)(v667 + 128) = *(unsigned char *)(v668 + 128);
                                *(unsigned char *)(v667 + 129) = *(unsigned char *)(v668 + 129);
                                *(unsigned char *)(v667 + 130) = *(unsigned char *)(v668 + 130);
                                *(void *)(v667 + 136) = *(void *)(v668 + 136);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 144) = *(void *)(v668 + 144);
                                *(void *)(v667 + 152) = *(void *)(v668 + 152);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 160) = *(void *)(v668 + 160);
                                *(void *)(v667 + 168) = *(void *)(v668 + 168);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 176) = *(void *)(v668 + 176);
                                *(void *)(v667 + 184) = *(void *)(v668 + 184);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 192) = *(void *)(v668 + 192);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 200) = *(void *)(v668 + 200);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 208) = *(void *)(v668 + 208);
                                *(void *)(v667 + 216) = *(void *)(v668 + 216);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 224) = *(void *)(v668 + 224);
                                *(void *)(v667 + 232) = *(void *)(v668 + 232);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 240) = *(void *)(v668 + 240);
                                *(void *)(v667 + 248) = *(void *)(v668 + 248);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v667 + 256) = *(void *)(v668 + 256);
                                *(void *)(v667 + 264) = *(void *)(v668 + 264);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v679 = *(void *)(v668 + 272);
                                *(unsigned char *)(v667 + 280) = *(unsigned char *)(v668 + 280);
                                *(void *)(v667 + 272) = v679;
                                *(void *)(v667 + 288) = *(void *)(v668 + 288);
                                *(void *)(v667 + 296) = *(void *)(v668 + 296);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v1241 = (int *)v669;
                                uint64_t v680 = *(int *)(v669 + 108);
                                uint64_t v681 = (void *)(v667 + v680);
                                uint64_t v682 = (const void *)(v668 + v680);
                                int v683 = __swift_getEnumTagSinglePayload(v667 + v680, 1, v9);
                                int v684 = __swift_getEnumTagSinglePayload((uint64_t)v682, 1, v9);
                                if (v683)
                                {
                                  if (!v684)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v681, v682, v9);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v681, 0, 1, v9);
LABEL_382:
                                    uint64_t v879 = v1241[28];
                                    uint64_t v880 = (void *)(v667 + v879);
                                    uint64_t v881 = v668 + v879;
                                    int v882 = __swift_getEnumTagSinglePayload(v667 + v879, 1, v9);
                                    int v883 = __swift_getEnumTagSinglePayload(v881, 1, v9);
                                    if (v882)
                                    {
                                      if (!v883)
                                      {
                                        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v880, v881, v9);
                                        uint64_t v689 = (uint64_t)v880;
                                        uint64_t v690 = v9;
LABEL_308:
                                        __swift_storeEnumTagSinglePayload(v689, 0, 1, v690);
                                        goto LABEL_309;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t v908 = *(void *)(v9 - 8);
                                      if (!v883)
                                      {
                                        (*(void (**)(void *, uint64_t, uint64_t))(v908 + 24))(v880, v881, v9);
LABEL_309:
                                        uint64_t v691 = v42[9];
                                        uint64_t v692 = (uint64_t)v40 + v691;
                                        uint64_t v693 = (uint64_t)v41 + v691;
                                        uint64_t v694 = (int *)type metadata accessor for Party(0);
                                        int v695 = __swift_getEnumTagSinglePayload(v692, 1, (uint64_t)v694);
                                        int v696 = __swift_getEnumTagSinglePayload(v693, 1, (uint64_t)v694);
                                        if (v695)
                                        {
                                          if (!v696)
                                          {
                                            *(void *)uint64_t v692 = *(void *)v693;
                                            *(void *)(v692 + 8) = *(void *)(v693 + 8);
                                            *(void *)(v692 + 16) = *(void *)(v693 + 16);
                                            *(void *)(v692 + 24) = *(void *)(v693 + 24);
                                            *(void *)(v692 + 32) = *(void *)(v693 + 32);
                                            *(void *)(v692 + 40) = *(void *)(v693 + 40);
                                            *(void *)(v692 + 48) = *(void *)(v693 + 48);
                                            *(void *)(v692 + 56) = *(void *)(v693 + 56);
                                            *(void *)(v692 + 64) = *(void *)(v693 + 64);
                                            *(void *)(v692 + 72) = *(void *)(v693 + 72);
                                            *(void *)(v692 + 80) = *(void *)(v693 + 80);
                                            *(void *)(v692 + 88) = *(void *)(v693 + 88);
                                            *(void *)(v692 + 96) = *(void *)(v693 + 96);
                                            *(void *)(v692 + 104) = *(void *)(v693 + 104);
                                            *(void *)(v692 + 112) = *(void *)(v693 + 112);
                                            *(void *)(v692 + 120) = *(void *)(v693 + 120);
                                            *(unsigned char *)(v692 + 128) = *(unsigned char *)(v693 + 128);
                                            *(unsigned char *)(v692 + 129) = *(unsigned char *)(v693 + 129);
                                            *(unsigned char *)(v692 + 130) = *(unsigned char *)(v693 + 130);
                                            *(void *)(v692 + 136) = *(void *)(v693 + 136);
                                            *(void *)(v692 + 144) = *(void *)(v693 + 144);
                                            *(void *)(v692 + 152) = *(void *)(v693 + 152);
                                            *(void *)(v692 + 160) = *(void *)(v693 + 160);
                                            *(void *)(v692 + 168) = *(void *)(v693 + 168);
                                            *(void *)(v692 + 176) = *(void *)(v693 + 176);
                                            *(void *)(v692 + 184) = *(void *)(v693 + 184);
                                            *(void *)(v692 + 192) = *(void *)(v693 + 192);
                                            *(void *)(v692 + 200) = *(void *)(v693 + 200);
                                            *(void *)(v692 + 208) = *(void *)(v693 + 208);
                                            *(void *)(v692 + 216) = *(void *)(v693 + 216);
                                            *(void *)(v692 + 224) = *(void *)(v693 + 224);
                                            *(void *)(v692 + 232) = *(void *)(v693 + 232);
                                            *(void *)(v692 + 240) = *(void *)(v693 + 240);
                                            *(void *)(v692 + 248) = *(void *)(v693 + 248);
                                            uint64_t v697 = v694[24];
                                            __dsti = (void *)(v692 + v697);
                                            uint64_t v698 = (const void *)(v693 + v697);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            if (__swift_getEnumTagSinglePayload((uint64_t)v698, 1, v9))
                                            {
                                              uint64_t v699 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                              memcpy(__dsti, v698, *(void *)(*(void *)(v699 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dsti, v698, v9);
                                              __swift_storeEnumTagSinglePayload((uint64_t)__dsti, 0, 1, v9);
                                            }
                                            uint64_t v708 = v694[25];
                                            uint64_t v709 = (void *)(v692 + v708);
                                            uint64_t v710 = (const void *)(v693 + v708);
                                            if (__swift_getEnumTagSinglePayload(v693 + v708, 1, v9))
                                            {
                                              uint64_t v711 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                              memcpy(v709, v710, *(void *)(*(void *)(v711 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v709, v710, v9);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v709, 0, 1, v9);
                                            }
                                            uint64_t v712 = v694[26];
                                            uint64_t v713 = (void *)(v692 + v712);
                                            uint64_t v714 = (const void *)(v693 + v712);
                                            if (__swift_getEnumTagSinglePayload(v693 + v712, 1, v1255))
                                            {
                                              uint64_t v715 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                              memcpy(v713, v714, *(void *)(*(void *)(v715 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v713, v714, v1255);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v713, 0, 1, v1255);
                                            }
                                            uint64_t v716 = v692;
                                            uint64_t v717 = (uint64_t)v694;
                                            goto LABEL_328;
                                          }
                                          goto LABEL_315;
                                        }
                                        if (v696)
                                        {
                                          outlined destroy of EmailDocument(v692, (void (*)(void))type metadata accessor for Party);
LABEL_315:
                                          size_t v700 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?)
                                                                       - 8)
                                                           + 64);
                                          uint64_t v701 = (void *)v692;
                                          uint64_t v702 = (const void *)v693;
                                          goto LABEL_316;
                                        }
                                        *(void *)uint64_t v692 = *(void *)v693;
                                        *(void *)(v692 + 8) = *(void *)(v693 + 8);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 16) = *(void *)(v693 + 16);
                                        *(void *)(v692 + 24) = *(void *)(v693 + 24);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 32) = *(void *)(v693 + 32);
                                        *(void *)(v692 + 40) = *(void *)(v693 + 40);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 48) = *(void *)(v693 + 48);
                                        *(void *)(v692 + 56) = *(void *)(v693 + 56);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 64) = *(void *)(v693 + 64);
                                        *(void *)(v692 + 72) = *(void *)(v693 + 72);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 80) = *(void *)(v693 + 80);
                                        *(void *)(v692 + 88) = *(void *)(v693 + 88);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 96) = *(void *)(v693 + 96);
                                        *(void *)(v692 + 104) = *(void *)(v693 + 104);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 112) = *(void *)(v693 + 112);
                                        *(void *)(v692 + 120) = *(void *)(v693 + 120);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(unsigned char *)(v692 + 128) = *(unsigned char *)(v693 + 128);
                                        *(unsigned char *)(v692 + 129) = *(unsigned char *)(v693 + 129);
                                        *(unsigned char *)(v692 + 130) = *(unsigned char *)(v693 + 130);
                                        *(void *)(v692 + 136) = *(void *)(v693 + 136);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 144) = *(void *)(v693 + 144);
                                        *(void *)(v692 + 152) = *(void *)(v693 + 152);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 160) = *(void *)(v693 + 160);
                                        *(void *)(v692 + 168) = *(void *)(v693 + 168);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 176) = *(void *)(v693 + 176);
                                        *(void *)(v692 + 184) = *(void *)(v693 + 184);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 192) = *(void *)(v693 + 192);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 200) = *(void *)(v693 + 200);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 208) = *(void *)(v693 + 208);
                                        *(void *)(v692 + 216) = *(void *)(v693 + 216);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 224) = *(void *)(v693 + 224);
                                        *(void *)(v692 + 232) = *(void *)(v693 + 232);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v692 + 240) = *(void *)(v693 + 240);
                                        *(void *)(v692 + 248) = *(void *)(v693 + 248);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        v1242 = v694;
                                        uint64_t v703 = v694[24];
                                        uint64_t v704 = (void *)(v692 + v703);
                                        uint64_t v705 = (const void *)(v693 + v703);
                                        int v706 = __swift_getEnumTagSinglePayload(v692 + v703, 1, v9);
                                        int v707 = __swift_getEnumTagSinglePayload((uint64_t)v705, 1, v9);
                                        if (v706)
                                        {
                                          if (!v707)
                                          {
                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8)
                                                                                                  + 16))(v704, v705, v9);
                                            __swift_storeEnumTagSinglePayload((uint64_t)v704, 0, 1, v9);
                                            goto LABEL_388;
                                          }
                                        }
                                        else
                                        {
                                          uint64_t v884 = *(void *)(v9 - 8);
                                          if (!v707)
                                          {
                                            (*(void (**)(void *, const void *, uint64_t))(v884 + 24))(v704, v705, v9);
LABEL_388:
                                            uint64_t v886 = v1242[25];
                                            uint64_t v887 = (void *)(v692 + v886);
                                            int v888 = (const void *)(v693 + v886);
                                            int v889 = __swift_getEnumTagSinglePayload(v692 + v886, 1, v9);
                                            int v890 = __swift_getEnumTagSinglePayload((uint64_t)v888, 1, v9);
                                            if (v889)
                                            {
                                              if (!v890)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v887, v888, v9);
                                                __swift_storeEnumTagSinglePayload((uint64_t)v887, 0, 1, v9);
LABEL_414:
                                                uint64_t v911 = v1242[26];
                                                v912 = (void *)(v692 + v911);
                                                uint64_t v913 = v693 + v911;
                                                int v914 = __swift_getEnumTagSinglePayload(v692 + v911, 1, v1255);
                                                int v915 = __swift_getEnumTagSinglePayload(v913, 1, v1255);
                                                if (v914)
                                                {
                                                  if (!v915)
                                                  {
                                                    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v1255 - 8) + 16))(v912, v913, v1255);
                                                    uint64_t v716 = (uint64_t)v912;
                                                    uint64_t v717 = v1255;
LABEL_328:
                                                    __swift_storeEnumTagSinglePayload(v716, 0, 1, v717);
                                                    goto LABEL_329;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t v928 = *(void *)(v1255 - 8);
                                                  if (!v915)
                                                  {
                                                    (*(void (**)(void *, uint64_t, uint64_t))(v928 + 24))(v912, v913, v1255);
LABEL_329:
                                                    uint64_t v718 = v42[10];
                                                    uint64_t v719 = (uint64_t)v40 + v718;
                                                    uint64_t v720 = (uint64_t)v41 + v718;
                                                    uint64_t v721 = type metadata accessor for Trip(0);
                                                    int v722 = __swift_getEnumTagSinglePayload(v719, 1, v721);
                                                    v1243 = (int *)v721;
                                                    int v723 = __swift_getEnumTagSinglePayload(v720, 1, v721);
                                                    if (v722)
                                                    {
                                                      if (!v723)
                                                      {
                                                        *(void *)uint64_t v719 = *(void *)v720;
                                                        *(void *)(v719 + 8) = *(void *)(v720 + 8);
                                                        *(void *)(v719 + 16) = *(void *)(v720 + 16);
                                                        *(void *)(v719 + 24) = *(void *)(v720 + 24);
                                                        *(void *)(v719 + 32) = *(void *)(v720 + 32);
                                                        *(void *)(v719 + 40) = *(void *)(v720 + 40);
                                                        *(void *)(v719 + 48) = *(void *)(v720 + 48);
                                                        *(void *)(v719 + 56) = *(void *)(v720 + 56);
                                                        *(void *)(v719 + 64) = *(void *)(v720 + 64);
                                                        *(void *)(v719 + 72) = *(void *)(v720 + 72);
                                                        *(void *)(v719 + 80) = *(void *)(v720 + 80);
                                                        *(void *)(v719 + 88) = *(void *)(v720 + 88);
                                                        *(void *)(v719 + 96) = *(void *)(v720 + 96);
                                                        *(void *)(v719 + 104) = *(void *)(v720 + 104);
                                                        *(void *)(v719 + 112) = *(void *)(v720 + 112);
                                                        *(void *)(v719 + 120) = *(void *)(v720 + 120);
                                                        *(unsigned char *)(v719 + 128) = *(unsigned char *)(v720 + 128);
                                                        *(unsigned char *)(v719 + 129) = *(unsigned char *)(v720 + 129);
                                                        *(unsigned char *)(v719 + 130) = *(unsigned char *)(v720 + 130);
                                                        *(void *)(v719 + 136) = *(void *)(v720 + 136);
                                                        *(void *)(v719 + 144) = *(void *)(v720 + 144);
                                                        *(void *)(v719 + 152) = *(void *)(v720 + 152);
                                                        *(void *)(v719 + 160) = *(void *)(v720 + 160);
                                                        *(void *)(v719 + 168) = *(void *)(v720 + 168);
                                                        *(void *)(v719 + 176) = *(void *)(v720 + 176);
                                                        *(void *)(v719 + 184) = *(void *)(v720 + 184);
                                                        *(void *)(v719 + 192) = *(void *)(v720 + 192);
                                                        *(void *)(v719 + 200) = *(void *)(v720 + 200);
                                                        *(void *)(v719 + 208) = *(void *)(v720 + 208);
                                                        *(void *)(v719 + 216) = *(void *)(v720 + 216);
                                                        uint64_t v724 = *(int *)(v721 + 88);
                                                        __dstj = (void *)(v719 + v724);
                                                        uint64_t v1208 = (const void *)(v720 + v724);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        if (__swift_getEnumTagSinglePayload((uint64_t)v1208, 1, v9))
                                                        {
                                                          uint64_t v725 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                          memcpy(__dstj, v1208, *(void *)(*(void *)(v725 - 8) + 64));
                                                        }
                                                        else
                                                        {
                                                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dstj, v1208, v9);
                                                          __swift_storeEnumTagSinglePayload((uint64_t)__dstj, 0, 1, v9);
                                                        }
                                                        uint64_t v734 = *(int *)(v721 + 92);
                                                        uint64_t v735 = (void *)(v719 + v734);
                                                        uint64_t v736 = (const void *)(v720 + v734);
                                                        if (__swift_getEnumTagSinglePayload(v720 + v734, 1, v9))
                                                        {
                                                          uint64_t v737 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                          memcpy(v735, v736, *(void *)(*(void *)(v737 - 8) + 64));
                                                        }
                                                        else
                                                        {
                                                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v735, v736, v9);
                                                          __swift_storeEnumTagSinglePayload((uint64_t)v735, 0, 1, v9);
                                                        }
                                                        uint64_t v738 = v1243[24];
                                                        uint64_t v739 = v719 + v738;
                                                        long long v740 = (uint64_t *)(v720 + v738);
                                                        uint64_t v741 = *v740;
                                                        *(unsigned char *)(v739 + 8) = *((unsigned char *)v740 + 8);
                                                        *(void *)uint64_t v739 = v741;
                                                        uint64_t v742 = v1243[25];
                                                        long long v743 = (void *)(v719 + v742);
                                                        long long v744 = (const void *)(v720 + v742);
                                                        if (__swift_getEnumTagSinglePayload(v720 + v742, 1, v1255))
                                                        {
                                                          uint64_t v745 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                          memcpy(v743, v744, *(void *)(*(void *)(v745 - 8) + 64));
                                                        }
                                                        else
                                                        {
                                                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v743, v744, v1255);
                                                          __swift_storeEnumTagSinglePayload((uint64_t)v743, 0, 1, v1255);
                                                        }
                                                        uint64_t v746 = v719;
                                                        uint64_t v747 = (uint64_t)v1243;
                                                        goto LABEL_348;
                                                      }
                                                      goto LABEL_335;
                                                    }
                                                    if (v723)
                                                    {
                                                      outlined destroy of EmailDocument(v719, (void (*)(void))type metadata accessor for Trip);
LABEL_335:
                                                      size_t v726 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?)
                                                                                   - 8)
                                                                       + 64);
                                                      uint64_t v727 = (void *)v719;
                                                      uint64_t v728 = (const void *)v720;
                                                      goto LABEL_336;
                                                    }
                                                    *(void *)uint64_t v719 = *(void *)v720;
                                                    *(void *)(v719 + 8) = *(void *)(v720 + 8);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 16) = *(void *)(v720 + 16);
                                                    *(void *)(v719 + 24) = *(void *)(v720 + 24);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 32) = *(void *)(v720 + 32);
                                                    *(void *)(v719 + 40) = *(void *)(v720 + 40);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 48) = *(void *)(v720 + 48);
                                                    *(void *)(v719 + 56) = *(void *)(v720 + 56);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 64) = *(void *)(v720 + 64);
                                                    *(void *)(v719 + 72) = *(void *)(v720 + 72);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 80) = *(void *)(v720 + 80);
                                                    *(void *)(v719 + 88) = *(void *)(v720 + 88);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 96) = *(void *)(v720 + 96);
                                                    *(void *)(v719 + 104) = *(void *)(v720 + 104);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 112) = *(void *)(v720 + 112);
                                                    *(void *)(v719 + 120) = *(void *)(v720 + 120);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(unsigned char *)(v719 + 128) = *(unsigned char *)(v720 + 128);
                                                    *(unsigned char *)(v719 + 129) = *(unsigned char *)(v720 + 129);
                                                    *(unsigned char *)(v719 + 130) = *(unsigned char *)(v720 + 130);
                                                    *(void *)(v719 + 136) = *(void *)(v720 + 136);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 144) = *(void *)(v720 + 144);
                                                    *(void *)(v719 + 152) = *(void *)(v720 + 152);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 160) = *(void *)(v720 + 160);
                                                    *(void *)(v719 + 168) = *(void *)(v720 + 168);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 176) = *(void *)(v720 + 176);
                                                    *(void *)(v719 + 184) = *(void *)(v720 + 184);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 192) = *(void *)(v720 + 192);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 200) = *(void *)(v720 + 200);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(void *)(v719 + 208) = *(void *)(v720 + 208);
                                                    *(void *)(v719 + 216) = *(void *)(v720 + 216);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    uint64_t v729 = *(int *)(v721 + 88);
                                                    int v730 = (void *)(v719 + v729);
                                                    int v731 = (const void *)(v720 + v729);
                                                    int v732 = __swift_getEnumTagSinglePayload(v719 + v729, 1, v9);
                                                    int v733 = __swift_getEnumTagSinglePayload((uint64_t)v731, 1, v9);
                                                    if (v732)
                                                    {
                                                      if (!v733)
                                                      {
                                                        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v730, v731, v9);
                                                        __swift_storeEnumTagSinglePayload((uint64_t)v730, 0, 1, v9);
                                                        goto LABEL_394;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      uint64_t v891 = *(void *)(v9 - 8);
                                                      if (!v733)
                                                      {
                                                        (*(void (**)(void *, const void *, uint64_t))(v891 + 24))(v730, v731, v9);
LABEL_394:
                                                        uint64_t v893 = v1243[23];
                                                        uint64_t v894 = (void *)(v719 + v893);
                                                        int v895 = (const void *)(v720 + v893);
                                                        int v896 = __swift_getEnumTagSinglePayload(v719 + v893, 1, v9);
                                                        int v897 = __swift_getEnumTagSinglePayload((uint64_t)v895, 1, v9);
                                                        if (v896)
                                                        {
                                                          if (!v897)
                                                          {
                                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v894, v895, v9);
                                                            __swift_storeEnumTagSinglePayload((uint64_t)v894, 0, 1, v9);
LABEL_420:
                                                            uint64_t v918 = v1243[24];
                                                            uint64_t v919 = v719 + v918;
                                                            uint64_t v920 = (uint64_t *)(v720 + v918);
                                                            uint64_t v921 = *v920;
                                                            *(unsigned char *)(v919 + 8) = *((unsigned char *)v920 + 8);
                                                            *(void *)uint64_t v919 = v921;
                                                            uint64_t v922 = v1243[25];
                                                            uint64_t v923 = (void *)(v719 + v922);
                                                            uint64_t v924 = v720 + v922;
                                                            int v925 = __swift_getEnumTagSinglePayload(v719 + v922, 1, v1255);
                                                            int v926 = __swift_getEnumTagSinglePayload(v924, 1, v1255);
                                                            if (v925)
                                                            {
                                                              if (!v926)
                                                              {
                                                                (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v1255 - 8) + 16))(v923, v924, v1255);
                                                                uint64_t v746 = (uint64_t)v923;
                                                                uint64_t v747 = v1255;
LABEL_348:
                                                                __swift_storeEnumTagSinglePayload(v746, 0, 1, v747);
                                                                goto LABEL_349;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t v929 = *(void *)(v1255 - 8);
                                                              if (!v926)
                                                              {
                                                                (*(void (**)(void *, uint64_t, uint64_t))(v929 + 24))(v923, v924, v1255);
LABEL_349:
                                                                uint64_t v748 = v42[11];
                                                                uint64_t v749 = (uint64_t)v40 + v748;
                                                                uint64_t v750 = (uint64_t)v41 + v748;
                                                                uint64_t v751 = (int *)type metadata accessor for FlightReservation(0);
                                                                int v752 = __swift_getEnumTagSinglePayload(v749, 1, (uint64_t)v751);
                                                                int v753 = __swift_getEnumTagSinglePayload(v750, 1, (uint64_t)v751);
                                                                if (v752)
                                                                {
                                                                  if (!v753)
                                                                  {
                                                                    *(void *)uint64_t v749 = *(void *)v750;
                                                                    *(void *)(v749 + 8) = *(void *)(v750 + 8);
                                                                    *(void *)(v749 + 16) = *(void *)(v750 + 16);
                                                                    *(void *)(v749 + 24) = *(void *)(v750 + 24);
                                                                    *(void *)(v749 + 32) = *(void *)(v750 + 32);
                                                                    *(void *)(v749 + 40) = *(void *)(v750 + 40);
                                                                    *(void *)(v749 + 48) = *(void *)(v750 + 48);
                                                                    *(void *)(v749 + 56) = *(void *)(v750 + 56);
                                                                    *(void *)(v749 + 64) = *(void *)(v750 + 64);
                                                                    *(void *)(v749 + 72) = *(void *)(v750 + 72);
                                                                    *(void *)(v749 + 80) = *(void *)(v750 + 80);
                                                                    *(void *)(v749 + 88) = *(void *)(v750 + 88);
                                                                    *(unsigned char *)(v749 + 96) = *(unsigned char *)(v750 + 96);
                                                                    *(void *)(v749 + 104) = *(void *)(v750 + 104);
                                                                    *(void *)(v749 + 112) = *(void *)(v750 + 112);
                                                                    uint64_t v754 = v751[13];
                                                                    __dstk = (void *)(v750 + v754);
                                                                    v1244 = (void *)(v749 + v754);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    if (__swift_getEnumTagSinglePayload((uint64_t)__dstk, 1, v1255))
                                                                    {
                                                                      uint64_t v755 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                                      memcpy(v1244, __dstk, *(void *)(*(void *)(v755 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(void *, void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v1244, __dstk, v1255);
                                                                      __swift_storeEnumTagSinglePayload((uint64_t)v1244, 0, 1, v1255);
                                                                    }
                                                                    uint64_t v764 = v751[14];
                                                                    uint64_t v765 = (void *)(v749 + v764);
                                                                    uint64_t v766 = (const void *)(v750 + v764);
                                                                    if (__swift_getEnumTagSinglePayload(v750 + v764, 1, v1255))
                                                                    {
                                                                      uint64_t v767 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                                      memcpy(v765, v766, *(void *)(*(void *)(v767 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v765, v766, v1255);
                                                                      __swift_storeEnumTagSinglePayload((uint64_t)v765, 0, 1, v1255);
                                                                    }
                                                                    uint64_t v768 = v751[15];
                                                                    int v769 = (void *)(v749 + v768);
                                                                    size_t v770 = (void *)(v750 + v768);
                                                                    *int v769 = *v770;
                                                                    v769[1] = v770[1];
                                                                    uint64_t v771 = v751[16];
                                                                    uint64_t v772 = (void *)(v749 + v771);
                                                                    uint64_t v773 = (void *)(v750 + v771);
                                                                    *uint64_t v772 = *v773;
                                                                    v772[1] = v773[1];
                                                                    uint64_t v774 = v751[17];
                                                                    uint64_t v775 = (void *)(v749 + v774);
                                                                    uint64_t v776 = (void *)(v750 + v774);
                                                                    void *v775 = *v776;
                                                                    v775[1] = v776[1];
                                                                    uint64_t v777 = v751[18];
                                                                    v1245 = (void *)(v749 + v777);
                                                                    uint64_t v778 = v750 + v777;
                                                                    uint64_t v779 = type metadata accessor for DateComponents();
                                                                    uint64_t v780 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v779 - 8) + 16);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    v780(v1245, v778, v779);
                                                                    v780((void *)(v749 + v751[19]), v750 + v751[19], v779);
                                                                    uint64_t v781 = v751[20];
                                                                    v782 = (void *)(v749 + v781);
                                                                    int v783 = (void *)(v750 + v781);
                                                                    void *v782 = *v783;
                                                                    v782[1] = v783[1];
                                                                    uint64_t v784 = v751[21];
                                                                    size_t v785 = (void *)(v749 + v784);
                                                                    int v786 = (void *)(v750 + v784);
                                                                    *size_t v785 = *v786;
                                                                    v785[1] = v786[1];
                                                                    uint64_t v787 = v751[22];
                                                                    v788 = (void *)(v749 + v787);
                                                                    v789 = (void *)(v750 + v787);
                                                                    void *v788 = *v789;
                                                                    v788[1] = v789[1];
                                                                    uint64_t v790 = v751[23];
                                                                    int v791 = (void *)(v749 + v790);
                                                                    int v792 = (void *)(v750 + v790);
                                                                    *int v791 = *v792;
                                                                    v791[1] = v792[1];
                                                                    uint64_t v793 = v751[24];
                                                                    uint64_t v794 = (void *)(v749 + v793);
                                                                    uint64_t v795 = (void *)(v750 + v793);
                                                                    *uint64_t v794 = *v795;
                                                                    v794[1] = v795[1];
                                                                    uint64_t v796 = v751[25];
                                                                    uint64_t v797 = (void *)(v749 + v796);
                                                                    v798 = (void *)(v750 + v796);
                                                                    *uint64_t v797 = *v798;
                                                                    v797[1] = v798[1];
                                                                    uint64_t v799 = v751[26];
                                                                    int v800 = (void *)(v749 + v799);
                                                                    long long v801 = (void *)(v750 + v799);
                                                                    *int v800 = *v801;
                                                                    v800[1] = v801[1];
                                                                    uint64_t v802 = v751[27];
                                                                    long long v803 = (void *)(v749 + v802);
                                                                    long long v804 = (void *)(v750 + v802);
                                                                    *long long v803 = *v804;
                                                                    v803[1] = v804[1];
                                                                    uint64_t v805 = v751[28];
                                                                    long long v806 = (void *)(v749 + v805);
                                                                    uint64_t v807 = (void *)(v750 + v805);
                                                                    void *v806 = *v807;
                                                                    v806[1] = v807[1];
                                                                    uint64_t v808 = v751[29];
                                                                    v809 = (void *)(v749 + v808);
                                                                    uint64_t v810 = (void *)(v750 + v808);
                                                                    void *v809 = *v810;
                                                                    v809[1] = v810[1];
                                                                    uint64_t v811 = v751[30];
                                                                    uint64_t v812 = (void *)(v749 + v811);
                                                                    uint64_t v813 = (void *)(v750 + v811);
                                                                    void *v812 = *v813;
                                                                    v812[1] = v813[1];
                                                                    uint64_t v814 = v751[31];
                                                                    uint64_t v815 = (void *)(v749 + v814);
                                                                    uint64_t v816 = (void *)(v750 + v814);
                                                                    void *v815 = *v816;
                                                                    v815[1] = v816[1];
                                                                    uint64_t v817 = v751[32];
                                                                    uint64_t v818 = (void *)(v749 + v817);
                                                                    uint64_t v819 = (void *)(v750 + v817);
                                                                    void *v818 = *v819;
                                                                    v818[1] = v819[1];
                                                                    *(void *)(v749 + v751[33]) = *(void *)(v750 + v751[33]);
                                                                    *(void *)(v749 + v751[34]) = *(void *)(v750 + v751[34]);
                                                                    uint64_t v820 = v751[35];
                                                                    uint64_t v821 = (void *)(v749 + v820);
                                                                    uint64_t v822 = (void *)(v750 + v820);
                                                                    void *v821 = *v822;
                                                                    v821[1] = v822[1];
                                                                    uint64_t v823 = v751[36];
                                                                    uint64_t v824 = (void *)(v749 + v823);
                                                                    uint64_t v825 = (void *)(v750 + v823);
                                                                    void *v824 = *v825;
                                                                    v824[1] = v825[1];
                                                                    uint64_t v826 = v751[37];
                                                                    int v827 = (void *)(v749 + v826);
                                                                    size_t v828 = (void *)(v750 + v826);
                                                                    void *v827 = *v828;
                                                                    v827[1] = v828[1];
                                                                    uint64_t v829 = v751[38];
                                                                    __dstl = (void *)(v749 + v829);
                                                                    uint64_t v1206 = (const void *)(v750 + v829);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1206, 1, v9))
                                                                    {
                                                                      uint64_t v830 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                                      memcpy(__dstl, v1206, *(void *)(*(void *)(v830 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dstl, v1206, v9);
                                                                      __swift_storeEnumTagSinglePayload((uint64_t)__dstl, 0, 1, v9);
                                                                    }
                                                                    uint64_t v41 = v1249;
                                                                    uint64_t v831 = v751[39];
                                                                    v832 = (void *)(v749 + v831);
                                                                    uint64_t v833 = (void *)(v750 + v831);
                                                                    void *v832 = *v833;
                                                                    v832[1] = v833[1];
                                                                    uint64_t v834 = v751[40];
                                                                    uint64_t v835 = (void *)(v749 + v834);
                                                                    uint64_t v836 = (void *)(v750 + v834);
                                                                    void *v835 = *v836;
                                                                    v835[1] = v836[1];
                                                                    uint64_t v837 = v751[41];
                                                                    uint64_t v838 = v749 + v837;
                                                                    v839 = (uint64_t *)(v750 + v837);
                                                                    uint64_t v840 = *v839;
                                                                    *(unsigned char *)(v838 + 8) = *((unsigned char *)v839 + 8);
                                                                    *(void *)uint64_t v838 = v840;
                                                                    uint64_t v841 = v751[42];
                                                                    uint64_t v842 = (void *)(v749 + v841);
                                                                    uint64_t v843 = (void *)(v750 + v841);
                                                                    void *v842 = *v843;
                                                                    v842[1] = v843[1];
                                                                    uint64_t v844 = v751[43];
                                                                    uint64_t v845 = v749 + v844;
                                                                    size_t v846 = (long long *)(v750 + v844);
                                                                    long long v847 = *v846;
                                                                    *(void *)(v845 + 13) = *(void *)((char *)v846 + 13);
                                                                    *(_OWORD *)uint64_t v845 = v847;
                                                                    uint64_t v848 = v751[44];
                                                                    uint64_t v849 = (void *)(v749 + v848);
                                                                    uint64_t v850 = (void *)(v750 + v848);
                                                                    *uint64_t v849 = *v850;
                                                                    v849[1] = v850[1];
                                                                    uint64_t v851 = v751[45];
                                                                    uint64_t v852 = (void *)(v749 + v851);
                                                                    v853 = (void *)(v750 + v851);
                                                                    *uint64_t v852 = *v853;
                                                                    v852[1] = v853[1];
                                                                    uint64_t v854 = v751[46];
                                                                    int v855 = (void *)(v749 + v854);
                                                                    int v856 = (void *)(v750 + v854);
                                                                    *int v855 = *v856;
                                                                    v855[1] = v856[1];
                                                                    uint64_t v857 = v751[47];
                                                                    uint64_t v858 = (void *)(v749 + v857);
                                                                    uint64_t v859 = (void *)(v750 + v857);
                                                                    *uint64_t v858 = *v859;
                                                                    v858[1] = v859[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    __swift_storeEnumTagSinglePayload(v749, 0, 1, (uint64_t)v751);
                                                                    uint64_t v40 = v1252;
                                                                    uint64_t v42 = v1256;
LABEL_454:
                                                                    uint64_t v1034 = v42[12];
                                                                    uint64_t v1035 = (uint64_t)v40 + v1034;
                                                                    uint64_t v1036 = (uint64_t)v41 + v1034;
                                                                    uint64_t v1037 = (int *)type metadata accessor for HotelReservation(0);
                                                                    int v1038 = __swift_getEnumTagSinglePayload(v1035, 1, (uint64_t)v1037);
                                                                    int v1039 = __swift_getEnumTagSinglePayload(v1036, 1, (uint64_t)v1037);
                                                                    if (v1038)
                                                                    {
                                                                      if (!v1039)
                                                                      {
                                                                        *(void *)uint64_t v1035 = *(void *)v1036;
                                                                        *(void *)(v1035 + 8) = *(void *)(v1036 + 8);
                                                                        *(void *)(v1035 + 16) = *(void *)(v1036 + 16);
                                                                        *(void *)(v1035 + 24) = *(void *)(v1036 + 24);
                                                                        *(void *)(v1035 + 32) = *(void *)(v1036 + 32);
                                                                        *(void *)(v1035 + 40) = *(void *)(v1036 + 40);
                                                                        *(void *)(v1035 + 48) = *(void *)(v1036 + 48);
                                                                        *(void *)(v1035 + 56) = *(void *)(v1036 + 56);
                                                                        *(void *)(v1035 + 64) = *(void *)(v1036 + 64);
                                                                        *(void *)(v1035 + 72) = *(void *)(v1036 + 72);
                                                                        *(void *)(v1035 + 80) = *(void *)(v1036 + 80);
                                                                        *(void *)(v1035 + 88) = *(void *)(v1036 + 88);
                                                                        *(unsigned char *)(v1035 + 96) = *(unsigned char *)(v1036 + 96);
                                                                        *(void *)(v1035 + 104) = *(void *)(v1036 + 104);
                                                                        *(void *)(v1035 + 112) = *(void *)(v1036 + 112);
                                                                        *(void *)(v1035 + 120) = *(void *)(v1036 + 120);
                                                                        *(void *)(v1035 + 128) = *(void *)(v1036 + 128);
                                                                        uint64_t v1040 = v1037[14];
                                                                        v1246 = (void *)(v1035 + v1040);
                                                                        uint64_t v1211 = (const void *)(v1036 + v1040);
                                                                        uint64_t v1041 = type metadata accessor for DateComponents();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        if (__swift_getEnumTagSinglePayload((uint64_t)v1211, 1, v1041))
                                                                        {
                                                                          uint64_t v1042 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                          memcpy(v1246, v1211, *(void *)(*(void *)(v1042 - 8) + 64));
                                                                        }
                                                                        else
                                                                        {
                                                                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1041 - 8) + 16))(v1246, v1211, v1041);
                                                                          __swift_storeEnumTagSinglePayload((uint64_t)v1246, 0, 1, v1041);
                                                                        }
                                                                        uint64_t v1051 = v1037[15];
                                                                        uint64_t v1052 = (void *)(v1035 + v1051);
                                                                        uint64_t v1053 = (const void *)(v1036 + v1051);
                                                                        if (__swift_getEnumTagSinglePayload(v1036 + v1051, 1, v1041))
                                                                        {
                                                                          uint64_t v1054 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                          memcpy(v1052, v1053, *(void *)(*(void *)(v1054 - 8) + 64));
                                                                        }
                                                                        else
                                                                        {
                                                                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1041 - 8) + 16))(v1052, v1053, v1041);
                                                                          __swift_storeEnumTagSinglePayload((uint64_t)v1052, 0, 1, v1041);
                                                                        }
                                                                        uint64_t v1055 = v1037[16];
                                                                        v1056 = (void *)(v1035 + v1055);
                                                                        v1057 = (void *)(v1036 + v1055);
                                                                        void *v1056 = *v1057;
                                                                        v1056[1] = v1057[1];
                                                                        uint64_t v1058 = v1037[17];
                                                                        uint64_t v1059 = (void *)(v1035 + v1058);
                                                                        uint64_t v1060 = (void *)(v1036 + v1058);
                                                                        void *v1059 = *v1060;
                                                                        v1059[1] = v1060[1];
                                                                        uint64_t v1061 = v1037[18];
                                                                        uint64_t v1062 = (void *)(v1035 + v1061);
                                                                        v1063 = (void *)(v1036 + v1061);
                                                                        *uint64_t v1062 = *v1063;
                                                                        v1062[1] = v1063[1];
                                                                        uint64_t v1064 = v1037[19];
                                                                        int v1065 = (void *)(v1035 + v1064);
                                                                        long long v1066 = (void *)(v1036 + v1064);
                                                                        *int v1065 = *v1066;
                                                                        v1065[1] = v1066[1];
                                                                        uint64_t v1067 = v1037[20];
                                                                        long long v1068 = (void *)(v1035 + v1067);
                                                                        uint64_t v1069 = (void *)(v1036 + v1067);
                                                                        *long long v1068 = *v1069;
                                                                        v1068[1] = v1069[1];
                                                                        *(void *)(v1035 + v1037[21]) = *(void *)(v1036 + v1037[21]);
                                                                        *(void *)(v1035 + v1037[22]) = *(void *)(v1036 + v1037[22]);
                                                                        uint64_t v1070 = v1037[23];
                                                                        uint64_t v1071 = v1035 + v1070;
                                                                        uint64_t v1072 = (uint64_t *)(v1036 + v1070);
                                                                        uint64_t v1073 = *v1072;
                                                                        *(unsigned char *)(v1071 + 8) = *((unsigned char *)v1072 + 8);
                                                                        *(void *)uint64_t v1071 = v1073;
                                                                        uint64_t v1074 = v1037[24];
                                                                        uint64_t v1075 = v1035 + v1074;
                                                                        uint64_t v1076 = (uint64_t *)(v1036 + v1074);
                                                                        uint64_t v1077 = *v1076;
                                                                        *(unsigned char *)(v1075 + 8) = *((unsigned char *)v1076 + 8);
                                                                        *(void *)uint64_t v1075 = v1077;
                                                                        uint64_t v1078 = v1037[25];
                                                                        uint64_t v1079 = (void *)(v1035 + v1078);
                                                                        uint64_t v1080 = (void *)(v1036 + v1078);
                                                                        void *v1079 = *v1080;
                                                                        v1079[1] = v1080[1];
                                                                        uint64_t v1081 = v1037[26];
                                                                        uint64_t v1082 = (void *)(v1035 + v1081);
                                                                        uint64_t v1083 = (void *)(v1036 + v1081);
                                                                        void *v1082 = *v1083;
                                                                        v1082[1] = v1083[1];
                                                                        uint64_t v1084 = v1037[27];
                                                                        uint64_t v1085 = (void *)(v1035 + v1084);
                                                                        int v1086 = (void *)(v1036 + v1084);
                                                                        void *v1085 = *v1086;
                                                                        v1085[1] = v1086[1];
                                                                        uint64_t v1087 = v1037[28];
                                                                        v1088 = (void *)(v1035 + v1087);
                                                                        uint64_t v1089 = (void *)(v1036 + v1087);
                                                                        void *v1088 = *v1089;
                                                                        v1088[1] = v1089[1];
                                                                        uint64_t v1090 = v1037[29];
                                                                        uint64_t v1091 = v1035 + v1090;
                                                                        uint64_t v1092 = (uint64_t *)(v1036 + v1090);
                                                                        uint64_t v1093 = *v1092;
                                                                        *(unsigned char *)(v1091 + 8) = *((unsigned char *)v1092 + 8);
                                                                        *(void *)uint64_t v1091 = v1093;
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRetain();
                                                                        __swift_storeEnumTagSinglePayload(v1035, 0, 1, (uint64_t)v1037);
                                                                        uint64_t v42 = v1256;
                                                                        uint64_t v5 = v1259;
                                                                        uint64_t v40 = v1252;
                                                                        uint64_t v4 = v1254;
                                                                        uint64_t v41 = v1249;
LABEL_470:
                                                                        uint64_t v1094 = v42[13];
                                                                        uint64_t v1095 = (uint64_t)v40 + v1094;
                                                                        uint64_t v1096 = (uint64_t)v41 + v1094;
                                                                        uint64_t v1097 = (int *)type metadata accessor for RestaurantReservation(0);
                                                                        int v1098 = __swift_getEnumTagSinglePayload(v1095, 1, (uint64_t)v1097);
                                                                        int v1099 = __swift_getEnumTagSinglePayload(v1096, 1, (uint64_t)v1097);
                                                                        if (v1098)
                                                                        {
                                                                          if (!v1099)
                                                                          {
                                                                            *(void *)uint64_t v1095 = *(void *)v1096;
                                                                            *(void *)(v1095 + 8) = *(void *)(v1096 + 8);
                                                                            *(void *)(v1095 + 16) = *(void *)(v1096 + 16);
                                                                            *(void *)(v1095 + 24) = *(void *)(v1096 + 24);
                                                                            *(void *)(v1095 + 32) = *(void *)(v1096 + 32);
                                                                            *(void *)(v1095 + 40) = *(void *)(v1096 + 40);
                                                                            *(void *)(v1095 + 48) = *(void *)(v1096 + 48);
                                                                            *(void *)(v1095 + 56) = *(void *)(v1096 + 56);
                                                                            *(void *)(v1095 + 64) = *(void *)(v1096 + 64);
                                                                            *(void *)(v1095 + 72) = *(void *)(v1096 + 72);
                                                                            *(void *)(v1095 + 80) = *(void *)(v1096 + 80);
                                                                            *(void *)(v1095 + 88) = *(void *)(v1096 + 88);
                                                                            *(unsigned char *)(v1095 + 96) = *(unsigned char *)(v1096 + 96);
                                                                            *(void *)(v1095 + 104) = *(void *)(v1096 + 104);
                                                                            *(void *)(v1095 + 112) = *(void *)(v1096 + 112);
                                                                            *(void *)(v1095 + 120) = *(void *)(v1096 + 120);
                                                                            *(void *)(v1095 + 128) = *(void *)(v1096 + 128);
                                                                            uint64_t v1100 = v1097[14];
                                                                            v1258 = (void *)(v1095 + v1100);
                                                                            v1247 = (void *)(v1096 + v1100);
                                                                            __dstm = (void *)type metadata accessor for DateComponents();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            if (__swift_getEnumTagSinglePayload((uint64_t)v1247, 1, (uint64_t)__dstm))
                                                                            {
                                                                              uint64_t v1101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                              memcpy(v1258, v1247, *(void *)(*(void *)(v1101 - 8) + 64));
                                                                            }
                                                                            else
                                                                            {
                                                                              (*(void (**)(void *, void *, void *))(*(__dstm - 1) + 16))(v1258, v1247, __dstm);
                                                                              __swift_storeEnumTagSinglePayload((uint64_t)v1258, 0, 1, (uint64_t)__dstm);
                                                                            }
                                                                            uint64_t v1108 = v1097[15];
                                                                            uint64_t v1109 = (void *)(v1095 + v1108);
                                                                            uint64_t v1110 = (void *)(v1096 + v1108);
                                                                            *uint64_t v1109 = *v1110;
                                                                            v1109[1] = v1110[1];
                                                                            uint64_t v1111 = v1097[16];
                                                                            v1112 = (void *)(v1095 + v1111);
                                                                            uint64_t v1113 = (void *)(v1096 + v1111);
                                                                            void *v1112 = *v1113;
                                                                            v1112[1] = v1113[1];
                                                                            uint64_t v1114 = v1097[17];
                                                                            uint64_t v1115 = (void *)(v1095 + v1114);
                                                                            v1116 = (void *)(v1096 + v1114);
                                                                            void *v1115 = *v1116;
                                                                            v1115[1] = v1116[1];
                                                                            uint64_t v1117 = v1097[18];
                                                                            uint64_t v1118 = (void *)(v1095 + v1117);
                                                                            uint64_t v1119 = (void *)(v1096 + v1117);
                                                                            void *v1118 = *v1119;
                                                                            v1118[1] = v1119[1];
                                                                            uint64_t v1120 = v1097[19];
                                                                            v1121 = (void *)(v1095 + v1120);
                                                                            v1122 = (void *)(v1096 + v1120);
                                                                            void *v1121 = *v1122;
                                                                            v1121[1] = v1122[1];
                                                                            *(void *)(v1095 + v1097[20]) = *(void *)(v1096 + v1097[20]);
                                                                            uint64_t v1123 = v1097[21];
                                                                            uint64_t v1124 = (void *)(v1095 + v1123);
                                                                            uint64_t v1125 = (void *)(v1096 + v1123);
                                                                            void *v1124 = *v1125;
                                                                            v1124[1] = v1125[1];
                                                                            uint64_t v1126 = v1097[22];
                                                                            v1127 = (void *)(v1095 + v1126);
                                                                            uint64_t v1128 = (void *)(v1096 + v1126);
                                                                            void *v1127 = *v1128;
                                                                            v1127[1] = v1128[1];
                                                                            uint64_t v1129 = v1097[23];
                                                                            uint64_t v1130 = (void *)(v1095 + v1129);
                                                                            v1131 = (void *)(v1096 + v1129);
                                                                            void *v1130 = *v1131;
                                                                            v1130[1] = v1131[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRetain();
                                                                            __swift_storeEnumTagSinglePayload(v1095, 0, 1, (uint64_t)v1097);
                                                                            uint64_t v5 = v1259;
                                                                            uint64_t v4 = v1254;
                                                                            goto LABEL_30;
                                                                          }
                                                                          goto LABEL_476;
                                                                        }
                                                                        if (v1099)
                                                                        {
                                                                          outlined destroy of EmailDocument(v1095, (void (*)(void))type metadata accessor for RestaurantReservation);
LABEL_476:
                                                                          size_t v50 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?) - 8)
                                                                                          + 64);
                                                                          uint64_t v51 = (void *)v1095;
                                                                          uint64_t v52 = (const void *)v1096;
                                                                          goto LABEL_29;
                                                                        }
                                                                        *(void *)uint64_t v1095 = *(void *)v1096;
                                                                        *(void *)(v1095 + 8) = *(void *)(v1096 + 8);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 16) = *(void *)(v1096 + 16);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 24) = *(void *)(v1096 + 24);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 32) = *(void *)(v1096 + 32);
                                                                        *(void *)(v1095 + 40) = *(void *)(v1096 + 40);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 48) = *(void *)(v1096 + 48);
                                                                        *(void *)(v1095 + 56) = *(void *)(v1096 + 56);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 64) = *(void *)(v1096 + 64);
                                                                        *(void *)(v1095 + 72) = *(void *)(v1096 + 72);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 80) = *(void *)(v1096 + 80);
                                                                        *(void *)(v1095 + 88) = *(void *)(v1096 + 88);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(unsigned char *)(v1095 + 96) = *(unsigned char *)(v1096 + 96);
                                                                        *(void *)(v1095 + 104) = *(void *)(v1096 + 104);
                                                                        *(void *)(v1095 + 112) = *(void *)(v1096 + 112);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        *(void *)(v1095 + 120) = *(void *)(v1096 + 120);
                                                                        *(void *)(v1095 + 128) = *(void *)(v1096 + 128);
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1102 = v1097[14];
                                                                        uint64_t v1103 = (void *)(v1095 + v1102);
                                                                        uint64_t v1104 = (const void *)(v1096 + v1102);
                                                                        uint64_t v1105 = type metadata accessor for DateComponents();
                                                                        int v1106 = __swift_getEnumTagSinglePayload((uint64_t)v1103, 1, v1105);
                                                                        int v1107 = __swift_getEnumTagSinglePayload((uint64_t)v1104, 1, v1105);
                                                                        if (v1106)
                                                                        {
                                                                          uint64_t v53 = v1260;
                                                                          if (!v1107)
                                                                          {
                                                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1105 - 8) + 16))(v1103, v1104, v1105);
                                                                            __swift_storeEnumTagSinglePayload((uint64_t)v1103, 0, 1, v1105);
LABEL_491:
                                                                            uint64_t v1141 = v1097[15];
                                                                            v1142 = (void *)(v1095 + v1141);
                                                                            uint64_t v1143 = (void *)(v1096 + v1141);
                                                                            void *v1142 = *v1143;
                                                                            v1142[1] = v1143[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1144 = v1097[16];
                                                                            uint64_t v1145 = (void *)(v1095 + v1144);
                                                                            uint64_t v1146 = (void *)(v1096 + v1144);
                                                                            void *v1145 = *v1146;
                                                                            v1145[1] = v1146[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1147 = v1097[17];
                                                                            v1148 = (void *)(v1095 + v1147);
                                                                            uint64_t v1149 = (void *)(v1096 + v1147);
                                                                            void *v1148 = *v1149;
                                                                            v1148[1] = v1149[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1150 = v1097[18];
                                                                            uint64_t v1151 = (void *)(v1095 + v1150);
                                                                            uint64_t v1152 = (void *)(v1096 + v1150);
                                                                            void *v1151 = *v1152;
                                                                            v1151[1] = v1152[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1153 = v1097[19];
                                                                            uint64_t v1154 = (void *)(v1095 + v1153);
                                                                            uint64_t v1155 = (void *)(v1096 + v1153);
                                                                            void *v1154 = *v1155;
                                                                            v1154[1] = v1155[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            *(void *)(v1095 + v1097[20]) = *(void *)(v1096 + v1097[20]);
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1156 = v1097[21];
                                                                            uint64_t v1157 = (void *)(v1095 + v1156);
                                                                            uint64_t v1158 = (void *)(v1096 + v1156);
                                                                            *uint64_t v1157 = *v1158;
                                                                            v1157[1] = v1158[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1159 = v1097[22];
                                                                            uint64_t v1160 = (void *)(v1095 + v1159);
                                                                            uint64_t v1161 = (void *)(v1096 + v1159);
                                                                            void *v1160 = *v1161;
                                                                            v1160[1] = v1161[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1162 = v1097[23];
                                                                            uint64_t v1163 = (void *)(v1095 + v1162);
                                                                            uint64_t v1164 = (void *)(v1096 + v1162);
                                                                            void *v1163 = *v1164;
                                                                            v1163[1] = v1164[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            goto LABEL_127;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          uint64_t v1139 = *(void *)(v1105 - 8);
                                                                          uint64_t v53 = v1260;
                                                                          if (!v1107)
                                                                          {
                                                                            (*(void (**)(void *, const void *, uint64_t))(v1139 + 24))(v1103, v1104, v1105);
                                                                            goto LABEL_491;
                                                                          }
                                                                          (*(void (**)(void *, uint64_t))(v1139 + 8))(v1103, v1105);
                                                                        }
                                                                        uint64_t v1140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                        memcpy(v1103, v1104, *(void *)(*(void *)(v1140 - 8) + 64));
                                                                        goto LABEL_491;
                                                                      }
                                                                      goto LABEL_460;
                                                                    }
                                                                    if (v1039)
                                                                    {
                                                                      outlined destroy of EmailDocument(v1035, (void (*)(void))type metadata accessor for HotelReservation);
LABEL_460:
                                                                      uint64_t v1043 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
                                                                      memcpy((void *)v1035, (const void *)v1036, *(void *)(*(void *)(v1043 - 8) + 64));
LABEL_461:
                                                                      uint64_t v5 = v1259;
                                                                      uint64_t v4 = v1254;
                                                                      goto LABEL_470;
                                                                    }
                                                                    uint64_t v1044 = v40;
                                                                    *(void *)uint64_t v1035 = *(void *)v1036;
                                                                    *(void *)(v1035 + 8) = *(void *)(v1036 + 8);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 16) = *(void *)(v1036 + 16);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 24) = *(void *)(v1036 + 24);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 32) = *(void *)(v1036 + 32);
                                                                    *(void *)(v1035 + 40) = *(void *)(v1036 + 40);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 48) = *(void *)(v1036 + 48);
                                                                    *(void *)(v1035 + 56) = *(void *)(v1036 + 56);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 64) = *(void *)(v1036 + 64);
                                                                    *(void *)(v1035 + 72) = *(void *)(v1036 + 72);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 80) = *(void *)(v1036 + 80);
                                                                    *(void *)(v1035 + 88) = *(void *)(v1036 + 88);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(unsigned char *)(v1035 + 96) = *(unsigned char *)(v1036 + 96);
                                                                    *(void *)(v1035 + 104) = *(void *)(v1036 + 104);
                                                                    *(void *)(v1035 + 112) = *(void *)(v1036 + 112);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1035 + 120) = *(void *)(v1036 + 120);
                                                                    *(void *)(v1035 + 128) = *(void *)(v1036 + 128);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1045 = v1037[14];
                                                                    uint64_t v1046 = (void *)(v1035 + v1045);
                                                                    v1047 = (const void *)(v1036 + v1045);
                                                                    uint64_t v1048 = type metadata accessor for DateComponents();
                                                                    int v1049 = __swift_getEnumTagSinglePayload((uint64_t)v1046, 1, v1048);
                                                                    int v1050 = __swift_getEnumTagSinglePayload((uint64_t)v1047, 1, v1048);
                                                                    if (v1049)
                                                                    {
                                                                      if (!v1050)
                                                                      {
                                                                        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1048 - 8) + 16))(v1046, v1047, v1048);
                                                                        __swift_storeEnumTagSinglePayload((uint64_t)v1046, 0, 1, v1048);
                                                                        goto LABEL_485;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      uint64_t v1132 = *(void *)(v1048 - 8);
                                                                      if (!v1050)
                                                                      {
                                                                        (*(void (**)(void *, const void *, uint64_t))(v1132 + 24))(v1046, v1047, v1048);
LABEL_485:
                                                                        uint64_t v1134 = v1037[15];
                                                                        uint64_t v1135 = (void *)(v1035 + v1134);
                                                                        uint64_t v1136 = (const void *)(v1036 + v1134);
                                                                        int v1137 = __swift_getEnumTagSinglePayload(v1035 + v1134, 1, v1048);
                                                                        int v1138 = __swift_getEnumTagSinglePayload((uint64_t)v1136, 1, v1048);
                                                                        if (v1137)
                                                                        {
                                                                          if (!v1138)
                                                                          {
                                                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1048 - 8) + 16))(v1135, v1136, v1048);
                                                                            __swift_storeEnumTagSinglePayload((uint64_t)v1135, 0, 1, v1048);
LABEL_495:
                                                                            uint64_t v40 = v1044;
                                                                            uint64_t v1167 = v1037[16];
                                                                            int v1168 = (void *)(v1035 + v1167);
                                                                            int v1169 = (void *)(v1036 + v1167);
                                                                            *int v1168 = *v1169;
                                                                            v1168[1] = v1169[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1170 = v1037[17];
                                                                            long long v1171 = (void *)(v1035 + v1170);
                                                                            long long v1172 = (void *)(v1036 + v1170);
                                                                            *long long v1171 = *v1172;
                                                                            v1171[1] = v1172[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1173 = v1037[18];
                                                                            uint64_t v1174 = (void *)(v1035 + v1173);
                                                                            v1175 = (void *)(v1036 + v1173);
                                                                            *uint64_t v1174 = *v1175;
                                                                            v1174[1] = v1175[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1176 = v1037[19];
                                                                            uint64_t v1177 = (void *)(v1035 + v1176);
                                                                            uint64_t v1178 = (void *)(v1036 + v1176);
                                                                            void *v1177 = *v1178;
                                                                            v1177[1] = v1178[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1179 = v1037[20];
                                                                            uint64_t v1180 = (void *)(v1035 + v1179);
                                                                            uint64_t v1181 = (void *)(v1036 + v1179);
                                                                            *uint64_t v1180 = *v1181;
                                                                            v1180[1] = v1181[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            *(void *)(v1035 + v1037[21]) = *(void *)(v1036 + v1037[21]);
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            *(void *)(v1035 + v1037[22]) = *(void *)(v1036 + v1037[22]);
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1182 = v1037[23];
                                                                            uint64_t v1183 = v1035 + v1182;
                                                                            uint64_t v1184 = (uint64_t *)(v1036 + v1182);
                                                                            uint64_t v1185 = *v1184;
                                                                            *(unsigned char *)(v1183 + 8) = *((unsigned char *)v1184 + 8);
                                                                            *(void *)uint64_t v1183 = v1185;
                                                                            uint64_t v1186 = v1037[24];
                                                                            uint64_t v1187 = v1035 + v1186;
                                                                            uint64_t v1188 = v1036 + v1186;
                                                                            LOBYTE(v1185) = *(unsigned char *)(v1188 + 8);
                                                                            *(void *)uint64_t v1187 = *(void *)v1188;
                                                                            *(unsigned char *)(v1187 + 8) = v1185;
                                                                            uint64_t v1189 = v1037[25];
                                                                            size_t v1190 = (void *)(v1035 + v1189);
                                                                            v1191 = (void *)(v1036 + v1189);
                                                                            *size_t v1190 = *v1191;
                                                                            v1190[1] = v1191[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1192 = v1037[26];
                                                                            uint64_t v1193 = (void *)(v1035 + v1192);
                                                                            v1194 = (void *)(v1036 + v1192);
                                                                            *uint64_t v1193 = *v1194;
                                                                            v1193[1] = v1194[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1195 = v1037[27];
                                                                            uint64_t v1196 = (void *)(v1035 + v1195);
                                                                            uint64_t v1197 = (void *)(v1036 + v1195);
                                                                            *uint64_t v1196 = *v1197;
                                                                            v1196[1] = v1197[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1198 = v1037[28];
                                                                            v1199 = (void *)(v1035 + v1198);
                                                                            v1200 = (void *)(v1036 + v1198);
                                                                            void *v1199 = *v1200;
                                                                            v1199[1] = v1200[1];
                                                                            swift_bridgeObjectRetain();
                                                                            swift_bridgeObjectRelease();
                                                                            uint64_t v1201 = v1037[29];
                                                                            uint64_t v1202 = v1035 + v1201;
                                                                            uint64_t v1203 = (uint64_t *)(v1036 + v1201);
                                                                            uint64_t v1204 = *v1203;
                                                                            *(unsigned char *)(v1202 + 8) = *((unsigned char *)v1203 + 8);
                                                                            *(void *)uint64_t v1202 = v1204;
                                                                            goto LABEL_461;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          uint64_t v1165 = *(void *)(v1048 - 8);
                                                                          if (!v1138)
                                                                          {
                                                                            (*(void (**)(void *, const void *, uint64_t))(v1165 + 24))(v1135, v1136, v1048);
                                                                            goto LABEL_495;
                                                                          }
                                                                          (*(void (**)(void *, uint64_t))(v1165 + 8))(v1135, v1048);
                                                                        }
                                                                        uint64_t v1166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                        memcpy(v1135, v1136, *(void *)(*(void *)(v1166 - 8) + 64));
                                                                        goto LABEL_495;
                                                                      }
                                                                      (*(void (**)(void *, uint64_t))(v1132 + 8))(v1046, v1048);
                                                                    }
                                                                    uint64_t v1133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                    memcpy(v1046, v1047, *(void *)(*(void *)(v1133 - 8) + 64));
                                                                    goto LABEL_485;
                                                                  }
LABEL_355:
                                                                  uint64_t v756 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
                                                                  memcpy((void *)v749, (const void *)v750, *(void *)(*(void *)(v756 - 8) + 64));
                                                                  goto LABEL_454;
                                                                }
                                                                if (v753)
                                                                {
                                                                  outlined destroy of EmailDocument(v749, (void (*)(void))type metadata accessor for FlightReservation);
                                                                  goto LABEL_355;
                                                                }
                                                                *(void *)uint64_t v749 = *(void *)v750;
                                                                *(void *)(v749 + 8) = *(void *)(v750 + 8);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v749 + 16) = *(void *)(v750 + 16);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v749 + 24) = *(void *)(v750 + 24);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v749 + 32) = *(void *)(v750 + 32);
                                                                *(void *)(v749 + 40) = *(void *)(v750 + 40);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v749 + 48) = *(void *)(v750 + 48);
                                                                *(void *)(v749 + 56) = *(void *)(v750 + 56);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v749 + 64) = *(void *)(v750 + 64);
                                                                *(void *)(v749 + 72) = *(void *)(v750 + 72);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v749 + 80) = *(void *)(v750 + 80);
                                                                *(void *)(v749 + 88) = *(void *)(v750 + 88);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(unsigned char *)(v749 + 96) = *(unsigned char *)(v750 + 96);
                                                                *(void *)(v749 + 104) = *(void *)(v750 + 104);
                                                                *(void *)(v749 + 112) = *(void *)(v750 + 112);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v757 = v751[13];
                                                                uint64_t v758 = (void *)(v749 + v757);
                                                                uint64_t v759 = (const void *)(v750 + v757);
                                                                uint64_t v760 = v1255;
                                                                int v761 = __swift_getEnumTagSinglePayload(v749 + v757, 1, v1255);
                                                                int v762 = __swift_getEnumTagSinglePayload((uint64_t)v759, 1, v1255);
                                                                if (v761)
                                                                {
                                                                  if (v762)
                                                                  {
                                                                    uint64_t v763 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                                    memcpy(v758, v759, *(void *)(*(void *)(v763 - 8) + 64));
                                                                    uint64_t v760 = v1255;
                                                                  }
                                                                  else
                                                                  {
                                                                    uint64_t v760 = v1255;
                                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v758, v759, v1255);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v758, 0, 1, v1255);
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v898 = *(void *)(v1255 - 8);
                                                                  if (v762)
                                                                  {
                                                                    (*(void (**)(void *, uint64_t))(v898 + 8))(v758, v1255);
                                                                    uint64_t v899 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                                    memcpy(v758, v759, *(void *)(*(void *)(v899 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(v898 + 24))(v758, v759, v1255);
                                                                  }
                                                                }
                                                                uint64_t v930 = v751[14];
                                                                uint64_t v931 = (void *)(v749 + v930);
                                                                v932 = (const void *)(v750 + v930);
                                                                int v933 = __swift_getEnumTagSinglePayload(v749 + v930, 1, v760);
                                                                int v934 = __swift_getEnumTagSinglePayload((uint64_t)v932, 1, v760);
                                                                if (v933)
                                                                {
                                                                  if (!v934)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 16))(v931, v932, v1255);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v931, 0, 1, v1255);
                                                                    goto LABEL_447;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v935 = *(void *)(v760 - 8);
                                                                  if (!v934)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(v935 + 24))(v931, v932, v760);
LABEL_447:
                                                                    uint64_t v937 = v751[15];
                                                                    uint64_t v938 = (void *)(v749 + v937);
                                                                    uint64_t v939 = (void *)(v750 + v937);
                                                                    void *v938 = *v939;
                                                                    v938[1] = v939[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v940 = v751[16];
                                                                    uint64_t v941 = (void *)(v749 + v940);
                                                                    uint64_t v942 = (void *)(v750 + v940);
                                                                    void *v941 = *v942;
                                                                    v941[1] = v942[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v943 = v751[17];
                                                                    v944 = (void *)(v749 + v943);
                                                                    uint64_t v945 = (void *)(v750 + v943);
                                                                    void *v944 = *v945;
                                                                    v944[1] = v945[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v946 = v751[18];
                                                                    uint64_t v947 = v749 + v946;
                                                                    uint64_t v948 = v750 + v946;
                                                                    uint64_t v949 = type metadata accessor for DateComponents();
                                                                    v950 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v949 - 8) + 24);
                                                                    v950(v947, v948, v949);
                                                                    v950(v749 + v751[19], v750 + v751[19], v949);
                                                                    uint64_t v951 = v751[20];
                                                                    uint64_t v952 = (void *)(v749 + v951);
                                                                    uint64_t v953 = (void *)(v750 + v951);
                                                                    void *v952 = *v953;
                                                                    v952[1] = v953[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v954 = v751[21];
                                                                    v955 = (void *)(v749 + v954);
                                                                    uint64_t v956 = (void *)(v750 + v954);
                                                                    void *v955 = *v956;
                                                                    v955[1] = v956[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v957 = v751[22];
                                                                    uint64_t v958 = (void *)(v749 + v957);
                                                                    v959 = (void *)(v750 + v957);
                                                                    void *v958 = *v959;
                                                                    v958[1] = v959[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v960 = v751[23];
                                                                    uint64_t v961 = (void *)(v749 + v960);
                                                                    uint64_t v962 = (void *)(v750 + v960);
                                                                    void *v961 = *v962;
                                                                    v961[1] = v962[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v963 = v751[24];
                                                                    v964 = (void *)(v749 + v963);
                                                                    v965 = (void *)(v750 + v963);
                                                                    void *v964 = *v965;
                                                                    v964[1] = v965[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v966 = v751[25];
                                                                    uint64_t v967 = (void *)(v749 + v966);
                                                                    uint64_t v968 = (void *)(v750 + v966);
                                                                    void *v967 = *v968;
                                                                    v967[1] = v968[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v969 = v751[26];
                                                                    v970 = (void *)(v749 + v969);
                                                                    uint64_t v971 = (void *)(v750 + v969);
                                                                    void *v970 = *v971;
                                                                    v970[1] = v971[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v972 = v751[27];
                                                                    uint64_t v973 = (void *)(v749 + v972);
                                                                    v974 = (void *)(v750 + v972);
                                                                    void *v973 = *v974;
                                                                    v973[1] = v974[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v975 = v751[28];
                                                                    uint64_t v976 = (void *)(v749 + v975);
                                                                    uint64_t v977 = (void *)(v750 + v975);
                                                                    *uint64_t v976 = *v977;
                                                                    v976[1] = v977[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v978 = v751[29];
                                                                    v979 = (void *)(v749 + v978);
                                                                    v980 = (void *)(v750 + v978);
                                                                    void *v979 = *v980;
                                                                    v979[1] = v980[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v981 = v751[30];
                                                                    uint64_t v982 = (void *)(v749 + v981);
                                                                    uint64_t v983 = (void *)(v750 + v981);
                                                                    void *v982 = *v983;
                                                                    v982[1] = v983[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v984 = v751[31];
                                                                    uint64_t v985 = (void *)(v749 + v984);
                                                                    uint64_t v986 = (void *)(v750 + v984);
                                                                    *uint64_t v985 = *v986;
                                                                    v985[1] = v986[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v987 = v751[32];
                                                                    uint64_t v988 = (void *)(v749 + v987);
                                                                    v989 = (void *)(v750 + v987);
                                                                    *uint64_t v988 = *v989;
                                                                    v988[1] = v989[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v749 + v751[33]) = *(void *)(v750 + v751[33]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v749 + v751[34]) = *(void *)(v750 + v751[34]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v990 = v751[35];
                                                                    uint64_t v991 = (void *)(v749 + v990);
                                                                    uint64_t v992 = (void *)(v750 + v990);
                                                                    *uint64_t v991 = *v992;
                                                                    v991[1] = v992[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v993 = v751[36];
                                                                    long long v994 = (void *)(v749 + v993);
                                                                    uint64_t v995 = (void *)(v750 + v993);
                                                                    *long long v994 = *v995;
                                                                    v994[1] = v995[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v996 = v751[37];
                                                                    uint64_t v997 = (void *)(v749 + v996);
                                                                    uint64_t v998 = (void *)(v750 + v996);
                                                                    void *v997 = *v998;
                                                                    v997[1] = v998[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v999 = v751[38];
                                                                    v1000 = (void *)(v749 + v999);
                                                                    uint64_t v1001 = (const void *)(v750 + v999);
                                                                    LODWORD(v949) = __swift_getEnumTagSinglePayload(v749 + v999, 1, v1261);
                                                                    int v1002 = __swift_getEnumTagSinglePayload((uint64_t)v1001, 1, v1261);
                                                                    if (v949)
                                                                    {
                                                                      if (!v1002)
                                                                      {
                                                                        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1261 - 8) + 16))(v1000, v1001, v1261);
                                                                        __swift_storeEnumTagSinglePayload((uint64_t)v1000, 0, 1, v1261);
LABEL_453:
                                                                        uint64_t v1005 = v751[39];
                                                                        uint64_t v1006 = (void *)(v749 + v1005);
                                                                        uint64_t v1007 = (void *)(v750 + v1005);
                                                                        void *v1006 = *v1007;
                                                                        v1006[1] = v1007[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1008 = v751[40];
                                                                        uint64_t v1009 = (void *)(v749 + v1008);
                                                                        v1010 = (void *)(v750 + v1008);
                                                                        *uint64_t v1009 = *v1010;
                                                                        v1009[1] = v1010[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1011 = v751[41];
                                                                        uint64_t v1012 = v749 + v1011;
                                                                        uint64_t v1013 = (uint64_t *)(v750 + v1011);
                                                                        uint64_t v1014 = *v1013;
                                                                        *(unsigned char *)(v1012 + 8) = *((unsigned char *)v1013 + 8);
                                                                        *(void *)uint64_t v1012 = v1014;
                                                                        uint64_t v1015 = v751[42];
                                                                        int v1016 = (void *)(v749 + v1015);
                                                                        int v1017 = (void *)(v750 + v1015);
                                                                        *int v1016 = *v1017;
                                                                        v1016[1] = v1017[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1018 = v751[43];
                                                                        uint64_t v1019 = v749 + v1018;
                                                                        int v1020 = (long long *)(v750 + v1018);
                                                                        long long v1021 = *v1020;
                                                                        *(void *)(v1019 + 13) = *(void *)((char *)v1020 + 13);
                                                                        *(_OWORD *)uint64_t v1019 = v1021;
                                                                        uint64_t v1022 = v751[44];
                                                                        uint64_t v1023 = (void *)(v749 + v1022);
                                                                        uint64_t v1024 = (void *)(v750 + v1022);
                                                                        void *v1023 = *v1024;
                                                                        v1023[1] = v1024[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1025 = v751[45];
                                                                        uint64_t v1026 = (void *)(v749 + v1025);
                                                                        uint64_t v1027 = (void *)(v750 + v1025);
                                                                        *uint64_t v1026 = *v1027;
                                                                        v1026[1] = v1027[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1028 = v751[46];
                                                                        uint64_t v1029 = (void *)(v749 + v1028);
                                                                        uint64_t v1030 = (void *)(v750 + v1028);
                                                                        *uint64_t v1029 = *v1030;
                                                                        v1029[1] = v1030[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        uint64_t v1031 = v751[47];
                                                                        uint64_t v1032 = (void *)(v749 + v1031);
                                                                        v1033 = (void *)(v750 + v1031);
                                                                        *uint64_t v1032 = *v1033;
                                                                        v1032[1] = v1033[1];
                                                                        swift_bridgeObjectRetain();
                                                                        swift_bridgeObjectRelease();
                                                                        goto LABEL_454;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      uint64_t v1003 = *(void *)(v1261 - 8);
                                                                      if (!v1002)
                                                                      {
                                                                        (*(void (**)(void *, const void *, uint64_t))(v1003 + 24))(v1000, v1001, v1261);
                                                                        goto LABEL_453;
                                                                      }
                                                                      (*(void (**)(void *, uint64_t))(v1003 + 8))(v1000, v1261);
                                                                    }
                                                                    uint64_t v1004 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                                    memcpy(v1000, v1001, *(void *)(*(void *)(v1004 - 8) + 64));
                                                                    goto LABEL_453;
                                                                  }
                                                                  (*(void (**)(void *, uint64_t))(v935 + 8))(v931, v760);
                                                                }
                                                                uint64_t v936 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                                memcpy(v931, v932, *(void *)(*(void *)(v936 - 8) + 64));
                                                                goto LABEL_447;
                                                              }
                                                              (*(void (**)(void *, uint64_t))(v929 + 8))(v923, v1255);
                                                            }
                                                            size_t v726 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                                                                         - 8)
                                                                             + 64);
                                                            uint64_t v727 = v923;
                                                            uint64_t v728 = (const void *)v924;
LABEL_336:
                                                            memcpy(v727, v728, v726);
                                                            goto LABEL_349;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t v916 = *(void *)(v9 - 8);
                                                          if (!v897)
                                                          {
                                                            (*(void (**)(void *, const void *, uint64_t))(v916 + 24))(v894, v895, v9);
                                                            goto LABEL_420;
                                                          }
                                                          (*(void (**)(void *, uint64_t))(v916 + 8))(v894, v9);
                                                        }
                                                        uint64_t v917 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                        memcpy(v894, v895, *(void *)(*(void *)(v917 - 8) + 64));
                                                        goto LABEL_420;
                                                      }
                                                      (*(void (**)(void *, uint64_t))(v891 + 8))(v730, v9);
                                                    }
                                                    uint64_t v892 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                    memcpy(v730, v731, *(void *)(*(void *)(v892 - 8) + 64));
                                                    goto LABEL_394;
                                                  }
                                                  (*(void (**)(void *, uint64_t))(v928 + 8))(v912, v1255);
                                                }
                                                size_t v700 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                                                             - 8)
                                                                 + 64);
                                                uint64_t v701 = v912;
                                                uint64_t v702 = (const void *)v913;
LABEL_316:
                                                memcpy(v701, v702, v700);
                                                goto LABEL_329;
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v909 = *(void *)(v9 - 8);
                                              if (!v890)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(v909 + 24))(v887, v888, v9);
                                                goto LABEL_414;
                                              }
                                              (*(void (**)(void *, uint64_t))(v909 + 8))(v887, v9);
                                            }
                                            uint64_t v910 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                            memcpy(v887, v888, *(void *)(*(void *)(v910 - 8) + 64));
                                            goto LABEL_414;
                                          }
                                          (*(void (**)(void *, uint64_t))(v884 + 8))(v704, v9);
                                        }
                                        uint64_t v885 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                        memcpy(v704, v705, *(void *)(*(void *)(v885 - 8) + 64));
                                        goto LABEL_388;
                                      }
                                      (*(void (**)(void *, uint64_t))(v908 + 8))(v880, v9);
                                    }
                                    size_t v676 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                                                 - 8)
                                                     + 64);
                                    uint64_t v677 = v880;
                                    uint64_t v678 = (const void *)v881;
LABEL_299:
                                    memcpy(v677, v678, v676);
                                    goto LABEL_309;
                                  }
                                }
                                else
                                {
                                  uint64_t v877 = *(void *)(v9 - 8);
                                  if (!v684)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v877 + 24))(v681, v682, v9);
                                    goto LABEL_382;
                                  }
                                  (*(void (**)(void *, uint64_t))(v877 + 8))(v681, v9);
                                }
                                uint64_t v878 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                memcpy(v681, v682, *(void *)(*(void *)(v878 - 8) + 64));
                                goto LABEL_382;
                              }
                              (*(void (**)(void *, uint64_t))(v927 + 8))(v904, v9);
                            }
                            size_t v644 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                                         - 8)
                                             + 64);
                            uint64_t v645 = v904;
                            uint64_t v646 = (const void *)v905;
LABEL_279:
                            memcpy(v645, v646, v644);
                            goto LABEL_292;
                          }
                        }
                        else
                        {
                          uint64_t v901 = *(void *)(v9 - 8);
                          if (!v876)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v901 + 24))(v873, v874, v9);
                            goto LABEL_405;
                          }
                          (*(void (**)(void *, uint64_t))(v901 + 8))(v873, v9);
                        }
                        uint64_t v902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                        memcpy(v873, v874, *(void *)(*(void *)(v902 - 8) + 64));
                        goto LABEL_405;
                      }
                      (*(void (**)(void *, uint64_t))(v867 + 8))(v649, v1255);
                    }
                    uint64_t v868 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                    memcpy(v649, v650, *(void *)(*(void *)(v868 - 8) + 64));
                    goto LABEL_376;
                  }
                  (*(void (**)(void *, uint64_t))(v900 + 8))(v863, v9);
                }
                size_t v619 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                             - 8)
                                 + 64);
                long long v620 = v863;
                uint64_t v621 = (const void *)v864;
LABEL_262:
                memcpy(v620, v621, v619);
                goto LABEL_272;
              }
            }
            else
            {
              uint64_t v860 = *(void *)(v9 - 8);
              if (!v627)
              {
                (*(void (**)(void *, const void *, uint64_t))(v860 + 24))(v624, v625, v9);
                goto LABEL_370;
              }
              (*(void (**)(void *, uint64_t))(v860 + 8))(v624, v9);
            }
            uint64_t v861 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v624, v625, *(void *)(*(void *)(v861 - 8) + 64));
            goto LABEL_370;
          }
          (*(void (**)(void *, uint64_t))(v607 + 8))(v603, v9);
        }
        uint64_t v608 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v603, v604, *(void *)(*(void *)(v608 - 8) + 64));
        goto LABEL_255;
      }
      (*(void (**)(void *, uint64_t))(v600 + 8))(v590, v9);
    }
    uint64_t v601 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v590, v591, *(void *)(*(void *)(v601 - 8) + 64));
    goto LABEL_249;
  }
  if (v44)
  {
LABEL_28:
    size_t v50 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?)
                                - 8)
                    + 64);
    uint64_t v51 = v40;
    uint64_t v52 = v41;
LABEL_29:
    memcpy(v51, v52, v50);
LABEL_30:
    uint64_t v53 = v1260;
    goto LABEL_127;
  }
  uint64_t v1253 = v4;
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  uint64_t v45 = v42[5];
  uint64_t v46 = (void *)((char *)v40 + v45);
  uint64_t v47 = (void *)((char *)v41 + v45);
  uint64_t v48 = type metadata accessor for RentalCarReservation(0);
  swift_bridgeObjectRetain();
  v1248 = v41;
  uint64_t v1251 = v40;
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
    memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    *uint64_t v46 = *v47;
    v46[1] = v47[1];
    v46[2] = v47[2];
    v46[3] = v47[3];
    v46[4] = v47[4];
    v46[5] = v47[5];
    v46[6] = v47[6];
    v46[7] = v47[7];
    v46[8] = v47[8];
    v46[9] = v47[9];
    v46[10] = v47[10];
    v46[11] = v47[11];
    v46[12] = v47[12];
    v46[13] = v47[13];
    v46[14] = v47[14];
    v46[15] = v47[15];
    *((unsigned char *)v46 + 128) = *((unsigned char *)v47 + 128);
    *((unsigned char *)v46 + 129) = *((unsigned char *)v47 + 129);
    *((unsigned char *)v46 + 130) = *((unsigned char *)v47 + 130);
    v46[17] = v47[17];
    v46[18] = v47[18];
    v46[19] = v47[19];
    v46[20] = v47[20];
    v46[21] = v47[21];
    v46[22] = v47[22];
    v46[23] = v47[23];
    v46[24] = v47[24];
    v46[25] = v47[25];
    v46[26] = v47[26];
    v46[27] = v47[27];
    v46[28] = v47[28];
    v46[29] = v47[29];
    v46[30] = v47[30];
    v46[31] = v47[31];
    v46[32] = v47[32];
    v46[33] = v47[33];
    v46[34] = v47[34];
    v46[35] = v47[35];
    v46[36] = v47[36];
    v46[37] = v47[37];
    v46[38] = v47[38];
    v46[39] = v47[39];
    v46[40] = v47[40];
    v46[41] = v47[41];
    v46[42] = v47[42];
    v46[43] = v47[43];
    v46[44] = v47[44];
    v46[45] = v47[45];
    v46[46] = v47[46];
    uint64_t v64 = v47[47];
    *((unsigned char *)v46 + 384) = *((unsigned char *)v47 + 384);
    v46[47] = v64;
    v46[49] = v47[49];
    v46[50] = v47[50];
    v46[51] = v47[51];
    v46[52] = v47[52];
    uint64_t v65 = *(int *)(v48 + 140);
    uint64_t v1227 = (char *)v46 + v65;
    uint64_t v66 = (char *)v47 + v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v9))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1227, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1227, v66, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1227, 0, 1, v9);
    }
    uint64_t v69 = *(int *)(v48 + 144);
    uint64_t v70 = (char *)v46 + v69;
    uint64_t v71 = (char *)v47 + v69;
    if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v69, 1, v9))
    {
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v70, v71, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
  }
  uint64_t v73 = v42[6];
  uint64_t v74 = (void *)((char *)v40 + v73);
  uint64_t v75 = (void *)((char *)v41 + v73);
  uint64_t v76 = type metadata accessor for TicketedTransportation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
  {
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
    memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    *uint64_t v74 = *v75;
    v74[1] = v75[1];
    v74[2] = v75[2];
    v74[3] = v75[3];
    v74[4] = v75[4];
    v74[5] = v75[5];
    v74[6] = v75[6];
    v74[7] = v75[7];
    v74[8] = v75[8];
    v74[9] = v75[9];
    v74[10] = v75[10];
    v74[11] = v75[11];
    v74[12] = v75[12];
    v74[13] = v75[13];
    v74[14] = v75[14];
    v74[15] = v75[15];
    *((unsigned char *)v74 + 128) = *((unsigned char *)v75 + 128);
    *((unsigned char *)v74 + 129) = *((unsigned char *)v75 + 129);
    *((unsigned char *)v74 + 130) = *((unsigned char *)v75 + 130);
    v74[17] = v75[17];
    v74[18] = v75[18];
    v74[19] = v75[19];
    v74[20] = v75[20];
    v74[21] = v75[21];
    v74[22] = v75[22];
    v74[23] = v75[23];
    v74[24] = v75[24];
    v74[25] = v75[25];
    v74[26] = v75[26];
    v74[27] = v75[27];
    v74[28] = v75[28];
    v74[29] = v75[29];
    v74[30] = v75[30];
    v74[31] = v75[31];
    v74[32] = v75[32];
    v74[33] = v75[33];
    v74[34] = v75[34];
    __dsta = (void *)v76;
    v74[35] = v75[35];
    uint64_t v78 = v75[36];
    *((unsigned char *)v74 + 296) = *((unsigned char *)v75 + 296);
    v74[36] = v78;
    uint64_t v79 = *(int *)(v76 + 112);
    uint64_t v1228 = (char *)v74 + v79;
    uint64_t v80 = (char *)v75 + v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v9))
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1228, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1228, v80, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1228, 0, 1, v9);
    }
    uint64_t v82 = *(int *)(v76 + 116);
    uint64_t v83 = (char *)v74 + v82;
    uint64_t v84 = (char *)v75 + v82;
    if (__swift_getEnumTagSinglePayload((uint64_t)v75 + v82, 1, v9))
    {
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v83, v84, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, (uint64_t)__dsta);
  }
  uint64_t v86 = v42[7];
  uint64_t v87 = (void *)((char *)v40 + v86);
  uint64_t v88 = (void *)((char *)v41 + v86);
  uint64_t v89 = (int *)type metadata accessor for TicketedShow(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, (uint64_t)v89))
  {
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
    memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    *uint64_t v87 = *v88;
    v87[1] = v88[1];
    v87[2] = v88[2];
    v87[3] = v88[3];
    v87[4] = v88[4];
    v87[5] = v88[5];
    v87[6] = v88[6];
    v87[7] = v88[7];
    v87[8] = v88[8];
    v87[9] = v88[9];
    v87[10] = v88[10];
    v87[11] = v88[11];
    v87[12] = v88[12];
    v87[13] = v88[13];
    v87[14] = v88[14];
    v87[15] = v88[15];
    *((unsigned char *)v87 + 128) = *((unsigned char *)v88 + 128);
    *((unsigned char *)v87 + 129) = *((unsigned char *)v88 + 129);
    *((unsigned char *)v87 + 130) = *((unsigned char *)v88 + 130);
    v87[17] = v88[17];
    v87[18] = v88[18];
    v87[19] = v88[19];
    v87[20] = v88[20];
    v87[21] = v88[21];
    v87[22] = v88[22];
    v87[23] = v88[23];
    v87[24] = v88[24];
    v87[25] = v88[25];
    v87[26] = v88[26];
    v87[27] = v88[27];
    v87[28] = v88[28];
    v87[29] = v88[29];
    v87[30] = v88[30];
    v87[31] = v88[31];
    v87[32] = v88[32];
    v87[33] = v88[33];
    v87[34] = v88[34];
    v87[35] = v88[35];
    uint64_t v91 = v88[36];
    *((unsigned char *)v87 + 296) = *((unsigned char *)v88 + 296);
    v87[36] = v91;
    v87[38] = v88[38];
    v87[39] = v88[39];
    uint64_t v92 = v89[29];
    v1229 = (char *)v87 + v92;
    uint64_t v93 = (char *)v88 + v92;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v1255))
    {
      uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v1229, v93, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v1229, v93, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v1229, 0, 1, v1255);
    }
    uint64_t v95 = v89[30];
    uint64_t v96 = (void *)((char *)v87 + v95);
    uint64_t v97 = (void *)((char *)v88 + v95);
    *uint64_t v96 = *v97;
    v96[1] = v97[1];
    uint64_t v98 = v89[31];
    uint64_t v99 = (char *)v87 + v98;
    uint64_t v100 = (char *)v88 + v98;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v9))
    {
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v99, v100, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v9);
    }
    uint64_t v102 = v89[32];
    uint64_t v103 = (char *)v87 + v102;
    uint64_t v104 = (char *)v88 + v102;
    if (__swift_getEnumTagSinglePayload((uint64_t)v88 + v102, 1, v9))
    {
      uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v103, v104, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, (uint64_t)v89);
  }
  uint64_t v106 = v42[8];
  uint64_t v107 = (void *)((char *)v40 + v106);
  uint64_t v108 = (void *)((char *)v41 + v106);
  uint64_t v109 = type metadata accessor for Appointment(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109))
  {
    uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
    memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
  }
  else
  {
    *uint64_t v107 = *v108;
    v107[1] = v108[1];
    v107[2] = v108[2];
    v107[3] = v108[3];
    v107[4] = v108[4];
    v107[5] = v108[5];
    v107[6] = v108[6];
    v107[7] = v108[7];
    v107[8] = v108[8];
    v107[9] = v108[9];
    v107[10] = v108[10];
    v107[11] = v108[11];
    v107[12] = v108[12];
    v107[13] = v108[13];
    v107[14] = v108[14];
    v107[15] = v108[15];
    *((unsigned char *)v107 + 128) = *((unsigned char *)v108 + 128);
    *((unsigned char *)v107 + 129) = *((unsigned char *)v108 + 129);
    *((unsigned char *)v107 + 130) = *((unsigned char *)v108 + 130);
    v107[17] = v108[17];
    v107[18] = v108[18];
    v107[19] = v108[19];
    v107[20] = v108[20];
    v107[21] = v108[21];
    v107[22] = v108[22];
    v107[23] = v108[23];
    v107[24] = v108[24];
    v107[25] = v108[25];
    v107[26] = v108[26];
    v107[27] = v108[27];
    v107[28] = v108[28];
    v107[29] = v108[29];
    v107[30] = v108[30];
    v107[31] = v108[31];
    v107[32] = v108[32];
    v107[33] = v108[33];
    uint64_t v111 = v108[34];
    *((unsigned char *)v107 + 280) = *((unsigned char *)v108 + 280);
    v107[34] = v111;
    v107[36] = v108[36];
    v107[37] = v108[37];
    uint64_t v112 = *(int *)(v109 + 108);
    __dstb = (void *)v109;
    v1230 = (char *)v107 + v112;
    uint64_t v113 = (char *)v108 + v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v9))
    {
      uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1230, v113, *(void *)(*(void *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1230, v113, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1230, 0, 1, v9);
    }
    uint64_t v115 = *(int *)(v109 + 112);
    uint64_t v116 = (char *)v107 + v115;
    uint64_t v117 = (char *)v108 + v115;
    if (__swift_getEnumTagSinglePayload((uint64_t)v108 + v115, 1, v9))
    {
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v116, v117, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, (uint64_t)__dstb);
  }
  uint64_t v119 = v42[9];
  uint64_t v120 = (void *)((char *)v40 + v119);
  uint64_t v121 = (void *)((char *)v41 + v119);
  uint64_t v122 = type metadata accessor for Party(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v122))
  {
    uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
    memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
  }
  else
  {
    *uint64_t v120 = *v121;
    v120[1] = v121[1];
    v120[2] = v121[2];
    v120[3] = v121[3];
    v120[4] = v121[4];
    v120[5] = v121[5];
    v120[6] = v121[6];
    v120[7] = v121[7];
    v120[8] = v121[8];
    v120[9] = v121[9];
    v120[10] = v121[10];
    v120[11] = v121[11];
    v120[12] = v121[12];
    v120[13] = v121[13];
    v120[14] = v121[14];
    v120[15] = v121[15];
    *((unsigned char *)v120 + 128) = *((unsigned char *)v121 + 128);
    *((unsigned char *)v120 + 129) = *((unsigned char *)v121 + 129);
    *((unsigned char *)v120 + 130) = *((unsigned char *)v121 + 130);
    v120[17] = v121[17];
    v120[18] = v121[18];
    v120[19] = v121[19];
    v120[20] = v121[20];
    v120[21] = v121[21];
    v120[22] = v121[22];
    v120[23] = v121[23];
    v120[24] = v121[24];
    v120[25] = v121[25];
    v120[26] = v121[26];
    v120[27] = v121[27];
    v120[28] = v121[28];
    v120[29] = v121[29];
    v120[30] = v121[30];
    __dstc = (int *)v122;
    v120[31] = v121[31];
    uint64_t v124 = *(int *)(v122 + 96);
    uint64_t v1231 = (char *)v120 + v124;
    uint64_t v125 = (char *)v121 + v124;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v9))
    {
      uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1231, v125, *(void *)(*(void *)(v126 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1231, v125, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1231, 0, 1, v9);
    }
    uint64_t v127 = *(int *)(v122 + 100);
    uint64_t v128 = (char *)v120 + v127;
    uint64_t v129 = (char *)v121 + v127;
    if (__swift_getEnumTagSinglePayload((uint64_t)v121 + v127, 1, v9))
    {
      uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v128, v129, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v9);
    }
    uint64_t v131 = __dstc[26];
    uint64_t v132 = (char *)v120 + v131;
    uint64_t v133 = (char *)v121 + v131;
    if (__swift_getEnumTagSinglePayload((uint64_t)v121 + v131, 1, v1255))
    {
      uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v132, v133, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v1255);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, (uint64_t)__dstc);
  }
  uint64_t v135 = v42[10];
  uint64_t v136 = (void *)((char *)v40 + v135);
  uint64_t v137 = (void *)((char *)v41 + v135);
  uint64_t v138 = type metadata accessor for Trip(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v138))
  {
    uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
    memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
  }
  else
  {
    *uint64_t v136 = *v137;
    v136[1] = v137[1];
    v136[2] = v137[2];
    v136[3] = v137[3];
    v136[4] = v137[4];
    v136[5] = v137[5];
    v136[6] = v137[6];
    v136[7] = v137[7];
    v136[8] = v137[8];
    v136[9] = v137[9];
    v136[10] = v137[10];
    v136[11] = v137[11];
    v136[12] = v137[12];
    v136[13] = v137[13];
    v136[14] = v137[14];
    v136[15] = v137[15];
    *((unsigned char *)v136 + 128) = *((unsigned char *)v137 + 128);
    *((unsigned char *)v136 + 129) = *((unsigned char *)v137 + 129);
    *((unsigned char *)v136 + 130) = *((unsigned char *)v137 + 130);
    v136[17] = v137[17];
    v136[18] = v137[18];
    v136[19] = v137[19];
    v136[20] = v137[20];
    v136[21] = v137[21];
    v136[22] = v137[22];
    v136[23] = v137[23];
    v136[24] = v137[24];
    v136[25] = v137[25];
    v136[26] = v137[26];
    __dstd = (int *)v138;
    v136[27] = v137[27];
    uint64_t v140 = *(int *)(v138 + 88);
    uint64_t v1232 = (char *)v136 + v140;
    uint64_t v1207 = (char *)v137 + v140;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1207, 1, v9))
    {
      uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1232, v1207, *(void *)(*(void *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1232, v1207, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1232, 0, 1, v9);
    }
    uint64_t v142 = *(int *)(v138 + 92);
    uint64_t v143 = (char *)v136 + v142;
    uint64_t v144 = (char *)v137 + v142;
    if (__swift_getEnumTagSinglePayload((uint64_t)v137 + v142, 1, v9))
    {
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v143, v144, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v9);
    }
    uint64_t v146 = __dstd[24];
    uint64_t v147 = (char *)v136 + v146;
    uint64_t v148 = (char *)v137 + v146;
    uint64_t v149 = *(void *)v148;
    v147[8] = v148[8];
    *(void *)uint64_t v147 = v149;
    uint64_t v150 = __dstd[25];
    uint64_t v151 = (char *)v136 + v150;
    uint64_t v152 = (char *)v137 + v150;
    if (__swift_getEnumTagSinglePayload((uint64_t)v137 + v150, 1, v1255))
    {
      uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v151, v152, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v1255);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, (uint64_t)__dstd);
  }
  uint64_t v154 = v42[11];
  uint64_t v155 = (void *)((char *)v40 + v154);
  uint64_t v156 = (void *)((char *)v41 + v154);
  uint64_t v157 = (int *)type metadata accessor for FlightReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, (uint64_t)v157))
  {
    uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
    memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
  }
  else
  {
    *uint64_t v155 = *v156;
    v155[1] = v156[1];
    v155[2] = v156[2];
    v155[3] = v156[3];
    v155[4] = v156[4];
    v155[5] = v156[5];
    v155[6] = v156[6];
    v155[7] = v156[7];
    v155[8] = v156[8];
    v155[9] = v156[9];
    v155[10] = v156[10];
    v155[11] = v156[11];
    *((unsigned char *)v155 + 96) = *((unsigned char *)v156 + 96);
    v155[13] = v156[13];
    v155[14] = v156[14];
    uint64_t v159 = v157[13];
    __dste = (char *)v156 + v159;
    v1233 = (char *)v155 + v159;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)__dste, 1, v1255))
    {
      uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v1233, __dste, *(void *)(*(void *)(v160 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v1233, __dste, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v1233, 0, 1, v1255);
    }
    uint64_t v161 = v157[14];
    uint64_t v162 = (char *)v155 + v161;
    uint64_t v163 = (char *)v156 + v161;
    if (__swift_getEnumTagSinglePayload((uint64_t)v156 + v161, 1, v1255))
    {
      uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v162, v163, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v1255);
    }
    uint64_t v165 = v157[15];
    uint64_t v166 = (void *)((char *)v155 + v165);
    uint64_t v167 = (void *)((char *)v156 + v165);
    *uint64_t v166 = *v167;
    v166[1] = v167[1];
    uint64_t v168 = v157[16];
    uint64_t v169 = (void *)((char *)v155 + v168);
    uint64_t v170 = (void *)((char *)v156 + v168);
    *uint64_t v169 = *v170;
    v169[1] = v170[1];
    uint64_t v171 = v157[17];
    uint64_t v172 = (void *)((char *)v155 + v171);
    uint64_t v173 = (void *)((char *)v156 + v171);
    *uint64_t v172 = *v173;
    v172[1] = v173[1];
    uint64_t v174 = v157[18];
    v1234 = (char *)v155 + v174;
    uint64_t v175 = (char *)v156 + v174;
    uint64_t v176 = type metadata accessor for DateComponents();
    uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v177(v1234, v175, v176);
    v177((char *)v155 + v157[19], (char *)v156 + v157[19], v176);
    uint64_t v178 = v157[20];
    uint64_t v179 = (void *)((char *)v155 + v178);
    uint64_t v180 = (void *)((char *)v156 + v178);
    *uint64_t v179 = *v180;
    v179[1] = v180[1];
    uint64_t v181 = v157[21];
    uint64_t v182 = (void *)((char *)v155 + v181);
    uint64_t v183 = (void *)((char *)v156 + v181);
    *uint64_t v182 = *v183;
    v182[1] = v183[1];
    uint64_t v184 = v157[22];
    uint64_t v185 = (void *)((char *)v155 + v184);
    uint64_t v186 = (void *)((char *)v156 + v184);
    void *v185 = *v186;
    v185[1] = v186[1];
    uint64_t v187 = v157[23];
    uint64_t v188 = (void *)((char *)v155 + v187);
    uint64_t v189 = (void *)((char *)v156 + v187);
    *uint64_t v188 = *v189;
    v188[1] = v189[1];
    uint64_t v190 = v157[24];
    uint64_t v191 = (void *)((char *)v155 + v190);
    uint64_t v192 = (void *)((char *)v156 + v190);
    *uint64_t v191 = *v192;
    v191[1] = v192[1];
    uint64_t v193 = v157[25];
    uint64_t v194 = (void *)((char *)v155 + v193);
    uint64_t v195 = (void *)((char *)v156 + v193);
    *uint64_t v194 = *v195;
    v194[1] = v195[1];
    uint64_t v196 = v157[26];
    uint64_t v197 = (void *)((char *)v155 + v196);
    uint64_t v198 = (void *)((char *)v156 + v196);
    *uint64_t v197 = *v198;
    v197[1] = v198[1];
    uint64_t v199 = v157[27];
    uint64_t v200 = (void *)((char *)v155 + v199);
    uint64_t v201 = (void *)((char *)v156 + v199);
    *uint64_t v200 = *v201;
    v200[1] = v201[1];
    uint64_t v202 = v157[28];
    uint64_t v203 = (void *)((char *)v155 + v202);
    uint64_t v204 = (void *)((char *)v156 + v202);
    *uint64_t v203 = *v204;
    v203[1] = v204[1];
    uint64_t v205 = v157[29];
    uint64_t v206 = (void *)((char *)v155 + v205);
    uint64_t v207 = (void *)((char *)v156 + v205);
    *uint64_t v206 = *v207;
    v206[1] = v207[1];
    uint64_t v208 = v157[30];
    uint64_t v209 = (void *)((char *)v155 + v208);
    uint64_t v210 = (void *)((char *)v156 + v208);
    *uint64_t v209 = *v210;
    v209[1] = v210[1];
    uint64_t v211 = v157[31];
    uint64_t v212 = (void *)((char *)v155 + v211);
    uint64_t v213 = (void *)((char *)v156 + v211);
    void *v212 = *v213;
    v212[1] = v213[1];
    uint64_t v214 = v157[32];
    uint64_t v215 = (void *)((char *)v155 + v214);
    uint64_t v216 = (void *)((char *)v156 + v214);
    *uint64_t v215 = *v216;
    v215[1] = v216[1];
    *(void *)((char *)v155 + v157[33]) = *(void *)((char *)v156 + v157[33]);
    *(void *)((char *)v155 + v157[34]) = *(void *)((char *)v156 + v157[34]);
    uint64_t v217 = v157[35];
    uint64_t v218 = (void *)((char *)v155 + v217);
    uint64_t v219 = (void *)((char *)v156 + v217);
    *uint64_t v218 = *v219;
    v218[1] = v219[1];
    uint64_t v220 = v157[36];
    uint64_t v221 = (void *)((char *)v155 + v220);
    uint64_t v222 = (void *)((char *)v156 + v220);
    *uint64_t v221 = *v222;
    v221[1] = v222[1];
    uint64_t v223 = v157[37];
    uint64_t v224 = (void *)((char *)v155 + v223);
    uint64_t v225 = (void *)((char *)v156 + v223);
    *uint64_t v224 = *v225;
    v224[1] = v225[1];
    uint64_t v226 = v157[38];
    v1235 = (char *)v155 + v226;
    v1205 = (char *)v156 + v226;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1205, 1, v9))
    {
      uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1235, v1205, *(void *)(*(void *)(v227 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1235, v1205, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1235, 0, 1, v9);
    }
    uint64_t v41 = v1248;
    uint64_t v228 = v157[39];
    uint64_t v229 = (void *)((char *)v155 + v228);
    uint64_t v230 = (void *)((char *)v156 + v228);
    *uint64_t v229 = *v230;
    v229[1] = v230[1];
    uint64_t v231 = v157[40];
    uint64_t v232 = (void *)((char *)v155 + v231);
    uint64_t v233 = (void *)((char *)v156 + v231);
    *uint64_t v232 = *v233;
    v232[1] = v233[1];
    uint64_t v234 = v157[41];
    uint64_t v235 = (char *)v155 + v234;
    uint64_t v236 = (char *)v156 + v234;
    uint64_t v237 = *(void *)v236;
    v235[8] = v236[8];
    *(void *)uint64_t v235 = v237;
    uint64_t v238 = v157[42];
    uint64_t v239 = (void *)((char *)v155 + v238);
    uint64_t v240 = (void *)((char *)v156 + v238);
    *uint64_t v239 = *v240;
    v239[1] = v240[1];
    uint64_t v241 = v157[43];
    uint64_t v242 = (char *)v155 + v241;
    uint64_t v243 = (char *)v156 + v241;
    long long v244 = *(_OWORD *)v243;
    *(void *)(v242 + 13) = *(void *)(v243 + 13);
    *(_OWORD *)uint64_t v242 = v244;
    uint64_t v245 = v157[44];
    uint64_t v246 = (void *)((char *)v155 + v245);
    uint64_t v247 = (void *)((char *)v156 + v245);
    *uint64_t v246 = *v247;
    v246[1] = v247[1];
    uint64_t v248 = v157[45];
    uint64_t v249 = (void *)((char *)v155 + v248);
    uint64_t v250 = (void *)((char *)v156 + v248);
    void *v249 = *v250;
    v249[1] = v250[1];
    uint64_t v251 = v157[46];
    uint64_t v252 = (void *)((char *)v155 + v251);
    uint64_t v253 = (void *)((char *)v156 + v251);
    *uint64_t v252 = *v253;
    v252[1] = v253[1];
    uint64_t v254 = v157[47];
    uint64_t v255 = (void *)((char *)v155 + v254);
    uint64_t v256 = (void *)((char *)v156 + v254);
    *uint64_t v255 = *v256;
    v255[1] = v256[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, (uint64_t)v157);
    uint64_t v40 = v1251;
    uint64_t v42 = v1256;
  }
  uint64_t v257 = v42[12];
  uint64_t v258 = (void *)((char *)v40 + v257);
  uint64_t v259 = (void *)((char *)v41 + v257);
  uint64_t v260 = (int *)type metadata accessor for HotelReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v259, 1, (uint64_t)v260))
  {
    uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
    memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
    uint64_t v5 = v1259;
  }
  else
  {
    *uint64_t v258 = *v259;
    v258[1] = v259[1];
    v258[2] = v259[2];
    v258[3] = v259[3];
    v258[4] = v259[4];
    v258[5] = v259[5];
    v258[6] = v259[6];
    v258[7] = v259[7];
    v258[8] = v259[8];
    v258[9] = v259[9];
    v258[10] = v259[10];
    v258[11] = v259[11];
    *((unsigned char *)v258 + 96) = *((unsigned char *)v259 + 96);
    v258[13] = v259[13];
    v258[14] = v259[14];
    v258[15] = v259[15];
    v258[16] = v259[16];
    uint64_t v262 = v260[14];
    v1236 = (char *)v258 + v262;
    v1209 = (char *)v259 + v262;
    uint64_t v263 = type metadata accessor for DateComponents();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1209, 1, v263))
    {
      uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v1236, v1209, *(void *)(*(void *)(v264 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 16))(v1236, v1209, v263);
      __swift_storeEnumTagSinglePayload((uint64_t)v1236, 0, 1, v263);
    }
    uint64_t v265 = v260[15];
    uint64_t v266 = (char *)v258 + v265;
    uint64_t v267 = (char *)v259 + v265;
    if (__swift_getEnumTagSinglePayload((uint64_t)v259 + v265, 1, v263))
    {
      uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 16))(v266, v267, v263);
      __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v263);
    }
    uint64_t v269 = v260[16];
    uint64_t v270 = (void *)((char *)v258 + v269);
    uint64_t v271 = (void *)((char *)v259 + v269);
    *uint64_t v270 = *v271;
    v270[1] = v271[1];
    uint64_t v272 = v260[17];
    uint64_t v273 = (void *)((char *)v258 + v272);
    uint64_t v274 = (void *)((char *)v259 + v272);
    void *v273 = *v274;
    v273[1] = v274[1];
    uint64_t v275 = v260[18];
    uint64_t v276 = (void *)((char *)v258 + v275);
    uint64_t v277 = (void *)((char *)v259 + v275);
    void *v276 = *v277;
    v276[1] = v277[1];
    uint64_t v278 = v260[19];
    uint64_t v279 = (void *)((char *)v258 + v278);
    uint64_t v280 = (void *)((char *)v259 + v278);
    *uint64_t v279 = *v280;
    v279[1] = v280[1];
    uint64_t v281 = v260[20];
    uint64_t v282 = (void *)((char *)v258 + v281);
    uint64_t v283 = (void *)((char *)v259 + v281);
    void *v282 = *v283;
    v282[1] = v283[1];
    *(void *)((char *)v258 + v260[21]) = *(void *)((char *)v259 + v260[21]);
    *(void *)((char *)v258 + v260[22]) = *(void *)((char *)v259 + v260[22]);
    uint64_t v284 = v260[23];
    uint64_t v285 = (char *)v258 + v284;
    uint64_t v286 = (char *)v259 + v284;
    uint64_t v287 = *(void *)v286;
    v285[8] = v286[8];
    *(void *)uint64_t v285 = v287;
    uint64_t v288 = v260[24];
    uint64_t v289 = (char *)v258 + v288;
    uint64_t v290 = (char *)v259 + v288;
    uint64_t v291 = *(void *)v290;
    v289[8] = v290[8];
    *(void *)uint64_t v289 = v291;
    uint64_t v292 = v260[25];
    uint64_t v293 = (void *)((char *)v258 + v292);
    uint64_t v294 = (void *)((char *)v259 + v292);
    void *v293 = *v294;
    v293[1] = v294[1];
    uint64_t v295 = v260[26];
    uint64_t v296 = (void *)((char *)v258 + v295);
    uint64_t v297 = (void *)((char *)v259 + v295);
    void *v296 = *v297;
    v296[1] = v297[1];
    uint64_t v298 = v260[27];
    uint64_t v299 = (void *)((char *)v258 + v298);
    int v300 = (void *)((char *)v259 + v298);
    void *v299 = *v300;
    v299[1] = v300[1];
    uint64_t v301 = v260[28];
    uint64_t v302 = (void *)((char *)v258 + v301);
    uint64_t v303 = (void *)((char *)v259 + v301);
    void *v302 = *v303;
    v302[1] = v303[1];
    uint64_t v304 = v260[29];
    uint64_t v305 = (char *)v258 + v304;
    uint64_t v306 = (char *)v259 + v304;
    uint64_t v307 = *(void *)v306;
    v305[8] = v306[8];
    *(void *)uint64_t v305 = v307;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v258, 0, 1, (uint64_t)v260);
    uint64_t v42 = v1256;
    uint64_t v5 = v1259;
    uint64_t v41 = v1248;
    uint64_t v40 = v1251;
  }
  uint64_t v308 = v42[13];
  uint64_t v309 = (void *)((char *)v40 + v308);
  uint64_t v310 = (void *)((char *)v41 + v308);
  uint64_t v311 = (int *)type metadata accessor for RestaurantReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v310, 1, (uint64_t)v311))
  {
    uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
    memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
    uint64_t v4 = v1253;
    uint64_t v53 = v1260;
  }
  else
  {
    void *v309 = *v310;
    v309[1] = v310[1];
    v309[2] = v310[2];
    v309[3] = v310[3];
    v309[4] = v310[4];
    v309[5] = v310[5];
    v309[6] = v310[6];
    v309[7] = v310[7];
    v309[8] = v310[8];
    v309[9] = v310[9];
    v309[10] = v310[10];
    v309[11] = v310[11];
    *((unsigned char *)v309 + 96) = *((unsigned char *)v310 + 96);
    v309[13] = v310[13];
    v309[14] = v310[14];
    v309[15] = v310[15];
    v309[16] = v310[16];
    uint64_t v313 = v311[14];
    uint64_t v1250 = (char *)v309 + v313;
    uint64_t v1212 = (char *)v310 + v313;
    uint64_t v1210 = type metadata accessor for DateComponents();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1212, 1, v1210))
    {
      uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v1250, v1212, *(void *)(*(void *)(v314 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1210 - 8) + 16))(v1250, v1212, v1210);
      __swift_storeEnumTagSinglePayload((uint64_t)v1250, 0, 1, v1210);
    }
    uint64_t v315 = v311[15];
    uint64_t v316 = (void *)((char *)v309 + v315);
    uint64_t v317 = (void *)((char *)v310 + v315);
    *uint64_t v316 = *v317;
    v316[1] = v317[1];
    uint64_t v318 = v311[16];
    uint64_t v319 = (void *)((char *)v309 + v318);
    uint64_t v320 = (void *)((char *)v310 + v318);
    *uint64_t v319 = *v320;
    v319[1] = v320[1];
    uint64_t v321 = v311[17];
    uint64_t v322 = (void *)((char *)v309 + v321);
    uint64_t v323 = (void *)((char *)v310 + v321);
    *uint64_t v322 = *v323;
    v322[1] = v323[1];
    uint64_t v324 = v311[18];
    uint64_t v325 = (void *)((char *)v309 + v324);
    uint64_t v326 = (void *)((char *)v310 + v324);
    *uint64_t v325 = *v326;
    v325[1] = v326[1];
    uint64_t v327 = v311[19];
    uint64_t v328 = (void *)((char *)v309 + v327);
    uint64_t v329 = (void *)((char *)v310 + v327);
    void *v328 = *v329;
    v328[1] = v329[1];
    *(void *)((char *)v309 + v311[20]) = *(void *)((char *)v310 + v311[20]);
    uint64_t v330 = v311[21];
    uint64_t v331 = (void *)((char *)v309 + v330);
    uint64_t v332 = (void *)((char *)v310 + v330);
    void *v331 = *v332;
    v331[1] = v332[1];
    uint64_t v333 = v311[22];
    uint64_t v334 = (void *)((char *)v309 + v333);
    uint64_t v335 = (void *)((char *)v310 + v333);
    *uint64_t v334 = *v335;
    v334[1] = v335[1];
    uint64_t v336 = v311[23];
    uint64_t v337 = (void *)((char *)v309 + v336);
    uint64_t v338 = (void *)((char *)v310 + v336);
    *uint64_t v337 = *v338;
    v337[1] = v338[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v309, 0, 1, (uint64_t)v311);
    uint64_t v5 = v1259;
    uint64_t v53 = v1260;
    uint64_t v40 = v1251;
    uint64_t v4 = v1253;
    uint64_t v42 = v1256;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, (uint64_t)v42);
LABEL_127:
  uint64_t v339 = v53[20];
  uint64_t v340 = (void *)((char *)v5 + v339);
  uint64_t v341 = (void *)((char *)v4 + v339);
  uint64_t v342 = (int *)type metadata accessor for PreExtractedCard(0);
  int v343 = __swift_getEnumTagSinglePayload((uint64_t)v340, 1, (uint64_t)v342);
  int v344 = __swift_getEnumTagSinglePayload((uint64_t)v341, 1, (uint64_t)v342);
  if (v343)
  {
    if (!v344)
    {
      *uint64_t v340 = *v341;
      v340[1] = v341[1];
      v340[2] = v341[2];
      v340[3] = v341[3];
      v340[4] = v341[4];
      v340[5] = v341[5];
      v340[6] = v341[6];
      v340[7] = v341[7];
      v340[8] = v341[8];
      v340[9] = v341[9];
      v340[10] = v341[10];
      v340[11] = v341[11];
      uint64_t v345 = v342[10];
      uint64_t v346 = (char *)v340 + v345;
      uint64_t v347 = (char *)v341 + v345;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v347, 1, v1261))
      {
        uint64_t v348 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v346, v347, *(void *)(*(void *)(v348 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v346, v347, v1261);
        __swift_storeEnumTagSinglePayload((uint64_t)v346, 0, 1, v1261);
      }
      uint64_t v5 = v1259;
      uint64_t v356 = v342[11];
      uint64_t v357 = (char *)v340 + v356;
      uint64_t v358 = (char *)v341 + v356;
      if (__swift_getEnumTagSinglePayload((uint64_t)v341 + v356, 1, v1261))
      {
        uint64_t v359 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v357, v358, *(void *)(*(void *)(v359 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v357, v358, v1261);
        __swift_storeEnumTagSinglePayload((uint64_t)v357, 0, 1, v1261);
      }
      uint64_t v360 = v342[12];
      uint64_t v361 = (void *)((char *)v340 + v360);
      uint64_t v362 = (void *)((char *)v341 + v360);
      void *v361 = *v362;
      v361[1] = v362[1];
      uint64_t v363 = v342[13];
      uint64_t v364 = (void *)((char *)v340 + v363);
      uint64_t v365 = (void *)((char *)v341 + v363);
      void *v364 = *v365;
      v364[1] = v365[1];
      uint64_t v366 = v342[14];
      uint64_t v367 = (void *)((char *)v340 + v366);
      uint64_t v368 = (void *)((char *)v341 + v366);
      *uint64_t v367 = *v368;
      v367[1] = v368[1];
      uint64_t v369 = v342[15];
      uint64_t v370 = (char *)v340 + v369;
      uint64_t v371 = (char *)v341 + v369;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v371, 1, v1261))
      {
        uint64_t v372 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v370, v371, *(void *)(*(void *)(v372 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v370, v371, v1261);
        __swift_storeEnumTagSinglePayload((uint64_t)v370, 0, 1, v1261);
      }
      uint64_t v373 = v342[16];
      uint64_t v374 = (void *)((char *)v340 + v373);
      uint64_t v375 = (void *)((char *)v341 + v373);
      *uint64_t v374 = *v375;
      v374[1] = v375[1];
      uint64_t v376 = v342[17];
      uint64_t v377 = (void *)((char *)v340 + v376);
      uint64_t v378 = (void *)((char *)v341 + v376);
      void *v377 = *v378;
      v377[1] = v378[1];
      uint64_t v379 = v342[18];
      uint64_t v380 = (void *)((char *)v340 + v379);
      uint64_t v381 = (void *)((char *)v341 + v379);
      *uint64_t v380 = *v381;
      v380[1] = v381[1];
      uint64_t v382 = v342[19];
      uint64_t v383 = (void *)((char *)v340 + v382);
      uint64_t v384 = (void *)((char *)v341 + v382);
      *uint64_t v383 = *v384;
      v383[1] = v384[1];
      uint64_t v385 = v342[20];
      uint64_t v386 = (void *)((char *)v340 + v385);
      uint64_t v387 = (void *)((char *)v341 + v385);
      *uint64_t v386 = *v387;
      v386[1] = v387[1];
      uint64_t v388 = v342[21];
      uint64_t v389 = (void *)((char *)v340 + v388);
      uint64_t v390 = (void *)((char *)v341 + v388);
      *uint64_t v389 = *v390;
      v389[1] = v390[1];
      uint64_t v391 = v342[22];
      uint64_t v392 = (void *)((char *)v340 + v391);
      uint64_t v393 = (void *)((char *)v341 + v391);
      void *v392 = *v393;
      v392[1] = v393[1];
      uint64_t v394 = v342[23];
      uint64_t v395 = (void *)((char *)v340 + v394);
      uint64_t v396 = (void *)((char *)v341 + v394);
      *uint64_t v395 = *v396;
      v395[1] = v396[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v340, 0, 1, (uint64_t)v342);
      uint64_t v53 = v1260;
      goto LABEL_145;
    }
LABEL_133:
    uint64_t v349 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v340, v341, *(void *)(*(void *)(v349 - 8) + 64));
LABEL_145:
    uint64_t v353 = v1261;
    goto LABEL_146;
  }
  if (v344)
  {
    outlined destroy of EmailDocument((uint64_t)v340, (void (*)(void))type metadata accessor for PreExtractedCard);
    goto LABEL_133;
  }
  *uint64_t v340 = *v341;
  v340[1] = v341[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v340[2] = v341[2];
  v340[3] = v341[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v340[4] = v341[4];
  v340[5] = v341[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v340[6] = v341[6];
  v340[7] = v341[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v340[8] = v341[8];
  v340[9] = v341[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v340[10] = v341[10];
  v340[11] = v341[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v350 = v342[10];
  uint64_t v351 = (char *)v340 + v350;
  uint64_t v352 = (char *)v341 + v350;
  uint64_t v353 = v1261;
  int v354 = __swift_getEnumTagSinglePayload((uint64_t)v340 + v350, 1, v1261);
  int v355 = __swift_getEnumTagSinglePayload((uint64_t)v352, 1, v1261);
  if (v354)
  {
    if (!v355)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v351, v352, v1261);
      __swift_storeEnumTagSinglePayload((uint64_t)v351, 0, 1, v1261);
      goto LABEL_164;
    }
    goto LABEL_163;
  }
  uint64_t v422 = *(void *)(v1261 - 8);
  if (v355)
  {
    (*(void (**)(char *, uint64_t))(v422 + 8))(v351, v1261);
LABEL_163:
    uint64_t v423 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v351, v352, *(void *)(*(void *)(v423 - 8) + 64));
    goto LABEL_164;
  }
  (*(void (**)(char *, char *, uint64_t))(v422 + 24))(v351, v352, v1261);
LABEL_164:
  uint64_t v424 = v342[11];
  int v425 = (char *)v340 + v424;
  uint64_t v426 = (char *)v341 + v424;
  int v427 = __swift_getEnumTagSinglePayload((uint64_t)v340 + v424, 1, v1261);
  int v428 = __swift_getEnumTagSinglePayload((uint64_t)v426, 1, v1261);
  if (v427)
  {
    if (!v428)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v425, v426, v1261);
      __swift_storeEnumTagSinglePayload((uint64_t)v425, 0, 1, v1261);
      goto LABEL_176;
    }
    goto LABEL_175;
  }
  uint64_t v439 = *(void *)(v1261 - 8);
  if (v428)
  {
    (*(void (**)(char *, uint64_t))(v439 + 8))(v425, v1261);
LABEL_175:
    uint64_t v440 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v425, v426, *(void *)(*(void *)(v440 - 8) + 64));
    goto LABEL_176;
  }
  (*(void (**)(char *, char *, uint64_t))(v439 + 24))(v425, v426, v1261);
LABEL_176:
  uint64_t v441 = v342[12];
  uint64_t v442 = (void *)((char *)v340 + v441);
  uint64_t v443 = (void *)((char *)v341 + v441);
  *uint64_t v442 = *v443;
  v442[1] = v443[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v444 = v342[13];
  uint64_t v445 = (void *)((char *)v340 + v444);
  uint64_t v446 = (void *)((char *)v341 + v444);
  *uint64_t v445 = *v446;
  v445[1] = v446[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v447 = v342[14];
  uint64_t v448 = (void *)((char *)v340 + v447);
  uint64_t v449 = (void *)((char *)v341 + v447);
  *uint64_t v448 = *v449;
  v448[1] = v449[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v450 = v342[15];
  uint64_t v451 = (char *)v340 + v450;
  uint64_t v452 = (char *)v341 + v450;
  int v453 = __swift_getEnumTagSinglePayload((uint64_t)v340 + v450, 1, v1261);
  int v454 = __swift_getEnumTagSinglePayload((uint64_t)v452, 1, v1261);
  if (!v453)
  {
    uint64_t v512 = *(void *)(v1261 - 8);
    if (!v454)
    {
      (*(void (**)(char *, char *, uint64_t))(v512 + 24))(v451, v452, v1261);
      goto LABEL_204;
    }
    (*(void (**)(char *, uint64_t))(v512 + 8))(v451, v1261);
    goto LABEL_203;
  }
  if (v454)
  {
LABEL_203:
    uint64_t v513 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v451, v452, *(void *)(*(void *)(v513 - 8) + 64));
    goto LABEL_204;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v451, v452, v1261);
  __swift_storeEnumTagSinglePayload((uint64_t)v451, 0, 1, v1261);
LABEL_204:
  uint64_t v514 = v342[16];
  uint64_t v515 = (void *)((char *)v340 + v514);
  uint64_t v516 = (void *)((char *)v341 + v514);
  *uint64_t v515 = *v516;
  v515[1] = v516[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v517 = v342[17];
  int v518 = (void *)((char *)v340 + v517);
  uint64_t v519 = (void *)((char *)v341 + v517);
  *int v518 = *v519;
  v518[1] = v519[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v520 = v342[18];
  uint64_t v521 = (void *)((char *)v340 + v520);
  uint64_t v522 = (void *)((char *)v341 + v520);
  void *v521 = *v522;
  v521[1] = v522[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v523 = v342[19];
  uint64_t v524 = (void *)((char *)v340 + v523);
  uint64_t v525 = (void *)((char *)v341 + v523);
  void *v524 = *v525;
  v524[1] = v525[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v526 = v342[20];
  uint64_t v527 = (void *)((char *)v340 + v526);
  uint64_t v528 = (void *)((char *)v341 + v526);
  *uint64_t v527 = *v528;
  v527[1] = v528[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v529 = v342[21];
  uint64_t v530 = (void *)((char *)v340 + v529);
  uint64_t v531 = (void *)((char *)v341 + v529);
  *uint64_t v530 = *v531;
  v530[1] = v531[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v532 = v342[22];
  uint64_t v533 = (void *)((char *)v340 + v532);
  uint64_t v534 = (void *)((char *)v341 + v532);
  void *v533 = *v534;
  v533[1] = v534[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v535 = v342[23];
  uint64_t v536 = (void *)((char *)v340 + v535);
  uint64_t v537 = (void *)((char *)v341 + v535);
  void *v536 = *v537;
  v536[1] = v537[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_146:
  uint64_t v397 = v53[21];
  uint64_t v398 = (void *)((char *)v5 + v397);
  uint64_t v399 = (void *)((char *)v4 + v397);
  uint64_t v400 = (int *)type metadata accessor for PreExtractedContact(0);
  int v401 = __swift_getEnumTagSinglePayload((uint64_t)v398, 1, (uint64_t)v400);
  int v402 = __swift_getEnumTagSinglePayload((uint64_t)v399, 1, (uint64_t)v400);
  if (!v401)
  {
    if (v402)
    {
      outlined destroy of EmailDocument((uint64_t)v398, (void (*)(void))type metadata accessor for PreExtractedContact);
      goto LABEL_152;
    }
    *uint64_t v398 = *v399;
    v398[1] = v399[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v398[2] = v399[2];
    v398[3] = v399[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v398[4] = v399[4];
    v398[5] = v399[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v398[6] = v399[6];
    v398[7] = v399[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v398[8] = v399[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v398[9] = v399[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v398[10] = v399[10];
    v398[11] = v399[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v407 = v400[11];
    uint64_t v408 = (char *)v398 + v407;
    uint64_t v409 = (char *)v399 + v407;
    int v410 = __swift_getEnumTagSinglePayload((uint64_t)v398 + v407, 1, v353);
    int v411 = __swift_getEnumTagSinglePayload((uint64_t)v409, 1, v353);
    if (v410)
    {
      if (!v411)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16))(v408, v409, v353);
        __swift_storeEnumTagSinglePayload((uint64_t)v408, 0, 1, v353);
        goto LABEL_170;
      }
    }
    else
    {
      uint64_t v429 = *(void *)(v353 - 8);
      if (!v411)
      {
        (*(void (**)(char *, char *, uint64_t))(v429 + 24))(v408, v409, v353);
LABEL_170:
        uint64_t v431 = v400[12];
        uint64_t v432 = (void *)((char *)v398 + v431);
        uint64_t v433 = (void *)((char *)v399 + v431);
        void *v432 = *v433;
        v432[1] = v433[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v398 + v400[13]) = *(void *)((char *)v399 + v400[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v434 = v400[14];
        uint64_t v435 = (char *)v398 + v434;
        uint64_t v436 = (char *)v399 + v434;
        int v437 = __swift_getEnumTagSinglePayload((uint64_t)v398 + v434, 1, v353);
        int v438 = __swift_getEnumTagSinglePayload((uint64_t)v436, 1, v353);
        if (v437)
        {
          if (!v438)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16))(v435, v436, v353);
            __swift_storeEnumTagSinglePayload((uint64_t)v435, 0, 1, v353);
LABEL_182:
            *(void *)((char *)v398 + v400[15]) = *(void *)((char *)v399 + v400[15]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v398 + v400[16]) = *(void *)((char *)v399 + v400[16]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v457 = v400[17];
            uint64_t v458 = (void *)((char *)v398 + v457);
            uint64_t v459 = (void *)((char *)v399 + v457);
            void *v458 = *v459;
            v458[1] = v459[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v398 + v400[18]) = *(void *)((char *)v399 + v400[18]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v398 + v400[19]) = *(void *)((char *)v399 + v400[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_183;
          }
        }
        else
        {
          uint64_t v455 = *(void *)(v353 - 8);
          if (!v438)
          {
            (*(void (**)(char *, char *, uint64_t))(v455 + 24))(v435, v436, v353);
            goto LABEL_182;
          }
          (*(void (**)(char *, uint64_t))(v455 + 8))(v435, v353);
        }
        uint64_t v456 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v435, v436, *(void *)(*(void *)(v456 - 8) + 64));
        goto LABEL_182;
      }
      (*(void (**)(char *, uint64_t))(v429 + 8))(v408, v353);
    }
    uint64_t v430 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v408, v409, *(void *)(*(void *)(v430 - 8) + 64));
    goto LABEL_170;
  }
  if (v402)
  {
LABEL_152:
    uint64_t v406 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v398, v399, *(void *)(*(void *)(v406 - 8) + 64));
    goto LABEL_183;
  }
  *uint64_t v398 = *v399;
  v398[1] = v399[1];
  v398[2] = v399[2];
  v398[3] = v399[3];
  v398[4] = v399[4];
  v398[5] = v399[5];
  v398[6] = v399[6];
  v398[7] = v399[7];
  v398[8] = v399[8];
  v398[9] = v399[9];
  v398[10] = v399[10];
  v398[11] = v399[11];
  uint64_t v403 = v400[11];
  v1257 = (char *)v398 + v403;
  uint64_t v404 = (char *)v399 + v403;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v404, 1, v1261))
  {
    uint64_t v405 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v1257, v404, *(void *)(*(void *)(v405 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v1257, v404, v1261);
    __swift_storeEnumTagSinglePayload((uint64_t)v1257, 0, 1, v1261);
  }
  uint64_t v5 = v1259;
  uint64_t v53 = v1260;
  uint64_t v412 = v400[12];
  uint64_t v413 = (void *)((char *)v398 + v412);
  uint64_t v414 = (void *)((char *)v399 + v412);
  void *v413 = *v414;
  v413[1] = v414[1];
  *(void *)((char *)v398 + v400[13]) = *(void *)((char *)v399 + v400[13]);
  uint64_t v415 = v400[14];
  uint64_t v416 = (char *)v398 + v415;
  uint64_t v417 = (char *)v399 + v415;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v417, 1, v1261))
  {
    uint64_t v418 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v416, v417, *(void *)(*(void *)(v418 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v416, v417, v1261);
    __swift_storeEnumTagSinglePayload((uint64_t)v416, 0, 1, v1261);
  }
  *(void *)((char *)v398 + v400[15]) = *(void *)((char *)v399 + v400[15]);
  *(void *)((char *)v398 + v400[16]) = *(void *)((char *)v399 + v400[16]);
  uint64_t v419 = v400[17];
  uint64_t v420 = (void *)((char *)v398 + v419);
  uint64_t v421 = (void *)((char *)v399 + v419);
  void *v420 = *v421;
  v420[1] = v421[1];
  *(void *)((char *)v398 + v400[18]) = *(void *)((char *)v399 + v400[18]);
  *(void *)((char *)v398 + v400[19]) = *(void *)((char *)v399 + v400[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, (uint64_t)v400);
  uint64_t v353 = v1261;
LABEL_183:
  uint64_t v460 = v53[22];
  uint64_t v461 = (void *)((char *)v5 + v460);
  int v462 = (void *)((char *)v4 + v460);
  uint64_t v463 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  int v464 = __swift_getEnumTagSinglePayload((uint64_t)v461, 1, (uint64_t)v463);
  int v465 = __swift_getEnumTagSinglePayload((uint64_t)v462, 1, (uint64_t)v463);
  if (!v464)
  {
    if (v465)
    {
      outlined destroy of EmailDocument((uint64_t)v461, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
      goto LABEL_189;
    }
    void *v461 = *v462;
    v461[1] = v462[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v461[2] = v462[2];
    v461[3] = v462[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v461[4] = v462[4];
    v461[5] = v462[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v461[6] = v462[6];
    v461[7] = v462[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v471 = v463[8];
    uint64_t v472 = (char *)v461 + v471;
    uint64_t v473 = (char *)v462 + v471;
    int v474 = __swift_getEnumTagSinglePayload((uint64_t)v461 + v471, 1, v1255);
    int v475 = __swift_getEnumTagSinglePayload((uint64_t)v473, 1, v1255);
    if (v474)
    {
      if (!v475)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v472, v473, v1255);
        __swift_storeEnumTagSinglePayload((uint64_t)v472, 0, 1, v1255);
        goto LABEL_208;
      }
    }
    else
    {
      uint64_t v538 = *(void *)(v1255 - 8);
      if (!v475)
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 24))(v472, v473, v1255);
LABEL_208:
        uint64_t v53 = v1260;
        uint64_t v540 = v463[9];
        uint64_t v541 = (void *)((char *)v461 + v540);
        uint64_t v542 = (void *)((char *)v462 + v540);
        void *v541 = *v542;
        v541[1] = v542[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v543 = v463[10];
        uint64_t v544 = (void *)((char *)v461 + v543);
        int v545 = (void *)((char *)v462 + v543);
        void *v544 = *v545;
        v544[1] = v545[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v546 = v463[11];
        uint64_t v547 = (void *)((char *)v461 + v546);
        uint64_t v548 = (void *)((char *)v462 + v546);
        *uint64_t v547 = *v548;
        v547[1] = v548[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v549 = v463[12];
        uint64_t v550 = (char *)v461 + v549;
        uint64_t v551 = (char *)v462 + v549;
        int v552 = __swift_getEnumTagSinglePayload((uint64_t)v461 + v549, 1, v353);
        int v553 = __swift_getEnumTagSinglePayload((uint64_t)v551, 1, v353);
        if (v552)
        {
          if (!v553)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16))(v550, v551, v353);
            __swift_storeEnumTagSinglePayload((uint64_t)v550, 0, 1, v353);
            goto LABEL_214;
          }
        }
        else
        {
          uint64_t v554 = *(void *)(v353 - 8);
          if (!v553)
          {
            (*(void (**)(char *, char *, uint64_t))(v554 + 24))(v550, v551, v353);
LABEL_214:
            uint64_t v556 = v463[13];
            uint64_t v557 = (char *)v461 + v556;
            uint64_t v558 = (char *)v462 + v556;
            int v559 = __swift_getEnumTagSinglePayload((uint64_t)v461 + v556, 1, v353);
            int v560 = __swift_getEnumTagSinglePayload((uint64_t)v558, 1, v353);
            if (v559)
            {
              if (!v560)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16))(v557, v558, v353);
                __swift_storeEnumTagSinglePayload((uint64_t)v557, 0, 1, v353);
LABEL_220:
                uint64_t v563 = v463[14];
                uint64_t v564 = (char *)v461 + v563;
                uint64_t v565 = (char *)v462 + v563;
                uint64_t v566 = *(void *)v565;
                v564[8] = v565[8];
                *(void *)uint64_t v564 = v566;
                uint64_t v567 = v463[15];
                int v568 = (void *)((char *)v461 + v567);
                uint64_t v569 = (void *)((char *)v462 + v567);
                *int v568 = *v569;
                v568[1] = v569[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v570 = v463[16];
                long long v571 = (void *)((char *)v461 + v570);
                long long v572 = (void *)((char *)v462 + v570);
                void *v571 = *v572;
                v571[1] = v572[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v573 = v463[17];
                uint64_t v574 = (void *)((char *)v461 + v573);
                long long v575 = (void *)((char *)v462 + v573);
                void *v574 = *v575;
                v574[1] = v575[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v576 = v463[18];
                uint64_t v577 = (void *)((char *)v461 + v576);
                uint64_t v578 = (void *)((char *)v462 + v576);
                *uint64_t v577 = *v578;
                v577[1] = v578[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v579 = v463[19];
                uint64_t v580 = (void *)((char *)v461 + v579);
                uint64_t v581 = (void *)((char *)v462 + v579);
                void *v580 = *v581;
                v580[1] = v581[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_221;
              }
            }
            else
            {
              uint64_t v561 = *(void *)(v353 - 8);
              if (!v560)
              {
                (*(void (**)(char *, char *, uint64_t))(v561 + 24))(v557, v558, v353);
                goto LABEL_220;
              }
              (*(void (**)(char *, uint64_t))(v561 + 8))(v557, v353);
            }
            uint64_t v562 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v557, v558, *(void *)(*(void *)(v562 - 8) + 64));
            goto LABEL_220;
          }
          (*(void (**)(char *, uint64_t))(v554 + 8))(v550, v353);
        }
        uint64_t v555 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v550, v551, *(void *)(*(void *)(v555 - 8) + 64));
        goto LABEL_214;
      }
      (*(void (**)(char *, uint64_t))(v538 + 8))(v472, v1255);
    }
    uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v472, v473, *(void *)(*(void *)(v539 - 8) + 64));
    goto LABEL_208;
  }
  if (v465)
  {
LABEL_189:
    uint64_t v470 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v461, v462, *(void *)(*(void *)(v470 - 8) + 64));
    goto LABEL_221;
  }
  void *v461 = *v462;
  v461[1] = v462[1];
  v461[2] = v462[2];
  v461[3] = v462[3];
  v461[4] = v462[4];
  v461[5] = v462[5];
  v461[6] = v462[6];
  v461[7] = v462[7];
  uint64_t v466 = v463[8];
  uint64_t v467 = (char *)v461 + v466;
  uint64_t v468 = (char *)v462 + v466;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v468, 1, v1255))
  {
    uint64_t v469 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v467, v468, *(void *)(*(void *)(v469 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v467, v468, v1255);
    __swift_storeEnumTagSinglePayload((uint64_t)v467, 0, 1, v1255);
  }
  uint64_t v53 = v1260;
  uint64_t v476 = v463[9];
  uint64_t v477 = (void *)((char *)v461 + v476);
  int v478 = (void *)((char *)v462 + v476);
  void *v477 = *v478;
  v477[1] = v478[1];
  uint64_t v479 = v463[10];
  uint64_t v480 = (void *)((char *)v461 + v479);
  uint64_t v481 = (void *)((char *)v462 + v479);
  *uint64_t v480 = *v481;
  v480[1] = v481[1];
  uint64_t v482 = v463[11];
  uint64_t v483 = (void *)((char *)v461 + v482);
  uint64_t v484 = (void *)((char *)v462 + v482);
  *uint64_t v483 = *v484;
  v483[1] = v484[1];
  uint64_t v485 = v463[12];
  uint64_t v486 = (char *)v461 + v485;
  uint64_t v487 = (char *)v462 + v485;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v487, 1, v1261))
  {
    uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v486, v487, *(void *)(*(void *)(v488 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v486, v487, v1261);
    __swift_storeEnumTagSinglePayload((uint64_t)v486, 0, 1, v1261);
  }
  uint64_t v489 = v463[13];
  uint64_t v490 = (char *)v461 + v489;
  uint64_t v491 = (char *)v462 + v489;
  if (__swift_getEnumTagSinglePayload((uint64_t)v462 + v489, 1, v1261))
  {
    uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v490, v491, *(void *)(*(void *)(v492 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v490, v491, v1261);
    __swift_storeEnumTagSinglePayload((uint64_t)v490, 0, 1, v1261);
  }
  uint64_t v493 = v463[14];
  uint64_t v494 = (char *)v461 + v493;
  uint64_t v495 = (char *)v462 + v493;
  uint64_t v496 = *(void *)v495;
  v494[8] = v495[8];
  *(void *)uint64_t v494 = v496;
  uint64_t v497 = v463[15];
  uint64_t v498 = (void *)((char *)v461 + v497);
  uint64_t v499 = (void *)((char *)v462 + v497);
  *uint64_t v498 = *v499;
  v498[1] = v499[1];
  uint64_t v500 = v463[16];
  uint64_t v501 = (void *)((char *)v461 + v500);
  uint64_t v502 = (void *)((char *)v462 + v500);
  void *v501 = *v502;
  v501[1] = v502[1];
  uint64_t v503 = v463[17];
  uint64_t v504 = (void *)((char *)v461 + v503);
  uint64_t v505 = (void *)((char *)v462 + v503);
  void *v504 = *v505;
  v504[1] = v505[1];
  uint64_t v506 = v463[18];
  uint64_t v507 = (void *)((char *)v461 + v506);
  uint64_t v508 = (void *)((char *)v462 + v506);
  *uint64_t v507 = *v508;
  v507[1] = v508[1];
  uint64_t v509 = v463[19];
  size_t v510 = (void *)((char *)v461 + v509);
  uint64_t v511 = (void *)((char *)v462 + v509);
  *size_t v510 = *v511;
  v510[1] = v511[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v461, 0, 1, (uint64_t)v463);
LABEL_221:
  uint64_t v582 = v53[23];
  uint64_t v583 = (void *)((char *)v5 + v582);
  uint64_t v584 = (void *)((char *)v4 + v582);
  uint64_t v585 = *(void *)((char *)v5 + v582 + 8);
  uint64_t v586 = *(void *)((char *)v4 + v582 + 8);
  if (!v585)
  {
    if (v586)
    {
      *uint64_t v583 = *v584;
      v583[1] = v584[1];
      v583[2] = v584[2];
      v583[3] = v584[3];
      v583[4] = v584[4];
      v583[5] = v584[5];
      v583[6] = v584[6];
      v583[7] = v584[7];
      v583[8] = v584[8];
      v583[9] = v584[9];
      v583[10] = v584[10];
      v583[11] = v584[11];
      v583[12] = v584[12];
      v583[13] = v584[13];
      v583[14] = v584[14];
      v583[15] = v584[15];
      v583[16] = v584[16];
      v583[17] = v584[17];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v5 = v1259;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v5;
    }
LABEL_227:
    memcpy(v583, v584, 0x90uLL);
    return v5;
  }
  if (!v586)
  {
    outlined destroy of PreExtractedBreadcrumb((uint64_t)v583);
    goto LABEL_227;
  }
  *uint64_t v583 = *v584;
  v583[1] = v584[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[2] = v584[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[3] = v584[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[4] = v584[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[5] = v584[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[6] = v584[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[7] = v584[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[8] = v584[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[9] = v584[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[10] = v584[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[11] = v584[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[12] = v584[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[13] = v584[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[14] = v584[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[15] = v584[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[16] = v584[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v583[17] = v584[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

_OWORD *initializeWithTake for MobileSMSDocument(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[10];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[11];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v18 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v19 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  uint64_t v24 = a3[19];
  *(_OWORD *)((char *)a1 + a3[18]) = *(_OWORD *)((char *)a2 + a3[18]);
  uint64_t v25 = (_OWORD *)((char *)a1 + v24);
  uint64_t v26 = (_OWORD *)((char *)a2 + v24);
  uint64_t v27 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v296 = v16;
    *uint64_t v25 = *v26;
    uint64_t v29 = v27[5];
    uint64_t v30 = (_OWORD *)((char *)v25 + v29);
    uint64_t v31 = (_OWORD *)((char *)v26 + v29);
    uint64_t v32 = type metadata accessor for RentalCarReservation(0);
    uint64_t v297 = v26;
    uint64_t v298 = v27;
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      long long v34 = v31[1];
      _OWORD *v30 = *v31;
      v30[1] = v34;
      long long v35 = v31[3];
      v30[2] = v31[2];
      v30[3] = v35;
      long long v36 = v31[5];
      v30[4] = v31[4];
      v30[5] = v36;
      long long v37 = v31[7];
      v30[6] = v31[6];
      v30[7] = v37;
      *((unsigned char *)v30 + 128) = *((unsigned char *)v31 + 128);
      *(_WORD *)((char *)v30 + 129) = *(_WORD *)((char *)v31 + 129);
      *((void *)v30 + 17) = *((void *)v31 + 17);
      long long v38 = v31[10];
      v30[9] = v31[9];
      v30[10] = v38;
      long long v39 = v31[12];
      v30[11] = v31[11];
      v30[12] = v39;
      long long v40 = v31[14];
      v30[13] = v31[13];
      v30[14] = v40;
      v30[15] = v31[15];
      *((void *)v30 + 32) = *((void *)v31 + 32);
      *(_OWORD *)((char *)v30 + 264) = *(_OWORD *)((char *)v31 + 264);
      *(_OWORD *)((char *)v30 + 280) = *(_OWORD *)((char *)v31 + 280);
      *(_OWORD *)((char *)v30 + 296) = *(_OWORD *)((char *)v31 + 296);
      *(_OWORD *)((char *)v30 + 312) = *(_OWORD *)((char *)v31 + 312);
      *(_OWORD *)((char *)v30 + 328) = *(_OWORD *)((char *)v31 + 328);
      *(_OWORD *)((char *)v30 + 344) = *(_OWORD *)((char *)v31 + 344);
      *(_OWORD *)((char *)v30 + 360) = *(_OWORD *)((char *)v31 + 360);
      *((unsigned char *)v30 + 384) = *((unsigned char *)v31 + 384);
      *((void *)v30 + 47) = *((void *)v31 + 47);
      *(_OWORD *)((char *)v30 + 392) = *(_OWORD *)((char *)v31 + 392);
      *(_OWORD *)((char *)v30 + 408) = *(_OWORD *)((char *)v31 + 408);
      uint64_t v41 = *(int *)(v32 + 140);
      uint64_t v42 = (char *)v30 + v41;
      int v43 = (char *)v31 + v41;
      if (__swift_getEnumTagSinglePayload((uint64_t)v31 + v41, 1, v11))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v42, v43, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v11);
      }
      uint64_t v45 = *(int *)(v32 + 144);
      uint64_t v46 = (char *)v30 + v45;
      uint64_t v47 = (char *)v31 + v45;
      if (__swift_getEnumTagSinglePayload((uint64_t)v31 + v45, 1, v11))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v46, v47, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v11);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v49 = v27[6];
    size_t v50 = (_OWORD *)((char *)v25 + v49);
    uint64_t v51 = (_OWORD *)((char *)v26 + v49);
    uint64_t v52 = type metadata accessor for TicketedTransportation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
      memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      long long v54 = v51[1];
      *size_t v50 = *v51;
      v50[1] = v54;
      long long v55 = v51[3];
      v50[2] = v51[2];
      v50[3] = v55;
      long long v56 = v51[5];
      v50[4] = v51[4];
      v50[5] = v56;
      long long v57 = v51[7];
      v50[6] = v51[6];
      v50[7] = v57;
      *((unsigned char *)v50 + 128) = *((unsigned char *)v51 + 128);
      *(_WORD *)((char *)v50 + 129) = *(_WORD *)((char *)v51 + 129);
      *((void *)v50 + 17) = *((void *)v51 + 17);
      long long v58 = v51[10];
      v50[9] = v51[9];
      v50[10] = v58;
      long long v59 = v51[12];
      v50[11] = v51[11];
      v50[12] = v59;
      *((void *)v50 + 26) = *((void *)v51 + 26);
      *(_OWORD *)((char *)v50 + 216) = *(_OWORD *)((char *)v51 + 216);
      *(_OWORD *)((char *)v50 + 232) = *(_OWORD *)((char *)v51 + 232);
      *(_OWORD *)((char *)v50 + 248) = *(_OWORD *)((char *)v51 + 248);
      *(_OWORD *)((char *)v50 + 264) = *(_OWORD *)((char *)v51 + 264);
      *((unsigned char *)v50 + 296) = *((unsigned char *)v51 + 296);
      uint64_t v60 = *((void *)v51 + 36);
      *((void *)v50 + 35) = *((void *)v51 + 35);
      *((void *)v50 + 36) = v60;
      uint64_t v61 = *(int *)(v52 + 112);
      uint64_t v62 = (char *)v50 + v61;
      uint64_t v63 = (char *)v51 + v61;
      if (__swift_getEnumTagSinglePayload((uint64_t)v51 + v61, 1, v11))
      {
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v62, v63, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v11);
      }
      uint64_t v65 = *(int *)(v52 + 116);
      uint64_t v66 = (char *)v50 + v65;
      uint64_t v67 = (char *)v51 + v65;
      if (__swift_getEnumTagSinglePayload((uint64_t)v51 + v65, 1, v11))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v66, v67, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v11);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v69 = v27[7];
    uint64_t v70 = (_OWORD *)((char *)v25 + v69);
    uint64_t v71 = (_OWORD *)((char *)v26 + v69);
    uint64_t v72 = (int *)type metadata accessor for TicketedShow(0);
    uint64_t v295 = (uint64_t)v25;
    if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, (uint64_t)v72))
    {
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
      memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      long long v74 = v71[1];
      *uint64_t v70 = *v71;
      v70[1] = v74;
      long long v75 = v71[3];
      v70[2] = v71[2];
      v70[3] = v75;
      long long v76 = v71[5];
      v70[4] = v71[4];
      v70[5] = v76;
      long long v77 = v71[7];
      v70[6] = v71[6];
      v70[7] = v77;
      *((unsigned char *)v70 + 128) = *((unsigned char *)v71 + 128);
      *(_WORD *)((char *)v70 + 129) = *(_WORD *)((char *)v71 + 129);
      *((void *)v70 + 17) = *((void *)v71 + 17);
      long long v78 = v71[10];
      v70[9] = v71[9];
      v70[10] = v78;
      long long v79 = v71[12];
      v70[11] = v71[11];
      v70[12] = v79;
      long long v80 = v71[14];
      v70[13] = v71[13];
      v70[14] = v80;
      *((void *)v70 + 30) = *((void *)v71 + 30);
      *(_OWORD *)((char *)v70 + 248) = *(_OWORD *)((char *)v71 + 248);
      *(_OWORD *)((char *)v70 + 264) = *(_OWORD *)((char *)v71 + 264);
      *((unsigned char *)v70 + 296) = *((unsigned char *)v71 + 296);
      uint64_t v81 = *((void *)v71 + 36);
      *((void *)v70 + 35) = *((void *)v71 + 35);
      *((void *)v70 + 36) = v81;
      v70[19] = v71[19];
      uint64_t v82 = v72[29];
      uint64_t v83 = (char *)v70 + v82;
      uint64_t v84 = (char *)v71 + v82;
      if (__swift_getEnumTagSinglePayload((uint64_t)v71 + v82, 1, v296))
      {
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v83, v84, v296);
        __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v296);
      }
      *(_OWORD *)((char *)v70 + v72[30]) = *(_OWORD *)((char *)v71 + v72[30]);
      uint64_t v86 = v72[31];
      uint64_t v87 = (char *)v70 + v86;
      uint64_t v88 = (char *)v71 + v86;
      if (__swift_getEnumTagSinglePayload((uint64_t)v71 + v86, 1, v11))
      {
        uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v87, v88, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v11);
      }
      uint64_t v90 = v72[32];
      uint64_t v91 = (char *)v70 + v90;
      uint64_t v92 = (char *)v71 + v90;
      if (__swift_getEnumTagSinglePayload((uint64_t)v71 + v90, 1, v11))
      {
        uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v91, v92, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v11);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, (uint64_t)v72);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v94 = v27[8];
    uint64_t v95 = (_OWORD *)((char *)v25 + v94);
    uint64_t v96 = (_OWORD *)((char *)v26 + v94);
    uint64_t v97 = type metadata accessor for Appointment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
    {
      uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
      memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      long long v99 = v96[1];
      *uint64_t v95 = *v96;
      v95[1] = v99;
      long long v100 = v96[3];
      v95[2] = v96[2];
      v95[3] = v100;
      long long v101 = v96[5];
      v95[4] = v96[4];
      v95[5] = v101;
      long long v102 = v96[7];
      v95[6] = v96[6];
      v95[7] = v102;
      *((unsigned char *)v95 + 128) = *((unsigned char *)v96 + 128);
      *(_WORD *)((char *)v95 + 129) = *(_WORD *)((char *)v96 + 129);
      *((void *)v95 + 17) = *((void *)v96 + 17);
      long long v103 = v96[10];
      v95[9] = v96[9];
      v95[10] = v103;
      long long v104 = v96[12];
      v95[11] = v96[11];
      v95[12] = v104;
      long long v105 = v96[14];
      v95[13] = v96[13];
      v95[14] = v105;
      long long v106 = v96[16];
      v95[15] = v96[15];
      v95[16] = v106;
      *((unsigned char *)v95 + 280) = *((unsigned char *)v96 + 280);
      *((void *)v95 + 34) = *((void *)v96 + 34);
      v95[18] = v96[18];
      uint64_t v107 = *(int *)(v97 + 108);
      uint64_t v108 = (char *)v95 + v107;
      uint64_t v109 = (char *)v96 + v107;
      if (__swift_getEnumTagSinglePayload((uint64_t)v96 + v107, 1, v11))
      {
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v108, v109, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v11);
      }
      uint64_t v111 = *(int *)(v97 + 112);
      uint64_t v112 = (char *)v95 + v111;
      uint64_t v113 = (char *)v96 + v111;
      if (__swift_getEnumTagSinglePayload((uint64_t)v96 + v111, 1, v11))
      {
        uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v112, v113, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v11);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v115 = v27[9];
    uint64_t v116 = (_OWORD *)((char *)v25 + v115);
    uint64_t v117 = (_OWORD *)((char *)v26 + v115);
    uint64_t v118 = (int *)type metadata accessor for Party(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, (uint64_t)v118))
    {
      uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
      memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      long long v120 = v117[1];
      *uint64_t v116 = *v117;
      v116[1] = v120;
      long long v121 = v117[3];
      v116[2] = v117[2];
      v116[3] = v121;
      long long v122 = v117[5];
      v116[4] = v117[4];
      v116[5] = v122;
      long long v123 = v117[7];
      v116[6] = v117[6];
      v116[7] = v123;
      *((unsigned char *)v116 + 128) = *((unsigned char *)v117 + 128);
      *(_WORD *)((char *)v116 + 129) = *(_WORD *)((char *)v117 + 129);
      *((void *)v116 + 17) = *((void *)v117 + 17);
      long long v124 = v117[10];
      v116[9] = v117[9];
      v116[10] = v124;
      long long v125 = v117[12];
      v116[11] = v117[11];
      v116[12] = v125;
      long long v126 = v117[14];
      v116[13] = v117[13];
      v116[14] = v126;
      v116[15] = v117[15];
      uint64_t v127 = v118[24];
      uint64_t v128 = (char *)v116 + v127;
      uint64_t v129 = (char *)v117 + v127;
      if (__swift_getEnumTagSinglePayload((uint64_t)v117 + v127, 1, v11))
      {
        uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v128, v129, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v11);
      }
      uint64_t v131 = v118[25];
      uint64_t v132 = (char *)v116 + v131;
      uint64_t v133 = (char *)v117 + v131;
      if (__swift_getEnumTagSinglePayload((uint64_t)v117 + v131, 1, v11))
      {
        uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v132, v133, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v11);
      }
      uint64_t v135 = v118[26];
      uint64_t v136 = (char *)v116 + v135;
      uint64_t v137 = (char *)v117 + v135;
      if (__swift_getEnumTagSinglePayload((uint64_t)v117 + v135, 1, v296))
      {
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v136, v137, v296);
        __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v296);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, (uint64_t)v118);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v139 = v27[10];
    uint64_t v140 = (_OWORD *)((char *)v25 + v139);
    uint64_t v141 = (_OWORD *)((char *)v26 + v139);
    uint64_t v142 = (int *)type metadata accessor for Trip(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, (uint64_t)v142))
    {
      uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
      memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
    }
    else
    {
      long long v144 = v141[1];
      *uint64_t v140 = *v141;
      v140[1] = v144;
      long long v145 = v141[3];
      v140[2] = v141[2];
      v140[3] = v145;
      long long v146 = v141[5];
      v140[4] = v141[4];
      v140[5] = v146;
      long long v147 = v141[7];
      v140[6] = v141[6];
      v140[7] = v147;
      *((unsigned char *)v140 + 128) = *((unsigned char *)v141 + 128);
      *(_WORD *)((char *)v140 + 129) = *(_WORD *)((char *)v141 + 129);
      *((void *)v140 + 17) = *((void *)v141 + 17);
      long long v148 = v141[10];
      v140[9] = v141[9];
      v140[10] = v148;
      long long v149 = v141[12];
      v140[11] = v141[11];
      v140[12] = v149;
      v140[13] = v141[13];
      uint64_t v150 = v142[22];
      uint64_t v151 = (char *)v140 + v150;
      uint64_t v152 = (char *)v141 + v150;
      if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v150, 1, v11))
      {
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v151, v152, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v11);
      }
      uint64_t v154 = v142[23];
      uint64_t v155 = (char *)v140 + v154;
      uint64_t v156 = (char *)v141 + v154;
      if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v154, 1, v11))
      {
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v155, v156, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v11);
      }
      uint64_t v158 = v142[24];
      uint64_t v159 = (char *)v140 + v158;
      uint64_t v160 = (char *)v141 + v158;
      *(void *)uint64_t v159 = *(void *)v160;
      v159[8] = v160[8];
      uint64_t v161 = v142[25];
      uint64_t v162 = (char *)v140 + v161;
      uint64_t v163 = (char *)v141 + v161;
      if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v161, 1, v296))
      {
        uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v162, v163, v296);
        __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v296);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, (uint64_t)v142);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v165 = v27[11];
    uint64_t v166 = (_OWORD *)((char *)v25 + v165);
    uint64_t v167 = (_OWORD *)((char *)v26 + v165);
    uint64_t v168 = (int *)type metadata accessor for FlightReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, (uint64_t)v168))
    {
      uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
      memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
    }
    else
    {
      long long v170 = v167[1];
      *uint64_t v166 = *v167;
      v166[1] = v170;
      long long v171 = v167[3];
      v166[2] = v167[2];
      v166[3] = v171;
      long long v172 = v167[5];
      v166[4] = v167[4];
      v166[5] = v172;
      *((unsigned char *)v166 + 96) = *((unsigned char *)v167 + 96);
      *(_OWORD *)((char *)v166 + 104) = *(_OWORD *)((char *)v167 + 104);
      uint64_t v173 = v168[13];
      uint64_t v174 = (char *)v166 + v173;
      uint64_t v175 = (char *)v167 + v173;
      if (__swift_getEnumTagSinglePayload((uint64_t)v167 + v173, 1, v296))
      {
        uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v174, v175, v296);
        __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v296);
      }
      uint64_t v177 = v168[14];
      uint64_t v178 = (char *)v166 + v177;
      uint64_t v179 = (char *)v167 + v177;
      uint64_t v294 = v11;
      if (__swift_getEnumTagSinglePayload((uint64_t)v167 + v177, 1, v296))
      {
        uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v178, v179, v296);
        __swift_storeEnumTagSinglePayload((uint64_t)v178, 0, 1, v296);
      }
      *(_OWORD *)((char *)v166 + v168[15]) = *(_OWORD *)((char *)v167 + v168[15]);
      *(_OWORD *)((char *)v166 + v168[16]) = *(_OWORD *)((char *)v167 + v168[16]);
      *(_OWORD *)((char *)v166 + v168[17]) = *(_OWORD *)((char *)v167 + v168[17]);
      uint64_t v181 = v168[18];
      uint64_t v182 = (char *)v166 + v181;
      uint64_t v183 = (char *)v167 + v181;
      uint64_t v184 = type metadata accessor for DateComponents();
      uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32);
      v185(v182, v183, v184);
      v185((char *)v166 + v168[19], (char *)v167 + v168[19], v184);
      *(_OWORD *)((char *)v166 + v168[20]) = *(_OWORD *)((char *)v167 + v168[20]);
      *(_OWORD *)((char *)v166 + v168[21]) = *(_OWORD *)((char *)v167 + v168[21]);
      *(_OWORD *)((char *)v166 + v168[22]) = *(_OWORD *)((char *)v167 + v168[22]);
      *(_OWORD *)((char *)v166 + v168[23]) = *(_OWORD *)((char *)v167 + v168[23]);
      *(_OWORD *)((char *)v166 + v168[24]) = *(_OWORD *)((char *)v167 + v168[24]);
      *(_OWORD *)((char *)v166 + v168[25]) = *(_OWORD *)((char *)v167 + v168[25]);
      *(_OWORD *)((char *)v166 + v168[26]) = *(_OWORD *)((char *)v167 + v168[26]);
      *(_OWORD *)((char *)v166 + v168[27]) = *(_OWORD *)((char *)v167 + v168[27]);
      *(_OWORD *)((char *)v166 + v168[28]) = *(_OWORD *)((char *)v167 + v168[28]);
      *(_OWORD *)((char *)v166 + v168[29]) = *(_OWORD *)((char *)v167 + v168[29]);
      *(_OWORD *)((char *)v166 + v168[30]) = *(_OWORD *)((char *)v167 + v168[30]);
      *(_OWORD *)((char *)v166 + v168[31]) = *(_OWORD *)((char *)v167 + v168[31]);
      *(_OWORD *)((char *)v166 + v168[32]) = *(_OWORD *)((char *)v167 + v168[32]);
      *(void *)((char *)v166 + v168[33]) = *(void *)((char *)v167 + v168[33]);
      *(void *)((char *)v166 + v168[34]) = *(void *)((char *)v167 + v168[34]);
      *(_OWORD *)((char *)v166 + v168[35]) = *(_OWORD *)((char *)v167 + v168[35]);
      *(_OWORD *)((char *)v166 + v168[36]) = *(_OWORD *)((char *)v167 + v168[36]);
      *(_OWORD *)((char *)v166 + v168[37]) = *(_OWORD *)((char *)v167 + v168[37]);
      uint64_t v186 = v168[38];
      uint64_t v187 = (char *)v166 + v186;
      uint64_t v188 = (char *)v167 + v186;
      uint64_t v11 = v294;
      if (__swift_getEnumTagSinglePayload((uint64_t)v167 + v186, 1, v294))
      {
        uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 32))(v187, v188, v294);
        __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v294);
      }
      uint64_t v25 = (_OWORD *)v295;
      *(_OWORD *)((char *)v166 + v168[39]) = *(_OWORD *)((char *)v167 + v168[39]);
      *(_OWORD *)((char *)v166 + v168[40]) = *(_OWORD *)((char *)v167 + v168[40]);
      uint64_t v190 = v168[41];
      uint64_t v191 = (char *)v166 + v190;
      uint64_t v192 = (char *)v167 + v190;
      *(void *)uint64_t v191 = *(void *)v192;
      v191[8] = v192[8];
      *(_OWORD *)((char *)v166 + v168[42]) = *(_OWORD *)((char *)v167 + v168[42]);
      uint64_t v193 = v168[43];
      uint64_t v194 = (char *)v166 + v193;
      uint64_t v195 = (char *)v167 + v193;
      *(_OWORD *)uint64_t v194 = *(_OWORD *)v195;
      *(void *)(v194 + 13) = *(void *)(v195 + 13);
      *(_OWORD *)((char *)v166 + v168[44]) = *(_OWORD *)((char *)v167 + v168[44]);
      *(_OWORD *)((char *)v166 + v168[45]) = *(_OWORD *)((char *)v167 + v168[45]);
      *(_OWORD *)((char *)v166 + v168[46]) = *(_OWORD *)((char *)v167 + v168[46]);
      *(_OWORD *)((char *)v166 + v168[47]) = *(_OWORD *)((char *)v167 + v168[47]);
      __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, (uint64_t)v168);
      uint64_t v26 = v297;
      uint64_t v27 = v298;
    }
    uint64_t v196 = v27[12];
    uint64_t v197 = (_OWORD *)((char *)v25 + v196);
    uint64_t v198 = (_OWORD *)((char *)v26 + v196);
    uint64_t v199 = (int *)type metadata accessor for HotelReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v198, 1, (uint64_t)v199))
    {
      uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
      memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
    }
    else
    {
      long long v201 = v198[1];
      *uint64_t v197 = *v198;
      v197[1] = v201;
      long long v202 = v198[3];
      v197[2] = v198[2];
      v197[3] = v202;
      long long v203 = v198[5];
      v197[4] = v198[4];
      v197[5] = v203;
      *((unsigned char *)v197 + 96) = *((unsigned char *)v198 + 96);
      *(_OWORD *)((char *)v197 + 104) = *(_OWORD *)((char *)v198 + 104);
      *(_OWORD *)((char *)v197 + 120) = *(_OWORD *)((char *)v198 + 120);
      uint64_t v204 = v199[14];
      uint64_t v205 = (char *)v197 + v204;
      uint64_t v206 = (char *)v198 + v204;
      uint64_t v207 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v206, 1, v207))
      {
        uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 32))(v205, v206, v207);
        __swift_storeEnumTagSinglePayload((uint64_t)v205, 0, 1, v207);
      }
      uint64_t v209 = v199[15];
      uint64_t v210 = (char *)v197 + v209;
      uint64_t v211 = (char *)v198 + v209;
      if (__swift_getEnumTagSinglePayload((uint64_t)v198 + v209, 1, v207))
      {
        uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v210, v211, *(void *)(*(void *)(v212 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 32))(v210, v211, v207);
        __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v207);
      }
      uint64_t v27 = v298;
      *(_OWORD *)((char *)v197 + v199[16]) = *(_OWORD *)((char *)v198 + v199[16]);
      *(_OWORD *)((char *)v197 + v199[17]) = *(_OWORD *)((char *)v198 + v199[17]);
      *(_OWORD *)((char *)v197 + v199[18]) = *(_OWORD *)((char *)v198 + v199[18]);
      *(_OWORD *)((char *)v197 + v199[19]) = *(_OWORD *)((char *)v198 + v199[19]);
      *(_OWORD *)((char *)v197 + v199[20]) = *(_OWORD *)((char *)v198 + v199[20]);
      *(void *)((char *)v197 + v199[21]) = *(void *)((char *)v198 + v199[21]);
      *(void *)((char *)v197 + v199[22]) = *(void *)((char *)v198 + v199[22]);
      uint64_t v213 = v199[23];
      uint64_t v214 = (char *)v197 + v213;
      uint64_t v215 = (char *)v198 + v213;
      v214[8] = v215[8];
      *(void *)uint64_t v214 = *(void *)v215;
      uint64_t v216 = v199[24];
      uint64_t v217 = (char *)v197 + v216;
      uint64_t v218 = (char *)v198 + v216;
      v217[8] = v218[8];
      *(void *)uint64_t v217 = *(void *)v218;
      *(_OWORD *)((char *)v197 + v199[25]) = *(_OWORD *)((char *)v198 + v199[25]);
      *(_OWORD *)((char *)v197 + v199[26]) = *(_OWORD *)((char *)v198 + v199[26]);
      *(_OWORD *)((char *)v197 + v199[27]) = *(_OWORD *)((char *)v198 + v199[27]);
      *(_OWORD *)((char *)v197 + v199[28]) = *(_OWORD *)((char *)v198 + v199[28]);
      uint64_t v219 = v199[29];
      uint64_t v220 = (char *)v197 + v219;
      uint64_t v221 = (char *)v198 + v219;
      *(void *)uint64_t v220 = *(void *)v221;
      v220[8] = v221[8];
      __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, (uint64_t)v199);
      uint64_t v25 = (_OWORD *)v295;
      uint64_t v26 = v297;
    }
    uint64_t v222 = v27[13];
    uint64_t v223 = (_OWORD *)((char *)v25 + v222);
    uint64_t v224 = (_OWORD *)((char *)v26 + v222);
    uint64_t v225 = (int *)type metadata accessor for RestaurantReservation(0);
    uint64_t v16 = v296;
    if (__swift_getEnumTagSinglePayload((uint64_t)v224, 1, (uint64_t)v225))
    {
      uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
      memcpy(v223, v224, *(void *)(*(void *)(v226 - 8) + 64));
    }
    else
    {
      long long v227 = v224[1];
      *uint64_t v223 = *v224;
      v223[1] = v227;
      long long v228 = v224[3];
      v223[2] = v224[2];
      v223[3] = v228;
      long long v229 = v224[5];
      v223[4] = v224[4];
      v223[5] = v229;
      *((unsigned char *)v223 + 96) = *((unsigned char *)v224 + 96);
      *(_OWORD *)((char *)v223 + 104) = *(_OWORD *)((char *)v224 + 104);
      *(_OWORD *)((char *)v223 + 120) = *(_OWORD *)((char *)v224 + 120);
      uint64_t v230 = v225[14];
      uint64_t v231 = (char *)v223 + v230;
      uint64_t v232 = (char *)v224 + v230;
      uint64_t v233 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v232, 1, v233))
      {
        uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v231, v232, v233);
        __swift_storeEnumTagSinglePayload((uint64_t)v231, 0, 1, v233);
      }
      uint64_t v16 = v296;
      *(_OWORD *)((char *)v223 + v225[15]) = *(_OWORD *)((char *)v224 + v225[15]);
      *(_OWORD *)((char *)v223 + v225[16]) = *(_OWORD *)((char *)v224 + v225[16]);
      *(_OWORD *)((char *)v223 + v225[17]) = *(_OWORD *)((char *)v224 + v225[17]);
      *(_OWORD *)((char *)v223 + v225[18]) = *(_OWORD *)((char *)v224 + v225[18]);
      *(_OWORD *)((char *)v223 + v225[19]) = *(_OWORD *)((char *)v224 + v225[19]);
      *(void *)((char *)v223 + v225[20]) = *(void *)((char *)v224 + v225[20]);
      *(_OWORD *)((char *)v223 + v225[21]) = *(_OWORD *)((char *)v224 + v225[21]);
      *(_OWORD *)((char *)v223 + v225[22]) = *(_OWORD *)((char *)v224 + v225[22]);
      *(_OWORD *)((char *)v223 + v225[23]) = *(_OWORD *)((char *)v224 + v225[23]);
      __swift_storeEnumTagSinglePayload((uint64_t)v223, 0, 1, (uint64_t)v225);
      uint64_t v27 = v298;
    }
    __swift_storeEnumTagSinglePayload(v295, 0, 1, (uint64_t)v27);
  }
  uint64_t v235 = a3[20];
  uint64_t v236 = (_OWORD *)((char *)a1 + v235);
  uint64_t v237 = (_OWORD *)((char *)a2 + v235);
  uint64_t v238 = (int *)type metadata accessor for PreExtractedCard(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v238))
  {
    uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
  }
  else
  {
    long long v240 = v237[1];
    *uint64_t v236 = *v237;
    v236[1] = v240;
    long long v241 = v237[3];
    v236[2] = v237[2];
    v236[3] = v241;
    long long v242 = v237[5];
    v236[4] = v237[4];
    v236[5] = v242;
    uint64_t v243 = v238[10];
    long long v244 = (char *)v236 + v243;
    uint64_t v245 = (char *)v237 + v243;
    if (__swift_getEnumTagSinglePayload((uint64_t)v237 + v243, 1, v11))
    {
      uint64_t v246 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v244, v245, *(void *)(*(void *)(v246 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v244, v245, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v11);
    }
    uint64_t v247 = v238[11];
    uint64_t v248 = (char *)v236 + v247;
    uint64_t v249 = (char *)v237 + v247;
    if (__swift_getEnumTagSinglePayload((uint64_t)v237 + v247, 1, v11))
    {
      uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v248, v249, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v11);
    }
    *(_OWORD *)((char *)v236 + v238[12]) = *(_OWORD *)((char *)v237 + v238[12]);
    *(_OWORD *)((char *)v236 + v238[13]) = *(_OWORD *)((char *)v237 + v238[13]);
    *(_OWORD *)((char *)v236 + v238[14]) = *(_OWORD *)((char *)v237 + v238[14]);
    uint64_t v251 = v238[15];
    uint64_t v252 = (char *)v236 + v251;
    uint64_t v253 = (char *)v237 + v251;
    if (__swift_getEnumTagSinglePayload((uint64_t)v237 + v251, 1, v11))
    {
      uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v252, v253, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v252, 0, 1, v11);
    }
    *(_OWORD *)((char *)v236 + v238[16]) = *(_OWORD *)((char *)v237 + v238[16]);
    *(_OWORD *)((char *)v236 + v238[17]) = *(_OWORD *)((char *)v237 + v238[17]);
    *(_OWORD *)((char *)v236 + v238[18]) = *(_OWORD *)((char *)v237 + v238[18]);
    *(_OWORD *)((char *)v236 + v238[19]) = *(_OWORD *)((char *)v237 + v238[19]);
    *(_OWORD *)((char *)v236 + v238[20]) = *(_OWORD *)((char *)v237 + v238[20]);
    *(_OWORD *)((char *)v236 + v238[21]) = *(_OWORD *)((char *)v237 + v238[21]);
    *(_OWORD *)((char *)v236 + v238[22]) = *(_OWORD *)((char *)v237 + v238[22]);
    *(_OWORD *)((char *)v236 + v238[23]) = *(_OWORD *)((char *)v237 + v238[23]);
    __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, (uint64_t)v238);
  }
  uint64_t v255 = a3[21];
  uint64_t v256 = (_OWORD *)((char *)a1 + v255);
  uint64_t v257 = (_OWORD *)((char *)a2 + v255);
  uint64_t v258 = (int *)type metadata accessor for PreExtractedContact(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v257, 1, (uint64_t)v258))
  {
    uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v256, v257, *(void *)(*(void *)(v259 - 8) + 64));
  }
  else
  {
    long long v260 = v257[1];
    *uint64_t v256 = *v257;
    v256[1] = v260;
    long long v261 = v257[3];
    v256[2] = v257[2];
    v256[3] = v261;
    long long v262 = v257[5];
    v256[4] = v257[4];
    v256[5] = v262;
    uint64_t v263 = v258[11];
    uint64_t v264 = (char *)v256 + v263;
    uint64_t v265 = (char *)v257 + v263;
    if (__swift_getEnumTagSinglePayload((uint64_t)v257 + v263, 1, v11))
    {
      uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v264, v265, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v264, 0, 1, v11);
    }
    *(_OWORD *)((char *)v256 + v258[12]) = *(_OWORD *)((char *)v257 + v258[12]);
    *(void *)((char *)v256 + v258[13]) = *(void *)((char *)v257 + v258[13]);
    uint64_t v267 = v258[14];
    uint64_t v268 = (char *)v256 + v267;
    uint64_t v269 = (char *)v257 + v267;
    if (__swift_getEnumTagSinglePayload((uint64_t)v257 + v267, 1, v11))
    {
      uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v268, v269, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v268, 0, 1, v11);
    }
    *(void *)((char *)v256 + v258[15]) = *(void *)((char *)v257 + v258[15]);
    *(void *)((char *)v256 + v258[16]) = *(void *)((char *)v257 + v258[16]);
    *(_OWORD *)((char *)v256 + v258[17]) = *(_OWORD *)((char *)v257 + v258[17]);
    *(void *)((char *)v256 + v258[18]) = *(void *)((char *)v257 + v258[18]);
    *(void *)((char *)v256 + v258[19]) = *(void *)((char *)v257 + v258[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v256, 0, 1, (uint64_t)v258);
  }
  uint64_t v271 = a3[22];
  uint64_t v272 = (_OWORD *)((char *)a1 + v271);
  uint64_t v273 = (_OWORD *)((char *)a2 + v271);
  uint64_t v274 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v273, 1, (uint64_t)v274))
  {
    uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v272, v273, *(void *)(*(void *)(v275 - 8) + 64));
  }
  else
  {
    long long v276 = v273[1];
    _OWORD *v272 = *v273;
    v272[1] = v276;
    long long v277 = v273[3];
    v272[2] = v273[2];
    v272[3] = v277;
    uint64_t v278 = v274[8];
    uint64_t v279 = (char *)v272 + v278;
    uint64_t v280 = (char *)v273 + v278;
    if (__swift_getEnumTagSinglePayload((uint64_t)v273 + v278, 1, v16))
    {
      uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v279, v280, *(void *)(*(void *)(v281 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v279, v280, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v279, 0, 1, v16);
    }
    *(_OWORD *)((char *)v272 + v274[9]) = *(_OWORD *)((char *)v273 + v274[9]);
    *(_OWORD *)((char *)v272 + v274[10]) = *(_OWORD *)((char *)v273 + v274[10]);
    *(_OWORD *)((char *)v272 + v274[11]) = *(_OWORD *)((char *)v273 + v274[11]);
    uint64_t v282 = v274[12];
    uint64_t v283 = (char *)v272 + v282;
    uint64_t v284 = (char *)v273 + v282;
    if (__swift_getEnumTagSinglePayload((uint64_t)v273 + v282, 1, v11))
    {
      uint64_t v285 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v283, v284, *(void *)(*(void *)(v285 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v283, v284, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v283, 0, 1, v11);
    }
    uint64_t v286 = v274[13];
    uint64_t v287 = (char *)v272 + v286;
    uint64_t v288 = (char *)v273 + v286;
    if (__swift_getEnumTagSinglePayload((uint64_t)v273 + v286, 1, v11))
    {
      uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v287, v288, *(void *)(*(void *)(v289 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v287, v288, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v287, 0, 1, v11);
    }
    uint64_t v290 = v274[14];
    uint64_t v291 = (char *)v272 + v290;
    uint64_t v292 = (char *)v273 + v290;
    *(void *)uint64_t v291 = *(void *)v292;
    v291[8] = v292[8];
    *(_OWORD *)((char *)v272 + v274[15]) = *(_OWORD *)((char *)v273 + v274[15]);
    *(_OWORD *)((char *)v272 + v274[16]) = *(_OWORD *)((char *)v273 + v274[16]);
    *(_OWORD *)((char *)v272 + v274[17]) = *(_OWORD *)((char *)v273 + v274[17]);
    *(_OWORD *)((char *)v272 + v274[18]) = *(_OWORD *)((char *)v273 + v274[18]);
    *(_OWORD *)((char *)v272 + v274[19]) = *(_OWORD *)((char *)v273 + v274[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v272, 0, 1, (uint64_t)v274);
  }
  memcpy((char *)a1 + a3[23], (char *)a2 + a3[23], 0x90uLL);
  return a1;
}

void *assignWithTake for MobileSMSDocument(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[10];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  uint64_t v1257 = v13;
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for URL();
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)(v21 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v19, v20, v21);
LABEL_13:
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[13];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[17];
  long long v37 = (void *)((char *)a1 + v36);
  long long v38 = (void *)((char *)a2 + v36);
  if (*(void *)((char *)a1 + v36))
  {
    if (*v38)
    {
      *long long v37 = *v38;
      swift_bridgeObjectRelease();
      v37[1] = v38[1];
      swift_bridgeObjectRelease();
      v37[2] = v38[2];
      swift_bridgeObjectRelease();
      v37[3] = v38[3];
      swift_bridgeObjectRelease();
      v37[4] = v38[4];
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    outlined destroy of DataDetectorResults((uint64_t)v37);
  }
  long long v39 = *((_OWORD *)v38 + 1);
  *(_OWORD *)long long v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v39;
  v37[4] = v38[4];
LABEL_18:
  uint64_t v40 = a3[18];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[19];
  uint64_t v46 = (uint64_t)a1 + v45;
  uint64_t v47 = (uint64_t)a2 + v45;
  uint64_t v48 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  int v49 = __swift_getEnumTagSinglePayload(v46, 1, (uint64_t)v48);
  int v50 = __swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v48);
  uint64_t v1253 = v48;
  uint64_t v1255 = v21;
  uint64_t v1256 = v47;
  if (v49)
  {
    if (!v50)
    {
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      uint64_t v51 = v48[5];
      uint64_t v52 = (_OWORD *)(v46 + v51);
      uint64_t v53 = (_OWORD *)(v47 + v51);
      uint64_t v54 = type metadata accessor for RentalCarReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        long long v77 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v77;
        long long v78 = v53[3];
        v52[2] = v53[2];
        v52[3] = v78;
        long long v79 = v53[5];
        v52[4] = v53[4];
        v52[5] = v79;
        long long v80 = v53[7];
        v52[6] = v53[6];
        v52[7] = v80;
        *((unsigned char *)v52 + 128) = *((unsigned char *)v53 + 128);
        *(_WORD *)((char *)v52 + 129) = *(_WORD *)((char *)v53 + 129);
        *((void *)v52 + 17) = *((void *)v53 + 17);
        long long v81 = v53[10];
        v52[9] = v53[9];
        v52[10] = v81;
        long long v82 = v53[12];
        v52[11] = v53[11];
        v52[12] = v82;
        long long v83 = v53[14];
        v52[13] = v53[13];
        v52[14] = v83;
        v52[15] = v53[15];
        *((void *)v52 + 32) = *((void *)v53 + 32);
        *(_OWORD *)((char *)v52 + 264) = *(_OWORD *)((char *)v53 + 264);
        *(_OWORD *)((char *)v52 + 280) = *(_OWORD *)((char *)v53 + 280);
        *(_OWORD *)((char *)v52 + 296) = *(_OWORD *)((char *)v53 + 296);
        *(_OWORD *)((char *)v52 + 312) = *(_OWORD *)((char *)v53 + 312);
        *(_OWORD *)((char *)v52 + 328) = *(_OWORD *)((char *)v53 + 328);
        *(_OWORD *)((char *)v52 + 344) = *(_OWORD *)((char *)v53 + 344);
        *(_OWORD *)((char *)v52 + 360) = *(_OWORD *)((char *)v53 + 360);
        *((unsigned char *)v52 + 384) = *((unsigned char *)v53 + 384);
        *((void *)v52 + 47) = *((void *)v53 + 47);
        *(_OWORD *)((char *)v52 + 392) = *(_OWORD *)((char *)v53 + 392);
        *(_OWORD *)((char *)v52 + 408) = *(_OWORD *)((char *)v53 + 408);
        uint64_t v84 = *(int *)(v54 + 140);
        uint64_t v85 = (char *)v52 + v84;
        uint64_t v86 = (char *)v53 + v84;
        if (__swift_getEnumTagSinglePayload((uint64_t)v53 + v84, 1, v1257))
        {
          uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v85, v86, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v1257);
        }
        uint64_t v89 = *(int *)(v54 + 144);
        uint64_t v90 = (char *)v52 + v89;
        uint64_t v91 = (char *)v53 + v89;
        if (__swift_getEnumTagSinglePayload((uint64_t)v53 + v89, 1, v1257))
        {
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v90, v91, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v1257);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
        uint64_t v48 = v1253;
      }
      uint64_t v93 = v48[6];
      uint64_t v94 = (_OWORD *)(v46 + v93);
      uint64_t v95 = (_OWORD *)(v1256 + v93);
      uint64_t v96 = type metadata accessor for TicketedTransportation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
      {
        uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
        memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        long long v98 = v95[1];
        *uint64_t v94 = *v95;
        v94[1] = v98;
        long long v99 = v95[3];
        v94[2] = v95[2];
        v94[3] = v99;
        long long v100 = v95[5];
        v94[4] = v95[4];
        v94[5] = v100;
        long long v101 = v95[7];
        v94[6] = v95[6];
        v94[7] = v101;
        *((unsigned char *)v94 + 128) = *((unsigned char *)v95 + 128);
        *(_WORD *)((char *)v94 + 129) = *(_WORD *)((char *)v95 + 129);
        *((void *)v94 + 17) = *((void *)v95 + 17);
        long long v102 = v95[10];
        v94[9] = v95[9];
        v94[10] = v102;
        long long v103 = v95[12];
        v94[11] = v95[11];
        v94[12] = v103;
        *((void *)v94 + 26) = *((void *)v95 + 26);
        *(_OWORD *)((char *)v94 + 216) = *(_OWORD *)((char *)v95 + 216);
        *(_OWORD *)((char *)v94 + 232) = *(_OWORD *)((char *)v95 + 232);
        *(_OWORD *)((char *)v94 + 248) = *(_OWORD *)((char *)v95 + 248);
        *(_OWORD *)((char *)v94 + 264) = *(_OWORD *)((char *)v95 + 264);
        *((unsigned char *)v94 + 296) = *((unsigned char *)v95 + 296);
        uint64_t v104 = *((void *)v95 + 36);
        *((void *)v94 + 35) = *((void *)v95 + 35);
        *((void *)v94 + 36) = v104;
        uint64_t v105 = *(int *)(v96 + 112);
        long long v106 = (char *)v94 + v105;
        uint64_t v107 = (char *)v95 + v105;
        if (__swift_getEnumTagSinglePayload((uint64_t)v95 + v105, 1, v1257))
        {
          uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v106, v107, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v1257);
        }
        uint64_t v109 = *(int *)(v96 + 116);
        uint64_t v110 = (char *)v94 + v109;
        uint64_t v111 = (char *)v95 + v109;
        if (__swift_getEnumTagSinglePayload((uint64_t)v95 + v109, 1, v1257))
        {
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v110, v111, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v1257);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v96);
        uint64_t v48 = v1253;
      }
      uint64_t v113 = v1256;
      uint64_t v114 = v48[7];
      uint64_t v115 = (_OWORD *)(v46 + v114);
      uint64_t v116 = (_OWORD *)(v1256 + v114);
      uint64_t v117 = (int *)type metadata accessor for TicketedShow(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, (uint64_t)v117))
      {
        uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
        memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
      }
      else
      {
        long long v119 = v116[1];
        _OWORD *v115 = *v116;
        v115[1] = v119;
        long long v120 = v116[3];
        v115[2] = v116[2];
        v115[3] = v120;
        long long v121 = v116[5];
        v115[4] = v116[4];
        v115[5] = v121;
        long long v122 = v116[7];
        v115[6] = v116[6];
        v115[7] = v122;
        *((unsigned char *)v115 + 128) = *((unsigned char *)v116 + 128);
        *(_WORD *)((char *)v115 + 129) = *(_WORD *)((char *)v116 + 129);
        *((void *)v115 + 17) = *((void *)v116 + 17);
        long long v123 = v116[10];
        v115[9] = v116[9];
        v115[10] = v123;
        long long v124 = v116[12];
        v115[11] = v116[11];
        v115[12] = v124;
        long long v125 = v116[14];
        v115[13] = v116[13];
        v115[14] = v125;
        *((void *)v115 + 30) = *((void *)v116 + 30);
        *(_OWORD *)((char *)v115 + 248) = *(_OWORD *)((char *)v116 + 248);
        *(_OWORD *)((char *)v115 + 264) = *(_OWORD *)((char *)v116 + 264);
        *((unsigned char *)v115 + 296) = *((unsigned char *)v116 + 296);
        uint64_t v126 = *((void *)v116 + 36);
        *((void *)v115 + 35) = *((void *)v116 + 35);
        *((void *)v115 + 36) = v126;
        v115[19] = v116[19];
        uint64_t v127 = v117[29];
        uint64_t v128 = (char *)v115 + v127;
        uint64_t v129 = (char *)v116 + v127;
        if (__swift_getEnumTagSinglePayload((uint64_t)v116 + v127, 1, v1255))
        {
          uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 32))(v128, v129, v1255);
          __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v1255);
        }
        *(_OWORD *)((char *)v115 + v117[30]) = *(_OWORD *)((char *)v116 + v117[30]);
        uint64_t v131 = v117[31];
        uint64_t v132 = (char *)v115 + v131;
        uint64_t v133 = (char *)v116 + v131;
        uint64_t v113 = v1256;
        if (__swift_getEnumTagSinglePayload((uint64_t)v116 + v131, 1, v1257))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v132, v133, v1257);
          uint64_t v113 = v1256;
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v1257);
        }
        uint64_t v135 = v117[32];
        uint64_t v136 = (char *)v115 + v135;
        uint64_t v137 = (char *)v116 + v135;
        if (__swift_getEnumTagSinglePayload((uint64_t)v116 + v135, 1, v1257))
        {
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v136, v137, v1257);
          uint64_t v113 = v1256;
          __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v1257);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, (uint64_t)v117);
        uint64_t v48 = v1253;
      }
      uint64_t v139 = v48[8];
      uint64_t v140 = (_OWORD *)(v46 + v139);
      uint64_t v141 = (_OWORD *)(v113 + v139);
      uint64_t v142 = type metadata accessor for Appointment(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v142))
      {
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
        memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        long long v144 = v141[1];
        *uint64_t v140 = *v141;
        v140[1] = v144;
        long long v145 = v141[3];
        v140[2] = v141[2];
        v140[3] = v145;
        long long v146 = v141[5];
        v140[4] = v141[4];
        v140[5] = v146;
        long long v147 = v141[7];
        v140[6] = v141[6];
        v140[7] = v147;
        *((unsigned char *)v140 + 128) = *((unsigned char *)v141 + 128);
        *(_WORD *)((char *)v140 + 129) = *(_WORD *)((char *)v141 + 129);
        *((void *)v140 + 17) = *((void *)v141 + 17);
        long long v148 = v141[10];
        v140[9] = v141[9];
        v140[10] = v148;
        long long v149 = v141[12];
        v140[11] = v141[11];
        v140[12] = v149;
        long long v150 = v141[14];
        v140[13] = v141[13];
        v140[14] = v150;
        long long v151 = v141[16];
        v140[15] = v141[15];
        v140[16] = v151;
        *((unsigned char *)v140 + 280) = *((unsigned char *)v141 + 280);
        *((void *)v140 + 34) = *((void *)v141 + 34);
        v140[18] = v141[18];
        uint64_t v152 = *(int *)(v142 + 108);
        uint64_t v153 = (char *)v140 + v152;
        uint64_t v154 = (char *)v141 + v152;
        if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v152, 1, v1257))
        {
          uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v153, v154, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v153, 0, 1, v1257);
        }
        uint64_t v156 = *(int *)(v142 + 112);
        uint64_t v157 = (char *)v140 + v156;
        uint64_t v158 = (char *)v141 + v156;
        if (__swift_getEnumTagSinglePayload((uint64_t)v141 + v156, 1, v1257))
        {
          uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v157, v158, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v157, 0, 1, v1257);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, v142);
        uint64_t v48 = v1253;
      }
      uint64_t v160 = v1256;
      uint64_t v161 = v48[9];
      uint64_t v162 = (_OWORD *)(v46 + v161);
      uint64_t v163 = (_OWORD *)(v1256 + v161);
      uint64_t v164 = (int *)type metadata accessor for Party(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, (uint64_t)v164))
      {
        uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
        memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
      }
      else
      {
        long long v166 = v163[1];
        *uint64_t v162 = *v163;
        v162[1] = v166;
        long long v167 = v163[3];
        v162[2] = v163[2];
        v162[3] = v167;
        long long v168 = v163[5];
        v162[4] = v163[4];
        v162[5] = v168;
        long long v169 = v163[7];
        v162[6] = v163[6];
        v162[7] = v169;
        *((unsigned char *)v162 + 128) = *((unsigned char *)v163 + 128);
        *(_WORD *)((char *)v162 + 129) = *(_WORD *)((char *)v163 + 129);
        *((void *)v162 + 17) = *((void *)v163 + 17);
        long long v170 = v163[10];
        v162[9] = v163[9];
        v162[10] = v170;
        long long v171 = v163[12];
        v162[11] = v163[11];
        v162[12] = v171;
        long long v172 = v163[14];
        v162[13] = v163[13];
        v162[14] = v172;
        v162[15] = v163[15];
        uint64_t v173 = v164[24];
        uint64_t v174 = (char *)v162 + v173;
        uint64_t v175 = (char *)v163 + v173;
        if (__swift_getEnumTagSinglePayload((uint64_t)v163 + v173, 1, v1257))
        {
          uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v174, v175, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v1257);
        }
        uint64_t v177 = v164[25];
        uint64_t v178 = (char *)v162 + v177;
        uint64_t v179 = (char *)v163 + v177;
        if (__swift_getEnumTagSinglePayload((uint64_t)v163 + v177, 1, v1257))
        {
          uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v178, v179, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v178, 0, 1, v1257);
        }
        uint64_t v181 = v164[26];
        uint64_t v182 = (char *)v162 + v181;
        uint64_t v183 = (char *)v163 + v181;
        if (__swift_getEnumTagSinglePayload((uint64_t)v163 + v181, 1, v1255))
        {
          uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 32))(v182, v183, v1255);
          __swift_storeEnumTagSinglePayload((uint64_t)v182, 0, 1, v1255);
        }
        uint64_t v160 = v1256;
        __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, (uint64_t)v164);
        uint64_t v48 = v1253;
      }
      uint64_t v185 = v48[10];
      uint64_t v186 = (_OWORD *)(v46 + v185);
      uint64_t v187 = (_OWORD *)(v160 + v185);
      uint64_t v188 = (int *)type metadata accessor for Trip(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v187, 1, (uint64_t)v188))
      {
        uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
        memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
      }
      else
      {
        long long v190 = v187[1];
        *uint64_t v186 = *v187;
        v186[1] = v190;
        long long v191 = v187[3];
        v186[2] = v187[2];
        v186[3] = v191;
        long long v192 = v187[5];
        v186[4] = v187[4];
        v186[5] = v192;
        long long v193 = v187[7];
        v186[6] = v187[6];
        v186[7] = v193;
        *((unsigned char *)v186 + 128) = *((unsigned char *)v187 + 128);
        *(_WORD *)((char *)v186 + 129) = *(_WORD *)((char *)v187 + 129);
        *((void *)v186 + 17) = *((void *)v187 + 17);
        long long v194 = v187[10];
        v186[9] = v187[9];
        v186[10] = v194;
        long long v195 = v187[12];
        v186[11] = v187[11];
        v186[12] = v195;
        v186[13] = v187[13];
        uint64_t v196 = v188[22];
        uint64_t v197 = (char *)v186 + v196;
        uint64_t v198 = (char *)v187 + v196;
        if (__swift_getEnumTagSinglePayload((uint64_t)v187 + v196, 1, v1257))
        {
          uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v197, v198, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v1257);
        }
        uint64_t v200 = v188[23];
        long long v201 = (char *)v186 + v200;
        long long v202 = (char *)v187 + v200;
        if (__swift_getEnumTagSinglePayload((uint64_t)v187 + v200, 1, v1257))
        {
          uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v201, v202, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v201, 0, 1, v1257);
        }
        uint64_t v204 = v188[24];
        uint64_t v205 = (char *)v186 + v204;
        uint64_t v206 = (char *)v187 + v204;
        *(void *)uint64_t v205 = *(void *)v206;
        v205[8] = v206[8];
        uint64_t v207 = v188[25];
        uint64_t v208 = (char *)v186 + v207;
        uint64_t v209 = (char *)v187 + v207;
        if (__swift_getEnumTagSinglePayload((uint64_t)v187 + v207, 1, v1255))
        {
          uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 32))(v208, v209, v1255);
          __swift_storeEnumTagSinglePayload((uint64_t)v208, 0, 1, v1255);
        }
        uint64_t v160 = v1256;
        __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, (uint64_t)v188);
        uint64_t v48 = v1253;
      }
      uint64_t v211 = v48[11];
      uint64_t v212 = (_OWORD *)(v46 + v211);
      uint64_t v213 = (_OWORD *)(v160 + v211);
      uint64_t v214 = (int *)type metadata accessor for FlightReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v213, 1, (uint64_t)v214))
      {
        uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
      }
      else
      {
        long long v216 = v213[1];
        _OWORD *v212 = *v213;
        v212[1] = v216;
        long long v217 = v213[3];
        v212[2] = v213[2];
        v212[3] = v217;
        long long v218 = v213[5];
        v212[4] = v213[4];
        v212[5] = v218;
        *((unsigned char *)v212 + 96) = *((unsigned char *)v213 + 96);
        *(_OWORD *)((char *)v212 + 104) = *(_OWORD *)((char *)v213 + 104);
        uint64_t v219 = v214[13];
        uint64_t v220 = (char *)v212 + v219;
        uint64_t v221 = (char *)v213 + v219;
        if (__swift_getEnumTagSinglePayload((uint64_t)v213 + v219, 1, v1255))
        {
          uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 32))(v220, v221, v1255);
          __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v1255);
        }
        uint64_t v223 = v214[14];
        uint64_t v224 = (char *)v212 + v223;
        uint64_t v225 = (char *)v213 + v223;
        uint64_t v1250 = a3;
        if (__swift_getEnumTagSinglePayload((uint64_t)v213 + v223, 1, v1255))
        {
          uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v224, v225, *(void *)(*(void *)(v226 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 32))(v224, v225, v1255);
          __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v1255);
        }
        *(_OWORD *)((char *)v212 + v214[15]) = *(_OWORD *)((char *)v213 + v214[15]);
        *(_OWORD *)((char *)v212 + v214[16]) = *(_OWORD *)((char *)v213 + v214[16]);
        *(_OWORD *)((char *)v212 + v214[17]) = *(_OWORD *)((char *)v213 + v214[17]);
        uint64_t v227 = v214[18];
        long long v228 = (char *)v212 + v227;
        long long v229 = (char *)v213 + v227;
        uint64_t v230 = type metadata accessor for DateComponents();
        uint64_t v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 32);
        v231(v228, v229, v230);
        v231((char *)v212 + v214[19], (char *)v213 + v214[19], v230);
        *(_OWORD *)((char *)v212 + v214[20]) = *(_OWORD *)((char *)v213 + v214[20]);
        *(_OWORD *)((char *)v212 + v214[21]) = *(_OWORD *)((char *)v213 + v214[21]);
        *(_OWORD *)((char *)v212 + v214[22]) = *(_OWORD *)((char *)v213 + v214[22]);
        *(_OWORD *)((char *)v212 + v214[23]) = *(_OWORD *)((char *)v213 + v214[23]);
        *(_OWORD *)((char *)v212 + v214[24]) = *(_OWORD *)((char *)v213 + v214[24]);
        *(_OWORD *)((char *)v212 + v214[25]) = *(_OWORD *)((char *)v213 + v214[25]);
        *(_OWORD *)((char *)v212 + v214[26]) = *(_OWORD *)((char *)v213 + v214[26]);
        *(_OWORD *)((char *)v212 + v214[27]) = *(_OWORD *)((char *)v213 + v214[27]);
        *(_OWORD *)((char *)v212 + v214[28]) = *(_OWORD *)((char *)v213 + v214[28]);
        *(_OWORD *)((char *)v212 + v214[29]) = *(_OWORD *)((char *)v213 + v214[29]);
        *(_OWORD *)((char *)v212 + v214[30]) = *(_OWORD *)((char *)v213 + v214[30]);
        *(_OWORD *)((char *)v212 + v214[31]) = *(_OWORD *)((char *)v213 + v214[31]);
        *(_OWORD *)((char *)v212 + v214[32]) = *(_OWORD *)((char *)v213 + v214[32]);
        *(void *)((char *)v212 + v214[33]) = *(void *)((char *)v213 + v214[33]);
        *(void *)((char *)v212 + v214[34]) = *(void *)((char *)v213 + v214[34]);
        *(_OWORD *)((char *)v212 + v214[35]) = *(_OWORD *)((char *)v213 + v214[35]);
        *(_OWORD *)((char *)v212 + v214[36]) = *(_OWORD *)((char *)v213 + v214[36]);
        *(_OWORD *)((char *)v212 + v214[37]) = *(_OWORD *)((char *)v213 + v214[37]);
        uint64_t v232 = v214[38];
        uint64_t v233 = (char *)v212 + v232;
        uint64_t v234 = (char *)v213 + v232;
        if (__swift_getEnumTagSinglePayload((uint64_t)v213 + v232, 1, v1257))
        {
          uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v233, v234, *(void *)(*(void *)(v235 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v233, v234, v1257);
          __swift_storeEnumTagSinglePayload((uint64_t)v233, 0, 1, v1257);
        }
        a3 = v1250;
        uint64_t v160 = v1256;
        *(_OWORD *)((char *)v212 + v214[39]) = *(_OWORD *)((char *)v213 + v214[39]);
        *(_OWORD *)((char *)v212 + v214[40]) = *(_OWORD *)((char *)v213 + v214[40]);
        uint64_t v236 = v214[41];
        uint64_t v237 = (char *)v212 + v236;
        uint64_t v238 = (char *)v213 + v236;
        *(void *)uint64_t v237 = *(void *)v238;
        v237[8] = v238[8];
        *(_OWORD *)((char *)v212 + v214[42]) = *(_OWORD *)((char *)v213 + v214[42]);
        uint64_t v239 = v214[43];
        long long v240 = (char *)v212 + v239;
        long long v241 = (char *)v213 + v239;
        *(_OWORD *)long long v240 = *(_OWORD *)v241;
        *(void *)(v240 + 13) = *(void *)(v241 + 13);
        *(_OWORD *)((char *)v212 + v214[44]) = *(_OWORD *)((char *)v213 + v214[44]);
        *(_OWORD *)((char *)v212 + v214[45]) = *(_OWORD *)((char *)v213 + v214[45]);
        *(_OWORD *)((char *)v212 + v214[46]) = *(_OWORD *)((char *)v213 + v214[46]);
        *(_OWORD *)((char *)v212 + v214[47]) = *(_OWORD *)((char *)v213 + v214[47]);
        __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, (uint64_t)v214);
        uint64_t v48 = v1253;
      }
      uint64_t v242 = v48[12];
      uint64_t v243 = (_OWORD *)(v46 + v242);
      long long v244 = (_OWORD *)(v160 + v242);
      uint64_t v245 = (int *)type metadata accessor for HotelReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v244, 1, (uint64_t)v245))
      {
        uint64_t v246 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
        memcpy(v243, v244, *(void *)(*(void *)(v246 - 8) + 64));
        uint64_t v21 = v1255;
      }
      else
      {
        long long v247 = v244[1];
        *uint64_t v243 = *v244;
        v243[1] = v247;
        long long v248 = v244[3];
        v243[2] = v244[2];
        v243[3] = v248;
        long long v249 = v244[5];
        v243[4] = v244[4];
        v243[5] = v249;
        *((unsigned char *)v243 + 96) = *((unsigned char *)v244 + 96);
        *(_OWORD *)((char *)v243 + 104) = *(_OWORD *)((char *)v244 + 104);
        *(_OWORD *)((char *)v243 + 120) = *(_OWORD *)((char *)v244 + 120);
        uint64_t v250 = v245[14];
        uint64_t v251 = (char *)v243 + v250;
        uint64_t v252 = (char *)v244 + v250;
        uint64_t v253 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v252, 1, v253))
        {
          uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 32))(v251, v252, v253);
          __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v253);
        }
        uint64_t v255 = v245[15];
        uint64_t v256 = (char *)v243 + v255;
        uint64_t v257 = (char *)v244 + v255;
        if (__swift_getEnumTagSinglePayload((uint64_t)v244 + v255, 1, v253))
        {
          uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v256, v257, *(void *)(*(void *)(v258 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 32))(v256, v257, v253);
          __swift_storeEnumTagSinglePayload((uint64_t)v256, 0, 1, v253);
        }
        uint64_t v160 = v1256;
        *(_OWORD *)((char *)v243 + v245[16]) = *(_OWORD *)((char *)v244 + v245[16]);
        *(_OWORD *)((char *)v243 + v245[17]) = *(_OWORD *)((char *)v244 + v245[17]);
        *(_OWORD *)((char *)v243 + v245[18]) = *(_OWORD *)((char *)v244 + v245[18]);
        *(_OWORD *)((char *)v243 + v245[19]) = *(_OWORD *)((char *)v244 + v245[19]);
        *(_OWORD *)((char *)v243 + v245[20]) = *(_OWORD *)((char *)v244 + v245[20]);
        *(void *)((char *)v243 + v245[21]) = *(void *)((char *)v244 + v245[21]);
        *(void *)((char *)v243 + v245[22]) = *(void *)((char *)v244 + v245[22]);
        uint64_t v259 = v245[23];
        long long v260 = (char *)v243 + v259;
        long long v261 = (char *)v244 + v259;
        v260[8] = v261[8];
        *(void *)long long v260 = *(void *)v261;
        uint64_t v262 = v245[24];
        uint64_t v263 = (char *)v243 + v262;
        uint64_t v264 = (char *)v244 + v262;
        v263[8] = v264[8];
        *(void *)uint64_t v263 = *(void *)v264;
        *(_OWORD *)((char *)v243 + v245[25]) = *(_OWORD *)((char *)v244 + v245[25]);
        *(_OWORD *)((char *)v243 + v245[26]) = *(_OWORD *)((char *)v244 + v245[26]);
        *(_OWORD *)((char *)v243 + v245[27]) = *(_OWORD *)((char *)v244 + v245[27]);
        *(_OWORD *)((char *)v243 + v245[28]) = *(_OWORD *)((char *)v244 + v245[28]);
        uint64_t v265 = v245[29];
        uint64_t v266 = (char *)v243 + v265;
        uint64_t v267 = (char *)v244 + v265;
        *(void *)uint64_t v266 = *(void *)v267;
        v266[8] = v267[8];
        __swift_storeEnumTagSinglePayload((uint64_t)v243, 0, 1, (uint64_t)v245);
        uint64_t v48 = v1253;
        uint64_t v21 = v1255;
      }
      uint64_t v268 = v48[13];
      uint64_t v269 = (_OWORD *)(v46 + v268);
      uint64_t v270 = (_OWORD *)(v160 + v268);
      uint64_t v271 = (int *)type metadata accessor for RestaurantReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v270, 1, (uint64_t)v271))
      {
        uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
        memcpy(v269, v270, *(void *)(*(void *)(v272 - 8) + 64));
      }
      else
      {
        long long v273 = v270[1];
        _OWORD *v269 = *v270;
        v269[1] = v273;
        long long v274 = v270[3];
        v269[2] = v270[2];
        v269[3] = v274;
        long long v275 = v270[5];
        v269[4] = v270[4];
        v269[5] = v275;
        *((unsigned char *)v269 + 96) = *((unsigned char *)v270 + 96);
        *(_OWORD *)((char *)v269 + 104) = *(_OWORD *)((char *)v270 + 104);
        *(_OWORD *)((char *)v269 + 120) = *(_OWORD *)((char *)v270 + 120);
        uint64_t v276 = v271[14];
        long long v277 = (char *)v269 + v276;
        uint64_t v278 = (char *)v270 + v276;
        uint64_t v279 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v279))
        {
          uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 32))(v277, v278, v279);
          __swift_storeEnumTagSinglePayload((uint64_t)v277, 0, 1, v279);
        }
        uint64_t v21 = v1255;
        *(_OWORD *)((char *)v269 + v271[15]) = *(_OWORD *)((char *)v270 + v271[15]);
        *(_OWORD *)((char *)v269 + v271[16]) = *(_OWORD *)((char *)v270 + v271[16]);
        *(_OWORD *)((char *)v269 + v271[17]) = *(_OWORD *)((char *)v270 + v271[17]);
        *(_OWORD *)((char *)v269 + v271[18]) = *(_OWORD *)((char *)v270 + v271[18]);
        *(_OWORD *)((char *)v269 + v271[19]) = *(_OWORD *)((char *)v270 + v271[19]);
        *(void *)((char *)v269 + v271[20]) = *(void *)((char *)v270 + v271[20]);
        *(_OWORD *)((char *)v269 + v271[21]) = *(_OWORD *)((char *)v270 + v271[21]);
        *(_OWORD *)((char *)v269 + v271[22]) = *(_OWORD *)((char *)v270 + v271[22]);
        *(_OWORD *)((char *)v269 + v271[23]) = *(_OWORD *)((char *)v270 + v271[23]);
        __swift_storeEnumTagSinglePayload((uint64_t)v269, 0, 1, (uint64_t)v271);
        uint64_t v48 = v1253;
      }
      uint64_t v281 = v46;
      goto LABEL_124;
    }
    goto LABEL_24;
  }
  if (v50)
  {
    outlined destroy of EmailDocument(v46, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
LABEL_24:
    size_t v56 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?)
                                - 8)
                    + 64);
    long long v57 = (void *)v46;
    long long v58 = (const void *)v47;
LABEL_25:
    memcpy(v57, v58, v56);
    goto LABEL_125;
  }
  uint64_t v59 = *(void *)(v47 + 8);
  *(void *)uint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = v59;
  swift_bridgeObjectRelease();
  uint64_t v60 = v48[5];
  uint64_t v61 = v46 + v60;
  uint64_t v62 = v47 + v60;
  uint64_t v63 = type metadata accessor for RentalCarReservation(0);
  int v64 = __swift_getEnumTagSinglePayload(v61, 1, v63);
  int v65 = __swift_getEnumTagSinglePayload(v62, 1, v63);
  uint64_t v1252 = v46;
  if (!v64)
  {
    if (v65)
    {
      outlined destroy of EmailDocument(v61, (void (*)(void))type metadata accessor for RentalCarReservation);
      goto LABEL_36;
    }
    uint64_t v531 = *(void *)(v62 + 8);
    *(void *)uint64_t v61 = *(void *)v62;
    *(void *)(v61 + 8) = v531;
    swift_bridgeObjectRelease();
    uint64_t v532 = *(void *)(v62 + 24);
    *(void *)(v61 + 16) = *(void *)(v62 + 16);
    *(void *)(v61 + 24) = v532;
    swift_bridgeObjectRelease();
    uint64_t v533 = *(void *)(v62 + 40);
    *(void *)(v61 + 32) = *(void *)(v62 + 32);
    *(void *)(v61 + 40) = v533;
    swift_bridgeObjectRelease();
    uint64_t v534 = *(void *)(v62 + 56);
    *(void *)(v61 + 48) = *(void *)(v62 + 48);
    *(void *)(v61 + 56) = v534;
    swift_bridgeObjectRelease();
    uint64_t v535 = *(void *)(v62 + 72);
    *(void *)(v61 + 64) = *(void *)(v62 + 64);
    *(void *)(v61 + 72) = v535;
    swift_bridgeObjectRelease();
    uint64_t v536 = *(void *)(v62 + 88);
    *(void *)(v61 + 80) = *(void *)(v62 + 80);
    *(void *)(v61 + 88) = v536;
    swift_bridgeObjectRelease();
    uint64_t v537 = *(void *)(v62 + 104);
    *(void *)(v61 + 96) = *(void *)(v62 + 96);
    *(void *)(v61 + 104) = v537;
    swift_bridgeObjectRelease();
    uint64_t v538 = *(void *)(v62 + 120);
    *(void *)(v61 + 112) = *(void *)(v62 + 112);
    *(void *)(v61 + 120) = v538;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v61 + 128) = *(unsigned char *)(v62 + 128);
    *(unsigned char *)(v61 + 129) = *(unsigned char *)(v62 + 129);
    *(unsigned char *)(v61 + 130) = *(unsigned char *)(v62 + 130);
    *(void *)(v61 + 136) = *(void *)(v62 + 136);
    swift_bridgeObjectRelease();
    uint64_t v539 = *(void *)(v62 + 152);
    *(void *)(v61 + 144) = *(void *)(v62 + 144);
    *(void *)(v61 + 152) = v539;
    swift_bridgeObjectRelease();
    uint64_t v540 = *(void *)(v62 + 168);
    *(void *)(v61 + 160) = *(void *)(v62 + 160);
    *(void *)(v61 + 168) = v540;
    swift_bridgeObjectRelease();
    uint64_t v541 = *(void *)(v62 + 184);
    *(void *)(v61 + 176) = *(void *)(v62 + 176);
    *(void *)(v61 + 184) = v541;
    swift_bridgeObjectRelease();
    *(void *)(v61 + 192) = *(void *)(v62 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v61 + 200) = *(void *)(v62 + 200);
    swift_bridgeObjectRelease();
    uint64_t v542 = *(void *)(v62 + 216);
    *(void *)(v61 + 208) = *(void *)(v62 + 208);
    *(void *)(v61 + 216) = v542;
    swift_bridgeObjectRelease();
    uint64_t v543 = *(void *)(v62 + 232);
    *(void *)(v61 + 224) = *(void *)(v62 + 224);
    *(void *)(v61 + 232) = v543;
    swift_bridgeObjectRelease();
    uint64_t v544 = *(void *)(v62 + 248);
    *(void *)(v61 + 240) = *(void *)(v62 + 240);
    *(void *)(v61 + 248) = v544;
    swift_bridgeObjectRelease();
    *(void *)(v61 + 256) = *(void *)(v62 + 256);
    swift_bridgeObjectRelease();
    uint64_t v545 = *(void *)(v62 + 272);
    *(void *)(v61 + 264) = *(void *)(v62 + 264);
    *(void *)(v61 + 272) = v545;
    swift_bridgeObjectRelease();
    uint64_t v546 = *(void *)(v62 + 288);
    *(void *)(v61 + 280) = *(void *)(v62 + 280);
    *(void *)(v61 + 288) = v546;
    swift_bridgeObjectRelease();
    uint64_t v547 = *(void *)(v62 + 304);
    *(void *)(v61 + 296) = *(void *)(v62 + 296);
    *(void *)(v61 + 304) = v547;
    swift_bridgeObjectRelease();
    uint64_t v548 = *(void *)(v62 + 320);
    *(void *)(v61 + 312) = *(void *)(v62 + 312);
    *(void *)(v61 + 320) = v548;
    swift_bridgeObjectRelease();
    uint64_t v549 = *(void *)(v62 + 336);
    *(void *)(v61 + 328) = *(void *)(v62 + 328);
    *(void *)(v61 + 336) = v549;
    swift_bridgeObjectRelease();
    uint64_t v550 = *(void *)(v62 + 352);
    *(void *)(v61 + 344) = *(void *)(v62 + 344);
    *(void *)(v61 + 352) = v550;
    swift_bridgeObjectRelease();
    uint64_t v551 = *(void *)(v62 + 368);
    *(void *)(v61 + 360) = *(void *)(v62 + 360);
    *(void *)(v61 + 368) = v551;
    swift_bridgeObjectRelease();
    *(void *)(v61 + 376) = *(void *)(v62 + 376);
    *(unsigned char *)(v61 + 384) = *(unsigned char *)(v62 + 384);
    uint64_t v552 = *(void *)(v62 + 400);
    *(void *)(v61 + 392) = *(void *)(v62 + 392);
    *(void *)(v61 + 400) = v552;
    swift_bridgeObjectRelease();
    uint64_t v553 = *(void *)(v62 + 416);
    *(void *)(v61 + 408) = *(void *)(v62 + 408);
    *(void *)(v61 + 416) = v553;
    swift_bridgeObjectRelease();
    uint64_t v554 = *(int *)(v63 + 140);
    uint64_t v555 = (void *)(v61 + v554);
    uint64_t v556 = (const void *)(v62 + v554);
    int v557 = __swift_getEnumTagSinglePayload(v61 + v554, 1, v1257);
    int v558 = __swift_getEnumTagSinglePayload((uint64_t)v556, 1, v1257);
    if (v557)
    {
      if (!v558)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v555, v556, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v555, 0, 1, v1257);
        goto LABEL_243;
      }
    }
    else
    {
      uint64_t v563 = *(void *)(v1257 - 8);
      if (!v558)
      {
        (*(void (**)(void *, const void *, uint64_t))(v563 + 40))(v555, v556, v1257);
LABEL_243:
        uint64_t v565 = *(int *)(v63 + 144);
        uint64_t v566 = (void *)(v61 + v565);
        uint64_t v567 = (const void *)(v62 + v565);
        int v568 = __swift_getEnumTagSinglePayload((uint64_t)v566, 1, v1257);
        int v569 = __swift_getEnumTagSinglePayload((uint64_t)v567, 1, v1257);
        if (v568)
        {
          if (!v569)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v566, v567, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v566, 0, 1, v1257);
LABEL_249:
            uint64_t v48 = v1253;
            uint64_t v47 = v1256;
            goto LABEL_250;
          }
        }
        else
        {
          uint64_t v570 = *(void *)(v1257 - 8);
          if (!v569)
          {
            (*(void (**)(void *, const void *, uint64_t))(v570 + 40))(v566, v567, v1257);
            goto LABEL_249;
          }
          (*(void (**)(void *, uint64_t))(v570 + 8))(v566, v1257);
        }
        uint64_t v571 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v566, v567, *(void *)(*(void *)(v571 - 8) + 64));
        goto LABEL_249;
      }
      (*(void (**)(void *, uint64_t))(v563 + 8))(v555, v1257);
    }
    uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v555, v556, *(void *)(*(void *)(v564 - 8) + 64));
    goto LABEL_243;
  }
  if (v65)
  {
LABEL_36:
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
    memcpy((void *)v61, (const void *)v62, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_250;
  }
  long long v66 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v66;
  long long v67 = *(_OWORD *)(v62 + 48);
  *(_OWORD *)(v61 + 32) = *(_OWORD *)(v62 + 32);
  *(_OWORD *)(v61 + 48) = v67;
  long long v68 = *(_OWORD *)(v62 + 80);
  *(_OWORD *)(v61 + 64) = *(_OWORD *)(v62 + 64);
  *(_OWORD *)(v61 + 80) = v68;
  long long v69 = *(_OWORD *)(v62 + 112);
  *(_OWORD *)(v61 + 96) = *(_OWORD *)(v62 + 96);
  *(_OWORD *)(v61 + 112) = v69;
  *(unsigned char *)(v61 + 128) = *(unsigned char *)(v62 + 128);
  *(_WORD *)(v61 + 129) = *(_WORD *)(v62 + 129);
  *(void *)(v61 + 136) = *(void *)(v62 + 136);
  long long v70 = *(_OWORD *)(v62 + 160);
  *(_OWORD *)(v61 + 144) = *(_OWORD *)(v62 + 144);
  *(_OWORD *)(v61 + 160) = v70;
  long long v71 = *(_OWORD *)(v62 + 192);
  *(_OWORD *)(v61 + 176) = *(_OWORD *)(v62 + 176);
  *(_OWORD *)(v61 + 192) = v71;
  long long v72 = *(_OWORD *)(v62 + 224);
  *(_OWORD *)(v61 + 208) = *(_OWORD *)(v62 + 208);
  *(_OWORD *)(v61 + 224) = v72;
  *(_OWORD *)(v61 + 240) = *(_OWORD *)(v62 + 240);
  *(void *)(v61 + 256) = *(void *)(v62 + 256);
  *(_OWORD *)(v61 + 264) = *(_OWORD *)(v62 + 264);
  *(_OWORD *)(v61 + 280) = *(_OWORD *)(v62 + 280);
  *(_OWORD *)(v61 + 296) = *(_OWORD *)(v62 + 296);
  *(_OWORD *)(v61 + 312) = *(_OWORD *)(v62 + 312);
  *(_OWORD *)(v61 + 328) = *(_OWORD *)(v62 + 328);
  *(_OWORD *)(v61 + 344) = *(_OWORD *)(v62 + 344);
  *(_OWORD *)(v61 + 360) = *(_OWORD *)(v62 + 360);
  *(unsigned char *)(v61 + 384) = *(unsigned char *)(v62 + 384);
  *(void *)(v61 + 376) = *(void *)(v62 + 376);
  *(_OWORD *)(v61 + 392) = *(_OWORD *)(v62 + 392);
  *(_OWORD *)(v61 + 408) = *(_OWORD *)(v62 + 408);
  uint64_t v73 = *(int *)(v63 + 140);
  long long v74 = (void *)(v61 + v73);
  long long v75 = (const void *)(v62 + v73);
  if (__swift_getEnumTagSinglePayload(v62 + v73, 1, v1257))
  {
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v74, v75, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v1257);
  }
  uint64_t v559 = *(int *)(v63 + 144);
  int v560 = (void *)(v61 + v559);
  uint64_t v561 = (const void *)(v62 + v559);
  if (__swift_getEnumTagSinglePayload(v62 + v559, 1, v1257))
  {
    uint64_t v562 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v560, v561, *(void *)(*(void *)(v562 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v560, v561, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v560, 0, 1, v1257);
  }
  __swift_storeEnumTagSinglePayload(v61, 0, 1, v63);
  uint64_t v48 = v1253;
LABEL_250:
  uint64_t v572 = v48[6];
  uint64_t v573 = v46 + v572;
  uint64_t v574 = v47 + v572;
  uint64_t v575 = type metadata accessor for TicketedTransportation(0);
  int v576 = __swift_getEnumTagSinglePayload(v573, 1, v575);
  int v577 = __swift_getEnumTagSinglePayload(v574, 1, v575);
  if (!v576)
  {
    if (v577)
    {
      outlined destroy of EmailDocument(v573, (void (*)(void))type metadata accessor for TicketedTransportation);
      goto LABEL_256;
    }
    uint64_t v590 = *(void *)(v574 + 8);
    *(void *)uint64_t v573 = *(void *)v574;
    *(void *)(v573 + 8) = v590;
    swift_bridgeObjectRelease();
    uint64_t v591 = *(void *)(v574 + 24);
    *(void *)(v573 + 16) = *(void *)(v574 + 16);
    *(void *)(v573 + 24) = v591;
    swift_bridgeObjectRelease();
    uint64_t v592 = *(void *)(v574 + 40);
    *(void *)(v573 + 32) = *(void *)(v574 + 32);
    *(void *)(v573 + 40) = v592;
    swift_bridgeObjectRelease();
    uint64_t v593 = *(void *)(v574 + 56);
    *(void *)(v573 + 48) = *(void *)(v574 + 48);
    *(void *)(v573 + 56) = v593;
    swift_bridgeObjectRelease();
    uint64_t v594 = *(void *)(v574 + 72);
    *(void *)(v573 + 64) = *(void *)(v574 + 64);
    *(void *)(v573 + 72) = v594;
    swift_bridgeObjectRelease();
    uint64_t v595 = *(void *)(v574 + 88);
    *(void *)(v573 + 80) = *(void *)(v574 + 80);
    *(void *)(v573 + 88) = v595;
    swift_bridgeObjectRelease();
    uint64_t v596 = *(void *)(v574 + 104);
    *(void *)(v573 + 96) = *(void *)(v574 + 96);
    *(void *)(v573 + 104) = v596;
    swift_bridgeObjectRelease();
    uint64_t v597 = *(void *)(v574 + 120);
    *(void *)(v573 + 112) = *(void *)(v574 + 112);
    *(void *)(v573 + 120) = v597;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v573 + 128) = *(unsigned char *)(v574 + 128);
    *(unsigned char *)(v573 + 129) = *(unsigned char *)(v574 + 129);
    *(unsigned char *)(v573 + 130) = *(unsigned char *)(v574 + 130);
    *(void *)(v573 + 136) = *(void *)(v574 + 136);
    swift_bridgeObjectRelease();
    uint64_t v598 = *(void *)(v574 + 152);
    *(void *)(v573 + 144) = *(void *)(v574 + 144);
    *(void *)(v573 + 152) = v598;
    swift_bridgeObjectRelease();
    uint64_t v599 = *(void *)(v574 + 168);
    *(void *)(v573 + 160) = *(void *)(v574 + 160);
    *(void *)(v573 + 168) = v599;
    swift_bridgeObjectRelease();
    uint64_t v600 = *(void *)(v574 + 184);
    *(void *)(v573 + 176) = *(void *)(v574 + 176);
    *(void *)(v573 + 184) = v600;
    swift_bridgeObjectRelease();
    *(void *)(v573 + 192) = *(void *)(v574 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v573 + 200) = *(void *)(v574 + 200);
    swift_bridgeObjectRelease();
    *(void *)(v573 + 208) = *(void *)(v574 + 208);
    swift_bridgeObjectRelease();
    uint64_t v601 = *(void *)(v574 + 224);
    *(void *)(v573 + 216) = *(void *)(v574 + 216);
    *(void *)(v573 + 224) = v601;
    swift_bridgeObjectRelease();
    uint64_t v602 = *(void *)(v574 + 240);
    *(void *)(v573 + 232) = *(void *)(v574 + 232);
    *(void *)(v573 + 240) = v602;
    swift_bridgeObjectRelease();
    uint64_t v603 = *(void *)(v574 + 256);
    *(void *)(v573 + 248) = *(void *)(v574 + 248);
    *(void *)(v573 + 256) = v603;
    swift_bridgeObjectRelease();
    uint64_t v604 = *(void *)(v574 + 272);
    *(void *)(v573 + 264) = *(void *)(v574 + 264);
    *(void *)(v573 + 272) = v604;
    swift_bridgeObjectRelease();
    *(void *)(v573 + 280) = *(void *)(v574 + 280);
    swift_bridgeObjectRelease();
    *(void *)(v573 + 288) = *(void *)(v574 + 288);
    *(unsigned char *)(v573 + 296) = *(unsigned char *)(v574 + 296);
    uint64_t v605 = *(int *)(v575 + 112);
    int v606 = (void *)(v573 + v605);
    uint64_t v607 = (const void *)(v574 + v605);
    int v608 = __swift_getEnumTagSinglePayload(v573 + v605, 1, v1257);
    int v609 = __swift_getEnumTagSinglePayload((uint64_t)v607, 1, v1257);
    if (v608)
    {
      if (!v609)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v606, v607, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v606, 0, 1, v1257);
        goto LABEL_268;
      }
    }
    else
    {
      uint64_t v614 = *(void *)(v1257 - 8);
      if (!v609)
      {
        (*(void (**)(void *, const void *, uint64_t))(v614 + 40))(v606, v607, v1257);
LABEL_268:
        uint64_t v616 = *(int *)(v575 + 116);
        uint64_t v617 = (void *)(v573 + v616);
        uint64_t v618 = (const void *)(v574 + v616);
        int v619 = __swift_getEnumTagSinglePayload((uint64_t)v617, 1, v1257);
        int v620 = __swift_getEnumTagSinglePayload((uint64_t)v618, 1, v1257);
        if (v619)
        {
          if (!v620)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v617, v618, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v617, 0, 1, v1257);
LABEL_274:
            uint64_t v48 = v1253;
            uint64_t v47 = v1256;
            goto LABEL_275;
          }
        }
        else
        {
          uint64_t v621 = *(void *)(v1257 - 8);
          if (!v620)
          {
            (*(void (**)(void *, const void *, uint64_t))(v621 + 40))(v617, v618, v1257);
            goto LABEL_274;
          }
          (*(void (**)(void *, uint64_t))(v621 + 8))(v617, v1257);
        }
        uint64_t v622 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v617, v618, *(void *)(*(void *)(v622 - 8) + 64));
        goto LABEL_274;
      }
      (*(void (**)(void *, uint64_t))(v614 + 8))(v606, v1257);
    }
    uint64_t v615 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v606, v607, *(void *)(*(void *)(v615 - 8) + 64));
    goto LABEL_268;
  }
  if (v577)
  {
LABEL_256:
    uint64_t v589 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
    memcpy((void *)v573, (const void *)v574, *(void *)(*(void *)(v589 - 8) + 64));
    goto LABEL_275;
  }
  long long v578 = *(_OWORD *)(v574 + 16);
  *(_OWORD *)uint64_t v573 = *(_OWORD *)v574;
  *(_OWORD *)(v573 + 16) = v578;
  long long v579 = *(_OWORD *)(v574 + 48);
  *(_OWORD *)(v573 + 32) = *(_OWORD *)(v574 + 32);
  *(_OWORD *)(v573 + 48) = v579;
  long long v580 = *(_OWORD *)(v574 + 80);
  *(_OWORD *)(v573 + 64) = *(_OWORD *)(v574 + 64);
  *(_OWORD *)(v573 + 80) = v580;
  long long v581 = *(_OWORD *)(v574 + 112);
  *(_OWORD *)(v573 + 96) = *(_OWORD *)(v574 + 96);
  *(_OWORD *)(v573 + 112) = v581;
  *(unsigned char *)(v573 + 128) = *(unsigned char *)(v574 + 128);
  *(_WORD *)(v573 + 129) = *(_WORD *)(v574 + 129);
  *(void *)(v573 + 136) = *(void *)(v574 + 136);
  long long v582 = *(_OWORD *)(v574 + 160);
  *(_OWORD *)(v573 + 144) = *(_OWORD *)(v574 + 144);
  *(_OWORD *)(v573 + 160) = v582;
  long long v583 = *(_OWORD *)(v574 + 192);
  *(_OWORD *)(v573 + 176) = *(_OWORD *)(v574 + 176);
  *(_OWORD *)(v573 + 192) = v583;
  *(void *)(v573 + 208) = *(void *)(v574 + 208);
  *(_OWORD *)(v573 + 216) = *(_OWORD *)(v574 + 216);
  *(_OWORD *)(v573 + 232) = *(_OWORD *)(v574 + 232);
  *(_OWORD *)(v573 + 248) = *(_OWORD *)(v574 + 248);
  *(_OWORD *)(v573 + 264) = *(_OWORD *)(v574 + 264);
  *(unsigned char *)(v573 + 296) = *(unsigned char *)(v574 + 296);
  uint64_t v584 = *(void *)(v574 + 288);
  *(void *)(v573 + 280) = *(void *)(v574 + 280);
  *(void *)(v573 + 288) = v584;
  uint64_t v585 = *(int *)(v575 + 112);
  uint64_t v586 = (void *)(v573 + v585);
  uint64_t v587 = (const void *)(v574 + v585);
  if (__swift_getEnumTagSinglePayload(v574 + v585, 1, v1257))
  {
    uint64_t v588 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v586, v587, *(void *)(*(void *)(v588 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v586, v587, v1257);
    uint64_t v47 = v1256;
    __swift_storeEnumTagSinglePayload((uint64_t)v586, 0, 1, v1257);
  }
  uint64_t v610 = *(int *)(v575 + 116);
  uint64_t v611 = (void *)(v573 + v610);
  uint64_t v612 = (const void *)(v574 + v610);
  if (__swift_getEnumTagSinglePayload(v574 + v610, 1, v1257))
  {
    uint64_t v613 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v611, v612, *(void *)(*(void *)(v613 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v611, v612, v1257);
    uint64_t v47 = v1256;
    __swift_storeEnumTagSinglePayload((uint64_t)v611, 0, 1, v1257);
  }
  __swift_storeEnumTagSinglePayload(v573, 0, 1, v575);
  uint64_t v48 = v1253;
LABEL_275:
  uint64_t v623 = v48[7];
  uint64_t v624 = v46 + v623;
  uint64_t v625 = v47 + v623;
  int v626 = (int *)type metadata accessor for TicketedShow(0);
  int v627 = __swift_getEnumTagSinglePayload(v624, 1, (uint64_t)v626);
  int v628 = __swift_getEnumTagSinglePayload(v625, 1, (uint64_t)v626);
  if (!v627)
  {
    if (v628)
    {
      outlined destroy of EmailDocument(v624, (void (*)(void))type metadata accessor for TicketedShow);
      goto LABEL_281;
    }
    uint64_t v642 = *(void *)(v625 + 8);
    *(void *)uint64_t v624 = *(void *)v625;
    *(void *)(v624 + 8) = v642;
    swift_bridgeObjectRelease();
    uint64_t v643 = *(void *)(v625 + 24);
    *(void *)(v624 + 16) = *(void *)(v625 + 16);
    *(void *)(v624 + 24) = v643;
    swift_bridgeObjectRelease();
    uint64_t v644 = *(void *)(v625 + 40);
    *(void *)(v624 + 32) = *(void *)(v625 + 32);
    *(void *)(v624 + 40) = v644;
    swift_bridgeObjectRelease();
    uint64_t v645 = *(void *)(v625 + 56);
    *(void *)(v624 + 48) = *(void *)(v625 + 48);
    *(void *)(v624 + 56) = v645;
    swift_bridgeObjectRelease();
    uint64_t v646 = *(void *)(v625 + 72);
    *(void *)(v624 + 64) = *(void *)(v625 + 64);
    *(void *)(v624 + 72) = v646;
    swift_bridgeObjectRelease();
    uint64_t v647 = *(void *)(v625 + 88);
    *(void *)(v624 + 80) = *(void *)(v625 + 80);
    *(void *)(v624 + 88) = v647;
    swift_bridgeObjectRelease();
    uint64_t v648 = *(void *)(v625 + 104);
    *(void *)(v624 + 96) = *(void *)(v625 + 96);
    *(void *)(v624 + 104) = v648;
    swift_bridgeObjectRelease();
    uint64_t v649 = *(void *)(v625 + 120);
    *(void *)(v624 + 112) = *(void *)(v625 + 112);
    *(void *)(v624 + 120) = v649;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v624 + 128) = *(unsigned char *)(v625 + 128);
    *(unsigned char *)(v624 + 129) = *(unsigned char *)(v625 + 129);
    *(unsigned char *)(v624 + 130) = *(unsigned char *)(v625 + 130);
    *(void *)(v624 + 136) = *(void *)(v625 + 136);
    swift_bridgeObjectRelease();
    uint64_t v650 = *(void *)(v625 + 152);
    *(void *)(v624 + 144) = *(void *)(v625 + 144);
    *(void *)(v624 + 152) = v650;
    swift_bridgeObjectRelease();
    uint64_t v651 = *(void *)(v625 + 168);
    *(void *)(v624 + 160) = *(void *)(v625 + 160);
    *(void *)(v624 + 168) = v651;
    swift_bridgeObjectRelease();
    uint64_t v652 = *(void *)(v625 + 184);
    *(void *)(v624 + 176) = *(void *)(v625 + 176);
    *(void *)(v624 + 184) = v652;
    swift_bridgeObjectRelease();
    *(void *)(v624 + 192) = *(void *)(v625 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v624 + 200) = *(void *)(v625 + 200);
    swift_bridgeObjectRelease();
    uint64_t v653 = *(void *)(v625 + 216);
    *(void *)(v624 + 208) = *(void *)(v625 + 208);
    *(void *)(v624 + 216) = v653;
    swift_bridgeObjectRelease();
    uint64_t v654 = *(void *)(v625 + 232);
    *(void *)(v624 + 224) = *(void *)(v625 + 224);
    *(void *)(v624 + 232) = v654;
    swift_bridgeObjectRelease();
    *(void *)(v624 + 240) = *(void *)(v625 + 240);
    swift_bridgeObjectRelease();
    uint64_t v655 = *(void *)(v625 + 256);
    *(void *)(v624 + 248) = *(void *)(v625 + 248);
    *(void *)(v624 + 256) = v655;
    swift_bridgeObjectRelease();
    uint64_t v656 = *(void *)(v625 + 272);
    *(void *)(v624 + 264) = *(void *)(v625 + 264);
    *(void *)(v624 + 272) = v656;
    swift_bridgeObjectRelease();
    *(void *)(v624 + 280) = *(void *)(v625 + 280);
    swift_bridgeObjectRelease();
    *(void *)(v624 + 288) = *(void *)(v625 + 288);
    *(unsigned char *)(v624 + 296) = *(unsigned char *)(v625 + 296);
    uint64_t v657 = *(void *)(v625 + 312);
    *(void *)(v624 + 304) = *(void *)(v625 + 304);
    *(void *)(v624 + 312) = v657;
    swift_bridgeObjectRelease();
    uint64_t v658 = v626[29];
    uint64_t v659 = (const void *)(v625 + v658);
    v1241 = (void *)(v624 + v658);
    int v660 = __swift_getEnumTagSinglePayload(v624 + v658, 1, v1255);
    int v661 = __swift_getEnumTagSinglePayload((uint64_t)v659, 1, v1255);
    if (v660)
    {
      if (v661)
      {
        size_t v662 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v663 = v1241;
LABEL_295:
        memcpy(v663, v659, v662);
        goto LABEL_302;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v1241, v659, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v1241, 0, 1, v1255);
    }
    else
    {
      uint64_t v672 = *(void *)(v1255 - 8);
      if (v661)
      {
        (*(void (**)(void *, uint64_t))(v672 + 8))(v1241, v1255);
        size_t v662 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v663 = v1241;
        goto LABEL_295;
      }
      (*(void (**)(void *, const void *, uint64_t))(v672 + 40))(v1241, v659, v1255);
    }
LABEL_302:
    uint64_t v48 = v1253;
    uint64_t v673 = v626[30];
    uint64_t v674 = (void *)(v624 + v673);
    uint64_t v675 = (uint64_t *)(v625 + v673);
    uint64_t v677 = *v675;
    uint64_t v676 = v675[1];
    *uint64_t v674 = v677;
    v674[1] = v676;
    swift_bridgeObjectRelease();
    uint64_t v678 = v626[31];
    uint64_t v679 = (const void *)(v625 + v678);
    v1242 = (void *)(v624 + v678);
    int v680 = __swift_getEnumTagSinglePayload(v624 + v678, 1, v1257);
    int v681 = __swift_getEnumTagSinglePayload((uint64_t)v679, 1, v1257);
    if (v680)
    {
      if (v681)
      {
        size_t v682 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        int v683 = v1242;
LABEL_307:
        memcpy(v683, v679, v682);
        goto LABEL_310;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v1242, v679, v1257);
      __swift_storeEnumTagSinglePayload((uint64_t)v1242, 0, 1, v1257);
    }
    else
    {
      uint64_t v684 = *(void *)(v1257 - 8);
      if (v681)
      {
        (*(void (**)(void *, uint64_t))(v684 + 8))(v1242, v1257);
        size_t v682 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        int v683 = v1242;
        goto LABEL_307;
      }
      (*(void (**)(void *, const void *, uint64_t))(v684 + 40))(v1242, v679, v1257);
    }
LABEL_310:
    uint64_t v685 = v626[32];
    uint64_t v686 = (void *)(v624 + v685);
    uint64_t v687 = (const void *)(v625 + v685);
    int v688 = __swift_getEnumTagSinglePayload((uint64_t)v686, 1, v1257);
    int v689 = __swift_getEnumTagSinglePayload((uint64_t)v687, 1, v1257);
    if (v688)
    {
      if (!v689)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v686, v687, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v686, 0, 1, v1257);
LABEL_316:
        uint64_t v47 = v1256;
        goto LABEL_317;
      }
    }
    else
    {
      uint64_t v690 = *(void *)(v1257 - 8);
      if (!v689)
      {
        (*(void (**)(void *, const void *, uint64_t))(v690 + 40))(v686, v687, v1257);
        goto LABEL_316;
      }
      (*(void (**)(void *, uint64_t))(v690 + 8))(v686, v1257);
    }
    uint64_t v691 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v686, v687, *(void *)(*(void *)(v691 - 8) + 64));
    goto LABEL_316;
  }
  if (v628)
  {
LABEL_281:
    uint64_t v641 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
    memcpy((void *)v624, (const void *)v625, *(void *)(*(void *)(v641 - 8) + 64));
    goto LABEL_317;
  }
  long long v629 = *(_OWORD *)(v625 + 16);
  *(_OWORD *)uint64_t v624 = *(_OWORD *)v625;
  *(_OWORD *)(v624 + 16) = v629;
  long long v630 = *(_OWORD *)(v625 + 48);
  *(_OWORD *)(v624 + 32) = *(_OWORD *)(v625 + 32);
  *(_OWORD *)(v624 + 48) = v630;
  long long v631 = *(_OWORD *)(v625 + 80);
  *(_OWORD *)(v624 + 64) = *(_OWORD *)(v625 + 64);
  *(_OWORD *)(v624 + 80) = v631;
  long long v632 = *(_OWORD *)(v625 + 112);
  *(_OWORD *)(v624 + 96) = *(_OWORD *)(v625 + 96);
  *(_OWORD *)(v624 + 112) = v632;
  *(unsigned char *)(v624 + 128) = *(unsigned char *)(v625 + 128);
  *(_WORD *)(v624 + 129) = *(_WORD *)(v625 + 129);
  *(void *)(v624 + 136) = *(void *)(v625 + 136);
  long long v633 = *(_OWORD *)(v625 + 160);
  *(_OWORD *)(v624 + 144) = *(_OWORD *)(v625 + 144);
  *(_OWORD *)(v624 + 160) = v633;
  long long v634 = *(_OWORD *)(v625 + 192);
  *(_OWORD *)(v624 + 176) = *(_OWORD *)(v625 + 176);
  *(_OWORD *)(v624 + 192) = v634;
  long long v635 = *(_OWORD *)(v625 + 224);
  *(_OWORD *)(v624 + 208) = *(_OWORD *)(v625 + 208);
  *(_OWORD *)(v624 + 224) = v635;
  *(void *)(v624 + 240) = *(void *)(v625 + 240);
  *(_OWORD *)(v624 + 248) = *(_OWORD *)(v625 + 248);
  *(_OWORD *)(v624 + 264) = *(_OWORD *)(v625 + 264);
  *(unsigned char *)(v624 + 296) = *(unsigned char *)(v625 + 296);
  uint64_t v636 = *(void *)(v625 + 288);
  *(void *)(v624 + 280) = *(void *)(v625 + 280);
  *(void *)(v624 + 288) = v636;
  *(_OWORD *)(v624 + 304) = *(_OWORD *)(v625 + 304);
  uint64_t v637 = v626[29];
  int v638 = (void *)(v624 + v637);
  int v639 = (const void *)(v625 + v637);
  if (__swift_getEnumTagSinglePayload(v625 + v637, 1, v1255))
  {
    uint64_t v640 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v638, v639, *(void *)(*(void *)(v640 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v638, v639, v1255);
    __swift_storeEnumTagSinglePayload((uint64_t)v638, 0, 1, v1255);
  }
  *(_OWORD *)(v624 + v626[30]) = *(_OWORD *)(v625 + v626[30]);
  uint64_t v664 = v626[31];
  uint64_t v665 = (void *)(v624 + v664);
  uint64_t v666 = (const void *)(v625 + v664);
  uint64_t v47 = v1256;
  if (__swift_getEnumTagSinglePayload(v625 + v664, 1, v1257))
  {
    uint64_t v667 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v665, v666, *(void *)(*(void *)(v667 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v665, v666, v1257);
    uint64_t v47 = v1256;
    __swift_storeEnumTagSinglePayload((uint64_t)v665, 0, 1, v1257);
  }
  uint64_t v668 = v626[32];
  uint64_t v669 = (void *)(v624 + v668);
  int v670 = (const void *)(v625 + v668);
  if (__swift_getEnumTagSinglePayload(v625 + v668, 1, v1257))
  {
    uint64_t v671 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v669, v670, *(void *)(*(void *)(v671 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v669, v670, v1257);
    uint64_t v47 = v1256;
    __swift_storeEnumTagSinglePayload((uint64_t)v669, 0, 1, v1257);
  }
  __swift_storeEnumTagSinglePayload(v624, 0, 1, (uint64_t)v626);
  uint64_t v48 = v1253;
LABEL_317:
  uint64_t v692 = v48[8];
  uint64_t v693 = v46 + v692;
  uint64_t v694 = v47 + v692;
  uint64_t v695 = type metadata accessor for Appointment(0);
  int v696 = __swift_getEnumTagSinglePayload(v693, 1, v695);
  int v697 = __swift_getEnumTagSinglePayload(v694, 1, v695);
  if (!v696)
  {
    if (v697)
    {
      outlined destroy of EmailDocument(v693, (void (*)(void))type metadata accessor for Appointment);
      goto LABEL_323;
    }
    uint64_t v711 = *(void *)(v694 + 8);
    *(void *)uint64_t v693 = *(void *)v694;
    *(void *)(v693 + 8) = v711;
    swift_bridgeObjectRelease();
    uint64_t v712 = *(void *)(v694 + 24);
    *(void *)(v693 + 16) = *(void *)(v694 + 16);
    *(void *)(v693 + 24) = v712;
    swift_bridgeObjectRelease();
    uint64_t v713 = *(void *)(v694 + 40);
    *(void *)(v693 + 32) = *(void *)(v694 + 32);
    *(void *)(v693 + 40) = v713;
    swift_bridgeObjectRelease();
    uint64_t v714 = *(void *)(v694 + 56);
    *(void *)(v693 + 48) = *(void *)(v694 + 48);
    *(void *)(v693 + 56) = v714;
    swift_bridgeObjectRelease();
    uint64_t v715 = *(void *)(v694 + 72);
    *(void *)(v693 + 64) = *(void *)(v694 + 64);
    *(void *)(v693 + 72) = v715;
    swift_bridgeObjectRelease();
    uint64_t v716 = *(void *)(v694 + 88);
    *(void *)(v693 + 80) = *(void *)(v694 + 80);
    *(void *)(v693 + 88) = v716;
    swift_bridgeObjectRelease();
    uint64_t v717 = *(void *)(v694 + 104);
    *(void *)(v693 + 96) = *(void *)(v694 + 96);
    *(void *)(v693 + 104) = v717;
    swift_bridgeObjectRelease();
    uint64_t v718 = *(void *)(v694 + 120);
    *(void *)(v693 + 112) = *(void *)(v694 + 112);
    *(void *)(v693 + 120) = v718;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v693 + 128) = *(unsigned char *)(v694 + 128);
    *(unsigned char *)(v693 + 129) = *(unsigned char *)(v694 + 129);
    *(unsigned char *)(v693 + 130) = *(unsigned char *)(v694 + 130);
    *(void *)(v693 + 136) = *(void *)(v694 + 136);
    swift_bridgeObjectRelease();
    uint64_t v719 = *(void *)(v694 + 152);
    *(void *)(v693 + 144) = *(void *)(v694 + 144);
    *(void *)(v693 + 152) = v719;
    swift_bridgeObjectRelease();
    uint64_t v720 = *(void *)(v694 + 168);
    *(void *)(v693 + 160) = *(void *)(v694 + 160);
    *(void *)(v693 + 168) = v720;
    swift_bridgeObjectRelease();
    uint64_t v721 = *(void *)(v694 + 184);
    *(void *)(v693 + 176) = *(void *)(v694 + 176);
    *(void *)(v693 + 184) = v721;
    swift_bridgeObjectRelease();
    *(void *)(v693 + 192) = *(void *)(v694 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v693 + 200) = *(void *)(v694 + 200);
    swift_bridgeObjectRelease();
    uint64_t v722 = *(void *)(v694 + 216);
    *(void *)(v693 + 208) = *(void *)(v694 + 208);
    *(void *)(v693 + 216) = v722;
    swift_bridgeObjectRelease();
    uint64_t v723 = *(void *)(v694 + 232);
    *(void *)(v693 + 224) = *(void *)(v694 + 224);
    *(void *)(v693 + 232) = v723;
    swift_bridgeObjectRelease();
    uint64_t v724 = *(void *)(v694 + 248);
    *(void *)(v693 + 240) = *(void *)(v694 + 240);
    *(void *)(v693 + 248) = v724;
    swift_bridgeObjectRelease();
    uint64_t v725 = *(void *)(v694 + 264);
    *(void *)(v693 + 256) = *(void *)(v694 + 256);
    *(void *)(v693 + 264) = v725;
    swift_bridgeObjectRelease();
    *(void *)(v693 + 272) = *(void *)(v694 + 272);
    *(unsigned char *)(v693 + 280) = *(unsigned char *)(v694 + 280);
    uint64_t v726 = *(void *)(v694 + 296);
    *(void *)(v693 + 288) = *(void *)(v694 + 288);
    *(void *)(v693 + 296) = v726;
    swift_bridgeObjectRelease();
    uint64_t v727 = *(int *)(v695 + 108);
    uint64_t v728 = (void *)(v693 + v727);
    uint64_t v729 = (const void *)(v694 + v727);
    int v730 = __swift_getEnumTagSinglePayload(v693 + v727, 1, v1257);
    int v731 = __swift_getEnumTagSinglePayload((uint64_t)v729, 1, v1257);
    if (v730)
    {
      if (!v731)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v728, v729, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v728, 0, 1, v1257);
        goto LABEL_335;
      }
    }
    else
    {
      uint64_t v736 = *(void *)(v1257 - 8);
      if (!v731)
      {
        (*(void (**)(void *, const void *, uint64_t))(v736 + 40))(v728, v729, v1257);
LABEL_335:
        uint64_t v738 = *(int *)(v695 + 112);
        uint64_t v739 = (void *)(v693 + v738);
        long long v740 = (const void *)(v694 + v738);
        int v741 = __swift_getEnumTagSinglePayload((uint64_t)v739, 1, v1257);
        int v742 = __swift_getEnumTagSinglePayload((uint64_t)v740, 1, v1257);
        if (v741)
        {
          if (!v742)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v739, v740, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v739, 0, 1, v1257);
LABEL_341:
            uint64_t v48 = v1253;
            uint64_t v47 = v1256;
            goto LABEL_342;
          }
        }
        else
        {
          uint64_t v743 = *(void *)(v1257 - 8);
          if (!v742)
          {
            (*(void (**)(void *, const void *, uint64_t))(v743 + 40))(v739, v740, v1257);
            goto LABEL_341;
          }
          (*(void (**)(void *, uint64_t))(v743 + 8))(v739, v1257);
        }
        uint64_t v744 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v739, v740, *(void *)(*(void *)(v744 - 8) + 64));
        goto LABEL_341;
      }
      (*(void (**)(void *, uint64_t))(v736 + 8))(v728, v1257);
    }
    uint64_t v737 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v728, v729, *(void *)(*(void *)(v737 - 8) + 64));
    goto LABEL_335;
  }
  if (v697)
  {
LABEL_323:
    uint64_t v710 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
    memcpy((void *)v693, (const void *)v694, *(void *)(*(void *)(v710 - 8) + 64));
    goto LABEL_342;
  }
  long long v698 = *(_OWORD *)(v694 + 16);
  *(_OWORD *)uint64_t v693 = *(_OWORD *)v694;
  *(_OWORD *)(v693 + 16) = v698;
  long long v699 = *(_OWORD *)(v694 + 48);
  *(_OWORD *)(v693 + 32) = *(_OWORD *)(v694 + 32);
  *(_OWORD *)(v693 + 48) = v699;
  long long v700 = *(_OWORD *)(v694 + 80);
  *(_OWORD *)(v693 + 64) = *(_OWORD *)(v694 + 64);
  *(_OWORD *)(v693 + 80) = v700;
  long long v701 = *(_OWORD *)(v694 + 112);
  *(_OWORD *)(v693 + 96) = *(_OWORD *)(v694 + 96);
  *(_OWORD *)(v693 + 112) = v701;
  *(unsigned char *)(v693 + 128) = *(unsigned char *)(v694 + 128);
  *(_WORD *)(v693 + 129) = *(_WORD *)(v694 + 129);
  *(void *)(v693 + 136) = *(void *)(v694 + 136);
  long long v702 = *(_OWORD *)(v694 + 160);
  *(_OWORD *)(v693 + 144) = *(_OWORD *)(v694 + 144);
  *(_OWORD *)(v693 + 160) = v702;
  long long v703 = *(_OWORD *)(v694 + 192);
  *(_OWORD *)(v693 + 176) = *(_OWORD *)(v694 + 176);
  *(_OWORD *)(v693 + 192) = v703;
  long long v704 = *(_OWORD *)(v694 + 224);
  *(_OWORD *)(v693 + 208) = *(_OWORD *)(v694 + 208);
  *(_OWORD *)(v693 + 224) = v704;
  long long v705 = *(_OWORD *)(v694 + 256);
  *(_OWORD *)(v693 + 240) = *(_OWORD *)(v694 + 240);
  *(_OWORD *)(v693 + 256) = v705;
  *(unsigned char *)(v693 + 280) = *(unsigned char *)(v694 + 280);
  *(void *)(v693 + 272) = *(void *)(v694 + 272);
  *(_OWORD *)(v693 + 288) = *(_OWORD *)(v694 + 288);
  uint64_t v706 = *(int *)(v695 + 108);
  int v707 = (void *)(v693 + v706);
  uint64_t v708 = (const void *)(v694 + v706);
  if (__swift_getEnumTagSinglePayload(v694 + v706, 1, v1257))
  {
    uint64_t v709 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v707, v708, *(void *)(*(void *)(v709 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v707, v708, v1257);
    uint64_t v47 = v1256;
    __swift_storeEnumTagSinglePayload((uint64_t)v707, 0, 1, v1257);
  }
  uint64_t v732 = *(int *)(v695 + 112);
  int v733 = (void *)(v693 + v732);
  uint64_t v734 = (const void *)(v694 + v732);
  if (__swift_getEnumTagSinglePayload(v694 + v732, 1, v1257))
  {
    uint64_t v735 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v733, v734, *(void *)(*(void *)(v735 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v733, v734, v1257);
    uint64_t v47 = v1256;
    __swift_storeEnumTagSinglePayload((uint64_t)v733, 0, 1, v1257);
  }
  __swift_storeEnumTagSinglePayload(v693, 0, 1, v695);
  uint64_t v48 = v1253;
LABEL_342:
  uint64_t v745 = v48[9];
  uint64_t v746 = v46 + v745;
  uint64_t v747 = v47 + v745;
  uint64_t v748 = (int *)type metadata accessor for Party(0);
  int v749 = __swift_getEnumTagSinglePayload(v746, 1, (uint64_t)v748);
  int v750 = __swift_getEnumTagSinglePayload(v747, 1, (uint64_t)v748);
  if (!v749)
  {
    if (v750)
    {
      outlined destroy of EmailDocument(v746, (void (*)(void))type metadata accessor for Party);
      goto LABEL_348;
    }
    uint64_t v763 = *(void *)(v747 + 8);
    *(void *)uint64_t v746 = *(void *)v747;
    *(void *)(v746 + 8) = v763;
    swift_bridgeObjectRelease();
    uint64_t v764 = *(void *)(v747 + 24);
    *(void *)(v746 + 16) = *(void *)(v747 + 16);
    *(void *)(v746 + 24) = v764;
    swift_bridgeObjectRelease();
    uint64_t v765 = *(void *)(v747 + 40);
    *(void *)(v746 + 32) = *(void *)(v747 + 32);
    *(void *)(v746 + 40) = v765;
    swift_bridgeObjectRelease();
    uint64_t v766 = *(void *)(v747 + 56);
    *(void *)(v746 + 48) = *(void *)(v747 + 48);
    *(void *)(v746 + 56) = v766;
    swift_bridgeObjectRelease();
    uint64_t v767 = *(void *)(v747 + 72);
    *(void *)(v746 + 64) = *(void *)(v747 + 64);
    *(void *)(v746 + 72) = v767;
    swift_bridgeObjectRelease();
    uint64_t v768 = *(void *)(v747 + 88);
    *(void *)(v746 + 80) = *(void *)(v747 + 80);
    *(void *)(v746 + 88) = v768;
    swift_bridgeObjectRelease();
    uint64_t v769 = *(void *)(v747 + 104);
    *(void *)(v746 + 96) = *(void *)(v747 + 96);
    *(void *)(v746 + 104) = v769;
    swift_bridgeObjectRelease();
    uint64_t v770 = *(void *)(v747 + 120);
    *(void *)(v746 + 112) = *(void *)(v747 + 112);
    *(void *)(v746 + 120) = v770;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v746 + 128) = *(unsigned char *)(v747 + 128);
    *(unsigned char *)(v746 + 129) = *(unsigned char *)(v747 + 129);
    *(unsigned char *)(v746 + 130) = *(unsigned char *)(v747 + 130);
    *(void *)(v746 + 136) = *(void *)(v747 + 136);
    swift_bridgeObjectRelease();
    uint64_t v771 = *(void *)(v747 + 152);
    *(void *)(v746 + 144) = *(void *)(v747 + 144);
    *(void *)(v746 + 152) = v771;
    swift_bridgeObjectRelease();
    uint64_t v772 = *(void *)(v747 + 168);
    *(void *)(v746 + 160) = *(void *)(v747 + 160);
    *(void *)(v746 + 168) = v772;
    swift_bridgeObjectRelease();
    uint64_t v773 = *(void *)(v747 + 184);
    *(void *)(v746 + 176) = *(void *)(v747 + 176);
    *(void *)(v746 + 184) = v773;
    swift_bridgeObjectRelease();
    *(void *)(v746 + 192) = *(void *)(v747 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v746 + 200) = *(void *)(v747 + 200);
    swift_bridgeObjectRelease();
    uint64_t v774 = *(void *)(v747 + 216);
    *(void *)(v746 + 208) = *(void *)(v747 + 208);
    *(void *)(v746 + 216) = v774;
    swift_bridgeObjectRelease();
    uint64_t v775 = *(void *)(v747 + 232);
    *(void *)(v746 + 224) = *(void *)(v747 + 224);
    *(void *)(v746 + 232) = v775;
    swift_bridgeObjectRelease();
    uint64_t v776 = *(void *)(v747 + 248);
    *(void *)(v746 + 240) = *(void *)(v747 + 240);
    *(void *)(v746 + 248) = v776;
    swift_bridgeObjectRelease();
    uint64_t v777 = v748[24];
    uint64_t v778 = (void *)(v746 + v777);
    uint64_t v779 = (const void *)(v747 + v777);
    int v780 = __swift_getEnumTagSinglePayload(v746 + v777, 1, v1257);
    int v781 = __swift_getEnumTagSinglePayload((uint64_t)v779, 1, v1257);
    if (v780)
    {
      if (!v781)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v778, v779, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v778, 0, 1, v1257);
        goto LABEL_363;
      }
    }
    else
    {
      uint64_t v790 = *(void *)(v1257 - 8);
      if (!v781)
      {
        (*(void (**)(void *, const void *, uint64_t))(v790 + 40))(v778, v779, v1257);
LABEL_363:
        uint64_t v792 = v748[25];
        uint64_t v793 = (void *)(v746 + v792);
        uint64_t v794 = (const void *)(v747 + v792);
        int v795 = __swift_getEnumTagSinglePayload(v746 + v792, 1, v1257);
        int v796 = __swift_getEnumTagSinglePayload((uint64_t)v794, 1, v1257);
        if (v795)
        {
          if (!v796)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v793, v794, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v793, 0, 1, v1257);
            goto LABEL_369;
          }
        }
        else
        {
          uint64_t v797 = *(void *)(v1257 - 8);
          if (!v796)
          {
            (*(void (**)(void *, const void *, uint64_t))(v797 + 40))(v793, v794, v1257);
LABEL_369:
            uint64_t v799 = v748[26];
            int v800 = (void *)(v746 + v799);
            long long v801 = (const void *)(v747 + v799);
            int v802 = __swift_getEnumTagSinglePayload((uint64_t)v800, 1, v1255);
            int v803 = __swift_getEnumTagSinglePayload((uint64_t)v801, 1, v1255);
            if (v802)
            {
              if (!v803)
              {
                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v800, v801, v1255);
                __swift_storeEnumTagSinglePayload((uint64_t)v800, 0, 1, v1255);
LABEL_375:
                uint64_t v48 = v1253;
                uint64_t v47 = v1256;
                goto LABEL_376;
              }
            }
            else
            {
              uint64_t v804 = *(void *)(v1255 - 8);
              if (!v803)
              {
                (*(void (**)(void *, const void *, uint64_t))(v804 + 40))(v800, v801, v1255);
                goto LABEL_375;
              }
              (*(void (**)(void *, uint64_t))(v804 + 8))(v800, v1255);
            }
            uint64_t v805 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v800, v801, *(void *)(*(void *)(v805 - 8) + 64));
            goto LABEL_375;
          }
          (*(void (**)(void *, uint64_t))(v797 + 8))(v793, v1257);
        }
        uint64_t v798 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v793, v794, *(void *)(*(void *)(v798 - 8) + 64));
        goto LABEL_369;
      }
      (*(void (**)(void *, uint64_t))(v790 + 8))(v778, v1257);
    }
    uint64_t v791 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v778, v779, *(void *)(*(void *)(v791 - 8) + 64));
    goto LABEL_363;
  }
  if (v750)
  {
LABEL_348:
    uint64_t v762 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
    memcpy((void *)v746, (const void *)v747, *(void *)(*(void *)(v762 - 8) + 64));
    goto LABEL_376;
  }
  long long v751 = *(_OWORD *)(v747 + 16);
  *(_OWORD *)uint64_t v746 = *(_OWORD *)v747;
  *(_OWORD *)(v746 + 16) = v751;
  long long v752 = *(_OWORD *)(v747 + 48);
  *(_OWORD *)(v746 + 32) = *(_OWORD *)(v747 + 32);
  *(_OWORD *)(v746 + 48) = v752;
  long long v753 = *(_OWORD *)(v747 + 80);
  *(_OWORD *)(v746 + 64) = *(_OWORD *)(v747 + 64);
  *(_OWORD *)(v746 + 80) = v753;
  long long v754 = *(_OWORD *)(v747 + 112);
  *(_OWORD *)(v746 + 96) = *(_OWORD *)(v747 + 96);
  *(_OWORD *)(v746 + 112) = v754;
  *(unsigned char *)(v746 + 128) = *(unsigned char *)(v747 + 128);
  *(_WORD *)(v746 + 129) = *(_WORD *)(v747 + 129);
  *(void *)(v746 + 136) = *(void *)(v747 + 136);
  long long v755 = *(_OWORD *)(v747 + 160);
  *(_OWORD *)(v746 + 144) = *(_OWORD *)(v747 + 144);
  *(_OWORD *)(v746 + 160) = v755;
  long long v756 = *(_OWORD *)(v747 + 192);
  *(_OWORD *)(v746 + 176) = *(_OWORD *)(v747 + 176);
  *(_OWORD *)(v746 + 192) = v756;
  long long v757 = *(_OWORD *)(v747 + 224);
  *(_OWORD *)(v746 + 208) = *(_OWORD *)(v747 + 208);
  *(_OWORD *)(v746 + 224) = v757;
  *(_OWORD *)(v746 + 240) = *(_OWORD *)(v747 + 240);
  uint64_t v758 = v748[24];
  uint64_t v759 = (void *)(v746 + v758);
  uint64_t v760 = (const void *)(v747 + v758);
  if (__swift_getEnumTagSinglePayload(v747 + v758, 1, v1257))
  {
    uint64_t v761 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v759, v760, *(void *)(*(void *)(v761 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v759, v760, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v759, 0, 1, v1257);
  }
  uint64_t v782 = v748[25];
  int v783 = (void *)(v746 + v782);
  uint64_t v784 = (const void *)(v747 + v782);
  if (__swift_getEnumTagSinglePayload(v747 + v782, 1, v1257))
  {
    uint64_t v785 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v783, v784, *(void *)(*(void *)(v785 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v783, v784, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v783, 0, 1, v1257);
  }
  uint64_t v786 = v748[26];
  uint64_t v787 = (void *)(v746 + v786);
  v788 = (const void *)(v747 + v786);
  if (__swift_getEnumTagSinglePayload(v747 + v786, 1, v1255))
  {
    uint64_t v789 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v787, v788, *(void *)(*(void *)(v789 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v787, v788, v1255);
    __swift_storeEnumTagSinglePayload((uint64_t)v787, 0, 1, v1255);
  }
  uint64_t v47 = v1256;
  __swift_storeEnumTagSinglePayload(v746, 0, 1, (uint64_t)v748);
  uint64_t v48 = v1253;
LABEL_376:
  uint64_t v806 = v48[10];
  uint64_t v807 = v46 + v806;
  uint64_t v808 = v47 + v806;
  v809 = (int *)type metadata accessor for Trip(0);
  int v810 = __swift_getEnumTagSinglePayload(v807, 1, (uint64_t)v809);
  int v811 = __swift_getEnumTagSinglePayload(v808, 1, (uint64_t)v809);
  if (!v810)
  {
    if (v811)
    {
      outlined destroy of EmailDocument(v807, (void (*)(void))type metadata accessor for Trip);
      goto LABEL_382;
    }
    uint64_t v823 = *(void *)(v808 + 8);
    *(void *)uint64_t v807 = *(void *)v808;
    *(void *)(v807 + 8) = v823;
    swift_bridgeObjectRelease();
    uint64_t v824 = *(void *)(v808 + 24);
    *(void *)(v807 + 16) = *(void *)(v808 + 16);
    *(void *)(v807 + 24) = v824;
    swift_bridgeObjectRelease();
    uint64_t v825 = *(void *)(v808 + 40);
    *(void *)(v807 + 32) = *(void *)(v808 + 32);
    *(void *)(v807 + 40) = v825;
    swift_bridgeObjectRelease();
    uint64_t v826 = *(void *)(v808 + 56);
    *(void *)(v807 + 48) = *(void *)(v808 + 48);
    *(void *)(v807 + 56) = v826;
    swift_bridgeObjectRelease();
    uint64_t v827 = *(void *)(v808 + 72);
    *(void *)(v807 + 64) = *(void *)(v808 + 64);
    *(void *)(v807 + 72) = v827;
    swift_bridgeObjectRelease();
    uint64_t v828 = *(void *)(v808 + 88);
    *(void *)(v807 + 80) = *(void *)(v808 + 80);
    *(void *)(v807 + 88) = v828;
    swift_bridgeObjectRelease();
    uint64_t v829 = *(void *)(v808 + 104);
    *(void *)(v807 + 96) = *(void *)(v808 + 96);
    *(void *)(v807 + 104) = v829;
    swift_bridgeObjectRelease();
    uint64_t v830 = *(void *)(v808 + 120);
    *(void *)(v807 + 112) = *(void *)(v808 + 112);
    *(void *)(v807 + 120) = v830;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v807 + 128) = *(unsigned char *)(v808 + 128);
    *(unsigned char *)(v807 + 129) = *(unsigned char *)(v808 + 129);
    *(unsigned char *)(v807 + 130) = *(unsigned char *)(v808 + 130);
    *(void *)(v807 + 136) = *(void *)(v808 + 136);
    swift_bridgeObjectRelease();
    uint64_t v831 = *(void *)(v808 + 152);
    *(void *)(v807 + 144) = *(void *)(v808 + 144);
    *(void *)(v807 + 152) = v831;
    swift_bridgeObjectRelease();
    uint64_t v832 = *(void *)(v808 + 168);
    *(void *)(v807 + 160) = *(void *)(v808 + 160);
    *(void *)(v807 + 168) = v832;
    swift_bridgeObjectRelease();
    uint64_t v833 = *(void *)(v808 + 184);
    *(void *)(v807 + 176) = *(void *)(v808 + 176);
    *(void *)(v807 + 184) = v833;
    swift_bridgeObjectRelease();
    *(void *)(v807 + 192) = *(void *)(v808 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v807 + 200) = *(void *)(v808 + 200);
    swift_bridgeObjectRelease();
    uint64_t v834 = *(void *)(v808 + 216);
    *(void *)(v807 + 208) = *(void *)(v808 + 208);
    *(void *)(v807 + 216) = v834;
    swift_bridgeObjectRelease();
    uint64_t v835 = v809[22];
    uint64_t v836 = (void *)(v807 + v835);
    uint64_t v837 = (const void *)(v808 + v835);
    int v838 = __swift_getEnumTagSinglePayload(v807 + v835, 1, v1257);
    int v839 = __swift_getEnumTagSinglePayload((uint64_t)v837, 1, v1257);
    if (v838)
    {
      if (!v839)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v836, v837, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v836, 0, 1, v1257);
        goto LABEL_397;
      }
    }
    else
    {
      uint64_t v851 = *(void *)(v1257 - 8);
      if (!v839)
      {
        (*(void (**)(void *, const void *, uint64_t))(v851 + 40))(v836, v837, v1257);
LABEL_397:
        uint64_t v853 = v809[23];
        uint64_t v854 = (void *)(v807 + v853);
        int v855 = (const void *)(v808 + v853);
        int v856 = __swift_getEnumTagSinglePayload(v807 + v853, 1, v1257);
        int v857 = __swift_getEnumTagSinglePayload((uint64_t)v855, 1, v1257);
        if (v856)
        {
          if (!v857)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v854, v855, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v854, 0, 1, v1257);
            goto LABEL_403;
          }
        }
        else
        {
          uint64_t v858 = *(void *)(v1257 - 8);
          if (!v857)
          {
            (*(void (**)(void *, const void *, uint64_t))(v858 + 40))(v854, v855, v1257);
LABEL_403:
            uint64_t v860 = v809[24];
            uint64_t v861 = v807 + v860;
            uint64_t v862 = v808 + v860;
            *(void *)uint64_t v861 = *(void *)v862;
            *(unsigned char *)(v861 + 8) = *(unsigned char *)(v862 + 8);
            uint64_t v863 = v809[25];
            uint64_t v864 = (void *)(v807 + v863);
            int v865 = (const void *)(v808 + v863);
            int v866 = __swift_getEnumTagSinglePayload((uint64_t)v864, 1, v1255);
            int v867 = __swift_getEnumTagSinglePayload((uint64_t)v865, 1, v1255);
            if (v866)
            {
              if (!v867)
              {
                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v864, v865, v1255);
                __swift_storeEnumTagSinglePayload((uint64_t)v864, 0, 1, v1255);
LABEL_409:
                uint64_t v48 = v1253;
                uint64_t v47 = v1256;
                goto LABEL_410;
              }
            }
            else
            {
              uint64_t v868 = *(void *)(v1255 - 8);
              if (!v867)
              {
                (*(void (**)(void *, const void *, uint64_t))(v868 + 40))(v864, v865, v1255);
                goto LABEL_409;
              }
              (*(void (**)(void *, uint64_t))(v868 + 8))(v864, v1255);
            }
            uint64_t v869 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v864, v865, *(void *)(*(void *)(v869 - 8) + 64));
            goto LABEL_409;
          }
          (*(void (**)(void *, uint64_t))(v858 + 8))(v854, v1257);
        }
        uint64_t v859 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v854, v855, *(void *)(*(void *)(v859 - 8) + 64));
        goto LABEL_403;
      }
      (*(void (**)(void *, uint64_t))(v851 + 8))(v836, v1257);
    }
    uint64_t v852 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v836, v837, *(void *)(*(void *)(v852 - 8) + 64));
    goto LABEL_397;
  }
  if (v811)
  {
LABEL_382:
    uint64_t v822 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
    memcpy((void *)v807, (const void *)v808, *(void *)(*(void *)(v822 - 8) + 64));
    goto LABEL_410;
  }
  long long v812 = *(_OWORD *)(v808 + 16);
  *(_OWORD *)uint64_t v807 = *(_OWORD *)v808;
  *(_OWORD *)(v807 + 16) = v812;
  long long v813 = *(_OWORD *)(v808 + 48);
  *(_OWORD *)(v807 + 32) = *(_OWORD *)(v808 + 32);
  *(_OWORD *)(v807 + 48) = v813;
  long long v814 = *(_OWORD *)(v808 + 80);
  *(_OWORD *)(v807 + 64) = *(_OWORD *)(v808 + 64);
  *(_OWORD *)(v807 + 80) = v814;
  long long v815 = *(_OWORD *)(v808 + 112);
  *(_OWORD *)(v807 + 96) = *(_OWORD *)(v808 + 96);
  *(_OWORD *)(v807 + 112) = v815;
  *(unsigned char *)(v807 + 128) = *(unsigned char *)(v808 + 128);
  *(_WORD *)(v807 + 129) = *(_WORD *)(v808 + 129);
  *(void *)(v807 + 136) = *(void *)(v808 + 136);
  long long v816 = *(_OWORD *)(v808 + 160);
  *(_OWORD *)(v807 + 144) = *(_OWORD *)(v808 + 144);
  *(_OWORD *)(v807 + 160) = v816;
  long long v817 = *(_OWORD *)(v808 + 192);
  *(_OWORD *)(v807 + 176) = *(_OWORD *)(v808 + 176);
  *(_OWORD *)(v807 + 192) = v817;
  *(_OWORD *)(v807 + 208) = *(_OWORD *)(v808 + 208);
  uint64_t v818 = v809[22];
  uint64_t v819 = (void *)(v807 + v818);
  uint64_t v820 = (const void *)(v808 + v818);
  if (__swift_getEnumTagSinglePayload(v808 + v818, 1, v1257))
  {
    uint64_t v821 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v819, v820, *(void *)(*(void *)(v821 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v819, v820, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v819, 0, 1, v1257);
  }
  uint64_t v840 = v809[23];
  uint64_t v841 = (void *)(v807 + v840);
  uint64_t v842 = (const void *)(v808 + v840);
  if (__swift_getEnumTagSinglePayload(v808 + v840, 1, v1257))
  {
    uint64_t v843 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v841, v842, *(void *)(*(void *)(v843 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v841, v842, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v841, 0, 1, v1257);
  }
  uint64_t v844 = v809[24];
  uint64_t v845 = v807 + v844;
  uint64_t v846 = v808 + v844;
  *(void *)uint64_t v845 = *(void *)v846;
  *(unsigned char *)(v845 + 8) = *(unsigned char *)(v846 + 8);
  uint64_t v847 = v809[25];
  uint64_t v848 = (void *)(v807 + v847);
  uint64_t v849 = (const void *)(v808 + v847);
  if (__swift_getEnumTagSinglePayload(v808 + v847, 1, v1255))
  {
    uint64_t v850 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v848, v849, *(void *)(*(void *)(v850 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v848, v849, v1255);
    __swift_storeEnumTagSinglePayload((uint64_t)v848, 0, 1, v1255);
  }
  uint64_t v47 = v1256;
  __swift_storeEnumTagSinglePayload(v807, 0, 1, (uint64_t)v809);
  uint64_t v48 = v1253;
LABEL_410:
  uint64_t v870 = v48[11];
  uint64_t v871 = v46 + v870;
  uint64_t v872 = v47 + v870;
  uint64_t v873 = (int *)type metadata accessor for FlightReservation(0);
  int v874 = __swift_getEnumTagSinglePayload(v871, 1, (uint64_t)v873);
  int v875 = __swift_getEnumTagSinglePayload(v872, 1, (uint64_t)v873);
  if (!v874)
  {
    if (v875)
    {
      outlined destroy of EmailDocument(v871, (void (*)(void))type metadata accessor for FlightReservation);
      goto LABEL_416;
    }
    uint64_t v884 = *(void *)(v872 + 8);
    *(void *)uint64_t v871 = *(void *)v872;
    *(void *)(v871 + 8) = v884;
    swift_bridgeObjectRelease();
    *(void *)(v871 + 16) = *(void *)(v872 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v871 + 24) = *(void *)(v872 + 24);
    swift_bridgeObjectRelease();
    uint64_t v885 = *(void *)(v872 + 40);
    *(void *)(v871 + 32) = *(void *)(v872 + 32);
    *(void *)(v871 + 40) = v885;
    swift_bridgeObjectRelease();
    uint64_t v886 = *(void *)(v872 + 56);
    *(void *)(v871 + 48) = *(void *)(v872 + 48);
    *(void *)(v871 + 56) = v886;
    swift_bridgeObjectRelease();
    uint64_t v887 = *(void *)(v872 + 72);
    *(void *)(v871 + 64) = *(void *)(v872 + 64);
    *(void *)(v871 + 72) = v887;
    swift_bridgeObjectRelease();
    uint64_t v888 = *(void *)(v872 + 88);
    *(void *)(v871 + 80) = *(void *)(v872 + 80);
    *(void *)(v871 + 88) = v888;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v871 + 96) = *(unsigned char *)(v872 + 96);
    uint64_t v889 = *(void *)(v872 + 112);
    *(void *)(v871 + 104) = *(void *)(v872 + 104);
    *(void *)(v871 + 112) = v889;
    swift_bridgeObjectRelease();
    uint64_t v890 = v873[13];
    uint64_t v891 = (const void *)(v872 + v890);
    v1243 = (void *)(v871 + v890);
    uint64_t v892 = v1255;
    int v893 = __swift_getEnumTagSinglePayload(v871 + v890, 1, v1255);
    int v894 = __swift_getEnumTagSinglePayload((uint64_t)v891, 1, v1255);
    if (v893)
    {
      if (v894)
      {
        uint64_t v895 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v1243, v891, *(void *)(*(void *)(v895 - 8) + 64));
        uint64_t v892 = v1255;
      }
      else
      {
        uint64_t v892 = v1255;
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v1243, v891, v1255);
        __swift_storeEnumTagSinglePayload((uint64_t)v1243, 0, 1, v1255);
      }
    }
    else
    {
      uint64_t v915 = *(void *)(v1255 - 8);
      if (v894)
      {
        (*(void (**)(void *, uint64_t))(v915 + 8))(v1243, v1255);
        uint64_t v916 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v1243, v891, *(void *)(*(void *)(v916 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v915 + 40))(v1243, v891, v1255);
      }
    }
    uint64_t v917 = v873[14];
    uint64_t v918 = (const void *)(v872 + v917);
    v1244 = (void *)(v871 + v917);
    int v919 = __swift_getEnumTagSinglePayload(v871 + v917, 1, v892);
    int v920 = __swift_getEnumTagSinglePayload((uint64_t)v918, 1, v892);
    if (v919)
    {
      if (v920)
      {
        size_t v921 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v922 = v1244;
LABEL_446:
        memcpy(v922, v918, v921);
        goto LABEL_449;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v1244, v918, v1255);
      __swift_storeEnumTagSinglePayload((uint64_t)v1244, 0, 1, v1255);
    }
    else
    {
      uint64_t v923 = *(void *)(v892 - 8);
      if (v920)
      {
        (*(void (**)(void *, uint64_t))(v923 + 8))(v1244, v892);
        size_t v921 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v922 = v1244;
        goto LABEL_446;
      }
      (*(void (**)(void *, const void *, uint64_t))(v923 + 40))(v1244, v918, v892);
    }
LABEL_449:
    uint64_t v924 = v873[15];
    int v925 = (void *)(v871 + v924);
    int v926 = (uint64_t *)(v872 + v924);
    uint64_t v928 = *v926;
    uint64_t v927 = v926[1];
    void *v925 = v928;
    v925[1] = v927;
    swift_bridgeObjectRelease();
    uint64_t v929 = v873[16];
    uint64_t v930 = (void *)(v871 + v929);
    uint64_t v931 = (uint64_t *)(v872 + v929);
    uint64_t v933 = *v931;
    uint64_t v932 = v931[1];
    *uint64_t v930 = v933;
    v930[1] = v932;
    swift_bridgeObjectRelease();
    uint64_t v934 = v873[17];
    uint64_t v935 = (void *)(v871 + v934);
    uint64_t v936 = (uint64_t *)(v872 + v934);
    uint64_t v938 = *v936;
    uint64_t v937 = v936[1];
    void *v935 = v938;
    v935[1] = v937;
    swift_bridgeObjectRelease();
    uint64_t v939 = v873[18];
    uint64_t v940 = v871 + v939;
    __srcc = (void *)(v872 + v939);
    uint64_t v941 = type metadata accessor for DateComponents();
    uint64_t v942 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v941 - 8) + 40);
    v942(v940, __srcc, v941);
    v942(v871 + v873[19], (void *)(v872 + v873[19]), v941);
    uint64_t v943 = v873[20];
    v944 = (void *)(v871 + v943);
    uint64_t v945 = (uint64_t *)(v872 + v943);
    uint64_t v947 = *v945;
    uint64_t v946 = v945[1];
    void *v944 = v947;
    v944[1] = v946;
    swift_bridgeObjectRelease();
    uint64_t v948 = v873[21];
    uint64_t v949 = (void *)(v871 + v948);
    v950 = (uint64_t *)(v872 + v948);
    uint64_t v952 = *v950;
    uint64_t v951 = v950[1];
    void *v949 = v952;
    v949[1] = v951;
    swift_bridgeObjectRelease();
    uint64_t v953 = v873[22];
    uint64_t v954 = (void *)(v871 + v953);
    v955 = (uint64_t *)(v872 + v953);
    uint64_t v957 = *v955;
    uint64_t v956 = v955[1];
    *uint64_t v954 = v957;
    v954[1] = v956;
    swift_bridgeObjectRelease();
    uint64_t v958 = v873[23];
    v959 = (void *)(v871 + v958);
    uint64_t v960 = (uint64_t *)(v872 + v958);
    uint64_t v962 = *v960;
    uint64_t v961 = v960[1];
    void *v959 = v962;
    v959[1] = v961;
    swift_bridgeObjectRelease();
    uint64_t v963 = v873[24];
    v964 = (void *)(v871 + v963);
    v965 = (uint64_t *)(v872 + v963);
    uint64_t v967 = *v965;
    uint64_t v966 = v965[1];
    void *v964 = v967;
    v964[1] = v966;
    swift_bridgeObjectRelease();
    uint64_t v968 = v873[25];
    uint64_t v969 = (void *)(v871 + v968);
    v970 = (uint64_t *)(v872 + v968);
    uint64_t v972 = *v970;
    uint64_t v971 = v970[1];
    *uint64_t v969 = v972;
    v969[1] = v971;
    swift_bridgeObjectRelease();
    uint64_t v973 = v873[26];
    v974 = (void *)(v871 + v973);
    uint64_t v975 = (uint64_t *)(v872 + v973);
    uint64_t v977 = *v975;
    uint64_t v976 = v975[1];
    void *v974 = v977;
    v974[1] = v976;
    swift_bridgeObjectRelease();
    uint64_t v978 = v873[27];
    v979 = (void *)(v871 + v978);
    v980 = (uint64_t *)(v872 + v978);
    uint64_t v982 = *v980;
    uint64_t v981 = v980[1];
    void *v979 = v982;
    v979[1] = v981;
    swift_bridgeObjectRelease();
    uint64_t v983 = v873[28];
    uint64_t v984 = (void *)(v871 + v983);
    uint64_t v985 = (uint64_t *)(v872 + v983);
    uint64_t v987 = *v985;
    uint64_t v986 = v985[1];
    *uint64_t v984 = v987;
    v984[1] = v986;
    swift_bridgeObjectRelease();
    uint64_t v988 = v873[29];
    v989 = (void *)(v871 + v988);
    uint64_t v990 = (uint64_t *)(v872 + v988);
    uint64_t v992 = *v990;
    uint64_t v991 = v990[1];
    void *v989 = v992;
    v989[1] = v991;
    swift_bridgeObjectRelease();
    uint64_t v993 = v873[30];
    long long v994 = (void *)(v871 + v993);
    uint64_t v995 = (uint64_t *)(v872 + v993);
    uint64_t v997 = *v995;
    uint64_t v996 = v995[1];
    *long long v994 = v997;
    v994[1] = v996;
    swift_bridgeObjectRelease();
    uint64_t v998 = v873[31];
    uint64_t v999 = (void *)(v871 + v998);
    v1000 = (uint64_t *)(v872 + v998);
    uint64_t v1002 = *v1000;
    uint64_t v1001 = v1000[1];
    void *v999 = v1002;
    v999[1] = v1001;
    swift_bridgeObjectRelease();
    uint64_t v1003 = v873[32];
    uint64_t v1004 = (void *)(v871 + v1003);
    uint64_t v1005 = (uint64_t *)(v872 + v1003);
    uint64_t v1007 = *v1005;
    uint64_t v1006 = v1005[1];
    *uint64_t v1004 = v1007;
    v1004[1] = v1006;
    swift_bridgeObjectRelease();
    *(void *)(v871 + v873[33]) = *(void *)(v872 + v873[33]);
    swift_bridgeObjectRelease();
    *(void *)(v871 + v873[34]) = *(void *)(v872 + v873[34]);
    swift_bridgeObjectRelease();
    uint64_t v1008 = v873[35];
    uint64_t v1009 = (void *)(v871 + v1008);
    v1010 = (uint64_t *)(v872 + v1008);
    uint64_t v1012 = *v1010;
    uint64_t v1011 = v1010[1];
    *uint64_t v1009 = v1012;
    v1009[1] = v1011;
    swift_bridgeObjectRelease();
    uint64_t v1013 = v873[36];
    uint64_t v1014 = (void *)(v871 + v1013);
    uint64_t v1015 = (uint64_t *)(v872 + v1013);
    uint64_t v1017 = *v1015;
    uint64_t v1016 = v1015[1];
    *uint64_t v1014 = v1017;
    v1014[1] = v1016;
    swift_bridgeObjectRelease();
    uint64_t v1018 = v873[37];
    uint64_t v1019 = (void *)(v871 + v1018);
    int v1020 = (uint64_t *)(v872 + v1018);
    uint64_t v1022 = *v1020;
    uint64_t v1021 = v1020[1];
    *uint64_t v1019 = v1022;
    v1019[1] = v1021;
    swift_bridgeObjectRelease();
    uint64_t v1023 = v873[38];
    uint64_t v1024 = (void *)(v871 + v1023);
    uint64_t v1025 = v872 + v1023;
    LODWORD(v942) = __swift_getEnumTagSinglePayload(v871 + v1023, 1, v1257);
    __src = (void *)v1025;
    int v1026 = __swift_getEnumTagSinglePayload(v1025, 1, v1257);
    if (v942)
    {
      uint64_t v46 = v1252;
      uint64_t v48 = v1253;
      if (!v1026)
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v1024, __src, v1257);
        uint64_t v46 = v1252;
        __swift_storeEnumTagSinglePayload((uint64_t)v1024, 0, 1, v1257);
LABEL_455:
        uint64_t v1029 = v873[39];
        uint64_t v1030 = (void *)(v871 + v1029);
        uint64_t v1031 = (uint64_t *)(v872 + v1029);
        uint64_t v1033 = *v1031;
        uint64_t v1032 = v1031[1];
        void *v1030 = v1033;
        v1030[1] = v1032;
        swift_bridgeObjectRelease();
        uint64_t v1034 = v873[40];
        uint64_t v1035 = (void *)(v871 + v1034);
        uint64_t v1036 = (uint64_t *)(v872 + v1034);
        uint64_t v1038 = *v1036;
        uint64_t v1037 = v1036[1];
        *uint64_t v1035 = v1038;
        v1035[1] = v1037;
        swift_bridgeObjectRelease();
        uint64_t v1039 = v873[41];
        uint64_t v1040 = v871 + v1039;
        uint64_t v1041 = v872 + v1039;
        *(void *)uint64_t v1040 = *(void *)v1041;
        *(unsigned char *)(v1040 + 8) = *(unsigned char *)(v1041 + 8);
        uint64_t v1042 = v873[42];
        uint64_t v1043 = (void *)(v871 + v1042);
        uint64_t v1044 = (uint64_t *)(v872 + v1042);
        uint64_t v1046 = *v1044;
        uint64_t v1045 = v1044[1];
        void *v1043 = v1046;
        v1043[1] = v1045;
        swift_bridgeObjectRelease();
        uint64_t v1047 = v873[43];
        uint64_t v1048 = v871 + v1047;
        uint64_t v1049 = v872 + v1047;
        *(_OWORD *)uint64_t v1048 = *(_OWORD *)v1049;
        *(void *)(v1048 + 13) = *(void *)(v1049 + 13);
        uint64_t v1050 = v873[44];
        uint64_t v1051 = (void *)(v871 + v1050);
        uint64_t v1052 = (uint64_t *)(v872 + v1050);
        uint64_t v1054 = *v1052;
        uint64_t v1053 = v1052[1];
        void *v1051 = v1054;
        v1051[1] = v1053;
        swift_bridgeObjectRelease();
        uint64_t v1055 = v873[45];
        v1056 = (void *)(v871 + v1055);
        v1057 = (uint64_t *)(v872 + v1055);
        uint64_t v1059 = *v1057;
        uint64_t v1058 = v1057[1];
        void *v1056 = v1059;
        v1056[1] = v1058;
        swift_bridgeObjectRelease();
        uint64_t v1060 = v873[46];
        uint64_t v1061 = (void *)(v871 + v1060);
        uint64_t v1062 = (uint64_t *)(v872 + v1060);
        uint64_t v1064 = *v1062;
        uint64_t v1063 = v1062[1];
        *uint64_t v1061 = v1064;
        v1061[1] = v1063;
        swift_bridgeObjectRelease();
        uint64_t v1065 = v873[47];
        long long v1066 = (void *)(v871 + v1065);
        uint64_t v1067 = (uint64_t *)(v872 + v1065);
        uint64_t v1069 = *v1067;
        uint64_t v1068 = v1067[1];
        void *v1066 = v1069;
        v1066[1] = v1068;
        swift_bridgeObjectRelease();
        uint64_t v47 = v1256;
        goto LABEL_456;
      }
    }
    else
    {
      uint64_t v1027 = *(void *)(v1257 - 8);
      uint64_t v46 = v1252;
      uint64_t v48 = v1253;
      if (!v1026)
      {
        (*(void (**)(void *, void *, uint64_t))(v1027 + 40))(v1024, __src, v1257);
        goto LABEL_455;
      }
      (*(void (**)(void *, uint64_t))(v1027 + 8))(v1024, v1257);
    }
    uint64_t v1028 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v1024, __src, *(void *)(*(void *)(v1028 - 8) + 64));
    goto LABEL_455;
  }
  if (v875)
  {
LABEL_416:
    uint64_t v883 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
    memcpy((void *)v871, (const void *)v872, *(void *)(*(void *)(v883 - 8) + 64));
    goto LABEL_456;
  }
  long long v876 = *(_OWORD *)(v872 + 16);
  *(_OWORD *)uint64_t v871 = *(_OWORD *)v872;
  *(_OWORD *)(v871 + 16) = v876;
  long long v877 = *(_OWORD *)(v872 + 48);
  *(_OWORD *)(v871 + 32) = *(_OWORD *)(v872 + 32);
  *(_OWORD *)(v871 + 48) = v877;
  long long v878 = *(_OWORD *)(v872 + 80);
  *(_OWORD *)(v871 + 64) = *(_OWORD *)(v872 + 64);
  *(_OWORD *)(v871 + 80) = v878;
  *(unsigned char *)(v871 + 96) = *(unsigned char *)(v872 + 96);
  *(_OWORD *)(v871 + 104) = *(_OWORD *)(v872 + 104);
  uint64_t v879 = v873[13];
  uint64_t v880 = (void *)(v871 + v879);
  uint64_t v881 = (const void *)(v872 + v879);
  if (__swift_getEnumTagSinglePayload(v872 + v879, 1, v1255))
  {
    uint64_t v882 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v880, v881, *(void *)(*(void *)(v882 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v880, v881, v1255);
    __swift_storeEnumTagSinglePayload((uint64_t)v880, 0, 1, v1255);
  }
  uint64_t v896 = v873[14];
  int v897 = (void *)(v871 + v896);
  uint64_t v898 = (const void *)(v872 + v896);
  uint64_t v1251 = a3;
  if (__swift_getEnumTagSinglePayload(v872 + v896, 1, v1255))
  {
    uint64_t v899 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v897, v898, *(void *)(*(void *)(v899 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1255 - 8) + 32))(v897, v898, v1255);
    __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, v1255);
  }
  *(_OWORD *)(v871 + v873[15]) = *(_OWORD *)(v872 + v873[15]);
  *(_OWORD *)(v871 + v873[16]) = *(_OWORD *)(v872 + v873[16]);
  *(_OWORD *)(v871 + v873[17]) = *(_OWORD *)(v872 + v873[17]);
  uint64_t v900 = v873[18];
  uint64_t v901 = v871 + v900;
  uint64_t v902 = v872 + v900;
  uint64_t v903 = type metadata accessor for DateComponents();
  uint64_t v904 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v903 - 8) + 32);
  v904(v901, v902, v903);
  v904(v871 + v873[19], v872 + v873[19], v903);
  *(_OWORD *)(v871 + v873[20]) = *(_OWORD *)(v872 + v873[20]);
  *(_OWORD *)(v871 + v873[21]) = *(_OWORD *)(v872 + v873[21]);
  *(_OWORD *)(v871 + v873[22]) = *(_OWORD *)(v872 + v873[22]);
  *(_OWORD *)(v871 + v873[23]) = *(_OWORD *)(v872 + v873[23]);
  *(_OWORD *)(v871 + v873[24]) = *(_OWORD *)(v872 + v873[24]);
  *(_OWORD *)(v871 + v873[25]) = *(_OWORD *)(v872 + v873[25]);
  *(_OWORD *)(v871 + v873[26]) = *(_OWORD *)(v872 + v873[26]);
  *(_OWORD *)(v871 + v873[27]) = *(_OWORD *)(v872 + v873[27]);
  *(_OWORD *)(v871 + v873[28]) = *(_OWORD *)(v872 + v873[28]);
  *(_OWORD *)(v871 + v873[29]) = *(_OWORD *)(v872 + v873[29]);
  *(_OWORD *)(v871 + v873[30]) = *(_OWORD *)(v872 + v873[30]);
  *(_OWORD *)(v871 + v873[31]) = *(_OWORD *)(v872 + v873[31]);
  *(_OWORD *)(v871 + v873[32]) = *(_OWORD *)(v872 + v873[32]);
  *(void *)(v871 + v873[33]) = *(void *)(v872 + v873[33]);
  *(void *)(v871 + v873[34]) = *(void *)(v872 + v873[34]);
  *(_OWORD *)(v871 + v873[35]) = *(_OWORD *)(v872 + v873[35]);
  *(_OWORD *)(v871 + v873[36]) = *(_OWORD *)(v872 + v873[36]);
  *(_OWORD *)(v871 + v873[37]) = *(_OWORD *)(v872 + v873[37]);
  uint64_t v905 = v873[38];
  int v906 = (void *)(v871 + v905);
  int v907 = (const void *)(v872 + v905);
  if (__swift_getEnumTagSinglePayload(v872 + v905, 1, v1257))
  {
    uint64_t v908 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v906, v907, *(void *)(*(void *)(v908 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1257 - 8) + 32))(v906, v907, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v906, 0, 1, v1257);
  }
  a3 = v1251;
  uint64_t v47 = v1256;
  *(_OWORD *)(v871 + v873[39]) = *(_OWORD *)(v872 + v873[39]);
  *(_OWORD *)(v871 + v873[40]) = *(_OWORD *)(v872 + v873[40]);
  uint64_t v909 = v873[41];
  uint64_t v910 = v871 + v909;
  uint64_t v911 = v872 + v909;
  *(void *)uint64_t v910 = *(void *)v911;
  *(unsigned char *)(v910 + 8) = *(unsigned char *)(v911 + 8);
  *(_OWORD *)(v871 + v873[42]) = *(_OWORD *)(v872 + v873[42]);
  uint64_t v912 = v873[43];
  uint64_t v913 = v871 + v912;
  uint64_t v914 = v872 + v912;
  *(_OWORD *)uint64_t v913 = *(_OWORD *)v914;
  *(void *)(v913 + 13) = *(void *)(v914 + 13);
  *(_OWORD *)(v871 + v873[44]) = *(_OWORD *)(v872 + v873[44]);
  *(_OWORD *)(v871 + v873[45]) = *(_OWORD *)(v872 + v873[45]);
  *(_OWORD *)(v871 + v873[46]) = *(_OWORD *)(v872 + v873[46]);
  *(_OWORD *)(v871 + v873[47]) = *(_OWORD *)(v872 + v873[47]);
  __swift_storeEnumTagSinglePayload(v871, 0, 1, (uint64_t)v873);
  uint64_t v48 = v1253;
LABEL_456:
  uint64_t v1070 = v48[12];
  uint64_t v1071 = v46 + v1070;
  uint64_t v1072 = v47 + v1070;
  uint64_t v1073 = (int *)type metadata accessor for HotelReservation(0);
  int v1074 = __swift_getEnumTagSinglePayload(v1071, 1, (uint64_t)v1073);
  int v1075 = __swift_getEnumTagSinglePayload(v1072, 1, (uint64_t)v1073);
  if (!v1074)
  {
    if (v1075)
    {
      outlined destroy of EmailDocument(v1071, (void (*)(void))type metadata accessor for HotelReservation);
      goto LABEL_462;
    }
    uint64_t v1085 = *(void *)(v1072 + 8);
    *(void *)uint64_t v1071 = *(void *)v1072;
    *(void *)(v1071 + 8) = v1085;
    swift_bridgeObjectRelease();
    *(void *)(v1071 + 16) = *(void *)(v1072 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v1071 + 24) = *(void *)(v1072 + 24);
    swift_bridgeObjectRelease();
    uint64_t v1086 = *(void *)(v1072 + 40);
    *(void *)(v1071 + 32) = *(void *)(v1072 + 32);
    *(void *)(v1071 + 40) = v1086;
    swift_bridgeObjectRelease();
    uint64_t v1087 = *(void *)(v1072 + 56);
    *(void *)(v1071 + 48) = *(void *)(v1072 + 48);
    *(void *)(v1071 + 56) = v1087;
    swift_bridgeObjectRelease();
    uint64_t v1088 = *(void *)(v1072 + 72);
    *(void *)(v1071 + 64) = *(void *)(v1072 + 64);
    *(void *)(v1071 + 72) = v1088;
    swift_bridgeObjectRelease();
    uint64_t v1089 = *(void *)(v1072 + 88);
    *(void *)(v1071 + 80) = *(void *)(v1072 + 80);
    *(void *)(v1071 + 88) = v1089;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1071 + 96) = *(unsigned char *)(v1072 + 96);
    uint64_t v1090 = *(void *)(v1072 + 112);
    *(void *)(v1071 + 104) = *(void *)(v1072 + 104);
    *(void *)(v1071 + 112) = v1090;
    swift_bridgeObjectRelease();
    uint64_t v1091 = *(void *)(v1072 + 128);
    *(void *)(v1071 + 120) = *(void *)(v1072 + 120);
    *(void *)(v1071 + 128) = v1091;
    swift_bridgeObjectRelease();
    uint64_t v1092 = v1073[14];
    uint64_t v1093 = v1071 + v1092;
    __srca = (void *)(v1072 + v1092);
    uint64_t v1094 = type metadata accessor for DateComponents();
    v1245 = (void *)v1093;
    LODWORD(v1093) = __swift_getEnumTagSinglePayload(v1093, 1, v1094);
    uint64_t v1254 = v1094;
    int v1095 = __swift_getEnumTagSinglePayload((uint64_t)__srca, 1, v1094);
    if (v1093)
    {
      if (v1095)
      {
        size_t v1096 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                      - 8)
                          + 64);
        uint64_t v1097 = v1245;
LABEL_473:
        memcpy(v1097, __srca, v1096);
        goto LABEL_477;
      }
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v1094 - 8) + 32))(v1245, __srca, v1094);
      __swift_storeEnumTagSinglePayload((uint64_t)v1245, 0, 1, v1094);
    }
    else
    {
      uint64_t v1111 = *(void *)(v1094 - 8);
      if (v1095)
      {
        (*(void (**)(void *, uint64_t))(v1111 + 8))(v1245, v1094);
        size_t v1096 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                      - 8)
                          + 64);
        uint64_t v1097 = v1245;
        goto LABEL_473;
      }
      (*(void (**)(void *, void *, uint64_t))(v1111 + 40))(v1245, __srca, v1094);
    }
LABEL_477:
    uint64_t v1112 = v1073[15];
    uint64_t v1113 = (const void *)(v1072 + v1112);
    __srcb = (void *)(v1071 + v1112);
    int v1240 = __swift_getEnumTagSinglePayload(v1071 + v1112, 1, v1254);
    int v1114 = __swift_getEnumTagSinglePayload((uint64_t)v1113, 1, v1254);
    if (v1240)
    {
      if (!v1114)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1254 - 8) + 32))(__srcb, v1113, v1254);
        __swift_storeEnumTagSinglePayload((uint64_t)__srcb, 0, 1, v1254);
        goto LABEL_485;
      }
      size_t v1115 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                    - 8)
                        + 64);
      v1116 = __srcb;
    }
    else
    {
      uint64_t v1117 = *(void *)(v1254 - 8);
      if (!v1114)
      {
        (*(void (**)(void *, const void *, uint64_t))(v1117 + 40))(__srcb, v1113, v1254);
        goto LABEL_485;
      }
      (*(void (**)(void *, uint64_t))(v1117 + 8))(__srcb, v1254);
      size_t v1115 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                    - 8)
                        + 64);
      v1116 = __srcb;
    }
    memcpy(v1116, v1113, v1115);
LABEL_485:
    uint64_t v1118 = v1073[16];
    uint64_t v1119 = (void *)(v1071 + v1118);
    uint64_t v1120 = (uint64_t *)(v1072 + v1118);
    uint64_t v1122 = *v1120;
    uint64_t v1121 = v1120[1];
    void *v1119 = v1122;
    v1119[1] = v1121;
    swift_bridgeObjectRelease();
    uint64_t v1123 = v1073[17];
    uint64_t v1124 = (void *)(v1071 + v1123);
    uint64_t v1125 = (uint64_t *)(v1072 + v1123);
    uint64_t v1127 = *v1125;
    uint64_t v1126 = v1125[1];
    void *v1124 = v1127;
    v1124[1] = v1126;
    swift_bridgeObjectRelease();
    uint64_t v1128 = v1073[18];
    uint64_t v1129 = (void *)(v1071 + v1128);
    uint64_t v1130 = (uint64_t *)(v1072 + v1128);
    uint64_t v1132 = *v1130;
    uint64_t v1131 = v1130[1];
    *uint64_t v1129 = v1132;
    v1129[1] = v1131;
    swift_bridgeObjectRelease();
    uint64_t v1133 = v1073[19];
    uint64_t v1134 = (void *)(v1071 + v1133);
    uint64_t v1135 = (uint64_t *)(v1072 + v1133);
    uint64_t v1137 = *v1135;
    uint64_t v1136 = v1135[1];
    void *v1134 = v1137;
    v1134[1] = v1136;
    swift_bridgeObjectRelease();
    uint64_t v1138 = v1073[20];
    uint64_t v1139 = (void *)(v1071 + v1138);
    uint64_t v1140 = (uint64_t *)(v1072 + v1138);
    uint64_t v1142 = *v1140;
    uint64_t v1141 = v1140[1];
    void *v1139 = v1142;
    v1139[1] = v1141;
    swift_bridgeObjectRelease();
    *(void *)(v1071 + v1073[21]) = *(void *)(v1072 + v1073[21]);
    swift_bridgeObjectRelease();
    *(void *)(v1071 + v1073[22]) = *(void *)(v1072 + v1073[22]);
    swift_bridgeObjectRelease();
    uint64_t v1143 = v1073[23];
    uint64_t v1144 = v1071 + v1143;
    uint64_t v1145 = v1072 + v1143;
    *(void *)uint64_t v1144 = *(void *)v1145;
    *(unsigned char *)(v1144 + 8) = *(unsigned char *)(v1145 + 8);
    uint64_t v1146 = v1073[24];
    uint64_t v1147 = v1071 + v1146;
    uint64_t v1148 = v1072 + v1146;
    *(unsigned char *)(v1147 + 8) = *(unsigned char *)(v1148 + 8);
    *(void *)uint64_t v1147 = *(void *)v1148;
    uint64_t v1149 = v1073[25];
    uint64_t v1150 = (void *)(v1071 + v1149);
    uint64_t v1151 = (uint64_t *)(v1072 + v1149);
    uint64_t v1153 = *v1151;
    uint64_t v1152 = v1151[1];
    void *v1150 = v1153;
    v1150[1] = v1152;
    swift_bridgeObjectRelease();
    uint64_t v1154 = v1073[26];
    uint64_t v1155 = (void *)(v1071 + v1154);
    uint64_t v1156 = (uint64_t *)(v1072 + v1154);
    uint64_t v1158 = *v1156;
    uint64_t v1157 = v1156[1];
    *uint64_t v1155 = v1158;
    v1155[1] = v1157;
    swift_bridgeObjectRelease();
    uint64_t v1159 = v1073[27];
    uint64_t v1160 = (void *)(v1071 + v1159);
    uint64_t v1161 = (uint64_t *)(v1072 + v1159);
    uint64_t v1163 = *v1161;
    uint64_t v1162 = v1161[1];
    void *v1160 = v1163;
    v1160[1] = v1162;
    swift_bridgeObjectRelease();
    uint64_t v1164 = v1073[28];
    uint64_t v1165 = (void *)(v1071 + v1164);
    uint64_t v1166 = (uint64_t *)(v1072 + v1164);
    uint64_t v1168 = *v1166;
    uint64_t v1167 = v1166[1];
    *uint64_t v1165 = v1168;
    v1165[1] = v1167;
    swift_bridgeObjectRelease();
    uint64_t v1169 = v1073[29];
    uint64_t v1170 = v1071 + v1169;
    uint64_t v1171 = v1072 + v1169;
    *(void *)uint64_t v1170 = *(void *)v1171;
    *(unsigned char *)(v1170 + 8) = *(unsigned char *)(v1171 + 8);
    uint64_t v21 = v1255;
    uint64_t v47 = v1256;
    goto LABEL_486;
  }
  if (v1075)
  {
LABEL_462:
    uint64_t v1084 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
    memcpy((void *)v1071, (const void *)v1072, *(void *)(*(void *)(v1084 - 8) + 64));
    uint64_t v21 = v1255;
    goto LABEL_486;
  }
  long long v1076 = *(_OWORD *)(v1072 + 16);
  *(_OWORD *)uint64_t v1071 = *(_OWORD *)v1072;
  *(_OWORD *)(v1071 + 16) = v1076;
  long long v1077 = *(_OWORD *)(v1072 + 48);
  *(_OWORD *)(v1071 + 32) = *(_OWORD *)(v1072 + 32);
  *(_OWORD *)(v1071 + 48) = v1077;
  long long v1078 = *(_OWORD *)(v1072 + 80);
  *(_OWORD *)(v1071 + 64) = *(_OWORD *)(v1072 + 64);
  *(_OWORD *)(v1071 + 80) = v1078;
  *(unsigned char *)(v1071 + 96) = *(unsigned char *)(v1072 + 96);
  *(_OWORD *)(v1071 + 104) = *(_OWORD *)(v1072 + 104);
  *(_OWORD *)(v1071 + 120) = *(_OWORD *)(v1072 + 120);
  uint64_t v1079 = v1073[14];
  uint64_t v1080 = (void *)(v1071 + v1079);
  uint64_t v1081 = (const void *)(v1072 + v1079);
  uint64_t v1082 = type metadata accessor for DateComponents();
  if (__swift_getEnumTagSinglePayload((uint64_t)v1081, 1, v1082))
  {
    uint64_t v1083 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1080, v1081, *(void *)(*(void *)(v1083 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1082 - 8) + 32))(v1080, v1081, v1082);
    __swift_storeEnumTagSinglePayload((uint64_t)v1080, 0, 1, v1082);
  }
  uint64_t v1098 = v1073[15];
  int v1099 = (void *)(v1071 + v1098);
  uint64_t v1100 = (const void *)(v1072 + v1098);
  if (__swift_getEnumTagSinglePayload(v1072 + v1098, 1, v1082))
  {
    uint64_t v1101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1099, v1100, *(void *)(*(void *)(v1101 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1082 - 8) + 32))(v1099, v1100, v1082);
    __swift_storeEnumTagSinglePayload((uint64_t)v1099, 0, 1, v1082);
  }
  uint64_t v47 = v1256;
  *(_OWORD *)(v1071 + v1073[16]) = *(_OWORD *)(v1072 + v1073[16]);
  *(_OWORD *)(v1071 + v1073[17]) = *(_OWORD *)(v1072 + v1073[17]);
  *(_OWORD *)(v1071 + v1073[18]) = *(_OWORD *)(v1072 + v1073[18]);
  *(_OWORD *)(v1071 + v1073[19]) = *(_OWORD *)(v1072 + v1073[19]);
  *(_OWORD *)(v1071 + v1073[20]) = *(_OWORD *)(v1072 + v1073[20]);
  *(void *)(v1071 + v1073[21]) = *(void *)(v1072 + v1073[21]);
  *(void *)(v1071 + v1073[22]) = *(void *)(v1072 + v1073[22]);
  uint64_t v1102 = v1073[23];
  uint64_t v1103 = v1071 + v1102;
  uint64_t v1104 = v1072 + v1102;
  *(unsigned char *)(v1103 + 8) = *(unsigned char *)(v1104 + 8);
  *(void *)uint64_t v1103 = *(void *)v1104;
  uint64_t v1105 = v1073[24];
  uint64_t v1106 = v1071 + v1105;
  uint64_t v1107 = v1072 + v1105;
  *(unsigned char *)(v1106 + 8) = *(unsigned char *)(v1107 + 8);
  *(void *)uint64_t v1106 = *(void *)v1107;
  *(_OWORD *)(v1071 + v1073[25]) = *(_OWORD *)(v1072 + v1073[25]);
  *(_OWORD *)(v1071 + v1073[26]) = *(_OWORD *)(v1072 + v1073[26]);
  *(_OWORD *)(v1071 + v1073[27]) = *(_OWORD *)(v1072 + v1073[27]);
  *(_OWORD *)(v1071 + v1073[28]) = *(_OWORD *)(v1072 + v1073[28]);
  uint64_t v1108 = v1073[29];
  uint64_t v1109 = v1071 + v1108;
  uint64_t v1110 = v1072 + v1108;
  *(void *)uint64_t v1109 = *(void *)v1110;
  *(unsigned char *)(v1109 + 8) = *(unsigned char *)(v1110 + 8);
  __swift_storeEnumTagSinglePayload(v1071, 0, 1, (uint64_t)v1073);
  uint64_t v48 = v1253;
  uint64_t v21 = v1255;
LABEL_486:
  uint64_t v1172 = v48[13];
  uint64_t v1173 = v46 + v1172;
  uint64_t v1174 = v47 + v1172;
  uint64_t v48 = (int *)type metadata accessor for RestaurantReservation(0);
  int v1175 = __swift_getEnumTagSinglePayload(v1173, 1, (uint64_t)v48);
  int v1176 = __swift_getEnumTagSinglePayload(v1174, 1, (uint64_t)v48);
  if (v1175)
  {
    if (!v1176)
    {
      long long v1177 = *(_OWORD *)(v1174 + 16);
      *(_OWORD *)uint64_t v1173 = *(_OWORD *)v1174;
      *(_OWORD *)(v1173 + 16) = v1177;
      long long v1178 = *(_OWORD *)(v1174 + 48);
      *(_OWORD *)(v1173 + 32) = *(_OWORD *)(v1174 + 32);
      *(_OWORD *)(v1173 + 48) = v1178;
      long long v1179 = *(_OWORD *)(v1174 + 80);
      *(_OWORD *)(v1173 + 64) = *(_OWORD *)(v1174 + 64);
      *(_OWORD *)(v1173 + 80) = v1179;
      *(unsigned char *)(v1173 + 96) = *(unsigned char *)(v1174 + 96);
      *(_OWORD *)(v1173 + 104) = *(_OWORD *)(v1174 + 104);
      *(_OWORD *)(v1173 + 120) = *(_OWORD *)(v1174 + 120);
      uint64_t v1180 = v48[14];
      uint64_t v1181 = (void *)(v1173 + v1180);
      uint64_t v1182 = (const void *)(v1174 + v1180);
      uint64_t v1183 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v1182, 1, v1183))
      {
        uint64_t v1184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v1181, v1182, *(void *)(*(void *)(v1184 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1183 - 8) + 32))(v1181, v1182, v1183);
        __swift_storeEnumTagSinglePayload((uint64_t)v1181, 0, 1, v1183);
      }
      uint64_t v21 = v1255;
      *(_OWORD *)(v1173 + v48[15]) = *(_OWORD *)(v1174 + v48[15]);
      *(_OWORD *)(v1173 + v48[16]) = *(_OWORD *)(v1174 + v48[16]);
      *(_OWORD *)(v1173 + v48[17]) = *(_OWORD *)(v1174 + v48[17]);
      *(_OWORD *)(v1173 + v48[18]) = *(_OWORD *)(v1174 + v48[18]);
      *(_OWORD *)(v1173 + v48[19]) = *(_OWORD *)(v1174 + v48[19]);
      *(void *)(v1173 + v48[20]) = *(void *)(v1174 + v48[20]);
      *(_OWORD *)(v1173 + v48[21]) = *(_OWORD *)(v1174 + v48[21]);
      *(_OWORD *)(v1173 + v48[22]) = *(_OWORD *)(v1174 + v48[22]);
      *(_OWORD *)(v1173 + v48[23]) = *(_OWORD *)(v1174 + v48[23]);
      uint64_t v281 = v1173;
LABEL_124:
      __swift_storeEnumTagSinglePayload(v281, 0, 1, (uint64_t)v48);
      goto LABEL_125;
    }
    goto LABEL_492;
  }
  if (v1176)
  {
    outlined destroy of EmailDocument(v1173, (void (*)(void))type metadata accessor for RestaurantReservation);
LABEL_492:
    size_t v56 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?)
                                - 8)
                    + 64);
    long long v57 = (void *)v1173;
    long long v58 = (const void *)v1174;
    goto LABEL_25;
  }
  uint64_t v1185 = *(void *)(v1174 + 8);
  *(void *)uint64_t v1173 = *(void *)v1174;
  *(void *)(v1173 + 8) = v1185;
  swift_bridgeObjectRelease();
  *(void *)(v1173 + 16) = *(void *)(v1174 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v1173 + 24) = *(void *)(v1174 + 24);
  swift_bridgeObjectRelease();
  uint64_t v1186 = *(void *)(v1174 + 40);
  *(void *)(v1173 + 32) = *(void *)(v1174 + 32);
  *(void *)(v1173 + 40) = v1186;
  swift_bridgeObjectRelease();
  uint64_t v1187 = *(void *)(v1174 + 56);
  *(void *)(v1173 + 48) = *(void *)(v1174 + 48);
  *(void *)(v1173 + 56) = v1187;
  swift_bridgeObjectRelease();
  uint64_t v1188 = *(void *)(v1174 + 72);
  *(void *)(v1173 + 64) = *(void *)(v1174 + 64);
  *(void *)(v1173 + 72) = v1188;
  swift_bridgeObjectRelease();
  uint64_t v1189 = *(void *)(v1174 + 88);
  *(void *)(v1173 + 80) = *(void *)(v1174 + 80);
  *(void *)(v1173 + 88) = v1189;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1173 + 96) = *(unsigned char *)(v1174 + 96);
  uint64_t v1190 = *(void *)(v1174 + 112);
  *(void *)(v1173 + 104) = *(void *)(v1174 + 104);
  *(void *)(v1173 + 112) = v1190;
  swift_bridgeObjectRelease();
  uint64_t v1191 = *(void *)(v1174 + 128);
  *(void *)(v1173 + 120) = *(void *)(v1174 + 120);
  *(void *)(v1173 + 128) = v1191;
  swift_bridgeObjectRelease();
  uint64_t v1192 = v48[14];
  uint64_t v1193 = (void *)(v1173 + v1192);
  v1194 = (const void *)(v1174 + v1192);
  uint64_t v1195 = type metadata accessor for DateComponents();
  int v1196 = __swift_getEnumTagSinglePayload((uint64_t)v1193, 1, v1195);
  int v1197 = __swift_getEnumTagSinglePayload((uint64_t)v1194, 1, v1195);
  if (!v1196)
  {
    uint64_t v1198 = *(void *)(v1195 - 8);
    if (!v1197)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1198 + 40))(v1193, v1194, v1195);
      goto LABEL_501;
    }
    (*(void (**)(void *, uint64_t))(v1198 + 8))(v1193, v1195);
    goto LABEL_500;
  }
  if (v1197)
  {
LABEL_500:
    uint64_t v1199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1193, v1194, *(void *)(*(void *)(v1199 - 8) + 64));
    goto LABEL_501;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1195 - 8) + 32))(v1193, v1194, v1195);
  __swift_storeEnumTagSinglePayload((uint64_t)v1193, 0, 1, v1195);
LABEL_501:
  uint64_t v21 = v1255;
  uint64_t v1200 = v48[15];
  uint64_t v1201 = (void *)(v1173 + v1200);
  uint64_t v1202 = (uint64_t *)(v1174 + v1200);
  uint64_t v1204 = *v1202;
  uint64_t v1203 = v1202[1];
  void *v1201 = v1204;
  v1201[1] = v1203;
  swift_bridgeObjectRelease();
  uint64_t v1205 = v48[16];
  uint64_t v1206 = (void *)(v1173 + v1205);
  uint64_t v1207 = (uint64_t *)(v1174 + v1205);
  uint64_t v1209 = *v1207;
  uint64_t v1208 = v1207[1];
  void *v1206 = v1209;
  v1206[1] = v1208;
  swift_bridgeObjectRelease();
  uint64_t v1210 = v48[17];
  uint64_t v1211 = (void *)(v1173 + v1210);
  uint64_t v1212 = (uint64_t *)(v1174 + v1210);
  uint64_t v1214 = *v1212;
  uint64_t v1213 = v1212[1];
  *uint64_t v1211 = v1214;
  v1211[1] = v1213;
  swift_bridgeObjectRelease();
  uint64_t v1215 = v48[18];
  uint64_t v1216 = (void *)(v1173 + v1215);
  uint64_t v1217 = (uint64_t *)(v1174 + v1215);
  uint64_t v1219 = *v1217;
  uint64_t v1218 = v1217[1];
  void *v1216 = v1219;
  v1216[1] = v1218;
  swift_bridgeObjectRelease();
  uint64_t v1220 = v48[19];
  uint64_t v1221 = (void *)(v1173 + v1220);
  uint64_t v1222 = (uint64_t *)(v1174 + v1220);
  uint64_t v1224 = *v1222;
  uint64_t v1223 = v1222[1];
  void *v1221 = v1224;
  v1221[1] = v1223;
  swift_bridgeObjectRelease();
  *(void *)(v1173 + v48[20]) = *(void *)(v1174 + v48[20]);
  swift_bridgeObjectRelease();
  uint64_t v1225 = v48[21];
  uint64_t v1226 = (void *)(v1173 + v1225);
  uint64_t v1227 = (uint64_t *)(v1174 + v1225);
  uint64_t v1229 = *v1227;
  uint64_t v1228 = v1227[1];
  *uint64_t v1226 = v1229;
  v1226[1] = v1228;
  swift_bridgeObjectRelease();
  uint64_t v1230 = v48[22];
  uint64_t v1231 = (void *)(v1173 + v1230);
  uint64_t v1232 = (uint64_t *)(v1174 + v1230);
  uint64_t v1234 = *v1232;
  uint64_t v1233 = v1232[1];
  *uint64_t v1231 = v1234;
  v1231[1] = v1233;
  swift_bridgeObjectRelease();
  uint64_t v1235 = v48[23];
  v1236 = (void *)(v1173 + v1235);
  v1237 = (uint64_t *)(v1174 + v1235);
  uint64_t v1239 = *v1237;
  uint64_t v1238 = v1237[1];
  void *v1236 = v1239;
  v1236[1] = v1238;
  swift_bridgeObjectRelease();
LABEL_125:
  uint64_t v282 = a3[20];
  uint64_t v283 = (void *)((char *)a1 + v282);
  uint64_t v284 = (void *)((char *)a2 + v282);
  uint64_t v285 = (int *)type metadata accessor for PreExtractedCard(0);
  int v286 = __swift_getEnumTagSinglePayload((uint64_t)v283, 1, (uint64_t)v285);
  int v287 = __swift_getEnumTagSinglePayload((uint64_t)v284, 1, (uint64_t)v285);
  if (!v286)
  {
    if (v287)
    {
      outlined destroy of EmailDocument((uint64_t)v283, (void (*)(void))type metadata accessor for PreExtractedCard);
      goto LABEL_131;
    }
    uint64_t v296 = v284[1];
    *uint64_t v283 = *v284;
    v283[1] = v296;
    swift_bridgeObjectRelease();
    uint64_t v297 = v284[3];
    v283[2] = v284[2];
    v283[3] = v297;
    swift_bridgeObjectRelease();
    uint64_t v298 = v284[5];
    v283[4] = v284[4];
    v283[5] = v298;
    swift_bridgeObjectRelease();
    uint64_t v299 = v284[7];
    v283[6] = v284[6];
    v283[7] = v299;
    swift_bridgeObjectRelease();
    uint64_t v300 = v284[9];
    v283[8] = v284[8];
    v283[9] = v300;
    swift_bridgeObjectRelease();
    uint64_t v301 = v284[11];
    v283[10] = v284[10];
    v283[11] = v301;
    swift_bridgeObjectRelease();
    uint64_t v302 = v285[10];
    uint64_t v303 = (char *)v283 + v302;
    uint64_t v304 = (char *)v284 + v302;
    int v305 = __swift_getEnumTagSinglePayload((uint64_t)v283 + v302, 1, v1257);
    int v306 = __swift_getEnumTagSinglePayload((uint64_t)v304, 1, v1257);
    if (v305)
    {
      if (!v306)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v303, v304, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v303, 0, 1, v1257);
        goto LABEL_146;
      }
    }
    else
    {
      uint64_t v315 = *(void *)(v1257 - 8);
      if (!v306)
      {
        (*(void (**)(char *, char *, uint64_t))(v315 + 40))(v303, v304, v1257);
LABEL_146:
        uint64_t v317 = v285[11];
        uint64_t v318 = (char *)v283 + v317;
        uint64_t v319 = (char *)v284 + v317;
        int v320 = __swift_getEnumTagSinglePayload((uint64_t)v283 + v317, 1, v1257);
        int v321 = __swift_getEnumTagSinglePayload((uint64_t)v319, 1, v1257);
        if (v320)
        {
          if (!v321)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v318, v319, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v318, 0, 1, v1257);
            goto LABEL_152;
          }
        }
        else
        {
          uint64_t v322 = *(void *)(v1257 - 8);
          if (!v321)
          {
            (*(void (**)(char *, char *, uint64_t))(v322 + 40))(v318, v319, v1257);
LABEL_152:
            uint64_t v324 = v285[12];
            uint64_t v325 = (void *)((char *)v283 + v324);
            uint64_t v326 = (void *)((char *)v284 + v324);
            uint64_t v328 = *v326;
            uint64_t v327 = v326[1];
            *uint64_t v325 = v328;
            v325[1] = v327;
            swift_bridgeObjectRelease();
            uint64_t v329 = v285[13];
            uint64_t v330 = (void *)((char *)v283 + v329);
            uint64_t v331 = (void *)((char *)v284 + v329);
            uint64_t v333 = *v331;
            uint64_t v332 = v331[1];
            *uint64_t v330 = v333;
            v330[1] = v332;
            swift_bridgeObjectRelease();
            uint64_t v334 = v285[14];
            uint64_t v335 = (void *)((char *)v283 + v334);
            uint64_t v336 = (void *)((char *)v284 + v334);
            uint64_t v338 = *v336;
            uint64_t v337 = v336[1];
            void *v335 = v338;
            v335[1] = v337;
            swift_bridgeObjectRelease();
            uint64_t v339 = v285[15];
            uint64_t v340 = (char *)v283 + v339;
            uint64_t v341 = (char *)v284 + v339;
            int v342 = __swift_getEnumTagSinglePayload((uint64_t)v283 + v339, 1, v1257);
            int v343 = __swift_getEnumTagSinglePayload((uint64_t)v341, 1, v1257);
            if (v342)
            {
              if (!v343)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v340, v341, v1257);
                __swift_storeEnumTagSinglePayload((uint64_t)v340, 0, 1, v1257);
LABEL_158:
                uint64_t v21 = v1255;
                uint64_t v346 = v285[16];
                uint64_t v347 = (void *)((char *)v283 + v346);
                uint64_t v348 = (void *)((char *)v284 + v346);
                uint64_t v350 = *v348;
                uint64_t v349 = v348[1];
                void *v347 = v350;
                v347[1] = v349;
                swift_bridgeObjectRelease();
                uint64_t v351 = v285[17];
                uint64_t v352 = (void *)((char *)v283 + v351);
                uint64_t v353 = (void *)((char *)v284 + v351);
                uint64_t v355 = *v353;
                uint64_t v354 = v353[1];
                *uint64_t v352 = v355;
                v352[1] = v354;
                swift_bridgeObjectRelease();
                uint64_t v356 = v285[18];
                uint64_t v357 = (void *)((char *)v283 + v356);
                uint64_t v358 = (void *)((char *)v284 + v356);
                uint64_t v360 = *v358;
                uint64_t v359 = v358[1];
                void *v357 = v360;
                v357[1] = v359;
                swift_bridgeObjectRelease();
                uint64_t v361 = v285[19];
                uint64_t v362 = (void *)((char *)v283 + v361);
                uint64_t v363 = (void *)((char *)v284 + v361);
                uint64_t v365 = *v363;
                uint64_t v364 = v363[1];
                *uint64_t v362 = v365;
                v362[1] = v364;
                swift_bridgeObjectRelease();
                uint64_t v366 = v285[20];
                uint64_t v367 = (void *)((char *)v283 + v366);
                uint64_t v368 = (void *)((char *)v284 + v366);
                uint64_t v370 = *v368;
                uint64_t v369 = v368[1];
                *uint64_t v367 = v370;
                v367[1] = v369;
                swift_bridgeObjectRelease();
                uint64_t v371 = v285[21];
                uint64_t v372 = (void *)((char *)v283 + v371);
                uint64_t v373 = (void *)((char *)v284 + v371);
                uint64_t v375 = *v373;
                uint64_t v374 = v373[1];
                void *v372 = v375;
                v372[1] = v374;
                swift_bridgeObjectRelease();
                uint64_t v376 = v285[22];
                uint64_t v377 = (void *)((char *)v283 + v376);
                uint64_t v378 = (void *)((char *)v284 + v376);
                uint64_t v380 = *v378;
                uint64_t v379 = v378[1];
                void *v377 = v380;
                v377[1] = v379;
                swift_bridgeObjectRelease();
                uint64_t v381 = v285[23];
                uint64_t v382 = (void *)((char *)v283 + v381);
                uint64_t v383 = (void *)((char *)v284 + v381);
                uint64_t v385 = *v383;
                uint64_t v384 = v383[1];
                *uint64_t v382 = v385;
                v382[1] = v384;
                swift_bridgeObjectRelease();
                goto LABEL_159;
              }
            }
            else
            {
              uint64_t v344 = *(void *)(v1257 - 8);
              if (!v343)
              {
                (*(void (**)(char *, char *, uint64_t))(v344 + 40))(v340, v341, v1257);
                goto LABEL_158;
              }
              (*(void (**)(char *, uint64_t))(v344 + 8))(v340, v1257);
            }
            uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v340, v341, *(void *)(*(void *)(v345 - 8) + 64));
            goto LABEL_158;
          }
          (*(void (**)(char *, uint64_t))(v322 + 8))(v318, v1257);
        }
        uint64_t v323 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v318, v319, *(void *)(*(void *)(v323 - 8) + 64));
        goto LABEL_152;
      }
      (*(void (**)(char *, uint64_t))(v315 + 8))(v303, v1257);
    }
    uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v303, v304, *(void *)(*(void *)(v316 - 8) + 64));
    goto LABEL_146;
  }
  if (v287)
  {
LABEL_131:
    uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v283, v284, *(void *)(*(void *)(v295 - 8) + 64));
    goto LABEL_159;
  }
  long long v288 = *((_OWORD *)v284 + 1);
  *(_OWORD *)uint64_t v283 = *(_OWORD *)v284;
  *((_OWORD *)v283 + 1) = v288;
  long long v289 = *((_OWORD *)v284 + 3);
  *((_OWORD *)v283 + 2) = *((_OWORD *)v284 + 2);
  *((_OWORD *)v283 + 3) = v289;
  long long v290 = *((_OWORD *)v284 + 5);
  *((_OWORD *)v283 + 4) = *((_OWORD *)v284 + 4);
  *((_OWORD *)v283 + 5) = v290;
  uint64_t v291 = v285[10];
  uint64_t v292 = (char *)v283 + v291;
  uint64_t v293 = (char *)v284 + v291;
  if (__swift_getEnumTagSinglePayload((uint64_t)v284 + v291, 1, v1257))
  {
    uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v292, v293, *(void *)(*(void *)(v294 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v292, v293, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v1257);
  }
  uint64_t v307 = v285[11];
  uint64_t v308 = (char *)v283 + v307;
  uint64_t v309 = (char *)v284 + v307;
  if (__swift_getEnumTagSinglePayload((uint64_t)v284 + v307, 1, v1257))
  {
    uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v308, v309, *(void *)(*(void *)(v310 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v308, v309, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v308, 0, 1, v1257);
  }
  *(_OWORD *)((char *)v283 + v285[12]) = *(_OWORD *)((char *)v284 + v285[12]);
  *(_OWORD *)((char *)v283 + v285[13]) = *(_OWORD *)((char *)v284 + v285[13]);
  *(_OWORD *)((char *)v283 + v285[14]) = *(_OWORD *)((char *)v284 + v285[14]);
  uint64_t v311 = v285[15];
  uint64_t v312 = (char *)v283 + v311;
  uint64_t v313 = (char *)v284 + v311;
  if (__swift_getEnumTagSinglePayload((uint64_t)v284 + v311, 1, v1257))
  {
    uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v312, v313, *(void *)(*(void *)(v314 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v312, v313, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, v1257);
  }
  *(_OWORD *)((char *)v283 + v285[16]) = *(_OWORD *)((char *)v284 + v285[16]);
  *(_OWORD *)((char *)v283 + v285[17]) = *(_OWORD *)((char *)v284 + v285[17]);
  *(_OWORD *)((char *)v283 + v285[18]) = *(_OWORD *)((char *)v284 + v285[18]);
  *(_OWORD *)((char *)v283 + v285[19]) = *(_OWORD *)((char *)v284 + v285[19]);
  *(_OWORD *)((char *)v283 + v285[20]) = *(_OWORD *)((char *)v284 + v285[20]);
  *(_OWORD *)((char *)v283 + v285[21]) = *(_OWORD *)((char *)v284 + v285[21]);
  *(_OWORD *)((char *)v283 + v285[22]) = *(_OWORD *)((char *)v284 + v285[22]);
  *(_OWORD *)((char *)v283 + v285[23]) = *(_OWORD *)((char *)v284 + v285[23]);
  __swift_storeEnumTagSinglePayload((uint64_t)v283, 0, 1, (uint64_t)v285);
LABEL_159:
  uint64_t v386 = a3[21];
  uint64_t v387 = (void *)((char *)a1 + v386);
  uint64_t v388 = (void *)((char *)a2 + v386);
  uint64_t v389 = (int *)type metadata accessor for PreExtractedContact(0);
  int v390 = __swift_getEnumTagSinglePayload((uint64_t)v387, 1, (uint64_t)v389);
  int v391 = __swift_getEnumTagSinglePayload((uint64_t)v388, 1, (uint64_t)v389);
  if (!v390)
  {
    if (v391)
    {
      outlined destroy of EmailDocument((uint64_t)v387, (void (*)(void))type metadata accessor for PreExtractedContact);
      goto LABEL_165;
    }
    uint64_t v400 = v388[1];
    *uint64_t v387 = *v388;
    v387[1] = v400;
    swift_bridgeObjectRelease();
    uint64_t v401 = v388[3];
    v387[2] = v388[2];
    v387[3] = v401;
    swift_bridgeObjectRelease();
    uint64_t v402 = v388[5];
    v387[4] = v388[4];
    v387[5] = v402;
    swift_bridgeObjectRelease();
    uint64_t v403 = v388[7];
    v387[6] = v388[6];
    v387[7] = v403;
    swift_bridgeObjectRelease();
    v387[8] = v388[8];
    swift_bridgeObjectRelease();
    v387[9] = v388[9];
    swift_bridgeObjectRelease();
    uint64_t v404 = v388[11];
    v387[10] = v388[10];
    v387[11] = v404;
    swift_bridgeObjectRelease();
    uint64_t v405 = v389[11];
    uint64_t v406 = (char *)v387 + v405;
    uint64_t v407 = (char *)v388 + v405;
    int v408 = __swift_getEnumTagSinglePayload((uint64_t)v387 + v405, 1, v1257);
    int v409 = __swift_getEnumTagSinglePayload((uint64_t)v407, 1, v1257);
    if (v408)
    {
      if (!v409)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v406, v407, v1257);
        __swift_storeEnumTagSinglePayload((uint64_t)v406, 0, 1, v1257);
        goto LABEL_177;
      }
    }
    else
    {
      uint64_t v414 = *(void *)(v1257 - 8);
      if (!v409)
      {
        (*(void (**)(char *, char *, uint64_t))(v414 + 40))(v406, v407, v1257);
LABEL_177:
        uint64_t v416 = v389[12];
        uint64_t v417 = (void *)((char *)v387 + v416);
        uint64_t v418 = (void *)((char *)v388 + v416);
        uint64_t v420 = *v418;
        uint64_t v419 = v418[1];
        void *v417 = v420;
        v417[1] = v419;
        swift_bridgeObjectRelease();
        *(void *)((char *)v387 + v389[13]) = *(void *)((char *)v388 + v389[13]);
        swift_bridgeObjectRelease();
        uint64_t v421 = v389[14];
        uint64_t v422 = (char *)v387 + v421;
        uint64_t v423 = (char *)v388 + v421;
        int v424 = __swift_getEnumTagSinglePayload((uint64_t)v387 + v421, 1, v1257);
        int v425 = __swift_getEnumTagSinglePayload((uint64_t)v423, 1, v1257);
        if (v424)
        {
          if (!v425)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v422, v423, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v422, 0, 1, v1257);
LABEL_183:
            uint64_t v21 = v1255;
            *(void *)((char *)v387 + v389[15]) = *(void *)((char *)v388 + v389[15]);
            swift_bridgeObjectRelease();
            *(void *)((char *)v387 + v389[16]) = *(void *)((char *)v388 + v389[16]);
            swift_bridgeObjectRelease();
            uint64_t v428 = v389[17];
            uint64_t v429 = (void *)((char *)v387 + v428);
            uint64_t v430 = (void *)((char *)v388 + v428);
            uint64_t v432 = *v430;
            uint64_t v431 = v430[1];
            *uint64_t v429 = v432;
            v429[1] = v431;
            swift_bridgeObjectRelease();
            *(void *)((char *)v387 + v389[18]) = *(void *)((char *)v388 + v389[18]);
            swift_bridgeObjectRelease();
            *(void *)((char *)v387 + v389[19]) = *(void *)((char *)v388 + v389[19]);
            swift_bridgeObjectRelease();
            goto LABEL_184;
          }
        }
        else
        {
          uint64_t v426 = *(void *)(v1257 - 8);
          if (!v425)
          {
            (*(void (**)(char *, char *, uint64_t))(v426 + 40))(v422, v423, v1257);
            goto LABEL_183;
          }
          (*(void (**)(char *, uint64_t))(v426 + 8))(v422, v1257);
        }
        uint64_t v427 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v422, v423, *(void *)(*(void *)(v427 - 8) + 64));
        goto LABEL_183;
      }
      (*(void (**)(char *, uint64_t))(v414 + 8))(v406, v1257);
    }
    uint64_t v415 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v406, v407, *(void *)(*(void *)(v415 - 8) + 64));
    goto LABEL_177;
  }
  if (v391)
  {
LABEL_165:
    uint64_t v399 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v387, v388, *(void *)(*(void *)(v399 - 8) + 64));
    goto LABEL_184;
  }
  long long v392 = *((_OWORD *)v388 + 1);
  *(_OWORD *)uint64_t v387 = *(_OWORD *)v388;
  *((_OWORD *)v387 + 1) = v392;
  long long v393 = *((_OWORD *)v388 + 3);
  *((_OWORD *)v387 + 2) = *((_OWORD *)v388 + 2);
  *((_OWORD *)v387 + 3) = v393;
  long long v394 = *((_OWORD *)v388 + 5);
  *((_OWORD *)v387 + 4) = *((_OWORD *)v388 + 4);
  *((_OWORD *)v387 + 5) = v394;
  uint64_t v395 = v389[11];
  uint64_t v396 = (char *)v387 + v395;
  uint64_t v397 = (char *)v388 + v395;
  if (__swift_getEnumTagSinglePayload((uint64_t)v388 + v395, 1, v1257))
  {
    uint64_t v398 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v396, v397, *(void *)(*(void *)(v398 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v396, v397, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v396, 0, 1, v1257);
  }
  *(_OWORD *)((char *)v387 + v389[12]) = *(_OWORD *)((char *)v388 + v389[12]);
  *(void *)((char *)v387 + v389[13]) = *(void *)((char *)v388 + v389[13]);
  uint64_t v410 = v389[14];
  int v411 = (char *)v387 + v410;
  uint64_t v412 = (char *)v388 + v410;
  if (__swift_getEnumTagSinglePayload((uint64_t)v388 + v410, 1, v1257))
  {
    uint64_t v413 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v411, v412, *(void *)(*(void *)(v413 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v411, v412, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v411, 0, 1, v1257);
  }
  *(void *)((char *)v387 + v389[15]) = *(void *)((char *)v388 + v389[15]);
  *(void *)((char *)v387 + v389[16]) = *(void *)((char *)v388 + v389[16]);
  *(_OWORD *)((char *)v387 + v389[17]) = *(_OWORD *)((char *)v388 + v389[17]);
  *(void *)((char *)v387 + v389[18]) = *(void *)((char *)v388 + v389[18]);
  *(void *)((char *)v387 + v389[19]) = *(void *)((char *)v388 + v389[19]);
  __swift_storeEnumTagSinglePayload((uint64_t)v387, 0, 1, (uint64_t)v389);
LABEL_184:
  uint64_t v433 = a3[22];
  uint64_t v434 = (void *)((char *)a1 + v433);
  uint64_t v435 = (void *)((char *)a2 + v433);
  uint64_t v436 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  int v437 = __swift_getEnumTagSinglePayload((uint64_t)v434, 1, (uint64_t)v436);
  int v438 = __swift_getEnumTagSinglePayload((uint64_t)v435, 1, (uint64_t)v436);
  if (!v437)
  {
    if (v438)
    {
      outlined destroy of EmailDocument((uint64_t)v434, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
      goto LABEL_190;
    }
    uint64_t v446 = a3;
    uint64_t v447 = v435[1];
    *uint64_t v434 = *v435;
    v434[1] = v447;
    swift_bridgeObjectRelease();
    uint64_t v448 = v435[3];
    v434[2] = v435[2];
    v434[3] = v448;
    swift_bridgeObjectRelease();
    uint64_t v449 = v435[5];
    v434[4] = v435[4];
    v434[5] = v449;
    swift_bridgeObjectRelease();
    uint64_t v450 = v435[7];
    v434[6] = v435[6];
    v434[7] = v450;
    swift_bridgeObjectRelease();
    uint64_t v451 = v436[8];
    uint64_t v452 = (char *)v434 + v451;
    int v453 = (char *)v435 + v451;
    int v454 = __swift_getEnumTagSinglePayload((uint64_t)v434 + v451, 1, v21);
    int v455 = __swift_getEnumTagSinglePayload((uint64_t)v453, 1, v21);
    if (v454)
    {
      if (!v455)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 32))(v452, v453, v1255);
        __swift_storeEnumTagSinglePayload((uint64_t)v452, 0, 1, v1255);
        goto LABEL_205;
      }
    }
    else
    {
      uint64_t v467 = *(void *)(v21 - 8);
      if (!v455)
      {
        (*(void (**)(char *, char *, uint64_t))(v467 + 40))(v452, v453, v21);
LABEL_205:
        a3 = v446;
        uint64_t v469 = v436[9];
        uint64_t v470 = (void *)((char *)v434 + v469);
        uint64_t v471 = (void *)((char *)v435 + v469);
        uint64_t v473 = *v471;
        uint64_t v472 = v471[1];
        void *v470 = v473;
        v470[1] = v472;
        swift_bridgeObjectRelease();
        uint64_t v474 = v436[10];
        int v475 = (void *)((char *)v434 + v474);
        uint64_t v476 = (void *)((char *)v435 + v474);
        uint64_t v478 = *v476;
        uint64_t v477 = v476[1];
        *int v475 = v478;
        v475[1] = v477;
        swift_bridgeObjectRelease();
        uint64_t v479 = v436[11];
        uint64_t v480 = (void *)((char *)v434 + v479);
        uint64_t v481 = (void *)((char *)v435 + v479);
        uint64_t v483 = *v481;
        uint64_t v482 = v481[1];
        *uint64_t v480 = v483;
        v480[1] = v482;
        swift_bridgeObjectRelease();
        uint64_t v484 = v436[12];
        uint64_t v485 = (char *)v434 + v484;
        uint64_t v486 = (char *)v435 + v484;
        int v487 = __swift_getEnumTagSinglePayload((uint64_t)v434 + v484, 1, v1257);
        int v488 = __swift_getEnumTagSinglePayload((uint64_t)v486, 1, v1257);
        if (v487)
        {
          if (!v488)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v485, v486, v1257);
            __swift_storeEnumTagSinglePayload((uint64_t)v485, 0, 1, v1257);
            goto LABEL_211;
          }
        }
        else
        {
          uint64_t v489 = *(void *)(v1257 - 8);
          if (!v488)
          {
            (*(void (**)(char *, char *, uint64_t))(v489 + 40))(v485, v486, v1257);
LABEL_211:
            uint64_t v491 = v436[13];
            uint64_t v492 = (char *)v434 + v491;
            uint64_t v493 = (char *)v435 + v491;
            int v494 = __swift_getEnumTagSinglePayload((uint64_t)v434 + v491, 1, v1257);
            int v495 = __swift_getEnumTagSinglePayload((uint64_t)v493, 1, v1257);
            if (v494)
            {
              if (!v495)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v492, v493, v1257);
                __swift_storeEnumTagSinglePayload((uint64_t)v492, 0, 1, v1257);
LABEL_217:
                uint64_t v498 = v436[14];
                uint64_t v499 = (char *)v434 + v498;
                uint64_t v500 = (char *)v435 + v498;
                *(void *)uint64_t v499 = *(void *)v500;
                v499[8] = v500[8];
                uint64_t v501 = v436[15];
                uint64_t v502 = (void *)((char *)v434 + v501);
                uint64_t v503 = (void *)((char *)v435 + v501);
                uint64_t v505 = *v503;
                uint64_t v504 = v503[1];
                *uint64_t v502 = v505;
                v502[1] = v504;
                swift_bridgeObjectRelease();
                uint64_t v506 = v436[16];
                uint64_t v507 = (void *)((char *)v434 + v506);
                uint64_t v508 = (void *)((char *)v435 + v506);
                uint64_t v510 = *v508;
                uint64_t v509 = v508[1];
                *uint64_t v507 = v510;
                v507[1] = v509;
                swift_bridgeObjectRelease();
                uint64_t v511 = v436[17];
                uint64_t v512 = (void *)((char *)v434 + v511);
                uint64_t v513 = (void *)((char *)v435 + v511);
                uint64_t v515 = *v513;
                uint64_t v514 = v513[1];
                void *v512 = v515;
                v512[1] = v514;
                swift_bridgeObjectRelease();
                uint64_t v516 = v436[18];
                uint64_t v517 = (void *)((char *)v434 + v516);
                int v518 = (void *)((char *)v435 + v516);
                uint64_t v520 = *v518;
                uint64_t v519 = v518[1];
                void *v517 = v520;
                v517[1] = v519;
                swift_bridgeObjectRelease();
                uint64_t v521 = v436[19];
                uint64_t v522 = (void *)((char *)v434 + v521);
                uint64_t v523 = (void *)((char *)v435 + v521);
                uint64_t v525 = *v523;
                uint64_t v524 = v523[1];
                *uint64_t v522 = v525;
                v522[1] = v524;
                swift_bridgeObjectRelease();
                goto LABEL_218;
              }
            }
            else
            {
              uint64_t v496 = *(void *)(v1257 - 8);
              if (!v495)
              {
                (*(void (**)(char *, char *, uint64_t))(v496 + 40))(v492, v493, v1257);
                goto LABEL_217;
              }
              (*(void (**)(char *, uint64_t))(v496 + 8))(v492, v1257);
            }
            uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v492, v493, *(void *)(*(void *)(v497 - 8) + 64));
            goto LABEL_217;
          }
          (*(void (**)(char *, uint64_t))(v489 + 8))(v485, v1257);
        }
        uint64_t v490 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v485, v486, *(void *)(*(void *)(v490 - 8) + 64));
        goto LABEL_211;
      }
      (*(void (**)(char *, uint64_t))(v467 + 8))(v452, v21);
    }
    uint64_t v468 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v452, v453, *(void *)(*(void *)(v468 - 8) + 64));
    goto LABEL_205;
  }
  if (v438)
  {
LABEL_190:
    uint64_t v445 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v434, v435, *(void *)(*(void *)(v445 - 8) + 64));
    goto LABEL_218;
  }
  long long v439 = *((_OWORD *)v435 + 1);
  *(_OWORD *)uint64_t v434 = *(_OWORD *)v435;
  *((_OWORD *)v434 + 1) = v439;
  long long v440 = *((_OWORD *)v435 + 3);
  *((_OWORD *)v434 + 2) = *((_OWORD *)v435 + 2);
  *((_OWORD *)v434 + 3) = v440;
  uint64_t v441 = v436[8];
  uint64_t v442 = (char *)v434 + v441;
  uint64_t v443 = (char *)v435 + v441;
  if (__swift_getEnumTagSinglePayload((uint64_t)v435 + v441, 1, v21))
  {
    uint64_t v444 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v442, v443, *(void *)(*(void *)(v444 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v442, v443, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v442, 0, 1, v21);
  }
  *(_OWORD *)((char *)v434 + v436[9]) = *(_OWORD *)((char *)v435 + v436[9]);
  *(_OWORD *)((char *)v434 + v436[10]) = *(_OWORD *)((char *)v435 + v436[10]);
  *(_OWORD *)((char *)v434 + v436[11]) = *(_OWORD *)((char *)v435 + v436[11]);
  uint64_t v456 = v436[12];
  uint64_t v457 = (char *)v434 + v456;
  uint64_t v458 = (char *)v435 + v456;
  if (__swift_getEnumTagSinglePayload((uint64_t)v435 + v456, 1, v1257))
  {
    uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v457, v458, *(void *)(*(void *)(v459 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v457, v458, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v457, 0, 1, v1257);
  }
  uint64_t v460 = v436[13];
  uint64_t v461 = (char *)v434 + v460;
  int v462 = (char *)v435 + v460;
  if (__swift_getEnumTagSinglePayload((uint64_t)v435 + v460, 1, v1257))
  {
    uint64_t v463 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v461, v462, *(void *)(*(void *)(v463 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1257 - 8) + 32))(v461, v462, v1257);
    __swift_storeEnumTagSinglePayload((uint64_t)v461, 0, 1, v1257);
  }
  uint64_t v464 = v436[14];
  int v465 = (char *)v434 + v464;
  uint64_t v466 = (char *)v435 + v464;
  *(void *)int v465 = *(void *)v466;
  v465[8] = v466[8];
  *(_OWORD *)((char *)v434 + v436[15]) = *(_OWORD *)((char *)v435 + v436[15]);
  *(_OWORD *)((char *)v434 + v436[16]) = *(_OWORD *)((char *)v435 + v436[16]);
  *(_OWORD *)((char *)v434 + v436[17]) = *(_OWORD *)((char *)v435 + v436[17]);
  *(_OWORD *)((char *)v434 + v436[18]) = *(_OWORD *)((char *)v435 + v436[18]);
  *(_OWORD *)((char *)v434 + v436[19]) = *(_OWORD *)((char *)v435 + v436[19]);
  __swift_storeEnumTagSinglePayload((uint64_t)v434, 0, 1, (uint64_t)v436);
LABEL_218:
  uint64_t v526 = a3[23];
  uint64_t v527 = (void *)((char *)a1 + v526);
  uint64_t v528 = (void *)((char *)a2 + v526);
  if (!*(void *)((char *)a1 + v526 + 8))
  {
LABEL_222:
    memcpy(v527, v528, 0x90uLL);
    return a1;
  }
  uint64_t v529 = v528[1];
  if (!v529)
  {
    outlined destroy of PreExtractedBreadcrumb((uint64_t)v527);
    goto LABEL_222;
  }
  *uint64_t v527 = *v528;
  v527[1] = v529;
  swift_bridgeObjectRelease();
  v527[2] = v528[2];
  swift_bridgeObjectRelease();
  v527[3] = v528[3];
  swift_bridgeObjectRelease();
  v527[4] = v528[4];
  swift_bridgeObjectRelease();
  v527[5] = v528[5];
  swift_bridgeObjectRelease();
  v527[6] = v528[6];
  swift_bridgeObjectRelease();
  v527[7] = v528[7];
  swift_bridgeObjectRelease();
  v527[8] = v528[8];
  swift_bridgeObjectRelease();
  v527[9] = v528[9];
  swift_bridgeObjectRelease();
  v527[10] = v528[10];
  swift_bridgeObjectRelease();
  v527[11] = v528[11];
  swift_bridgeObjectRelease();
  v527[12] = v528[12];
  swift_bridgeObjectRelease();
  v527[13] = v528[13];
  swift_bridgeObjectRelease();
  v527[14] = v528[14];
  swift_bridgeObjectRelease();
  v527[15] = v528[15];
  swift_bridgeObjectRelease();
  v527[16] = v528[16];
  swift_bridgeObjectRelease();
  v527[17] = v528[17];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileSMSDocument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258519504);
}

uint64_t sub_258519504()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v1[10];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      uint64_t v5 = v1[11];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        uint64_t v5 = v1[19];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v8 + 84) == v0)
        {
          uint64_t v5 = v1[20];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          OUTLINED_FUNCTION_29_3();
          if (*(_DWORD *)(v9 + 84) == v0)
          {
            uint64_t v5 = v1[21];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            uint64_t v5 = v1[22];
          }
        }
      }
    }
  }
  uint64_t v10 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v10, v11, v12);
}

uint64_t storeEnumTagSinglePayload for MobileSMSDocument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25851964C);
}

void sub_25851964C()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = v0[10];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v5 + 84) == v1)
      {
        uint64_t v4 = v0[11];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v6 + 84) == v1)
        {
          uint64_t v4 = v0[19];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          OUTLINED_FUNCTION_29_3();
          if (*(_DWORD *)(v7 + 84) == v1)
          {
            uint64_t v4 = v0[20];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            OUTLINED_FUNCTION_29_3();
            if (*(_DWORD *)(v8 + 84) == v1)
            {
              uint64_t v4 = v0[21];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
              uint64_t v4 = v0[22];
            }
          }
        }
      }
    }
    uint64_t v9 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
}

void type metadata completion function for MobileSMSDocument()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PartialExtractedAttributes?, (void (*)(uint64_t))type metadata accessor for PartialExtractedAttributes);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedCard?, (void (*)(uint64_t))type metadata accessor for PreExtractedCard);
        if (v3 <= 0x3F)
        {
          type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedContact?, (void (*)(uint64_t))type metadata accessor for PreExtractedContact);
          if (v4 <= 0x3F)
          {
            type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedSharedLink?, (void (*)(uint64_t))type metadata accessor for PreExtractedSharedLink);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for PartialExtractedAttributes?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CalendarEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v16, 1, v13))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v17, v18, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v13);
    }
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    int v22 = (uint64_t *)((char *)v4 + v20);
    int v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *int v22 = *v23;
    v22[1] = v24;
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v25 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v26 = (uint64_t *)((char *)v4 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[13];
    uint64_t v30 = (uint64_t *)((char *)v4 + v29);
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = *(uint64_t *)((char *)a2 + v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      uint64_t v33 = *((void *)v31 + 1);
      uint64_t v34 = *((void *)v31 + 2);
      void *v30 = v32;
      v30[1] = v33;
      uint64_t v35 = *((void *)v31 + 3);
      uint64_t v36 = *((void *)v31 + 4);
      v30[2] = v34;
      v30[3] = v35;
      v30[4] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v37 = *((_OWORD *)v31 + 1);
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v37;
      v30[4] = *((void *)v31 + 4);
    }
  }
  return v4;
}

uint64_t destroy for CalendarEvent(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[8];
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[13]);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for CalendarEvent(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v14, 1, v12))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v15, v16, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)((char *)a1 + v18);
  uint64_t v21 = (void *)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v23 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[13];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)((char *)a2 + v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    uint64_t v31 = *((void *)v29 + 1);
    uint64_t v32 = *((void *)v29 + 2);
    *uint64_t v28 = v30;
    v28[1] = v31;
    uint64_t v33 = *((void *)v29 + 3);
    uint64_t v34 = *((void *)v29 + 4);
    v28[2] = v32;
    v28[3] = v33;
    v28[4] = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v35 = *((_OWORD *)v29 + 1);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v35;
    v28[4] = *((void *)v29 + 4);
  }
  return a1;
}

void *assignWithCopy for CalendarEvent(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v14, 1, v9);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v19 = *(void *)(v9 - 8);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
LABEL_13:
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[13];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)((char *)a2 + v27);
  if (*(void *)((char *)a1 + v27))
  {
    if (v30)
    {
      *uint64_t v28 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28[1] = *((void *)v29 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28[2] = *((void *)v29 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28[3] = *((void *)v29 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28[4] = *((void *)v29 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of DataDetectorResults((uint64_t)a1 + v27);
      uint64_t v31 = *((void *)v29 + 4);
      long long v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v32;
      v28[4] = v31;
    }
  }
  else if (v30)
  {
    *uint64_t v28 = v30;
    v28[1] = *((void *)v29 + 1);
    v28[2] = *((void *)v29 + 2);
    v28[3] = *((void *)v29 + 3);
    v28[4] = *((void *)v29 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *(_OWORD *)v29;
    long long v34 = *((_OWORD *)v29 + 1);
    v28[4] = *((void *)v29 + 4);
    *(_OWORD *)uint64_t v28 = v33;
    *((_OWORD *)v28 + 1) = v34;
  }
  return a1;
}

_OWORD *initializeWithTake for CalendarEvent(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v10))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  uint64_t v18 = a3[13];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  return a1;
}

void *assignWithTake for CalendarEvent(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v17, 1, v12);
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v12);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v18, v19, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v22 = *(void *)(v12 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v12);
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v18, v19, v12);
LABEL_13:
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[12];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[13];
  uint64_t v35 = (uint64_t)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  if (!*(void *)((char *)a1 + v34))
  {
LABEL_17:
    long long v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(_OWORD *)(v35 + 16) = v37;
    *(void *)(v35 + 32) = *((void *)v36 + 4);
    return a1;
  }
  if (!*(void *)v36)
  {
    outlined destroy of DataDetectorResults(v35);
    goto LABEL_17;
  }
  *(void *)uint64_t v35 = *(void *)v36;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 8) = *((void *)v36 + 1);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 16) = *((void *)v36 + 2);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 24) = *((void *)v36 + 3);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 32) = *((void *)v36 + 4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CalendarEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25851AB10);
}

uint64_t sub_25851AB10()
{
  return __swift_get_extra_inhabitant_index_6Tm();
}

uint64_t storeEnumTagSinglePayload for CalendarEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25851AB30);
}

void sub_25851AB30()
{
}

void type metadata completion function for CalendarEvent()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for Photo(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a3[11];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[10] = a2[10];
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v672 = v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v17 = a3;
    uint64_t v18 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
    uint64_t v19 = a3[15];
    *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
    uint64_t v20 = a3[16];
    uint64_t v21 = a3[17];
    uint64_t v22 = (void *)((char *)a1 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)a1 + v21);
    uint64_t v26 = (void *)((char *)a2 + v21);
    uint64_t v27 = type metadata accessor for PartialExtractedAttributes(0);
    swift_bridgeObjectRetain();
    uint64_t v28 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = (int *)v27;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
      uint64_t v16 = a1;
      uint64_t v31 = a2;
    }
    else
    {
      uint64_t v32 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v32;
      uint64_t v33 = *(int *)(v27 + 20);
      uint64_t v34 = (void *)((char *)v25 + v33);
      uint64_t v35 = (void *)((char *)v26 + v33);
      uint64_t v36 = type metadata accessor for RentalCarReservation(0);
      swift_bridgeObjectRetain();
      uint64_t v663 = v28;
      uint64_t v665 = (uint64_t)v29;
      uint64_t v668 = (uint64_t)v25;
      if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v38 = v35[1];
        *uint64_t v34 = *v35;
        v34[1] = v38;
        uint64_t v39 = v35[3];
        void v34[2] = v35[2];
        v34[3] = v39;
        uint64_t v40 = v35[5];
        v34[4] = v35[4];
        v34[5] = v40;
        uint64_t v41 = v35[7];
        v34[6] = v35[6];
        v34[7] = v41;
        uint64_t v42 = v35[9];
        v34[8] = v35[8];
        v34[9] = v42;
        uint64_t v43 = v35[11];
        v34[10] = v35[10];
        v34[11] = v43;
        uint64_t v44 = v35[13];
        v34[12] = v35[12];
        v34[13] = v44;
        uint64_t v45 = v35[15];
        v34[14] = v35[14];
        v34[15] = v45;
        *((unsigned char *)v34 + 128) = *((unsigned char *)v35 + 128);
        *(_WORD *)((char *)v34 + 129) = *(_WORD *)((char *)v35 + 129);
        uint64_t v46 = v35[18];
        v34[17] = v35[17];
        v34[18] = v46;
        uint64_t v47 = v35[20];
        v34[19] = v35[19];
        v34[20] = v47;
        uint64_t v48 = v35[22];
        v34[21] = v35[21];
        v34[22] = v48;
        uint64_t v49 = v35[24];
        v34[23] = v35[23];
        v34[24] = v49;
        uint64_t v50 = v35[26];
        v34[25] = v35[25];
        v34[26] = v50;
        uint64_t v51 = v35[28];
        v34[27] = v35[27];
        v34[28] = v51;
        uint64_t v52 = v35[30];
        v34[29] = v35[29];
        v34[30] = v52;
        uint64_t v53 = v35[32];
        v34[31] = v35[31];
        v34[32] = v53;
        uint64_t v654 = v35[34];
        v34[33] = v35[33];
        v34[34] = v654;
        uint64_t v54 = v35[36];
        v34[35] = v35[35];
        v34[36] = v54;
        uint64_t v55 = v35[38];
        v34[37] = v35[37];
        v34[38] = v55;
        uint64_t v56 = v35[40];
        v34[39] = v35[39];
        v34[40] = v56;
        uint64_t v57 = v35[42];
        v34[41] = v35[41];
        v34[42] = v57;
        uint64_t v58 = v35[44];
        v34[43] = v35[43];
        v34[44] = v58;
        uint64_t v59 = v35[46];
        v34[45] = v35[45];
        v34[46] = v59;
        uint64_t v60 = v35[47];
        *((unsigned char *)v34 + 384) = *((unsigned char *)v35 + 384);
        v34[47] = v60;
        uint64_t v61 = v35[50];
        v34[49] = v35[49];
        v34[50] = v61;
        uint64_t v62 = v35[52];
        v34[51] = v35[51];
        v34[52] = v62;
        uint64_t v63 = *(int *)(v36 + 140);
        __dst = (char *)v34 + v63;
        int v64 = (char *)v35 + v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v672))
        {
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v64, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(__dst, v64, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v672);
        }
        uint64_t v66 = *(int *)(v36 + 144);
        long long v67 = (char *)v34 + v66;
        long long v68 = (char *)v35 + v66;
        if (__swift_getEnumTagSinglePayload((uint64_t)v35 + v66, 1, v672))
        {
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v67, v68, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v672);
        }
        uint64_t v28 = v663;
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v70 = v29[6];
      long long v71 = (void *)((char *)v25 + v70);
      long long v72 = (void *)((char *)v28 + v70);
      uint64_t v73 = type metadata accessor for TicketedTransportation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
      {
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        uint64_t v75 = v72[1];
        *long long v71 = *v72;
        v71[1] = v75;
        uint64_t v76 = v72[3];
        v71[2] = v72[2];
        v71[3] = v76;
        uint64_t v77 = v72[5];
        v71[4] = v72[4];
        v71[5] = v77;
        uint64_t v78 = v72[7];
        v71[6] = v72[6];
        v71[7] = v78;
        uint64_t v79 = v72[9];
        v71[8] = v72[8];
        v71[9] = v79;
        uint64_t v80 = v72[11];
        v71[10] = v72[10];
        v71[11] = v80;
        uint64_t v81 = v72[13];
        v71[12] = v72[12];
        v71[13] = v81;
        uint64_t v82 = v72[15];
        v71[14] = v72[14];
        v71[15] = v82;
        *((unsigned char *)v71 + 128) = *((unsigned char *)v72 + 128);
        *(_WORD *)((char *)v71 + 129) = *(_WORD *)((char *)v72 + 129);
        uint64_t v83 = v72[18];
        v71[17] = v72[17];
        void v71[18] = v83;
        uint64_t v84 = v72[20];
        v71[19] = v72[19];
        v71[20] = v84;
        uint64_t v85 = v72[22];
        v71[21] = v72[21];
        v71[22] = v85;
        uint64_t v86 = v72[24];
        v71[23] = v72[23];
        v71[24] = v86;
        uint64_t v655 = v72[26];
        v71[25] = v72[25];
        v71[26] = v655;
        uint64_t v87 = v72[28];
        v71[27] = v72[27];
        v71[28] = v87;
        uint64_t v88 = v72[30];
        v71[29] = v72[29];
        v71[30] = v88;
        uint64_t v89 = v72[32];
        v71[31] = v72[31];
        v71[32] = v89;
        uint64_t v90 = v72[34];
        v71[33] = v72[33];
        v71[34] = v90;
        uint64_t v91 = v72[36];
        uint64_t v92 = v72[35];
        *((unsigned char *)v71 + 296) = *((unsigned char *)v72 + 296);
        v71[35] = v92;
        v71[36] = v91;
        uint64_t v93 = *(int *)(v73 + 112);
        int v628 = (char *)v71 + v93;
        uint64_t v94 = (char *)v72 + v93;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v672))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v628, v94, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v628, v94, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v628, 0, 1, v672);
        }
        uint64_t v96 = *(int *)(v73 + 116);
        uint64_t v97 = (char *)v71 + v96;
        long long v98 = (char *)v72 + v96;
        if (__swift_getEnumTagSinglePayload((uint64_t)v72 + v96, 1, v672))
        {
          uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v97, v98, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v672);
        }
        uint64_t v28 = v663;
        __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
      }
      uint64_t v100 = v29[7];
      long long v101 = (void *)(v668 + v100);
      long long v102 = (void *)((char *)v28 + v100);
      long long v103 = (int *)type metadata accessor for TicketedShow(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, (uint64_t)v103))
      {
        uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
        memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        uint64_t v105 = v102[1];
        *long long v101 = *v102;
        v101[1] = v105;
        uint64_t v106 = v102[3];
        v101[2] = v102[2];
        v101[3] = v106;
        uint64_t v107 = v102[5];
        v101[4] = v102[4];
        v101[5] = v107;
        uint64_t v108 = v102[7];
        v101[6] = v102[6];
        v101[7] = v108;
        uint64_t v109 = v102[9];
        v101[8] = v102[8];
        v101[9] = v109;
        uint64_t v110 = v102[11];
        v101[10] = v102[10];
        v101[11] = v110;
        uint64_t v111 = v102[13];
        v101[12] = v102[12];
        v101[13] = v111;
        uint64_t v112 = v102[15];
        v101[14] = v102[14];
        v101[15] = v112;
        *((unsigned char *)v101 + 128) = *((unsigned char *)v102 + 128);
        *(_WORD *)((char *)v101 + 129) = *(_WORD *)((char *)v102 + 129);
        uint64_t v113 = v102[18];
        v101[17] = v102[17];
        v101[18] = v113;
        uint64_t v114 = v102[20];
        v101[19] = v102[19];
        v101[20] = v114;
        uint64_t v115 = v102[22];
        v101[21] = v102[21];
        v101[22] = v115;
        uint64_t v116 = v102[24];
        v101[23] = v102[23];
        v101[24] = v116;
        uint64_t v117 = v102[26];
        v101[25] = v102[25];
        v101[26] = v117;
        uint64_t v118 = v102[28];
        v101[27] = v102[27];
        v101[28] = v118;
        uint64_t v656 = v102[30];
        v101[29] = v102[29];
        v101[30] = v656;
        uint64_t v119 = v102[32];
        v101[31] = v102[31];
        v101[32] = v119;
        uint64_t v120 = v102[34];
        v101[33] = v102[33];
        v101[34] = v120;
        uint64_t v121 = v102[36];
        uint64_t v122 = v102[35];
        *((unsigned char *)v101 + 296) = *((unsigned char *)v102 + 296);
        v101[35] = v122;
        v101[36] = v121;
        uint64_t v123 = v102[39];
        v101[38] = v102[38];
        v101[39] = v123;
        uint64_t v124 = v103[29];
        int v627 = (char *)v101 + v124;
        long long v125 = (char *)v102 + v124;
        uint64_t v126 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v126))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v627, v125, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v627, v125, v126);
          __swift_storeEnumTagSinglePayload((uint64_t)v627, 0, 1, v126);
        }
        uint64_t v128 = v103[30];
        uint64_t v129 = (void *)((char *)v101 + v128);
        uint64_t v130 = (void *)((char *)v102 + v128);
        uint64_t v131 = v130[1];
        *uint64_t v129 = *v130;
        v129[1] = v131;
        uint64_t v132 = v103[31];
        uint64_t v133 = (char *)v101 + v132;
        uint64_t v134 = (char *)v102 + v132;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v134, 1, v672))
        {
          uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v133, v134, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v672);
        }
        uint64_t v136 = v103[32];
        uint64_t v137 = (char *)v101 + v136;
        uint64_t v138 = (char *)v102 + v136;
        if (__swift_getEnumTagSinglePayload((uint64_t)v102 + v136, 1, v672))
        {
          uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v137, v138, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v672);
        }
        uint64_t v28 = v663;
        __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, (uint64_t)v103);
      }
      uint64_t v140 = v29[8];
      uint64_t v141 = (void *)(v668 + v140);
      uint64_t v142 = (void *)((char *)v28 + v140);
      uint64_t v143 = type metadata accessor for Appointment(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v143))
      {
        uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
        memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
      }
      else
      {
        uint64_t v145 = v142[1];
        void *v141 = *v142;
        v141[1] = v145;
        uint64_t v146 = v142[3];
        v141[2] = v142[2];
        v141[3] = v146;
        uint64_t v147 = v142[5];
        v141[4] = v142[4];
        v141[5] = v147;
        uint64_t v148 = v142[7];
        v141[6] = v142[6];
        v141[7] = v148;
        uint64_t v149 = v142[9];
        v141[8] = v142[8];
        v141[9] = v149;
        uint64_t v150 = v142[11];
        v141[10] = v142[10];
        v141[11] = v150;
        uint64_t v151 = v142[13];
        v141[12] = v142[12];
        v141[13] = v151;
        uint64_t v152 = v142[15];
        v141[14] = v142[14];
        v141[15] = v152;
        *((unsigned char *)v141 + 128) = *((unsigned char *)v142 + 128);
        *(_WORD *)((char *)v141 + 129) = *(_WORD *)((char *)v142 + 129);
        uint64_t v153 = v142[18];
        v141[17] = v142[17];
        v141[18] = v153;
        uint64_t v154 = v142[20];
        v141[19] = v142[19];
        v141[20] = v154;
        uint64_t v155 = v142[22];
        v141[21] = v142[21];
        v141[22] = v155;
        uint64_t v156 = v142[24];
        v141[23] = v142[23];
        v141[24] = v156;
        uint64_t v157 = v142[26];
        v141[25] = v142[25];
        v141[26] = v157;
        uint64_t v158 = v142[28];
        v141[27] = v142[27];
        v141[28] = v158;
        uint64_t v159 = v142[30];
        v141[29] = v142[29];
        v141[30] = v159;
        uint64_t v160 = v142[32];
        v141[31] = v142[31];
        v141[32] = v160;
        uint64_t v161 = v142[34];
        long long v631 = (void *)v142[33];
        *((unsigned char *)v141 + 280) = *((unsigned char *)v142 + 280);
        v141[33] = v631;
        v141[34] = v161;
        uint64_t v162 = v142[37];
        v141[36] = v142[36];
        v141[37] = v162;
        uint64_t v163 = *(int *)(v143 + 108);
        long long v629 = (char *)v141 + v163;
        uint64_t v164 = (char *)v142 + v163;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v164, 1, v672))
        {
          uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v629, v164, *(void *)(*(void *)(v165 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v629, v164, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v629, 0, 1, v672);
        }
        uint64_t v166 = *(int *)(v143 + 112);
        long long v167 = (char *)v141 + v166;
        long long v168 = (char *)v142 + v166;
        if (__swift_getEnumTagSinglePayload((uint64_t)v142 + v166, 1, v672))
        {
          uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v167, v168, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v167, 0, 1, v672);
        }
        uint64_t v28 = v663;
        __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v143);
      }
      uint64_t v170 = v29[9];
      long long v171 = (void *)(v668 + v170);
      long long v172 = (void *)((char *)v28 + v170);
      uint64_t v173 = type metadata accessor for Party(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v172, 1, v173))
      {
        uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
        memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
      }
      else
      {
        uint64_t v175 = v172[1];
        *long long v171 = *v172;
        v171[1] = v175;
        uint64_t v176 = v172[3];
        v171[2] = v172[2];
        v171[3] = v176;
        uint64_t v177 = v172[5];
        v171[4] = v172[4];
        v171[5] = v177;
        uint64_t v178 = v172[7];
        v171[6] = v172[6];
        v171[7] = v178;
        uint64_t v179 = v172[9];
        v171[8] = v172[8];
        v171[9] = v179;
        uint64_t v180 = v172[11];
        v171[10] = v172[10];
        v171[11] = v180;
        uint64_t v181 = v172[13];
        v171[12] = v172[12];
        v171[13] = v181;
        uint64_t v182 = v172[15];
        v171[14] = v172[14];
        v171[15] = v182;
        *((unsigned char *)v171 + 128) = *((unsigned char *)v172 + 128);
        *(_WORD *)((char *)v171 + 129) = *(_WORD *)((char *)v172 + 129);
        uint64_t v183 = v172[18];
        v171[17] = v172[17];
        v171[18] = v183;
        uint64_t v184 = v172[20];
        v171[19] = v172[19];
        v171[20] = v184;
        uint64_t v185 = v172[22];
        v171[21] = v172[21];
        v171[22] = v185;
        uint64_t v186 = v172[24];
        v171[23] = v172[23];
        v171[24] = v186;
        uint64_t v187 = v172[26];
        v171[25] = v172[25];
        v171[26] = v187;
        uint64_t v188 = v172[28];
        v171[27] = v172[27];
        v171[28] = v188;
        uint64_t v189 = v172[30];
        v171[29] = v172[29];
        v171[30] = v189;
        v171[31] = v172[31];
        uint64_t v633 = v173;
        uint64_t v190 = *(int *)(v173 + 96);
        long long v632 = (char *)v171 + v190;
        long long v191 = (char *)v172 + v190;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v191, 1, v672))
        {
          uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v632, v191, *(void *)(*(void *)(v192 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v632, v191, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v632, 0, 1, v672);
        }
        uint64_t v193 = *(int *)(v173 + 100);
        long long v194 = (char *)v171 + v193;
        long long v195 = (char *)v172 + v193;
        if (__swift_getEnumTagSinglePayload((uint64_t)v172 + v193, 1, v672))
        {
          uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v194, v195, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v194, v195, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v194, 0, 1, v672);
        }
        uint64_t v197 = *(int *)(v633 + 104);
        uint64_t v198 = (char *)v171 + v197;
        uint64_t v199 = (char *)v172 + v197;
        uint64_t v200 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v200))
        {
          uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
          __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v200);
        }
        uint64_t v28 = v663;
        __swift_storeEnumTagSinglePayload((uint64_t)v171, 0, 1, v633);
      }
      uint64_t v202 = v29[10];
      uint64_t v203 = (void *)(v668 + v202);
      uint64_t v204 = (void *)((char *)v28 + v202);
      uint64_t v205 = type metadata accessor for Trip(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v204, 1, v205))
      {
        uint64_t v206 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
        memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
      }
      else
      {
        uint64_t v207 = v204[1];
        *uint64_t v203 = *v204;
        v203[1] = v207;
        uint64_t v208 = v204[3];
        v203[2] = v204[2];
        v203[3] = v208;
        uint64_t v209 = v204[5];
        v203[4] = v204[4];
        v203[5] = v209;
        uint64_t v210 = v204[7];
        v203[6] = v204[6];
        v203[7] = v210;
        uint64_t v211 = v204[9];
        v203[8] = v204[8];
        v203[9] = v211;
        uint64_t v212 = v204[11];
        v203[10] = v204[10];
        v203[11] = v212;
        uint64_t v213 = v204[13];
        v203[12] = v204[12];
        v203[13] = v213;
        uint64_t v214 = v204[15];
        v203[14] = v204[14];
        v203[15] = v214;
        *((unsigned char *)v203 + 128) = *((unsigned char *)v204 + 128);
        *(_WORD *)((char *)v203 + 129) = *(_WORD *)((char *)v204 + 129);
        uint64_t v215 = v204[18];
        v203[17] = v204[17];
        v203[18] = v215;
        uint64_t v216 = v204[20];
        v203[19] = v204[19];
        v203[20] = v216;
        uint64_t v217 = v204[22];
        v203[21] = v204[21];
        v203[22] = v217;
        uint64_t v218 = v204[24];
        v203[23] = v204[23];
        v203[24] = v218;
        uint64_t v219 = v204[26];
        v203[25] = v204[25];
        v203[26] = v219;
        v203[27] = v204[27];
        uint64_t v637 = v205;
        uint64_t v220 = *(int *)(v205 + 88);
        long long v635 = (char *)v203 + v220;
        uint64_t v221 = (char *)v204 + v220;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v221, 1, v672))
        {
          uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v635, v221, *(void *)(*(void *)(v222 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v635, v221, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v635, 0, 1, v672);
        }
        uint64_t v223 = *(int *)(v205 + 92);
        uint64_t v224 = (char *)v203 + v223;
        uint64_t v225 = (char *)v204 + v223;
        if (__swift_getEnumTagSinglePayload((uint64_t)v204 + v223, 1, v672))
        {
          uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v224, v225, *(void *)(*(void *)(v226 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v224, v225, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v672);
        }
        uint64_t v227 = *(int *)(v637 + 96);
        long long v228 = (char *)v203 + v227;
        long long v229 = (char *)v204 + v227;
        *(void *)long long v228 = *(void *)v229;
        v228[8] = v229[8];
        uint64_t v230 = *(int *)(v637 + 100);
        uint64_t v231 = (char *)v203 + v230;
        uint64_t v232 = (char *)v204 + v230;
        uint64_t v233 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v232, 1, v233))
        {
          uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v231, v232, v233);
          __swift_storeEnumTagSinglePayload((uint64_t)v231, 0, 1, v233);
        }
        uint64_t v28 = v663;
        __swift_storeEnumTagSinglePayload((uint64_t)v203, 0, 1, v637);
      }
      uint64_t v235 = v29[11];
      uint64_t v236 = (void *)(v668 + v235);
      uint64_t v237 = (void *)((char *)v28 + v235);
      uint64_t v238 = (int *)type metadata accessor for FlightReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v238))
      {
        uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
      }
      else
      {
        uint64_t v240 = v237[1];
        *uint64_t v236 = *v237;
        v236[1] = v240;
        uint64_t v241 = v237[3];
        v236[2] = v237[2];
        v236[3] = v241;
        uint64_t v242 = v237[5];
        v236[4] = v237[4];
        v236[5] = v242;
        uint64_t v243 = v237[7];
        v236[6] = v237[6];
        v236[7] = v243;
        uint64_t v244 = v237[9];
        v236[8] = v237[8];
        v236[9] = v244;
        uint64_t v657 = v237[11];
        v236[10] = v237[10];
        v236[11] = v657;
        *((unsigned char *)v236 + 96) = *((unsigned char *)v237 + 96);
        uint64_t v245 = v237[14];
        v236[13] = v237[13];
        v236[14] = v245;
        uint64_t v246 = v238[13];
        uint64_t v642 = (char *)v236 + v246;
        uint64_t v646 = (char *)v237 + v246;
        uint64_t v651 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v646, 1, v651))
        {
          uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v642, v646, *(void *)(*(void *)(v247 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v651 - 8) + 16))(v642, v646, v651);
          __swift_storeEnumTagSinglePayload((uint64_t)v642, 0, 1, v651);
        }
        uint64_t v248 = v238[14];
        long long v249 = (char *)v236 + v248;
        uint64_t v250 = (char *)v237 + v248;
        if (__swift_getEnumTagSinglePayload((uint64_t)v237 + v248, 1, v651))
        {
          uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v249, v250, *(void *)(*(void *)(v251 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v651 - 8) + 16))(v249, v250, v651);
          __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, v651);
        }
        uint64_t v252 = v238[15];
        uint64_t v253 = (void *)((char *)v236 + v252);
        uint64_t v254 = (void *)((char *)v237 + v252);
        uint64_t v255 = v254[1];
        *uint64_t v253 = *v254;
        v253[1] = v255;
        uint64_t v256 = v238[16];
        uint64_t v257 = (void *)((char *)v236 + v256);
        uint64_t v258 = (void *)((char *)v237 + v256);
        uint64_t v259 = v258[1];
        *uint64_t v257 = *v258;
        v257[1] = v259;
        uint64_t v260 = v238[17];
        long long v261 = (void *)((char *)v236 + v260);
        uint64_t v262 = (void *)((char *)v237 + v260);
        uint64_t v263 = v262[1];
        *long long v261 = *v262;
        v261[1] = v263;
        uint64_t v264 = v238[18];
        uint64_t v658 = (char *)v236 + v264;
        uint64_t v265 = (char *)v237 + v264;
        uint64_t v266 = type metadata accessor for DateComponents();
        uint64_t v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v267(v658, v265, v266);
        v267((char *)v236 + v238[19], (char *)v237 + v238[19], v266);
        uint64_t v268 = v238[20];
        uint64_t v269 = (void *)((char *)v236 + v268);
        uint64_t v270 = (void *)((char *)v237 + v268);
        uint64_t v271 = v270[1];
        void *v269 = *v270;
        v269[1] = v271;
        uint64_t v272 = v238[21];
        long long v273 = (void *)((char *)v236 + v272);
        long long v274 = (void *)((char *)v237 + v272);
        uint64_t v275 = v274[1];
        void *v273 = *v274;
        v273[1] = v275;
        uint64_t v276 = v238[22];
        long long v277 = (void *)((char *)v236 + v276);
        uint64_t v278 = (void *)((char *)v237 + v276);
        uint64_t v659 = v278[1];
        void *v277 = *v278;
        v277[1] = v659;
        uint64_t v279 = v238[23];
        uint64_t v280 = (void *)((char *)v236 + v279);
        uint64_t v281 = (void *)((char *)v237 + v279);
        uint64_t v652 = v281[1];
        void *v280 = *v281;
        v280[1] = v652;
        uint64_t v282 = v238[24];
        uint64_t v283 = (void *)((char *)v236 + v282);
        uint64_t v284 = (void *)((char *)v237 + v282);
        uint64_t v647 = v284[1];
        *uint64_t v283 = *v284;
        v283[1] = v647;
        uint64_t v285 = v238[25];
        int v286 = (void *)((char *)v236 + v285);
        int v287 = (void *)((char *)v237 + v285);
        uint64_t v643 = (void *)v287[1];
        *int v286 = *v287;
        v286[1] = v643;
        uint64_t v288 = v238[26];
        long long v289 = (void *)((char *)v236 + v288);
        long long v290 = (void *)((char *)v237 + v288);
        uint64_t v641 = v290[1];
        void *v289 = *v290;
        v289[1] = v641;
        uint64_t v291 = v238[27];
        uint64_t v292 = (void *)((char *)v236 + v291);
        uint64_t v293 = (void *)((char *)v237 + v291);
        uint64_t v640 = v293[1];
        void *v292 = *v293;
        v292[1] = v640;
        uint64_t v294 = v238[28];
        uint64_t v295 = (void *)((char *)v236 + v294);
        uint64_t v296 = (void *)((char *)v237 + v294);
        uint64_t v639 = v296[1];
        *uint64_t v295 = *v296;
        v295[1] = v639;
        uint64_t v297 = v238[29];
        uint64_t v298 = (void *)((char *)v236 + v297);
        uint64_t v299 = (void *)((char *)v237 + v297);
        uint64_t v638 = v299[1];
        *uint64_t v298 = *v299;
        v298[1] = v638;
        uint64_t v300 = v238[30];
        uint64_t v301 = (void *)((char *)v236 + v300);
        uint64_t v302 = (void *)((char *)v237 + v300);
        uint64_t v636 = (void *)v302[1];
        *uint64_t v301 = *v302;
        v301[1] = v636;
        uint64_t v303 = v238[31];
        uint64_t v304 = (void *)((char *)v236 + v303);
        int v305 = (void *)((char *)v237 + v303);
        uint64_t v634 = v305[1];
        *uint64_t v304 = *v305;
        v304[1] = v634;
        uint64_t v306 = v238[32];
        uint64_t v307 = (void *)((char *)v236 + v306);
        uint64_t v308 = (void *)((char *)v237 + v306);
        uint64_t v309 = v308[1];
        *uint64_t v307 = *v308;
        v307[1] = v309;
        *(void *)((char *)v236 + v238[33]) = *(void *)((char *)v237 + v238[33]);
        *(void *)((char *)v236 + v238[34]) = *(void *)((char *)v237 + v238[34]);
        uint64_t v310 = v238[35];
        uint64_t v311 = (void *)((char *)v236 + v310);
        uint64_t v312 = (void *)((char *)v237 + v310);
        uint64_t v313 = v312[1];
        void *v311 = *v312;
        v311[1] = v313;
        uint64_t v314 = v238[36];
        uint64_t v315 = (void *)((char *)v236 + v314);
        uint64_t v316 = (void *)((char *)v237 + v314);
        uint64_t v317 = v316[1];
        void *v315 = *v316;
        v315[1] = v317;
        uint64_t v318 = v238[37];
        uint64_t v319 = (void *)((char *)v236 + v318);
        int v320 = (void *)((char *)v237 + v318);
        uint64_t v321 = v320[1];
        *uint64_t v319 = *v320;
        v319[1] = v321;
        uint64_t v322 = v238[38];
        long long v630 = (char *)v236 + v322;
        uint64_t v323 = (char *)v237 + v322;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v323, 1, v672))
        {
          uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v630, v323, *(void *)(*(void *)(v324 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v630, v323, v672);
          __swift_storeEnumTagSinglePayload((uint64_t)v630, 0, 1, v672);
        }
        uint64_t v325 = v238[39];
        uint64_t v326 = (void *)((char *)v236 + v325);
        uint64_t v327 = (void *)((char *)v237 + v325);
        uint64_t v328 = v327[1];
        *uint64_t v326 = *v327;
        v326[1] = v328;
        uint64_t v329 = v238[40];
        uint64_t v330 = (void *)((char *)v236 + v329);
        uint64_t v331 = (void *)((char *)v237 + v329);
        uint64_t v332 = v331[1];
        *uint64_t v330 = *v331;
        v330[1] = v332;
        uint64_t v333 = v238[41];
        uint64_t v334 = (char *)v236 + v333;
        uint64_t v335 = (char *)v237 + v333;
        v334[8] = v335[8];
        *(void *)uint64_t v334 = *(void *)v335;
        uint64_t v336 = v238[42];
        uint64_t v337 = (void *)((char *)v236 + v336);
        uint64_t v338 = (void *)((char *)v237 + v336);
        uint64_t v339 = v338[1];
        *uint64_t v337 = *v338;
        v337[1] = v339;
        uint64_t v340 = v238[43];
        uint64_t v341 = (char *)v236 + v340;
        int v342 = (char *)v237 + v340;
        *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
        *(void *)(v341 + 13) = *(void *)(v342 + 13);
        uint64_t v343 = v238[44];
        uint64_t v344 = (void *)((char *)v236 + v343);
        uint64_t v345 = (void *)((char *)v237 + v343);
        uint64_t v346 = v345[1];
        *uint64_t v344 = *v345;
        v344[1] = v346;
        uint64_t v347 = v238[45];
        uint64_t v348 = (void *)((char *)v236 + v347);
        uint64_t v349 = (void *)((char *)v237 + v347);
        uint64_t v350 = v349[1];
        *uint64_t v348 = *v349;
        v348[1] = v350;
        uint64_t v351 = v238[46];
        uint64_t v352 = (void *)((char *)v236 + v351);
        uint64_t v353 = (void *)((char *)v237 + v351);
        uint64_t v354 = v353[1];
        *uint64_t v352 = *v353;
        v352[1] = v354;
        uint64_t v355 = v238[47];
        uint64_t v356 = (void *)((char *)v236 + v355);
        uint64_t v357 = (void *)((char *)v237 + v355);
        uint64_t v358 = v357[1];
        *uint64_t v356 = *v357;
        v356[1] = v358;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, (uint64_t)v238);
        uint64_t v28 = v663;
        uint64_t v29 = (int *)v665;
      }
      uint64_t v359 = v29[12];
      uint64_t v360 = (void *)(v668 + v359);
      uint64_t v361 = (void *)((char *)v28 + v359);
      uint64_t v362 = (int *)type metadata accessor for HotelReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v361, 1, (uint64_t)v362))
      {
        uint64_t v363 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
        memcpy(v360, v361, *(void *)(*(void *)(v363 - 8) + 64));
      }
      else
      {
        uint64_t v364 = v361[1];
        void *v360 = *v361;
        v360[1] = v364;
        uint64_t v365 = v361[3];
        v360[2] = v361[2];
        v360[3] = v365;
        uint64_t v366 = v361[5];
        v360[4] = v361[4];
        v360[5] = v366;
        uint64_t v660 = v361[7];
        v360[6] = v361[6];
        v360[7] = v660;
        uint64_t v367 = v361[9];
        v360[8] = v361[8];
        v360[9] = v367;
        uint64_t v368 = v361[11];
        v360[10] = v361[10];
        v360[11] = v368;
        *((unsigned char *)v360 + 96) = *((unsigned char *)v361 + 96);
        uint64_t v369 = v361[14];
        v360[13] = v361[13];
        v360[14] = v369;
        uint64_t v370 = v361[16];
        v360[15] = v361[15];
        v360[16] = v370;
        uint64_t v371 = v362[14];
        uint64_t v644 = (char *)v360 + v371;
        uint64_t v648 = (char *)v361 + v371;
        uint64_t v372 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v648, 1, v372))
        {
          uint64_t v373 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v644, v648, *(void *)(*(void *)(v373 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v644, v648, v372);
          __swift_storeEnumTagSinglePayload((uint64_t)v644, 0, 1, v372);
        }
        uint64_t v374 = v362[15];
        uint64_t v375 = (char *)v360 + v374;
        uint64_t v376 = (char *)v361 + v374;
        if (__swift_getEnumTagSinglePayload((uint64_t)v361 + v374, 1, v372))
        {
          uint64_t v377 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v375, v376, *(void *)(*(void *)(v377 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v375, v376, v372);
          __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, v372);
        }
        uint64_t v378 = v362[16];
        uint64_t v379 = (void *)((char *)v360 + v378);
        uint64_t v380 = (void *)((char *)v361 + v378);
        uint64_t v381 = v380[1];
        *uint64_t v379 = *v380;
        v379[1] = v381;
        uint64_t v382 = v362[17];
        uint64_t v383 = (void *)((char *)v360 + v382);
        uint64_t v384 = (void *)((char *)v361 + v382);
        uint64_t v661 = v384[1];
        *uint64_t v383 = *v384;
        v383[1] = v661;
        uint64_t v385 = v362[18];
        uint64_t v386 = (void *)((char *)v360 + v385);
        uint64_t v387 = (void *)((char *)v361 + v385);
        uint64_t v653 = v387[1];
        *uint64_t v386 = *v387;
        v386[1] = v653;
        uint64_t v388 = v362[19];
        uint64_t v389 = (void *)((char *)v360 + v388);
        int v390 = (void *)((char *)v361 + v388);
        uint64_t v649 = v390[1];
        *uint64_t v389 = *v390;
        v389[1] = v649;
        uint64_t v391 = v362[20];
        long long v392 = (void *)((char *)v360 + v391);
        long long v393 = (void *)((char *)v361 + v391);
        uint64_t v394 = v393[1];
        void *v392 = *v393;
        v392[1] = v394;
        *(void *)((char *)v360 + v362[21]) = *(void *)((char *)v361 + v362[21]);
        *(void *)((char *)v360 + v362[22]) = *(void *)((char *)v361 + v362[22]);
        uint64_t v395 = v362[23];
        uint64_t v396 = (char *)v360 + v395;
        uint64_t v397 = (char *)v361 + v395;
        *(void *)uint64_t v396 = *(void *)v397;
        v396[8] = v397[8];
        uint64_t v398 = v362[24];
        uint64_t v399 = (char *)v360 + v398;
        uint64_t v400 = (char *)v361 + v398;
        *(void *)uint64_t v399 = *(void *)v400;
        v399[8] = v400[8];
        uint64_t v401 = v362[25];
        uint64_t v402 = (void *)((char *)v360 + v401);
        uint64_t v403 = (void *)((char *)v361 + v401);
        uint64_t v404 = v403[1];
        *uint64_t v402 = *v403;
        v402[1] = v404;
        uint64_t v405 = v362[26];
        uint64_t v406 = (void *)((char *)v360 + v405);
        uint64_t v407 = (void *)((char *)v361 + v405);
        uint64_t v408 = v407[1];
        void *v406 = *v407;
        v406[1] = v408;
        uint64_t v409 = v362[27];
        uint64_t v410 = (void *)((char *)v360 + v409);
        int v411 = (void *)((char *)v361 + v409);
        uint64_t v412 = v411[1];
        void *v410 = *v411;
        v410[1] = v412;
        uint64_t v413 = v362[28];
        uint64_t v414 = (void *)((char *)v360 + v413);
        uint64_t v415 = (void *)((char *)v361 + v413);
        uint64_t v416 = v415[1];
        void *v414 = *v415;
        v414[1] = v416;
        uint64_t v417 = v362[29];
        uint64_t v418 = (char *)v360 + v417;
        uint64_t v419 = (char *)v361 + v417;
        *(void *)uint64_t v418 = *(void *)v419;
        v418[8] = v419[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, (uint64_t)v362);
        uint64_t v28 = v663;
        uint64_t v29 = (int *)v665;
      }
      uint64_t v420 = v29[13];
      uint64_t v421 = (void *)(v668 + v420);
      uint64_t v422 = (void *)((char *)v28 + v420);
      uint64_t v423 = (int *)type metadata accessor for RestaurantReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v422, 1, (uint64_t)v423))
      {
        uint64_t v424 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
        memcpy(v421, v422, *(void *)(*(void *)(v424 - 8) + 64));
      }
      else
      {
        uint64_t v425 = v422[1];
        *uint64_t v421 = *v422;
        v421[1] = v425;
        uint64_t v426 = v422[3];
        v421[2] = v422[2];
        v421[3] = v426;
        uint64_t v427 = v422[5];
        v421[4] = v422[4];
        v421[5] = v427;
        uint64_t v664 = v422[7];
        v421[6] = v422[6];
        v421[7] = v664;
        uint64_t v662 = v422[9];
        v421[8] = v422[8];
        v421[9] = v662;
        uint64_t v428 = v422[11];
        v421[10] = v422[10];
        v421[11] = v428;
        *((unsigned char *)v421 + 96) = *((unsigned char *)v422 + 96);
        uint64_t v429 = v422[14];
        v421[13] = v422[13];
        v421[14] = v429;
        uint64_t v430 = v422[16];
        v421[15] = v422[15];
        v421[16] = v430;
        uint64_t v431 = v423[14];
        uint64_t v645 = (char *)v421 + v431;
        uint64_t v432 = (char *)v422 + v431;
        uint64_t v650 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v650))
        {
          uint64_t v433 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v645, v432, *(void *)(*(void *)(v433 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v650 - 8) + 16))(v645, v432, v650);
          __swift_storeEnumTagSinglePayload((uint64_t)v645, 0, 1, v650);
        }
        uint64_t v434 = v423[15];
        uint64_t v435 = (void *)((char *)v421 + v434);
        uint64_t v436 = (void *)((char *)v422 + v434);
        uint64_t v437 = v436[1];
        void *v435 = *v436;
        v435[1] = v437;
        uint64_t v438 = v423[16];
        long long v439 = (void *)((char *)v421 + v438);
        long long v440 = (void *)((char *)v422 + v438);
        uint64_t v441 = v440[1];
        void *v439 = *v440;
        v439[1] = v441;
        uint64_t v442 = v423[17];
        uint64_t v443 = (void *)((char *)v421 + v442);
        uint64_t v444 = (void *)((char *)v422 + v442);
        uint64_t v445 = v444[1];
        *uint64_t v443 = *v444;
        v443[1] = v445;
        uint64_t v446 = v423[18];
        uint64_t v447 = (void *)((char *)v421 + v446);
        uint64_t v448 = (void *)((char *)v422 + v446);
        uint64_t v449 = v448[1];
        *uint64_t v447 = *v448;
        v447[1] = v449;
        uint64_t v450 = v423[19];
        uint64_t v451 = (void *)((char *)v421 + v450);
        uint64_t v452 = (void *)((char *)v422 + v450);
        uint64_t v453 = v452[1];
        *uint64_t v451 = *v452;
        v451[1] = v453;
        *(void *)((char *)v421 + v423[20]) = *(void *)((char *)v422 + v423[20]);
        uint64_t v454 = v423[21];
        int v455 = (void *)((char *)v421 + v454);
        uint64_t v456 = (void *)((char *)v422 + v454);
        uint64_t v457 = v456[1];
        *int v455 = *v456;
        v455[1] = v457;
        uint64_t v458 = v423[22];
        uint64_t v459 = (void *)((char *)v421 + v458);
        uint64_t v460 = (void *)((char *)v422 + v458);
        uint64_t v461 = v460[1];
        *uint64_t v459 = *v460;
        v459[1] = v461;
        uint64_t v462 = v423[23];
        uint64_t v463 = (void *)((char *)v421 + v462);
        uint64_t v464 = (void *)((char *)v422 + v462);
        uint64_t v465 = v464[1];
        *uint64_t v463 = *v464;
        v463[1] = v465;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v421, 0, 1, (uint64_t)v423);
      }
      __swift_storeEnumTagSinglePayload(v668, 0, 1, v665);
      uint64_t v31 = a2;
      uint64_t v17 = a3;
      uint64_t v16 = a1;
    }
    uint64_t v466 = v17[18];
    uint64_t v467 = (void *)((char *)v16 + v466);
    uint64_t v468 = (void *)((char *)v31 + v466);
    uint64_t v469 = (int *)type metadata accessor for PreExtractedCard(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v468, 1, (uint64_t)v469))
    {
      uint64_t v470 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
      memcpy(v467, v468, *(void *)(*(void *)(v470 - 8) + 64));
    }
    else
    {
      uint64_t v471 = v468[1];
      *uint64_t v467 = *v468;
      v467[1] = v471;
      uint64_t v472 = v468[3];
      v467[2] = v468[2];
      v467[3] = v472;
      uint64_t v473 = v468[5];
      v467[4] = v468[4];
      v467[5] = v473;
      uint64_t v474 = v468[7];
      v467[6] = v468[6];
      v467[7] = v474;
      uint64_t v475 = v468[9];
      v467[8] = v468[8];
      v467[9] = v475;
      uint64_t v476 = v468[11];
      v467[10] = v468[10];
      v467[11] = v476;
      uint64_t v477 = v469[10];
      uint64_t v478 = (char *)v467 + v477;
      uint64_t v479 = (char *)v468 + v477;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v479, 1, v672))
      {
        uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v478, v479, *(void *)(*(void *)(v480 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v478, v479, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v478, 0, 1, v672);
      }
      uint64_t v481 = v469[11];
      uint64_t v482 = (char *)v467 + v481;
      uint64_t v483 = (char *)v468 + v481;
      if (__swift_getEnumTagSinglePayload((uint64_t)v468 + v481, 1, v672))
      {
        uint64_t v484 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v482, v483, *(void *)(*(void *)(v484 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v482, v483, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v482, 0, 1, v672);
      }
      uint64_t v485 = v469[12];
      uint64_t v486 = (void *)((char *)v467 + v485);
      int v487 = (void *)((char *)v468 + v485);
      uint64_t v488 = v487[1];
      void *v486 = *v487;
      v486[1] = v488;
      uint64_t v489 = v469[13];
      uint64_t v490 = (void *)((char *)v467 + v489);
      uint64_t v491 = (void *)((char *)v468 + v489);
      uint64_t v492 = v491[1];
      *uint64_t v490 = *v491;
      v490[1] = v492;
      uint64_t v493 = v469[14];
      int v494 = (void *)((char *)v467 + v493);
      int v495 = (void *)((char *)v468 + v493);
      uint64_t v496 = v495[1];
      *int v494 = *v495;
      v494[1] = v496;
      uint64_t v497 = v469[15];
      uint64_t v498 = (char *)v467 + v497;
      uint64_t v499 = (char *)v468 + v497;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v499, 1, v672))
      {
        uint64_t v500 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v498, v499, *(void *)(*(void *)(v500 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v498, v499, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v498, 0, 1, v672);
      }
      uint64_t v501 = v469[16];
      uint64_t v502 = (void *)((char *)v467 + v501);
      uint64_t v503 = (void *)((char *)v468 + v501);
      uint64_t v504 = v503[1];
      *uint64_t v502 = *v503;
      v502[1] = v504;
      uint64_t v505 = v469[17];
      uint64_t v506 = (void *)((char *)v467 + v505);
      uint64_t v507 = (void *)((char *)v468 + v505);
      uint64_t v508 = v507[1];
      *uint64_t v506 = *v507;
      v506[1] = v508;
      uint64_t v509 = v469[18];
      uint64_t v510 = (void *)((char *)v467 + v509);
      uint64_t v511 = (void *)((char *)v468 + v509);
      uint64_t v512 = v511[1];
      *uint64_t v510 = *v511;
      v510[1] = v512;
      uint64_t v513 = v469[19];
      uint64_t v514 = (void *)((char *)v467 + v513);
      uint64_t v515 = (void *)((char *)v468 + v513);
      uint64_t v516 = v515[1];
      *uint64_t v514 = *v515;
      v514[1] = v516;
      uint64_t v517 = v469[20];
      int v518 = (void *)((char *)v467 + v517);
      uint64_t v519 = (void *)((char *)v468 + v517);
      uint64_t v520 = v519[1];
      *int v518 = *v519;
      v518[1] = v520;
      uint64_t v521 = v469[21];
      uint64_t v522 = (void *)((char *)v467 + v521);
      uint64_t v523 = (void *)((char *)v468 + v521);
      uint64_t v524 = v523[1];
      *uint64_t v522 = *v523;
      v522[1] = v524;
      uint64_t v525 = v469[22];
      uint64_t v526 = (void *)((char *)v467 + v525);
      uint64_t v527 = (void *)((char *)v468 + v525);
      uint64_t v528 = v527[1];
      *uint64_t v526 = *v527;
      v526[1] = v528;
      uint64_t v529 = v469[23];
      uint64_t v530 = (void *)((char *)v467 + v529);
      uint64_t v531 = (void *)((char *)v468 + v529);
      uint64_t v532 = v531[1];
      *uint64_t v530 = *v531;
      v530[1] = v532;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v467, 0, 1, (uint64_t)v469);
      uint64_t v16 = a1;
      uint64_t v31 = a2;
      uint64_t v17 = a3;
    }
    uint64_t v533 = v17[19];
    uint64_t v534 = (void *)((char *)v16 + v533);
    uint64_t v535 = (void *)((char *)v31 + v533);
    uint64_t v536 = (int *)type metadata accessor for PreExtractedContact(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v535, 1, (uint64_t)v536))
    {
      uint64_t v537 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
      memcpy(v534, v535, *(void *)(*(void *)(v537 - 8) + 64));
    }
    else
    {
      uint64_t v538 = v535[1];
      *uint64_t v534 = *v535;
      v534[1] = v538;
      uint64_t v539 = v535[3];
      v534[2] = v535[2];
      v534[3] = v539;
      uint64_t v540 = v535[5];
      v534[4] = v535[4];
      v534[5] = v540;
      uint64_t v541 = v535[7];
      v534[6] = v535[6];
      v534[7] = v541;
      uint64_t v542 = v535[9];
      v534[8] = v535[8];
      v534[9] = v542;
      uint64_t v543 = v535[11];
      v534[10] = v535[10];
      v534[11] = v543;
      uint64_t v544 = v536[11];
      uint64_t v669 = (char *)v534 + v544;
      uint64_t v545 = (char *)v535 + v544;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v545, 1, v672))
      {
        uint64_t v546 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v669, v545, *(void *)(*(void *)(v546 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v669, v545, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v669, 0, 1, v672);
      }
      uint64_t v547 = v536[12];
      uint64_t v548 = (void *)((char *)v534 + v547);
      uint64_t v549 = (void *)((char *)v535 + v547);
      uint64_t v550 = v549[1];
      void *v548 = *v549;
      v548[1] = v550;
      *(void *)((char *)v534 + v536[13]) = *(void *)((char *)v535 + v536[13]);
      uint64_t v551 = v536[14];
      uint64_t v552 = (char *)v534 + v551;
      uint64_t v553 = (char *)v535 + v551;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = a2;
      uint64_t v17 = a3;
      if (__swift_getEnumTagSinglePayload((uint64_t)v553, 1, v672))
      {
        uint64_t v554 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v552, v553, *(void *)(*(void *)(v554 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v552, v553, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v552, 0, 1, v672);
      }
      *(void *)((char *)v534 + v536[15]) = *(void *)((char *)v535 + v536[15]);
      *(void *)((char *)v534 + v536[16]) = *(void *)((char *)v535 + v536[16]);
      uint64_t v555 = v536[17];
      uint64_t v556 = (void *)((char *)v534 + v555);
      int v557 = (void *)((char *)v535 + v555);
      uint64_t v558 = v557[1];
      *uint64_t v556 = *v557;
      v556[1] = v558;
      *(void *)((char *)v534 + v536[18]) = *(void *)((char *)v535 + v536[18]);
      *(void *)((char *)v534 + v536[19]) = *(void *)((char *)v535 + v536[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v534, 0, 1, (uint64_t)v536);
      uint64_t v16 = a1;
    }
    uint64_t v559 = v17[20];
    int v560 = (void *)((char *)v16 + v559);
    uint64_t v561 = (void *)((char *)v31 + v559);
    uint64_t v562 = (int *)type metadata accessor for PreExtractedSharedLink(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v561, 1, (uint64_t)v562))
    {
      uint64_t v563 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
      memcpy(v560, v561, *(void *)(*(void *)(v563 - 8) + 64));
    }
    else
    {
      uint64_t v564 = v561[1];
      *int v560 = *v561;
      v560[1] = v564;
      uint64_t v565 = v561[3];
      v560[2] = v561[2];
      v560[3] = v565;
      uint64_t v566 = v561[5];
      v560[4] = v561[4];
      v560[5] = v566;
      uint64_t v567 = v561[7];
      v560[6] = v561[6];
      v560[7] = v567;
      uint64_t v568 = v562[8];
      int v569 = (char *)v560 + v568;
      uint64_t v570 = (char *)v561 + v568;
      uint64_t v571 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v570, 1, v571))
      {
        uint64_t v572 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v569, v570, *(void *)(*(void *)(v572 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v571 - 8) + 16))(v569, v570, v571);
        __swift_storeEnumTagSinglePayload((uint64_t)v569, 0, 1, v571);
      }
      uint64_t v573 = v562[9];
      uint64_t v574 = (void *)((char *)v560 + v573);
      uint64_t v575 = (void *)((char *)v561 + v573);
      uint64_t v576 = v575[1];
      void *v574 = *v575;
      v574[1] = v576;
      uint64_t v577 = v562[10];
      long long v578 = (void *)((char *)v560 + v577);
      long long v579 = (void *)((char *)v561 + v577);
      uint64_t v580 = v579[1];
      void *v578 = *v579;
      v578[1] = v580;
      uint64_t v581 = v562[11];
      long long v582 = (void *)((char *)v560 + v581);
      long long v583 = (void *)((char *)v561 + v581);
      uint64_t v584 = v583[1];
      *long long v582 = *v583;
      v582[1] = v584;
      uint64_t v585 = v562[12];
      uint64_t v586 = (char *)v560 + v585;
      uint64_t v587 = (char *)v561 + v585;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = a2;
      uint64_t v17 = a3;
      if (__swift_getEnumTagSinglePayload((uint64_t)v587, 1, v672))
      {
        uint64_t v588 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v586, v587, *(void *)(*(void *)(v588 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v586, v587, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v586, 0, 1, v672);
      }
      uint64_t v589 = v562[13];
      uint64_t v590 = (char *)v560 + v589;
      uint64_t v591 = (char *)v561 + v589;
      if (__swift_getEnumTagSinglePayload((uint64_t)v561 + v589, 1, v672))
      {
        uint64_t v592 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v590, v591, *(void *)(*(void *)(v592 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v590, v591, v672);
        __swift_storeEnumTagSinglePayload((uint64_t)v590, 0, 1, v672);
      }
      uint64_t v593 = v562[14];
      uint64_t v594 = (char *)v560 + v593;
      uint64_t v595 = (char *)v561 + v593;
      *(void *)uint64_t v594 = *(void *)v595;
      v594[8] = v595[8];
      uint64_t v596 = v562[15];
      uint64_t v597 = (void *)((char *)v560 + v596);
      uint64_t v598 = (void *)((char *)v561 + v596);
      uint64_t v599 = v598[1];
      void *v597 = *v598;
      v597[1] = v599;
      uint64_t v600 = v562[16];
      uint64_t v601 = (void *)((char *)v560 + v600);
      uint64_t v602 = (void *)((char *)v561 + v600);
      uint64_t v603 = v602[1];
      void *v601 = *v602;
      v601[1] = v603;
      uint64_t v604 = v562[17];
      uint64_t v605 = (void *)((char *)v560 + v604);
      int v606 = (void *)((char *)v561 + v604);
      uint64_t v607 = v606[1];
      void *v605 = *v606;
      v605[1] = v607;
      uint64_t v608 = v562[18];
      int v609 = (void *)((char *)v560 + v608);
      uint64_t v610 = (void *)((char *)v561 + v608);
      uint64_t v611 = v610[1];
      void *v609 = *v610;
      v609[1] = v611;
      uint64_t v612 = v562[19];
      uint64_t v613 = (void *)((char *)v560 + v612);
      uint64_t v614 = (void *)((char *)v561 + v612);
      uint64_t v615 = v614[1];
      void *v613 = *v614;
      v613[1] = v615;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v560, 0, 1, (uint64_t)v562);
      uint64_t v16 = a1;
    }
    uint64_t v616 = v17[21];
    uint64_t v617 = (void *)((char *)v16 + v616);
    uint64_t v618 = (void *)((char *)v31 + v616);
    uint64_t v619 = *(void *)((char *)v31 + v616 + 8);
    if (v619)
    {
      *uint64_t v617 = *v618;
      v617[1] = v619;
      uint64_t v620 = v618[3];
      v617[2] = v618[2];
      v617[3] = v620;
      uint64_t v621 = v618[5];
      v617[4] = v618[4];
      v617[5] = v621;
      uint64_t v622 = v618[7];
      v617[6] = v618[6];
      v617[7] = v622;
      uint64_t v623 = v618[9];
      v617[8] = v618[8];
      v617[9] = v623;
      uint64_t v624 = v618[11];
      v617[10] = v618[10];
      v617[11] = v624;
      uint64_t v666 = v618[13];
      v617[12] = v618[12];
      v617[13] = v666;
      uint64_t v670 = v618[15];
      v617[14] = v618[14];
      v617[15] = v670;
      uint64_t v673 = v618[17];
      v617[16] = v618[16];
      v617[17] = v673;
      swift_bridgeObjectRetain();
      uint64_t v16 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v617, v618, 0x90uLL);
    }
  }
  return v16;
}

uint64_t destroy for Photo(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[17];
  uint64_t v7 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, (uint64_t)v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    uint64_t v9 = type metadata accessor for RentalCarReservation(0);
    if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v8 + *(int *)(v9 + 140);
      if (!__swift_getEnumTagSinglePayload(v10, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v10, v5);
      }
      uint64_t v11 = v8 + *(int *)(v9 + 144);
      if (!__swift_getEnumTagSinglePayload(v11, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v11, v5);
      }
    }
    uint64_t v12 = v6 + v7[6];
    uint64_t v13 = type metadata accessor for TicketedTransportation(0);
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v12 + *(int *)(v13 + 112);
      if (!__swift_getEnumTagSinglePayload(v14, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v14, v5);
      }
      uint64_t v15 = v12 + *(int *)(v13 + 116);
      if (!__swift_getEnumTagSinglePayload(v15, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v15, v5);
      }
    }
    uint64_t v16 = v6 + v7[7];
    uint64_t v17 = (int *)type metadata accessor for TicketedShow(0);
    if (!__swift_getEnumTagSinglePayload(v16, 1, (uint64_t)v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + v17[29];
      uint64_t v19 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      }
      swift_bridgeObjectRelease();
      uint64_t v20 = v16 + v17[31];
      if (!__swift_getEnumTagSinglePayload(v20, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v20, v5);
      }
      uint64_t v21 = v16 + v17[32];
      if (!__swift_getEnumTagSinglePayload(v21, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v21, v5);
      }
    }
    uint64_t v22 = v6 + v7[8];
    uint64_t v23 = type metadata accessor for Appointment(0);
    if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v22 + *(int *)(v23 + 108);
      if (!__swift_getEnumTagSinglePayload(v24, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v24, v5);
      }
      uint64_t v25 = v22 + *(int *)(v23 + 112);
      if (!__swift_getEnumTagSinglePayload(v25, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v25, v5);
      }
    }
    uint64_t v26 = v6 + v7[9];
    uint64_t v27 = (int *)type metadata accessor for Party(0);
    if (!__swift_getEnumTagSinglePayload(v26, 1, (uint64_t)v27))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v26 + v27[24];
      if (!__swift_getEnumTagSinglePayload(v28, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v28, v5);
      }
      uint64_t v29 = v26 + v27[25];
      if (!__swift_getEnumTagSinglePayload(v29, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v29, v5);
      }
      uint64_t v30 = v26 + v27[26];
      uint64_t v31 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
      }
    }
    uint64_t v32 = v6 + v7[10];
    uint64_t v33 = (int *)type metadata accessor for Trip(0);
    if (!__swift_getEnumTagSinglePayload(v32, 1, (uint64_t)v33))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v32 + v33[22];
      if (!__swift_getEnumTagSinglePayload(v34, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v34, v5);
      }
      uint64_t v35 = v32 + v33[23];
      if (!__swift_getEnumTagSinglePayload(v35, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v35, v5);
      }
      uint64_t v36 = v32 + v33[25];
      uint64_t v37 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      }
    }
    uint64_t v38 = v6 + v7[11];
    uint64_t v39 = (int *)type metadata accessor for FlightReservation(0);
    if (!__swift_getEnumTagSinglePayload(v38, 1, (uint64_t)v39))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v38 + v39[13];
      uint64_t v41 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v40, 1, v41)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
      }
      uint64_t v42 = v38 + v39[14];
      if (!__swift_getEnumTagSinglePayload(v42, 1, v41)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v42, v41);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = v38 + v39[18];
      uint64_t v44 = type metadata accessor for DateComponents();
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8);
      v45(v43, v44);
      v45(v38 + v39[19], v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v38 + v39[38];
      if (!__swift_getEnumTagSinglePayload(v46, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v46, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v6 + v7[12];
    uint64_t v48 = type metadata accessor for HotelReservation(0);
    if (!__swift_getEnumTagSinglePayload(v47, 1, v48))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v47 + *(int *)(v48 + 56);
      uint64_t v50 = type metadata accessor for DateComponents();
      if (!__swift_getEnumTagSinglePayload(v49, 1, v50)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
      }
      uint64_t v51 = v47 + *(int *)(v48 + 60);
      if (!__swift_getEnumTagSinglePayload(v51, 1, v50)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v51, v50);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v52 = v6 + v7[13];
    uint64_t v53 = type metadata accessor for RestaurantReservation(0);
    if (!__swift_getEnumTagSinglePayload(v52, 1, v53))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = v52 + *(int *)(v53 + 56);
      uint64_t v55 = type metadata accessor for DateComponents();
      if (!__swift_getEnumTagSinglePayload(v54, 1, v55)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v56 = a1 + a2[18];
  uint64_t v57 = (int *)type metadata accessor for PreExtractedCard(0);
  if (!__swift_getEnumTagSinglePayload(v56, 1, (uint64_t)v57))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v58 = v56 + v57[10];
    if (!__swift_getEnumTagSinglePayload(v58, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v58, v5);
    }
    uint64_t v59 = v56 + v57[11];
    if (!__swift_getEnumTagSinglePayload(v59, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v59, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v56 + v57[15];
    if (!__swift_getEnumTagSinglePayload(v60, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v60, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = a1 + a2[19];
  uint64_t v62 = type metadata accessor for PreExtractedContact(0);
  if (!__swift_getEnumTagSinglePayload(v61, 1, v62))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = v61 + *(int *)(v62 + 44);
    if (!__swift_getEnumTagSinglePayload(v63, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v63, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = v61 + *(int *)(v62 + 56);
    if (!__swift_getEnumTagSinglePayload(v64, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v64, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v65 = a1 + a2[20];
  uint64_t v66 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (!__swift_getEnumTagSinglePayload(v65, 1, (uint64_t)v66))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = v65 + v66[8];
    uint64_t v68 = type metadata accessor for URL();
    if (!__swift_getEnumTagSinglePayload(v67, 1, v68)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = v65 + v66[12];
    if (!__swift_getEnumTagSinglePayload(v69, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v69, v5);
    }
    uint64_t v70 = v65 + v66[13];
    if (!__swift_getEnumTagSinglePayload(v70, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v70, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + a2[21] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for Photo(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a3[11];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[10] = a2[10];
  uint64_t v11 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v671 = v11;
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3;
  uint64_t v14 = a3[13];
  uint64_t v15 = a1;
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v16 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[16];
  uint64_t v18 = a3[17];
  uint64_t v19 = (void *)((char *)a1 + v17);
  uint64_t v20 = (void *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)((char *)a1 + v18);
  uint64_t v23 = (void *)((char *)a2 + v18);
  uint64_t v24 = type metadata accessor for PartialExtractedAttributes(0);
  swift_bridgeObjectRetain();
  uint64_t v25 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = (int *)v24;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    uint64_t v28 = a2;
  }
  else
  {
    uint64_t v29 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v29;
    uint64_t v30 = *(int *)(v24 + 20);
    uint64_t v31 = (void *)((char *)v22 + v30);
    uint64_t v32 = (void *)((char *)v23 + v30);
    uint64_t v33 = type metadata accessor for RentalCarReservation(0);
    swift_bridgeObjectRetain();
    uint64_t v662 = v25;
    uint64_t v665 = (uint64_t)v26;
    uint64_t v34 = (uint64_t)v22;
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v36;
      uint64_t v37 = v32[3];
      v31[2] = v32[2];
      v31[3] = v37;
      uint64_t v38 = v32[5];
      v31[4] = v32[4];
      v31[5] = v38;
      uint64_t v39 = v32[7];
      v31[6] = v32[6];
      v31[7] = v39;
      uint64_t v40 = v32[9];
      v31[8] = v32[8];
      v31[9] = v40;
      uint64_t v41 = v32[11];
      v31[10] = v32[10];
      v31[11] = v41;
      uint64_t v42 = v32[13];
      v31[12] = v32[12];
      v31[13] = v42;
      uint64_t v43 = v32[15];
      v31[14] = v32[14];
      v31[15] = v43;
      *((unsigned char *)v31 + 128) = *((unsigned char *)v32 + 128);
      *(_WORD *)((char *)v31 + 129) = *(_WORD *)((char *)v32 + 129);
      uint64_t v44 = v32[18];
      v31[17] = v32[17];
      v31[18] = v44;
      uint64_t v45 = v32[20];
      v31[19] = v32[19];
      v31[20] = v45;
      uint64_t v46 = v32[22];
      v31[21] = v32[21];
      v31[22] = v46;
      uint64_t v47 = v32[24];
      v31[23] = v32[23];
      v31[24] = v47;
      uint64_t v48 = v32[26];
      v31[25] = v32[25];
      v31[26] = v48;
      uint64_t v49 = v32[28];
      v31[27] = v32[27];
      v31[28] = v49;
      uint64_t v50 = v32[30];
      v31[29] = v32[29];
      v31[30] = v50;
      __dstd = (void *)v32[32];
      v31[31] = v32[31];
      v31[32] = __dstd;
      uint64_t v51 = v32[34];
      v31[33] = v32[33];
      v31[34] = v51;
      uint64_t v52 = v32[36];
      v31[35] = v32[35];
      v31[36] = v52;
      uint64_t v53 = v32[38];
      v31[37] = v32[37];
      v31[38] = v53;
      uint64_t v54 = v32[40];
      v31[39] = v32[39];
      v31[40] = v54;
      uint64_t v55 = v32[42];
      v31[41] = v32[41];
      v31[42] = v55;
      uint64_t v56 = v32[44];
      v31[43] = v32[43];
      v31[44] = v56;
      uint64_t v57 = v32[46];
      v31[45] = v32[45];
      v31[46] = v57;
      uint64_t v58 = v32[47];
      *((unsigned char *)v31 + 384) = *((unsigned char *)v32 + 384);
      v31[47] = v58;
      uint64_t v59 = v32[50];
      v31[49] = v32[49];
      v31[50] = v59;
      uint64_t v60 = v32[52];
      v31[51] = v32[51];
      v31[52] = v60;
      uint64_t v61 = *(int *)(v33 + 140);
      uint64_t v651 = (char *)v31 + v61;
      uint64_t v62 = (char *)v32 + v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v671))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v651, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v651, v62, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v651, 0, 1, v671);
      }
      uint64_t v64 = *(int *)(v33 + 144);
      uint64_t v65 = (char *)v31 + v64;
      uint64_t v66 = (char *)v32 + v64;
      if (__swift_getEnumTagSinglePayload((uint64_t)v32 + v64, 1, v671))
      {
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v65, v66, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v671);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
      uint64_t v25 = v662;
    }
    uint64_t v68 = v26[6];
    uint64_t v69 = (void *)(v34 + v68);
    uint64_t v70 = (void *)((char *)v25 + v68);
    uint64_t v71 = type metadata accessor for TicketedTransportation(0);
    uint64_t v661 = v34;
    if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
    {
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
      memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      uint64_t v73 = v70[1];
      *uint64_t v69 = *v70;
      v69[1] = v73;
      uint64_t v74 = v70[3];
      v69[2] = v70[2];
      v69[3] = v74;
      uint64_t v75 = v70[5];
      v69[4] = v70[4];
      v69[5] = v75;
      uint64_t v76 = v70[7];
      v69[6] = v70[6];
      v69[7] = v76;
      uint64_t v77 = v70[9];
      v69[8] = v70[8];
      v69[9] = v77;
      uint64_t v78 = v70[11];
      v69[10] = v70[10];
      v69[11] = v78;
      uint64_t v79 = v70[13];
      v69[12] = v70[12];
      v69[13] = v79;
      uint64_t v80 = v70[15];
      v69[14] = v70[14];
      v69[15] = v80;
      *((unsigned char *)v69 + 128) = *((unsigned char *)v70 + 128);
      *(_WORD *)((char *)v69 + 129) = *(_WORD *)((char *)v70 + 129);
      uint64_t v81 = v70[18];
      v69[17] = v70[17];
      v69[18] = v81;
      uint64_t v82 = v70[20];
      v69[19] = v70[19];
      v69[20] = v82;
      uint64_t v83 = v70[22];
      v69[21] = v70[21];
      v69[22] = v83;
      uint64_t v84 = v70[24];
      v69[23] = v70[23];
      v69[24] = v84;
      uint64_t v639 = v70[26];
      v69[25] = v70[25];
      v69[26] = v639;
      uint64_t v85 = v70[28];
      v69[27] = v70[27];
      v69[28] = v85;
      uint64_t v86 = v70[30];
      v69[29] = v70[29];
      v69[30] = v86;
      uint64_t v87 = v70[32];
      v69[31] = v70[31];
      v69[32] = v87;
      uint64_t v88 = v70[34];
      v69[33] = v70[33];
      v69[34] = v88;
      uint64_t v90 = v70[35];
      uint64_t v89 = v70[36];
      *((unsigned char *)v69 + 296) = *((unsigned char *)v70 + 296);
      v69[35] = v90;
      v69[36] = v89;
      uint64_t v91 = *(int *)(v71 + 112);
      __dst = (char *)v69 + v91;
      uint64_t v92 = (char *)v70 + v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v671))
      {
        uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dst, v92, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(__dst, v92, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v671);
      }
      uint64_t v94 = *(int *)(v71 + 116);
      uint64_t v95 = (char *)v69 + v94;
      uint64_t v96 = (char *)v70 + v94;
      if (__swift_getEnumTagSinglePayload((uint64_t)v70 + v94, 1, v671))
      {
        uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v95, v96, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v671);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
      uint64_t v25 = v662;
    }
    uint64_t v98 = v26[7];
    uint64_t v99 = (void *)(v34 + v98);
    uint64_t v100 = (void *)((char *)v25 + v98);
    long long v101 = (int *)type metadata accessor for TicketedShow(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, (uint64_t)v101))
    {
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
      memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      uint64_t v103 = v100[1];
      *uint64_t v99 = *v100;
      v99[1] = v103;
      uint64_t v104 = v100[3];
      v99[2] = v100[2];
      v99[3] = v104;
      uint64_t v105 = v100[5];
      v99[4] = v100[4];
      v99[5] = v105;
      uint64_t v106 = v100[7];
      v99[6] = v100[6];
      v99[7] = v106;
      uint64_t v107 = v100[9];
      v99[8] = v100[8];
      v99[9] = v107;
      uint64_t v108 = v100[11];
      v99[10] = v100[10];
      v99[11] = v108;
      uint64_t v109 = v100[13];
      v99[12] = v100[12];
      v99[13] = v109;
      uint64_t v110 = v100[15];
      v99[14] = v100[14];
      v99[15] = v110;
      *((unsigned char *)v99 + 128) = *((unsigned char *)v100 + 128);
      *(_WORD *)((char *)v99 + 129) = *(_WORD *)((char *)v100 + 129);
      uint64_t v111 = v100[18];
      v99[17] = v100[17];
      v99[18] = v111;
      uint64_t v112 = v100[20];
      v99[19] = v100[19];
      v99[20] = v112;
      uint64_t v113 = v100[22];
      v99[21] = v100[21];
      v99[22] = v113;
      uint64_t v114 = v100[24];
      v99[23] = v100[23];
      v99[24] = v114;
      uint64_t v115 = v100[26];
      v99[25] = v100[25];
      v99[26] = v115;
      uint64_t v116 = v100[28];
      v99[27] = v100[27];
      v99[28] = v116;
      __dste = (void *)v100[30];
      v99[29] = v100[29];
      v99[30] = __dste;
      uint64_t v117 = v100[32];
      v99[31] = v100[31];
      v99[32] = v117;
      uint64_t v118 = v100[34];
      v99[33] = v100[33];
      v99[34] = v118;
      uint64_t v119 = v100[36];
      uint64_t v120 = v100[35];
      *((unsigned char *)v99 + 296) = *((unsigned char *)v100 + 296);
      v99[35] = v120;
      v99[36] = v119;
      uint64_t v121 = v100[39];
      v99[38] = v100[38];
      v99[39] = v121;
      uint64_t v122 = v101[29];
      uint64_t v652 = (char *)v99 + v122;
      uint64_t v123 = (char *)v100 + v122;
      uint64_t v124 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v124))
      {
        uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v652, v123, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v652, v123, v124);
        __swift_storeEnumTagSinglePayload((uint64_t)v652, 0, 1, v124);
      }
      uint64_t v126 = v101[30];
      uint64_t v127 = (void *)((char *)v99 + v126);
      uint64_t v128 = (void *)((char *)v100 + v126);
      uint64_t v129 = v128[1];
      *uint64_t v127 = *v128;
      v127[1] = v129;
      uint64_t v130 = v101[31];
      uint64_t v131 = (char *)v99 + v130;
      uint64_t v132 = (char *)v100 + v130;
      swift_bridgeObjectRetain();
      uint64_t v34 = v661;
      if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v671))
      {
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v131, v132, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v671);
      }
      uint64_t v134 = v101[32];
      uint64_t v135 = (char *)v99 + v134;
      uint64_t v136 = (char *)v100 + v134;
      if (__swift_getEnumTagSinglePayload((uint64_t)v100 + v134, 1, v671))
      {
        uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v135, v136, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v671);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, (uint64_t)v101);
      uint64_t v25 = v662;
    }
    uint64_t v138 = v26[8];
    uint64_t v139 = (void *)(v34 + v138);
    uint64_t v140 = (void *)((char *)v25 + v138);
    uint64_t v141 = type metadata accessor for Appointment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v140, 1, v141))
    {
      uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
      memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
    }
    else
    {
      uint64_t v143 = v140[1];
      *uint64_t v139 = *v140;
      v139[1] = v143;
      uint64_t v144 = v140[3];
      v139[2] = v140[2];
      v139[3] = v144;
      uint64_t v145 = v140[5];
      v139[4] = v140[4];
      v139[5] = v145;
      uint64_t v146 = v140[7];
      v139[6] = v140[6];
      v139[7] = v146;
      uint64_t v147 = v140[9];
      v139[8] = v140[8];
      v139[9] = v147;
      uint64_t v148 = v140[11];
      v139[10] = v140[10];
      v139[11] = v148;
      uint64_t v149 = v140[13];
      v139[12] = v140[12];
      v139[13] = v149;
      uint64_t v150 = v140[15];
      v139[14] = v140[14];
      v139[15] = v150;
      *((unsigned char *)v139 + 128) = *((unsigned char *)v140 + 128);
      *(_WORD *)((char *)v139 + 129) = *(_WORD *)((char *)v140 + 129);
      uint64_t v151 = v140[18];
      v139[17] = v140[17];
      v139[18] = v151;
      uint64_t v152 = v140[20];
      v139[19] = v140[19];
      v139[20] = v152;
      uint64_t v153 = v140[22];
      v139[21] = v140[21];
      v139[22] = v153;
      uint64_t v154 = v140[24];
      v139[23] = v140[23];
      v139[24] = v154;
      uint64_t v155 = v140[26];
      v139[25] = v140[25];
      v139[26] = v155;
      uint64_t v156 = v140[28];
      v139[27] = v140[27];
      v139[28] = v156;
      uint64_t v157 = v140[30];
      v139[29] = v140[29];
      v139[30] = v157;
      uint64_t v158 = v140[32];
      v139[31] = v140[31];
      v139[32] = v158;
      uint64_t v159 = v140[34];
      uint64_t v160 = v140[33];
      *((unsigned char *)v139 + 280) = *((unsigned char *)v140 + 280);
      v139[33] = v160;
      v139[34] = v159;
      uint64_t v161 = v140[37];
      v139[36] = v140[36];
      v139[37] = v161;
      uint64_t v162 = *(int *)(v141 + 108);
      __dsta = (char *)v139 + v162;
      uint64_t v163 = (char *)v140 + v162;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v671))
      {
        uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dsta, v163, *(void *)(*(void *)(v164 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(__dsta, v163, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v671);
      }
      uint64_t v165 = *(int *)(v141 + 112);
      uint64_t v166 = (char *)v139 + v165;
      long long v167 = (char *)v140 + v165;
      if (__swift_getEnumTagSinglePayload((uint64_t)v140 + v165, 1, v671))
      {
        uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v166, v167, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v671);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v141);
      uint64_t v25 = v662;
    }
    uint64_t v169 = v26[9];
    uint64_t v170 = (void *)(v34 + v169);
    long long v171 = (void *)((char *)v25 + v169);
    uint64_t v172 = type metadata accessor for Party(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v171, 1, v172))
    {
      uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
      memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
    }
    else
    {
      uint64_t v174 = v171[1];
      *uint64_t v170 = *v171;
      v170[1] = v174;
      uint64_t v175 = v171[3];
      v170[2] = v171[2];
      v170[3] = v175;
      uint64_t v176 = v171[5];
      v170[4] = v171[4];
      v170[5] = v176;
      uint64_t v177 = v171[7];
      v170[6] = v171[6];
      v170[7] = v177;
      uint64_t v178 = v171[9];
      v170[8] = v171[8];
      v170[9] = v178;
      uint64_t v179 = v171[11];
      v170[10] = v171[10];
      v170[11] = v179;
      uint64_t v180 = v171[13];
      v170[12] = v171[12];
      v170[13] = v180;
      uint64_t v181 = v171[15];
      v170[14] = v171[14];
      v170[15] = v181;
      *((unsigned char *)v170 + 128) = *((unsigned char *)v171 + 128);
      *(_WORD *)((char *)v170 + 129) = *(_WORD *)((char *)v171 + 129);
      uint64_t v182 = v171[18];
      v170[17] = v171[17];
      v170[18] = v182;
      uint64_t v183 = v171[20];
      v170[19] = v171[19];
      v170[20] = v183;
      uint64_t v184 = v171[22];
      v170[21] = v171[21];
      v170[22] = v184;
      uint64_t v185 = v171[24];
      v170[23] = v171[23];
      v170[24] = v185;
      uint64_t v186 = v171[26];
      v170[25] = v171[25];
      v170[26] = v186;
      uint64_t v187 = v171[28];
      v170[27] = v171[27];
      v170[28] = v187;
      uint64_t v188 = v171[30];
      v170[29] = v171[29];
      v170[30] = v188;
      v170[31] = v171[31];
      uint64_t v653 = v172;
      uint64_t v189 = *(int *)(v172 + 96);
      __dstb = (char *)v170 + v189;
      uint64_t v190 = (char *)v171 + v189;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v671))
      {
        uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstb, v190, *(void *)(*(void *)(v191 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(__dstb, v190, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v671);
      }
      uint64_t v192 = *(int *)(v172 + 100);
      uint64_t v193 = (char *)v170 + v192;
      long long v194 = (char *)v171 + v192;
      uint64_t v34 = v661;
      if (__swift_getEnumTagSinglePayload((uint64_t)v171 + v192, 1, v671))
      {
        uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v193, v194, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v193, 0, 1, v671);
      }
      uint64_t v196 = *(int *)(v653 + 104);
      uint64_t v197 = (char *)v170 + v196;
      uint64_t v198 = (char *)v171 + v196;
      uint64_t v199 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v198, 1, v199))
      {
        uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v197, v198, v199);
        __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v199);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v170, 0, 1, v653);
      uint64_t v25 = v662;
    }
    uint64_t v201 = v26[10];
    uint64_t v202 = (void *)(v34 + v201);
    uint64_t v203 = (void *)((char *)v25 + v201);
    uint64_t v204 = type metadata accessor for Trip(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v203, 1, v204))
    {
      uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
      memcpy(v202, v203, *(void *)(*(void *)(v205 - 8) + 64));
      uint64_t v15 = a1;
    }
    else
    {
      uint64_t v206 = v203[1];
      *uint64_t v202 = *v203;
      v202[1] = v206;
      uint64_t v207 = v203[3];
      v202[2] = v203[2];
      v202[3] = v207;
      uint64_t v208 = v203[5];
      v202[4] = v203[4];
      v202[5] = v208;
      uint64_t v209 = v203[7];
      v202[6] = v203[6];
      v202[7] = v209;
      uint64_t v210 = v203[9];
      v202[8] = v203[8];
      v202[9] = v210;
      uint64_t v211 = v203[11];
      v202[10] = v203[10];
      v202[11] = v211;
      uint64_t v212 = v203[13];
      v202[12] = v203[12];
      v202[13] = v212;
      uint64_t v213 = v203[15];
      v202[14] = v203[14];
      v202[15] = v213;
      *((unsigned char *)v202 + 128) = *((unsigned char *)v203 + 128);
      *(_WORD *)((char *)v202 + 129) = *(_WORD *)((char *)v203 + 129);
      uint64_t v214 = v203[18];
      v202[17] = v203[17];
      v202[18] = v214;
      uint64_t v215 = v203[20];
      v202[19] = v203[19];
      v202[20] = v215;
      uint64_t v216 = v203[22];
      v202[21] = v203[21];
      v202[22] = v216;
      uint64_t v217 = v203[24];
      v202[23] = v203[23];
      v202[24] = v217;
      uint64_t v218 = v203[26];
      v202[25] = v203[25];
      v202[26] = v218;
      v202[27] = v203[27];
      uint64_t v654 = v204;
      uint64_t v219 = *(int *)(v204 + 88);
      __dstc = (char *)v202 + v219;
      uint64_t v220 = (char *)v203 + v219;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v671))
      {
        uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(__dstc, v220, *(void *)(*(void *)(v221 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(__dstc, v220, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v671);
      }
      uint64_t v222 = *(int *)(v204 + 92);
      uint64_t v223 = (char *)v202 + v222;
      uint64_t v224 = (char *)v203 + v222;
      if (__swift_getEnumTagSinglePayload((uint64_t)v203 + v222, 1, v671))
      {
        uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v223, v224, *(void *)(*(void *)(v225 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v223, v224, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v223, 0, 1, v671);
      }
      uint64_t v15 = a1;
      uint64_t v226 = *(int *)(v654 + 96);
      uint64_t v227 = (char *)v202 + v226;
      long long v228 = (char *)v203 + v226;
      *(void *)uint64_t v227 = *(void *)v228;
      v227[8] = v228[8];
      uint64_t v229 = *(int *)(v654 + 100);
      uint64_t v230 = (char *)v202 + v229;
      uint64_t v231 = (char *)v203 + v229;
      uint64_t v232 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, v232))
      {
        uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v230, v231, *(void *)(*(void *)(v233 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
        __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v232);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v654);
      uint64_t v25 = v662;
    }
    uint64_t v234 = v26[11];
    uint64_t v235 = (void *)(v34 + v234);
    uint64_t v236 = (void *)((char *)v25 + v234);
    uint64_t v237 = (int *)type metadata accessor for FlightReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v236, 1, (uint64_t)v237))
    {
      uint64_t v238 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
      memcpy(v235, v236, *(void *)(*(void *)(v238 - 8) + 64));
    }
    else
    {
      uint64_t v239 = v236[1];
      *uint64_t v235 = *v236;
      v235[1] = v239;
      uint64_t v240 = v236[3];
      v235[2] = v236[2];
      v235[3] = v240;
      uint64_t v241 = v236[5];
      v235[4] = v236[4];
      v235[5] = v241;
      uint64_t v242 = v236[7];
      v235[6] = v236[6];
      v235[7] = v242;
      uint64_t v243 = v236[9];
      v235[8] = v236[8];
      v235[9] = v243;
      uint64_t v244 = v236[11];
      v235[10] = v236[10];
      v235[11] = v244;
      *((unsigned char *)v235 + 96) = *((unsigned char *)v236 + 96);
      uint64_t v245 = v236[14];
      v235[13] = v236[13];
      v235[14] = v245;
      uint64_t v246 = v237[13];
      uint64_t v655 = (char *)v235 + v246;
      long long v635 = (char *)v236 + v246;
      uint64_t v640 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v635, 1, v640))
      {
        uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v655, v635, *(void *)(*(void *)(v247 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v640 - 8) + 16))(v655, v635, v640);
        __swift_storeEnumTagSinglePayload((uint64_t)v655, 0, 1, v640);
      }
      uint64_t v248 = v237[14];
      long long v249 = (char *)v235 + v248;
      uint64_t v250 = (char *)v236 + v248;
      if (__swift_getEnumTagSinglePayload((uint64_t)v236 + v248, 1, v640))
      {
        uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v249, v250, *(void *)(*(void *)(v251 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v640 - 8) + 16))(v249, v250, v640);
        __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, v640);
      }
      uint64_t v252 = v237[15];
      uint64_t v253 = (void *)((char *)v235 + v252);
      uint64_t v254 = (void *)((char *)v236 + v252);
      uint64_t v255 = v254[1];
      *uint64_t v253 = *v254;
      v253[1] = v255;
      uint64_t v256 = v237[16];
      uint64_t v257 = (void *)((char *)v235 + v256);
      uint64_t v258 = (void *)((char *)v236 + v256);
      uint64_t v259 = v258[1];
      *uint64_t v257 = *v258;
      v257[1] = v259;
      uint64_t v260 = v237[17];
      long long v261 = (void *)((char *)v235 + v260);
      uint64_t v262 = (void *)((char *)v236 + v260);
      uint64_t v263 = v262[1];
      *long long v261 = *v262;
      v261[1] = v263;
      uint64_t v264 = v237[18];
      uint64_t v656 = (char *)v235 + v264;
      uint64_t v265 = (char *)v236 + v264;
      uint64_t v266 = type metadata accessor for DateComponents();
      uint64_t v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v267(v656, v265, v266);
      v267((char *)v235 + v237[19], (char *)v236 + v237[19], v266);
      uint64_t v268 = v237[20];
      uint64_t v269 = (void *)((char *)v235 + v268);
      uint64_t v270 = (void *)((char *)v236 + v268);
      uint64_t v271 = v270[1];
      void *v269 = *v270;
      v269[1] = v271;
      uint64_t v272 = v237[21];
      long long v273 = (void *)((char *)v235 + v272);
      long long v274 = (void *)((char *)v236 + v272);
      uint64_t v275 = v274[1];
      void *v273 = *v274;
      v273[1] = v275;
      uint64_t v276 = v237[22];
      long long v277 = (void *)((char *)v235 + v276);
      uint64_t v278 = (void *)((char *)v236 + v276);
      uint64_t v657 = v278[1];
      void *v277 = *v278;
      v277[1] = v657;
      uint64_t v279 = v237[23];
      uint64_t v280 = (void *)((char *)v235 + v279);
      uint64_t v281 = (void *)((char *)v236 + v279);
      __dstf = (void *)v281[1];
      void *v280 = *v281;
      v280[1] = __dstf;
      uint64_t v282 = v237[24];
      uint64_t v283 = (void *)((char *)v235 + v282);
      uint64_t v284 = (void *)((char *)v236 + v282);
      uint64_t v641 = v284[1];
      *uint64_t v283 = *v284;
      v283[1] = v641;
      uint64_t v285 = v237[25];
      int v286 = (void *)((char *)v235 + v285);
      int v287 = (void *)((char *)v236 + v285);
      uint64_t v634 = v287[1];
      *int v286 = *v287;
      v286[1] = v634;
      uint64_t v288 = v237[26];
      long long v289 = (void *)((char *)v235 + v288);
      long long v290 = (void *)((char *)v236 + v288);
      uint64_t v633 = v290[1];
      void *v289 = *v290;
      v289[1] = v633;
      uint64_t v291 = v237[27];
      uint64_t v292 = (void *)((char *)v235 + v291);
      uint64_t v293 = (void *)((char *)v236 + v291);
      uint64_t v632 = v293[1];
      void *v292 = *v293;
      v292[1] = v632;
      uint64_t v294 = v237[28];
      uint64_t v295 = (void *)((char *)v235 + v294);
      uint64_t v296 = (void *)((char *)v236 + v294);
      uint64_t v631 = v296[1];
      *uint64_t v295 = *v296;
      v295[1] = v631;
      uint64_t v297 = v237[29];
      uint64_t v298 = (void *)((char *)v235 + v297);
      uint64_t v299 = (void *)((char *)v236 + v297);
      uint64_t v630 = v299[1];
      *uint64_t v298 = *v299;
      v298[1] = v630;
      uint64_t v300 = v237[30];
      uint64_t v301 = (void *)((char *)v235 + v300);
      uint64_t v302 = (void *)((char *)v236 + v300);
      uint64_t v629 = v302[1];
      *uint64_t v301 = *v302;
      v301[1] = v629;
      uint64_t v303 = v237[31];
      uint64_t v304 = (void *)((char *)v235 + v303);
      int v305 = (void *)((char *)v236 + v303);
      uint64_t v628 = v305[1];
      *uint64_t v304 = *v305;
      v304[1] = v628;
      uint64_t v306 = v237[32];
      uint64_t v307 = (void *)((char *)v235 + v306);
      uint64_t v308 = (void *)((char *)v236 + v306);
      uint64_t v309 = v308[1];
      *uint64_t v307 = *v308;
      v307[1] = v309;
      *(void *)((char *)v235 + v237[33]) = *(void *)((char *)v236 + v237[33]);
      *(void *)((char *)v235 + v237[34]) = *(void *)((char *)v236 + v237[34]);
      uint64_t v310 = v237[35];
      uint64_t v311 = (void *)((char *)v235 + v310);
      uint64_t v312 = (void *)((char *)v236 + v310);
      uint64_t v313 = v312[1];
      void *v311 = *v312;
      v311[1] = v313;
      uint64_t v314 = v237[36];
      uint64_t v315 = (void *)((char *)v235 + v314);
      uint64_t v316 = (void *)((char *)v236 + v314);
      uint64_t v317 = v316[1];
      void *v315 = *v316;
      v315[1] = v317;
      uint64_t v318 = v237[37];
      uint64_t v319 = (void *)((char *)v235 + v318);
      int v320 = (void *)((char *)v236 + v318);
      uint64_t v321 = v320[1];
      *uint64_t v319 = *v320;
      v319[1] = v321;
      uint64_t v322 = v237[38];
      uint64_t v636 = (char *)v235 + v322;
      uint64_t v323 = (char *)v236 + v322;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v323, 1, v671))
      {
        uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v636, v323, *(void *)(*(void *)(v324 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v636, v323, v671);
        __swift_storeEnumTagSinglePayload((uint64_t)v636, 0, 1, v671);
      }
      uint64_t v325 = v237[39];
      uint64_t v326 = (void *)((char *)v235 + v325);
      uint64_t v327 = (void *)((char *)v236 + v325);
      uint64_t v328 = v327[1];
      *uint64_t v326 = *v327;
      v326[1] = v328;
      uint64_t v329 = v237[40];
      uint64_t v330 = (void *)((char *)v235 + v329);
      uint64_t v331 = (void *)((char *)v236 + v329);
      uint64_t v332 = v331[1];
      *uint64_t v330 = *v331;
      v330[1] = v332;
      uint64_t v333 = v237[41];
      uint64_t v334 = (char *)v235 + v333;
      uint64_t v335 = (char *)v236 + v333;
      v334[8] = v335[8];
      *(void *)uint64_t v334 = *(void *)v335;
      uint64_t v336 = v237[42];
      uint64_t v337 = (void *)((char *)v235 + v336);
      uint64_t v338 = (void *)((char *)v236 + v336);
      uint64_t v339 = v338[1];
      *uint64_t v337 = *v338;
      v337[1] = v339;
      uint64_t v340 = v237[43];
      uint64_t v341 = (char *)v235 + v340;
      int v342 = (char *)v236 + v340;
      *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
      *(void *)(v341 + 13) = *(void *)(v342 + 13);
      uint64_t v343 = v237[44];
      uint64_t v344 = (void *)((char *)v235 + v343);
      uint64_t v345 = (void *)((char *)v236 + v343);
      uint64_t v346 = v345[1];
      *uint64_t v344 = *v345;
      v344[1] = v346;
      uint64_t v347 = v237[45];
      uint64_t v348 = (void *)((char *)v235 + v347);
      uint64_t v349 = (void *)((char *)v236 + v347);
      uint64_t v350 = v349[1];
      *uint64_t v348 = *v349;
      v348[1] = v350;
      uint64_t v351 = v237[46];
      uint64_t v352 = (void *)((char *)v235 + v351);
      uint64_t v353 = (void *)((char *)v236 + v351);
      uint64_t v354 = v353[1];
      *uint64_t v352 = *v353;
      v352[1] = v354;
      uint64_t v355 = v237[47];
      uint64_t v356 = (void *)((char *)v235 + v355);
      uint64_t v357 = (void *)((char *)v236 + v355);
      uint64_t v358 = v357[1];
      *uint64_t v356 = *v357;
      v356[1] = v358;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v235, 0, 1, (uint64_t)v237);
      uint64_t v15 = a1;
      uint64_t v34 = v661;
      uint64_t v25 = v662;
      uint64_t v26 = (int *)v665;
    }
    uint64_t v359 = v26[12];
    uint64_t v360 = (void *)(v34 + v359);
    uint64_t v361 = (void *)((char *)v25 + v359);
    uint64_t v362 = (int *)type metadata accessor for HotelReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v361, 1, (uint64_t)v362))
    {
      uint64_t v363 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
      memcpy(v360, v361, *(void *)(*(void *)(v363 - 8) + 64));
    }
    else
    {
      uint64_t v364 = v361[1];
      void *v360 = *v361;
      v360[1] = v364;
      uint64_t v365 = v361[3];
      v360[2] = v361[2];
      v360[3] = v365;
      uint64_t v366 = v361[5];
      v360[4] = v361[4];
      v360[5] = v366;
      uint64_t v367 = v361[7];
      v360[6] = v361[6];
      v360[7] = v367;
      uint64_t v368 = v361[9];
      v360[8] = v361[8];
      v360[9] = v368;
      uint64_t v369 = v361[11];
      v360[10] = v361[10];
      v360[11] = v369;
      *((unsigned char *)v360 + 96) = *((unsigned char *)v361 + 96);
      uint64_t v370 = v361[14];
      v360[13] = v361[13];
      v360[14] = v370;
      uint64_t v371 = v361[16];
      v360[15] = v361[15];
      v360[16] = v371;
      uint64_t v372 = v362[14];
      uint64_t v658 = (char *)v360 + v372;
      uint64_t v637 = (char *)v361 + v372;
      uint64_t v373 = type metadata accessor for DateComponents();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v637, 1, v373))
      {
        uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v658, v637, *(void *)(*(void *)(v374 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v658, v637, v373);
        __swift_storeEnumTagSinglePayload((uint64_t)v658, 0, 1, v373);
      }
      uint64_t v375 = v362[15];
      uint64_t v376 = (char *)v360 + v375;
      uint64_t v377 = (char *)v361 + v375;
      if (__swift_getEnumTagSinglePayload((uint64_t)v361 + v375, 1, v373))
      {
        uint64_t v378 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v376, v377, *(void *)(*(void *)(v378 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v376, v377, v373);
        __swift_storeEnumTagSinglePayload((uint64_t)v376, 0, 1, v373);
      }
      uint64_t v379 = v362[16];
      uint64_t v380 = (void *)((char *)v360 + v379);
      uint64_t v381 = (void *)((char *)v361 + v379);
      uint64_t v382 = v381[1];
      *uint64_t v380 = *v381;
      v380[1] = v382;
      uint64_t v383 = v362[17];
      uint64_t v384 = (void *)((char *)v360 + v383);
      uint64_t v385 = (void *)((char *)v361 + v383);
      uint64_t v659 = v385[1];
      *uint64_t v384 = *v385;
      v384[1] = v659;
      uint64_t v386 = v362[18];
      uint64_t v387 = (void *)((char *)v360 + v386);
      uint64_t v388 = (void *)((char *)v361 + v386);
      __dstg = (void *)v388[1];
      *uint64_t v387 = *v388;
      v387[1] = __dstg;
      uint64_t v389 = v362[19];
      int v390 = (void *)((char *)v360 + v389);
      uint64_t v391 = (void *)((char *)v361 + v389);
      uint64_t v642 = v391[1];
      *int v390 = *v391;
      v390[1] = v642;
      uint64_t v392 = v362[20];
      long long v393 = (void *)((char *)v360 + v392);
      uint64_t v394 = (void *)((char *)v361 + v392);
      uint64_t v395 = v394[1];
      void *v393 = *v394;
      v393[1] = v395;
      *(void *)((char *)v360 + v362[21]) = *(void *)((char *)v361 + v362[21]);
      *(void *)((char *)v360 + v362[22]) = *(void *)((char *)v361 + v362[22]);
      uint64_t v396 = v362[23];
      uint64_t v397 = (char *)v360 + v396;
      uint64_t v398 = (char *)v361 + v396;
      *(void *)uint64_t v397 = *(void *)v398;
      v397[8] = v398[8];
      uint64_t v399 = v362[24];
      uint64_t v400 = (char *)v360 + v399;
      uint64_t v401 = (char *)v361 + v399;
      *(void *)uint64_t v400 = *(void *)v401;
      v400[8] = v401[8];
      uint64_t v402 = v362[25];
      uint64_t v403 = (void *)((char *)v360 + v402);
      uint64_t v404 = (void *)((char *)v361 + v402);
      uint64_t v405 = v404[1];
      void *v403 = *v404;
      v403[1] = v405;
      uint64_t v406 = v362[26];
      uint64_t v407 = (void *)((char *)v360 + v406);
      uint64_t v408 = (void *)((char *)v361 + v406);
      uint64_t v409 = v408[1];
      void *v407 = *v408;
      v407[1] = v409;
      uint64_t v410 = v362[27];
      int v411 = (void *)((char *)v360 + v410);
      uint64_t v412 = (void *)((char *)v361 + v410);
      uint64_t v413 = v412[1];
      *int v411 = *v412;
      v411[1] = v413;
      uint64_t v414 = v362[28];
      uint64_t v415 = (void *)((char *)v360 + v414);
      uint64_t v416 = (void *)((char *)v361 + v414);
      uint64_t v417 = v416[1];
      *uint64_t v415 = *v416;
      v415[1] = v417;
      uint64_t v418 = v362[29];
      uint64_t v419 = (char *)v360 + v418;
      uint64_t v420 = (char *)v361 + v418;
      *(void *)uint64_t v419 = *(void *)v420;
      v419[8] = v420[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, (uint64_t)v362);
      uint64_t v15 = a1;
      uint64_t v34 = v661;
      uint64_t v25 = v662;
      uint64_t v26 = (int *)v665;
    }
    uint64_t v421 = v26[13];
    uint64_t v422 = (void *)(v34 + v421);
    uint64_t v423 = (void *)((char *)v25 + v421);
    uint64_t v424 = (int *)type metadata accessor for RestaurantReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v423, 1, (uint64_t)v424))
    {
      uint64_t v425 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
      memcpy(v422, v423, *(void *)(*(void *)(v425 - 8) + 64));
    }
    else
    {
      uint64_t v426 = v423[1];
      *uint64_t v422 = *v423;
      v422[1] = v426;
      uint64_t v427 = v423[3];
      v422[2] = v423[2];
      v422[3] = v427;
      uint64_t v428 = v423[5];
      v422[4] = v423[4];
      v422[5] = v428;
      uint64_t v660 = v423[7];
      v422[6] = v423[6];
      v422[7] = v660;
      uint64_t v429 = v423[9];
      v422[8] = v423[8];
      v422[9] = v429;
      uint64_t v430 = v423[11];
      v422[10] = v423[10];
      v422[11] = v430;
      *((unsigned char *)v422 + 96) = *((unsigned char *)v423 + 96);
      uint64_t v431 = v423[14];
      v422[13] = v423[13];
      v422[14] = v431;
      uint64_t v432 = v423[16];
      v422[15] = v423[15];
      v422[16] = v432;
      uint64_t v433 = v424[14];
      uint64_t v663 = (char *)v422 + v433;
      uint64_t v434 = (char *)v423 + v433;
      uint64_t v638 = (void *)type metadata accessor for DateComponents();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v434, 1, (uint64_t)v638))
      {
        uint64_t v435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v663, v434, *(void *)(*(void *)(v435 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(*(v638 - 1) + 16))(v663, v434, v638);
        __swift_storeEnumTagSinglePayload((uint64_t)v663, 0, 1, (uint64_t)v638);
      }
      uint64_t v436 = v424[15];
      uint64_t v437 = (void *)((char *)v422 + v436);
      uint64_t v438 = (void *)((char *)v423 + v436);
      uint64_t v439 = v438[1];
      *uint64_t v437 = *v438;
      v437[1] = v439;
      uint64_t v440 = v424[16];
      uint64_t v441 = (void *)((char *)v422 + v440);
      uint64_t v442 = (void *)((char *)v423 + v440);
      uint64_t v443 = v442[1];
      *uint64_t v441 = *v442;
      v441[1] = v443;
      uint64_t v444 = v424[17];
      uint64_t v445 = (void *)((char *)v422 + v444);
      uint64_t v446 = (void *)((char *)v423 + v444);
      uint64_t v447 = v446[1];
      *uint64_t v445 = *v446;
      v445[1] = v447;
      uint64_t v448 = v424[18];
      uint64_t v449 = (void *)((char *)v422 + v448);
      uint64_t v450 = (void *)((char *)v423 + v448);
      uint64_t v451 = v450[1];
      *uint64_t v449 = *v450;
      v449[1] = v451;
      uint64_t v452 = v424[19];
      uint64_t v453 = (void *)((char *)v422 + v452);
      uint64_t v454 = (void *)((char *)v423 + v452);
      uint64_t v455 = v454[1];
      void *v453 = *v454;
      v453[1] = v455;
      *(void *)((char *)v422 + v424[20]) = *(void *)((char *)v423 + v424[20]);
      uint64_t v456 = v424[21];
      uint64_t v457 = (void *)((char *)v422 + v456);
      uint64_t v458 = (void *)((char *)v423 + v456);
      uint64_t v459 = v458[1];
      void *v457 = *v458;
      v457[1] = v459;
      uint64_t v460 = v424[22];
      uint64_t v461 = (void *)((char *)v422 + v460);
      uint64_t v462 = (void *)((char *)v423 + v460);
      uint64_t v463 = v462[1];
      void *v461 = *v462;
      v461[1] = v463;
      uint64_t v464 = v424[23];
      uint64_t v465 = (void *)((char *)v422 + v464);
      uint64_t v466 = (void *)((char *)v423 + v464);
      uint64_t v467 = v466[1];
      void *v465 = *v466;
      v465[1] = v467;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v422, 0, 1, (uint64_t)v424);
      uint64_t v15 = a1;
      uint64_t v34 = v661;
    }
    __swift_storeEnumTagSinglePayload(v34, 0, 1, v665);
    uint64_t v13 = a3;
    uint64_t v28 = a2;
  }
  uint64_t v468 = v13[18];
  uint64_t v469 = (void *)((char *)v15 + v468);
  uint64_t v470 = (void *)((char *)v28 + v468);
  uint64_t v471 = (int *)type metadata accessor for PreExtractedCard(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v470, 1, (uint64_t)v471))
  {
    uint64_t v472 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v469, v470, *(void *)(*(void *)(v472 - 8) + 64));
  }
  else
  {
    uint64_t v473 = v470[1];
    void *v469 = *v470;
    v469[1] = v473;
    uint64_t v474 = v470[3];
    v469[2] = v470[2];
    v469[3] = v474;
    uint64_t v475 = v470[5];
    v469[4] = v470[4];
    v469[5] = v475;
    uint64_t v476 = v470[7];
    v469[6] = v470[6];
    v469[7] = v476;
    uint64_t v477 = v470[9];
    v469[8] = v470[8];
    v469[9] = v477;
    uint64_t v478 = v470[11];
    v469[10] = v470[10];
    v469[11] = v478;
    uint64_t v479 = v471[10];
    uint64_t v480 = (char *)v469 + v479;
    uint64_t v481 = (char *)v470 + v479;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v481, 1, v671))
    {
      uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v480, v481, *(void *)(*(void *)(v482 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v480, v481, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v480, 0, 1, v671);
    }
    uint64_t v483 = v471[11];
    uint64_t v484 = (char *)v469 + v483;
    uint64_t v485 = (char *)v470 + v483;
    if (__swift_getEnumTagSinglePayload((uint64_t)v470 + v483, 1, v671))
    {
      uint64_t v486 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v484, v485, *(void *)(*(void *)(v486 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v484, v485, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v484, 0, 1, v671);
    }
    uint64_t v487 = v471[12];
    uint64_t v488 = (void *)((char *)v469 + v487);
    uint64_t v489 = (void *)((char *)v470 + v487);
    uint64_t v490 = v489[1];
    *uint64_t v488 = *v489;
    v488[1] = v490;
    uint64_t v491 = v471[13];
    uint64_t v492 = (void *)((char *)v469 + v491);
    uint64_t v493 = (void *)((char *)v470 + v491);
    uint64_t v494 = v493[1];
    *uint64_t v492 = *v493;
    v492[1] = v494;
    uint64_t v495 = v471[14];
    uint64_t v496 = (void *)((char *)v469 + v495);
    uint64_t v497 = (void *)((char *)v470 + v495);
    uint64_t v498 = v497[1];
    void *v496 = *v497;
    v496[1] = v498;
    uint64_t v499 = v471[15];
    uint64_t v500 = (char *)v469 + v499;
    uint64_t v501 = (char *)v470 + v499;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v501, 1, v671))
    {
      uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v500, v501, *(void *)(*(void *)(v502 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v500, v501, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v500, 0, 1, v671);
    }
    uint64_t v503 = v471[16];
    uint64_t v504 = (void *)((char *)v469 + v503);
    uint64_t v505 = (void *)((char *)v470 + v503);
    uint64_t v506 = v505[1];
    void *v504 = *v505;
    v504[1] = v506;
    uint64_t v507 = v471[17];
    uint64_t v508 = (void *)((char *)v469 + v507);
    uint64_t v509 = (void *)((char *)v470 + v507);
    uint64_t v510 = v509[1];
    void *v508 = *v509;
    v508[1] = v510;
    uint64_t v511 = v471[18];
    uint64_t v512 = (void *)((char *)v469 + v511);
    uint64_t v513 = (void *)((char *)v470 + v511);
    uint64_t v514 = v513[1];
    void *v512 = *v513;
    v512[1] = v514;
    uint64_t v515 = v471[19];
    uint64_t v516 = (void *)((char *)v469 + v515);
    uint64_t v517 = (void *)((char *)v470 + v515);
    uint64_t v518 = v517[1];
    void *v516 = *v517;
    v516[1] = v518;
    uint64_t v519 = v471[20];
    uint64_t v520 = (void *)((char *)v469 + v519);
    uint64_t v521 = (void *)((char *)v470 + v519);
    uint64_t v522 = v521[1];
    void *v520 = *v521;
    v520[1] = v522;
    uint64_t v523 = v471[21];
    uint64_t v524 = (void *)((char *)v469 + v523);
    uint64_t v525 = (void *)((char *)v470 + v523);
    uint64_t v526 = v525[1];
    void *v524 = *v525;
    v524[1] = v526;
    uint64_t v527 = v471[22];
    uint64_t v528 = (void *)((char *)v469 + v527);
    uint64_t v529 = (void *)((char *)v470 + v527);
    uint64_t v530 = v529[1];
    void *v528 = *v529;
    v528[1] = v530;
    uint64_t v531 = v471[23];
    uint64_t v532 = (void *)((char *)v469 + v531);
    uint64_t v533 = (void *)((char *)v470 + v531);
    uint64_t v534 = v533[1];
    void *v532 = *v533;
    v532[1] = v534;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v469, 0, 1, (uint64_t)v471);
    uint64_t v28 = a2;
    uint64_t v15 = a1;
    uint64_t v13 = a3;
  }
  uint64_t v535 = v13[19];
  uint64_t v536 = (void *)((char *)v15 + v535);
  uint64_t v537 = (void *)((char *)v28 + v535);
  uint64_t v538 = (int *)type metadata accessor for PreExtractedContact(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v537, 1, (uint64_t)v538))
  {
    uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v536, v537, *(void *)(*(void *)(v539 - 8) + 64));
  }
  else
  {
    uint64_t v540 = v537[1];
    void *v536 = *v537;
    v536[1] = v540;
    uint64_t v541 = v537[3];
    v536[2] = v537[2];
    v536[3] = v541;
    uint64_t v542 = v537[5];
    v536[4] = v537[4];
    v536[5] = v542;
    uint64_t v543 = v537[7];
    v536[6] = v537[6];
    v536[7] = v543;
    uint64_t v544 = v537[9];
    v536[8] = v537[8];
    v536[9] = v544;
    uint64_t v545 = v537[11];
    v536[10] = v537[10];
    v536[11] = v545;
    uint64_t v546 = v538[11];
    uint64_t v666 = (char *)v536 + v546;
    uint64_t v547 = (char *)v537 + v546;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v547, 1, v671))
    {
      uint64_t v548 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v666, v547, *(void *)(*(void *)(v548 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v666, v547, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v666, 0, 1, v671);
    }
    uint64_t v549 = v538[12];
    uint64_t v550 = (void *)((char *)v536 + v549);
    uint64_t v551 = (void *)((char *)v537 + v549);
    uint64_t v552 = v551[1];
    *uint64_t v550 = *v551;
    v550[1] = v552;
    *(void *)((char *)v536 + v538[13]) = *(void *)((char *)v537 + v538[13]);
    uint64_t v553 = v538[14];
    uint64_t v554 = (char *)v536 + v553;
    uint64_t v555 = (char *)v537 + v553;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = a3;
    uint64_t v28 = a2;
    if (__swift_getEnumTagSinglePayload((uint64_t)v555, 1, v671))
    {
      uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v554, v555, *(void *)(*(void *)(v556 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v554, v555, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v554, 0, 1, v671);
    }
    *(void *)((char *)v536 + v538[15]) = *(void *)((char *)v537 + v538[15]);
    *(void *)((char *)v536 + v538[16]) = *(void *)((char *)v537 + v538[16]);
    uint64_t v557 = v538[17];
    uint64_t v558 = (void *)((char *)v536 + v557);
    uint64_t v559 = (void *)((char *)v537 + v557);
    uint64_t v560 = v559[1];
    *uint64_t v558 = *v559;
    v558[1] = v560;
    *(void *)((char *)v536 + v538[18]) = *(void *)((char *)v537 + v538[18]);
    *(void *)((char *)v536 + v538[19]) = *(void *)((char *)v537 + v538[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v536, 0, 1, (uint64_t)v538);
    uint64_t v15 = a1;
  }
  uint64_t v561 = v13[20];
  uint64_t v562 = (void *)((char *)v15 + v561);
  uint64_t v563 = (void *)((char *)v28 + v561);
  uint64_t v564 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v563, 1, (uint64_t)v564))
  {
    uint64_t v565 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v562, v563, *(void *)(*(void *)(v565 - 8) + 64));
  }
  else
  {
    uint64_t v566 = v563[1];
    *uint64_t v562 = *v563;
    v562[1] = v566;
    uint64_t v567 = v563[3];
    v562[2] = v563[2];
    v562[3] = v567;
    uint64_t v568 = v563[5];
    v562[4] = v563[4];
    v562[5] = v568;
    uint64_t v569 = v563[7];
    v562[6] = v563[6];
    v562[7] = v569;
    uint64_t v570 = v564[8];
    uint64_t v571 = (char *)v562 + v570;
    uint64_t v572 = (char *)v563 + v570;
    uint64_t v573 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v572, 1, v573))
    {
      uint64_t v574 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v571, v572, *(void *)(*(void *)(v574 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v573 - 8) + 16))(v571, v572, v573);
      __swift_storeEnumTagSinglePayload((uint64_t)v571, 0, 1, v573);
    }
    uint64_t v575 = v564[9];
    uint64_t v576 = (void *)((char *)v562 + v575);
    uint64_t v577 = (void *)((char *)v563 + v575);
    uint64_t v578 = v577[1];
    *uint64_t v576 = *v577;
    v576[1] = v578;
    uint64_t v579 = v564[10];
    uint64_t v580 = (void *)((char *)v562 + v579);
    uint64_t v581 = (void *)((char *)v563 + v579);
    uint64_t v582 = v581[1];
    void *v580 = *v581;
    v580[1] = v582;
    uint64_t v583 = v564[11];
    uint64_t v584 = (void *)((char *)v562 + v583);
    uint64_t v585 = (void *)((char *)v563 + v583);
    uint64_t v586 = v585[1];
    *uint64_t v584 = *v585;
    v584[1] = v586;
    uint64_t v587 = v564[12];
    uint64_t v588 = (char *)v562 + v587;
    uint64_t v589 = (char *)v563 + v587;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = a3;
    uint64_t v28 = a2;
    if (__swift_getEnumTagSinglePayload((uint64_t)v589, 1, v671))
    {
      uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v588, v589, *(void *)(*(void *)(v590 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v588, v589, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v588, 0, 1, v671);
    }
    uint64_t v591 = v564[13];
    uint64_t v592 = (char *)v562 + v591;
    uint64_t v593 = (char *)v563 + v591;
    if (__swift_getEnumTagSinglePayload((uint64_t)v563 + v591, 1, v671))
    {
      uint64_t v594 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v592, v593, *(void *)(*(void *)(v594 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v592, v593, v671);
      __swift_storeEnumTagSinglePayload((uint64_t)v592, 0, 1, v671);
    }
    uint64_t v595 = v564[14];
    uint64_t v596 = (char *)v562 + v595;
    uint64_t v597 = (char *)v563 + v595;
    *(void *)uint64_t v596 = *(void *)v597;
    v596[8] = v597[8];
    uint64_t v598 = v564[15];
    uint64_t v599 = (void *)((char *)v562 + v598);
    uint64_t v600 = (void *)((char *)v563 + v598);
    uint64_t v601 = v600[1];
    *uint64_t v599 = *v600;
    v599[1] = v601;
    uint64_t v602 = v564[16];
    uint64_t v603 = (void *)((char *)v562 + v602);
    uint64_t v604 = (void *)((char *)v563 + v602);
    uint64_t v605 = v604[1];
    *uint64_t v603 = *v604;
    v603[1] = v605;
    uint64_t v606 = v564[17];
    uint64_t v607 = (void *)((char *)v562 + v606);
    uint64_t v608 = (void *)((char *)v563 + v606);
    uint64_t v609 = v608[1];
    *uint64_t v607 = *v608;
    v607[1] = v609;
    uint64_t v610 = v564[18];
    uint64_t v611 = (void *)((char *)v562 + v610);
    uint64_t v612 = (void *)((char *)v563 + v610);
    uint64_t v613 = v612[1];
    *uint64_t v611 = *v612;
    v611[1] = v613;
    uint64_t v614 = v564[19];
    uint64_t v615 = (void *)((char *)v562 + v614);
    uint64_t v616 = (void *)((char *)v563 + v614);
    uint64_t v617 = v616[1];
    void *v615 = *v616;
    v615[1] = v617;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v562, 0, 1, (uint64_t)v564);
    uint64_t v15 = a1;
  }
  uint64_t v618 = v13[21];
  uint64_t v619 = (void *)((char *)v15 + v618);
  uint64_t v620 = (void *)((char *)v28 + v618);
  uint64_t v621 = *(void *)((char *)v28 + v618 + 8);
  if (v621)
  {
    void *v619 = *v620;
    v619[1] = v621;
    uint64_t v622 = v620[3];
    v619[2] = v620[2];
    v619[3] = v622;
    uint64_t v623 = v620[5];
    v619[4] = v620[4];
    v619[5] = v623;
    uint64_t v624 = v620[7];
    v619[6] = v620[6];
    v619[7] = v624;
    uint64_t v625 = v620[9];
    v619[8] = v620[8];
    v619[9] = v625;
    uint64_t v626 = v620[11];
    v619[10] = v620[10];
    v619[11] = v626;
    uint64_t v664 = v620[13];
    v619[12] = v620[12];
    v619[13] = v664;
    uint64_t v668 = v620[15];
    v619[14] = v620[14];
    v619[15] = v668;
    uint64_t v672 = v620[17];
    v619[16] = v620[16];
    v619[17] = v672;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v619, v620, 0x90uLL);
  }
  return v15;
}

void *assignWithCopy for Photo(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[4] = v4[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[5] = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[6] = v4[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[7] = v4[7];
  v5[8] = v4[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[9] = v4[9];
  v5[10] = v4[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[11];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)((char *)v5 + a3[12]) = *(void *)((char *)v4 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[13]) = *(void *)((char *)v4 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[14]) = *(void *)((char *)v4 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[15]) = *(void *)((char *)v4 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[16];
  uint64_t v15 = (void *)((char *)v5 + v14);
  uint64_t v16 = (void *)((char *)v4 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[17];
  uint64_t v18 = (void *)((char *)v5 + v17);
  uint64_t v19 = (void *)((char *)v4 + v17);
  uint64_t v20 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, (uint64_t)v20);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, (uint64_t)v20);
  uint64_t v1234 = v5;
  uint64_t v1235 = v9;
  uint64_t v1229 = v20;
  uint64_t v1232 = a3;
  uint64_t v1233 = v4;
  if (!v21)
  {
    if (v22)
    {
      outlined destroy of EmailDocument((uint64_t)v18, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
      goto LABEL_13;
    }
    *uint64_t v18 = *v19;
    v18[1] = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v30 = v20[5];
    uint64_t v31 = (uint64_t)v18 + v30;
    uint64_t v32 = (uint64_t)v19 + v30;
    uint64_t v33 = type metadata accessor for RentalCarReservation(0);
    int v34 = __swift_getEnumTagSinglePayload(v31, 1, v33);
    int v35 = __swift_getEnumTagSinglePayload(v32, 1, v33);
    uint64_t v1225 = v19;
    uint64_t v1228 = v18;
    if (v34)
    {
      if (!v35)
      {
        *(void *)uint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(v32 + 8);
        *(void *)(v31 + 16) = *(void *)(v32 + 16);
        *(void *)(v31 + 24) = *(void *)(v32 + 24);
        *(void *)(v31 + 32) = *(void *)(v32 + 32);
        *(void *)(v31 + 40) = *(void *)(v32 + 40);
        *(void *)(v31 + 48) = *(void *)(v32 + 48);
        *(void *)(v31 + 56) = *(void *)(v32 + 56);
        *(void *)(v31 + 64) = *(void *)(v32 + 64);
        *(void *)(v31 + 72) = *(void *)(v32 + 72);
        *(void *)(v31 + 80) = *(void *)(v32 + 80);
        *(void *)(v31 + 88) = *(void *)(v32 + 88);
        *(void *)(v31 + 96) = *(void *)(v32 + 96);
        *(void *)(v31 + 104) = *(void *)(v32 + 104);
        *(void *)(v31 + 112) = *(void *)(v32 + 112);
        *(void *)(v31 + 120) = *(void *)(v32 + 120);
        *(unsigned char *)(v31 + 128) = *(unsigned char *)(v32 + 128);
        *(unsigned char *)(v31 + 129) = *(unsigned char *)(v32 + 129);
        *(unsigned char *)(v31 + 130) = *(unsigned char *)(v32 + 130);
        *(void *)(v31 + 136) = *(void *)(v32 + 136);
        *(void *)(v31 + 144) = *(void *)(v32 + 144);
        *(void *)(v31 + 152) = *(void *)(v32 + 152);
        *(void *)(v31 + 160) = *(void *)(v32 + 160);
        *(void *)(v31 + 168) = *(void *)(v32 + 168);
        *(void *)(v31 + 176) = *(void *)(v32 + 176);
        *(void *)(v31 + 184) = *(void *)(v32 + 184);
        *(void *)(v31 + 192) = *(void *)(v32 + 192);
        *(void *)(v31 + 200) = *(void *)(v32 + 200);
        *(void *)(v31 + 208) = *(void *)(v32 + 208);
        *(void *)(v31 + 216) = *(void *)(v32 + 216);
        *(void *)(v31 + 224) = *(void *)(v32 + 224);
        *(void *)(v31 + 232) = *(void *)(v32 + 232);
        *(void *)(v31 + 240) = *(void *)(v32 + 240);
        *(void *)(v31 + 248) = *(void *)(v32 + 248);
        *(void *)(v31 + 256) = *(void *)(v32 + 256);
        *(void *)(v31 + 264) = *(void *)(v32 + 264);
        *(void *)(v31 + 272) = *(void *)(v32 + 272);
        *(void *)(v31 + 280) = *(void *)(v32 + 280);
        *(void *)(v31 + 288) = *(void *)(v32 + 288);
        *(void *)(v31 + 296) = *(void *)(v32 + 296);
        *(void *)(v31 + 304) = *(void *)(v32 + 304);
        *(void *)(v31 + 312) = *(void *)(v32 + 312);
        *(void *)(v31 + 320) = *(void *)(v32 + 320);
        *(void *)(v31 + 328) = *(void *)(v32 + 328);
        *(void *)(v31 + 336) = *(void *)(v32 + 336);
        *(void *)(v31 + 344) = *(void *)(v32 + 344);
        *(void *)(v31 + 352) = *(void *)(v32 + 352);
        *(void *)(v31 + 360) = *(void *)(v32 + 360);
        *(void *)(v31 + 368) = *(void *)(v32 + 368);
        uint64_t v36 = *(void *)(v32 + 376);
        *(unsigned char *)(v31 + 384) = *(unsigned char *)(v32 + 384);
        *(void *)(v31 + 376) = v36;
        *(void *)(v31 + 392) = *(void *)(v32 + 392);
        *(void *)(v31 + 400) = *(void *)(v32 + 400);
        *(void *)(v31 + 408) = *(void *)(v32 + 408);
        *(void *)(v31 + 416) = *(void *)(v32 + 416);
        uint64_t v37 = *(int *)(v33 + 140);
        __dst = (void *)(v31 + v37);
        uint64_t v38 = (const void *)(v32 + v37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v9))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v38, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dst, v38, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v9);
        }
        uint64_t v578 = *(int *)(v33 + 144);
        uint64_t v579 = (void *)(v31 + v578);
        uint64_t v580 = (const void *)(v32 + v578);
        if (__swift_getEnumTagSinglePayload(v32 + v578, 1, v9))
        {
          uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v579, v580, *(void *)(*(void *)(v581 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v579, v580, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v579, 0, 1, v9);
        }
        uint64_t v582 = v31;
        uint64_t v583 = v33;
        goto LABEL_231;
      }
      goto LABEL_24;
    }
    if (v35)
    {
      outlined destroy of EmailDocument(v31, (void (*)(void))type metadata accessor for RentalCarReservation);
LABEL_24:
      size_t v44 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?)
                                  - 8)
                      + 64);
      uint64_t v45 = (void *)v31;
      uint64_t v46 = (const void *)v32;
      goto LABEL_25;
    }
    *(void *)uint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = *(void *)(v32 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 16) = *(void *)(v32 + 16);
    *(void *)(v31 + 24) = *(void *)(v32 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 32) = *(void *)(v32 + 32);
    *(void *)(v31 + 40) = *(void *)(v32 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 48) = *(void *)(v32 + 48);
    *(void *)(v31 + 56) = *(void *)(v32 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 64) = *(void *)(v32 + 64);
    *(void *)(v31 + 72) = *(void *)(v32 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 80) = *(void *)(v32 + 80);
    *(void *)(v31 + 88) = *(void *)(v32 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 96) = *(void *)(v32 + 96);
    *(void *)(v31 + 104) = *(void *)(v32 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 112) = *(void *)(v32 + 112);
    *(void *)(v31 + 120) = *(void *)(v32 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v31 + 128) = *(unsigned char *)(v32 + 128);
    *(unsigned char *)(v31 + 129) = *(unsigned char *)(v32 + 129);
    *(unsigned char *)(v31 + 130) = *(unsigned char *)(v32 + 130);
    *(void *)(v31 + 136) = *(void *)(v32 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 144) = *(void *)(v32 + 144);
    *(void *)(v31 + 152) = *(void *)(v32 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 160) = *(void *)(v32 + 160);
    *(void *)(v31 + 168) = *(void *)(v32 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 176) = *(void *)(v32 + 176);
    *(void *)(v31 + 184) = *(void *)(v32 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 192) = *(void *)(v32 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 200) = *(void *)(v32 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 208) = *(void *)(v32 + 208);
    *(void *)(v31 + 216) = *(void *)(v32 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 224) = *(void *)(v32 + 224);
    *(void *)(v31 + 232) = *(void *)(v32 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 240) = *(void *)(v32 + 240);
    *(void *)(v31 + 248) = *(void *)(v32 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 256) = *(void *)(v32 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 264) = *(void *)(v32 + 264);
    *(void *)(v31 + 272) = *(void *)(v32 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 280) = *(void *)(v32 + 280);
    *(void *)(v31 + 288) = *(void *)(v32 + 288);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 296) = *(void *)(v32 + 296);
    *(void *)(v31 + 304) = *(void *)(v32 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 312) = *(void *)(v32 + 312);
    *(void *)(v31 + 320) = *(void *)(v32 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 328) = *(void *)(v32 + 328);
    *(void *)(v31 + 336) = *(void *)(v32 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 344) = *(void *)(v32 + 344);
    *(void *)(v31 + 352) = *(void *)(v32 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 360) = *(void *)(v32 + 360);
    *(void *)(v31 + 368) = *(void *)(v32 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v572 = *(void *)(v32 + 376);
    *(unsigned char *)(v31 + 384) = *(unsigned char *)(v32 + 384);
    *(void *)(v31 + 376) = v572;
    *(void *)(v31 + 392) = *(void *)(v32 + 392);
    *(void *)(v31 + 400) = *(void *)(v32 + 400);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 408) = *(void *)(v32 + 408);
    *(void *)(v31 + 416) = *(void *)(v32 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v573 = *(int *)(v33 + 140);
    uint64_t v574 = (void *)(v31 + v573);
    uint64_t v575 = (const void *)(v32 + v573);
    int v576 = __swift_getEnumTagSinglePayload(v31 + v573, 1, v9);
    int v577 = __swift_getEnumTagSinglePayload((uint64_t)v575, 1, v9);
    if (v576)
    {
      if (!v577)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v574, v575, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v574, 0, 1, v9);
LABEL_307:
        uint64_t v693 = *(int *)(v33 + 144);
        uint64_t v694 = (void *)(v31 + v693);
        uint64_t v695 = v32 + v693;
        int v696 = __swift_getEnumTagSinglePayload(v31 + v693, 1, v9);
        int v697 = __swift_getEnumTagSinglePayload(v695, 1, v9);
        if (v696)
        {
          if (!v697)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v694, v695, v9);
            uint64_t v582 = (uint64_t)v694;
            uint64_t v583 = v9;
LABEL_231:
            __swift_storeEnumTagSinglePayload(v582, 0, 1, v583);
            goto LABEL_232;
          }
        }
        else
        {
          uint64_t v729 = *(void *)(v9 - 8);
          if (!v697)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v729 + 24))(v694, v695, v9);
LABEL_232:
            uint64_t v584 = v20[6];
            uint64_t v585 = (uint64_t)v18 + v584;
            uint64_t v586 = (uint64_t)v19 + v584;
            uint64_t v587 = type metadata accessor for TicketedTransportation(0);
            int v588 = __swift_getEnumTagSinglePayload(v585, 1, v587);
            int v589 = __swift_getEnumTagSinglePayload(v586, 1, v587);
            if (v588)
            {
              if (!v589)
              {
                *(void *)uint64_t v585 = *(void *)v586;
                *(void *)(v585 + 8) = *(void *)(v586 + 8);
                *(void *)(v585 + 16) = *(void *)(v586 + 16);
                *(void *)(v585 + 24) = *(void *)(v586 + 24);
                *(void *)(v585 + 32) = *(void *)(v586 + 32);
                *(void *)(v585 + 40) = *(void *)(v586 + 40);
                *(void *)(v585 + 48) = *(void *)(v586 + 48);
                *(void *)(v585 + 56) = *(void *)(v586 + 56);
                *(void *)(v585 + 64) = *(void *)(v586 + 64);
                *(void *)(v585 + 72) = *(void *)(v586 + 72);
                *(void *)(v585 + 80) = *(void *)(v586 + 80);
                *(void *)(v585 + 88) = *(void *)(v586 + 88);
                *(void *)(v585 + 96) = *(void *)(v586 + 96);
                *(void *)(v585 + 104) = *(void *)(v586 + 104);
                *(void *)(v585 + 112) = *(void *)(v586 + 112);
                *(void *)(v585 + 120) = *(void *)(v586 + 120);
                *(unsigned char *)(v585 + 128) = *(unsigned char *)(v586 + 128);
                *(unsigned char *)(v585 + 129) = *(unsigned char *)(v586 + 129);
                *(unsigned char *)(v585 + 130) = *(unsigned char *)(v586 + 130);
                *(void *)(v585 + 136) = *(void *)(v586 + 136);
                *(void *)(v585 + 144) = *(void *)(v586 + 144);
                *(void *)(v585 + 152) = *(void *)(v586 + 152);
                *(void *)(v585 + 160) = *(void *)(v586 + 160);
                *(void *)(v585 + 168) = *(void *)(v586 + 168);
                *(void *)(v585 + 176) = *(void *)(v586 + 176);
                *(void *)(v585 + 184) = *(void *)(v586 + 184);
                *(void *)(v585 + 192) = *(void *)(v586 + 192);
                *(void *)(v585 + 200) = *(void *)(v586 + 200);
                *(void *)(v585 + 208) = *(void *)(v586 + 208);
                *(void *)(v585 + 216) = *(void *)(v586 + 216);
                *(void *)(v585 + 224) = *(void *)(v586 + 224);
                *(void *)(v585 + 232) = *(void *)(v586 + 232);
                *(void *)(v585 + 240) = *(void *)(v586 + 240);
                *(void *)(v585 + 248) = *(void *)(v586 + 248);
                *(void *)(v585 + 256) = *(void *)(v586 + 256);
                *(void *)(v585 + 264) = *(void *)(v586 + 264);
                *(void *)(v585 + 272) = *(void *)(v586 + 272);
                *(void *)(v585 + 280) = *(void *)(v586 + 280);
                uint64_t v590 = *(void *)(v586 + 288);
                *(unsigned char *)(v585 + 296) = *(unsigned char *)(v586 + 296);
                *(void *)(v585 + 288) = v590;
                uint64_t v591 = *(int *)(v587 + 112);
                __dste = (void *)(v585 + v591);
                uint64_t v592 = (const void *)(v586 + v591);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (__swift_getEnumTagSinglePayload((uint64_t)v592, 1, v9))
                {
                  uint64_t v593 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                  memcpy(__dste, v592, *(void *)(*(void *)(v593 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(__dste, v592, v9);
                  __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v9);
                }
                uint64_t v603 = *(int *)(v587 + 116);
                uint64_t v604 = (void *)(v585 + v603);
                uint64_t v605 = (const void *)(v586 + v603);
                if (__swift_getEnumTagSinglePayload(v586 + v603, 1, v9))
                {
                  uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                  memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v604, v605, v9);
                  __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v9);
                }
                uint64_t v607 = v585;
                uint64_t v608 = v587;
                goto LABEL_248;
              }
              goto LABEL_238;
            }
            if (v589)
            {
              outlined destroy of EmailDocument(v585, (void (*)(void))type metadata accessor for TicketedTransportation);
LABEL_238:
              size_t v594 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?)
                                           - 8)
                               + 64);
              uint64_t v595 = (void *)v585;
              uint64_t v596 = (const void *)v586;
              goto LABEL_239;
            }
            *(void *)uint64_t v585 = *(void *)v586;
            *(void *)(v585 + 8) = *(void *)(v586 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 16) = *(void *)(v586 + 16);
            *(void *)(v585 + 24) = *(void *)(v586 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 32) = *(void *)(v586 + 32);
            *(void *)(v585 + 40) = *(void *)(v586 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 48) = *(void *)(v586 + 48);
            *(void *)(v585 + 56) = *(void *)(v586 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 64) = *(void *)(v586 + 64);
            *(void *)(v585 + 72) = *(void *)(v586 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 80) = *(void *)(v586 + 80);
            *(void *)(v585 + 88) = *(void *)(v586 + 88);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 96) = *(void *)(v586 + 96);
            *(void *)(v585 + 104) = *(void *)(v586 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 112) = *(void *)(v586 + 112);
            *(void *)(v585 + 120) = *(void *)(v586 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v585 + 128) = *(unsigned char *)(v586 + 128);
            *(unsigned char *)(v585 + 129) = *(unsigned char *)(v586 + 129);
            *(unsigned char *)(v585 + 130) = *(unsigned char *)(v586 + 130);
            *(void *)(v585 + 136) = *(void *)(v586 + 136);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 144) = *(void *)(v586 + 144);
            *(void *)(v585 + 152) = *(void *)(v586 + 152);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 160) = *(void *)(v586 + 160);
            *(void *)(v585 + 168) = *(void *)(v586 + 168);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 176) = *(void *)(v586 + 176);
            *(void *)(v585 + 184) = *(void *)(v586 + 184);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 192) = *(void *)(v586 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 200) = *(void *)(v586 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 208) = *(void *)(v586 + 208);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 216) = *(void *)(v586 + 216);
            *(void *)(v585 + 224) = *(void *)(v586 + 224);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 232) = *(void *)(v586 + 232);
            *(void *)(v585 + 240) = *(void *)(v586 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 248) = *(void *)(v586 + 248);
            *(void *)(v585 + 256) = *(void *)(v586 + 256);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 264) = *(void *)(v586 + 264);
            *(void *)(v585 + 272) = *(void *)(v586 + 272);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v585 + 280) = *(void *)(v586 + 280);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v597 = *(void *)(v586 + 288);
            *(unsigned char *)(v585 + 296) = *(unsigned char *)(v586 + 296);
            *(void *)(v585 + 288) = v597;
            uint64_t v598 = *(int *)(v587 + 112);
            uint64_t v599 = (void *)(v585 + v598);
            uint64_t v600 = (const void *)(v586 + v598);
            int v601 = __swift_getEnumTagSinglePayload(v585 + v598, 1, v9);
            int v602 = __swift_getEnumTagSinglePayload((uint64_t)v600, 1, v9);
            if (v601)
            {
              if (!v602)
              {
                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v599, v600, v9);
                __swift_storeEnumTagSinglePayload((uint64_t)v599, 0, 1, v9);
LABEL_313:
                uint64_t v700 = *(int *)(v587 + 116);
                long long v701 = (void *)(v585 + v700);
                uint64_t v702 = v586 + v700;
                int v703 = __swift_getEnumTagSinglePayload(v585 + v700, 1, v9);
                int v704 = __swift_getEnumTagSinglePayload(v702, 1, v9);
                if (v703)
                {
                  if (!v704)
                  {
                    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v701, v702, v9);
                    uint64_t v607 = (uint64_t)v701;
                    uint64_t v608 = v9;
LABEL_248:
                    __swift_storeEnumTagSinglePayload(v607, 0, 1, v608);
                    goto LABEL_249;
                  }
                }
                else
                {
                  uint64_t v730 = *(void *)(v9 - 8);
                  if (!v704)
                  {
                    (*(void (**)(void *, uint64_t, uint64_t))(v730 + 24))(v701, v702, v9);
LABEL_249:
                    uint64_t v609 = v20[7];
                    uint64_t v610 = (uint64_t)v18 + v609;
                    uint64_t v611 = (uint64_t)v19 + v609;
                    uint64_t v612 = (int *)type metadata accessor for TicketedShow(0);
                    int v613 = __swift_getEnumTagSinglePayload(v610, 1, (uint64_t)v612);
                    int v614 = __swift_getEnumTagSinglePayload(v611, 1, (uint64_t)v612);
                    if (v613)
                    {
                      if (!v614)
                      {
                        *(void *)uint64_t v610 = *(void *)v611;
                        *(void *)(v610 + 8) = *(void *)(v611 + 8);
                        *(void *)(v610 + 16) = *(void *)(v611 + 16);
                        *(void *)(v610 + 24) = *(void *)(v611 + 24);
                        *(void *)(v610 + 32) = *(void *)(v611 + 32);
                        *(void *)(v610 + 40) = *(void *)(v611 + 40);
                        *(void *)(v610 + 48) = *(void *)(v611 + 48);
                        *(void *)(v610 + 56) = *(void *)(v611 + 56);
                        *(void *)(v610 + 64) = *(void *)(v611 + 64);
                        *(void *)(v610 + 72) = *(void *)(v611 + 72);
                        *(void *)(v610 + 80) = *(void *)(v611 + 80);
                        *(void *)(v610 + 88) = *(void *)(v611 + 88);
                        *(void *)(v610 + 96) = *(void *)(v611 + 96);
                        *(void *)(v610 + 104) = *(void *)(v611 + 104);
                        *(void *)(v610 + 112) = *(void *)(v611 + 112);
                        *(void *)(v610 + 120) = *(void *)(v611 + 120);
                        *(unsigned char *)(v610 + 128) = *(unsigned char *)(v611 + 128);
                        *(unsigned char *)(v610 + 129) = *(unsigned char *)(v611 + 129);
                        *(unsigned char *)(v610 + 130) = *(unsigned char *)(v611 + 130);
                        *(void *)(v610 + 136) = *(void *)(v611 + 136);
                        *(void *)(v610 + 144) = *(void *)(v611 + 144);
                        *(void *)(v610 + 152) = *(void *)(v611 + 152);
                        *(void *)(v610 + 160) = *(void *)(v611 + 160);
                        *(void *)(v610 + 168) = *(void *)(v611 + 168);
                        *(void *)(v610 + 176) = *(void *)(v611 + 176);
                        *(void *)(v610 + 184) = *(void *)(v611 + 184);
                        *(void *)(v610 + 192) = *(void *)(v611 + 192);
                        *(void *)(v610 + 200) = *(void *)(v611 + 200);
                        *(void *)(v610 + 208) = *(void *)(v611 + 208);
                        *(void *)(v610 + 216) = *(void *)(v611 + 216);
                        *(void *)(v610 + 224) = *(void *)(v611 + 224);
                        *(void *)(v610 + 232) = *(void *)(v611 + 232);
                        *(void *)(v610 + 240) = *(void *)(v611 + 240);
                        *(void *)(v610 + 248) = *(void *)(v611 + 248);
                        *(void *)(v610 + 256) = *(void *)(v611 + 256);
                        *(void *)(v610 + 264) = *(void *)(v611 + 264);
                        *(void *)(v610 + 272) = *(void *)(v611 + 272);
                        *(void *)(v610 + 280) = *(void *)(v611 + 280);
                        uint64_t v615 = *(void *)(v611 + 288);
                        *(unsigned char *)(v610 + 296) = *(unsigned char *)(v611 + 296);
                        *(void *)(v610 + 288) = v615;
                        *(void *)(v610 + 304) = *(void *)(v611 + 304);
                        *(void *)(v610 + 312) = *(void *)(v611 + 312);
                        uint64_t v616 = v612[29];
                        __dstf = (void *)(v610 + v616);
                        uint64_t v1189 = (const void *)(v611 + v616);
                        uint64_t v617 = type metadata accessor for URL();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1189, 1, v617))
                        {
                          uint64_t v618 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                          memcpy(__dstf, v1189, *(void *)(*(void *)(v618 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v617 - 8) + 16))(__dstf, v1189, v617);
                          __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v617);
                        }
                        uint64_t v629 = v612[30];
                        uint64_t v630 = (void *)(v610 + v629);
                        uint64_t v631 = (void *)(v611 + v629);
                        *uint64_t v630 = *v631;
                        v630[1] = v631[1];
                        uint64_t v632 = v612[31];
                        uint64_t v633 = (void *)(v610 + v632);
                        uint64_t v634 = (const void *)(v611 + v632);
                        swift_bridgeObjectRetain();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v634, 1, v9))
                        {
                          uint64_t v635 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                          memcpy(v633, v634, *(void *)(*(void *)(v635 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v633, v634, v9);
                          __swift_storeEnumTagSinglePayload((uint64_t)v633, 0, 1, v9);
                        }
                        uint64_t v636 = v612[32];
                        uint64_t v637 = (void *)(v610 + v636);
                        uint64_t v638 = (const void *)(v611 + v636);
                        if (__swift_getEnumTagSinglePayload(v611 + v636, 1, v9))
                        {
                          uint64_t v639 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                          memcpy(v637, v638, *(void *)(*(void *)(v639 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v637, v638, v9);
                          __swift_storeEnumTagSinglePayload((uint64_t)v637, 0, 1, v9);
                        }
                        uint64_t v640 = v610;
                        uint64_t v641 = (uint64_t)v612;
                        goto LABEL_268;
                      }
                      goto LABEL_255;
                    }
                    if (v614)
                    {
                      outlined destroy of EmailDocument(v610, (void (*)(void))type metadata accessor for TicketedShow);
LABEL_255:
                      size_t v619 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?)
                                                   - 8)
                                       + 64);
                      uint64_t v620 = (void *)v610;
                      uint64_t v621 = (const void *)v611;
                      goto LABEL_256;
                    }
                    *(void *)uint64_t v610 = *(void *)v611;
                    *(void *)(v610 + 8) = *(void *)(v611 + 8);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 16) = *(void *)(v611 + 16);
                    *(void *)(v610 + 24) = *(void *)(v611 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 32) = *(void *)(v611 + 32);
                    *(void *)(v610 + 40) = *(void *)(v611 + 40);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 48) = *(void *)(v611 + 48);
                    *(void *)(v610 + 56) = *(void *)(v611 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 64) = *(void *)(v611 + 64);
                    *(void *)(v610 + 72) = *(void *)(v611 + 72);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 80) = *(void *)(v611 + 80);
                    *(void *)(v610 + 88) = *(void *)(v611 + 88);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 96) = *(void *)(v611 + 96);
                    *(void *)(v610 + 104) = *(void *)(v611 + 104);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 112) = *(void *)(v611 + 112);
                    *(void *)(v610 + 120) = *(void *)(v611 + 120);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(unsigned char *)(v610 + 128) = *(unsigned char *)(v611 + 128);
                    *(unsigned char *)(v610 + 129) = *(unsigned char *)(v611 + 129);
                    *(unsigned char *)(v610 + 130) = *(unsigned char *)(v611 + 130);
                    *(void *)(v610 + 136) = *(void *)(v611 + 136);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 144) = *(void *)(v611 + 144);
                    *(void *)(v610 + 152) = *(void *)(v611 + 152);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 160) = *(void *)(v611 + 160);
                    *(void *)(v610 + 168) = *(void *)(v611 + 168);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 176) = *(void *)(v611 + 176);
                    *(void *)(v610 + 184) = *(void *)(v611 + 184);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 192) = *(void *)(v611 + 192);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 200) = *(void *)(v611 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 208) = *(void *)(v611 + 208);
                    *(void *)(v610 + 216) = *(void *)(v611 + 216);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 224) = *(void *)(v611 + 224);
                    *(void *)(v610 + 232) = *(void *)(v611 + 232);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 240) = *(void *)(v611 + 240);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 248) = *(void *)(v611 + 248);
                    *(void *)(v610 + 256) = *(void *)(v611 + 256);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 264) = *(void *)(v611 + 264);
                    *(void *)(v610 + 272) = *(void *)(v611 + 272);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v610 + 280) = *(void *)(v611 + 280);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v622 = *(void *)(v611 + 288);
                    *(unsigned char *)(v610 + 296) = *(unsigned char *)(v611 + 296);
                    *(void *)(v610 + 288) = v622;
                    *(void *)(v610 + 304) = *(void *)(v611 + 304);
                    *(void *)(v610 + 312) = *(void *)(v611 + 312);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v623 = v612[29];
                    uint64_t v624 = (void *)(v610 + v623);
                    uint64_t v625 = (const void *)(v611 + v623);
                    uint64_t v626 = type metadata accessor for URL();
                    int v627 = __swift_getEnumTagSinglePayload((uint64_t)v624, 1, v626);
                    int v628 = __swift_getEnumTagSinglePayload((uint64_t)v625, 1, v626);
                    if (v627)
                    {
                      uint64_t v9 = v1235;
                      if (!v628)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v626 - 8) + 16))(v624, v625, v626);
                        __swift_storeEnumTagSinglePayload((uint64_t)v624, 0, 1, v626);
                        goto LABEL_319;
                      }
                    }
                    else
                    {
                      uint64_t v705 = *(void *)(v626 - 8);
                      uint64_t v9 = v1235;
                      if (!v628)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v705 + 24))(v624, v625, v626);
LABEL_319:
                        uint64_t v707 = v612[30];
                        uint64_t v708 = (void *)(v610 + v707);
                        uint64_t v709 = (void *)(v611 + v707);
                        void *v708 = *v709;
                        v708[1] = v709[1];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        uint64_t v710 = v612[31];
                        uint64_t v711 = (void *)(v610 + v710);
                        uint64_t v712 = (const void *)(v611 + v710);
                        int v713 = __swift_getEnumTagSinglePayload(v610 + v710, 1, v9);
                        int v714 = __swift_getEnumTagSinglePayload((uint64_t)v712, 1, v9);
                        if (v713)
                        {
                          if (!v714)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v711, v712, v9);
                            __swift_storeEnumTagSinglePayload((uint64_t)v711, 0, 1, v9);
LABEL_343:
                            uint64_t v733 = v612[32];
                            uint64_t v734 = (void *)(v610 + v733);
                            uint64_t v735 = v611 + v733;
                            int v736 = __swift_getEnumTagSinglePayload(v610 + v733, 1, v9);
                            int v737 = __swift_getEnumTagSinglePayload(v735, 1, v9);
                            if (v736)
                            {
                              if (!v737)
                              {
                                (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v734, v735, v9);
                                uint64_t v640 = (uint64_t)v734;
                                uint64_t v641 = v9;
LABEL_268:
                                __swift_storeEnumTagSinglePayload(v640, 0, 1, v641);
                                goto LABEL_269;
                              }
                            }
                            else
                            {
                              uint64_t v747 = *(void *)(v9 - 8);
                              if (!v737)
                              {
                                (*(void (**)(void *, uint64_t, uint64_t))(v747 + 24))(v734, v735, v9);
LABEL_269:
                                uint64_t v642 = v20[8];
                                uint64_t v643 = (uint64_t)v18 + v642;
                                uint64_t v644 = (uint64_t)v19 + v642;
                                uint64_t v645 = type metadata accessor for Appointment(0);
                                int v646 = __swift_getEnumTagSinglePayload(v643, 1, v645);
                                int v647 = __swift_getEnumTagSinglePayload(v644, 1, v645);
                                if (v646)
                                {
                                  if (!v647)
                                  {
                                    *(void *)uint64_t v643 = *(void *)v644;
                                    *(void *)(v643 + 8) = *(void *)(v644 + 8);
                                    *(void *)(v643 + 16) = *(void *)(v644 + 16);
                                    *(void *)(v643 + 24) = *(void *)(v644 + 24);
                                    *(void *)(v643 + 32) = *(void *)(v644 + 32);
                                    *(void *)(v643 + 40) = *(void *)(v644 + 40);
                                    *(void *)(v643 + 48) = *(void *)(v644 + 48);
                                    *(void *)(v643 + 56) = *(void *)(v644 + 56);
                                    *(void *)(v643 + 64) = *(void *)(v644 + 64);
                                    *(void *)(v643 + 72) = *(void *)(v644 + 72);
                                    *(void *)(v643 + 80) = *(void *)(v644 + 80);
                                    *(void *)(v643 + 88) = *(void *)(v644 + 88);
                                    *(void *)(v643 + 96) = *(void *)(v644 + 96);
                                    *(void *)(v643 + 104) = *(void *)(v644 + 104);
                                    *(void *)(v643 + 112) = *(void *)(v644 + 112);
                                    *(void *)(v643 + 120) = *(void *)(v644 + 120);
                                    *(unsigned char *)(v643 + 128) = *(unsigned char *)(v644 + 128);
                                    *(unsigned char *)(v643 + 129) = *(unsigned char *)(v644 + 129);
                                    *(unsigned char *)(v643 + 130) = *(unsigned char *)(v644 + 130);
                                    *(void *)(v643 + 136) = *(void *)(v644 + 136);
                                    *(void *)(v643 + 144) = *(void *)(v644 + 144);
                                    *(void *)(v643 + 152) = *(void *)(v644 + 152);
                                    *(void *)(v643 + 160) = *(void *)(v644 + 160);
                                    *(void *)(v643 + 168) = *(void *)(v644 + 168);
                                    *(void *)(v643 + 176) = *(void *)(v644 + 176);
                                    *(void *)(v643 + 184) = *(void *)(v644 + 184);
                                    *(void *)(v643 + 192) = *(void *)(v644 + 192);
                                    *(void *)(v643 + 200) = *(void *)(v644 + 200);
                                    *(void *)(v643 + 208) = *(void *)(v644 + 208);
                                    *(void *)(v643 + 216) = *(void *)(v644 + 216);
                                    *(void *)(v643 + 224) = *(void *)(v644 + 224);
                                    *(void *)(v643 + 232) = *(void *)(v644 + 232);
                                    *(void *)(v643 + 240) = *(void *)(v644 + 240);
                                    *(void *)(v643 + 248) = *(void *)(v644 + 248);
                                    *(void *)(v643 + 256) = *(void *)(v644 + 256);
                                    *(void *)(v643 + 264) = *(void *)(v644 + 264);
                                    uint64_t v648 = *(void *)(v644 + 272);
                                    *(unsigned char *)(v643 + 280) = *(unsigned char *)(v644 + 280);
                                    *(void *)(v643 + 272) = v648;
                                    *(void *)(v643 + 288) = *(void *)(v644 + 288);
                                    *(void *)(v643 + 296) = *(void *)(v644 + 296);
                                    uint64_t v649 = *(int *)(v645 + 108);
                                    __dstg = (void *)(v643 + v649);
                                    uint64_t v650 = (const void *)(v644 + v649);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    uint64_t v9 = v1235;
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v650, 1, v1235))
                                    {
                                      uint64_t v651 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                      memcpy(__dstg, v650, *(void *)(*(void *)(v651 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8)
                                                                                            + 16))(__dstg, v650, v1235);
                                      __swift_storeEnumTagSinglePayload((uint64_t)__dstg, 0, 1, v1235);
                                    }
                                    uint64_t v661 = *(int *)(v645 + 112);
                                    uint64_t v662 = (void *)(v643 + v661);
                                    uint64_t v663 = (const void *)(v644 + v661);
                                    if (__swift_getEnumTagSinglePayload(v644 + v661, 1, v1235))
                                    {
                                      uint64_t v664 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                      memcpy(v662, v663, *(void *)(*(void *)(v664 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8)
                                                                                            + 16))(v662, v663, v1235);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v662, 0, 1, v1235);
                                    }
                                    uint64_t v665 = v643;
                                    uint64_t v666 = v645;
                                    goto LABEL_285;
                                  }
                                  goto LABEL_275;
                                }
                                if (v647)
                                {
                                  outlined destroy of EmailDocument(v643, (void (*)(void))type metadata accessor for Appointment);
LABEL_275:
                                  size_t v652 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?)
                                                               - 8)
                                                   + 64);
                                  uint64_t v653 = (void *)v643;
                                  uint64_t v654 = (const void *)v644;
                                  goto LABEL_276;
                                }
                                *(void *)uint64_t v643 = *(void *)v644;
                                *(void *)(v643 + 8) = *(void *)(v644 + 8);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 16) = *(void *)(v644 + 16);
                                *(void *)(v643 + 24) = *(void *)(v644 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 32) = *(void *)(v644 + 32);
                                *(void *)(v643 + 40) = *(void *)(v644 + 40);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 48) = *(void *)(v644 + 48);
                                *(void *)(v643 + 56) = *(void *)(v644 + 56);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 64) = *(void *)(v644 + 64);
                                *(void *)(v643 + 72) = *(void *)(v644 + 72);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 80) = *(void *)(v644 + 80);
                                *(void *)(v643 + 88) = *(void *)(v644 + 88);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 96) = *(void *)(v644 + 96);
                                *(void *)(v643 + 104) = *(void *)(v644 + 104);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 112) = *(void *)(v644 + 112);
                                *(void *)(v643 + 120) = *(void *)(v644 + 120);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(unsigned char *)(v643 + 128) = *(unsigned char *)(v644 + 128);
                                *(unsigned char *)(v643 + 129) = *(unsigned char *)(v644 + 129);
                                *(unsigned char *)(v643 + 130) = *(unsigned char *)(v644 + 130);
                                *(void *)(v643 + 136) = *(void *)(v644 + 136);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 144) = *(void *)(v644 + 144);
                                *(void *)(v643 + 152) = *(void *)(v644 + 152);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 160) = *(void *)(v644 + 160);
                                *(void *)(v643 + 168) = *(void *)(v644 + 168);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 176) = *(void *)(v644 + 176);
                                *(void *)(v643 + 184) = *(void *)(v644 + 184);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 192) = *(void *)(v644 + 192);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 200) = *(void *)(v644 + 200);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 208) = *(void *)(v644 + 208);
                                *(void *)(v643 + 216) = *(void *)(v644 + 216);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 224) = *(void *)(v644 + 224);
                                *(void *)(v643 + 232) = *(void *)(v644 + 232);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 240) = *(void *)(v644 + 240);
                                *(void *)(v643 + 248) = *(void *)(v644 + 248);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v643 + 256) = *(void *)(v644 + 256);
                                *(void *)(v643 + 264) = *(void *)(v644 + 264);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v655 = *(void *)(v644 + 272);
                                *(unsigned char *)(v643 + 280) = *(unsigned char *)(v644 + 280);
                                *(void *)(v643 + 272) = v655;
                                *(void *)(v643 + 288) = *(void *)(v644 + 288);
                                *(void *)(v643 + 296) = *(void *)(v644 + 296);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v656 = *(int *)(v645 + 108);
                                uint64_t v657 = (void *)(v643 + v656);
                                uint64_t v658 = (const void *)(v644 + v656);
                                int v659 = __swift_getEnumTagSinglePayload(v643 + v656, 1, v9);
                                int v660 = __swift_getEnumTagSinglePayload((uint64_t)v658, 1, v9);
                                if (v659)
                                {
                                  if (!v660)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v657, v658, v9);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v9);
LABEL_325:
                                    uint64_t v717 = *(int *)(v645 + 112);
                                    uint64_t v718 = (void *)(v643 + v717);
                                    uint64_t v719 = v644 + v717;
                                    int v720 = __swift_getEnumTagSinglePayload(v643 + v717, 1, v9);
                                    int v721 = __swift_getEnumTagSinglePayload(v719, 1, v9);
                                    if (v720)
                                    {
                                      if (!v721)
                                      {
                                        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v718, v719, v9);
                                        uint64_t v665 = (uint64_t)v718;
                                        uint64_t v666 = v9;
LABEL_285:
                                        __swift_storeEnumTagSinglePayload(v665, 0, 1, v666);
                                        goto LABEL_286;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t v738 = *(void *)(v9 - 8);
                                      if (!v721)
                                      {
                                        (*(void (**)(void *, uint64_t, uint64_t))(v738 + 24))(v718, v719, v9);
LABEL_286:
                                        uint64_t v667 = v20[9];
                                        uint64_t v668 = (uint64_t)v18 + v667;
                                        uint64_t v669 = (uint64_t)v19 + v667;
                                        uint64_t v670 = (int *)type metadata accessor for Party(0);
                                        int v671 = __swift_getEnumTagSinglePayload(v668, 1, (uint64_t)v670);
                                        int v672 = __swift_getEnumTagSinglePayload(v669, 1, (uint64_t)v670);
                                        if (v671)
                                        {
                                          if (!v672)
                                          {
                                            *(void *)uint64_t v668 = *(void *)v669;
                                            *(void *)(v668 + 8) = *(void *)(v669 + 8);
                                            *(void *)(v668 + 16) = *(void *)(v669 + 16);
                                            *(void *)(v668 + 24) = *(void *)(v669 + 24);
                                            *(void *)(v668 + 32) = *(void *)(v669 + 32);
                                            *(void *)(v668 + 40) = *(void *)(v669 + 40);
                                            *(void *)(v668 + 48) = *(void *)(v669 + 48);
                                            *(void *)(v668 + 56) = *(void *)(v669 + 56);
                                            *(void *)(v668 + 64) = *(void *)(v669 + 64);
                                            *(void *)(v668 + 72) = *(void *)(v669 + 72);
                                            *(void *)(v668 + 80) = *(void *)(v669 + 80);
                                            *(void *)(v668 + 88) = *(void *)(v669 + 88);
                                            *(void *)(v668 + 96) = *(void *)(v669 + 96);
                                            *(void *)(v668 + 104) = *(void *)(v669 + 104);
                                            *(void *)(v668 + 112) = *(void *)(v669 + 112);
                                            *(void *)(v668 + 120) = *(void *)(v669 + 120);
                                            *(unsigned char *)(v668 + 128) = *(unsigned char *)(v669 + 128);
                                            *(unsigned char *)(v668 + 129) = *(unsigned char *)(v669 + 129);
                                            *(unsigned char *)(v668 + 130) = *(unsigned char *)(v669 + 130);
                                            *(void *)(v668 + 136) = *(void *)(v669 + 136);
                                            *(void *)(v668 + 144) = *(void *)(v669 + 144);
                                            *(void *)(v668 + 152) = *(void *)(v669 + 152);
                                            *(void *)(v668 + 160) = *(void *)(v669 + 160);
                                            *(void *)(v668 + 168) = *(void *)(v669 + 168);
                                            *(void *)(v668 + 176) = *(void *)(v669 + 176);
                                            *(void *)(v668 + 184) = *(void *)(v669 + 184);
                                            *(void *)(v668 + 192) = *(void *)(v669 + 192);
                                            *(void *)(v668 + 200) = *(void *)(v669 + 200);
                                            *(void *)(v668 + 208) = *(void *)(v669 + 208);
                                            *(void *)(v668 + 216) = *(void *)(v669 + 216);
                                            *(void *)(v668 + 224) = *(void *)(v669 + 224);
                                            *(void *)(v668 + 232) = *(void *)(v669 + 232);
                                            *(void *)(v668 + 240) = *(void *)(v669 + 240);
                                            *(void *)(v668 + 248) = *(void *)(v669 + 248);
                                            uint64_t v673 = v670[24];
                                            __dsth = (void *)(v668 + v673);
                                            uint64_t v674 = (const void *)(v669 + v673);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            uint64_t v9 = v1235;
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            if (__swift_getEnumTagSinglePayload((uint64_t)v674, 1, v1235))
                                            {
                                              uint64_t v675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                              memcpy(__dsth, v674, *(void *)(*(void *)(v675 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8) + 16))(__dsth, v674, v1235);
                                              __swift_storeEnumTagSinglePayload((uint64_t)__dsth, 0, 1, v1235);
                                            }
                                            uint64_t v682 = v670[25];
                                            int v683 = (void *)(v668 + v682);
                                            uint64_t v684 = (const void *)(v669 + v682);
                                            if (__swift_getEnumTagSinglePayload(v669 + v682, 1, v1235))
                                            {
                                              uint64_t v685 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                              memcpy(v683, v684, *(void *)(*(void *)(v685 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8) + 16))(v683, v684, v1235);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v683, 0, 1, v1235);
                                            }
                                            uint64_t v686 = v670[26];
                                            uint64_t v687 = (void *)(v668 + v686);
                                            int v688 = (const void *)(v669 + v686);
                                            uint64_t v689 = type metadata accessor for URL();
                                            if (__swift_getEnumTagSinglePayload((uint64_t)v688, 1, v689))
                                            {
                                              uint64_t v690 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                              memcpy(v687, v688, *(void *)(*(void *)(v690 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v689 - 8) + 16))(v687, v688, v689);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v687, 0, 1, v689);
                                            }
                                            __swift_storeEnumTagSinglePayload(v668, 0, 1, (uint64_t)v670);
LABEL_362:
                                            uint64_t v750 = v20[10];
                                            uint64_t v751 = (uint64_t)v18 + v750;
                                            uint64_t v752 = (uint64_t)v19 + v750;
                                            long long v753 = (int *)type metadata accessor for Trip(0);
                                            int v754 = __swift_getEnumTagSinglePayload(v751, 1, (uint64_t)v753);
                                            int v755 = __swift_getEnumTagSinglePayload(v752, 1, (uint64_t)v753);
                                            if (v754)
                                            {
                                              if (!v755)
                                              {
                                                *(void *)uint64_t v751 = *(void *)v752;
                                                *(void *)(v751 + 8) = *(void *)(v752 + 8);
                                                *(void *)(v751 + 16) = *(void *)(v752 + 16);
                                                *(void *)(v751 + 24) = *(void *)(v752 + 24);
                                                *(void *)(v751 + 32) = *(void *)(v752 + 32);
                                                *(void *)(v751 + 40) = *(void *)(v752 + 40);
                                                *(void *)(v751 + 48) = *(void *)(v752 + 48);
                                                *(void *)(v751 + 56) = *(void *)(v752 + 56);
                                                *(void *)(v751 + 64) = *(void *)(v752 + 64);
                                                *(void *)(v751 + 72) = *(void *)(v752 + 72);
                                                *(void *)(v751 + 80) = *(void *)(v752 + 80);
                                                *(void *)(v751 + 88) = *(void *)(v752 + 88);
                                                *(void *)(v751 + 96) = *(void *)(v752 + 96);
                                                *(void *)(v751 + 104) = *(void *)(v752 + 104);
                                                *(void *)(v751 + 112) = *(void *)(v752 + 112);
                                                *(void *)(v751 + 120) = *(void *)(v752 + 120);
                                                *(unsigned char *)(v751 + 128) = *(unsigned char *)(v752 + 128);
                                                *(unsigned char *)(v751 + 129) = *(unsigned char *)(v752 + 129);
                                                *(unsigned char *)(v751 + 130) = *(unsigned char *)(v752 + 130);
                                                *(void *)(v751 + 136) = *(void *)(v752 + 136);
                                                *(void *)(v751 + 144) = *(void *)(v752 + 144);
                                                *(void *)(v751 + 152) = *(void *)(v752 + 152);
                                                *(void *)(v751 + 160) = *(void *)(v752 + 160);
                                                *(void *)(v751 + 168) = *(void *)(v752 + 168);
                                                *(void *)(v751 + 176) = *(void *)(v752 + 176);
                                                *(void *)(v751 + 184) = *(void *)(v752 + 184);
                                                *(void *)(v751 + 192) = *(void *)(v752 + 192);
                                                *(void *)(v751 + 200) = *(void *)(v752 + 200);
                                                *(void *)(v751 + 208) = *(void *)(v752 + 208);
                                                *(void *)(v751 + 216) = *(void *)(v752 + 216);
                                                uint64_t v756 = v753[22];
                                                __dsti = (void *)(v751 + v756);
                                                uint64_t v1191 = (const void *)(v752 + v756);
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRetain();
                                                if (__swift_getEnumTagSinglePayload((uint64_t)v1191, 1, v1235))
                                                {
                                                  uint64_t v757 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                  memcpy(__dsti, v1191, *(void *)(*(void *)(v757 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8) + 16))(__dsti, v1191, v1235);
                                                  __swift_storeEnumTagSinglePayload((uint64_t)__dsti, 0, 1, v1235);
                                                }
                                                uint64_t v766 = v753[23];
                                                uint64_t v767 = (void *)(v751 + v766);
                                                uint64_t v768 = (const void *)(v752 + v766);
                                                if (__swift_getEnumTagSinglePayload(v752 + v766, 1, v1235))
                                                {
                                                  uint64_t v769 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                  memcpy(v767, v768, *(void *)(*(void *)(v769 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8) + 16))(v767, v768, v1235);
                                                  __swift_storeEnumTagSinglePayload((uint64_t)v767, 0, 1, v1235);
                                                }
                                                uint64_t v770 = v753[24];
                                                uint64_t v771 = v751 + v770;
                                                uint64_t v772 = (uint64_t *)(v752 + v770);
                                                uint64_t v773 = *v772;
                                                *(unsigned char *)(v771 + 8) = *((unsigned char *)v772 + 8);
                                                *(void *)uint64_t v771 = v773;
                                                uint64_t v774 = v753[25];
                                                uint64_t v775 = (void *)(v751 + v774);
                                                uint64_t v776 = (const void *)(v752 + v774);
                                                uint64_t v777 = type metadata accessor for URL();
                                                if (__swift_getEnumTagSinglePayload((uint64_t)v776, 1, v777))
                                                {
                                                  uint64_t v778 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                  memcpy(v775, v776, *(void *)(*(void *)(v778 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v777 - 8) + 16))(v775, v776, v777);
                                                  __swift_storeEnumTagSinglePayload((uint64_t)v775, 0, 1, v777);
                                                }
                                                uint64_t v779 = v751;
                                                uint64_t v780 = (uint64_t)v753;
                                                goto LABEL_381;
                                              }
                                              goto LABEL_368;
                                            }
                                            if (v755)
                                            {
                                              outlined destroy of EmailDocument(v751, (void (*)(void))type metadata accessor for Trip);
LABEL_368:
                                              size_t v758 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?)
                                                                           - 8)
                                                               + 64);
                                              uint64_t v759 = (void *)v751;
                                              uint64_t v760 = (const void *)v752;
                                              goto LABEL_369;
                                            }
                                            *(void *)uint64_t v751 = *(void *)v752;
                                            *(void *)(v751 + 8) = *(void *)(v752 + 8);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 16) = *(void *)(v752 + 16);
                                            *(void *)(v751 + 24) = *(void *)(v752 + 24);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 32) = *(void *)(v752 + 32);
                                            *(void *)(v751 + 40) = *(void *)(v752 + 40);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 48) = *(void *)(v752 + 48);
                                            *(void *)(v751 + 56) = *(void *)(v752 + 56);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 64) = *(void *)(v752 + 64);
                                            *(void *)(v751 + 72) = *(void *)(v752 + 72);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 80) = *(void *)(v752 + 80);
                                            *(void *)(v751 + 88) = *(void *)(v752 + 88);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 96) = *(void *)(v752 + 96);
                                            *(void *)(v751 + 104) = *(void *)(v752 + 104);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 112) = *(void *)(v752 + 112);
                                            *(void *)(v751 + 120) = *(void *)(v752 + 120);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(unsigned char *)(v751 + 128) = *(unsigned char *)(v752 + 128);
                                            *(unsigned char *)(v751 + 129) = *(unsigned char *)(v752 + 129);
                                            *(unsigned char *)(v751 + 130) = *(unsigned char *)(v752 + 130);
                                            *(void *)(v751 + 136) = *(void *)(v752 + 136);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 144) = *(void *)(v752 + 144);
                                            *(void *)(v751 + 152) = *(void *)(v752 + 152);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 160) = *(void *)(v752 + 160);
                                            *(void *)(v751 + 168) = *(void *)(v752 + 168);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 176) = *(void *)(v752 + 176);
                                            *(void *)(v751 + 184) = *(void *)(v752 + 184);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 192) = *(void *)(v752 + 192);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 200) = *(void *)(v752 + 200);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v751 + 208) = *(void *)(v752 + 208);
                                            *(void *)(v751 + 216) = *(void *)(v752 + 216);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            uint64_t v761 = v753[22];
                                            uint64_t v762 = (void *)(v751 + v761);
                                            uint64_t v763 = (const void *)(v752 + v761);
                                            int v764 = __swift_getEnumTagSinglePayload(v751 + v761, 1, v9);
                                            int v765 = __swift_getEnumTagSinglePayload((uint64_t)v763, 1, v9);
                                            if (v764)
                                            {
                                              if (!v765)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v762, v763, v9);
                                                __swift_storeEnumTagSinglePayload((uint64_t)v762, 0, 1, v9);
                                                goto LABEL_403;
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v894 = *(void *)(v9 - 8);
                                              if (!v765)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(v894 + 24))(v762, v763, v9);
LABEL_403:
                                                uint64_t v896 = v753[23];
                                                int v897 = (void *)(v751 + v896);
                                                uint64_t v898 = (const void *)(v752 + v896);
                                                int v899 = __swift_getEnumTagSinglePayload(v751 + v896, 1, v9);
                                                int v900 = __swift_getEnumTagSinglePayload((uint64_t)v898, 1, v9);
                                                if (v899)
                                                {
                                                  if (!v900)
                                                  {
                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v897, v898, v9);
                                                    __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, v9);
LABEL_415:
                                                    uint64_t v910 = v753[24];
                                                    uint64_t v911 = v751 + v910;
                                                    uint64_t v912 = (uint64_t *)(v752 + v910);
                                                    uint64_t v913 = *v912;
                                                    *(unsigned char *)(v911 + 8) = *((unsigned char *)v912 + 8);
                                                    *(void *)uint64_t v911 = v913;
                                                    uint64_t v914 = v753[25];
                                                    uint64_t v915 = v751 + v914;
                                                    uint64_t v916 = v752 + v914;
                                                    uint64_t v917 = type metadata accessor for URL();
                                                    int v918 = __swift_getEnumTagSinglePayload(v915, 1, v917);
                                                    int v919 = __swift_getEnumTagSinglePayload(v916, 1, v917);
                                                    if (v918)
                                                    {
                                                      if (!v919)
                                                      {
                                                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v917 - 8) + 16))(v915, v916, v917);
                                                        uint64_t v779 = v915;
                                                        uint64_t v780 = v917;
LABEL_381:
                                                        __swift_storeEnumTagSinglePayload(v779, 0, 1, v780);
                                                        goto LABEL_382;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      uint64_t v988 = *(void *)(v917 - 8);
                                                      if (!v919)
                                                      {
                                                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v988 + 24))(v915, v916, v917);
LABEL_382:
                                                        uint64_t v781 = v20[11];
                                                        uint64_t v782 = (uint64_t)v18 + v781;
                                                        uint64_t v783 = (uint64_t)v19 + v781;
                                                        uint64_t v784 = (int *)type metadata accessor for FlightReservation(0);
                                                        int v785 = __swift_getEnumTagSinglePayload(v782, 1, (uint64_t)v784);
                                                        int v786 = __swift_getEnumTagSinglePayload(v783, 1, (uint64_t)v784);
                                                        if (v785)
                                                        {
                                                          if (!v786)
                                                          {
                                                            *(void *)uint64_t v782 = *(void *)v783;
                                                            *(void *)(v782 + 8) = *(void *)(v783 + 8);
                                                            *(void *)(v782 + 16) = *(void *)(v783 + 16);
                                                            *(void *)(v782 + 24) = *(void *)(v783 + 24);
                                                            *(void *)(v782 + 32) = *(void *)(v783 + 32);
                                                            *(void *)(v782 + 40) = *(void *)(v783 + 40);
                                                            *(void *)(v782 + 48) = *(void *)(v783 + 48);
                                                            *(void *)(v782 + 56) = *(void *)(v783 + 56);
                                                            *(void *)(v782 + 64) = *(void *)(v783 + 64);
                                                            *(void *)(v782 + 72) = *(void *)(v783 + 72);
                                                            *(void *)(v782 + 80) = *(void *)(v783 + 80);
                                                            *(void *)(v782 + 88) = *(void *)(v783 + 88);
                                                            *(unsigned char *)(v782 + 96) = *(unsigned char *)(v783 + 96);
                                                            *(void *)(v782 + 104) = *(void *)(v783 + 104);
                                                            *(void *)(v782 + 112) = *(void *)(v783 + 112);
                                                            uint64_t v787 = v784[13];
                                                            uint64_t v1220 = (void *)(v782 + v787);
                                                            int v1197 = (const void *)(v783 + v787);
                                                            uint64_t v788 = type metadata accessor for URL();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            if (__swift_getEnumTagSinglePayload((uint64_t)v1197, 1, v788))
                                                            {
                                                              uint64_t v789 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                              memcpy(v1220, v1197, *(void *)(*(void *)(v789 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v788 - 8) + 16))(v1220, v1197, v788);
                                                              __swift_storeEnumTagSinglePayload((uint64_t)v1220, 0, 1, v788);
                                                            }
                                                            uint64_t v797 = v784[14];
                                                            uint64_t v798 = (void *)(v782 + v797);
                                                            uint64_t v799 = (const void *)(v783 + v797);
                                                            if (__swift_getEnumTagSinglePayload(v783 + v797, 1, v788))
                                                            {
                                                              uint64_t v800 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                              memcpy(v798, v799, *(void *)(*(void *)(v800 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v788 - 8) + 16))(v798, v799, v788);
                                                              __swift_storeEnumTagSinglePayload((uint64_t)v798, 0, 1, v788);
                                                            }
                                                            uint64_t v801 = v784[15];
                                                            int v802 = (void *)(v782 + v801);
                                                            int v803 = (void *)(v783 + v801);
                                                            *int v802 = *v803;
                                                            v802[1] = v803[1];
                                                            uint64_t v804 = v784[16];
                                                            uint64_t v805 = (void *)(v782 + v804);
                                                            uint64_t v806 = (void *)(v783 + v804);
                                                            void *v805 = *v806;
                                                            v805[1] = v806[1];
                                                            uint64_t v807 = v784[17];
                                                            uint64_t v808 = (void *)(v782 + v807);
                                                            v809 = (void *)(v783 + v807);
                                                            void *v808 = *v809;
                                                            v808[1] = v809[1];
                                                            uint64_t v810 = v784[18];
                                                            uint64_t v1221 = v782 + v810;
                                                            uint64_t v811 = v783 + v810;
                                                            uint64_t v812 = type metadata accessor for DateComponents();
                                                            long long v813 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v812 - 8) + 16);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            v813(v1221, v811, v812);
                                                            v813(v782 + v784[19], v783 + v784[19], v812);
                                                            uint64_t v814 = v784[20];
                                                            long long v815 = (void *)(v782 + v814);
                                                            long long v816 = (void *)(v783 + v814);
                                                            void *v815 = *v816;
                                                            v815[1] = v816[1];
                                                            uint64_t v817 = v784[21];
                                                            uint64_t v818 = (void *)(v782 + v817);
                                                            uint64_t v819 = (void *)(v783 + v817);
                                                            void *v818 = *v819;
                                                            v818[1] = v819[1];
                                                            uint64_t v820 = v784[22];
                                                            uint64_t v821 = (void *)(v782 + v820);
                                                            uint64_t v822 = (void *)(v783 + v820);
                                                            void *v821 = *v822;
                                                            v821[1] = v822[1];
                                                            uint64_t v823 = v784[23];
                                                            uint64_t v824 = (void *)(v782 + v823);
                                                            uint64_t v825 = (void *)(v783 + v823);
                                                            void *v824 = *v825;
                                                            v824[1] = v825[1];
                                                            uint64_t v826 = v784[24];
                                                            uint64_t v827 = (void *)(v782 + v826);
                                                            uint64_t v828 = (void *)(v783 + v826);
                                                            void *v827 = *v828;
                                                            v827[1] = v828[1];
                                                            uint64_t v829 = v784[25];
                                                            uint64_t v830 = (void *)(v782 + v829);
                                                            uint64_t v831 = (void *)(v783 + v829);
                                                            void *v830 = *v831;
                                                            v830[1] = v831[1];
                                                            uint64_t v832 = v784[26];
                                                            uint64_t v833 = (void *)(v782 + v832);
                                                            uint64_t v834 = (void *)(v783 + v832);
                                                            void *v833 = *v834;
                                                            v833[1] = v834[1];
                                                            uint64_t v835 = v784[27];
                                                            uint64_t v836 = (void *)(v782 + v835);
                                                            uint64_t v837 = (void *)(v783 + v835);
                                                            void *v836 = *v837;
                                                            v836[1] = v837[1];
                                                            uint64_t v838 = v784[28];
                                                            int v839 = (void *)(v782 + v838);
                                                            uint64_t v840 = (void *)(v783 + v838);
                                                            void *v839 = *v840;
                                                            v839[1] = v840[1];
                                                            uint64_t v841 = v784[29];
                                                            uint64_t v842 = (void *)(v782 + v841);
                                                            uint64_t v843 = (void *)(v783 + v841);
                                                            void *v842 = *v843;
                                                            v842[1] = v843[1];
                                                            uint64_t v844 = v784[30];
                                                            uint64_t v845 = (void *)(v782 + v844);
                                                            uint64_t v846 = (void *)(v783 + v844);
                                                            void *v845 = *v846;
                                                            v845[1] = v846[1];
                                                            uint64_t v847 = v784[31];
                                                            uint64_t v848 = (void *)(v782 + v847);
                                                            uint64_t v849 = (void *)(v783 + v847);
                                                            void *v848 = *v849;
                                                            v848[1] = v849[1];
                                                            uint64_t v850 = v784[32];
                                                            uint64_t v851 = (void *)(v782 + v850);
                                                            uint64_t v852 = (void *)(v783 + v850);
                                                            void *v851 = *v852;
                                                            v851[1] = v852[1];
                                                            *(void *)(v782 + v784[33]) = *(void *)(v783 + v784[33]);
                                                            *(void *)(v782 + v784[34]) = *(void *)(v783 + v784[34]);
                                                            uint64_t v853 = v784[35];
                                                            uint64_t v854 = (void *)(v782 + v853);
                                                            int v855 = (void *)(v783 + v853);
                                                            *uint64_t v854 = *v855;
                                                            v854[1] = v855[1];
                                                            uint64_t v856 = v784[36];
                                                            int v857 = (void *)(v782 + v856);
                                                            uint64_t v858 = (void *)(v783 + v856);
                                                            void *v857 = *v858;
                                                            v857[1] = v858[1];
                                                            uint64_t v859 = v784[37];
                                                            uint64_t v860 = (void *)(v782 + v859);
                                                            uint64_t v861 = (void *)(v783 + v859);
                                                            void *v860 = *v861;
                                                            v860[1] = v861[1];
                                                            uint64_t v862 = v784[38];
                                                            __dstj = (void *)(v782 + v862);
                                                            uint64_t v863 = (const void *)(v783 + v862);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            if (__swift_getEnumTagSinglePayload((uint64_t)v863, 1, v1235))
                                                            {
                                                              uint64_t v864 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                              memcpy(__dstj, v863, *(void *)(*(void *)(v864 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8) + 16))(__dstj, v863, v1235);
                                                              __swift_storeEnumTagSinglePayload((uint64_t)__dstj, 0, 1, v1235);
                                                            }
                                                            uint64_t v19 = v1225;
                                                            uint64_t v865 = v784[39];
                                                            int v866 = (void *)(v782 + v865);
                                                            int v867 = (void *)(v783 + v865);
                                                            void *v866 = *v867;
                                                            v866[1] = v867[1];
                                                            uint64_t v868 = v784[40];
                                                            uint64_t v869 = (void *)(v782 + v868);
                                                            uint64_t v870 = (void *)(v783 + v868);
                                                            *uint64_t v869 = *v870;
                                                            v869[1] = v870[1];
                                                            uint64_t v871 = v784[41];
                                                            uint64_t v872 = v782 + v871;
                                                            uint64_t v873 = (uint64_t *)(v783 + v871);
                                                            uint64_t v874 = *v873;
                                                            *(unsigned char *)(v872 + 8) = *((unsigned char *)v873 + 8);
                                                            *(void *)uint64_t v872 = v874;
                                                            uint64_t v875 = v784[42];
                                                            long long v876 = (void *)(v782 + v875);
                                                            long long v877 = (void *)(v783 + v875);
                                                            void *v876 = *v877;
                                                            v876[1] = v877[1];
                                                            uint64_t v878 = v784[43];
                                                            uint64_t v879 = v782 + v878;
                                                            uint64_t v880 = (long long *)(v783 + v878);
                                                            long long v881 = *v880;
                                                            *(void *)(v879 + 13) = *(void *)((char *)v880 + 13);
                                                            *(_OWORD *)uint64_t v879 = v881;
                                                            uint64_t v882 = v784[44];
                                                            uint64_t v883 = (void *)(v782 + v882);
                                                            uint64_t v884 = (void *)(v783 + v882);
                                                            void *v883 = *v884;
                                                            v883[1] = v884[1];
                                                            uint64_t v885 = v784[45];
                                                            uint64_t v886 = (void *)(v782 + v885);
                                                            uint64_t v887 = (void *)(v783 + v885);
                                                            void *v886 = *v887;
                                                            v886[1] = v887[1];
                                                            uint64_t v888 = v784[46];
                                                            uint64_t v889 = (void *)(v782 + v888);
                                                            uint64_t v890 = (void *)(v783 + v888);
                                                            *uint64_t v889 = *v890;
                                                            v889[1] = v890[1];
                                                            uint64_t v891 = v784[47];
                                                            uint64_t v892 = (void *)(v782 + v891);
                                                            int v893 = (void *)(v783 + v891);
                                                            *uint64_t v892 = *v893;
                                                            v892[1] = v893[1];
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRetain();
                                                            __swift_storeEnumTagSinglePayload(v782, 0, 1, (uint64_t)v784);
                                                            uint64_t v18 = v1228;
                                                            uint64_t v20 = v1229;
LABEL_431:
                                                            uint64_t v1020 = v20[12];
                                                            uint64_t v1021 = (uint64_t)v18 + v1020;
                                                            uint64_t v1022 = (uint64_t)v19 + v1020;
                                                            uint64_t v1023 = (int *)type metadata accessor for HotelReservation(0);
                                                            int v1024 = __swift_getEnumTagSinglePayload(v1021, 1, (uint64_t)v1023);
                                                            int v1025 = __swift_getEnumTagSinglePayload(v1022, 1, (uint64_t)v1023);
                                                            if (v1024)
                                                            {
                                                              if (!v1025)
                                                              {
                                                                *(void *)uint64_t v1021 = *(void *)v1022;
                                                                *(void *)(v1021 + 8) = *(void *)(v1022 + 8);
                                                                *(void *)(v1021 + 16) = *(void *)(v1022 + 16);
                                                                *(void *)(v1021 + 24) = *(void *)(v1022 + 24);
                                                                *(void *)(v1021 + 32) = *(void *)(v1022 + 32);
                                                                *(void *)(v1021 + 40) = *(void *)(v1022 + 40);
                                                                *(void *)(v1021 + 48) = *(void *)(v1022 + 48);
                                                                *(void *)(v1021 + 56) = *(void *)(v1022 + 56);
                                                                *(void *)(v1021 + 64) = *(void *)(v1022 + 64);
                                                                *(void *)(v1021 + 72) = *(void *)(v1022 + 72);
                                                                *(void *)(v1021 + 80) = *(void *)(v1022 + 80);
                                                                *(void *)(v1021 + 88) = *(void *)(v1022 + 88);
                                                                *(unsigned char *)(v1021 + 96) = *(unsigned char *)(v1022 + 96);
                                                                *(void *)(v1021 + 104) = *(void *)(v1022 + 104);
                                                                *(void *)(v1021 + 112) = *(void *)(v1022 + 112);
                                                                *(void *)(v1021 + 120) = *(void *)(v1022 + 120);
                                                                *(void *)(v1021 + 128) = *(void *)(v1022 + 128);
                                                                uint64_t v1026 = v1023[14];
                                                                uint64_t v1222 = (void *)(v1021 + v1026);
                                                                v1194 = (const void *)(v1022 + v1026);
                                                                uint64_t v1027 = type metadata accessor for DateComponents();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                if (__swift_getEnumTagSinglePayload((uint64_t)v1194, 1, v1027))
                                                                {
                                                                  uint64_t v1028 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                  memcpy(v1222, v1194, *(void *)(*(void *)(v1028 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1027 - 8) + 16))(v1222, v1194, v1027);
                                                                  __swift_storeEnumTagSinglePayload((uint64_t)v1222, 0, 1, v1027);
                                                                }
                                                                uint64_t v1036 = v1023[15];
                                                                uint64_t v1037 = (void *)(v1021 + v1036);
                                                                uint64_t v1038 = (const void *)(v1022 + v1036);
                                                                if (__swift_getEnumTagSinglePayload(v1022 + v1036, 1, v1027))
                                                                {
                                                                  uint64_t v1039 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                  memcpy(v1037, v1038, *(void *)(*(void *)(v1039 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1027 - 8) + 16))(v1037, v1038, v1027);
                                                                  __swift_storeEnumTagSinglePayload((uint64_t)v1037, 0, 1, v1027);
                                                                }
                                                                uint64_t v1040 = v1023[16];
                                                                uint64_t v1041 = (void *)(v1021 + v1040);
                                                                uint64_t v1042 = (void *)(v1022 + v1040);
                                                                *uint64_t v1041 = *v1042;
                                                                v1041[1] = v1042[1];
                                                                uint64_t v1043 = v1023[17];
                                                                uint64_t v1044 = (void *)(v1021 + v1043);
                                                                uint64_t v1045 = (void *)(v1022 + v1043);
                                                                *uint64_t v1044 = *v1045;
                                                                v1044[1] = v1045[1];
                                                                uint64_t v1046 = v1023[18];
                                                                uint64_t v1047 = (void *)(v1021 + v1046);
                                                                uint64_t v1048 = (void *)(v1022 + v1046);
                                                                void *v1047 = *v1048;
                                                                v1047[1] = v1048[1];
                                                                uint64_t v1049 = v1023[19];
                                                                uint64_t v1050 = (void *)(v1021 + v1049);
                                                                uint64_t v1051 = (void *)(v1022 + v1049);
                                                                void *v1050 = *v1051;
                                                                v1050[1] = v1051[1];
                                                                uint64_t v1052 = v1023[20];
                                                                uint64_t v1053 = (void *)(v1021 + v1052);
                                                                uint64_t v1054 = (void *)(v1022 + v1052);
                                                                void *v1053 = *v1054;
                                                                v1053[1] = v1054[1];
                                                                *(void *)(v1021 + v1023[21]) = *(void *)(v1022 + v1023[21]);
                                                                *(void *)(v1021 + v1023[22]) = *(void *)(v1022 + v1023[22]);
                                                                uint64_t v1055 = v1023[23];
                                                                uint64_t v1056 = v1021 + v1055;
                                                                v1057 = (uint64_t *)(v1022 + v1055);
                                                                uint64_t v1058 = *v1057;
                                                                *(unsigned char *)(v1056 + 8) = *((unsigned char *)v1057 + 8);
                                                                *(void *)uint64_t v1056 = v1058;
                                                                uint64_t v1059 = v1023[24];
                                                                uint64_t v1060 = v1021 + v1059;
                                                                uint64_t v1061 = (uint64_t *)(v1022 + v1059);
                                                                uint64_t v1062 = *v1061;
                                                                *(unsigned char *)(v1060 + 8) = *((unsigned char *)v1061 + 8);
                                                                *(void *)uint64_t v1060 = v1062;
                                                                uint64_t v1063 = v1023[25];
                                                                uint64_t v1064 = (void *)(v1021 + v1063);
                                                                uint64_t v1065 = (void *)(v1022 + v1063);
                                                                *uint64_t v1064 = *v1065;
                                                                v1064[1] = v1065[1];
                                                                uint64_t v1066 = v1023[26];
                                                                uint64_t v1067 = (void *)(v1021 + v1066);
                                                                uint64_t v1068 = (void *)(v1022 + v1066);
                                                                *uint64_t v1067 = *v1068;
                                                                v1067[1] = v1068[1];
                                                                uint64_t v1069 = v1023[27];
                                                                uint64_t v1070 = (void *)(v1021 + v1069);
                                                                uint64_t v1071 = (void *)(v1022 + v1069);
                                                                *uint64_t v1070 = *v1071;
                                                                v1070[1] = v1071[1];
                                                                uint64_t v1072 = v1023[28];
                                                                uint64_t v1073 = (void *)(v1021 + v1072);
                                                                int v1074 = (void *)(v1022 + v1072);
                                                                void *v1073 = *v1074;
                                                                v1073[1] = v1074[1];
                                                                uint64_t v1075 = v1023[29];
                                                                uint64_t v1076 = v1021 + v1075;
                                                                long long v1077 = (uint64_t *)(v1022 + v1075);
                                                                uint64_t v1078 = *v1077;
                                                                *(unsigned char *)(v1076 + 8) = *((unsigned char *)v1077 + 8);
                                                                *(void *)uint64_t v1076 = v1078;
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRetain();
                                                                __swift_storeEnumTagSinglePayload(v1021, 0, 1, (uint64_t)v1023);
                                                                uint64_t v4 = v1233;
                                                                uint64_t v5 = v1234;
                                                                uint64_t v20 = v1229;
                                                                a3 = v1232;
                                                                uint64_t v19 = v1225;
                                                                uint64_t v18 = v1228;
LABEL_447:
                                                                uint64_t v1079 = v20[13];
                                                                uint64_t v18 = (void *)((char *)v18 + v1079);
                                                                uint64_t v19 = (void *)((char *)v19 + v1079);
                                                                uint64_t v1080 = (int *)type metadata accessor for RestaurantReservation(0);
                                                                int v1081 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, (uint64_t)v1080);
                                                                int v1082 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, (uint64_t)v1080);
                                                                if (v1081)
                                                                {
                                                                  if (!v1082)
                                                                  {
                                                                    *uint64_t v18 = *v19;
                                                                    v18[1] = v19[1];
                                                                    v18[2] = v19[2];
                                                                    v18[3] = v19[3];
                                                                    v18[4] = v19[4];
                                                                    v18[5] = v19[5];
                                                                    v18[6] = v19[6];
                                                                    v18[7] = v19[7];
                                                                    v18[8] = v19[8];
                                                                    v18[9] = v19[9];
                                                                    v18[10] = v19[10];
                                                                    v18[11] = v19[11];
                                                                    *((unsigned char *)v18 + 96) = *((unsigned char *)v19 + 96);
                                                                    v18[13] = v19[13];
                                                                    v18[14] = v19[14];
                                                                    v18[15] = v19[15];
                                                                    v18[16] = v19[16];
                                                                    uint64_t v1083 = v1080[14];
                                                                    uint64_t v1231 = (char *)v18 + v1083;
                                                                    uint64_t v1223 = (char *)v19 + v1083;
                                                                    __dstk = (void *)type metadata accessor for DateComponents();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1223, 1, (uint64_t)__dstk))
                                                                    {
                                                                      uint64_t v1084 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                      memcpy(v1231, v1223, *(void *)(*(void *)(v1084 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, void *))(*(__dstk - 1) + 16))(v1231, v1223, __dstk);
                                                                      __swift_storeEnumTagSinglePayload((uint64_t)v1231, 0, 1, (uint64_t)__dstk);
                                                                    }
                                                                    uint64_t v1091 = v1080[15];
                                                                    uint64_t v1092 = (void *)((char *)v18 + v1091);
                                                                    uint64_t v1093 = (void *)((char *)v19 + v1091);
                                                                    void *v1092 = *v1093;
                                                                    v1092[1] = v1093[1];
                                                                    uint64_t v1094 = v1080[16];
                                                                    int v1095 = (void *)((char *)v18 + v1094);
                                                                    size_t v1096 = (void *)((char *)v19 + v1094);
                                                                    void *v1095 = *v1096;
                                                                    v1095[1] = v1096[1];
                                                                    uint64_t v1097 = v1080[17];
                                                                    uint64_t v1098 = (void *)((char *)v18 + v1097);
                                                                    int v1099 = (void *)((char *)v19 + v1097);
                                                                    void *v1098 = *v1099;
                                                                    v1098[1] = v1099[1];
                                                                    uint64_t v1100 = v1080[18];
                                                                    uint64_t v1101 = (void *)((char *)v18 + v1100);
                                                                    uint64_t v1102 = (void *)((char *)v19 + v1100);
                                                                    void *v1101 = *v1102;
                                                                    v1101[1] = v1102[1];
                                                                    uint64_t v1103 = v1080[19];
                                                                    uint64_t v1104 = (void *)((char *)v18 + v1103);
                                                                    uint64_t v1105 = (void *)((char *)v19 + v1103);
                                                                    *uint64_t v1104 = *v1105;
                                                                    v1104[1] = v1105[1];
                                                                    *(void *)((char *)v18 + v1080[20]) = *(void *)((char *)v19 + v1080[20]);
                                                                    uint64_t v1106 = v1080[21];
                                                                    uint64_t v1107 = (void *)((char *)v18 + v1106);
                                                                    uint64_t v1108 = (void *)((char *)v19 + v1106);
                                                                    *uint64_t v1107 = *v1108;
                                                                    v1107[1] = v1108[1];
                                                                    uint64_t v1109 = v1080[22];
                                                                    uint64_t v1110 = (void *)((char *)v18 + v1109);
                                                                    uint64_t v1111 = (void *)((char *)v19 + v1109);
                                                                    *uint64_t v1110 = *v1111;
                                                                    v1110[1] = v1111[1];
                                                                    uint64_t v1112 = v1080[23];
                                                                    uint64_t v1113 = (void *)((char *)v18 + v1112);
                                                                    int v1114 = (void *)((char *)v19 + v1112);
                                                                    void *v1113 = *v1114;
                                                                    v1113[1] = v1114[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRetain();
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, (uint64_t)v1080);
                                                                    uint64_t v4 = v1233;
                                                                    uint64_t v5 = v1234;
                                                                    a3 = v1232;
                                                                    goto LABEL_113;
                                                                  }
                                                                  goto LABEL_453;
                                                                }
                                                                if (v1082)
                                                                {
                                                                  outlined destroy of EmailDocument((uint64_t)v18, (void (*)(void))type metadata accessor for RestaurantReservation);
LABEL_453:
                                                                  uint64_t v28 = (uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?;
                                                                  goto LABEL_14;
                                                                }
                                                                *uint64_t v18 = *v19;
                                                                v18[1] = v19[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[2] = v19[2];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[3] = v19[3];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[4] = v19[4];
                                                                v18[5] = v19[5];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[6] = v19[6];
                                                                v18[7] = v19[7];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[8] = v19[8];
                                                                v18[9] = v19[9];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[10] = v19[10];
                                                                v18[11] = v19[11];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *((unsigned char *)v18 + 96) = *((unsigned char *)v19 + 96);
                                                                v18[13] = v19[13];
                                                                v18[14] = v19[14];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                v18[15] = v19[15];
                                                                v18[16] = v19[16];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v1085 = v1080[14];
                                                                uint64_t v1086 = (char *)v18 + v1085;
                                                                uint64_t v1087 = (char *)v19 + v1085;
                                                                uint64_t v1088 = type metadata accessor for DateComponents();
                                                                int v1089 = __swift_getEnumTagSinglePayload((uint64_t)v1086, 1, v1088);
                                                                int v1090 = __swift_getEnumTagSinglePayload((uint64_t)v1087, 1, v1088);
                                                                if (v1089)
                                                                {
                                                                  if (!v1090)
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1088 - 8) + 16))(v1086, v1087, v1088);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v1086, 0, 1, v1088);
LABEL_468:
                                                                    uint64_t v1124 = v1080[15];
                                                                    uint64_t v1125 = (void *)((char *)v18 + v1124);
                                                                    uint64_t v1126 = (void *)((char *)v19 + v1124);
                                                                    void *v1125 = *v1126;
                                                                    v1125[1] = v1126[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1127 = v1080[16];
                                                                    uint64_t v1128 = (void *)((char *)v18 + v1127);
                                                                    uint64_t v1129 = (void *)((char *)v19 + v1127);
                                                                    void *v1128 = *v1129;
                                                                    v1128[1] = v1129[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1130 = v1080[17];
                                                                    uint64_t v1131 = (void *)((char *)v18 + v1130);
                                                                    uint64_t v1132 = (void *)((char *)v19 + v1130);
                                                                    void *v1131 = *v1132;
                                                                    v1131[1] = v1132[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1133 = v1080[18];
                                                                    uint64_t v1134 = (void *)((char *)v18 + v1133);
                                                                    uint64_t v1135 = (void *)((char *)v19 + v1133);
                                                                    void *v1134 = *v1135;
                                                                    v1134[1] = v1135[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1136 = v1080[19];
                                                                    uint64_t v1137 = (void *)((char *)v18 + v1136);
                                                                    uint64_t v1138 = (void *)((char *)v19 + v1136);
                                                                    *uint64_t v1137 = *v1138;
                                                                    v1137[1] = v1138[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)((char *)v18 + v1080[20]) = *(void *)((char *)v19 + v1080[20]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1139 = v1080[21];
                                                                    uint64_t v1140 = (void *)((char *)v18 + v1139);
                                                                    uint64_t v1141 = (void *)((char *)v19 + v1139);
                                                                    *uint64_t v1140 = *v1141;
                                                                    v1140[1] = v1141[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1142 = v1080[22];
                                                                    uint64_t v1143 = (void *)((char *)v18 + v1142);
                                                                    uint64_t v1144 = (void *)((char *)v19 + v1142);
                                                                    *uint64_t v1143 = *v1144;
                                                                    v1143[1] = v1144[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1145 = v1080[23];
                                                                    uint64_t v1146 = (void *)((char *)v18 + v1145);
                                                                    uint64_t v1147 = (void *)((char *)v19 + v1145);
                                                                    *uint64_t v1146 = *v1147;
                                                                    v1146[1] = v1147[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    goto LABEL_113;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v1122 = *(void *)(v1088 - 8);
                                                                  if (!v1090)
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1122 + 24))(v1086, v1087, v1088);
                                                                    goto LABEL_468;
                                                                  }
                                                                  (*(void (**)(char *, uint64_t))(v1122 + 8))(v1086, v1088);
                                                                }
                                                                uint64_t v1123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                memcpy(v1086, v1087, *(void *)(*(void *)(v1123 - 8) + 64));
                                                                goto LABEL_468;
                                                              }
                                                              goto LABEL_437;
                                                            }
                                                            if (v1025)
                                                            {
                                                              outlined destroy of EmailDocument(v1021, (void (*)(void))type metadata accessor for HotelReservation);
LABEL_437:
                                                              uint64_t v1029 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
                                                              memcpy((void *)v1021, (const void *)v1022, *(void *)(*(void *)(v1029 - 8) + 64));
LABEL_438:
                                                              uint64_t v4 = v1233;
                                                              uint64_t v5 = v1234;
                                                              a3 = v1232;
                                                              goto LABEL_447;
                                                            }
                                                            *(void *)uint64_t v1021 = *(void *)v1022;
                                                            *(void *)(v1021 + 8) = *(void *)(v1022 + 8);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 16) = *(void *)(v1022 + 16);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 24) = *(void *)(v1022 + 24);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 32) = *(void *)(v1022 + 32);
                                                            *(void *)(v1021 + 40) = *(void *)(v1022 + 40);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 48) = *(void *)(v1022 + 48);
                                                            *(void *)(v1021 + 56) = *(void *)(v1022 + 56);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 64) = *(void *)(v1022 + 64);
                                                            *(void *)(v1021 + 72) = *(void *)(v1022 + 72);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 80) = *(void *)(v1022 + 80);
                                                            *(void *)(v1021 + 88) = *(void *)(v1022 + 88);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(unsigned char *)(v1021 + 96) = *(unsigned char *)(v1022 + 96);
                                                            *(void *)(v1021 + 104) = *(void *)(v1022 + 104);
                                                            *(void *)(v1021 + 112) = *(void *)(v1022 + 112);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            *(void *)(v1021 + 120) = *(void *)(v1022 + 120);
                                                            *(void *)(v1021 + 128) = *(void *)(v1022 + 128);
                                                            swift_bridgeObjectRetain();
                                                            swift_bridgeObjectRelease();
                                                            uint64_t v1030 = v1023[14];
                                                            uint64_t v1031 = (void *)(v1021 + v1030);
                                                            uint64_t v1032 = (const void *)(v1022 + v1030);
                                                            uint64_t v1033 = type metadata accessor for DateComponents();
                                                            int v1034 = __swift_getEnumTagSinglePayload((uint64_t)v1031, 1, v1033);
                                                            int v1035 = __swift_getEnumTagSinglePayload((uint64_t)v1032, 1, v1033);
                                                            if (v1034)
                                                            {
                                                              if (!v1035)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1033 - 8) + 16))(v1031, v1032, v1033);
                                                                __swift_storeEnumTagSinglePayload((uint64_t)v1031, 0, 1, v1033);
                                                                goto LABEL_462;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t v1115 = *(void *)(v1033 - 8);
                                                              if (!v1035)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(v1115 + 24))(v1031, v1032, v1033);
LABEL_462:
                                                                uint64_t v1117 = v1023[15];
                                                                uint64_t v1118 = (void *)(v1021 + v1117);
                                                                uint64_t v1119 = (const void *)(v1022 + v1117);
                                                                int v1120 = __swift_getEnumTagSinglePayload(v1021 + v1117, 1, v1033);
                                                                int v1121 = __swift_getEnumTagSinglePayload((uint64_t)v1119, 1, v1033);
                                                                if (v1120)
                                                                {
                                                                  if (!v1121)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1033 - 8) + 16))(v1118, v1119, v1033);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v1118, 0, 1, v1033);
LABEL_472:
                                                                    uint64_t v20 = v1229;
                                                                    uint64_t v1150 = v1023[16];
                                                                    uint64_t v1151 = (void *)(v1021 + v1150);
                                                                    uint64_t v1152 = (void *)(v1022 + v1150);
                                                                    void *v1151 = *v1152;
                                                                    v1151[1] = v1152[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1153 = v1023[17];
                                                                    uint64_t v1154 = (void *)(v1021 + v1153);
                                                                    uint64_t v1155 = (void *)(v1022 + v1153);
                                                                    void *v1154 = *v1155;
                                                                    v1154[1] = v1155[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1156 = v1023[18];
                                                                    uint64_t v1157 = (void *)(v1021 + v1156);
                                                                    uint64_t v1158 = (void *)(v1022 + v1156);
                                                                    *uint64_t v1157 = *v1158;
                                                                    v1157[1] = v1158[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1159 = v1023[19];
                                                                    uint64_t v1160 = (void *)(v1021 + v1159);
                                                                    uint64_t v1161 = (void *)(v1022 + v1159);
                                                                    void *v1160 = *v1161;
                                                                    v1160[1] = v1161[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1162 = v1023[20];
                                                                    uint64_t v1163 = (void *)(v1021 + v1162);
                                                                    uint64_t v1164 = (void *)(v1022 + v1162);
                                                                    void *v1163 = *v1164;
                                                                    v1163[1] = v1164[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1021 + v1023[21]) = *(void *)(v1022 + v1023[21]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    *(void *)(v1021 + v1023[22]) = *(void *)(v1022 + v1023[22]);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1165 = v1023[23];
                                                                    uint64_t v1166 = v1021 + v1165;
                                                                    uint64_t v1167 = (uint64_t *)(v1022 + v1165);
                                                                    uint64_t v1168 = *v1167;
                                                                    *(unsigned char *)(v1166 + 8) = *((unsigned char *)v1167 + 8);
                                                                    *(void *)uint64_t v1166 = v1168;
                                                                    uint64_t v1169 = v1023[24];
                                                                    uint64_t v1170 = v1021 + v1169;
                                                                    uint64_t v1171 = v1022 + v1169;
                                                                    LOBYTE(v1168) = *(unsigned char *)(v1171 + 8);
                                                                    *(void *)uint64_t v1170 = *(void *)v1171;
                                                                    *(unsigned char *)(v1170 + 8) = v1168;
                                                                    uint64_t v1172 = v1023[25];
                                                                    uint64_t v1173 = (void *)(v1021 + v1172);
                                                                    uint64_t v1174 = (void *)(v1022 + v1172);
                                                                    void *v1173 = *v1174;
                                                                    v1173[1] = v1174[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1175 = v1023[26];
                                                                    int v1176 = (void *)(v1021 + v1175);
                                                                    long long v1177 = (void *)(v1022 + v1175);
                                                                    void *v1176 = *v1177;
                                                                    v1176[1] = v1177[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1178 = v1023[27];
                                                                    long long v1179 = (void *)(v1021 + v1178);
                                                                    uint64_t v1180 = (void *)(v1022 + v1178);
                                                                    *long long v1179 = *v1180;
                                                                    v1179[1] = v1180[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1181 = v1023[28];
                                                                    uint64_t v1182 = (void *)(v1021 + v1181);
                                                                    uint64_t v1183 = (void *)(v1022 + v1181);
                                                                    void *v1182 = *v1183;
                                                                    v1182[1] = v1183[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1184 = v1023[29];
                                                                    uint64_t v1185 = v1021 + v1184;
                                                                    uint64_t v1186 = (uint64_t *)(v1022 + v1184);
                                                                    uint64_t v1187 = *v1186;
                                                                    *(unsigned char *)(v1185 + 8) = *((unsigned char *)v1186 + 8);
                                                                    *(void *)uint64_t v1185 = v1187;
                                                                    goto LABEL_438;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v1148 = *(void *)(v1033 - 8);
                                                                  if (!v1121)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(v1148 + 24))(v1118, v1119, v1033);
                                                                    goto LABEL_472;
                                                                  }
                                                                  (*(void (**)(void *, uint64_t))(v1148 + 8))(v1118, v1033);
                                                                }
                                                                uint64_t v1149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                                memcpy(v1118, v1119, *(void *)(*(void *)(v1149 - 8) + 64));
                                                                goto LABEL_472;
                                                              }
                                                              (*(void (**)(void *, uint64_t))(v1115 + 8))(v1031, v1033);
                                                            }
                                                            uint64_t v1116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                                                            memcpy(v1031, v1032, *(void *)(*(void *)(v1116 - 8) + 64));
                                                            goto LABEL_462;
                                                          }
LABEL_388:
                                                          uint64_t v790 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
                                                          memcpy((void *)v782, (const void *)v783, *(void *)(*(void *)(v790 - 8) + 64));
                                                          goto LABEL_431;
                                                        }
                                                        if (v786)
                                                        {
                                                          outlined destroy of EmailDocument(v782, (void (*)(void))type metadata accessor for FlightReservation);
                                                          goto LABEL_388;
                                                        }
                                                        *(void *)uint64_t v782 = *(void *)v783;
                                                        *(void *)(v782 + 8) = *(void *)(v783 + 8);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v782 + 16) = *(void *)(v783 + 16);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v782 + 24) = *(void *)(v783 + 24);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v782 + 32) = *(void *)(v783 + 32);
                                                        *(void *)(v782 + 40) = *(void *)(v783 + 40);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v782 + 48) = *(void *)(v783 + 48);
                                                        *(void *)(v782 + 56) = *(void *)(v783 + 56);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v782 + 64) = *(void *)(v783 + 64);
                                                        *(void *)(v782 + 72) = *(void *)(v783 + 72);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(void *)(v782 + 80) = *(void *)(v783 + 80);
                                                        *(void *)(v782 + 88) = *(void *)(v783 + 88);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(unsigned char *)(v782 + 96) = *(unsigned char *)(v783 + 96);
                                                        *(void *)(v782 + 104) = *(void *)(v783 + 104);
                                                        *(void *)(v782 + 112) = *(void *)(v783 + 112);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        uint64_t v791 = v784[13];
                                                        uint64_t v792 = (void *)(v782 + v791);
                                                        uint64_t v793 = (const void *)(v783 + v791);
                                                        uint64_t v794 = type metadata accessor for URL();
                                                        int v795 = __swift_getEnumTagSinglePayload((uint64_t)v792, 1, v794);
                                                        int v796 = __swift_getEnumTagSinglePayload((uint64_t)v793, 1, v794);
                                                        if (v795)
                                                        {
                                                          if (!v796)
                                                          {
                                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v794 - 8) + 16))(v792, v793, v794);
                                                            __swift_storeEnumTagSinglePayload((uint64_t)v792, 0, 1, v794);
                                                            goto LABEL_409;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t v901 = *(void *)(v794 - 8);
                                                          if (!v796)
                                                          {
                                                            (*(void (**)(void *, const void *, uint64_t))(v901 + 24))(v792, v793, v794);
LABEL_409:
                                                            uint64_t v903 = v784[14];
                                                            uint64_t v904 = (void *)(v782 + v903);
                                                            uint64_t v905 = (const void *)(v783 + v903);
                                                            int v906 = __swift_getEnumTagSinglePayload(v782 + v903, 1, v794);
                                                            int v907 = __swift_getEnumTagSinglePayload((uint64_t)v905, 1, v794);
                                                            if (v906)
                                                            {
                                                              if (!v907)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v794 - 8) + 16))(v904, v905, v794);
                                                                __swift_storeEnumTagSinglePayload((uint64_t)v904, 0, 1, v794);
                                                                goto LABEL_421;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t v920 = *(void *)(v794 - 8);
                                                              if (!v907)
                                                              {
                                                                (*(void (**)(void *, const void *, uint64_t))(v920 + 24))(v904, v905, v794);
LABEL_421:
                                                                uint64_t v20 = v1229;
                                                                uint64_t v922 = v784[15];
                                                                uint64_t v923 = (void *)(v782 + v922);
                                                                uint64_t v924 = (void *)(v783 + v922);
                                                                *uint64_t v923 = *v924;
                                                                v923[1] = v924[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v925 = v784[16];
                                                                int v926 = (void *)(v782 + v925);
                                                                uint64_t v927 = (void *)(v783 + v925);
                                                                void *v926 = *v927;
                                                                v926[1] = v927[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v928 = v784[17];
                                                                uint64_t v929 = (void *)(v782 + v928);
                                                                uint64_t v930 = (void *)(v783 + v928);
                                                                void *v929 = *v930;
                                                                v929[1] = v930[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v931 = v784[18];
                                                                uint64_t v932 = v782 + v931;
                                                                uint64_t v933 = v783 + v931;
                                                                uint64_t v934 = type metadata accessor for DateComponents();
                                                                uint64_t v935 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v934 - 8) + 24);
                                                                v935(v932, v933, v934);
                                                                v935(v782 + v784[19], v783 + v784[19], v934);
                                                                uint64_t v936 = v784[20];
                                                                uint64_t v937 = (void *)(v782 + v936);
                                                                uint64_t v938 = (void *)(v783 + v936);
                                                                void *v937 = *v938;
                                                                v937[1] = v938[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v939 = v784[21];
                                                                uint64_t v940 = (void *)(v782 + v939);
                                                                uint64_t v941 = (void *)(v783 + v939);
                                                                void *v940 = *v941;
                                                                v940[1] = v941[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v942 = v784[22];
                                                                uint64_t v943 = (void *)(v782 + v942);
                                                                v944 = (void *)(v783 + v942);
                                                                void *v943 = *v944;
                                                                v943[1] = v944[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v945 = v784[23];
                                                                uint64_t v946 = (void *)(v782 + v945);
                                                                uint64_t v947 = (void *)(v783 + v945);
                                                                void *v946 = *v947;
                                                                v946[1] = v947[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v948 = v784[24];
                                                                uint64_t v949 = (void *)(v782 + v948);
                                                                v950 = (void *)(v783 + v948);
                                                                void *v949 = *v950;
                                                                v949[1] = v950[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v951 = v784[25];
                                                                uint64_t v952 = (void *)(v782 + v951);
                                                                uint64_t v953 = (void *)(v783 + v951);
                                                                void *v952 = *v953;
                                                                v952[1] = v953[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v954 = v784[26];
                                                                v955 = (void *)(v782 + v954);
                                                                uint64_t v956 = (void *)(v783 + v954);
                                                                void *v955 = *v956;
                                                                v955[1] = v956[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v957 = v784[27];
                                                                uint64_t v958 = (void *)(v782 + v957);
                                                                v959 = (void *)(v783 + v957);
                                                                void *v958 = *v959;
                                                                v958[1] = v959[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v960 = v784[28];
                                                                uint64_t v961 = (void *)(v782 + v960);
                                                                uint64_t v962 = (void *)(v783 + v960);
                                                                void *v961 = *v962;
                                                                v961[1] = v962[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v963 = v784[29];
                                                                v964 = (void *)(v782 + v963);
                                                                v965 = (void *)(v783 + v963);
                                                                void *v964 = *v965;
                                                                v964[1] = v965[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v966 = v784[30];
                                                                uint64_t v967 = (void *)(v782 + v966);
                                                                uint64_t v968 = (void *)(v783 + v966);
                                                                void *v967 = *v968;
                                                                v967[1] = v968[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v969 = v784[31];
                                                                v970 = (void *)(v782 + v969);
                                                                uint64_t v971 = (void *)(v783 + v969);
                                                                void *v970 = *v971;
                                                                v970[1] = v971[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v972 = v784[32];
                                                                uint64_t v973 = (void *)(v782 + v972);
                                                                v974 = (void *)(v783 + v972);
                                                                void *v973 = *v974;
                                                                v973[1] = v974[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v782 + v784[33]) = *(void *)(v783 + v784[33]);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                *(void *)(v782 + v784[34]) = *(void *)(v783 + v784[34]);
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v975 = v784[35];
                                                                uint64_t v976 = (void *)(v782 + v975);
                                                                uint64_t v977 = (void *)(v783 + v975);
                                                                *uint64_t v976 = *v977;
                                                                v976[1] = v977[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v978 = v784[36];
                                                                v979 = (void *)(v782 + v978);
                                                                v980 = (void *)(v783 + v978);
                                                                void *v979 = *v980;
                                                                v979[1] = v980[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v981 = v784[37];
                                                                uint64_t v982 = (void *)(v782 + v981);
                                                                uint64_t v983 = (void *)(v783 + v981);
                                                                void *v982 = *v983;
                                                                v982[1] = v983[1];
                                                                swift_bridgeObjectRetain();
                                                                swift_bridgeObjectRelease();
                                                                uint64_t v984 = v784[38];
                                                                uint64_t v985 = (void *)(v782 + v984);
                                                                uint64_t v986 = (const void *)(v783 + v984);
                                                                LODWORD(v934) = __swift_getEnumTagSinglePayload(v782 + v984, 1, v1235);
                                                                int v987 = __swift_getEnumTagSinglePayload((uint64_t)v986, 1, v1235);
                                                                if (v934)
                                                                {
                                                                  if (!v987)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1235 - 8) + 16))(v985, v986, v1235);
                                                                    __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, v1235);
LABEL_430:
                                                                    uint64_t v991 = v784[39];
                                                                    uint64_t v992 = (void *)(v782 + v991);
                                                                    uint64_t v993 = (void *)(v783 + v991);
                                                                    *uint64_t v992 = *v993;
                                                                    v992[1] = v993[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v994 = v784[40];
                                                                    uint64_t v995 = (void *)(v782 + v994);
                                                                    uint64_t v996 = (void *)(v783 + v994);
                                                                    *uint64_t v995 = *v996;
                                                                    v995[1] = v996[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v997 = v784[41];
                                                                    uint64_t v998 = v782 + v997;
                                                                    uint64_t v999 = (uint64_t *)(v783 + v997);
                                                                    uint64_t v1000 = *v999;
                                                                    *(unsigned char *)(v998 + 8) = *((unsigned char *)v999 + 8);
                                                                    *(void *)uint64_t v998 = v1000;
                                                                    uint64_t v1001 = v784[42];
                                                                    uint64_t v1002 = (void *)(v782 + v1001);
                                                                    uint64_t v1003 = (void *)(v783 + v1001);
                                                                    void *v1002 = *v1003;
                                                                    v1002[1] = v1003[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1004 = v784[43];
                                                                    uint64_t v1005 = v782 + v1004;
                                                                    uint64_t v1006 = (long long *)(v783 + v1004);
                                                                    long long v1007 = *v1006;
                                                                    *(void *)(v1005 + 13) = *(void *)((char *)v1006 + 13);
                                                                    *(_OWORD *)uint64_t v1005 = v1007;
                                                                    uint64_t v1008 = v784[44];
                                                                    uint64_t v1009 = (void *)(v782 + v1008);
                                                                    v1010 = (void *)(v783 + v1008);
                                                                    *uint64_t v1009 = *v1010;
                                                                    v1009[1] = v1010[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1011 = v784[45];
                                                                    uint64_t v1012 = (void *)(v782 + v1011);
                                                                    uint64_t v1013 = (void *)(v783 + v1011);
                                                                    *uint64_t v1012 = *v1013;
                                                                    v1012[1] = v1013[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1014 = v784[46];
                                                                    uint64_t v1015 = (void *)(v782 + v1014);
                                                                    uint64_t v1016 = (void *)(v783 + v1014);
                                                                    *uint64_t v1015 = *v1016;
                                                                    v1015[1] = v1016[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v1017 = v784[47];
                                                                    uint64_t v1018 = (void *)(v782 + v1017);
                                                                    uint64_t v1019 = (void *)(v783 + v1017);
                                                                    void *v1018 = *v1019;
                                                                    v1018[1] = v1019[1];
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    goto LABEL_431;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v989 = *(void *)(v1235 - 8);
                                                                  if (!v987)
                                                                  {
                                                                    (*(void (**)(void *, const void *, uint64_t))(v989 + 24))(v985, v986, v1235);
                                                                    goto LABEL_430;
                                                                  }
                                                                  (*(void (**)(void *, uint64_t))(v989 + 8))(v985, v1235);
                                                                }
                                                                uint64_t v990 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                                memcpy(v985, v986, *(void *)(*(void *)(v990 - 8) + 64));
                                                                goto LABEL_430;
                                                              }
                                                              (*(void (**)(void *, uint64_t))(v920 + 8))(v904, v794);
                                                            }
                                                            uint64_t v921 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                            memcpy(v904, v905, *(void *)(*(void *)(v921 - 8) + 64));
                                                            goto LABEL_421;
                                                          }
                                                          (*(void (**)(void *, uint64_t))(v901 + 8))(v792, v794);
                                                        }
                                                        uint64_t v902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                        memcpy(v792, v793, *(void *)(*(void *)(v902 - 8) + 64));
                                                        goto LABEL_409;
                                                      }
                                                      (*(void (**)(uint64_t, uint64_t))(v988 + 8))(v915, v917);
                                                    }
                                                    size_t v758 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                                                                 - 8)
                                                                     + 64);
                                                    uint64_t v759 = (void *)v915;
                                                    uint64_t v760 = (const void *)v916;
LABEL_369:
                                                    memcpy(v759, v760, v758);
                                                    goto LABEL_382;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t v908 = *(void *)(v9 - 8);
                                                  if (!v900)
                                                  {
                                                    (*(void (**)(void *, const void *, uint64_t))(v908 + 24))(v897, v898, v9);
                                                    goto LABEL_415;
                                                  }
                                                  (*(void (**)(void *, uint64_t))(v908 + 8))(v897, v9);
                                                }
                                                uint64_t v909 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                                memcpy(v897, v898, *(void *)(*(void *)(v909 - 8) + 64));
                                                goto LABEL_415;
                                              }
                                              (*(void (**)(void *, uint64_t))(v894 + 8))(v762, v9);
                                            }
                                            uint64_t v895 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                            memcpy(v762, v763, *(void *)(*(void *)(v895 - 8) + 64));
                                            goto LABEL_403;
                                          }
LABEL_292:
                                          uint64_t v676 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
                                          memcpy((void *)v668, (const void *)v669, *(void *)(*(void *)(v676 - 8) + 64));
                                          goto LABEL_362;
                                        }
                                        if (v672)
                                        {
                                          outlined destroy of EmailDocument(v668, (void (*)(void))type metadata accessor for Party);
                                          goto LABEL_292;
                                        }
                                        *(void *)uint64_t v668 = *(void *)v669;
                                        *(void *)(v668 + 8) = *(void *)(v669 + 8);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 16) = *(void *)(v669 + 16);
                                        *(void *)(v668 + 24) = *(void *)(v669 + 24);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 32) = *(void *)(v669 + 32);
                                        *(void *)(v668 + 40) = *(void *)(v669 + 40);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 48) = *(void *)(v669 + 48);
                                        *(void *)(v668 + 56) = *(void *)(v669 + 56);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 64) = *(void *)(v669 + 64);
                                        *(void *)(v668 + 72) = *(void *)(v669 + 72);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 80) = *(void *)(v669 + 80);
                                        *(void *)(v668 + 88) = *(void *)(v669 + 88);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 96) = *(void *)(v669 + 96);
                                        *(void *)(v668 + 104) = *(void *)(v669 + 104);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 112) = *(void *)(v669 + 112);
                                        *(void *)(v668 + 120) = *(void *)(v669 + 120);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(unsigned char *)(v668 + 128) = *(unsigned char *)(v669 + 128);
                                        *(unsigned char *)(v668 + 129) = *(unsigned char *)(v669 + 129);
                                        *(unsigned char *)(v668 + 130) = *(unsigned char *)(v669 + 130);
                                        *(void *)(v668 + 136) = *(void *)(v669 + 136);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 144) = *(void *)(v669 + 144);
                                        *(void *)(v668 + 152) = *(void *)(v669 + 152);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 160) = *(void *)(v669 + 160);
                                        *(void *)(v668 + 168) = *(void *)(v669 + 168);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 176) = *(void *)(v669 + 176);
                                        *(void *)(v668 + 184) = *(void *)(v669 + 184);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 192) = *(void *)(v669 + 192);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 200) = *(void *)(v669 + 200);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 208) = *(void *)(v669 + 208);
                                        *(void *)(v668 + 216) = *(void *)(v669 + 216);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 224) = *(void *)(v669 + 224);
                                        *(void *)(v668 + 232) = *(void *)(v669 + 232);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        *(void *)(v668 + 240) = *(void *)(v669 + 240);
                                        *(void *)(v668 + 248) = *(void *)(v669 + 248);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        uint64_t v677 = v670[24];
                                        uint64_t v678 = (void *)(v668 + v677);
                                        uint64_t v679 = (const void *)(v669 + v677);
                                        int v680 = __swift_getEnumTagSinglePayload(v668 + v677, 1, v9);
                                        int v681 = __swift_getEnumTagSinglePayload((uint64_t)v679, 1, v9);
                                        if (v680)
                                        {
                                          if (!v681)
                                          {
                                            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8)
                                                                                                  + 16))(v678, v679, v9);
                                            __swift_storeEnumTagSinglePayload((uint64_t)v678, 0, 1, v9);
                                            goto LABEL_331;
                                          }
                                        }
                                        else
                                        {
                                          uint64_t v722 = *(void *)(v9 - 8);
                                          if (!v681)
                                          {
                                            (*(void (**)(void *, const void *, uint64_t))(v722 + 24))(v678, v679, v9);
LABEL_331:
                                            uint64_t v724 = v670[25];
                                            uint64_t v725 = (void *)(v668 + v724);
                                            uint64_t v726 = (const void *)(v669 + v724);
                                            int v727 = __swift_getEnumTagSinglePayload(v668 + v724, 1, v9);
                                            int v728 = __swift_getEnumTagSinglePayload((uint64_t)v726, 1, v9);
                                            if (v727)
                                            {
                                              if (!v728)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v725, v726, v9);
                                                __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, v9);
                                                goto LABEL_352;
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v739 = *(void *)(v9 - 8);
                                              if (!v728)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(v739 + 24))(v725, v726, v9);
LABEL_352:
                                                uint64_t v741 = v670[26];
                                                int v742 = (void *)(v668 + v741);
                                                uint64_t v743 = (const void *)(v669 + v741);
                                                uint64_t v744 = type metadata accessor for URL();
                                                int v745 = __swift_getEnumTagSinglePayload((uint64_t)v742, 1, v744);
                                                int v746 = __swift_getEnumTagSinglePayload((uint64_t)v743, 1, v744);
                                                if (v745)
                                                {
                                                  if (!v746)
                                                  {
                                                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v744 - 8) + 16))(v742, v743, v744);
                                                    __swift_storeEnumTagSinglePayload((uint64_t)v742, 0, 1, v744);
LABEL_361:
                                                    uint64_t v9 = v1235;
                                                    goto LABEL_362;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t v748 = *(void *)(v744 - 8);
                                                  if (!v746)
                                                  {
                                                    (*(void (**)(void *, const void *, uint64_t))(v748 + 24))(v742, v743, v744);
                                                    goto LABEL_361;
                                                  }
                                                  (*(void (**)(void *, uint64_t))(v748 + 8))(v742, v744);
                                                }
                                                uint64_t v749 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                                                memcpy(v742, v743, *(void *)(*(void *)(v749 - 8) + 64));
                                                goto LABEL_361;
                                              }
                                              (*(void (**)(void *, uint64_t))(v739 + 8))(v725, v9);
                                            }
                                            uint64_t v740 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                            memcpy(v725, v726, *(void *)(*(void *)(v740 - 8) + 64));
                                            goto LABEL_352;
                                          }
                                          (*(void (**)(void *, uint64_t))(v722 + 8))(v678, v9);
                                        }
                                        uint64_t v723 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                        memcpy(v678, v679, *(void *)(*(void *)(v723 - 8) + 64));
                                        goto LABEL_331;
                                      }
                                      (*(void (**)(void *, uint64_t))(v738 + 8))(v718, v9);
                                    }
                                    size_t v652 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                                                 - 8)
                                                     + 64);
                                    uint64_t v653 = v718;
                                    uint64_t v654 = (const void *)v719;
LABEL_276:
                                    memcpy(v653, v654, v652);
                                    goto LABEL_286;
                                  }
                                }
                                else
                                {
                                  uint64_t v715 = *(void *)(v9 - 8);
                                  if (!v660)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v715 + 24))(v657, v658, v9);
                                    goto LABEL_325;
                                  }
                                  (*(void (**)(void *, uint64_t))(v715 + 8))(v657, v9);
                                }
                                uint64_t v716 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                                memcpy(v657, v658, *(void *)(*(void *)(v716 - 8) + 64));
                                goto LABEL_325;
                              }
                              (*(void (**)(void *, uint64_t))(v747 + 8))(v734, v9);
                            }
                            size_t v619 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                                         - 8)
                                             + 64);
                            uint64_t v620 = v734;
                            uint64_t v621 = (const void *)v735;
LABEL_256:
                            memcpy(v620, v621, v619);
                            goto LABEL_269;
                          }
                        }
                        else
                        {
                          uint64_t v731 = *(void *)(v9 - 8);
                          if (!v714)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v731 + 24))(v711, v712, v9);
                            goto LABEL_343;
                          }
                          (*(void (**)(void *, uint64_t))(v731 + 8))(v711, v9);
                        }
                        uint64_t v732 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                        memcpy(v711, v712, *(void *)(*(void *)(v732 - 8) + 64));
                        goto LABEL_343;
                      }
                      (*(void (**)(void *, uint64_t))(v705 + 8))(v624, v626);
                    }
                    uint64_t v706 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                    memcpy(v624, v625, *(void *)(*(void *)(v706 - 8) + 64));
                    goto LABEL_319;
                  }
                  (*(void (**)(void *, uint64_t))(v730 + 8))(v701, v9);
                }
                size_t v594 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                             - 8)
                                 + 64);
                uint64_t v595 = v701;
                uint64_t v596 = (const void *)v702;
LABEL_239:
                memcpy(v595, v596, v594);
                goto LABEL_249;
              }
            }
            else
            {
              uint64_t v698 = *(void *)(v9 - 8);
              if (!v602)
              {
                (*(void (**)(void *, const void *, uint64_t))(v698 + 24))(v599, v600, v9);
                goto LABEL_313;
              }
              (*(void (**)(void *, uint64_t))(v698 + 8))(v599, v9);
            }
            uint64_t v699 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v599, v600, *(void *)(*(void *)(v699 - 8) + 64));
            goto LABEL_313;
          }
          (*(void (**)(void *, uint64_t))(v729 + 8))(v694, v9);
        }
        size_t v44 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                    - 8)
                        + 64);
        uint64_t v45 = v694;
        uint64_t v46 = (const void *)v695;
LABEL_25:
        memcpy(v45, v46, v44);
        goto LABEL_232;
      }
    }
    else
    {
      uint64_t v691 = *(void *)(v9 - 8);
      if (!v577)
      {
        (*(void (**)(void *, const void *, uint64_t))(v691 + 24))(v574, v575, v9);
        goto LABEL_307;
      }
      (*(void (**)(void *, uint64_t))(v691 + 8))(v574, v9);
    }
    uint64_t v692 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v574, v575, *(void *)(*(void *)(v692 - 8) + 64));
    goto LABEL_307;
  }
  if (v22)
  {
LABEL_13:
    uint64_t v28 = &demangling cache variable for type metadata for PartialExtractedAttributes?;
LABEL_14:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v28);
    memcpy(v18, v19, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_113;
  }
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  uint64_t v23 = v20[5];
  uint64_t v24 = (void *)((char *)v18 + v23);
  uint64_t v25 = (void *)((char *)v19 + v23);
  uint64_t v26 = type metadata accessor for RentalCarReservation(0);
  swift_bridgeObjectRetain();
  uint64_t v1224 = v19;
  uint64_t v1227 = v18;
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    void *v24 = *v25;
    v24[1] = v25[1];
    v24[2] = v25[2];
    v24[3] = v25[3];
    v24[4] = v25[4];
    v24[5] = v25[5];
    v24[6] = v25[6];
    v24[7] = v25[7];
    v24[8] = v25[8];
    v24[9] = v25[9];
    v24[10] = v25[10];
    v24[11] = v25[11];
    v24[12] = v25[12];
    v24[13] = v25[13];
    v24[14] = v25[14];
    v24[15] = v25[15];
    *((unsigned char *)v24 + 128) = *((unsigned char *)v25 + 128);
    *((unsigned char *)v24 + 129) = *((unsigned char *)v25 + 129);
    *((unsigned char *)v24 + 130) = *((unsigned char *)v25 + 130);
    v24[17] = v25[17];
    v24[18] = v25[18];
    v24[19] = v25[19];
    v24[20] = v25[20];
    v24[21] = v25[21];
    v24[22] = v25[22];
    v24[23] = v25[23];
    v24[24] = v25[24];
    v24[25] = v25[25];
    v24[26] = v25[26];
    v24[27] = v25[27];
    v24[28] = v25[28];
    v24[29] = v25[29];
    v24[30] = v25[30];
    v24[31] = v25[31];
    v24[32] = v25[32];
    v24[33] = v25[33];
    v24[34] = v25[34];
    v24[35] = v25[35];
    v24[36] = v25[36];
    v24[37] = v25[37];
    v24[38] = v25[38];
    v24[39] = v25[39];
    v24[40] = v25[40];
    v24[41] = v25[41];
    v24[42] = v25[42];
    v24[43] = v25[43];
    v24[44] = v25[44];
    v24[45] = v25[45];
    v24[46] = v25[46];
    uint64_t v40 = v25[47];
    *((unsigned char *)v24 + 384) = *((unsigned char *)v25 + 384);
    v24[47] = v40;
    v24[49] = v25[49];
    v24[50] = v25[50];
    v24[51] = v25[51];
    v24[52] = v25[52];
    uint64_t v41 = *(int *)(v26 + 140);
    uint64_t v1210 = (char *)v24 + v41;
    uint64_t v42 = (char *)v25 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v9))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1210, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1210, v42, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1210, 0, 1, v9);
    }
    uint64_t v47 = *(int *)(v26 + 144);
    uint64_t v48 = (char *)v24 + v47;
    uint64_t v49 = (char *)v25 + v47;
    if (__swift_getEnumTagSinglePayload((uint64_t)v25 + v47, 1, v9))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v48, v49, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v51 = v20[6];
  uint64_t v52 = (void *)((char *)v18 + v51);
  uint64_t v53 = (void *)((char *)v19 + v51);
  uint64_t v54 = type metadata accessor for TicketedTransportation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    *uint64_t v52 = *v53;
    v52[1] = v53[1];
    v52[2] = v53[2];
    v52[3] = v53[3];
    v52[4] = v53[4];
    v52[5] = v53[5];
    v52[6] = v53[6];
    v52[7] = v53[7];
    v52[8] = v53[8];
    v52[9] = v53[9];
    v52[10] = v53[10];
    v52[11] = v53[11];
    v52[12] = v53[12];
    v52[13] = v53[13];
    v52[14] = v53[14];
    v52[15] = v53[15];
    *((unsigned char *)v52 + 128) = *((unsigned char *)v53 + 128);
    *((unsigned char *)v52 + 129) = *((unsigned char *)v53 + 129);
    *((unsigned char *)v52 + 130) = *((unsigned char *)v53 + 130);
    v52[17] = v53[17];
    v52[18] = v53[18];
    v52[19] = v53[19];
    v52[20] = v53[20];
    v52[21] = v53[21];
    v52[22] = v53[22];
    v52[23] = v53[23];
    v52[24] = v53[24];
    v52[25] = v53[25];
    v52[26] = v53[26];
    v52[27] = v53[27];
    v52[28] = v53[28];
    v52[29] = v53[29];
    v52[30] = v53[30];
    v52[31] = v53[31];
    v52[32] = v53[32];
    v52[33] = v53[33];
    v52[34] = v53[34];
    __dsta = (void *)v54;
    v52[35] = v53[35];
    uint64_t v56 = v53[36];
    *((unsigned char *)v52 + 296) = *((unsigned char *)v53 + 296);
    v52[36] = v56;
    uint64_t v57 = *(int *)(v54 + 112);
    uint64_t v1211 = (char *)v52 + v57;
    uint64_t v58 = (char *)v53 + v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v9))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1211, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1211, v58, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1211, 0, 1, v9);
    }
    uint64_t v60 = *(int *)(v54 + 116);
    uint64_t v61 = (char *)v52 + v60;
    uint64_t v62 = (char *)v53 + v60;
    if (__swift_getEnumTagSinglePayload((uint64_t)v53 + v60, 1, v9))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v61, v62, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, (uint64_t)__dsta);
  }
  uint64_t v64 = v20[7];
  uint64_t v65 = (void *)((char *)v18 + v64);
  uint64_t v66 = (void *)((char *)v19 + v64);
  uint64_t v67 = (int *)type metadata accessor for TicketedShow(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, (uint64_t)v67))
  {
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
    memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    *uint64_t v65 = *v66;
    v65[1] = v66[1];
    v65[2] = v66[2];
    v65[3] = v66[3];
    v65[4] = v66[4];
    v65[5] = v66[5];
    v65[6] = v66[6];
    v65[7] = v66[7];
    v65[8] = v66[8];
    v65[9] = v66[9];
    v65[10] = v66[10];
    v65[11] = v66[11];
    v65[12] = v66[12];
    v65[13] = v66[13];
    v65[14] = v66[14];
    v65[15] = v66[15];
    *((unsigned char *)v65 + 128) = *((unsigned char *)v66 + 128);
    *((unsigned char *)v65 + 129) = *((unsigned char *)v66 + 129);
    *((unsigned char *)v65 + 130) = *((unsigned char *)v66 + 130);
    v65[17] = v66[17];
    v65[18] = v66[18];
    v65[19] = v66[19];
    v65[20] = v66[20];
    v65[21] = v66[21];
    v65[22] = v66[22];
    v65[23] = v66[23];
    v65[24] = v66[24];
    v65[25] = v66[25];
    v65[26] = v66[26];
    v65[27] = v66[27];
    v65[28] = v66[28];
    v65[29] = v66[29];
    v65[30] = v66[30];
    v65[31] = v66[31];
    v65[32] = v66[32];
    v65[33] = v66[33];
    v65[34] = v66[34];
    v65[35] = v66[35];
    uint64_t v69 = v66[36];
    *((unsigned char *)v65 + 296) = *((unsigned char *)v66 + 296);
    v65[36] = v69;
    v65[38] = v66[38];
    v65[39] = v66[39];
    uint64_t v70 = v67[29];
    uint64_t v1212 = (char *)v65 + v70;
    uint64_t v1188 = (char *)v66 + v70;
    uint64_t v71 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1188, 1, v71))
    {
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v1212, v1188, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v1212, v1188, v71);
      __swift_storeEnumTagSinglePayload((uint64_t)v1212, 0, 1, v71);
    }
    uint64_t v73 = v67[30];
    uint64_t v74 = (void *)((char *)v65 + v73);
    uint64_t v75 = (void *)((char *)v66 + v73);
    *uint64_t v74 = *v75;
    v74[1] = v75[1];
    uint64_t v76 = v67[31];
    uint64_t v77 = (char *)v65 + v76;
    uint64_t v78 = (char *)v66 + v76;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v9))
    {
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v77, v78, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v9);
    }
    uint64_t v80 = v67[32];
    uint64_t v81 = (char *)v65 + v80;
    uint64_t v82 = (char *)v66 + v80;
    if (__swift_getEnumTagSinglePayload((uint64_t)v66 + v80, 1, v9))
    {
      uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v81, v82, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, (uint64_t)v67);
  }
  uint64_t v84 = v20[8];
  uint64_t v85 = (void *)((char *)v18 + v84);
  uint64_t v86 = (void *)((char *)v19 + v84);
  uint64_t v87 = type metadata accessor for Appointment(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
  {
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
    memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    void *v85 = *v86;
    v85[1] = v86[1];
    v85[2] = v86[2];
    v85[3] = v86[3];
    v85[4] = v86[4];
    v85[5] = v86[5];
    v85[6] = v86[6];
    v85[7] = v86[7];
    v85[8] = v86[8];
    v85[9] = v86[9];
    v85[10] = v86[10];
    v85[11] = v86[11];
    v85[12] = v86[12];
    v85[13] = v86[13];
    v85[14] = v86[14];
    v85[15] = v86[15];
    *((unsigned char *)v85 + 128) = *((unsigned char *)v86 + 128);
    *((unsigned char *)v85 + 129) = *((unsigned char *)v86 + 129);
    *((unsigned char *)v85 + 130) = *((unsigned char *)v86 + 130);
    v85[17] = v86[17];
    v85[18] = v86[18];
    v85[19] = v86[19];
    v85[20] = v86[20];
    v85[21] = v86[21];
    v85[22] = v86[22];
    v85[23] = v86[23];
    v85[24] = v86[24];
    v85[25] = v86[25];
    v85[26] = v86[26];
    v85[27] = v86[27];
    v85[28] = v86[28];
    v85[29] = v86[29];
    v85[30] = v86[30];
    v85[31] = v86[31];
    v85[32] = v86[32];
    v85[33] = v86[33];
    uint64_t v89 = v86[34];
    *((unsigned char *)v85 + 280) = *((unsigned char *)v86 + 280);
    v85[34] = v89;
    v85[36] = v86[36];
    v85[37] = v86[37];
    __dstb = (void *)v87;
    uint64_t v90 = *(int *)(v87 + 108);
    uint64_t v1213 = (char *)v85 + v90;
    uint64_t v91 = (char *)v86 + v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v9))
    {
      uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1213, v91, *(void *)(*(void *)(v92 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1213, v91, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1213, 0, 1, v9);
    }
    uint64_t v93 = *(int *)(v87 + 112);
    uint64_t v94 = (char *)v85 + v93;
    uint64_t v95 = (char *)v86 + v93;
    if (__swift_getEnumTagSinglePayload((uint64_t)v86 + v93, 1, v9))
    {
      uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v94, v95, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v9);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, (uint64_t)__dstb);
  }
  uint64_t v97 = v20[9];
  uint64_t v98 = (void *)((char *)v18 + v97);
  uint64_t v99 = (void *)((char *)v19 + v97);
  uint64_t v100 = type metadata accessor for Party(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v100))
  {
    uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
    memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    *uint64_t v98 = *v99;
    v98[1] = v99[1];
    v98[2] = v99[2];
    v98[3] = v99[3];
    v98[4] = v99[4];
    v98[5] = v99[5];
    v98[6] = v99[6];
    v98[7] = v99[7];
    v98[8] = v99[8];
    v98[9] = v99[9];
    v98[10] = v99[10];
    v98[11] = v99[11];
    v98[12] = v99[12];
    v98[13] = v99[13];
    v98[14] = v99[14];
    v98[15] = v99[15];
    *((unsigned char *)v98 + 128) = *((unsigned char *)v99 + 128);
    *((unsigned char *)v98 + 129) = *((unsigned char *)v99 + 129);
    *((unsigned char *)v98 + 130) = *((unsigned char *)v99 + 130);
    v98[17] = v99[17];
    v98[18] = v99[18];
    v98[19] = v99[19];
    v98[20] = v99[20];
    v98[21] = v99[21];
    v98[22] = v99[22];
    v98[23] = v99[23];
    v98[24] = v99[24];
    v98[25] = v99[25];
    v98[26] = v99[26];
    v98[27] = v99[27];
    v98[28] = v99[28];
    v98[29] = v99[29];
    v98[30] = v99[30];
    __dstc = (int *)v100;
    v98[31] = v99[31];
    uint64_t v102 = *(int *)(v100 + 96);
    uint64_t v1214 = (char *)v98 + v102;
    uint64_t v103 = (char *)v99 + v102;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v9))
    {
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1214, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1214, v103, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1214, 0, 1, v9);
    }
    uint64_t v105 = *(int *)(v100 + 100);
    uint64_t v106 = (char *)v98 + v105;
    uint64_t v107 = (char *)v99 + v105;
    if (__swift_getEnumTagSinglePayload((uint64_t)v99 + v105, 1, v9))
    {
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v106, v107, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v9);
    }
    uint64_t v109 = __dstc[26];
    uint64_t v110 = (char *)v98 + v109;
    uint64_t v111 = (char *)v99 + v109;
    uint64_t v112 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v112))
    {
      uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
      __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v112);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, (uint64_t)__dstc);
  }
  uint64_t v114 = v20[10];
  uint64_t v115 = (void *)((char *)v18 + v114);
  uint64_t v116 = (void *)((char *)v19 + v114);
  uint64_t v117 = type metadata accessor for Trip(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, v117))
  {
    uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
    memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
  }
  else
  {
    void *v115 = *v116;
    v115[1] = v116[1];
    v115[2] = v116[2];
    v115[3] = v116[3];
    v115[4] = v116[4];
    v115[5] = v116[5];
    v115[6] = v116[6];
    v115[7] = v116[7];
    v115[8] = v116[8];
    v115[9] = v116[9];
    v115[10] = v116[10];
    v115[11] = v116[11];
    v115[12] = v116[12];
    v115[13] = v116[13];
    v115[14] = v116[14];
    v115[15] = v116[15];
    *((unsigned char *)v115 + 128) = *((unsigned char *)v116 + 128);
    *((unsigned char *)v115 + 129) = *((unsigned char *)v116 + 129);
    *((unsigned char *)v115 + 130) = *((unsigned char *)v116 + 130);
    v115[17] = v116[17];
    v115[18] = v116[18];
    v115[19] = v116[19];
    v115[20] = v116[20];
    v115[21] = v116[21];
    v115[22] = v116[22];
    v115[23] = v116[23];
    v115[24] = v116[24];
    v115[25] = v116[25];
    v115[26] = v116[26];
    __dstd = (int *)v117;
    v115[27] = v116[27];
    uint64_t v119 = *(int *)(v117 + 88);
    uint64_t v1215 = (char *)v115 + v119;
    uint64_t v1190 = (char *)v116 + v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1190, 1, v9))
    {
      uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1215, v1190, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1215, v1190, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1215, 0, 1, v9);
    }
    uint64_t v121 = *(int *)(v117 + 92);
    uint64_t v122 = (char *)v115 + v121;
    uint64_t v123 = (char *)v116 + v121;
    if (__swift_getEnumTagSinglePayload((uint64_t)v116 + v121, 1, v9))
    {
      uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v122, v123, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v9);
    }
    uint64_t v125 = __dstd[24];
    uint64_t v126 = (char *)v115 + v125;
    uint64_t v127 = (char *)v116 + v125;
    uint64_t v128 = *(void *)v127;
    v126[8] = v127[8];
    *(void *)uint64_t v126 = v128;
    uint64_t v129 = __dstd[25];
    uint64_t v130 = (char *)v115 + v129;
    uint64_t v131 = (char *)v116 + v129;
    uint64_t v132 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
    {
      uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
      __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v132);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, (uint64_t)__dstd);
  }
  uint64_t v134 = v20[11];
  uint64_t v135 = (void *)((char *)v18 + v134);
  uint64_t v136 = (void *)((char *)v19 + v134);
  uint64_t v137 = (int *)type metadata accessor for FlightReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, (uint64_t)v137))
  {
    uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
    memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    *uint64_t v135 = *v136;
    v135[1] = v136[1];
    v135[2] = v136[2];
    v135[3] = v136[3];
    v135[4] = v136[4];
    v135[5] = v136[5];
    v135[6] = v136[6];
    v135[7] = v136[7];
    v135[8] = v136[8];
    v135[9] = v136[9];
    v135[10] = v136[10];
    v135[11] = v136[11];
    *((unsigned char *)v135 + 96) = *((unsigned char *)v136 + 96);
    v135[13] = v136[13];
    v135[14] = v136[14];
    uint64_t v139 = v137[13];
    uint64_t v1216 = (char *)v135 + v139;
    uint64_t v1195 = (char *)v136 + v139;
    uint64_t v140 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1195, 1, v140))
    {
      uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v1216, v1195, *(void *)(*(void *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v1216, v1195, v140);
      __swift_storeEnumTagSinglePayload((uint64_t)v1216, 0, 1, v140);
    }
    uint64_t v142 = v137[14];
    uint64_t v143 = (char *)v135 + v142;
    uint64_t v144 = (char *)v136 + v142;
    if (__swift_getEnumTagSinglePayload((uint64_t)v136 + v142, 1, v140))
    {
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v143, v144, v140);
      __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v140);
    }
    uint64_t v146 = v137[15];
    uint64_t v147 = (void *)((char *)v135 + v146);
    uint64_t v148 = (void *)((char *)v136 + v146);
    *uint64_t v147 = *v148;
    v147[1] = v148[1];
    uint64_t v149 = v137[16];
    uint64_t v150 = (void *)((char *)v135 + v149);
    uint64_t v151 = (void *)((char *)v136 + v149);
    void *v150 = *v151;
    v150[1] = v151[1];
    uint64_t v152 = v137[17];
    uint64_t v153 = (void *)((char *)v135 + v152);
    uint64_t v154 = (void *)((char *)v136 + v152);
    void *v153 = *v154;
    v153[1] = v154[1];
    uint64_t v155 = v137[18];
    uint64_t v1217 = (char *)v135 + v155;
    uint64_t v156 = (char *)v136 + v155;
    uint64_t v157 = type metadata accessor for DateComponents();
    uint64_t v158 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v158(v1217, v156, v157);
    v158((char *)v135 + v137[19], (char *)v136 + v137[19], v157);
    uint64_t v159 = v137[20];
    uint64_t v160 = (void *)((char *)v135 + v159);
    uint64_t v161 = (void *)((char *)v136 + v159);
    *uint64_t v160 = *v161;
    v160[1] = v161[1];
    uint64_t v162 = v137[21];
    uint64_t v163 = (void *)((char *)v135 + v162);
    uint64_t v164 = (void *)((char *)v136 + v162);
    *uint64_t v163 = *v164;
    v163[1] = v164[1];
    uint64_t v165 = v137[22];
    uint64_t v166 = (void *)((char *)v135 + v165);
    long long v167 = (void *)((char *)v136 + v165);
    *uint64_t v166 = *v167;
    v166[1] = v167[1];
    uint64_t v168 = v137[23];
    uint64_t v169 = (void *)((char *)v135 + v168);
    uint64_t v170 = (void *)((char *)v136 + v168);
    *uint64_t v169 = *v170;
    v169[1] = v170[1];
    uint64_t v171 = v137[24];
    uint64_t v172 = (void *)((char *)v135 + v171);
    uint64_t v173 = (void *)((char *)v136 + v171);
    *uint64_t v172 = *v173;
    v172[1] = v173[1];
    uint64_t v174 = v137[25];
    uint64_t v175 = (void *)((char *)v135 + v174);
    uint64_t v176 = (void *)((char *)v136 + v174);
    *uint64_t v175 = *v176;
    v175[1] = v176[1];
    uint64_t v177 = v137[26];
    uint64_t v178 = (void *)((char *)v135 + v177);
    uint64_t v179 = (void *)((char *)v136 + v177);
    *uint64_t v178 = *v179;
    v178[1] = v179[1];
    uint64_t v180 = v137[27];
    uint64_t v181 = (void *)((char *)v135 + v180);
    uint64_t v182 = (void *)((char *)v136 + v180);
    void *v181 = *v182;
    v181[1] = v182[1];
    uint64_t v183 = v137[28];
    uint64_t v184 = (void *)((char *)v135 + v183);
    uint64_t v185 = (void *)((char *)v136 + v183);
    void *v184 = *v185;
    v184[1] = v185[1];
    uint64_t v186 = v137[29];
    uint64_t v187 = (void *)((char *)v135 + v186);
    uint64_t v188 = (void *)((char *)v136 + v186);
    *uint64_t v187 = *v188;
    v187[1] = v188[1];
    uint64_t v189 = v137[30];
    uint64_t v190 = (void *)((char *)v135 + v189);
    uint64_t v191 = (void *)((char *)v136 + v189);
    *uint64_t v190 = *v191;
    v190[1] = v191[1];
    uint64_t v192 = v137[31];
    uint64_t v193 = (void *)((char *)v135 + v192);
    long long v194 = (void *)((char *)v136 + v192);
    *uint64_t v193 = *v194;
    v193[1] = v194[1];
    uint64_t v195 = v137[32];
    uint64_t v196 = (void *)((char *)v135 + v195);
    uint64_t v197 = (void *)((char *)v136 + v195);
    *uint64_t v196 = *v197;
    v196[1] = v197[1];
    *(void *)((char *)v135 + v137[33]) = *(void *)((char *)v136 + v137[33]);
    *(void *)((char *)v135 + v137[34]) = *(void *)((char *)v136 + v137[34]);
    uint64_t v198 = v137[35];
    uint64_t v199 = (void *)((char *)v135 + v198);
    uint64_t v200 = (void *)((char *)v136 + v198);
    *uint64_t v199 = *v200;
    v199[1] = v200[1];
    uint64_t v201 = v137[36];
    uint64_t v202 = (void *)((char *)v135 + v201);
    uint64_t v203 = (void *)((char *)v136 + v201);
    *uint64_t v202 = *v203;
    v202[1] = v203[1];
    uint64_t v204 = v137[37];
    uint64_t v205 = (void *)((char *)v135 + v204);
    uint64_t v206 = (void *)((char *)v136 + v204);
    *uint64_t v205 = *v206;
    v205[1] = v206[1];
    uint64_t v207 = v137[38];
    uint64_t v1218 = (char *)v135 + v207;
    uint64_t v208 = (char *)v136 + v207;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v9))
    {
      uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v1218, v208, *(void *)(*(void *)(v209 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v1218, v208, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v1218, 0, 1, v9);
    }
    uint64_t v19 = v1224;
    uint64_t v210 = v137[39];
    uint64_t v211 = (void *)((char *)v135 + v210);
    uint64_t v212 = (void *)((char *)v136 + v210);
    void *v211 = *v212;
    v211[1] = v212[1];
    uint64_t v213 = v137[40];
    uint64_t v214 = (void *)((char *)v135 + v213);
    uint64_t v215 = (void *)((char *)v136 + v213);
    *uint64_t v214 = *v215;
    v214[1] = v215[1];
    uint64_t v216 = v137[41];
    uint64_t v217 = (char *)v135 + v216;
    uint64_t v218 = (char *)v136 + v216;
    uint64_t v219 = *(void *)v218;
    v217[8] = v218[8];
    *(void *)uint64_t v217 = v219;
    uint64_t v220 = v137[42];
    uint64_t v221 = (void *)((char *)v135 + v220);
    uint64_t v222 = (void *)((char *)v136 + v220);
    *uint64_t v221 = *v222;
    v221[1] = v222[1];
    uint64_t v223 = v137[43];
    uint64_t v224 = (char *)v135 + v223;
    uint64_t v225 = (char *)v136 + v223;
    long long v226 = *(_OWORD *)v225;
    *(void *)(v224 + 13) = *(void *)(v225 + 13);
    *(_OWORD *)uint64_t v224 = v226;
    uint64_t v227 = v137[44];
    long long v228 = (void *)((char *)v135 + v227);
    uint64_t v229 = (void *)((char *)v136 + v227);
    *long long v228 = *v229;
    v228[1] = v229[1];
    uint64_t v230 = v137[45];
    uint64_t v231 = (void *)((char *)v135 + v230);
    uint64_t v232 = (void *)((char *)v136 + v230);
    *uint64_t v231 = *v232;
    v231[1] = v232[1];
    uint64_t v233 = v137[46];
    uint64_t v234 = (void *)((char *)v135 + v233);
    uint64_t v235 = (void *)((char *)v136 + v233);
    void *v234 = *v235;
    v234[1] = v235[1];
    uint64_t v236 = v137[47];
    uint64_t v237 = (void *)((char *)v135 + v236);
    uint64_t v238 = (void *)((char *)v136 + v236);
    void *v237 = *v238;
    v237[1] = v238[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, (uint64_t)v137);
    uint64_t v18 = v1227;
    uint64_t v20 = v1229;
  }
  uint64_t v239 = v20[12];
  uint64_t v240 = (void *)((char *)v18 + v239);
  uint64_t v241 = (void *)((char *)v19 + v239);
  uint64_t v242 = (int *)type metadata accessor for HotelReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v241, 1, (uint64_t)v242))
  {
    uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
    memcpy(v240, v241, *(void *)(*(void *)(v243 - 8) + 64));
    uint64_t v4 = v1233;
  }
  else
  {
    *uint64_t v240 = *v241;
    v240[1] = v241[1];
    v240[2] = v241[2];
    v240[3] = v241[3];
    v240[4] = v241[4];
    v240[5] = v241[5];
    v240[6] = v241[6];
    v240[7] = v241[7];
    v240[8] = v241[8];
    v240[9] = v241[9];
    v240[10] = v241[10];
    v240[11] = v241[11];
    *((unsigned char *)v240 + 96) = *((unsigned char *)v241 + 96);
    v240[13] = v241[13];
    v240[14] = v241[14];
    v240[15] = v241[15];
    v240[16] = v241[16];
    uint64_t v244 = v242[14];
    uint64_t v1219 = (char *)v240 + v244;
    uint64_t v1192 = (char *)v241 + v244;
    uint64_t v245 = type metadata accessor for DateComponents();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1192, 1, v245))
    {
      uint64_t v246 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v1219, v1192, *(void *)(*(void *)(v246 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v1219, v1192, v245);
      __swift_storeEnumTagSinglePayload((uint64_t)v1219, 0, 1, v245);
    }
    uint64_t v247 = v242[15];
    uint64_t v248 = (char *)v240 + v247;
    long long v249 = (char *)v241 + v247;
    if (__swift_getEnumTagSinglePayload((uint64_t)v241 + v247, 1, v245))
    {
      uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v248, v249, v245);
      __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v245);
    }
    uint64_t v251 = v242[16];
    uint64_t v252 = (void *)((char *)v240 + v251);
    uint64_t v253 = (void *)((char *)v241 + v251);
    *uint64_t v252 = *v253;
    v252[1] = v253[1];
    uint64_t v254 = v242[17];
    uint64_t v255 = (void *)((char *)v240 + v254);
    uint64_t v256 = (void *)((char *)v241 + v254);
    *uint64_t v255 = *v256;
    v255[1] = v256[1];
    uint64_t v257 = v242[18];
    uint64_t v258 = (void *)((char *)v240 + v257);
    uint64_t v259 = (void *)((char *)v241 + v257);
    *uint64_t v258 = *v259;
    v258[1] = v259[1];
    uint64_t v260 = v242[19];
    long long v261 = (void *)((char *)v240 + v260);
    uint64_t v262 = (void *)((char *)v241 + v260);
    *long long v261 = *v262;
    v261[1] = v262[1];
    uint64_t v263 = v242[20];
    uint64_t v264 = (void *)((char *)v240 + v263);
    uint64_t v265 = (void *)((char *)v241 + v263);
    void *v264 = *v265;
    v264[1] = v265[1];
    *(void *)((char *)v240 + v242[21]) = *(void *)((char *)v241 + v242[21]);
    *(void *)((char *)v240 + v242[22]) = *(void *)((char *)v241 + v242[22]);
    uint64_t v266 = v242[23];
    uint64_t v267 = (char *)v240 + v266;
    uint64_t v268 = (char *)v241 + v266;
    uint64_t v269 = *(void *)v268;
    v267[8] = v268[8];
    *(void *)uint64_t v267 = v269;
    uint64_t v270 = v242[24];
    uint64_t v271 = (char *)v240 + v270;
    uint64_t v272 = (char *)v241 + v270;
    uint64_t v273 = *(void *)v272;
    v271[8] = v272[8];
    *(void *)uint64_t v271 = v273;
    uint64_t v274 = v242[25];
    uint64_t v275 = (void *)((char *)v240 + v274);
    uint64_t v276 = (void *)((char *)v241 + v274);
    *uint64_t v275 = *v276;
    v275[1] = v276[1];
    uint64_t v277 = v242[26];
    uint64_t v278 = (void *)((char *)v240 + v277);
    uint64_t v279 = (void *)((char *)v241 + v277);
    *uint64_t v278 = *v279;
    v278[1] = v279[1];
    uint64_t v280 = v242[27];
    uint64_t v281 = (void *)((char *)v240 + v280);
    uint64_t v282 = (void *)((char *)v241 + v280);
    *uint64_t v281 = *v282;
    v281[1] = v282[1];
    uint64_t v283 = v242[28];
    uint64_t v284 = (void *)((char *)v240 + v283);
    uint64_t v285 = (void *)((char *)v241 + v283);
    void *v284 = *v285;
    v284[1] = v285[1];
    uint64_t v286 = v242[29];
    int v287 = (char *)v240 + v286;
    uint64_t v288 = (char *)v241 + v286;
    uint64_t v289 = *(void *)v288;
    v287[8] = v288[8];
    *(void *)int v287 = v289;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, (uint64_t)v242);
    uint64_t v4 = v1233;
    uint64_t v18 = v1227;
    uint64_t v20 = v1229;
    uint64_t v19 = v1224;
  }
  uint64_t v290 = v20[13];
  uint64_t v291 = (void *)((char *)v18 + v290);
  uint64_t v292 = (void *)((char *)v19 + v290);
  uint64_t v293 = (int *)type metadata accessor for RestaurantReservation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v292, 1, (uint64_t)v293))
  {
    uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
    memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
    uint64_t v5 = v1234;
    a3 = v1232;
  }
  else
  {
    *uint64_t v291 = *v292;
    v291[1] = v292[1];
    v291[2] = v292[2];
    v291[3] = v292[3];
    v291[4] = v292[4];
    v291[5] = v292[5];
    v291[6] = v292[6];
    v291[7] = v292[7];
    v291[8] = v292[8];
    v291[9] = v292[9];
    v291[10] = v292[10];
    v291[11] = v292[11];
    *((unsigned char *)v291 + 96) = *((unsigned char *)v292 + 96);
    v291[13] = v292[13];
    v291[14] = v292[14];
    v291[15] = v292[15];
    v291[16] = v292[16];
    uint64_t v295 = v293[14];
    uint64_t v1226 = (char *)v291 + v295;
    int v1196 = (char *)v292 + v295;
    uint64_t v1193 = type metadata accessor for DateComponents();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1196, 1, v1193))
    {
      uint64_t v296 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
      memcpy(v1226, v1196, *(void *)(*(void *)(v296 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1193 - 8) + 16))(v1226, v1196, v1193);
      __swift_storeEnumTagSinglePayload((uint64_t)v1226, 0, 1, v1193);
    }
    uint64_t v297 = v293[15];
    uint64_t v298 = (void *)((char *)v291 + v297);
    uint64_t v299 = (void *)((char *)v292 + v297);
    *uint64_t v298 = *v299;
    v298[1] = v299[1];
    uint64_t v300 = v293[16];
    uint64_t v301 = (void *)((char *)v291 + v300);
    uint64_t v302 = (void *)((char *)v292 + v300);
    *uint64_t v301 = *v302;
    v301[1] = v302[1];
    uint64_t v303 = v293[17];
    uint64_t v304 = (void *)((char *)v291 + v303);
    int v305 = (void *)((char *)v292 + v303);
    *uint64_t v304 = *v305;
    v304[1] = v305[1];
    uint64_t v306 = v293[18];
    uint64_t v307 = (void *)((char *)v291 + v306);
    uint64_t v308 = (void *)((char *)v292 + v306);
    *uint64_t v307 = *v308;
    v307[1] = v308[1];
    uint64_t v309 = v293[19];
    uint64_t v310 = (void *)((char *)v291 + v309);
    uint64_t v311 = (void *)((char *)v292 + v309);
    *uint64_t v310 = *v311;
    v310[1] = v311[1];
    *(void *)((char *)v291 + v293[20]) = *(void *)((char *)v292 + v293[20]);
    uint64_t v312 = v293[21];
    uint64_t v313 = (void *)((char *)v291 + v312);
    uint64_t v314 = (void *)((char *)v292 + v312);
    *uint64_t v313 = *v314;
    v313[1] = v314[1];
    uint64_t v315 = v293[22];
    uint64_t v316 = (void *)((char *)v291 + v315);
    uint64_t v317 = (void *)((char *)v292 + v315);
    *uint64_t v316 = *v317;
    v316[1] = v317[1];
    uint64_t v318 = v293[23];
    uint64_t v319 = (void *)((char *)v291 + v318);
    int v320 = (void *)((char *)v292 + v318);
    *uint64_t v319 = *v320;
    v319[1] = v320[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v291, 0, 1, (uint64_t)v293);
    uint64_t v4 = v1233;
    uint64_t v5 = v1234;
    uint64_t v20 = v1229;
    a3 = v1232;
    uint64_t v18 = v1227;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, (uint64_t)v20);
LABEL_113:
  uint64_t v321 = a3[18];
  uint64_t v322 = (void *)((char *)v5 + v321);
  uint64_t v323 = (void *)((char *)v4 + v321);
  uint64_t v324 = (int *)type metadata accessor for PreExtractedCard(0);
  int v325 = __swift_getEnumTagSinglePayload((uint64_t)v322, 1, (uint64_t)v324);
  int v326 = __swift_getEnumTagSinglePayload((uint64_t)v323, 1, (uint64_t)v324);
  if (v325)
  {
    if (!v326)
    {
      *uint64_t v322 = *v323;
      v322[1] = v323[1];
      v322[2] = v323[2];
      v322[3] = v323[3];
      v322[4] = v323[4];
      v322[5] = v323[5];
      v322[6] = v323[6];
      v322[7] = v323[7];
      v322[8] = v323[8];
      v322[9] = v323[9];
      v322[10] = v323[10];
      v322[11] = v323[11];
      uint64_t v327 = v324[10];
      uint64_t v328 = (char *)v322 + v327;
      uint64_t v329 = (char *)v323 + v327;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v329, 1, v1235))
      {
        uint64_t v330 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v328, v329, *(void *)(*(void *)(v330 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v328, v329, v1235);
        __swift_storeEnumTagSinglePayload((uint64_t)v328, 0, 1, v1235);
      }
      uint64_t v4 = v1233;
      uint64_t v338 = v324[11];
      uint64_t v339 = (char *)v322 + v338;
      uint64_t v340 = (char *)v323 + v338;
      if (__swift_getEnumTagSinglePayload((uint64_t)v323 + v338, 1, v1235))
      {
        uint64_t v341 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v339, v340, *(void *)(*(void *)(v341 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v339, v340, v1235);
        __swift_storeEnumTagSinglePayload((uint64_t)v339, 0, 1, v1235);
      }
      uint64_t v342 = v324[12];
      uint64_t v343 = (void *)((char *)v322 + v342);
      uint64_t v344 = (void *)((char *)v323 + v342);
      void *v343 = *v344;
      v343[1] = v344[1];
      uint64_t v345 = v324[13];
      uint64_t v346 = (void *)((char *)v322 + v345);
      uint64_t v347 = (void *)((char *)v323 + v345);
      void *v346 = *v347;
      v346[1] = v347[1];
      uint64_t v348 = v324[14];
      uint64_t v349 = (void *)((char *)v322 + v348);
      uint64_t v350 = (void *)((char *)v323 + v348);
      *uint64_t v349 = *v350;
      v349[1] = v350[1];
      uint64_t v351 = v324[15];
      uint64_t v352 = (char *)v322 + v351;
      uint64_t v353 = (char *)v323 + v351;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v353, 1, v1235))
      {
        uint64_t v354 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v352, v353, *(void *)(*(void *)(v354 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v352, v353, v1235);
        __swift_storeEnumTagSinglePayload((uint64_t)v352, 0, 1, v1235);
      }
      uint64_t v355 = v324[16];
      uint64_t v356 = (void *)((char *)v322 + v355);
      uint64_t v357 = (void *)((char *)v323 + v355);
      *uint64_t v356 = *v357;
      v356[1] = v357[1];
      uint64_t v358 = v324[17];
      uint64_t v359 = (void *)((char *)v322 + v358);
      uint64_t v360 = (void *)((char *)v323 + v358);
      *uint64_t v359 = *v360;
      v359[1] = v360[1];
      uint64_t v361 = v324[18];
      uint64_t v362 = (void *)((char *)v322 + v361);
      uint64_t v363 = (void *)((char *)v323 + v361);
      *uint64_t v362 = *v363;
      v362[1] = v363[1];
      uint64_t v364 = v324[19];
      uint64_t v365 = (void *)((char *)v322 + v364);
      uint64_t v366 = (void *)((char *)v323 + v364);
      void *v365 = *v366;
      v365[1] = v366[1];
      uint64_t v367 = v324[20];
      uint64_t v368 = (void *)((char *)v322 + v367);
      uint64_t v369 = (void *)((char *)v323 + v367);
      void *v368 = *v369;
      v368[1] = v369[1];
      uint64_t v370 = v324[21];
      uint64_t v371 = (void *)((char *)v322 + v370);
      uint64_t v372 = (void *)((char *)v323 + v370);
      *uint64_t v371 = *v372;
      v371[1] = v372[1];
      uint64_t v373 = v324[22];
      uint64_t v374 = (void *)((char *)v322 + v373);
      uint64_t v375 = (void *)((char *)v323 + v373);
      *uint64_t v374 = *v375;
      v374[1] = v375[1];
      uint64_t v376 = v324[23];
      uint64_t v377 = (void *)((char *)v322 + v376);
      uint64_t v378 = (void *)((char *)v323 + v376);
      void *v377 = *v378;
      v377[1] = v378[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v322, 0, 1, (uint64_t)v324);
      uint64_t v5 = v1234;
      a3 = v1232;
      goto LABEL_131;
    }
LABEL_119:
    uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v322, v323, *(void *)(*(void *)(v331 - 8) + 64));
LABEL_131:
    uint64_t v335 = v1235;
    goto LABEL_132;
  }
  if (v326)
  {
    outlined destroy of EmailDocument((uint64_t)v322, (void (*)(void))type metadata accessor for PreExtractedCard);
    goto LABEL_119;
  }
  *uint64_t v322 = *v323;
  v322[1] = v323[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v322[2] = v323[2];
  v322[3] = v323[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v322[4] = v323[4];
  v322[5] = v323[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v322[6] = v323[6];
  v322[7] = v323[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v322[8] = v323[8];
  v322[9] = v323[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v322[10] = v323[10];
  v322[11] = v323[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v332 = v324[10];
  uint64_t v333 = (char *)v322 + v332;
  uint64_t v334 = (char *)v323 + v332;
  uint64_t v335 = v1235;
  int v336 = __swift_getEnumTagSinglePayload((uint64_t)v322 + v332, 1, v1235);
  int v337 = __swift_getEnumTagSinglePayload((uint64_t)v334, 1, v1235);
  if (v336)
  {
    if (!v337)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v333, v334, v1235);
      __swift_storeEnumTagSinglePayload((uint64_t)v333, 0, 1, v1235);
      goto LABEL_150;
    }
    goto LABEL_149;
  }
  uint64_t v404 = *(void *)(v1235 - 8);
  if (v337)
  {
    (*(void (**)(char *, uint64_t))(v404 + 8))(v333, v1235);
LABEL_149:
    uint64_t v405 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v333, v334, *(void *)(*(void *)(v405 - 8) + 64));
    goto LABEL_150;
  }
  (*(void (**)(char *, char *, uint64_t))(v404 + 24))(v333, v334, v1235);
LABEL_150:
  uint64_t v406 = v324[11];
  uint64_t v407 = (char *)v322 + v406;
  uint64_t v408 = (char *)v323 + v406;
  int v409 = __swift_getEnumTagSinglePayload((uint64_t)v322 + v406, 1, v1235);
  int v410 = __swift_getEnumTagSinglePayload((uint64_t)v408, 1, v1235);
  if (v409)
  {
    if (!v410)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v407, v408, v1235);
      __swift_storeEnumTagSinglePayload((uint64_t)v407, 0, 1, v1235);
      goto LABEL_162;
    }
    goto LABEL_161;
  }
  uint64_t v421 = *(void *)(v1235 - 8);
  if (v410)
  {
    (*(void (**)(char *, uint64_t))(v421 + 8))(v407, v1235);
LABEL_161:
    uint64_t v422 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v407, v408, *(void *)(*(void *)(v422 - 8) + 64));
    goto LABEL_162;
  }
  (*(void (**)(char *, char *, uint64_t))(v421 + 24))(v407, v408, v1235);
LABEL_162:
  uint64_t v423 = v324[12];
  uint64_t v424 = (void *)((char *)v322 + v423);
  uint64_t v425 = (void *)((char *)v323 + v423);
  void *v424 = *v425;
  v424[1] = v425[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v426 = v324[13];
  uint64_t v427 = (void *)((char *)v322 + v426);
  uint64_t v428 = (void *)((char *)v323 + v426);
  void *v427 = *v428;
  v427[1] = v428[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v429 = v324[14];
  uint64_t v430 = (void *)((char *)v322 + v429);
  uint64_t v431 = (void *)((char *)v323 + v429);
  *uint64_t v430 = *v431;
  v430[1] = v431[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v432 = v324[15];
  uint64_t v433 = (char *)v322 + v432;
  uint64_t v434 = (char *)v323 + v432;
  int v435 = __swift_getEnumTagSinglePayload((uint64_t)v322 + v432, 1, v1235);
  int v436 = __swift_getEnumTagSinglePayload((uint64_t)v434, 1, v1235);
  if (!v435)
  {
    uint64_t v496 = *(void *)(v1235 - 8);
    if (!v436)
    {
      (*(void (**)(char *, char *, uint64_t))(v496 + 24))(v433, v434, v1235);
      goto LABEL_190;
    }
    (*(void (**)(char *, uint64_t))(v496 + 8))(v433, v1235);
    goto LABEL_189;
  }
  if (v436)
  {
LABEL_189:
    uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v433, v434, *(void *)(*(void *)(v497 - 8) + 64));
    goto LABEL_190;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v433, v434, v1235);
  __swift_storeEnumTagSinglePayload((uint64_t)v433, 0, 1, v1235);
LABEL_190:
  uint64_t v498 = v324[16];
  uint64_t v499 = (void *)((char *)v322 + v498);
  uint64_t v500 = (void *)((char *)v323 + v498);
  *uint64_t v499 = *v500;
  v499[1] = v500[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v501 = v324[17];
  uint64_t v502 = (void *)((char *)v322 + v501);
  uint64_t v503 = (void *)((char *)v323 + v501);
  *uint64_t v502 = *v503;
  v502[1] = v503[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v504 = v324[18];
  uint64_t v505 = (void *)((char *)v322 + v504);
  uint64_t v506 = (void *)((char *)v323 + v504);
  void *v505 = *v506;
  v505[1] = v506[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v507 = v324[19];
  uint64_t v508 = (void *)((char *)v322 + v507);
  uint64_t v509 = (void *)((char *)v323 + v507);
  void *v508 = *v509;
  v508[1] = v509[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v510 = v324[20];
  uint64_t v511 = (void *)((char *)v322 + v510);
  uint64_t v512 = (void *)((char *)v323 + v510);
  *uint64_t v511 = *v512;
  v511[1] = v512[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v513 = v324[21];
  uint64_t v514 = (void *)((char *)v322 + v513);
  uint64_t v515 = (void *)((char *)v323 + v513);
  *uint64_t v514 = *v515;
  v514[1] = v515[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v516 = v324[22];
  uint64_t v517 = (void *)((char *)v322 + v516);
  uint64_t v518 = (void *)((char *)v323 + v516);
  void *v517 = *v518;
  v517[1] = v518[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v519 = v324[23];
  uint64_t v520 = (void *)((char *)v322 + v519);
  uint64_t v521 = (void *)((char *)v323 + v519);
  void *v520 = *v521;
  v520[1] = v521[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_132:
  uint64_t v379 = a3[19];
  uint64_t v380 = (void *)((char *)v5 + v379);
  uint64_t v381 = (void *)((char *)v4 + v379);
  uint64_t v382 = (int *)type metadata accessor for PreExtractedContact(0);
  int v383 = __swift_getEnumTagSinglePayload((uint64_t)v380, 1, (uint64_t)v382);
  int v384 = __swift_getEnumTagSinglePayload((uint64_t)v381, 1, (uint64_t)v382);
  if (!v383)
  {
    if (v384)
    {
      outlined destroy of EmailDocument((uint64_t)v380, (void (*)(void))type metadata accessor for PreExtractedContact);
      goto LABEL_138;
    }
    *uint64_t v380 = *v381;
    v380[1] = v381[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v380[2] = v381[2];
    v380[3] = v381[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v380[4] = v381[4];
    v380[5] = v381[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v380[6] = v381[6];
    v380[7] = v381[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v380[8] = v381[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v380[9] = v381[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v380[10] = v381[10];
    v380[11] = v381[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v389 = v382[11];
    int v390 = (char *)v380 + v389;
    uint64_t v391 = (char *)v381 + v389;
    int v392 = __swift_getEnumTagSinglePayload((uint64_t)v380 + v389, 1, v335);
    int v393 = __swift_getEnumTagSinglePayload((uint64_t)v391, 1, v335);
    if (v392)
    {
      if (!v393)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v390, v391, v335);
        __swift_storeEnumTagSinglePayload((uint64_t)v390, 0, 1, v335);
        goto LABEL_156;
      }
    }
    else
    {
      uint64_t v411 = *(void *)(v335 - 8);
      if (!v393)
      {
        (*(void (**)(char *, char *, uint64_t))(v411 + 24))(v390, v391, v335);
LABEL_156:
        uint64_t v413 = v382[12];
        uint64_t v414 = (void *)((char *)v380 + v413);
        uint64_t v415 = (void *)((char *)v381 + v413);
        void *v414 = *v415;
        v414[1] = v415[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v380 + v382[13]) = *(void *)((char *)v381 + v382[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v416 = v382[14];
        uint64_t v417 = (char *)v380 + v416;
        uint64_t v418 = (char *)v381 + v416;
        int v419 = __swift_getEnumTagSinglePayload((uint64_t)v380 + v416, 1, v335);
        int v420 = __swift_getEnumTagSinglePayload((uint64_t)v418, 1, v335);
        if (v419)
        {
          if (!v420)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v417, v418, v335);
            __swift_storeEnumTagSinglePayload((uint64_t)v417, 0, 1, v335);
LABEL_168:
            *(void *)((char *)v380 + v382[15]) = *(void *)((char *)v381 + v382[15]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v380 + v382[16]) = *(void *)((char *)v381 + v382[16]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v439 = v382[17];
            uint64_t v440 = (void *)((char *)v380 + v439);
            uint64_t v441 = (void *)((char *)v381 + v439);
            void *v440 = *v441;
            v440[1] = v441[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v380 + v382[18]) = *(void *)((char *)v381 + v382[18]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)((char *)v380 + v382[19]) = *(void *)((char *)v381 + v382[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_169;
          }
        }
        else
        {
          uint64_t v437 = *(void *)(v335 - 8);
          if (!v420)
          {
            (*(void (**)(char *, char *, uint64_t))(v437 + 24))(v417, v418, v335);
            goto LABEL_168;
          }
          (*(void (**)(char *, uint64_t))(v437 + 8))(v417, v335);
        }
        uint64_t v438 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v417, v418, *(void *)(*(void *)(v438 - 8) + 64));
        goto LABEL_168;
      }
      (*(void (**)(char *, uint64_t))(v411 + 8))(v390, v335);
    }
    uint64_t v412 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v390, v391, *(void *)(*(void *)(v412 - 8) + 64));
    goto LABEL_156;
  }
  if (v384)
  {
LABEL_138:
    uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v380, v381, *(void *)(*(void *)(v388 - 8) + 64));
    goto LABEL_169;
  }
  *uint64_t v380 = *v381;
  v380[1] = v381[1];
  v380[2] = v381[2];
  v380[3] = v381[3];
  v380[4] = v381[4];
  v380[5] = v381[5];
  v380[6] = v381[6];
  v380[7] = v381[7];
  v380[8] = v381[8];
  v380[9] = v381[9];
  v380[10] = v381[10];
  v380[11] = v381[11];
  uint64_t v385 = v382[11];
  uint64_t v1230 = (char *)v380 + v385;
  uint64_t v386 = (char *)v381 + v385;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v386, 1, v1235))
  {
    uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v1230, v386, *(void *)(*(void *)(v387 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v1230, v386, v1235);
    __swift_storeEnumTagSinglePayload((uint64_t)v1230, 0, 1, v1235);
  }
  uint64_t v4 = v1233;
  uint64_t v5 = v1234;
  a3 = v1232;
  uint64_t v394 = v382[12];
  uint64_t v395 = (void *)((char *)v380 + v394);
  uint64_t v396 = (void *)((char *)v381 + v394);
  *uint64_t v395 = *v396;
  v395[1] = v396[1];
  *(void *)((char *)v380 + v382[13]) = *(void *)((char *)v381 + v382[13]);
  uint64_t v397 = v382[14];
  uint64_t v398 = (char *)v380 + v397;
  uint64_t v399 = (char *)v381 + v397;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v399, 1, v1235))
  {
    uint64_t v400 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v398, v399, *(void *)(*(void *)(v400 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v398, v399, v1235);
    __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, v1235);
  }
  *(void *)((char *)v380 + v382[15]) = *(void *)((char *)v381 + v382[15]);
  *(void *)((char *)v380 + v382[16]) = *(void *)((char *)v381 + v382[16]);
  uint64_t v401 = v382[17];
  uint64_t v402 = (void *)((char *)v380 + v401);
  uint64_t v403 = (void *)((char *)v381 + v401);
  *uint64_t v402 = *v403;
  v402[1] = v403[1];
  *(void *)((char *)v380 + v382[18]) = *(void *)((char *)v381 + v382[18]);
  *(void *)((char *)v380 + v382[19]) = *(void *)((char *)v381 + v382[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v380, 0, 1, (uint64_t)v382);
LABEL_169:
  uint64_t v442 = a3[20];
  uint64_t v443 = (void *)((char *)v5 + v442);
  uint64_t v444 = (void *)((char *)v4 + v442);
  uint64_t v445 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  int v446 = __swift_getEnumTagSinglePayload((uint64_t)v443, 1, (uint64_t)v445);
  int v447 = __swift_getEnumTagSinglePayload((uint64_t)v444, 1, (uint64_t)v445);
  if (!v446)
  {
    if (v447)
    {
      outlined destroy of EmailDocument((uint64_t)v443, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
      goto LABEL_175;
    }
    *uint64_t v443 = *v444;
    v443[1] = v444[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v443[2] = v444[2];
    v443[3] = v444[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v443[4] = v444[4];
    v443[5] = v444[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v443[6] = v444[6];
    v443[7] = v444[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v454 = v445[8];
    uint64_t v455 = (char *)v443 + v454;
    uint64_t v456 = (char *)v444 + v454;
    uint64_t v457 = type metadata accessor for URL();
    int v458 = __swift_getEnumTagSinglePayload((uint64_t)v455, 1, v457);
    int v459 = __swift_getEnumTagSinglePayload((uint64_t)v456, 1, v457);
    if (v458)
    {
      if (!v459)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v457 - 8) + 16))(v455, v456, v457);
        __swift_storeEnumTagSinglePayload((uint64_t)v455, 0, 1, v457);
        goto LABEL_194;
      }
    }
    else
    {
      uint64_t v522 = *(void *)(v457 - 8);
      if (!v459)
      {
        (*(void (**)(char *, char *, uint64_t))(v522 + 24))(v455, v456, v457);
LABEL_194:
        uint64_t v524 = v445[9];
        uint64_t v525 = (void *)((char *)v443 + v524);
        uint64_t v526 = (void *)((char *)v444 + v524);
        void *v525 = *v526;
        v525[1] = v526[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v527 = v445[10];
        uint64_t v528 = (void *)((char *)v443 + v527);
        uint64_t v529 = (void *)((char *)v444 + v527);
        void *v528 = *v529;
        v528[1] = v529[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v530 = v445[11];
        uint64_t v531 = (void *)((char *)v443 + v530);
        uint64_t v532 = (void *)((char *)v444 + v530);
        *uint64_t v531 = *v532;
        v531[1] = v532[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v533 = v445[12];
        uint64_t v534 = (char *)v443 + v533;
        uint64_t v535 = (char *)v444 + v533;
        int v536 = __swift_getEnumTagSinglePayload((uint64_t)v443 + v533, 1, v1235);
        int v537 = __swift_getEnumTagSinglePayload((uint64_t)v535, 1, v1235);
        if (v536)
        {
          if (!v537)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v534, v535, v1235);
            __swift_storeEnumTagSinglePayload((uint64_t)v534, 0, 1, v1235);
            goto LABEL_200;
          }
        }
        else
        {
          uint64_t v538 = *(void *)(v1235 - 8);
          if (!v537)
          {
            (*(void (**)(char *, char *, uint64_t))(v538 + 24))(v534, v535, v1235);
LABEL_200:
            uint64_t v540 = v445[13];
            uint64_t v541 = (char *)v443 + v540;
            uint64_t v542 = (char *)v444 + v540;
            int v543 = __swift_getEnumTagSinglePayload((uint64_t)v443 + v540, 1, v1235);
            int v544 = __swift_getEnumTagSinglePayload((uint64_t)v542, 1, v1235);
            if (v543)
            {
              if (!v544)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v541, v542, v1235);
                __swift_storeEnumTagSinglePayload((uint64_t)v541, 0, 1, v1235);
LABEL_206:
                uint64_t v547 = v445[14];
                uint64_t v548 = (char *)v443 + v547;
                uint64_t v549 = (char *)v444 + v547;
                uint64_t v550 = *(void *)v549;
                v548[8] = v549[8];
                *(void *)uint64_t v548 = v550;
                uint64_t v551 = v445[15];
                uint64_t v552 = (void *)((char *)v443 + v551);
                uint64_t v553 = (void *)((char *)v444 + v551);
                void *v552 = *v553;
                v552[1] = v553[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v554 = v445[16];
                uint64_t v555 = (void *)((char *)v443 + v554);
                uint64_t v556 = (void *)((char *)v444 + v554);
                *uint64_t v555 = *v556;
                v555[1] = v556[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v557 = v445[17];
                uint64_t v558 = (void *)((char *)v443 + v557);
                uint64_t v559 = (void *)((char *)v444 + v557);
                *uint64_t v558 = *v559;
                v558[1] = v559[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v560 = v445[18];
                uint64_t v561 = (void *)((char *)v443 + v560);
                uint64_t v562 = (void *)((char *)v444 + v560);
                *uint64_t v561 = *v562;
                v561[1] = v562[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v563 = v445[19];
                uint64_t v564 = (void *)((char *)v443 + v563);
                uint64_t v565 = (void *)((char *)v444 + v563);
                *uint64_t v564 = *v565;
                v564[1] = v565[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_207;
              }
            }
            else
            {
              uint64_t v545 = *(void *)(v1235 - 8);
              if (!v544)
              {
                (*(void (**)(char *, char *, uint64_t))(v545 + 24))(v541, v542, v1235);
                goto LABEL_206;
              }
              (*(void (**)(char *, uint64_t))(v545 + 8))(v541, v1235);
            }
            uint64_t v546 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v541, v542, *(void *)(*(void *)(v546 - 8) + 64));
            goto LABEL_206;
          }
          (*(void (**)(char *, uint64_t))(v538 + 8))(v534, v1235);
        }
        uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v534, v535, *(void *)(*(void *)(v539 - 8) + 64));
        goto LABEL_200;
      }
      (*(void (**)(char *, uint64_t))(v522 + 8))(v455, v457);
    }
    uint64_t v523 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v455, v456, *(void *)(*(void *)(v523 - 8) + 64));
    goto LABEL_194;
  }
  if (v447)
  {
LABEL_175:
    uint64_t v453 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v443, v444, *(void *)(*(void *)(v453 - 8) + 64));
    goto LABEL_207;
  }
  *uint64_t v443 = *v444;
  v443[1] = v444[1];
  v443[2] = v444[2];
  v443[3] = v444[3];
  v443[4] = v444[4];
  v443[5] = v444[5];
  v443[6] = v444[6];
  v443[7] = v444[7];
  uint64_t v448 = v445[8];
  uint64_t v449 = (char *)v443 + v448;
  uint64_t v450 = (char *)v444 + v448;
  uint64_t v451 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v450, 1, v451))
  {
    uint64_t v452 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v449, v450, *(void *)(*(void *)(v452 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v451 - 8) + 16))(v449, v450, v451);
    __swift_storeEnumTagSinglePayload((uint64_t)v449, 0, 1, v451);
  }
  uint64_t v4 = v1233;
  uint64_t v5 = v1234;
  a3 = v1232;
  uint64_t v460 = v445[9];
  uint64_t v461 = (void *)((char *)v443 + v460);
  uint64_t v462 = (void *)((char *)v444 + v460);
  void *v461 = *v462;
  v461[1] = v462[1];
  uint64_t v463 = v445[10];
  uint64_t v464 = (void *)((char *)v443 + v463);
  uint64_t v465 = (void *)((char *)v444 + v463);
  *uint64_t v464 = *v465;
  v464[1] = v465[1];
  uint64_t v466 = v445[11];
  uint64_t v467 = (void *)((char *)v443 + v466);
  uint64_t v468 = (void *)((char *)v444 + v466);
  *uint64_t v467 = *v468;
  v467[1] = v468[1];
  uint64_t v469 = v445[12];
  uint64_t v470 = (char *)v443 + v469;
  uint64_t v471 = (char *)v444 + v469;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v471, 1, v1235))
  {
    uint64_t v472 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v470, v471, *(void *)(*(void *)(v472 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v470, v471, v1235);
    __swift_storeEnumTagSinglePayload((uint64_t)v470, 0, 1, v1235);
  }
  uint64_t v473 = v445[13];
  uint64_t v474 = (char *)v443 + v473;
  uint64_t v475 = (char *)v444 + v473;
  if (__swift_getEnumTagSinglePayload((uint64_t)v444 + v473, 1, v1235))
  {
    uint64_t v476 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v474, v475, *(void *)(*(void *)(v476 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1235 - 8) + 16))(v474, v475, v1235);
    __swift_storeEnumTagSinglePayload((uint64_t)v474, 0, 1, v1235);
  }
  uint64_t v477 = v445[14];
  uint64_t v478 = (char *)v443 + v477;
  uint64_t v479 = (char *)v444 + v477;
  uint64_t v480 = *(void *)v479;
  v478[8] = v479[8];
  *(void *)uint64_t v478 = v480;
  uint64_t v481 = v445[15];
  uint64_t v482 = (void *)((char *)v443 + v481);
  uint64_t v483 = (void *)((char *)v444 + v481);
  void *v482 = *v483;
  v482[1] = v483[1];
  uint64_t v484 = v445[16];
  uint64_t v485 = (void *)((char *)v443 + v484);
  uint64_t v486 = (void *)((char *)v444 + v484);
  void *v485 = *v486;
  v485[1] = v486[1];
  uint64_t v487 = v445[17];
  uint64_t v488 = (void *)((char *)v443 + v487);
  uint64_t v489 = (void *)((char *)v444 + v487);
  *uint64_t v488 = *v489;
  v488[1] = v489[1];
  uint64_t v490 = v445[18];
  uint64_t v491 = (void *)((char *)v443 + v490);
  uint64_t v492 = (void *)((char *)v444 + v490);
  *uint64_t v491 = *v492;
  v491[1] = v492[1];
  uint64_t v493 = v445[19];
  uint64_t v494 = (void *)((char *)v443 + v493);
  uint64_t v495 = (void *)((char *)v444 + v493);
  *uint64_t v494 = *v495;
  v494[1] = v495[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v443, 0, 1, (uint64_t)v445);
LABEL_207:
  uint64_t v566 = a3[21];
  uint64_t v567 = (void *)((char *)v5 + v566);
  uint64_t v568 = (void *)((char *)v4 + v566);
  uint64_t v569 = *(void *)((char *)v5 + v566 + 8);
  uint64_t v570 = *(void *)((char *)v4 + v566 + 8);
  if (!v569)
  {
    if (v570)
    {
      void *v567 = *v568;
      v567[1] = v568[1];
      v567[2] = v568[2];
      v567[3] = v568[3];
      v567[4] = v568[4];
      v567[5] = v568[5];
      v567[6] = v568[6];
      v567[7] = v568[7];
      v567[8] = v568[8];
      v567[9] = v568[9];
      v567[10] = v568[10];
      v567[11] = v568[11];
      v567[12] = v568[12];
      v567[13] = v568[13];
      v567[14] = v568[14];
      v567[15] = v568[15];
      v567[16] = v568[16];
      v567[17] = v568[17];
      swift_bridgeObjectRetain();
      uint64_t v5 = v1234;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v5;
    }
LABEL_213:
    memcpy(v567, v568, 0x90uLL);
    return v5;
  }
  if (!v570)
  {
    outlined destroy of PreExtractedBreadcrumb((uint64_t)v567);
    goto LABEL_213;
  }
  void *v567 = *v568;
  v567[1] = v568[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[2] = v568[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[3] = v568[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[4] = v568[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[5] = v568[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[6] = v568[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[7] = v568[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[8] = v568[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[9] = v568[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[10] = v568[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[11] = v568[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[12] = v568[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[13] = v568[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[14] = v568[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[15] = v568[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[16] = v568[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v567[17] = v568[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t initializeWithTake for Photo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[11];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = v3[13];
  *(void *)(a1 + v3[12]) = *(void *)(a2 + v3[12]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = v3[15];
  *(void *)(a1 + v3[14]) = *(void *)(a2 + v3[14]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = v3[17];
  *(_OWORD *)(a1 + v3[16]) = *(_OWORD *)(a2 + v3[16]);
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    uint64_t v19 = v17[5];
    uint64_t v20 = (_OWORD *)((char *)v15 + v19);
    int v21 = (_OWORD *)((char *)v16 + v19);
    uint64_t v22 = type metadata accessor for RentalCarReservation(0);
    uint64_t v291 = v16;
    uint64_t v292 = v17;
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      long long v24 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v24;
      long long v25 = v21[3];
      v20[2] = v21[2];
      v20[3] = v25;
      long long v26 = v21[5];
      v20[4] = v21[4];
      v20[5] = v26;
      long long v27 = v21[7];
      v20[6] = v21[6];
      v20[7] = v27;
      *((unsigned char *)v20 + 128) = *((unsigned char *)v21 + 128);
      *(_WORD *)((char *)v20 + 129) = *(_WORD *)((char *)v21 + 129);
      *((void *)v20 + 17) = *((void *)v21 + 17);
      long long v28 = v21[10];
      v20[9] = v21[9];
      v20[10] = v28;
      long long v29 = v21[12];
      v20[11] = v21[11];
      v20[12] = v29;
      long long v30 = v21[14];
      v20[13] = v21[13];
      v20[14] = v30;
      v20[15] = v21[15];
      *((void *)v20 + 32) = *((void *)v21 + 32);
      *(_OWORD *)((char *)v20 + 264) = *(_OWORD *)((char *)v21 + 264);
      *(_OWORD *)((char *)v20 + 280) = *(_OWORD *)((char *)v21 + 280);
      *(_OWORD *)((char *)v20 + 296) = *(_OWORD *)((char *)v21 + 296);
      *(_OWORD *)((char *)v20 + 312) = *(_OWORD *)((char *)v21 + 312);
      *(_OWORD *)((char *)v20 + 328) = *(_OWORD *)((char *)v21 + 328);
      *(_OWORD *)((char *)v20 + 344) = *(_OWORD *)((char *)v21 + 344);
      *(_OWORD *)((char *)v20 + 360) = *(_OWORD *)((char *)v21 + 360);
      *((unsigned char *)v20 + 384) = *((unsigned char *)v21 + 384);
      *((void *)v20 + 47) = *((void *)v21 + 47);
      *(_OWORD *)((char *)v20 + 392) = *(_OWORD *)((char *)v21 + 392);
      *(_OWORD *)((char *)v20 + 408) = *(_OWORD *)((char *)v21 + 408);
      uint64_t v31 = *(int *)(v22 + 140);
      uint64_t v32 = (char *)v20 + v31;
      uint64_t v33 = (char *)v21 + v31;
      if (__swift_getEnumTagSinglePayload((uint64_t)v21 + v31, 1, v10))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v32, v33, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v10);
      }
      uint64_t v35 = *(int *)(v22 + 144);
      uint64_t v36 = (char *)v20 + v35;
      uint64_t v37 = (char *)v21 + v35;
      if (__swift_getEnumTagSinglePayload((uint64_t)v21 + v35, 1, v10))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v36, v37, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v10);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v39 = v17[6];
    uint64_t v40 = (_OWORD *)((char *)v15 + v39);
    uint64_t v41 = (_OWORD *)((char *)v16 + v39);
    uint64_t v42 = type metadata accessor for TicketedTransportation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      long long v44 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v44;
      long long v45 = v41[3];
      v40[2] = v41[2];
      v40[3] = v45;
      long long v46 = v41[5];
      v40[4] = v41[4];
      v40[5] = v46;
      long long v47 = v41[7];
      v40[6] = v41[6];
      v40[7] = v47;
      *((unsigned char *)v40 + 128) = *((unsigned char *)v41 + 128);
      *(_WORD *)((char *)v40 + 129) = *(_WORD *)((char *)v41 + 129);
      *((void *)v40 + 17) = *((void *)v41 + 17);
      long long v48 = v41[10];
      v40[9] = v41[9];
      v40[10] = v48;
      long long v49 = v41[12];
      v40[11] = v41[11];
      v40[12] = v49;
      *((void *)v40 + 26) = *((void *)v41 + 26);
      *(_OWORD *)((char *)v40 + 216) = *(_OWORD *)((char *)v41 + 216);
      *(_OWORD *)((char *)v40 + 232) = *(_OWORD *)((char *)v41 + 232);
      *(_OWORD *)((char *)v40 + 248) = *(_OWORD *)((char *)v41 + 248);
      *(_OWORD *)((char *)v40 + 264) = *(_OWORD *)((char *)v41 + 264);
      *((unsigned char *)v40 + 296) = *((unsigned char *)v41 + 296);
      uint64_t v50 = *((void *)v41 + 36);
      *((void *)v40 + 35) = *((void *)v41 + 35);
      *((void *)v40 + 36) = v50;
      uint64_t v51 = *(int *)(v42 + 112);
      uint64_t v52 = (char *)v40 + v51;
      uint64_t v53 = (char *)v41 + v51;
      if (__swift_getEnumTagSinglePayload((uint64_t)v41 + v51, 1, v10))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v52, v53, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v10);
      }
      uint64_t v55 = *(int *)(v42 + 116);
      uint64_t v56 = (char *)v40 + v55;
      uint64_t v57 = (char *)v41 + v55;
      if (__swift_getEnumTagSinglePayload((uint64_t)v41 + v55, 1, v10))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v56, v57, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v10);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v42);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v59 = v17[7];
    uint64_t v60 = (_OWORD *)((char *)v15 + v59);
    uint64_t v61 = (_OWORD *)((char *)v16 + v59);
    uint64_t v62 = (int *)type metadata accessor for TicketedShow(0);
    uint64_t v290 = (uint64_t)v15;
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, (uint64_t)v62))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      long long v64 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v64;
      long long v65 = v61[3];
      v60[2] = v61[2];
      v60[3] = v65;
      long long v66 = v61[5];
      v60[4] = v61[4];
      v60[5] = v66;
      long long v67 = v61[7];
      v60[6] = v61[6];
      v60[7] = v67;
      *((unsigned char *)v60 + 128) = *((unsigned char *)v61 + 128);
      *(_WORD *)((char *)v60 + 129) = *(_WORD *)((char *)v61 + 129);
      *((void *)v60 + 17) = *((void *)v61 + 17);
      long long v68 = v61[10];
      v60[9] = v61[9];
      v60[10] = v68;
      long long v69 = v61[12];
      v60[11] = v61[11];
      v60[12] = v69;
      long long v70 = v61[14];
      v60[13] = v61[13];
      v60[14] = v70;
      *((void *)v60 + 30) = *((void *)v61 + 30);
      *(_OWORD *)((char *)v60 + 248) = *(_OWORD *)((char *)v61 + 248);
      *(_OWORD *)((char *)v60 + 264) = *(_OWORD *)((char *)v61 + 264);
      *((unsigned char *)v60 + 296) = *((unsigned char *)v61 + 296);
      uint64_t v71 = *((void *)v61 + 36);
      *((void *)v60 + 35) = *((void *)v61 + 35);
      *((void *)v60 + 36) = v71;
      v60[19] = v61[19];
      uint64_t v72 = v62[29];
      uint64_t v73 = (char *)v60 + v72;
      uint64_t v74 = (char *)v61 + v72;
      uint64_t v75 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v75);
      }
      *(_OWORD *)((char *)v60 + v62[30]) = *(_OWORD *)((char *)v61 + v62[30]);
      uint64_t v77 = v62[31];
      uint64_t v78 = (char *)v60 + v77;
      uint64_t v79 = (char *)v61 + v77;
      uint64_t v15 = (_OWORD *)v290;
      if (__swift_getEnumTagSinglePayload((uint64_t)v61 + v77, 1, v10))
      {
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v78, v79, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v10);
      }
      uint64_t v81 = v62[32];
      uint64_t v82 = (char *)v60 + v81;
      uint64_t v83 = (char *)v61 + v81;
      if (__swift_getEnumTagSinglePayload((uint64_t)v61 + v81, 1, v10))
      {
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v82, v83, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v10);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, (uint64_t)v62);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v85 = v17[8];
    uint64_t v86 = (_OWORD *)((char *)v15 + v85);
    uint64_t v87 = (_OWORD *)((char *)v16 + v85);
    uint64_t v88 = type metadata accessor for Appointment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
    {
      uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
      memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      long long v90 = v87[1];
      *uint64_t v86 = *v87;
      v86[1] = v90;
      long long v91 = v87[3];
      v86[2] = v87[2];
      v86[3] = v91;
      long long v92 = v87[5];
      v86[4] = v87[4];
      v86[5] = v92;
      long long v93 = v87[7];
      v86[6] = v87[6];
      v86[7] = v93;
      *((unsigned char *)v86 + 128) = *((unsigned char *)v87 + 128);
      *(_WORD *)((char *)v86 + 129) = *(_WORD *)((char *)v87 + 129);
      *((void *)v86 + 17) = *((void *)v87 + 17);
      long long v94 = v87[10];
      v86[9] = v87[9];
      v86[10] = v94;
      long long v95 = v87[12];
      v86[11] = v87[11];
      v86[12] = v95;
      long long v96 = v87[14];
      v86[13] = v87[13];
      v86[14] = v96;
      long long v97 = v87[16];
      v86[15] = v87[15];
      v86[16] = v97;
      *((unsigned char *)v86 + 280) = *((unsigned char *)v87 + 280);
      *((void *)v86 + 34) = *((void *)v87 + 34);
      v86[18] = v87[18];
      uint64_t v98 = *(int *)(v88 + 108);
      uint64_t v99 = (char *)v86 + v98;
      uint64_t v100 = (char *)v87 + v98;
      if (__swift_getEnumTagSinglePayload((uint64_t)v87 + v98, 1, v10))
      {
        uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v99, v100, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v10);
      }
      uint64_t v102 = *(int *)(v88 + 112);
      uint64_t v103 = (char *)v86 + v102;
      uint64_t v104 = (char *)v87 + v102;
      if (__swift_getEnumTagSinglePayload((uint64_t)v87 + v102, 1, v10))
      {
        uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v103, v104, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v10);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v88);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v106 = v17[9];
    uint64_t v107 = (_OWORD *)((char *)v15 + v106);
    uint64_t v108 = (_OWORD *)((char *)v16 + v106);
    uint64_t v109 = (int *)type metadata accessor for Party(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, (uint64_t)v109))
    {
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
      memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
    }
    else
    {
      long long v111 = v108[1];
      *uint64_t v107 = *v108;
      v107[1] = v111;
      long long v112 = v108[3];
      v107[2] = v108[2];
      v107[3] = v112;
      long long v113 = v108[5];
      v107[4] = v108[4];
      v107[5] = v113;
      long long v114 = v108[7];
      v107[6] = v108[6];
      v107[7] = v114;
      *((unsigned char *)v107 + 128) = *((unsigned char *)v108 + 128);
      *(_WORD *)((char *)v107 + 129) = *(_WORD *)((char *)v108 + 129);
      *((void *)v107 + 17) = *((void *)v108 + 17);
      long long v115 = v108[10];
      v107[9] = v108[9];
      v107[10] = v115;
      long long v116 = v108[12];
      v107[11] = v108[11];
      v107[12] = v116;
      long long v117 = v108[14];
      v107[13] = v108[13];
      v107[14] = v117;
      v107[15] = v108[15];
      uint64_t v118 = v109[24];
      uint64_t v119 = (char *)v107 + v118;
      uint64_t v120 = (char *)v108 + v118;
      if (__swift_getEnumTagSinglePayload((uint64_t)v108 + v118, 1, v10))
      {
        uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v119, v120, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v10);
      }
      uint64_t v122 = v109[25];
      uint64_t v123 = (char *)v107 + v122;
      uint64_t v124 = (char *)v108 + v122;
      if (__swift_getEnumTagSinglePayload((uint64_t)v108 + v122, 1, v10))
      {
        uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v123, v124, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v10);
      }
      uint64_t v126 = v109[26];
      uint64_t v127 = (char *)v107 + v126;
      uint64_t v128 = (char *)v108 + v126;
      uint64_t v129 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v129))
      {
        uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
        __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v129);
      }
      uint64_t v15 = (_OWORD *)v290;
      __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, (uint64_t)v109);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v131 = v17[10];
    uint64_t v132 = (_OWORD *)((char *)v15 + v131);
    uint64_t v133 = (_OWORD *)((char *)v16 + v131);
    uint64_t v134 = (int *)type metadata accessor for Trip(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, (uint64_t)v134))
    {
      uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
      memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
    }
    else
    {
      long long v136 = v133[1];
      *uint64_t v132 = *v133;
      v132[1] = v136;
      long long v137 = v133[3];
      v132[2] = v133[2];
      v132[3] = v137;
      long long v138 = v133[5];
      v132[4] = v133[4];
      v132[5] = v138;
      long long v139 = v133[7];
      v132[6] = v133[6];
      v132[7] = v139;
      *((unsigned char *)v132 + 128) = *((unsigned char *)v133 + 128);
      *(_WORD *)((char *)v132 + 129) = *(_WORD *)((char *)v133 + 129);
      *((void *)v132 + 17) = *((void *)v133 + 17);
      long long v140 = v133[10];
      v132[9] = v133[9];
      v132[10] = v140;
      long long v141 = v133[12];
      v132[11] = v133[11];
      v132[12] = v141;
      v132[13] = v133[13];
      uint64_t v142 = v134[22];
      uint64_t v143 = (char *)v132 + v142;
      uint64_t v144 = (char *)v133 + v142;
      if (__swift_getEnumTagSinglePayload((uint64_t)v133 + v142, 1, v10))
      {
        uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v143, v144, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v10);
      }
      uint64_t v146 = v134[23];
      uint64_t v147 = (char *)v132 + v146;
      uint64_t v148 = (char *)v133 + v146;
      if (__swift_getEnumTagSinglePayload((uint64_t)v133 + v146, 1, v10))
      {
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v147, v148, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, v10);
      }
      uint64_t v150 = v134[24];
      uint64_t v151 = (char *)v132 + v150;
      uint64_t v152 = (char *)v133 + v150;
      *(void *)uint64_t v151 = *(void *)v152;
      v151[8] = v152[8];
      uint64_t v153 = v134[25];
      uint64_t v154 = (char *)v132 + v153;
      uint64_t v155 = (char *)v133 + v153;
      uint64_t v156 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, v156))
      {
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
        __swift_storeEnumTagSinglePayload((uint64_t)v154, 0, 1, v156);
      }
      uint64_t v15 = (_OWORD *)v290;
      __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, (uint64_t)v134);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v158 = v17[11];
    uint64_t v159 = (_OWORD *)((char *)v15 + v158);
    uint64_t v160 = (_OWORD *)((char *)v16 + v158);
    uint64_t v161 = (int *)type metadata accessor for FlightReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v160, 1, (uint64_t)v161))
    {
      uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
      memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
    }
    else
    {
      long long v163 = v160[1];
      *uint64_t v159 = *v160;
      v159[1] = v163;
      long long v164 = v160[3];
      v159[2] = v160[2];
      v159[3] = v164;
      long long v165 = v160[5];
      v159[4] = v160[4];
      v159[5] = v165;
      *((unsigned char *)v159 + 96) = *((unsigned char *)v160 + 96);
      *(_OWORD *)((char *)v159 + 104) = *(_OWORD *)((char *)v160 + 104);
      uint64_t v166 = v161[13];
      long long v167 = (char *)v159 + v166;
      uint64_t v168 = (char *)v160 + v166;
      uint64_t v169 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v168, 1, v169))
      {
        uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 32))(v167, v168, v169);
        __swift_storeEnumTagSinglePayload((uint64_t)v167, 0, 1, v169);
      }
      uint64_t v171 = v161[14];
      uint64_t v172 = (char *)v159 + v171;
      uint64_t v173 = (char *)v160 + v171;
      uint64_t v289 = v3;
      if (__swift_getEnumTagSinglePayload((uint64_t)v160 + v171, 1, v169))
      {
        uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 32))(v172, v173, v169);
        __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v169);
      }
      *(_OWORD *)((char *)v159 + v161[15]) = *(_OWORD *)((char *)v160 + v161[15]);
      *(_OWORD *)((char *)v159 + v161[16]) = *(_OWORD *)((char *)v160 + v161[16]);
      *(_OWORD *)((char *)v159 + v161[17]) = *(_OWORD *)((char *)v160 + v161[17]);
      uint64_t v175 = v161[18];
      uint64_t v176 = (char *)v159 + v175;
      uint64_t v177 = (char *)v160 + v175;
      uint64_t v178 = type metadata accessor for DateComponents();
      uint64_t v179 = *(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32);
      v179(v176, v177, v178);
      v179((char *)v159 + v161[19], (char *)v160 + v161[19], v178);
      *(_OWORD *)((char *)v159 + v161[20]) = *(_OWORD *)((char *)v160 + v161[20]);
      *(_OWORD *)((char *)v159 + v161[21]) = *(_OWORD *)((char *)v160 + v161[21]);
      *(_OWORD *)((char *)v159 + v161[22]) = *(_OWORD *)((char *)v160 + v161[22]);
      *(_OWORD *)((char *)v159 + v161[23]) = *(_OWORD *)((char *)v160 + v161[23]);
      *(_OWORD *)((char *)v159 + v161[24]) = *(_OWORD *)((char *)v160 + v161[24]);
      *(_OWORD *)((char *)v159 + v161[25]) = *(_OWORD *)((char *)v160 + v161[25]);
      *(_OWORD *)((char *)v159 + v161[26]) = *(_OWORD *)((char *)v160 + v161[26]);
      *(_OWORD *)((char *)v159 + v161[27]) = *(_OWORD *)((char *)v160 + v161[27]);
      *(_OWORD *)((char *)v159 + v161[28]) = *(_OWORD *)((char *)v160 + v161[28]);
      *(_OWORD *)((char *)v159 + v161[29]) = *(_OWORD *)((char *)v160 + v161[29]);
      *(_OWORD *)((char *)v159 + v161[30]) = *(_OWORD *)((char *)v160 + v161[30]);
      *(_OWORD *)((char *)v159 + v161[31]) = *(_OWORD *)((char *)v160 + v161[31]);
      *(_OWORD *)((char *)v159 + v161[32]) = *(_OWORD *)((char *)v160 + v161[32]);
      *(void *)((char *)v159 + v161[33]) = *(void *)((char *)v160 + v161[33]);
      *(void *)((char *)v159 + v161[34]) = *(void *)((char *)v160 + v161[34]);
      *(_OWORD *)((char *)v159 + v161[35]) = *(_OWORD *)((char *)v160 + v161[35]);
      *(_OWORD *)((char *)v159 + v161[36]) = *(_OWORD *)((char *)v160 + v161[36]);
      *(_OWORD *)((char *)v159 + v161[37]) = *(_OWORD *)((char *)v160 + v161[37]);
      uint64_t v180 = v161[38];
      uint64_t v181 = (char *)v159 + v180;
      uint64_t v182 = (char *)v160 + v180;
      if (__swift_getEnumTagSinglePayload((uint64_t)v160 + v180, 1, v10))
      {
        uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v181, v182, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v10);
      }
      uint64_t v3 = v289;
      uint64_t v15 = (_OWORD *)v290;
      *(_OWORD *)((char *)v159 + v161[39]) = *(_OWORD *)((char *)v160 + v161[39]);
      *(_OWORD *)((char *)v159 + v161[40]) = *(_OWORD *)((char *)v160 + v161[40]);
      uint64_t v184 = v161[41];
      uint64_t v185 = (char *)v159 + v184;
      uint64_t v186 = (char *)v160 + v184;
      *(void *)uint64_t v185 = *(void *)v186;
      v185[8] = v186[8];
      *(_OWORD *)((char *)v159 + v161[42]) = *(_OWORD *)((char *)v160 + v161[42]);
      uint64_t v187 = v161[43];
      uint64_t v188 = (char *)v159 + v187;
      uint64_t v189 = (char *)v160 + v187;
      *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
      *(void *)(v188 + 13) = *(void *)(v189 + 13);
      *(_OWORD *)((char *)v159 + v161[44]) = *(_OWORD *)((char *)v160 + v161[44]);
      *(_OWORD *)((char *)v159 + v161[45]) = *(_OWORD *)((char *)v160 + v161[45]);
      *(_OWORD *)((char *)v159 + v161[46]) = *(_OWORD *)((char *)v160 + v161[46]);
      *(_OWORD *)((char *)v159 + v161[47]) = *(_OWORD *)((char *)v160 + v161[47]);
      __swift_storeEnumTagSinglePayload((uint64_t)v159, 0, 1, (uint64_t)v161);
      uint64_t v16 = v291;
      uint64_t v17 = v292;
    }
    uint64_t v190 = v17[12];
    uint64_t v191 = (_OWORD *)((char *)v15 + v190);
    uint64_t v192 = (_OWORD *)((char *)v16 + v190);
    uint64_t v193 = (int *)type metadata accessor for HotelReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v192, 1, (uint64_t)v193))
    {
      uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
      memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
    }
    else
    {
      long long v195 = v192[1];
      *uint64_t v191 = *v192;
      v191[1] = v195;
      long long v196 = v192[3];
      v191[2] = v192[2];
      v191[3] = v196;
      long long v197 = v192[5];
      v191[4] = v192[4];
      v191[5] = v197;
      *((unsigned char *)v191 + 96) = *((unsigned char *)v192 + 96);
      *(_OWORD *)((char *)v191 + 104) = *(_OWORD *)((char *)v192 + 104);
      *(_OWORD *)((char *)v191 + 120) = *(_OWORD *)((char *)v192 + 120);
      uint64_t v198 = v193[14];
      uint64_t v199 = (char *)v191 + v198;
      uint64_t v200 = (char *)v192 + v198;
      uint64_t v201 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v201))
      {
        uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
        __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v201);
      }
      uint64_t v203 = v193[15];
      uint64_t v204 = (char *)v191 + v203;
      uint64_t v205 = (char *)v192 + v203;
      if (__swift_getEnumTagSinglePayload((uint64_t)v192 + v203, 1, v201))
      {
        uint64_t v206 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v204, v205, *(void *)(*(void *)(v206 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v204, v205, v201);
        __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v201);
      }
      uint64_t v17 = v292;
      *(_OWORD *)((char *)v191 + v193[16]) = *(_OWORD *)((char *)v192 + v193[16]);
      *(_OWORD *)((char *)v191 + v193[17]) = *(_OWORD *)((char *)v192 + v193[17]);
      *(_OWORD *)((char *)v191 + v193[18]) = *(_OWORD *)((char *)v192 + v193[18]);
      *(_OWORD *)((char *)v191 + v193[19]) = *(_OWORD *)((char *)v192 + v193[19]);
      *(_OWORD *)((char *)v191 + v193[20]) = *(_OWORD *)((char *)v192 + v193[20]);
      *(void *)((char *)v191 + v193[21]) = *(void *)((char *)v192 + v193[21]);
      *(void *)((char *)v191 + v193[22]) = *(void *)((char *)v192 + v193[22]);
      uint64_t v207 = v193[23];
      uint64_t v208 = (char *)v191 + v207;
      uint64_t v209 = (char *)v192 + v207;
      v208[8] = v209[8];
      *(void *)uint64_t v208 = *(void *)v209;
      uint64_t v210 = v193[24];
      uint64_t v211 = (char *)v191 + v210;
      uint64_t v212 = (char *)v192 + v210;
      v211[8] = v212[8];
      *(void *)uint64_t v211 = *(void *)v212;
      *(_OWORD *)((char *)v191 + v193[25]) = *(_OWORD *)((char *)v192 + v193[25]);
      *(_OWORD *)((char *)v191 + v193[26]) = *(_OWORD *)((char *)v192 + v193[26]);
      *(_OWORD *)((char *)v191 + v193[27]) = *(_OWORD *)((char *)v192 + v193[27]);
      *(_OWORD *)((char *)v191 + v193[28]) = *(_OWORD *)((char *)v192 + v193[28]);
      uint64_t v213 = v193[29];
      uint64_t v214 = (char *)v191 + v213;
      uint64_t v215 = (char *)v192 + v213;
      *(void *)uint64_t v214 = *(void *)v215;
      v214[8] = v215[8];
      __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, (uint64_t)v193);
      uint64_t v15 = (_OWORD *)v290;
      uint64_t v16 = v291;
    }
    uint64_t v216 = v17[13];
    uint64_t v217 = (_OWORD *)((char *)v15 + v216);
    uint64_t v218 = (_OWORD *)((char *)v16 + v216);
    uint64_t v219 = (int *)type metadata accessor for RestaurantReservation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v218, 1, (uint64_t)v219))
    {
      uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
      memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
    }
    else
    {
      long long v221 = v218[1];
      _OWORD *v217 = *v218;
      v217[1] = v221;
      long long v222 = v218[3];
      v217[2] = v218[2];
      v217[3] = v222;
      long long v223 = v218[5];
      v217[4] = v218[4];
      v217[5] = v223;
      *((unsigned char *)v217 + 96) = *((unsigned char *)v218 + 96);
      *(_OWORD *)((char *)v217 + 104) = *(_OWORD *)((char *)v218 + 104);
      *(_OWORD *)((char *)v217 + 120) = *(_OWORD *)((char *)v218 + 120);
      uint64_t v224 = v219[14];
      uint64_t v225 = (char *)v217 + v224;
      long long v226 = (char *)v218 + v224;
      uint64_t v227 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v226, 1, v227))
      {
        uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v225, v226, v227);
        __swift_storeEnumTagSinglePayload((uint64_t)v225, 0, 1, v227);
      }
      *(_OWORD *)((char *)v217 + v219[15]) = *(_OWORD *)((char *)v218 + v219[15]);
      *(_OWORD *)((char *)v217 + v219[16]) = *(_OWORD *)((char *)v218 + v219[16]);
      *(_OWORD *)((char *)v217 + v219[17]) = *(_OWORD *)((char *)v218 + v219[17]);
      *(_OWORD *)((char *)v217 + v219[18]) = *(_OWORD *)((char *)v218 + v219[18]);
      *(_OWORD *)((char *)v217 + v219[19]) = *(_OWORD *)((char *)v218 + v219[19]);
      *(void *)((char *)v217 + v219[20]) = *(void *)((char *)v218 + v219[20]);
      *(_OWORD *)((char *)v217 + v219[21]) = *(_OWORD *)((char *)v218 + v219[21]);
      *(_OWORD *)((char *)v217 + v219[22]) = *(_OWORD *)((char *)v218 + v219[22]);
      *(_OWORD *)((char *)v217 + v219[23]) = *(_OWORD *)((char *)v218 + v219[23]);
      __swift_storeEnumTagSinglePayload((uint64_t)v217, 0, 1, (uint64_t)v219);
      uint64_t v17 = v292;
    }
    __swift_storeEnumTagSinglePayload(v290, 0, 1, (uint64_t)v17);
  }
  uint64_t v229 = v3[18];
  uint64_t v230 = (_OWORD *)(a1 + v229);
  uint64_t v231 = (_OWORD *)(a2 + v229);
  uint64_t v232 = (int *)type metadata accessor for PreExtractedCard(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, (uint64_t)v232))
  {
    uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v230, v231, *(void *)(*(void *)(v233 - 8) + 64));
  }
  else
  {
    long long v234 = v231[1];
    *uint64_t v230 = *v231;
    v230[1] = v234;
    long long v235 = v231[3];
    v230[2] = v231[2];
    v230[3] = v235;
    long long v236 = v231[5];
    v230[4] = v231[4];
    v230[5] = v236;
    uint64_t v237 = v232[10];
    uint64_t v238 = (char *)v230 + v237;
    uint64_t v239 = (char *)v231 + v237;
    if (__swift_getEnumTagSinglePayload((uint64_t)v231 + v237, 1, v10))
    {
      uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v238, v239, *(void *)(*(void *)(v240 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v238, v239, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v238, 0, 1, v10);
    }
    uint64_t v241 = v232[11];
    uint64_t v242 = (char *)v230 + v241;
    uint64_t v243 = (char *)v231 + v241;
    if (__swift_getEnumTagSinglePayload((uint64_t)v231 + v241, 1, v10))
    {
      uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v242, v243, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v10);
    }
    *(_OWORD *)((char *)v230 + v232[12]) = *(_OWORD *)((char *)v231 + v232[12]);
    *(_OWORD *)((char *)v230 + v232[13]) = *(_OWORD *)((char *)v231 + v232[13]);
    *(_OWORD *)((char *)v230 + v232[14]) = *(_OWORD *)((char *)v231 + v232[14]);
    uint64_t v245 = v232[15];
    uint64_t v246 = (char *)v230 + v245;
    uint64_t v247 = (char *)v231 + v245;
    if (__swift_getEnumTagSinglePayload((uint64_t)v231 + v245, 1, v10))
    {
      uint64_t v248 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v246, v247, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, v10);
    }
    *(_OWORD *)((char *)v230 + v232[16]) = *(_OWORD *)((char *)v231 + v232[16]);
    *(_OWORD *)((char *)v230 + v232[17]) = *(_OWORD *)((char *)v231 + v232[17]);
    *(_OWORD *)((char *)v230 + v232[18]) = *(_OWORD *)((char *)v231 + v232[18]);
    *(_OWORD *)((char *)v230 + v232[19]) = *(_OWORD *)((char *)v231 + v232[19]);
    *(_OWORD *)((char *)v230 + v232[20]) = *(_OWORD *)((char *)v231 + v232[20]);
    *(_OWORD *)((char *)v230 + v232[21]) = *(_OWORD *)((char *)v231 + v232[21]);
    *(_OWORD *)((char *)v230 + v232[22]) = *(_OWORD *)((char *)v231 + v232[22]);
    *(_OWORD *)((char *)v230 + v232[23]) = *(_OWORD *)((char *)v231 + v232[23]);
    __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, (uint64_t)v232);
  }
  uint64_t v249 = v3[19];
  uint64_t v250 = (_OWORD *)(a1 + v249);
  uint64_t v251 = (_OWORD *)(a2 + v249);
  uint64_t v252 = (int *)type metadata accessor for PreExtractedContact(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v251, 1, (uint64_t)v252))
  {
    uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v250, v251, *(void *)(*(void *)(v253 - 8) + 64));
  }
  else
  {
    long long v254 = v251[1];
    _OWORD *v250 = *v251;
    v250[1] = v254;
    long long v255 = v251[3];
    v250[2] = v251[2];
    v250[3] = v255;
    long long v256 = v251[5];
    v250[4] = v251[4];
    v250[5] = v256;
    uint64_t v257 = v252[11];
    uint64_t v258 = (char *)v250 + v257;
    uint64_t v259 = (char *)v251 + v257;
    if (__swift_getEnumTagSinglePayload((uint64_t)v251 + v257, 1, v10))
    {
      uint64_t v260 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v258, v259, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v258, 0, 1, v10);
    }
    *(_OWORD *)((char *)v250 + v252[12]) = *(_OWORD *)((char *)v251 + v252[12]);
    *(void *)((char *)v250 + v252[13]) = *(void *)((char *)v251 + v252[13]);
    uint64_t v261 = v252[14];
    uint64_t v262 = (char *)v250 + v261;
    uint64_t v263 = (char *)v251 + v261;
    if (__swift_getEnumTagSinglePayload((uint64_t)v251 + v261, 1, v10))
    {
      uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v262, v263, *(void *)(*(void *)(v264 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v262, v263, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v262, 0, 1, v10);
    }
    *(void *)((char *)v250 + v252[15]) = *(void *)((char *)v251 + v252[15]);
    *(void *)((char *)v250 + v252[16]) = *(void *)((char *)v251 + v252[16]);
    *(_OWORD *)((char *)v250 + v252[17]) = *(_OWORD *)((char *)v251 + v252[17]);
    *(void *)((char *)v250 + v252[18]) = *(void *)((char *)v251 + v252[18]);
    *(void *)((char *)v250 + v252[19]) = *(void *)((char *)v251 + v252[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v250, 0, 1, (uint64_t)v252);
  }
  uint64_t v265 = v3[20];
  uint64_t v266 = (_OWORD *)(a1 + v265);
  uint64_t v267 = (_OWORD *)(a2 + v265);
  uint64_t v268 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v267, 1, (uint64_t)v268))
  {
    uint64_t v269 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v266, v267, *(void *)(*(void *)(v269 - 8) + 64));
  }
  else
  {
    long long v270 = v267[1];
    *uint64_t v266 = *v267;
    v266[1] = v270;
    long long v271 = v267[3];
    v266[2] = v267[2];
    v266[3] = v271;
    uint64_t v272 = v268[8];
    uint64_t v273 = (char *)v266 + v272;
    uint64_t v274 = (char *)v267 + v272;
    uint64_t v275 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v274, 1, v275))
    {
      uint64_t v276 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v273, v274, *(void *)(*(void *)(v276 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 32))(v273, v274, v275);
      __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, v275);
    }
    *(_OWORD *)((char *)v266 + v268[9]) = *(_OWORD *)((char *)v267 + v268[9]);
    *(_OWORD *)((char *)v266 + v268[10]) = *(_OWORD *)((char *)v267 + v268[10]);
    *(_OWORD *)((char *)v266 + v268[11]) = *(_OWORD *)((char *)v267 + v268[11]);
    uint64_t v277 = v268[12];
    uint64_t v278 = (char *)v266 + v277;
    uint64_t v279 = (char *)v267 + v277;
    if (__swift_getEnumTagSinglePayload((uint64_t)v267 + v277, 1, v10))
    {
      uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v278, v279, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v278, 0, 1, v10);
    }
    uint64_t v281 = v268[13];
    uint64_t v282 = (char *)v266 + v281;
    uint64_t v283 = (char *)v267 + v281;
    if (__swift_getEnumTagSinglePayload((uint64_t)v267 + v281, 1, v10))
    {
      uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v282, v283, *(void *)(*(void *)(v284 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v282, v283, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v282, 0, 1, v10);
    }
    uint64_t v285 = v268[14];
    uint64_t v286 = (char *)v266 + v285;
    int v287 = (char *)v267 + v285;
    *(void *)uint64_t v286 = *(void *)v287;
    v286[8] = v287[8];
    *(_OWORD *)((char *)v266 + v268[15]) = *(_OWORD *)((char *)v267 + v268[15]);
    *(_OWORD *)((char *)v266 + v268[16]) = *(_OWORD *)((char *)v267 + v268[16]);
    *(_OWORD *)((char *)v266 + v268[17]) = *(_OWORD *)((char *)v267 + v268[17]);
    *(_OWORD *)((char *)v266 + v268[18]) = *(_OWORD *)((char *)v267 + v268[18]);
    *(_OWORD *)((char *)v266 + v268[19]) = *(_OWORD *)((char *)v267 + v268[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, (uint64_t)v268);
  }
  memcpy((void *)(a1 + v3[21]), (const void *)(a2 + v3[21]), 0x90uLL);
  return a1;
}

void *assignWithTake for Photo(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[10];
  a1[9] = a2[9];
  a1[10] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_7:
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[16];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[17];
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (uint64_t)a2 + v23;
  long long v26 = (int *)type metadata accessor for PartialExtractedAttributes(0);
  int v27 = __swift_getEnumTagSinglePayload(v24, 1, (uint64_t)v26);
  __src = (char *)v25;
  int v28 = __swift_getEnumTagSinglePayload(v25, 1, (uint64_t)v26);
  v1272 = v26;
  if (v27)
  {
    if (!v28)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      uint64_t v29 = v26[5];
      long long v30 = (_OWORD *)(v24 + v29);
      uint64_t v31 = &__src[v29];
      uint64_t v32 = type metadata accessor for RentalCarReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        uint64_t v34 = v1272;
      }
      else
      {
        uint64_t v57 = v24;
        long long v58 = *((_OWORD *)v31 + 1);
        _OWORD *v30 = *(_OWORD *)v31;
        v30[1] = v58;
        long long v59 = *((_OWORD *)v31 + 3);
        v30[2] = *((_OWORD *)v31 + 2);
        v30[3] = v59;
        long long v60 = *((_OWORD *)v31 + 5);
        v30[4] = *((_OWORD *)v31 + 4);
        v30[5] = v60;
        long long v61 = *((_OWORD *)v31 + 7);
        v30[6] = *((_OWORD *)v31 + 6);
        v30[7] = v61;
        *((unsigned char *)v30 + 128) = v31[128];
        *(_WORD *)((char *)v30 + 129) = *(_WORD *)(v31 + 129);
        *((void *)v30 + 17) = *((void *)v31 + 17);
        long long v62 = *((_OWORD *)v31 + 10);
        v30[9] = *((_OWORD *)v31 + 9);
        v30[10] = v62;
        long long v63 = *((_OWORD *)v31 + 12);
        v30[11] = *((_OWORD *)v31 + 11);
        v30[12] = v63;
        long long v64 = *((_OWORD *)v31 + 14);
        v30[13] = *((_OWORD *)v31 + 13);
        v30[14] = v64;
        v30[15] = *((_OWORD *)v31 + 15);
        *((void *)v30 + 32) = *((void *)v31 + 32);
        *(_OWORD *)((char *)v30 + 264) = *(_OWORD *)(v31 + 264);
        *(_OWORD *)((char *)v30 + 280) = *(_OWORD *)(v31 + 280);
        *(_OWORD *)((char *)v30 + 296) = *(_OWORD *)(v31 + 296);
        *(_OWORD *)((char *)v30 + 312) = *(_OWORD *)(v31 + 312);
        *(_OWORD *)((char *)v30 + 328) = *(_OWORD *)(v31 + 328);
        *(_OWORD *)((char *)v30 + 344) = *(_OWORD *)(v31 + 344);
        *(_OWORD *)((char *)v30 + 360) = *(_OWORD *)(v31 + 360);
        *((unsigned char *)v30 + 384) = v31[384];
        *((void *)v30 + 47) = *((void *)v31 + 47);
        *(_OWORD *)((char *)v30 + 392) = *(_OWORD *)(v31 + 392);
        *(_OWORD *)((char *)v30 + 408) = *(_OWORD *)(v31 + 408);
        uint64_t v65 = *(int *)(v32 + 140);
        long long v66 = (char *)v30 + v65;
        long long v67 = &v31[v65];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v65], 1, v13))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v66, v67, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v13);
        }
        uint64_t v70 = *(int *)(v32 + 144);
        uint64_t v71 = (char *)v30 + v70;
        uint64_t v72 = &v31[v70];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v70], 1, v13))
        {
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v71, v72, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v13);
        }
        uint64_t v34 = v1272;
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
        uint64_t v24 = v57;
      }
      uint64_t v74 = v34[6];
      uint64_t v75 = (_OWORD *)(v24 + v74);
      uint64_t v76 = &__src[v74];
      uint64_t v77 = type metadata accessor for TicketedTransportation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
      {
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        uint64_t v79 = v1272;
      }
      else
      {
        uint64_t v80 = v24;
        long long v81 = *((_OWORD *)v76 + 1);
        *uint64_t v75 = *(_OWORD *)v76;
        v75[1] = v81;
        long long v82 = *((_OWORD *)v76 + 3);
        v75[2] = *((_OWORD *)v76 + 2);
        v75[3] = v82;
        long long v83 = *((_OWORD *)v76 + 5);
        v75[4] = *((_OWORD *)v76 + 4);
        v75[5] = v83;
        long long v84 = *((_OWORD *)v76 + 7);
        v75[6] = *((_OWORD *)v76 + 6);
        v75[7] = v84;
        *((unsigned char *)v75 + 128) = v76[128];
        *(_WORD *)((char *)v75 + 129) = *(_WORD *)(v76 + 129);
        *((void *)v75 + 17) = *((void *)v76 + 17);
        long long v85 = *((_OWORD *)v76 + 10);
        v75[9] = *((_OWORD *)v76 + 9);
        v75[10] = v85;
        long long v86 = *((_OWORD *)v76 + 12);
        v75[11] = *((_OWORD *)v76 + 11);
        v75[12] = v86;
        *((void *)v75 + 26) = *((void *)v76 + 26);
        *(_OWORD *)((char *)v75 + 216) = *(_OWORD *)(v76 + 216);
        *(_OWORD *)((char *)v75 + 232) = *(_OWORD *)(v76 + 232);
        *(_OWORD *)((char *)v75 + 248) = *(_OWORD *)(v76 + 248);
        *(_OWORD *)((char *)v75 + 264) = *(_OWORD *)(v76 + 264);
        *((unsigned char *)v75 + 296) = v76[296];
        uint64_t v87 = *((void *)v76 + 36);
        *((void *)v75 + 35) = *((void *)v76 + 35);
        *((void *)v75 + 36) = v87;
        uint64_t v88 = *(int *)(v77 + 112);
        uint64_t v89 = (char *)v75 + v88;
        long long v90 = &v76[v88];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v76[v88], 1, v13))
        {
          uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v89, v90, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v13);
        }
        uint64_t v92 = *(int *)(v77 + 116);
        long long v93 = (char *)v75 + v92;
        long long v94 = &v76[v92];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v76[v92], 1, v13))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v93, v94, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v13);
        }
        uint64_t v79 = v1272;
        __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
        uint64_t v24 = v80;
      }
      uint64_t v96 = v79[7];
      long long v97 = (_OWORD *)(v24 + v96);
      uint64_t v98 = &__src[v96];
      uint64_t v99 = (int *)type metadata accessor for TicketedShow(0);
      uint64_t v1270 = v24;
      if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, (uint64_t)v99))
      {
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
        memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        long long v101 = *((_OWORD *)v98 + 1);
        *long long v97 = *(_OWORD *)v98;
        v97[1] = v101;
        long long v102 = *((_OWORD *)v98 + 3);
        v97[2] = *((_OWORD *)v98 + 2);
        v97[3] = v102;
        long long v103 = *((_OWORD *)v98 + 5);
        v97[4] = *((_OWORD *)v98 + 4);
        v97[5] = v103;
        long long v104 = *((_OWORD *)v98 + 7);
        v97[6] = *((_OWORD *)v98 + 6);
        v97[7] = v104;
        *((unsigned char *)v97 + 128) = v98[128];
        *(_WORD *)((char *)v97 + 129) = *(_WORD *)(v98 + 129);
        *((void *)v97 + 17) = *((void *)v98 + 17);
        long long v105 = *((_OWORD *)v98 + 10);
        v97[9] = *((_OWORD *)v98 + 9);
        v97[10] = v105;
        long long v106 = *((_OWORD *)v98 + 12);
        v97[11] = *((_OWORD *)v98 + 11);
        v97[12] = v106;
        long long v107 = *((_OWORD *)v98 + 14);
        v97[13] = *((_OWORD *)v98 + 13);
        v97[14] = v107;
        *((void *)v97 + 30) = *((void *)v98 + 30);
        *(_OWORD *)((char *)v97 + 248) = *(_OWORD *)(v98 + 248);
        *(_OWORD *)((char *)v97 + 264) = *(_OWORD *)(v98 + 264);
        *((unsigned char *)v97 + 296) = v98[296];
        uint64_t v108 = *((void *)v98 + 36);
        *((void *)v97 + 35) = *((void *)v98 + 35);
        *((void *)v97 + 36) = v108;
        v97[19] = *((_OWORD *)v98 + 19);
        uint64_t v109 = v99[29];
        uint64_t v110 = (char *)v97 + v109;
        long long v111 = &v98[v109];
        uint64_t v112 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v112))
        {
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v112);
        }
        *(_OWORD *)((char *)v97 + v99[30]) = *(_OWORD *)&v98[v99[30]];
        uint64_t v114 = v99[31];
        long long v115 = (char *)v97 + v114;
        long long v116 = &v98[v114];
        uint64_t v79 = v1272;
        if (__swift_getEnumTagSinglePayload((uint64_t)&v98[v114], 1, v13))
        {
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v115, v116, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v13);
        }
        uint64_t v118 = v99[32];
        uint64_t v119 = (char *)v97 + v118;
        uint64_t v120 = &v98[v118];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v98[v118], 1, v13))
        {
          uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v119, v120, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v13);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, (uint64_t)v99);
        uint64_t v24 = v1270;
      }
      uint64_t v122 = v79[8];
      uint64_t v123 = (_OWORD *)(v24 + v122);
      uint64_t v124 = &__src[v122];
      uint64_t v125 = type metadata accessor for Appointment(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, v125))
      {
        uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
        memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
        uint64_t v127 = v1272;
      }
      else
      {
        uint64_t v128 = v24;
        long long v129 = *((_OWORD *)v124 + 1);
        *uint64_t v123 = *(_OWORD *)v124;
        v123[1] = v129;
        long long v130 = *((_OWORD *)v124 + 3);
        v123[2] = *((_OWORD *)v124 + 2);
        v123[3] = v130;
        long long v131 = *((_OWORD *)v124 + 5);
        v123[4] = *((_OWORD *)v124 + 4);
        v123[5] = v131;
        long long v132 = *((_OWORD *)v124 + 7);
        v123[6] = *((_OWORD *)v124 + 6);
        v123[7] = v132;
        *((unsigned char *)v123 + 128) = v124[128];
        *(_WORD *)((char *)v123 + 129) = *(_WORD *)(v124 + 129);
        *((void *)v123 + 17) = *((void *)v124 + 17);
        long long v133 = *((_OWORD *)v124 + 10);
        v123[9] = *((_OWORD *)v124 + 9);
        v123[10] = v133;
        long long v134 = *((_OWORD *)v124 + 12);
        v123[11] = *((_OWORD *)v124 + 11);
        v123[12] = v134;
        long long v135 = *((_OWORD *)v124 + 14);
        v123[13] = *((_OWORD *)v124 + 13);
        v123[14] = v135;
        long long v136 = *((_OWORD *)v124 + 16);
        v123[15] = *((_OWORD *)v124 + 15);
        v123[16] = v136;
        *((unsigned char *)v123 + 280) = v124[280];
        *((void *)v123 + 34) = *((void *)v124 + 34);
        v123[18] = *((_OWORD *)v124 + 18);
        uint64_t v137 = *(int *)(v125 + 108);
        long long v138 = (char *)v123 + v137;
        long long v139 = &v124[v137];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v124[v137], 1, v13))
        {
          uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v138, v139, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v13);
        }
        uint64_t v141 = *(int *)(v125 + 112);
        uint64_t v142 = (char *)v123 + v141;
        uint64_t v143 = &v124[v141];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v124[v141], 1, v13))
        {
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v142, v143, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v13);
        }
        uint64_t v127 = v1272;
        __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v125);
        uint64_t v24 = v128;
      }
      uint64_t v145 = v127[9];
      uint64_t v146 = (_OWORD *)(v24 + v145);
      uint64_t v147 = &__src[v145];
      uint64_t v148 = (int *)type metadata accessor for Party(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v147, 1, (uint64_t)v148))
      {
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
        memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        long long v150 = *((_OWORD *)v147 + 1);
        _OWORD *v146 = *(_OWORD *)v147;
        v146[1] = v150;
        long long v151 = *((_OWORD *)v147 + 3);
        v146[2] = *((_OWORD *)v147 + 2);
        v146[3] = v151;
        long long v152 = *((_OWORD *)v147 + 5);
        v146[4] = *((_OWORD *)v147 + 4);
        v146[5] = v152;
        long long v153 = *((_OWORD *)v147 + 7);
        v146[6] = *((_OWORD *)v147 + 6);
        v146[7] = v153;
        *((unsigned char *)v146 + 128) = v147[128];
        *(_WORD *)((char *)v146 + 129) = *(_WORD *)(v147 + 129);
        *((void *)v146 + 17) = *((void *)v147 + 17);
        long long v154 = *((_OWORD *)v147 + 10);
        v146[9] = *((_OWORD *)v147 + 9);
        v146[10] = v154;
        long long v155 = *((_OWORD *)v147 + 12);
        v146[11] = *((_OWORD *)v147 + 11);
        v146[12] = v155;
        long long v156 = *((_OWORD *)v147 + 14);
        v146[13] = *((_OWORD *)v147 + 13);
        v146[14] = v156;
        v146[15] = *((_OWORD *)v147 + 15);
        uint64_t v157 = v148[24];
        uint64_t v158 = (char *)v146 + v157;
        uint64_t v159 = &v147[v157];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v147[v157], 1, v13))
        {
          uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v158, v159, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v158, 0, 1, v13);
        }
        uint64_t v161 = v148[25];
        uint64_t v162 = (char *)v146 + v161;
        long long v163 = &v147[v161];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v147[v161], 1, v13))
        {
          uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v162, v163, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v13);
        }
        uint64_t v165 = v148[26];
        uint64_t v166 = (char *)v146 + v165;
        long long v167 = &v147[v165];
        uint64_t v168 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v168))
        {
          uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v166, v167, v168);
          __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v168);
        }
        uint64_t v127 = v1272;
        __swift_storeEnumTagSinglePayload((uint64_t)v146, 0, 1, (uint64_t)v148);
        uint64_t v24 = v1270;
      }
      uint64_t v170 = v127[10];
      uint64_t v171 = (_OWORD *)(v24 + v170);
      uint64_t v172 = &__src[v170];
      uint64_t v173 = (int *)type metadata accessor for Trip(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v172, 1, (uint64_t)v173))
      {
        uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
        memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
      }
      else
      {
        long long v175 = *((_OWORD *)v172 + 1);
        *uint64_t v171 = *(_OWORD *)v172;
        v171[1] = v175;
        long long v176 = *((_OWORD *)v172 + 3);
        v171[2] = *((_OWORD *)v172 + 2);
        v171[3] = v176;
        long long v177 = *((_OWORD *)v172 + 5);
        v171[4] = *((_OWORD *)v172 + 4);
        v171[5] = v177;
        long long v178 = *((_OWORD *)v172 + 7);
        v171[6] = *((_OWORD *)v172 + 6);
        v171[7] = v178;
        *((unsigned char *)v171 + 128) = v172[128];
        *(_WORD *)((char *)v171 + 129) = *(_WORD *)(v172 + 129);
        *((void *)v171 + 17) = *((void *)v172 + 17);
        long long v179 = *((_OWORD *)v172 + 10);
        v171[9] = *((_OWORD *)v172 + 9);
        v171[10] = v179;
        long long v180 = *((_OWORD *)v172 + 12);
        v171[11] = *((_OWORD *)v172 + 11);
        v171[12] = v180;
        v171[13] = *((_OWORD *)v172 + 13);
        uint64_t v181 = v173[22];
        uint64_t v182 = (char *)v171 + v181;
        uint64_t v183 = &v172[v181];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v172[v181], 1, v13))
        {
          uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v182, v183, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v182, 0, 1, v13);
        }
        uint64_t v185 = v173[23];
        uint64_t v186 = (char *)v171 + v185;
        uint64_t v187 = &v172[v185];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v172[v185], 1, v13))
        {
          uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v186, v187, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, v13);
        }
        uint64_t v189 = v173[24];
        uint64_t v190 = (char *)v171 + v189;
        uint64_t v191 = &v172[v189];
        *(void *)uint64_t v190 = *(void *)v191;
        v190[8] = v191[8];
        uint64_t v192 = v173[25];
        uint64_t v193 = (char *)v171 + v192;
        uint64_t v194 = &v172[v192];
        uint64_t v195 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v194, 1, v195))
        {
          uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
          __swift_storeEnumTagSinglePayload((uint64_t)v193, 0, 1, v195);
        }
        uint64_t v127 = v1272;
        __swift_storeEnumTagSinglePayload((uint64_t)v171, 0, 1, (uint64_t)v173);
        uint64_t v24 = v1270;
      }
      uint64_t v197 = v127[11];
      uint64_t v198 = (_OWORD *)(v24 + v197);
      uint64_t v199 = &__src[v197];
      uint64_t v200 = (int *)type metadata accessor for FlightReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, (uint64_t)v200))
      {
        uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
      }
      else
      {
        long long v202 = *((_OWORD *)v199 + 1);
        *uint64_t v198 = *(_OWORD *)v199;
        v198[1] = v202;
        long long v203 = *((_OWORD *)v199 + 3);
        v198[2] = *((_OWORD *)v199 + 2);
        v198[3] = v203;
        long long v204 = *((_OWORD *)v199 + 5);
        v198[4] = *((_OWORD *)v199 + 4);
        v198[5] = v204;
        *((unsigned char *)v198 + 96) = v199[96];
        *(_OWORD *)((char *)v198 + 104) = *(_OWORD *)(v199 + 104);
        uint64_t v205 = v200[13];
        uint64_t v206 = (char *)v198 + v205;
        uint64_t v207 = &v199[v205];
        uint64_t v208 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v207, 1, v208))
        {
          uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v206, v207, *(void *)(*(void *)(v209 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
          __swift_storeEnumTagSinglePayload((uint64_t)v206, 0, 1, v208);
        }
        uint64_t v210 = v200[14];
        uint64_t v211 = (char *)v198 + v210;
        uint64_t v212 = &v199[v210];
        uint64_t v1263 = v13;
        if (__swift_getEnumTagSinglePayload((uint64_t)&v199[v210], 1, v208))
        {
          uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 32))(v211, v212, v208);
          __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v208);
        }
        *(_OWORD *)((char *)v198 + v200[15]) = *(_OWORD *)&v199[v200[15]];
        *(_OWORD *)((char *)v198 + v200[16]) = *(_OWORD *)&v199[v200[16]];
        *(_OWORD *)((char *)v198 + v200[17]) = *(_OWORD *)&v199[v200[17]];
        uint64_t v214 = v200[18];
        uint64_t v215 = (char *)v198 + v214;
        uint64_t v216 = &v199[v214];
        uint64_t v217 = type metadata accessor for DateComponents();
        uint64_t v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32);
        v218(v215, v216, v217);
        v218((char *)v198 + v200[19], &v199[v200[19]], v217);
        *(_OWORD *)((char *)v198 + v200[20]) = *(_OWORD *)&v199[v200[20]];
        *(_OWORD *)((char *)v198 + v200[21]) = *(_OWORD *)&v199[v200[21]];
        *(_OWORD *)((char *)v198 + v200[22]) = *(_OWORD *)&v199[v200[22]];
        *(_OWORD *)((char *)v198 + v200[23]) = *(_OWORD *)&v199[v200[23]];
        *(_OWORD *)((char *)v198 + v200[24]) = *(_OWORD *)&v199[v200[24]];
        *(_OWORD *)((char *)v198 + v200[25]) = *(_OWORD *)&v199[v200[25]];
        *(_OWORD *)((char *)v198 + v200[26]) = *(_OWORD *)&v199[v200[26]];
        *(_OWORD *)((char *)v198 + v200[27]) = *(_OWORD *)&v199[v200[27]];
        *(_OWORD *)((char *)v198 + v200[28]) = *(_OWORD *)&v199[v200[28]];
        *(_OWORD *)((char *)v198 + v200[29]) = *(_OWORD *)&v199[v200[29]];
        *(_OWORD *)((char *)v198 + v200[30]) = *(_OWORD *)&v199[v200[30]];
        *(_OWORD *)((char *)v198 + v200[31]) = *(_OWORD *)&v199[v200[31]];
        *(_OWORD *)((char *)v198 + v200[32]) = *(_OWORD *)&v199[v200[32]];
        *(void *)((char *)v198 + v200[33]) = *(void *)&v199[v200[33]];
        *(void *)((char *)v198 + v200[34]) = *(void *)&v199[v200[34]];
        *(_OWORD *)((char *)v198 + v200[35]) = *(_OWORD *)&v199[v200[35]];
        *(_OWORD *)((char *)v198 + v200[36]) = *(_OWORD *)&v199[v200[36]];
        *(_OWORD *)((char *)v198 + v200[37]) = *(_OWORD *)&v199[v200[37]];
        uint64_t v219 = v200[38];
        uint64_t v220 = (char *)v198 + v219;
        long long v221 = &v199[v219];
        uint64_t v13 = v1263;
        if (__swift_getEnumTagSinglePayload((uint64_t)&v199[v219], 1, v1263))
        {
          uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1263 - 8) + 32))(v220, v221, v1263);
          __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v1263);
        }
        uint64_t v127 = v1272;
        *(_OWORD *)((char *)v198 + v200[39]) = *(_OWORD *)&v199[v200[39]];
        *(_OWORD *)((char *)v198 + v200[40]) = *(_OWORD *)&v199[v200[40]];
        uint64_t v223 = v200[41];
        uint64_t v224 = (char *)v198 + v223;
        uint64_t v225 = &v199[v223];
        *(void *)uint64_t v224 = *(void *)v225;
        v224[8] = v225[8];
        *(_OWORD *)((char *)v198 + v200[42]) = *(_OWORD *)&v199[v200[42]];
        uint64_t v226 = v200[43];
        uint64_t v227 = (char *)v198 + v226;
        uint64_t v228 = &v199[v226];
        *(_OWORD *)uint64_t v227 = *(_OWORD *)v228;
        *(void *)(v227 + 13) = *(void *)(v228 + 13);
        *(_OWORD *)((char *)v198 + v200[44]) = *(_OWORD *)&v199[v200[44]];
        *(_OWORD *)((char *)v198 + v200[45]) = *(_OWORD *)&v199[v200[45]];
        *(_OWORD *)((char *)v198 + v200[46]) = *(_OWORD *)&v199[v200[46]];
        *(_OWORD *)((char *)v198 + v200[47]) = *(_OWORD *)&v199[v200[47]];
        __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, (uint64_t)v200);
        uint64_t v24 = v1270;
      }
      uint64_t v229 = v127[12];
      uint64_t v230 = (_OWORD *)(v24 + v229);
      uint64_t v231 = &__src[v229];
      uint64_t v232 = (int *)type metadata accessor for HotelReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, (uint64_t)v232))
      {
        uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
        memcpy(v230, v231, *(void *)(*(void *)(v233 - 8) + 64));
      }
      else
      {
        long long v234 = *((_OWORD *)v231 + 1);
        *uint64_t v230 = *(_OWORD *)v231;
        v230[1] = v234;
        long long v235 = *((_OWORD *)v231 + 3);
        v230[2] = *((_OWORD *)v231 + 2);
        v230[3] = v235;
        long long v236 = *((_OWORD *)v231 + 5);
        v230[4] = *((_OWORD *)v231 + 4);
        v230[5] = v236;
        *((unsigned char *)v230 + 96) = v231[96];
        *(_OWORD *)((char *)v230 + 104) = *(_OWORD *)(v231 + 104);
        *(_OWORD *)((char *)v230 + 120) = *(_OWORD *)(v231 + 120);
        uint64_t v237 = v232[14];
        uint64_t v238 = (char *)v230 + v237;
        uint64_t v239 = &v231[v237];
        uint64_t v240 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v239, 1, v240))
        {
          uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v238, v239, *(void *)(*(void *)(v241 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
          __swift_storeEnumTagSinglePayload((uint64_t)v238, 0, 1, v240);
        }
        uint64_t v242 = v232[15];
        uint64_t v243 = (char *)v230 + v242;
        uint64_t v244 = &v231[v242];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v231[v242], 1, v240))
        {
          uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v243, v244, v240);
          __swift_storeEnumTagSinglePayload((uint64_t)v243, 0, 1, v240);
        }
        uint64_t v127 = v1272;
        *(_OWORD *)((char *)v230 + v232[16]) = *(_OWORD *)&v231[v232[16]];
        *(_OWORD *)((char *)v230 + v232[17]) = *(_OWORD *)&v231[v232[17]];
        *(_OWORD *)((char *)v230 + v232[18]) = *(_OWORD *)&v231[v232[18]];
        *(_OWORD *)((char *)v230 + v232[19]) = *(_OWORD *)&v231[v232[19]];
        *(_OWORD *)((char *)v230 + v232[20]) = *(_OWORD *)&v231[v232[20]];
        *(void *)((char *)v230 + v232[21]) = *(void *)&v231[v232[21]];
        *(void *)((char *)v230 + v232[22]) = *(void *)&v231[v232[22]];
        uint64_t v246 = v232[23];
        uint64_t v247 = (char *)v230 + v246;
        uint64_t v248 = &v231[v246];
        v247[8] = v248[8];
        *(void *)uint64_t v247 = *(void *)v248;
        uint64_t v249 = v232[24];
        uint64_t v250 = (char *)v230 + v249;
        uint64_t v251 = &v231[v249];
        v250[8] = v251[8];
        *(void *)uint64_t v250 = *(void *)v251;
        *(_OWORD *)((char *)v230 + v232[25]) = *(_OWORD *)&v231[v232[25]];
        *(_OWORD *)((char *)v230 + v232[26]) = *(_OWORD *)&v231[v232[26]];
        *(_OWORD *)((char *)v230 + v232[27]) = *(_OWORD *)&v231[v232[27]];
        *(_OWORD *)((char *)v230 + v232[28]) = *(_OWORD *)&v231[v232[28]];
        uint64_t v252 = v232[29];
        uint64_t v253 = (char *)v230 + v252;
        long long v254 = &v231[v252];
        *(void *)uint64_t v253 = *(void *)v254;
        v253[8] = v254[8];
        __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, (uint64_t)v232);
        uint64_t v24 = v1270;
      }
      uint64_t v255 = v127[13];
      long long v256 = (_OWORD *)(v24 + v255);
      uint64_t v257 = &__src[v255];
      uint64_t v258 = (int *)type metadata accessor for RestaurantReservation(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v257, 1, (uint64_t)v258))
      {
        uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
        memcpy(v256, v257, *(void *)(*(void *)(v259 - 8) + 64));
      }
      else
      {
        v1266 = a3;
        uint64_t v260 = v24;
        long long v261 = *((_OWORD *)v257 + 1);
        *long long v256 = *(_OWORD *)v257;
        v256[1] = v261;
        long long v262 = *((_OWORD *)v257 + 3);
        v256[2] = *((_OWORD *)v257 + 2);
        v256[3] = v262;
        long long v263 = *((_OWORD *)v257 + 5);
        v256[4] = *((_OWORD *)v257 + 4);
        v256[5] = v263;
        *((unsigned char *)v256 + 96) = v257[96];
        *(_OWORD *)((char *)v256 + 104) = *(_OWORD *)(v257 + 104);
        *(_OWORD *)((char *)v256 + 120) = *(_OWORD *)(v257 + 120);
        uint64_t v264 = v258[14];
        uint64_t v265 = (char *)v256 + v264;
        uint64_t v266 = &v257[v264];
        uint64_t v267 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v266, 1, v267))
        {
          uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v265, v266, *(void *)(*(void *)(v268 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32))(v265, v266, v267);
          __swift_storeEnumTagSinglePayload((uint64_t)v265, 0, 1, v267);
        }
        *(_OWORD *)((char *)v256 + v258[15]) = *(_OWORD *)&v257[v258[15]];
        *(_OWORD *)((char *)v256 + v258[16]) = *(_OWORD *)&v257[v258[16]];
        *(_OWORD *)((char *)v256 + v258[17]) = *(_OWORD *)&v257[v258[17]];
        *(_OWORD *)((char *)v256 + v258[18]) = *(_OWORD *)&v257[v258[18]];
        *(_OWORD *)((char *)v256 + v258[19]) = *(_OWORD *)&v257[v258[19]];
        *(void *)((char *)v256 + v258[20]) = *(void *)&v257[v258[20]];
        *(_OWORD *)((char *)v256 + v258[21]) = *(_OWORD *)&v257[v258[21]];
        *(_OWORD *)((char *)v256 + v258[22]) = *(_OWORD *)&v257[v258[22]];
        *(_OWORD *)((char *)v256 + v258[23]) = *(_OWORD *)&v257[v258[23]];
        __swift_storeEnumTagSinglePayload((uint64_t)v256, 0, 1, (uint64_t)v258);
        uint64_t v24 = v260;
        a3 = v1266;
      }
      uint64_t v269 = (uint64_t)v1272;
      uint64_t v270 = v24;
      goto LABEL_112;
    }
    goto LABEL_13;
  }
  if (v28)
  {
    outlined destroy of EmailDocument(v24, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
LABEL_13:
    size_t v35 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?)
                                - 8)
                    + 64);
    uint64_t v36 = (void *)v24;
    uint64_t v37 = (const void *)v25;
LABEL_14:
    memcpy(v36, v37, v35);
    goto LABEL_113;
  }
  uint64_t v38 = *(void *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = v26[5];
  uint64_t v40 = v24 + v39;
  uint64_t v41 = (uint64_t)&__src[v39];
  uint64_t v42 = type metadata accessor for RentalCarReservation(0);
  int v43 = __swift_getEnumTagSinglePayload(v40, 1, v42);
  int v44 = __swift_getEnumTagSinglePayload(v41, 1, v42);
  if (v43)
  {
    if (!v44)
    {
      uint64_t v45 = v24;
      long long v46 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v46;
      long long v47 = *(_OWORD *)(v41 + 48);
      *(_OWORD *)(v40 + 32) = *(_OWORD *)(v41 + 32);
      *(_OWORD *)(v40 + 48) = v47;
      long long v48 = *(_OWORD *)(v41 + 80);
      *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
      *(_OWORD *)(v40 + 80) = v48;
      long long v49 = *(_OWORD *)(v41 + 112);
      *(_OWORD *)(v40 + 96) = *(_OWORD *)(v41 + 96);
      *(_OWORD *)(v40 + 112) = v49;
      *(unsigned char *)(v40 + 128) = *(unsigned char *)(v41 + 128);
      *(_WORD *)(v40 + 129) = *(_WORD *)(v41 + 129);
      *(void *)(v40 + 136) = *(void *)(v41 + 136);
      long long v50 = *(_OWORD *)(v41 + 160);
      *(_OWORD *)(v40 + 144) = *(_OWORD *)(v41 + 144);
      *(_OWORD *)(v40 + 160) = v50;
      long long v51 = *(_OWORD *)(v41 + 192);
      *(_OWORD *)(v40 + 176) = *(_OWORD *)(v41 + 176);
      *(_OWORD *)(v40 + 192) = v51;
      long long v52 = *(_OWORD *)(v41 + 224);
      *(_OWORD *)(v40 + 208) = *(_OWORD *)(v41 + 208);
      *(_OWORD *)(v40 + 224) = v52;
      *(_OWORD *)(v40 + 240) = *(_OWORD *)(v41 + 240);
      *(void *)(v40 + 256) = *(void *)(v41 + 256);
      *(_OWORD *)(v40 + 264) = *(_OWORD *)(v41 + 264);
      *(_OWORD *)(v40 + 280) = *(_OWORD *)(v41 + 280);
      *(_OWORD *)(v40 + 296) = *(_OWORD *)(v41 + 296);
      *(_OWORD *)(v40 + 312) = *(_OWORD *)(v41 + 312);
      *(_OWORD *)(v40 + 328) = *(_OWORD *)(v41 + 328);
      *(_OWORD *)(v40 + 344) = *(_OWORD *)(v41 + 344);
      *(_OWORD *)(v40 + 360) = *(_OWORD *)(v41 + 360);
      *(unsigned char *)(v40 + 384) = *(unsigned char *)(v41 + 384);
      *(void *)(v40 + 376) = *(void *)(v41 + 376);
      *(_OWORD *)(v40 + 392) = *(_OWORD *)(v41 + 392);
      *(_OWORD *)(v40 + 408) = *(_OWORD *)(v41 + 408);
      uint64_t v53 = *(int *)(v42 + 140);
      uint64_t v54 = (void *)(v40 + v53);
      uint64_t v55 = (const void *)(v41 + v53);
      if (__swift_getEnumTagSinglePayload(v41 + v53, 1, v13))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v54, v55, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v13);
      }
      uint64_t v553 = *(int *)(v42 + 144);
      uint64_t v554 = (void *)(v40 + v553);
      uint64_t v555 = (const void *)(v41 + v553);
      if (__swift_getEnumTagSinglePayload(v41 + v553, 1, v13))
      {
        uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v554, v555, *(void *)(*(void *)(v556 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v554, v555, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v554, 0, 1, v13);
      }
      __swift_storeEnumTagSinglePayload(v40, 0, 1, v42);
      uint64_t v24 = v45;
      goto LABEL_239;
    }
LABEL_24:
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
    memcpy((void *)v40, (const void *)v41, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_240;
  }
  if (v44)
  {
    outlined destroy of EmailDocument(v40, (void (*)(void))type metadata accessor for RentalCarReservation);
    goto LABEL_24;
  }
  uint64_t v484 = *(void *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  *(void *)(v40 + 8) = v484;
  swift_bridgeObjectRelease();
  uint64_t v485 = *(void *)(v41 + 24);
  *(void *)(v40 + 16) = *(void *)(v41 + 16);
  *(void *)(v40 + 24) = v485;
  swift_bridgeObjectRelease();
  uint64_t v486 = *(void *)(v41 + 40);
  *(void *)(v40 + 32) = *(void *)(v41 + 32);
  *(void *)(v40 + 40) = v486;
  swift_bridgeObjectRelease();
  uint64_t v487 = *(void *)(v41 + 56);
  *(void *)(v40 + 48) = *(void *)(v41 + 48);
  *(void *)(v40 + 56) = v487;
  swift_bridgeObjectRelease();
  uint64_t v488 = *(void *)(v41 + 72);
  *(void *)(v40 + 64) = *(void *)(v41 + 64);
  *(void *)(v40 + 72) = v488;
  swift_bridgeObjectRelease();
  uint64_t v489 = *(void *)(v41 + 88);
  *(void *)(v40 + 80) = *(void *)(v41 + 80);
  *(void *)(v40 + 88) = v489;
  swift_bridgeObjectRelease();
  uint64_t v490 = *(void *)(v41 + 104);
  *(void *)(v40 + 96) = *(void *)(v41 + 96);
  *(void *)(v40 + 104) = v490;
  swift_bridgeObjectRelease();
  uint64_t v491 = *(void *)(v41 + 120);
  *(void *)(v40 + 112) = *(void *)(v41 + 112);
  *(void *)(v40 + 120) = v491;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v40 + 128) = *(unsigned char *)(v41 + 128);
  *(unsigned char *)(v40 + 129) = *(unsigned char *)(v41 + 129);
  *(unsigned char *)(v40 + 130) = *(unsigned char *)(v41 + 130);
  *(void *)(v40 + 136) = *(void *)(v41 + 136);
  swift_bridgeObjectRelease();
  uint64_t v492 = *(void *)(v41 + 152);
  *(void *)(v40 + 144) = *(void *)(v41 + 144);
  *(void *)(v40 + 152) = v492;
  swift_bridgeObjectRelease();
  uint64_t v493 = *(void *)(v41 + 168);
  *(void *)(v40 + 160) = *(void *)(v41 + 160);
  *(void *)(v40 + 168) = v493;
  swift_bridgeObjectRelease();
  uint64_t v494 = *(void *)(v41 + 184);
  *(void *)(v40 + 176) = *(void *)(v41 + 176);
  *(void *)(v40 + 184) = v494;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 192) = *(void *)(v41 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v40 + 200) = *(void *)(v41 + 200);
  swift_bridgeObjectRelease();
  uint64_t v495 = *(void *)(v41 + 216);
  *(void *)(v40 + 208) = *(void *)(v41 + 208);
  *(void *)(v40 + 216) = v495;
  swift_bridgeObjectRelease();
  uint64_t v496 = *(void *)(v41 + 232);
  *(void *)(v40 + 224) = *(void *)(v41 + 224);
  *(void *)(v40 + 232) = v496;
  swift_bridgeObjectRelease();
  uint64_t v497 = *(void *)(v41 + 248);
  *(void *)(v40 + 240) = *(void *)(v41 + 240);
  *(void *)(v40 + 248) = v497;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 256) = *(void *)(v41 + 256);
  swift_bridgeObjectRelease();
  uint64_t v498 = *(void *)(v41 + 272);
  *(void *)(v40 + 264) = *(void *)(v41 + 264);
  *(void *)(v40 + 272) = v498;
  swift_bridgeObjectRelease();
  uint64_t v499 = *(void *)(v41 + 288);
  *(void *)(v40 + 280) = *(void *)(v41 + 280);
  *(void *)(v40 + 288) = v499;
  swift_bridgeObjectRelease();
  uint64_t v500 = *(void *)(v41 + 304);
  *(void *)(v40 + 296) = *(void *)(v41 + 296);
  *(void *)(v40 + 304) = v500;
  swift_bridgeObjectRelease();
  uint64_t v501 = *(void *)(v41 + 320);
  *(void *)(v40 + 312) = *(void *)(v41 + 312);
  *(void *)(v40 + 320) = v501;
  swift_bridgeObjectRelease();
  uint64_t v502 = *(void *)(v41 + 336);
  *(void *)(v40 + 328) = *(void *)(v41 + 328);
  *(void *)(v40 + 336) = v502;
  swift_bridgeObjectRelease();
  uint64_t v503 = *(void *)(v41 + 352);
  *(void *)(v40 + 344) = *(void *)(v41 + 344);
  *(void *)(v40 + 352) = v503;
  swift_bridgeObjectRelease();
  uint64_t v504 = *(void *)(v41 + 368);
  *(void *)(v40 + 360) = *(void *)(v41 + 360);
  *(void *)(v40 + 368) = v504;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 376) = *(void *)(v41 + 376);
  *(unsigned char *)(v40 + 384) = *(unsigned char *)(v41 + 384);
  uint64_t v505 = *(void *)(v41 + 400);
  *(void *)(v40 + 392) = *(void *)(v41 + 392);
  *(void *)(v40 + 400) = v505;
  swift_bridgeObjectRelease();
  uint64_t v506 = *(void *)(v41 + 416);
  *(void *)(v40 + 408) = *(void *)(v41 + 408);
  *(void *)(v40 + 416) = v506;
  swift_bridgeObjectRelease();
  uint64_t v507 = *(int *)(v42 + 140);
  uint64_t v508 = (const void *)(v41 + v507);
  v1246 = (void *)(v40 + v507);
  int v509 = __swift_getEnumTagSinglePayload(v40 + v507, 1, v13);
  int v510 = __swift_getEnumTagSinglePayload((uint64_t)v508, 1, v13);
  if (v509)
  {
    if (v510)
    {
      size_t v511 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v512 = v1246;
LABEL_230:
      memcpy(v512, v508, v511);
      goto LABEL_233;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1246, v508, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v1246, 0, 1, v13);
  }
  else
  {
    uint64_t v557 = *(void *)(v13 - 8);
    if (v510)
    {
      (*(void (**)(void *, uint64_t))(v557 + 8))(v1246, v13);
      size_t v511 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v512 = v1246;
      goto LABEL_230;
    }
    (*(void (**)(void *, const void *, uint64_t))(v557 + 40))(v1246, v508, v13);
  }
LABEL_233:
  uint64_t v558 = *(int *)(v42 + 144);
  uint64_t v559 = (void *)(v40 + v558);
  uint64_t v560 = (const void *)(v41 + v558);
  int v561 = __swift_getEnumTagSinglePayload((uint64_t)v559, 1, v13);
  int v562 = __swift_getEnumTagSinglePayload((uint64_t)v560, 1, v13);
  if (!v561)
  {
    uint64_t v563 = *(void *)(v13 - 8);
    if (!v562)
    {
      (*(void (**)(void *, const void *, uint64_t))(v563 + 40))(v559, v560, v13);
      goto LABEL_239;
    }
    (*(void (**)(void *, uint64_t))(v563 + 8))(v559, v13);
    goto LABEL_238;
  }
  if (v562)
  {
LABEL_238:
    uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v559, v560, *(void *)(*(void *)(v564 - 8) + 64));
    goto LABEL_239;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v559, v560, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v559, 0, 1, v13);
LABEL_239:
  long long v26 = v1272;
LABEL_240:
  uint64_t v565 = v26[6];
  uint64_t v566 = v24 + v565;
  uint64_t v567 = (uint64_t)&__src[v565];
  uint64_t v568 = type metadata accessor for TicketedTransportation(0);
  int v569 = __swift_getEnumTagSinglePayload(v566, 1, v568);
  int v570 = __swift_getEnumTagSinglePayload(v567, 1, v568);
  if (v569)
  {
    if (!v570)
    {
      uint64_t v571 = v24;
      long long v572 = *(_OWORD *)(v567 + 16);
      *(_OWORD *)uint64_t v566 = *(_OWORD *)v567;
      *(_OWORD *)(v566 + 16) = v572;
      long long v573 = *(_OWORD *)(v567 + 48);
      *(_OWORD *)(v566 + 32) = *(_OWORD *)(v567 + 32);
      *(_OWORD *)(v566 + 48) = v573;
      long long v574 = *(_OWORD *)(v567 + 80);
      *(_OWORD *)(v566 + 64) = *(_OWORD *)(v567 + 64);
      *(_OWORD *)(v566 + 80) = v574;
      long long v575 = *(_OWORD *)(v567 + 112);
      *(_OWORD *)(v566 + 96) = *(_OWORD *)(v567 + 96);
      *(_OWORD *)(v566 + 112) = v575;
      *(unsigned char *)(v566 + 128) = *(unsigned char *)(v567 + 128);
      *(_WORD *)(v566 + 129) = *(_WORD *)(v567 + 129);
      *(void *)(v566 + 136) = *(void *)(v567 + 136);
      long long v576 = *(_OWORD *)(v567 + 160);
      *(_OWORD *)(v566 + 144) = *(_OWORD *)(v567 + 144);
      *(_OWORD *)(v566 + 160) = v576;
      long long v577 = *(_OWORD *)(v567 + 192);
      *(_OWORD *)(v566 + 176) = *(_OWORD *)(v567 + 176);
      *(_OWORD *)(v566 + 192) = v577;
      *(void *)(v566 + 208) = *(void *)(v567 + 208);
      *(_OWORD *)(v566 + 216) = *(_OWORD *)(v567 + 216);
      *(_OWORD *)(v566 + 232) = *(_OWORD *)(v567 + 232);
      *(_OWORD *)(v566 + 248) = *(_OWORD *)(v567 + 248);
      *(_OWORD *)(v566 + 264) = *(_OWORD *)(v567 + 264);
      *(unsigned char *)(v566 + 296) = *(unsigned char *)(v567 + 296);
      uint64_t v578 = *(void *)(v567 + 288);
      *(void *)(v566 + 280) = *(void *)(v567 + 280);
      *(void *)(v566 + 288) = v578;
      uint64_t v579 = *(int *)(v568 + 112);
      uint64_t v580 = (void *)(v566 + v579);
      uint64_t v581 = (const void *)(v567 + v579);
      if (__swift_getEnumTagSinglePayload(v567 + v579, 1, v13))
      {
        uint64_t v582 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v580, v581, *(void *)(*(void *)(v582 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v580, v581, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v580, 0, 1, v13);
      }
      uint64_t v605 = *(int *)(v568 + 116);
      uint64_t v606 = (void *)(v566 + v605);
      uint64_t v607 = (const void *)(v567 + v605);
      if (__swift_getEnumTagSinglePayload(v567 + v605, 1, v13))
      {
        uint64_t v608 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v606, v607, *(void *)(*(void *)(v608 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v606, v607, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v606, 0, 1, v13);
      }
      __swift_storeEnumTagSinglePayload(v566, 0, 1, v568);
      uint64_t v24 = v571;
      goto LABEL_267;
    }
LABEL_246:
    uint64_t v583 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
    memcpy((void *)v566, (const void *)v567, *(void *)(*(void *)(v583 - 8) + 64));
    goto LABEL_268;
  }
  if (v570)
  {
    outlined destroy of EmailDocument(v566, (void (*)(void))type metadata accessor for TicketedTransportation);
    goto LABEL_246;
  }
  uint64_t v584 = *(void *)(v567 + 8);
  *(void *)uint64_t v566 = *(void *)v567;
  *(void *)(v566 + 8) = v584;
  swift_bridgeObjectRelease();
  uint64_t v585 = *(void *)(v567 + 24);
  *(void *)(v566 + 16) = *(void *)(v567 + 16);
  *(void *)(v566 + 24) = v585;
  swift_bridgeObjectRelease();
  uint64_t v586 = *(void *)(v567 + 40);
  *(void *)(v566 + 32) = *(void *)(v567 + 32);
  *(void *)(v566 + 40) = v586;
  swift_bridgeObjectRelease();
  uint64_t v587 = *(void *)(v567 + 56);
  *(void *)(v566 + 48) = *(void *)(v567 + 48);
  *(void *)(v566 + 56) = v587;
  swift_bridgeObjectRelease();
  uint64_t v588 = *(void *)(v567 + 72);
  *(void *)(v566 + 64) = *(void *)(v567 + 64);
  *(void *)(v566 + 72) = v588;
  swift_bridgeObjectRelease();
  uint64_t v589 = *(void *)(v567 + 88);
  *(void *)(v566 + 80) = *(void *)(v567 + 80);
  *(void *)(v566 + 88) = v589;
  swift_bridgeObjectRelease();
  uint64_t v590 = *(void *)(v567 + 104);
  *(void *)(v566 + 96) = *(void *)(v567 + 96);
  *(void *)(v566 + 104) = v590;
  swift_bridgeObjectRelease();
  uint64_t v591 = *(void *)(v567 + 120);
  *(void *)(v566 + 112) = *(void *)(v567 + 112);
  *(void *)(v566 + 120) = v591;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v566 + 128) = *(unsigned char *)(v567 + 128);
  *(unsigned char *)(v566 + 129) = *(unsigned char *)(v567 + 129);
  *(unsigned char *)(v566 + 130) = *(unsigned char *)(v567 + 130);
  *(void *)(v566 + 136) = *(void *)(v567 + 136);
  swift_bridgeObjectRelease();
  uint64_t v592 = *(void *)(v567 + 152);
  *(void *)(v566 + 144) = *(void *)(v567 + 144);
  *(void *)(v566 + 152) = v592;
  swift_bridgeObjectRelease();
  uint64_t v593 = *(void *)(v567 + 168);
  *(void *)(v566 + 160) = *(void *)(v567 + 160);
  *(void *)(v566 + 168) = v593;
  swift_bridgeObjectRelease();
  uint64_t v594 = *(void *)(v567 + 184);
  *(void *)(v566 + 176) = *(void *)(v567 + 176);
  *(void *)(v566 + 184) = v594;
  swift_bridgeObjectRelease();
  *(void *)(v566 + 192) = *(void *)(v567 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v566 + 200) = *(void *)(v567 + 200);
  swift_bridgeObjectRelease();
  *(void *)(v566 + 208) = *(void *)(v567 + 208);
  swift_bridgeObjectRelease();
  uint64_t v595 = *(void *)(v567 + 224);
  *(void *)(v566 + 216) = *(void *)(v567 + 216);
  *(void *)(v566 + 224) = v595;
  swift_bridgeObjectRelease();
  uint64_t v596 = *(void *)(v567 + 240);
  *(void *)(v566 + 232) = *(void *)(v567 + 232);
  *(void *)(v566 + 240) = v596;
  swift_bridgeObjectRelease();
  uint64_t v597 = *(void *)(v567 + 256);
  *(void *)(v566 + 248) = *(void *)(v567 + 248);
  *(void *)(v566 + 256) = v597;
  swift_bridgeObjectRelease();
  uint64_t v598 = *(void *)(v567 + 272);
  *(void *)(v566 + 264) = *(void *)(v567 + 264);
  *(void *)(v566 + 272) = v598;
  swift_bridgeObjectRelease();
  *(void *)(v566 + 280) = *(void *)(v567 + 280);
  swift_bridgeObjectRelease();
  *(void *)(v566 + 288) = *(void *)(v567 + 288);
  *(unsigned char *)(v566 + 296) = *(unsigned char *)(v567 + 296);
  uint64_t v599 = *(int *)(v568 + 112);
  uint64_t v600 = (const void *)(v567 + v599);
  v1247 = (void *)(v566 + v599);
  int v601 = __swift_getEnumTagSinglePayload(v566 + v599, 1, v13);
  int v602 = __swift_getEnumTagSinglePayload((uint64_t)v600, 1, v13);
  if (v601)
  {
    if (v602)
    {
      size_t v603 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v604 = v1247;
LABEL_257:
      memcpy(v604, v600, v603);
      goto LABEL_261;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1247, v600, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v1247, 0, 1, v13);
  }
  else
  {
    uint64_t v609 = *(void *)(v13 - 8);
    if (v602)
    {
      (*(void (**)(void *, uint64_t))(v609 + 8))(v1247, v13);
      size_t v603 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v604 = v1247;
      goto LABEL_257;
    }
    (*(void (**)(void *, const void *, uint64_t))(v609 + 40))(v1247, v600, v13);
  }
LABEL_261:
  uint64_t v610 = *(int *)(v568 + 116);
  uint64_t v611 = (void *)(v566 + v610);
  uint64_t v612 = (const void *)(v567 + v610);
  int v613 = __swift_getEnumTagSinglePayload((uint64_t)v611, 1, v13);
  int v614 = __swift_getEnumTagSinglePayload((uint64_t)v612, 1, v13);
  if (!v613)
  {
    uint64_t v615 = *(void *)(v13 - 8);
    if (!v614)
    {
      (*(void (**)(void *, const void *, uint64_t))(v615 + 40))(v611, v612, v13);
      goto LABEL_267;
    }
    (*(void (**)(void *, uint64_t))(v615 + 8))(v611, v13);
    goto LABEL_266;
  }
  if (v614)
  {
LABEL_266:
    uint64_t v616 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v611, v612, *(void *)(*(void *)(v616 - 8) + 64));
    goto LABEL_267;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v611, v612, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v611, 0, 1, v13);
LABEL_267:
  long long v26 = v1272;
LABEL_268:
  uint64_t v617 = v26[7];
  uint64_t v618 = v24 + v617;
  uint64_t v619 = (uint64_t)&__src[v617];
  uint64_t v620 = (int *)type metadata accessor for TicketedShow(0);
  int v621 = __swift_getEnumTagSinglePayload(v618, 1, (uint64_t)v620);
  int v622 = __swift_getEnumTagSinglePayload(v619, 1, (uint64_t)v620);
  uint64_t v1271 = v24;
  if (!v621)
  {
    if (v622)
    {
      outlined destroy of EmailDocument(v618, (void (*)(void))type metadata accessor for TicketedShow);
      goto LABEL_274;
    }
    uint64_t v637 = *(void *)(v619 + 8);
    *(void *)uint64_t v618 = *(void *)v619;
    *(void *)(v618 + 8) = v637;
    swift_bridgeObjectRelease();
    uint64_t v638 = *(void *)(v619 + 24);
    *(void *)(v618 + 16) = *(void *)(v619 + 16);
    *(void *)(v618 + 24) = v638;
    swift_bridgeObjectRelease();
    uint64_t v639 = *(void *)(v619 + 40);
    *(void *)(v618 + 32) = *(void *)(v619 + 32);
    *(void *)(v618 + 40) = v639;
    swift_bridgeObjectRelease();
    uint64_t v640 = *(void *)(v619 + 56);
    *(void *)(v618 + 48) = *(void *)(v619 + 48);
    *(void *)(v618 + 56) = v640;
    swift_bridgeObjectRelease();
    uint64_t v641 = *(void *)(v619 + 72);
    *(void *)(v618 + 64) = *(void *)(v619 + 64);
    *(void *)(v618 + 72) = v641;
    swift_bridgeObjectRelease();
    uint64_t v642 = *(void *)(v619 + 88);
    *(void *)(v618 + 80) = *(void *)(v619 + 80);
    *(void *)(v618 + 88) = v642;
    swift_bridgeObjectRelease();
    uint64_t v643 = *(void *)(v619 + 104);
    *(void *)(v618 + 96) = *(void *)(v619 + 96);
    *(void *)(v618 + 104) = v643;
    swift_bridgeObjectRelease();
    uint64_t v644 = *(void *)(v619 + 120);
    *(void *)(v618 + 112) = *(void *)(v619 + 112);
    *(void *)(v618 + 120) = v644;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v618 + 128) = *(unsigned char *)(v619 + 128);
    *(unsigned char *)(v618 + 129) = *(unsigned char *)(v619 + 129);
    *(unsigned char *)(v618 + 130) = *(unsigned char *)(v619 + 130);
    *(void *)(v618 + 136) = *(void *)(v619 + 136);
    swift_bridgeObjectRelease();
    uint64_t v645 = *(void *)(v619 + 152);
    *(void *)(v618 + 144) = *(void *)(v619 + 144);
    *(void *)(v618 + 152) = v645;
    swift_bridgeObjectRelease();
    uint64_t v646 = *(void *)(v619 + 168);
    *(void *)(v618 + 160) = *(void *)(v619 + 160);
    *(void *)(v618 + 168) = v646;
    swift_bridgeObjectRelease();
    uint64_t v647 = *(void *)(v619 + 184);
    *(void *)(v618 + 176) = *(void *)(v619 + 176);
    *(void *)(v618 + 184) = v647;
    swift_bridgeObjectRelease();
    *(void *)(v618 + 192) = *(void *)(v619 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v618 + 200) = *(void *)(v619 + 200);
    swift_bridgeObjectRelease();
    uint64_t v648 = *(void *)(v619 + 216);
    *(void *)(v618 + 208) = *(void *)(v619 + 208);
    *(void *)(v618 + 216) = v648;
    swift_bridgeObjectRelease();
    uint64_t v649 = *(void *)(v619 + 232);
    *(void *)(v618 + 224) = *(void *)(v619 + 224);
    *(void *)(v618 + 232) = v649;
    swift_bridgeObjectRelease();
    *(void *)(v618 + 240) = *(void *)(v619 + 240);
    swift_bridgeObjectRelease();
    uint64_t v650 = *(void *)(v619 + 256);
    *(void *)(v618 + 248) = *(void *)(v619 + 248);
    *(void *)(v618 + 256) = v650;
    swift_bridgeObjectRelease();
    uint64_t v651 = *(void *)(v619 + 272);
    *(void *)(v618 + 264) = *(void *)(v619 + 264);
    *(void *)(v618 + 272) = v651;
    swift_bridgeObjectRelease();
    *(void *)(v618 + 280) = *(void *)(v619 + 280);
    swift_bridgeObjectRelease();
    *(void *)(v618 + 288) = *(void *)(v619 + 288);
    *(unsigned char *)(v618 + 296) = *(unsigned char *)(v619 + 296);
    uint64_t v652 = *(void *)(v619 + 312);
    *(void *)(v618 + 304) = *(void *)(v619 + 304);
    *(void *)(v618 + 312) = v652;
    swift_bridgeObjectRelease();
    v1258 = v620;
    uint64_t v653 = v620[29];
    uint64_t v654 = v618 + v653;
    uint64_t v655 = (const void *)(v619 + v653);
    uint64_t v656 = type metadata accessor for URL();
    v1248 = (void *)v654;
    LODWORD(v654) = __swift_getEnumTagSinglePayload(v654, 1, v656);
    int v657 = __swift_getEnumTagSinglePayload((uint64_t)v655, 1, v656);
    if (v654)
    {
      if (v657)
      {
        size_t v658 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        int v659 = v1248;
LABEL_288:
        memcpy(v659, v655, v658);
        goto LABEL_292;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v656 - 8) + 32))(v1248, v655, v656);
      __swift_storeEnumTagSinglePayload((uint64_t)v1248, 0, 1, v656);
    }
    else
    {
      uint64_t v668 = *(void *)(v656 - 8);
      if (v657)
      {
        (*(void (**)(void *, uint64_t))(v668 + 8))(v1248, v656);
        size_t v658 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        int v659 = v1248;
        goto LABEL_288;
      }
      (*(void (**)(void *, const void *, uint64_t))(v668 + 40))(v1248, v655, v656);
    }
LABEL_292:
    uint64_t v669 = v1258[30];
    uint64_t v670 = (void *)(v618 + v669);
    int v671 = (uint64_t *)(v619 + v669);
    uint64_t v673 = *v671;
    uint64_t v672 = v671[1];
    *uint64_t v670 = v673;
    v670[1] = v672;
    swift_bridgeObjectRelease();
    uint64_t v674 = v1258[31];
    uint64_t v675 = (void *)(v618 + v674);
    uint64_t v676 = (const void *)(v619 + v674);
    int v677 = __swift_getEnumTagSinglePayload(v618 + v674, 1, v13);
    int v678 = __swift_getEnumTagSinglePayload((uint64_t)v676, 1, v13);
    if (v677)
    {
      if (!v678)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v675, v676, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v675, 0, 1, v13);
        goto LABEL_298;
      }
    }
    else
    {
      uint64_t v679 = *(void *)(v13 - 8);
      if (!v678)
      {
        (*(void (**)(void *, const void *, uint64_t))(v679 + 40))(v675, v676, v13);
LABEL_298:
        uint64_t v681 = v1258[32];
        uint64_t v682 = (void *)(v618 + v681);
        int v683 = (const void *)(v619 + v681);
        int v684 = __swift_getEnumTagSinglePayload((uint64_t)v682, 1, v13);
        int v685 = __swift_getEnumTagSinglePayload((uint64_t)v683, 1, v13);
        if (v684)
        {
          if (!v685)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v682, v683, v13);
            __swift_storeEnumTagSinglePayload((uint64_t)v682, 0, 1, v13);
LABEL_304:
            long long v26 = v1272;
            goto LABEL_305;
          }
        }
        else
        {
          uint64_t v686 = *(void *)(v13 - 8);
          if (!v685)
          {
            (*(void (**)(void *, const void *, uint64_t))(v686 + 40))(v682, v683, v13);
            goto LABEL_304;
          }
          (*(void (**)(void *, uint64_t))(v686 + 8))(v682, v13);
        }
        uint64_t v687 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v682, v683, *(void *)(*(void *)(v687 - 8) + 64));
        goto LABEL_304;
      }
      (*(void (**)(void *, uint64_t))(v679 + 8))(v675, v13);
    }
    uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v675, v676, *(void *)(*(void *)(v680 - 8) + 64));
    goto LABEL_298;
  }
  if (v622)
  {
LABEL_274:
    uint64_t v636 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
    memcpy((void *)v618, (const void *)v619, *(void *)(*(void *)(v636 - 8) + 64));
    goto LABEL_305;
  }
  long long v623 = *(_OWORD *)(v619 + 16);
  *(_OWORD *)uint64_t v618 = *(_OWORD *)v619;
  *(_OWORD *)(v618 + 16) = v623;
  long long v624 = *(_OWORD *)(v619 + 48);
  *(_OWORD *)(v618 + 32) = *(_OWORD *)(v619 + 32);
  *(_OWORD *)(v618 + 48) = v624;
  long long v625 = *(_OWORD *)(v619 + 80);
  *(_OWORD *)(v618 + 64) = *(_OWORD *)(v619 + 64);
  *(_OWORD *)(v618 + 80) = v625;
  long long v626 = *(_OWORD *)(v619 + 112);
  *(_OWORD *)(v618 + 96) = *(_OWORD *)(v619 + 96);
  *(_OWORD *)(v618 + 112) = v626;
  *(unsigned char *)(v618 + 128) = *(unsigned char *)(v619 + 128);
  *(_WORD *)(v618 + 129) = *(_WORD *)(v619 + 129);
  *(void *)(v618 + 136) = *(void *)(v619 + 136);
  long long v627 = *(_OWORD *)(v619 + 160);
  *(_OWORD *)(v618 + 144) = *(_OWORD *)(v619 + 144);
  *(_OWORD *)(v618 + 160) = v627;
  long long v628 = *(_OWORD *)(v619 + 192);
  *(_OWORD *)(v618 + 176) = *(_OWORD *)(v619 + 176);
  *(_OWORD *)(v618 + 192) = v628;
  long long v629 = *(_OWORD *)(v619 + 224);
  *(_OWORD *)(v618 + 208) = *(_OWORD *)(v619 + 208);
  *(_OWORD *)(v618 + 224) = v629;
  *(void *)(v618 + 240) = *(void *)(v619 + 240);
  *(_OWORD *)(v618 + 248) = *(_OWORD *)(v619 + 248);
  *(_OWORD *)(v618 + 264) = *(_OWORD *)(v619 + 264);
  *(unsigned char *)(v618 + 296) = *(unsigned char *)(v619 + 296);
  uint64_t v630 = *(void *)(v619 + 288);
  *(void *)(v618 + 280) = *(void *)(v619 + 280);
  *(void *)(v618 + 288) = v630;
  *(_OWORD *)(v618 + 304) = *(_OWORD *)(v619 + 304);
  uint64_t v631 = v620[29];
  uint64_t v632 = (void *)(v618 + v631);
  uint64_t v633 = (const void *)(v619 + v631);
  uint64_t v634 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v633, 1, v634))
  {
    uint64_t v635 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v632, v633, *(void *)(*(void *)(v635 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v634 - 8) + 32))(v632, v633, v634);
    __swift_storeEnumTagSinglePayload((uint64_t)v632, 0, 1, v634);
  }
  *(_OWORD *)(v618 + v620[30]) = *(_OWORD *)(v619 + v620[30]);
  uint64_t v660 = v620[31];
  uint64_t v661 = (void *)(v618 + v660);
  uint64_t v662 = (const void *)(v619 + v660);
  long long v26 = v1272;
  if (__swift_getEnumTagSinglePayload(v619 + v660, 1, v13))
  {
    uint64_t v663 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v661, v662, *(void *)(*(void *)(v663 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v661, v662, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v661, 0, 1, v13);
  }
  uint64_t v664 = v620[32];
  uint64_t v665 = (void *)(v618 + v664);
  uint64_t v666 = (const void *)(v619 + v664);
  if (__swift_getEnumTagSinglePayload(v619 + v664, 1, v13))
  {
    uint64_t v667 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v665, v666, *(void *)(*(void *)(v667 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v665, v666, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v665, 0, 1, v13);
  }
  __swift_storeEnumTagSinglePayload(v618, 0, 1, (uint64_t)v620);
  uint64_t v24 = v1271;
LABEL_305:
  uint64_t v688 = v26[8];
  uint64_t v689 = v24 + v688;
  uint64_t v690 = (uint64_t)&__src[v688];
  uint64_t v691 = type metadata accessor for Appointment(0);
  int v692 = __swift_getEnumTagSinglePayload(v689, 1, v691);
  int v693 = __swift_getEnumTagSinglePayload(v690, 1, v691);
  if (v692)
  {
    if (!v693)
    {
      uint64_t v694 = v24;
      long long v695 = *(_OWORD *)(v690 + 16);
      *(_OWORD *)uint64_t v689 = *(_OWORD *)v690;
      *(_OWORD *)(v689 + 16) = v695;
      long long v696 = *(_OWORD *)(v690 + 48);
      *(_OWORD *)(v689 + 32) = *(_OWORD *)(v690 + 32);
      *(_OWORD *)(v689 + 48) = v696;
      long long v697 = *(_OWORD *)(v690 + 80);
      *(_OWORD *)(v689 + 64) = *(_OWORD *)(v690 + 64);
      *(_OWORD *)(v689 + 80) = v697;
      long long v698 = *(_OWORD *)(v690 + 112);
      *(_OWORD *)(v689 + 96) = *(_OWORD *)(v690 + 96);
      *(_OWORD *)(v689 + 112) = v698;
      *(unsigned char *)(v689 + 128) = *(unsigned char *)(v690 + 128);
      *(_WORD *)(v689 + 129) = *(_WORD *)(v690 + 129);
      *(void *)(v689 + 136) = *(void *)(v690 + 136);
      long long v699 = *(_OWORD *)(v690 + 160);
      *(_OWORD *)(v689 + 144) = *(_OWORD *)(v690 + 144);
      *(_OWORD *)(v689 + 160) = v699;
      long long v700 = *(_OWORD *)(v690 + 192);
      *(_OWORD *)(v689 + 176) = *(_OWORD *)(v690 + 176);
      *(_OWORD *)(v689 + 192) = v700;
      long long v701 = *(_OWORD *)(v690 + 224);
      *(_OWORD *)(v689 + 208) = *(_OWORD *)(v690 + 208);
      *(_OWORD *)(v689 + 224) = v701;
      long long v702 = *(_OWORD *)(v690 + 256);
      *(_OWORD *)(v689 + 240) = *(_OWORD *)(v690 + 240);
      *(_OWORD *)(v689 + 256) = v702;
      *(unsigned char *)(v689 + 280) = *(unsigned char *)(v690 + 280);
      *(void *)(v689 + 272) = *(void *)(v690 + 272);
      *(_OWORD *)(v689 + 288) = *(_OWORD *)(v690 + 288);
      uint64_t v703 = *(int *)(v691 + 108);
      int v704 = (void *)(v689 + v703);
      uint64_t v705 = (const void *)(v690 + v703);
      if (__swift_getEnumTagSinglePayload(v690 + v703, 1, v13))
      {
        uint64_t v706 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v704, v705, *(void *)(*(void *)(v706 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v704, v705, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v704, 0, 1, v13);
      }
      uint64_t v730 = *(int *)(v691 + 112);
      uint64_t v731 = (void *)(v689 + v730);
      uint64_t v732 = (const void *)(v690 + v730);
      if (__swift_getEnumTagSinglePayload(v690 + v730, 1, v13))
      {
        uint64_t v733 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v731, v732, *(void *)(*(void *)(v733 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v731, v732, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v731, 0, 1, v13);
      }
      __swift_storeEnumTagSinglePayload(v689, 0, 1, v691);
      uint64_t v24 = v694;
      goto LABEL_333;
    }
LABEL_311:
    uint64_t v707 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
    memcpy((void *)v689, (const void *)v690, *(void *)(*(void *)(v707 - 8) + 64));
    goto LABEL_334;
  }
  if (v693)
  {
    outlined destroy of EmailDocument(v689, (void (*)(void))type metadata accessor for Appointment);
    goto LABEL_311;
  }
  uint64_t v708 = *(void *)(v690 + 8);
  *(void *)uint64_t v689 = *(void *)v690;
  *(void *)(v689 + 8) = v708;
  swift_bridgeObjectRelease();
  uint64_t v709 = *(void *)(v690 + 24);
  *(void *)(v689 + 16) = *(void *)(v690 + 16);
  *(void *)(v689 + 24) = v709;
  swift_bridgeObjectRelease();
  uint64_t v710 = *(void *)(v690 + 40);
  *(void *)(v689 + 32) = *(void *)(v690 + 32);
  *(void *)(v689 + 40) = v710;
  swift_bridgeObjectRelease();
  uint64_t v711 = *(void *)(v690 + 56);
  *(void *)(v689 + 48) = *(void *)(v690 + 48);
  *(void *)(v689 + 56) = v711;
  swift_bridgeObjectRelease();
  uint64_t v712 = *(void *)(v690 + 72);
  *(void *)(v689 + 64) = *(void *)(v690 + 64);
  *(void *)(v689 + 72) = v712;
  swift_bridgeObjectRelease();
  uint64_t v713 = *(void *)(v690 + 88);
  *(void *)(v689 + 80) = *(void *)(v690 + 80);
  *(void *)(v689 + 88) = v713;
  swift_bridgeObjectRelease();
  uint64_t v714 = *(void *)(v690 + 104);
  *(void *)(v689 + 96) = *(void *)(v690 + 96);
  *(void *)(v689 + 104) = v714;
  swift_bridgeObjectRelease();
  uint64_t v715 = *(void *)(v690 + 120);
  *(void *)(v689 + 112) = *(void *)(v690 + 112);
  *(void *)(v689 + 120) = v715;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v689 + 128) = *(unsigned char *)(v690 + 128);
  *(unsigned char *)(v689 + 129) = *(unsigned char *)(v690 + 129);
  *(unsigned char *)(v689 + 130) = *(unsigned char *)(v690 + 130);
  *(void *)(v689 + 136) = *(void *)(v690 + 136);
  swift_bridgeObjectRelease();
  uint64_t v716 = *(void *)(v690 + 152);
  *(void *)(v689 + 144) = *(void *)(v690 + 144);
  *(void *)(v689 + 152) = v716;
  swift_bridgeObjectRelease();
  uint64_t v717 = *(void *)(v690 + 168);
  *(void *)(v689 + 160) = *(void *)(v690 + 160);
  *(void *)(v689 + 168) = v717;
  swift_bridgeObjectRelease();
  uint64_t v718 = *(void *)(v690 + 184);
  *(void *)(v689 + 176) = *(void *)(v690 + 176);
  *(void *)(v689 + 184) = v718;
  swift_bridgeObjectRelease();
  *(void *)(v689 + 192) = *(void *)(v690 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v689 + 200) = *(void *)(v690 + 200);
  swift_bridgeObjectRelease();
  uint64_t v719 = *(void *)(v690 + 216);
  *(void *)(v689 + 208) = *(void *)(v690 + 208);
  *(void *)(v689 + 216) = v719;
  swift_bridgeObjectRelease();
  uint64_t v720 = *(void *)(v690 + 232);
  *(void *)(v689 + 224) = *(void *)(v690 + 224);
  *(void *)(v689 + 232) = v720;
  swift_bridgeObjectRelease();
  uint64_t v721 = *(void *)(v690 + 248);
  *(void *)(v689 + 240) = *(void *)(v690 + 240);
  *(void *)(v689 + 248) = v721;
  swift_bridgeObjectRelease();
  uint64_t v722 = *(void *)(v690 + 264);
  *(void *)(v689 + 256) = *(void *)(v690 + 256);
  *(void *)(v689 + 264) = v722;
  swift_bridgeObjectRelease();
  *(void *)(v689 + 272) = *(void *)(v690 + 272);
  *(unsigned char *)(v689 + 280) = *(unsigned char *)(v690 + 280);
  uint64_t v723 = *(void *)(v690 + 296);
  *(void *)(v689 + 288) = *(void *)(v690 + 288);
  *(void *)(v689 + 296) = v723;
  swift_bridgeObjectRelease();
  uint64_t v724 = *(int *)(v691 + 108);
  uint64_t v725 = (const void *)(v690 + v724);
  v1249 = (void *)(v689 + v724);
  int v726 = __swift_getEnumTagSinglePayload(v689 + v724, 1, v13);
  int v727 = __swift_getEnumTagSinglePayload((uint64_t)v725, 1, v13);
  if (v726)
  {
    if (v727)
    {
      size_t v728 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v729 = v1249;
LABEL_322:
      memcpy(v729, v725, v728);
      goto LABEL_327;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1249, v725, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v1249, 0, 1, v13);
  }
  else
  {
    uint64_t v734 = *(void *)(v13 - 8);
    if (v727)
    {
      (*(void (**)(void *, uint64_t))(v734 + 8))(v1249, v13);
      size_t v728 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                   - 8)
                       + 64);
      uint64_t v729 = v1249;
      goto LABEL_322;
    }
    (*(void (**)(void *, const void *, uint64_t))(v734 + 40))(v1249, v725, v13);
  }
LABEL_327:
  uint64_t v735 = *(int *)(v691 + 112);
  int v736 = (void *)(v689 + v735);
  int v737 = (const void *)(v690 + v735);
  int v738 = __swift_getEnumTagSinglePayload((uint64_t)v736, 1, v13);
  int v739 = __swift_getEnumTagSinglePayload((uint64_t)v737, 1, v13);
  if (!v738)
  {
    uint64_t v740 = *(void *)(v13 - 8);
    if (!v739)
    {
      (*(void (**)(void *, const void *, uint64_t))(v740 + 40))(v736, v737, v13);
      goto LABEL_333;
    }
    (*(void (**)(void *, uint64_t))(v740 + 8))(v736, v13);
    goto LABEL_332;
  }
  if (v739)
  {
LABEL_332:
    uint64_t v741 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v736, v737, *(void *)(*(void *)(v741 - 8) + 64));
    goto LABEL_333;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v736, v737, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v736, 0, 1, v13);
LABEL_333:
  long long v26 = v1272;
LABEL_334:
  uint64_t v742 = v26[9];
  uint64_t v743 = v24 + v742;
  uint64_t v744 = (uint64_t)&__src[v742];
  int v745 = (int *)type metadata accessor for Party(0);
  int v746 = __swift_getEnumTagSinglePayload(v743, 1, (uint64_t)v745);
  int v747 = __swift_getEnumTagSinglePayload(v744, 1, (uint64_t)v745);
  if (!v746)
  {
    if (v747)
    {
      outlined destroy of EmailDocument(v743, (void (*)(void))type metadata accessor for Party);
      goto LABEL_340;
    }
    uint64_t v760 = *(void *)(v744 + 8);
    *(void *)uint64_t v743 = *(void *)v744;
    *(void *)(v743 + 8) = v760;
    swift_bridgeObjectRelease();
    uint64_t v761 = *(void *)(v744 + 24);
    *(void *)(v743 + 16) = *(void *)(v744 + 16);
    *(void *)(v743 + 24) = v761;
    swift_bridgeObjectRelease();
    uint64_t v762 = *(void *)(v744 + 40);
    *(void *)(v743 + 32) = *(void *)(v744 + 32);
    *(void *)(v743 + 40) = v762;
    swift_bridgeObjectRelease();
    uint64_t v763 = *(void *)(v744 + 56);
    *(void *)(v743 + 48) = *(void *)(v744 + 48);
    *(void *)(v743 + 56) = v763;
    swift_bridgeObjectRelease();
    uint64_t v764 = *(void *)(v744 + 72);
    *(void *)(v743 + 64) = *(void *)(v744 + 64);
    *(void *)(v743 + 72) = v764;
    swift_bridgeObjectRelease();
    uint64_t v765 = *(void *)(v744 + 88);
    *(void *)(v743 + 80) = *(void *)(v744 + 80);
    *(void *)(v743 + 88) = v765;
    swift_bridgeObjectRelease();
    uint64_t v766 = *(void *)(v744 + 104);
    *(void *)(v743 + 96) = *(void *)(v744 + 96);
    *(void *)(v743 + 104) = v766;
    swift_bridgeObjectRelease();
    uint64_t v767 = *(void *)(v744 + 120);
    *(void *)(v743 + 112) = *(void *)(v744 + 112);
    *(void *)(v743 + 120) = v767;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v743 + 128) = *(unsigned char *)(v744 + 128);
    *(unsigned char *)(v743 + 129) = *(unsigned char *)(v744 + 129);
    *(unsigned char *)(v743 + 130) = *(unsigned char *)(v744 + 130);
    *(void *)(v743 + 136) = *(void *)(v744 + 136);
    swift_bridgeObjectRelease();
    uint64_t v768 = *(void *)(v744 + 152);
    *(void *)(v743 + 144) = *(void *)(v744 + 144);
    *(void *)(v743 + 152) = v768;
    swift_bridgeObjectRelease();
    uint64_t v769 = *(void *)(v744 + 168);
    *(void *)(v743 + 160) = *(void *)(v744 + 160);
    *(void *)(v743 + 168) = v769;
    swift_bridgeObjectRelease();
    uint64_t v770 = *(void *)(v744 + 184);
    *(void *)(v743 + 176) = *(void *)(v744 + 176);
    *(void *)(v743 + 184) = v770;
    swift_bridgeObjectRelease();
    *(void *)(v743 + 192) = *(void *)(v744 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v743 + 200) = *(void *)(v744 + 200);
    swift_bridgeObjectRelease();
    uint64_t v771 = *(void *)(v744 + 216);
    *(void *)(v743 + 208) = *(void *)(v744 + 208);
    *(void *)(v743 + 216) = v771;
    swift_bridgeObjectRelease();
    uint64_t v772 = *(void *)(v744 + 232);
    *(void *)(v743 + 224) = *(void *)(v744 + 224);
    *(void *)(v743 + 232) = v772;
    swift_bridgeObjectRelease();
    uint64_t v773 = *(void *)(v744 + 248);
    *(void *)(v743 + 240) = *(void *)(v744 + 240);
    *(void *)(v743 + 248) = v773;
    swift_bridgeObjectRelease();
    uint64_t v774 = v745[24];
    uint64_t v775 = (const void *)(v744 + v774);
    uint64_t v1250 = (void *)(v743 + v774);
    int v776 = __swift_getEnumTagSinglePayload(v743 + v774, 1, v13);
    int v777 = __swift_getEnumTagSinglePayload((uint64_t)v775, 1, v13);
    if (v776)
    {
      if (v777)
      {
        size_t v778 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        uint64_t v779 = v1250;
LABEL_354:
        memcpy(v779, v775, v778);
        goto LABEL_358;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1250, v775, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v1250, 0, 1, v13);
    }
    else
    {
      uint64_t v789 = *(void *)(v13 - 8);
      if (v777)
      {
        (*(void (**)(void *, uint64_t))(v789 + 8))(v1250, v13);
        size_t v778 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        uint64_t v779 = v1250;
        goto LABEL_354;
      }
      (*(void (**)(void *, const void *, uint64_t))(v789 + 40))(v1250, v775, v13);
    }
LABEL_358:
    uint64_t v790 = v745[25];
    uint64_t v791 = (const void *)(v744 + v790);
    uint64_t v1251 = (void *)(v743 + v790);
    int v792 = __swift_getEnumTagSinglePayload(v743 + v790, 1, v13);
    int v793 = __swift_getEnumTagSinglePayload((uint64_t)v791, 1, v13);
    if (v792)
    {
      if (v793)
      {
        size_t v794 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        int v795 = v1251;
LABEL_363:
        memcpy(v795, v791, v794);
        goto LABEL_366;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1251, v791, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v1251, 0, 1, v13);
    }
    else
    {
      uint64_t v796 = *(void *)(v13 - 8);
      if (v793)
      {
        (*(void (**)(void *, uint64_t))(v796 + 8))(v1251, v13);
        size_t v794 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        int v795 = v1251;
        goto LABEL_363;
      }
      (*(void (**)(void *, const void *, uint64_t))(v796 + 40))(v1251, v791, v13);
    }
LABEL_366:
    uint64_t v797 = v745[26];
    uint64_t v798 = (void *)(v743 + v797);
    uint64_t v799 = (const void *)(v744 + v797);
    uint64_t v800 = type metadata accessor for URL();
    int v801 = __swift_getEnumTagSinglePayload((uint64_t)v798, 1, v800);
    int v802 = __swift_getEnumTagSinglePayload((uint64_t)v799, 1, v800);
    if (v801)
    {
      if (!v802)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v800 - 8) + 32))(v798, v799, v800);
        __swift_storeEnumTagSinglePayload((uint64_t)v798, 0, 1, v800);
LABEL_372:
        long long v26 = v1272;
        goto LABEL_373;
      }
    }
    else
    {
      uint64_t v803 = *(void *)(v800 - 8);
      if (!v802)
      {
        (*(void (**)(void *, const void *, uint64_t))(v803 + 40))(v798, v799, v800);
        goto LABEL_372;
      }
      (*(void (**)(void *, uint64_t))(v803 + 8))(v798, v800);
    }
    uint64_t v804 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v798, v799, *(void *)(*(void *)(v804 - 8) + 64));
    goto LABEL_372;
  }
  if (v747)
  {
LABEL_340:
    uint64_t v759 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
    memcpy((void *)v743, (const void *)v744, *(void *)(*(void *)(v759 - 8) + 64));
    goto LABEL_373;
  }
  long long v748 = *(_OWORD *)(v744 + 16);
  *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
  *(_OWORD *)(v743 + 16) = v748;
  long long v749 = *(_OWORD *)(v744 + 48);
  *(_OWORD *)(v743 + 32) = *(_OWORD *)(v744 + 32);
  *(_OWORD *)(v743 + 48) = v749;
  long long v750 = *(_OWORD *)(v744 + 80);
  *(_OWORD *)(v743 + 64) = *(_OWORD *)(v744 + 64);
  *(_OWORD *)(v743 + 80) = v750;
  long long v751 = *(_OWORD *)(v744 + 112);
  *(_OWORD *)(v743 + 96) = *(_OWORD *)(v744 + 96);
  *(_OWORD *)(v743 + 112) = v751;
  *(unsigned char *)(v743 + 128) = *(unsigned char *)(v744 + 128);
  *(_WORD *)(v743 + 129) = *(_WORD *)(v744 + 129);
  *(void *)(v743 + 136) = *(void *)(v744 + 136);
  long long v752 = *(_OWORD *)(v744 + 160);
  *(_OWORD *)(v743 + 144) = *(_OWORD *)(v744 + 144);
  *(_OWORD *)(v743 + 160) = v752;
  long long v753 = *(_OWORD *)(v744 + 192);
  *(_OWORD *)(v743 + 176) = *(_OWORD *)(v744 + 176);
  *(_OWORD *)(v743 + 192) = v753;
  long long v754 = *(_OWORD *)(v744 + 224);
  *(_OWORD *)(v743 + 208) = *(_OWORD *)(v744 + 208);
  *(_OWORD *)(v743 + 224) = v754;
  *(_OWORD *)(v743 + 240) = *(_OWORD *)(v744 + 240);
  uint64_t v755 = v745[24];
  uint64_t v756 = (void *)(v743 + v755);
  uint64_t v757 = (const void *)(v744 + v755);
  if (__swift_getEnumTagSinglePayload(v744 + v755, 1, v13))
  {
    uint64_t v758 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v756, v757, *(void *)(*(void *)(v758 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v756, v757, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v756, 0, 1, v13);
  }
  uint64_t v780 = v745[25];
  uint64_t v781 = (void *)(v743 + v780);
  uint64_t v782 = (const void *)(v744 + v780);
  if (__swift_getEnumTagSinglePayload(v744 + v780, 1, v13))
  {
    uint64_t v783 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v781, v782, *(void *)(*(void *)(v783 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v781, v782, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v781, 0, 1, v13);
  }
  uint64_t v784 = v745[26];
  int v785 = (void *)(v743 + v784);
  int v786 = (const void *)(v744 + v784);
  uint64_t v787 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v786, 1, v787))
  {
    uint64_t v788 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v785, v786, *(void *)(*(void *)(v788 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v787 - 8) + 32))(v785, v786, v787);
    __swift_storeEnumTagSinglePayload((uint64_t)v785, 0, 1, v787);
  }
  __swift_storeEnumTagSinglePayload(v743, 0, 1, (uint64_t)v745);
  uint64_t v24 = v1271;
  long long v26 = v1272;
LABEL_373:
  uint64_t v805 = v26[10];
  uint64_t v806 = v24 + v805;
  uint64_t v807 = (uint64_t)&__src[v805];
  uint64_t v808 = (int *)type metadata accessor for Trip(0);
  int v809 = __swift_getEnumTagSinglePayload(v806, 1, (uint64_t)v808);
  int v810 = __swift_getEnumTagSinglePayload(v807, 1, (uint64_t)v808);
  if (!v809)
  {
    if (v810)
    {
      outlined destroy of EmailDocument(v806, (void (*)(void))type metadata accessor for Trip);
      goto LABEL_379;
    }
    uint64_t v822 = *(void *)(v807 + 8);
    *(void *)uint64_t v806 = *(void *)v807;
    *(void *)(v806 + 8) = v822;
    swift_bridgeObjectRelease();
    uint64_t v823 = *(void *)(v807 + 24);
    *(void *)(v806 + 16) = *(void *)(v807 + 16);
    *(void *)(v806 + 24) = v823;
    swift_bridgeObjectRelease();
    uint64_t v824 = *(void *)(v807 + 40);
    *(void *)(v806 + 32) = *(void *)(v807 + 32);
    *(void *)(v806 + 40) = v824;
    swift_bridgeObjectRelease();
    uint64_t v825 = *(void *)(v807 + 56);
    *(void *)(v806 + 48) = *(void *)(v807 + 48);
    *(void *)(v806 + 56) = v825;
    swift_bridgeObjectRelease();
    uint64_t v826 = *(void *)(v807 + 72);
    *(void *)(v806 + 64) = *(void *)(v807 + 64);
    *(void *)(v806 + 72) = v826;
    swift_bridgeObjectRelease();
    uint64_t v827 = *(void *)(v807 + 88);
    *(void *)(v806 + 80) = *(void *)(v807 + 80);
    *(void *)(v806 + 88) = v827;
    swift_bridgeObjectRelease();
    uint64_t v828 = *(void *)(v807 + 104);
    *(void *)(v806 + 96) = *(void *)(v807 + 96);
    *(void *)(v806 + 104) = v828;
    swift_bridgeObjectRelease();
    uint64_t v829 = *(void *)(v807 + 120);
    *(void *)(v806 + 112) = *(void *)(v807 + 112);
    *(void *)(v806 + 120) = v829;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v806 + 128) = *(unsigned char *)(v807 + 128);
    *(unsigned char *)(v806 + 129) = *(unsigned char *)(v807 + 129);
    *(unsigned char *)(v806 + 130) = *(unsigned char *)(v807 + 130);
    *(void *)(v806 + 136) = *(void *)(v807 + 136);
    swift_bridgeObjectRelease();
    uint64_t v830 = *(void *)(v807 + 152);
    *(void *)(v806 + 144) = *(void *)(v807 + 144);
    *(void *)(v806 + 152) = v830;
    swift_bridgeObjectRelease();
    uint64_t v831 = *(void *)(v807 + 168);
    *(void *)(v806 + 160) = *(void *)(v807 + 160);
    *(void *)(v806 + 168) = v831;
    swift_bridgeObjectRelease();
    uint64_t v832 = *(void *)(v807 + 184);
    *(void *)(v806 + 176) = *(void *)(v807 + 176);
    *(void *)(v806 + 184) = v832;
    swift_bridgeObjectRelease();
    *(void *)(v806 + 192) = *(void *)(v807 + 192);
    swift_bridgeObjectRelease();
    *(void *)(v806 + 200) = *(void *)(v807 + 200);
    swift_bridgeObjectRelease();
    uint64_t v833 = *(void *)(v807 + 216);
    *(void *)(v806 + 208) = *(void *)(v807 + 208);
    *(void *)(v806 + 216) = v833;
    swift_bridgeObjectRelease();
    uint64_t v834 = v808[22];
    uint64_t v835 = (const void *)(v807 + v834);
    uint64_t v1252 = (void *)(v806 + v834);
    int v836 = __swift_getEnumTagSinglePayload(v806 + v834, 1, v13);
    int v837 = __swift_getEnumTagSinglePayload((uint64_t)v835, 1, v13);
    if (v836)
    {
      if (v837)
      {
        size_t v838 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        int v839 = v1252;
LABEL_393:
        memcpy(v839, v835, v838);
        goto LABEL_397;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1252, v835, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v1252, 0, 1, v13);
    }
    else
    {
      uint64_t v852 = *(void *)(v13 - 8);
      if (v837)
      {
        (*(void (**)(void *, uint64_t))(v852 + 8))(v1252, v13);
        size_t v838 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        int v839 = v1252;
        goto LABEL_393;
      }
      (*(void (**)(void *, const void *, uint64_t))(v852 + 40))(v1252, v835, v13);
    }
LABEL_397:
    uint64_t v853 = v808[23];
    uint64_t v854 = (const void *)(v807 + v853);
    uint64_t v1253 = (void *)(v806 + v853);
    int v855 = __swift_getEnumTagSinglePayload(v806 + v853, 1, v13);
    int v856 = __swift_getEnumTagSinglePayload((uint64_t)v854, 1, v13);
    if (v855)
    {
      if (v856)
      {
        size_t v857 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        uint64_t v858 = v1253;
LABEL_402:
        memcpy(v858, v854, v857);
        goto LABEL_405;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v1253, v854, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v1253, 0, 1, v13);
    }
    else
    {
      uint64_t v859 = *(void *)(v13 - 8);
      if (v856)
      {
        (*(void (**)(void *, uint64_t))(v859 + 8))(v1253, v13);
        size_t v857 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        uint64_t v858 = v1253;
        goto LABEL_402;
      }
      (*(void (**)(void *, const void *, uint64_t))(v859 + 40))(v1253, v854, v13);
    }
LABEL_405:
    uint64_t v860 = v808[24];
    uint64_t v861 = v806 + v860;
    uint64_t v862 = v807 + v860;
    *(void *)uint64_t v861 = *(void *)v862;
    *(unsigned char *)(v861 + 8) = *(unsigned char *)(v862 + 8);
    uint64_t v863 = v808[25];
    uint64_t v864 = (void *)(v806 + v863);
    uint64_t v865 = (const void *)(v807 + v863);
    uint64_t v866 = type metadata accessor for URL();
    int v867 = __swift_getEnumTagSinglePayload((uint64_t)v864, 1, v866);
    int v868 = __swift_getEnumTagSinglePayload((uint64_t)v865, 1, v866);
    if (v867)
    {
      if (!v868)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v866 - 8) + 32))(v864, v865, v866);
        __swift_storeEnumTagSinglePayload((uint64_t)v864, 0, 1, v866);
LABEL_411:
        long long v26 = v1272;
        goto LABEL_412;
      }
    }
    else
    {
      uint64_t v869 = *(void *)(v866 - 8);
      if (!v868)
      {
        (*(void (**)(void *, const void *, uint64_t))(v869 + 40))(v864, v865, v866);
        goto LABEL_411;
      }
      (*(void (**)(void *, uint64_t))(v869 + 8))(v864, v866);
    }
    uint64_t v870 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v864, v865, *(void *)(*(void *)(v870 - 8) + 64));
    goto LABEL_411;
  }
  if (v810)
  {
LABEL_379:
    uint64_t v821 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
    memcpy((void *)v806, (const void *)v807, *(void *)(*(void *)(v821 - 8) + 64));
    goto LABEL_412;
  }
  long long v811 = *(_OWORD *)(v807 + 16);
  *(_OWORD *)uint64_t v806 = *(_OWORD *)v807;
  *(_OWORD *)(v806 + 16) = v811;
  long long v812 = *(_OWORD *)(v807 + 48);
  *(_OWORD *)(v806 + 32) = *(_OWORD *)(v807 + 32);
  *(_OWORD *)(v806 + 48) = v812;
  long long v813 = *(_OWORD *)(v807 + 80);
  *(_OWORD *)(v806 + 64) = *(_OWORD *)(v807 + 64);
  *(_OWORD *)(v806 + 80) = v813;
  long long v814 = *(_OWORD *)(v807 + 112);
  *(_OWORD *)(v806 + 96) = *(_OWORD *)(v807 + 96);
  *(_OWORD *)(v806 + 112) = v814;
  *(unsigned char *)(v806 + 128) = *(unsigned char *)(v807 + 128);
  *(_WORD *)(v806 + 129) = *(_WORD *)(v807 + 129);
  *(void *)(v806 + 136) = *(void *)(v807 + 136);
  long long v815 = *(_OWORD *)(v807 + 160);
  *(_OWORD *)(v806 + 144) = *(_OWORD *)(v807 + 144);
  *(_OWORD *)(v806 + 160) = v815;
  long long v816 = *(_OWORD *)(v807 + 192);
  *(_OWORD *)(v806 + 176) = *(_OWORD *)(v807 + 176);
  *(_OWORD *)(v806 + 192) = v816;
  *(_OWORD *)(v806 + 208) = *(_OWORD *)(v807 + 208);
  uint64_t v817 = v808[22];
  uint64_t v818 = (void *)(v806 + v817);
  uint64_t v819 = (const void *)(v807 + v817);
  if (__swift_getEnumTagSinglePayload(v807 + v817, 1, v13))
  {
    uint64_t v820 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v818, v819, *(void *)(*(void *)(v820 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v818, v819, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v818, 0, 1, v13);
  }
  uint64_t v840 = v808[23];
  uint64_t v841 = (void *)(v806 + v840);
  uint64_t v842 = (const void *)(v807 + v840);
  if (__swift_getEnumTagSinglePayload(v807 + v840, 1, v13))
  {
    uint64_t v843 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v841, v842, *(void *)(*(void *)(v843 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v841, v842, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v841, 0, 1, v13);
  }
  uint64_t v844 = v808[24];
  uint64_t v845 = v806 + v844;
  uint64_t v846 = v807 + v844;
  *(void *)uint64_t v845 = *(void *)v846;
  *(unsigned char *)(v845 + 8) = *(unsigned char *)(v846 + 8);
  uint64_t v847 = v808[25];
  uint64_t v848 = (void *)(v806 + v847);
  uint64_t v849 = (const void *)(v807 + v847);
  uint64_t v850 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v849, 1, v850))
  {
    uint64_t v851 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v848, v849, *(void *)(*(void *)(v851 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v850 - 8) + 32))(v848, v849, v850);
    __swift_storeEnumTagSinglePayload((uint64_t)v848, 0, 1, v850);
  }
  __swift_storeEnumTagSinglePayload(v806, 0, 1, (uint64_t)v808);
  uint64_t v24 = v1271;
  long long v26 = v1272;
LABEL_412:
  uint64_t v871 = v26[11];
  uint64_t v872 = v24 + v871;
  uint64_t v873 = (uint64_t)&__src[v871];
  uint64_t v874 = (int *)type metadata accessor for FlightReservation(0);
  int v875 = __swift_getEnumTagSinglePayload(v872, 1, (uint64_t)v874);
  int v876 = __swift_getEnumTagSinglePayload(v873, 1, (uint64_t)v874);
  if (!v875)
  {
    if (v876)
    {
      outlined destroy of EmailDocument(v872, (void (*)(void))type metadata accessor for FlightReservation);
      goto LABEL_418;
    }
    v1268 = a3;
    uint64_t v886 = *(void *)(v873 + 8);
    *(void *)uint64_t v872 = *(void *)v873;
    *(void *)(v872 + 8) = v886;
    swift_bridgeObjectRelease();
    *(void *)(v872 + 16) = *(void *)(v873 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v872 + 24) = *(void *)(v873 + 24);
    swift_bridgeObjectRelease();
    uint64_t v887 = *(void *)(v873 + 40);
    *(void *)(v872 + 32) = *(void *)(v873 + 32);
    *(void *)(v872 + 40) = v887;
    swift_bridgeObjectRelease();
    uint64_t v888 = *(void *)(v873 + 56);
    *(void *)(v872 + 48) = *(void *)(v873 + 48);
    *(void *)(v872 + 56) = v888;
    swift_bridgeObjectRelease();
    uint64_t v889 = *(void *)(v873 + 72);
    *(void *)(v872 + 64) = *(void *)(v873 + 64);
    *(void *)(v872 + 72) = v889;
    swift_bridgeObjectRelease();
    uint64_t v890 = *(void *)(v873 + 88);
    *(void *)(v872 + 80) = *(void *)(v873 + 80);
    *(void *)(v872 + 88) = v890;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v872 + 96) = *(unsigned char *)(v873 + 96);
    uint64_t v891 = *(void *)(v873 + 112);
    *(void *)(v872 + 104) = *(void *)(v873 + 104);
    *(void *)(v872 + 112) = v891;
    swift_bridgeObjectRelease();
    uint64_t v892 = v874[13];
    uint64_t v893 = v872 + v892;
    uint64_t v894 = (const void *)(v873 + v892);
    uint64_t v895 = type metadata accessor for URL();
    uint64_t v1254 = (void *)v893;
    LODWORD(v893) = __swift_getEnumTagSinglePayload(v893, 1, v895);
    v1259 = (void *)v895;
    int v896 = __swift_getEnumTagSinglePayload((uint64_t)v894, 1, v895);
    if (v893)
    {
      if (v896)
      {
        size_t v897 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v898 = v1254;
LABEL_432:
        memcpy(v898, v894, v897);
        goto LABEL_436;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v895 - 8) + 32))(v1254, v894, v895);
      __swift_storeEnumTagSinglePayload((uint64_t)v1254, 0, 1, v895);
    }
    else
    {
      uint64_t v918 = *(void *)(v895 - 8);
      if (v896)
      {
        (*(void (**)(void *, uint64_t))(v918 + 8))(v1254, v895);
        size_t v897 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v898 = v1254;
        goto LABEL_432;
      }
      (*(void (**)(void *, const void *, uint64_t))(v918 + 40))(v1254, v894, v895);
    }
LABEL_436:
    a3 = v1268;
    uint64_t v919 = v874[14];
    uint64_t v920 = (const void *)(v873 + v919);
    uint64_t v1255 = (void *)(v872 + v919);
    int v1244 = __swift_getEnumTagSinglePayload(v872 + v919, 1, (uint64_t)v1259);
    int v921 = __swift_getEnumTagSinglePayload((uint64_t)v920, 1, (uint64_t)v1259);
    uint64_t v1265 = v13;
    if (v1244)
    {
      if (v921)
      {
        size_t v922 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v923 = v1255;
LABEL_441:
        memcpy(v923, v920, v922);
        goto LABEL_444;
      }
      (*(void (**)(void *, const void *, void *))(*(v1259 - 1) + 32))(v1255, v920, v1259);
      __swift_storeEnumTagSinglePayload((uint64_t)v1255, 0, 1, (uint64_t)v1259);
    }
    else
    {
      uint64_t v924 = *(v1259 - 1);
      if (v921)
      {
        (*(void (**)(void *, void *))(v924 + 8))(v1255, v1259);
        size_t v922 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v923 = v1255;
        goto LABEL_441;
      }
      (*(void (**)(void *, const void *, void *))(v924 + 40))(v1255, v920, v1259);
    }
LABEL_444:
    uint64_t v925 = v874[15];
    int v926 = (void *)(v872 + v925);
    uint64_t v927 = (uint64_t *)(v873 + v925);
    uint64_t v929 = *v927;
    uint64_t v928 = v927[1];
    void *v926 = v929;
    v926[1] = v928;
    swift_bridgeObjectRelease();
    uint64_t v930 = v874[16];
    uint64_t v931 = (void *)(v872 + v930);
    uint64_t v932 = (uint64_t *)(v873 + v930);
    uint64_t v934 = *v932;
    uint64_t v933 = v932[1];
    void *v931 = v934;
    v931[1] = v933;
    swift_bridgeObjectRelease();
    uint64_t v935 = v874[17];
    uint64_t v936 = (void *)(v872 + v935);
    uint64_t v937 = (uint64_t *)(v873 + v935);
    uint64_t v939 = *v937;
    uint64_t v938 = v937[1];
    *uint64_t v936 = v939;
    v936[1] = v938;
    swift_bridgeObjectRelease();
    uint64_t v940 = v874[18];
    v1260 = (void *)(v872 + v940);
    uint64_t v941 = v873 + v940;
    uint64_t v942 = type metadata accessor for DateComponents();
    uint64_t v943 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v942 - 8) + 40);
    v943(v1260, v941, v942);
    v943((void *)(v872 + v874[19]), v873 + v874[19], v942);
    uint64_t v944 = v874[20];
    uint64_t v945 = (void *)(v872 + v944);
    uint64_t v946 = (uint64_t *)(v873 + v944);
    uint64_t v948 = *v946;
    uint64_t v947 = v946[1];
    *uint64_t v945 = v948;
    v945[1] = v947;
    swift_bridgeObjectRelease();
    uint64_t v949 = v874[21];
    v950 = (void *)(v872 + v949);
    uint64_t v951 = (uint64_t *)(v873 + v949);
    uint64_t v953 = *v951;
    uint64_t v952 = v951[1];
    void *v950 = v953;
    v950[1] = v952;
    swift_bridgeObjectRelease();
    uint64_t v954 = v874[22];
    v955 = (void *)(v872 + v954);
    uint64_t v956 = (uint64_t *)(v873 + v954);
    uint64_t v958 = *v956;
    uint64_t v957 = v956[1];
    void *v955 = v958;
    v955[1] = v957;
    swift_bridgeObjectRelease();
    uint64_t v959 = v874[23];
    uint64_t v960 = (void *)(v872 + v959);
    uint64_t v961 = (uint64_t *)(v873 + v959);
    uint64_t v963 = *v961;
    uint64_t v962 = v961[1];
    *uint64_t v960 = v963;
    v960[1] = v962;
    swift_bridgeObjectRelease();
    uint64_t v964 = v874[24];
    v965 = (void *)(v872 + v964);
    uint64_t v966 = (uint64_t *)(v873 + v964);
    uint64_t v968 = *v966;
    uint64_t v967 = v966[1];
    void *v965 = v968;
    v965[1] = v967;
    swift_bridgeObjectRelease();
    uint64_t v969 = v874[25];
    v970 = (void *)(v872 + v969);
    uint64_t v971 = (uint64_t *)(v873 + v969);
    uint64_t v973 = *v971;
    uint64_t v972 = v971[1];
    void *v970 = v973;
    v970[1] = v972;
    swift_bridgeObjectRelease();
    uint64_t v974 = v874[26];
    uint64_t v975 = (void *)(v872 + v974);
    uint64_t v976 = (uint64_t *)(v873 + v974);
    uint64_t v978 = *v976;
    uint64_t v977 = v976[1];
    *uint64_t v975 = v978;
    v975[1] = v977;
    swift_bridgeObjectRelease();
    uint64_t v979 = v874[27];
    v980 = (void *)(v872 + v979);
    uint64_t v981 = (uint64_t *)(v873 + v979);
    uint64_t v983 = *v981;
    uint64_t v982 = v981[1];
    void *v980 = v983;
    v980[1] = v982;
    swift_bridgeObjectRelease();
    uint64_t v984 = v874[28];
    uint64_t v985 = (void *)(v872 + v984);
    uint64_t v986 = (uint64_t *)(v873 + v984);
    uint64_t v988 = *v986;
    uint64_t v987 = v986[1];
    *uint64_t v985 = v988;
    v985[1] = v987;
    swift_bridgeObjectRelease();
    uint64_t v989 = v874[29];
    uint64_t v990 = (void *)(v872 + v989);
    uint64_t v991 = (uint64_t *)(v873 + v989);
    uint64_t v993 = *v991;
    uint64_t v992 = v991[1];
    void *v990 = v993;
    v990[1] = v992;
    swift_bridgeObjectRelease();
    uint64_t v994 = v874[30];
    uint64_t v995 = (void *)(v872 + v994);
    uint64_t v996 = (uint64_t *)(v873 + v994);
    uint64_t v998 = *v996;
    uint64_t v997 = v996[1];
    *uint64_t v995 = v998;
    v995[1] = v997;
    swift_bridgeObjectRelease();
    uint64_t v999 = v874[31];
    uint64_t v1000 = (void *)(v872 + v999);
    uint64_t v1001 = (uint64_t *)(v873 + v999);
    uint64_t v1003 = *v1001;
    uint64_t v1002 = v1001[1];
    void *v1000 = v1003;
    v1000[1] = v1002;
    swift_bridgeObjectRelease();
    uint64_t v1004 = v874[32];
    uint64_t v1005 = (void *)(v872 + v1004);
    uint64_t v1006 = (uint64_t *)(v873 + v1004);
    uint64_t v1008 = *v1006;
    uint64_t v1007 = v1006[1];
    void *v1005 = v1008;
    v1005[1] = v1007;
    swift_bridgeObjectRelease();
    *(void *)(v872 + v874[33]) = *(void *)(v873 + v874[33]);
    swift_bridgeObjectRelease();
    *(void *)(v872 + v874[34]) = *(void *)(v873 + v874[34]);
    swift_bridgeObjectRelease();
    uint64_t v1009 = v874[35];
    v1010 = (void *)(v872 + v1009);
    uint64_t v1011 = (uint64_t *)(v873 + v1009);
    uint64_t v1013 = *v1011;
    uint64_t v1012 = v1011[1];
    void *v1010 = v1013;
    v1010[1] = v1012;
    swift_bridgeObjectRelease();
    uint64_t v1014 = v874[36];
    uint64_t v1015 = (void *)(v872 + v1014);
    uint64_t v1016 = (uint64_t *)(v873 + v1014);
    uint64_t v1018 = *v1016;
    uint64_t v1017 = v1016[1];
    *uint64_t v1015 = v1018;
    v1015[1] = v1017;
    swift_bridgeObjectRelease();
    uint64_t v1019 = v874[37];
    uint64_t v1020 = (void *)(v872 + v1019);
    uint64_t v1021 = (uint64_t *)(v873 + v1019);
    uint64_t v1023 = *v1021;
    uint64_t v1022 = v1021[1];
    *uint64_t v1020 = v1023;
    v1020[1] = v1022;
    swift_bridgeObjectRelease();
    uint64_t v1024 = v874[38];
    int v1025 = (void *)(v872 + v1024);
    uint64_t v1026 = v873 + v1024;
    uint64_t v13 = v1265;
    int v1027 = __swift_getEnumTagSinglePayload(v872 + v1024, 1, v1265);
    uint64_t v1261 = (void *)v1026;
    int v1028 = __swift_getEnumTagSinglePayload(v1026, 1, v1265);
    if (v1027)
    {
      uint64_t v24 = v1271;
      if (!v1028)
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v1265 - 8) + 32))(v1025, v1261, v1265);
        __swift_storeEnumTagSinglePayload((uint64_t)v1025, 0, 1, v1265);
LABEL_450:
        uint64_t v1031 = v874[39];
        uint64_t v1032 = (void *)(v872 + v1031);
        uint64_t v1033 = (uint64_t *)(v873 + v1031);
        uint64_t v1035 = *v1033;
        uint64_t v1034 = v1033[1];
        *uint64_t v1032 = v1035;
        v1032[1] = v1034;
        swift_bridgeObjectRelease();
        uint64_t v1036 = v874[40];
        uint64_t v1037 = (void *)(v872 + v1036);
        uint64_t v1038 = (uint64_t *)(v873 + v1036);
        uint64_t v1040 = *v1038;
        uint64_t v1039 = v1038[1];
        void *v1037 = v1040;
        v1037[1] = v1039;
        swift_bridgeObjectRelease();
        uint64_t v1041 = v874[41];
        uint64_t v1042 = v872 + v1041;
        uint64_t v1043 = v873 + v1041;
        *(void *)uint64_t v1042 = *(void *)v1043;
        *(unsigned char *)(v1042 + 8) = *(unsigned char *)(v1043 + 8);
        uint64_t v1044 = v874[42];
        uint64_t v1045 = (void *)(v872 + v1044);
        uint64_t v1046 = (uint64_t *)(v873 + v1044);
        uint64_t v1048 = *v1046;
        uint64_t v1047 = v1046[1];
        *uint64_t v1045 = v1048;
        v1045[1] = v1047;
        swift_bridgeObjectRelease();
        uint64_t v1049 = v874[43];
        uint64_t v1050 = v872 + v1049;
        uint64_t v1051 = v873 + v1049;
        *(_OWORD *)uint64_t v1050 = *(_OWORD *)v1051;
        *(void *)(v1050 + 13) = *(void *)(v1051 + 13);
        uint64_t v1052 = v874[44];
        uint64_t v1053 = (void *)(v872 + v1052);
        uint64_t v1054 = (uint64_t *)(v873 + v1052);
        uint64_t v1056 = *v1054;
        uint64_t v1055 = v1054[1];
        void *v1053 = v1056;
        v1053[1] = v1055;
        swift_bridgeObjectRelease();
        uint64_t v1057 = v874[45];
        uint64_t v1058 = (void *)(v872 + v1057);
        uint64_t v1059 = (uint64_t *)(v873 + v1057);
        uint64_t v1061 = *v1059;
        uint64_t v1060 = v1059[1];
        *uint64_t v1058 = v1061;
        v1058[1] = v1060;
        swift_bridgeObjectRelease();
        uint64_t v1062 = v874[46];
        uint64_t v1063 = (void *)(v872 + v1062);
        uint64_t v1064 = (uint64_t *)(v873 + v1062);
        uint64_t v1066 = *v1064;
        uint64_t v1065 = v1064[1];
        void *v1063 = v1066;
        v1063[1] = v1065;
        swift_bridgeObjectRelease();
        uint64_t v1067 = v874[47];
        uint64_t v1068 = (void *)(v872 + v1067);
        uint64_t v1069 = (uint64_t *)(v873 + v1067);
        uint64_t v1071 = *v1069;
        uint64_t v1070 = v1069[1];
        *uint64_t v1068 = v1071;
        v1068[1] = v1070;
        swift_bridgeObjectRelease();
        long long v26 = v1272;
        goto LABEL_451;
      }
    }
    else
    {
      uint64_t v1029 = *(void *)(v1265 - 8);
      uint64_t v24 = v1271;
      if (!v1028)
      {
        (*(void (**)(void *, void *, uint64_t))(v1029 + 40))(v1025, v1261, v1265);
        goto LABEL_450;
      }
      (*(void (**)(void *, uint64_t))(v1029 + 8))(v1025, v1265);
    }
    uint64_t v1030 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v1025, v1261, *(void *)(*(void *)(v1030 - 8) + 64));
    goto LABEL_450;
  }
  if (v876)
  {
LABEL_418:
    uint64_t v885 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
    memcpy((void *)v872, (const void *)v873, *(void *)(*(void *)(v885 - 8) + 64));
    goto LABEL_451;
  }
  long long v877 = *(_OWORD *)(v873 + 16);
  *(_OWORD *)uint64_t v872 = *(_OWORD *)v873;
  *(_OWORD *)(v872 + 16) = v877;
  long long v878 = *(_OWORD *)(v873 + 48);
  *(_OWORD *)(v872 + 32) = *(_OWORD *)(v873 + 32);
  *(_OWORD *)(v872 + 48) = v878;
  long long v879 = *(_OWORD *)(v873 + 80);
  *(_OWORD *)(v872 + 64) = *(_OWORD *)(v873 + 64);
  *(_OWORD *)(v872 + 80) = v879;
  *(unsigned char *)(v872 + 96) = *(unsigned char *)(v873 + 96);
  *(_OWORD *)(v872 + 104) = *(_OWORD *)(v873 + 104);
  uint64_t v880 = v874[13];
  long long v881 = (void *)(v872 + v880);
  uint64_t v882 = (const void *)(v873 + v880);
  uint64_t v883 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v882, 1, v883))
  {
    uint64_t v884 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v881, v882, *(void *)(*(void *)(v884 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v883 - 8) + 32))(v881, v882, v883);
    __swift_storeEnumTagSinglePayload((uint64_t)v881, 0, 1, v883);
  }
  uint64_t v899 = v874[14];
  int v900 = (void *)(v872 + v899);
  uint64_t v901 = (const void *)(v873 + v899);
  uint64_t v1264 = v13;
  if (__swift_getEnumTagSinglePayload(v873 + v899, 1, v883))
  {
    uint64_t v902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v900, v901, *(void *)(*(void *)(v902 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v883 - 8) + 32))(v900, v901, v883);
    __swift_storeEnumTagSinglePayload((uint64_t)v900, 0, 1, v883);
  }
  *(_OWORD *)(v872 + v874[15]) = *(_OWORD *)(v873 + v874[15]);
  *(_OWORD *)(v872 + v874[16]) = *(_OWORD *)(v873 + v874[16]);
  *(_OWORD *)(v872 + v874[17]) = *(_OWORD *)(v873 + v874[17]);
  uint64_t v903 = v874[18];
  uint64_t v904 = v872 + v903;
  uint64_t v905 = v873 + v903;
  uint64_t v906 = type metadata accessor for DateComponents();
  int v907 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v906 - 8) + 32);
  v907(v904, v905, v906);
  v907(v872 + v874[19], v873 + v874[19], v906);
  *(_OWORD *)(v872 + v874[20]) = *(_OWORD *)(v873 + v874[20]);
  *(_OWORD *)(v872 + v874[21]) = *(_OWORD *)(v873 + v874[21]);
  *(_OWORD *)(v872 + v874[22]) = *(_OWORD *)(v873 + v874[22]);
  *(_OWORD *)(v872 + v874[23]) = *(_OWORD *)(v873 + v874[23]);
  *(_OWORD *)(v872 + v874[24]) = *(_OWORD *)(v873 + v874[24]);
  *(_OWORD *)(v872 + v874[25]) = *(_OWORD *)(v873 + v874[25]);
  *(_OWORD *)(v872 + v874[26]) = *(_OWORD *)(v873 + v874[26]);
  *(_OWORD *)(v872 + v874[27]) = *(_OWORD *)(v873 + v874[27]);
  *(_OWORD *)(v872 + v874[28]) = *(_OWORD *)(v873 + v874[28]);
  *(_OWORD *)(v872 + v874[29]) = *(_OWORD *)(v873 + v874[29]);
  *(_OWORD *)(v872 + v874[30]) = *(_OWORD *)(v873 + v874[30]);
  *(_OWORD *)(v872 + v874[31]) = *(_OWORD *)(v873 + v874[31]);
  *(_OWORD *)(v872 + v874[32]) = *(_OWORD *)(v873 + v874[32]);
  *(void *)(v872 + v874[33]) = *(void *)(v873 + v874[33]);
  *(void *)(v872 + v874[34]) = *(void *)(v873 + v874[34]);
  *(_OWORD *)(v872 + v874[35]) = *(_OWORD *)(v873 + v874[35]);
  *(_OWORD *)(v872 + v874[36]) = *(_OWORD *)(v873 + v874[36]);
  *(_OWORD *)(v872 + v874[37]) = *(_OWORD *)(v873 + v874[37]);
  uint64_t v908 = v874[38];
  uint64_t v909 = (void *)(v872 + v908);
  uint64_t v910 = (const void *)(v873 + v908);
  uint64_t v13 = v1264;
  if (__swift_getEnumTagSinglePayload(v873 + v908, 1, v1264))
  {
    uint64_t v911 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v909, v910, *(void *)(*(void *)(v911 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1264 - 8) + 32))(v909, v910, v1264);
    __swift_storeEnumTagSinglePayload((uint64_t)v909, 0, 1, v1264);
  }
  long long v26 = v1272;
  *(_OWORD *)(v872 + v874[39]) = *(_OWORD *)(v873 + v874[39]);
  *(_OWORD *)(v872 + v874[40]) = *(_OWORD *)(v873 + v874[40]);
  uint64_t v912 = v874[41];
  uint64_t v913 = v872 + v912;
  uint64_t v914 = v873 + v912;
  *(void *)uint64_t v913 = *(void *)v914;
  *(unsigned char *)(v913 + 8) = *(unsigned char *)(v914 + 8);
  *(_OWORD *)(v872 + v874[42]) = *(_OWORD *)(v873 + v874[42]);
  uint64_t v915 = v874[43];
  uint64_t v916 = v872 + v915;
  uint64_t v917 = v873 + v915;
  *(_OWORD *)uint64_t v916 = *(_OWORD *)v917;
  *(void *)(v916 + 13) = *(void *)(v917 + 13);
  *(_OWORD *)(v872 + v874[44]) = *(_OWORD *)(v873 + v874[44]);
  *(_OWORD *)(v872 + v874[45]) = *(_OWORD *)(v873 + v874[45]);
  *(_OWORD *)(v872 + v874[46]) = *(_OWORD *)(v873 + v874[46]);
  *(_OWORD *)(v872 + v874[47]) = *(_OWORD *)(v873 + v874[47]);
  __swift_storeEnumTagSinglePayload(v872, 0, 1, (uint64_t)v874);
  uint64_t v24 = v1271;
LABEL_451:
  uint64_t v1072 = v26[12];
  uint64_t v1073 = v24 + v1072;
  uint64_t v1074 = (uint64_t)&__src[v1072];
  uint64_t v1075 = (int *)type metadata accessor for HotelReservation(0);
  int v1076 = __swift_getEnumTagSinglePayload(v1073, 1, (uint64_t)v1075);
  int v1077 = __swift_getEnumTagSinglePayload(v1074, 1, (uint64_t)v1075);
  if (!v1076)
  {
    if (v1077)
    {
      outlined destroy of EmailDocument(v1073, (void (*)(void))type metadata accessor for HotelReservation);
      goto LABEL_457;
    }
    v1269 = a3;
    uint64_t v1087 = *(void *)(v1074 + 8);
    *(void *)uint64_t v1073 = *(void *)v1074;
    *(void *)(v1073 + 8) = v1087;
    swift_bridgeObjectRelease();
    *(void *)(v1073 + 16) = *(void *)(v1074 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v1073 + 24) = *(void *)(v1074 + 24);
    swift_bridgeObjectRelease();
    uint64_t v1088 = *(void *)(v1074 + 40);
    *(void *)(v1073 + 32) = *(void *)(v1074 + 32);
    *(void *)(v1073 + 40) = v1088;
    swift_bridgeObjectRelease();
    uint64_t v1089 = *(void *)(v1074 + 56);
    *(void *)(v1073 + 48) = *(void *)(v1074 + 48);
    *(void *)(v1073 + 56) = v1089;
    swift_bridgeObjectRelease();
    uint64_t v1090 = *(void *)(v1074 + 72);
    *(void *)(v1073 + 64) = *(void *)(v1074 + 64);
    *(void *)(v1073 + 72) = v1090;
    swift_bridgeObjectRelease();
    uint64_t v1091 = *(void *)(v1074 + 88);
    *(void *)(v1073 + 80) = *(void *)(v1074 + 80);
    *(void *)(v1073 + 88) = v1091;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1073 + 96) = *(unsigned char *)(v1074 + 96);
    uint64_t v1092 = *(void *)(v1074 + 112);
    *(void *)(v1073 + 104) = *(void *)(v1074 + 104);
    *(void *)(v1073 + 112) = v1092;
    swift_bridgeObjectRelease();
    uint64_t v1093 = *(void *)(v1074 + 128);
    *(void *)(v1073 + 120) = *(void *)(v1074 + 120);
    *(void *)(v1073 + 128) = v1093;
    swift_bridgeObjectRelease();
    uint64_t v1094 = v1075[14];
    uint64_t v1095 = v1073 + v1094;
    size_t v1096 = (const void *)(v1074 + v1094);
    uint64_t v1097 = type metadata accessor for DateComponents();
    uint64_t v1256 = (void *)v1095;
    LODWORD(v1095) = __swift_getEnumTagSinglePayload(v1095, 1, v1097);
    v1262 = (void *)v1097;
    int v1098 = __swift_getEnumTagSinglePayload((uint64_t)v1096, 1, v1097);
    if (v1095)
    {
      if (v1098)
      {
        size_t v1099 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                      - 8)
                          + 64);
        uint64_t v1100 = v1256;
LABEL_468:
        memcpy(v1100, v1096, v1099);
        goto LABEL_472;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1097 - 8) + 32))(v1256, v1096, v1097);
      __swift_storeEnumTagSinglePayload((uint64_t)v1256, 0, 1, v1097);
    }
    else
    {
      uint64_t v1114 = *(void *)(v1097 - 8);
      if (v1098)
      {
        (*(void (**)(void *, uint64_t))(v1114 + 8))(v1256, v1097);
        size_t v1099 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                      - 8)
                          + 64);
        uint64_t v1100 = v1256;
        goto LABEL_468;
      }
      (*(void (**)(void *, const void *, uint64_t))(v1114 + 40))(v1256, v1096, v1097);
    }
LABEL_472:
    a3 = v1269;
    uint64_t v1115 = v1075[15];
    uint64_t v1116 = (const void *)(v1074 + v1115);
    uint64_t v1257 = (void *)(v1073 + v1115);
    int v1245 = __swift_getEnumTagSinglePayload(v1073 + v1115, 1, (uint64_t)v1262);
    int v1117 = __swift_getEnumTagSinglePayload((uint64_t)v1116, 1, (uint64_t)v1262);
    if (v1245)
    {
      if (!v1117)
      {
        (*(void (**)(void *, const void *, void *))(*(v1262 - 1) + 32))(v1257, v1116, v1262);
        __swift_storeEnumTagSinglePayload((uint64_t)v1257, 0, 1, (uint64_t)v1262);
        goto LABEL_480;
      }
      size_t v1118 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                    - 8)
                        + 64);
      uint64_t v1119 = v1257;
    }
    else
    {
      uint64_t v1120 = *(v1262 - 1);
      if (!v1117)
      {
        (*(void (**)(void *, const void *, void *))(v1120 + 40))(v1257, v1116, v1262);
        goto LABEL_480;
      }
      (*(void (**)(void *, void *))(v1120 + 8))(v1257, v1262);
      size_t v1118 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                    - 8)
                        + 64);
      uint64_t v1119 = v1257;
    }
    memcpy(v1119, v1116, v1118);
LABEL_480:
    uint64_t v1121 = v1075[16];
    uint64_t v1122 = (void *)(v1073 + v1121);
    uint64_t v1123 = (uint64_t *)(v1074 + v1121);
    uint64_t v1125 = *v1123;
    uint64_t v1124 = v1123[1];
    void *v1122 = v1125;
    v1122[1] = v1124;
    swift_bridgeObjectRelease();
    uint64_t v1126 = v1075[17];
    uint64_t v1127 = (void *)(v1073 + v1126);
    uint64_t v1128 = (uint64_t *)(v1074 + v1126);
    uint64_t v1130 = *v1128;
    uint64_t v1129 = v1128[1];
    void *v1127 = v1130;
    v1127[1] = v1129;
    swift_bridgeObjectRelease();
    uint64_t v1131 = v1075[18];
    uint64_t v1132 = (void *)(v1073 + v1131);
    uint64_t v1133 = (uint64_t *)(v1074 + v1131);
    uint64_t v1135 = *v1133;
    uint64_t v1134 = v1133[1];
    *uint64_t v1132 = v1135;
    v1132[1] = v1134;
    swift_bridgeObjectRelease();
    uint64_t v1136 = v1075[19];
    uint64_t v1137 = (void *)(v1073 + v1136);
    uint64_t v1138 = (uint64_t *)(v1074 + v1136);
    uint64_t v1140 = *v1138;
    uint64_t v1139 = v1138[1];
    *uint64_t v1137 = v1140;
    v1137[1] = v1139;
    swift_bridgeObjectRelease();
    uint64_t v1141 = v1075[20];
    uint64_t v1142 = (void *)(v1073 + v1141);
    uint64_t v1143 = (uint64_t *)(v1074 + v1141);
    uint64_t v1145 = *v1143;
    uint64_t v1144 = v1143[1];
    void *v1142 = v1145;
    v1142[1] = v1144;
    swift_bridgeObjectRelease();
    *(void *)(v1073 + v1075[21]) = *(void *)(v1074 + v1075[21]);
    swift_bridgeObjectRelease();
    *(void *)(v1073 + v1075[22]) = *(void *)(v1074 + v1075[22]);
    swift_bridgeObjectRelease();
    uint64_t v1146 = v1075[23];
    uint64_t v1147 = v1073 + v1146;
    uint64_t v1148 = v1074 + v1146;
    *(void *)uint64_t v1147 = *(void *)v1148;
    *(unsigned char *)(v1147 + 8) = *(unsigned char *)(v1148 + 8);
    uint64_t v1149 = v1075[24];
    uint64_t v1150 = v1073 + v1149;
    uint64_t v1151 = v1074 + v1149;
    *(unsigned char *)(v1150 + 8) = *(unsigned char *)(v1151 + 8);
    *(void *)uint64_t v1150 = *(void *)v1151;
    uint64_t v1152 = v1075[25];
    uint64_t v1153 = (void *)(v1073 + v1152);
    uint64_t v1154 = (uint64_t *)(v1074 + v1152);
    uint64_t v1156 = *v1154;
    uint64_t v1155 = v1154[1];
    *uint64_t v1153 = v1156;
    v1153[1] = v1155;
    swift_bridgeObjectRelease();
    uint64_t v1157 = v1075[26];
    uint64_t v1158 = (void *)(v1073 + v1157);
    uint64_t v1159 = (uint64_t *)(v1074 + v1157);
    uint64_t v1161 = *v1159;
    uint64_t v1160 = v1159[1];
    *uint64_t v1158 = v1161;
    v1158[1] = v1160;
    swift_bridgeObjectRelease();
    uint64_t v1162 = v1075[27];
    uint64_t v1163 = (void *)(v1073 + v1162);
    uint64_t v1164 = (uint64_t *)(v1074 + v1162);
    uint64_t v1166 = *v1164;
    uint64_t v1165 = v1164[1];
    void *v1163 = v1166;
    v1163[1] = v1165;
    swift_bridgeObjectRelease();
    uint64_t v1167 = v1075[28];
    uint64_t v1168 = (void *)(v1073 + v1167);
    uint64_t v1169 = (uint64_t *)(v1074 + v1167);
    uint64_t v1171 = *v1169;
    uint64_t v1170 = v1169[1];
    *uint64_t v1168 = v1171;
    v1168[1] = v1170;
    swift_bridgeObjectRelease();
    uint64_t v1172 = v1075[29];
    uint64_t v1173 = v1073 + v1172;
    uint64_t v1174 = v1074 + v1172;
    *(void *)uint64_t v1173 = *(void *)v1174;
    *(unsigned char *)(v1173 + 8) = *(unsigned char *)(v1174 + 8);
    long long v26 = v1272;
    goto LABEL_481;
  }
  if (v1077)
  {
LABEL_457:
    uint64_t v1086 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
    memcpy((void *)v1073, (const void *)v1074, *(void *)(*(void *)(v1086 - 8) + 64));
    goto LABEL_481;
  }
  long long v1078 = *(_OWORD *)(v1074 + 16);
  *(_OWORD *)uint64_t v1073 = *(_OWORD *)v1074;
  *(_OWORD *)(v1073 + 16) = v1078;
  long long v1079 = *(_OWORD *)(v1074 + 48);
  *(_OWORD *)(v1073 + 32) = *(_OWORD *)(v1074 + 32);
  *(_OWORD *)(v1073 + 48) = v1079;
  long long v1080 = *(_OWORD *)(v1074 + 80);
  *(_OWORD *)(v1073 + 64) = *(_OWORD *)(v1074 + 64);
  *(_OWORD *)(v1073 + 80) = v1080;
  *(unsigned char *)(v1073 + 96) = *(unsigned char *)(v1074 + 96);
  *(_OWORD *)(v1073 + 104) = *(_OWORD *)(v1074 + 104);
  *(_OWORD *)(v1073 + 120) = *(_OWORD *)(v1074 + 120);
  uint64_t v1081 = v1075[14];
  int v1082 = (void *)(v1073 + v1081);
  uint64_t v1083 = (const void *)(v1074 + v1081);
  uint64_t v1084 = type metadata accessor for DateComponents();
  if (__swift_getEnumTagSinglePayload((uint64_t)v1083, 1, v1084))
  {
    uint64_t v1085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1082, v1083, *(void *)(*(void *)(v1085 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1084 - 8) + 32))(v1082, v1083, v1084);
    __swift_storeEnumTagSinglePayload((uint64_t)v1082, 0, 1, v1084);
  }
  uint64_t v1101 = v1075[15];
  uint64_t v1102 = (void *)(v1073 + v1101);
  uint64_t v1103 = (const void *)(v1074 + v1101);
  if (__swift_getEnumTagSinglePayload(v1074 + v1101, 1, v1084))
  {
    uint64_t v1104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
    memcpy(v1102, v1103, *(void *)(*(void *)(v1104 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1084 - 8) + 32))(v1102, v1103, v1084);
    __swift_storeEnumTagSinglePayload((uint64_t)v1102, 0, 1, v1084);
  }
  long long v26 = v1272;
  *(_OWORD *)(v1073 + v1075[16]) = *(_OWORD *)(v1074 + v1075[16]);
  *(_OWORD *)(v1073 + v1075[17]) = *(_OWORD *)(v1074 + v1075[17]);
  *(_OWORD *)(v1073 + v1075[18]) = *(_OWORD *)(v1074 + v1075[18]);
  *(_OWORD *)(v1073 + v1075[19]) = *(_OWORD *)(v1074 + v1075[19]);
  *(_OWORD *)(v1073 + v1075[20]) = *(_OWORD *)(v1074 + v1075[20]);
  *(void *)(v1073 + v1075[21]) = *(void *)(v1074 + v1075[21]);
  *(void *)(v1073 + v1075[22]) = *(void *)(v1074 + v1075[22]);
  uint64_t v1105 = v1075[23];
  uint64_t v1106 = v1073 + v1105;
  uint64_t v1107 = v1074 + v1105;
  *(unsigned char *)(v1106 + 8) = *(unsigned char *)(v1107 + 8);
  *(void *)uint64_t v1106 = *(void *)v1107;
  uint64_t v1108 = v1075[24];
  uint64_t v1109 = v1073 + v1108;
  uint64_t v1110 = v1074 + v1108;
  *(unsigned char *)(v1109 + 8) = *(unsigned char *)(v1110 + 8);
  *(void *)uint64_t v1109 = *(void *)v1110;
  *(_OWORD *)(v1073 + v1075[25]) = *(_OWORD *)(v1074 + v1075[25]);
  *(_OWORD *)(v1073 + v1075[26]) = *(_OWORD *)(v1074 + v1075[26]);
  *(_OWORD *)(v1073 + v1075[27]) = *(_OWORD *)(v1074 + v1075[27]);
  *(_OWORD *)(v1073 + v1075[28]) = *(_OWORD *)(v1074 + v1075[28]);
  uint64_t v1111 = v1075[29];
  uint64_t v1112 = v1073 + v1111;
  uint64_t v1113 = v1074 + v1111;
  *(void *)uint64_t v1112 = *(void *)v1113;
  *(unsigned char *)(v1112 + 8) = *(unsigned char *)(v1113 + 8);
  __swift_storeEnumTagSinglePayload(v1073, 0, 1, (uint64_t)v1075);
  uint64_t v24 = v1271;
LABEL_481:
  uint64_t v1175 = v26[13];
  uint64_t v1176 = v24 + v1175;
  uint64_t v1177 = (uint64_t)&__src[v1175];
  uint64_t v1178 = (int *)type metadata accessor for RestaurantReservation(0);
  int v1179 = __swift_getEnumTagSinglePayload(v1176, 1, (uint64_t)v1178);
  int v1180 = __swift_getEnumTagSinglePayload(v1177, 1, (uint64_t)v1178);
  if (v1179)
  {
    if (!v1180)
    {
      long long v1181 = *(_OWORD *)(v1177 + 16);
      *(_OWORD *)uint64_t v1176 = *(_OWORD *)v1177;
      *(_OWORD *)(v1176 + 16) = v1181;
      long long v1182 = *(_OWORD *)(v1177 + 48);
      *(_OWORD *)(v1176 + 32) = *(_OWORD *)(v1177 + 32);
      *(_OWORD *)(v1176 + 48) = v1182;
      long long v1183 = *(_OWORD *)(v1177 + 80);
      *(_OWORD *)(v1176 + 64) = *(_OWORD *)(v1177 + 64);
      *(_OWORD *)(v1176 + 80) = v1183;
      *(unsigned char *)(v1176 + 96) = *(unsigned char *)(v1177 + 96);
      *(_OWORD *)(v1176 + 104) = *(_OWORD *)(v1177 + 104);
      *(_OWORD *)(v1176 + 120) = *(_OWORD *)(v1177 + 120);
      uint64_t v1184 = v1178[14];
      uint64_t v1185 = (void *)(v1176 + v1184);
      uint64_t v1186 = (const void *)(v1177 + v1184);
      uint64_t v1187 = type metadata accessor for DateComponents();
      if (__swift_getEnumTagSinglePayload((uint64_t)v1186, 1, v1187))
      {
        uint64_t v1188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
        memcpy(v1185, v1186, *(void *)(*(void *)(v1188 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v1187 - 8) + 32))(v1185, v1186, v1187);
        __swift_storeEnumTagSinglePayload((uint64_t)v1185, 0, 1, v1187);
      }
      *(_OWORD *)(v1176 + v1178[15]) = *(_OWORD *)(v1177 + v1178[15]);
      *(_OWORD *)(v1176 + v1178[16]) = *(_OWORD *)(v1177 + v1178[16]);
      *(_OWORD *)(v1176 + v1178[17]) = *(_OWORD *)(v1177 + v1178[17]);
      *(_OWORD *)(v1176 + v1178[18]) = *(_OWORD *)(v1177 + v1178[18]);
      *(_OWORD *)(v1176 + v1178[19]) = *(_OWORD *)(v1177 + v1178[19]);
      *(void *)(v1176 + v1178[20]) = *(void *)(v1177 + v1178[20]);
      *(_OWORD *)(v1176 + v1178[21]) = *(_OWORD *)(v1177 + v1178[21]);
      *(_OWORD *)(v1176 + v1178[22]) = *(_OWORD *)(v1177 + v1178[22]);
      *(_OWORD *)(v1176 + v1178[23]) = *(_OWORD *)(v1177 + v1178[23]);
      uint64_t v270 = v1176;
      uint64_t v269 = (uint64_t)v1178;
LABEL_112:
      __swift_storeEnumTagSinglePayload(v270, 0, 1, v269);
      goto LABEL_113;
    }
    goto LABEL_487;
  }
  if (v1180)
  {
    outlined destroy of EmailDocument(v1176, (void (*)(void))type metadata accessor for RestaurantReservation);
LABEL_487:
    size_t v35 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?)
                                - 8)
                    + 64);
    uint64_t v36 = (void *)v1176;
    uint64_t v37 = (const void *)v1177;
    goto LABEL_14;
  }
  uint64_t v1189 = *(void *)(v1177 + 8);
  *(void *)uint64_t v1176 = *(void *)v1177;
  *(void *)(v1176 + 8) = v1189;
  swift_bridgeObjectRelease();
  *(void *)(v1176 + 16) = *(void *)(v1177 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v1176 + 24) = *(void *)(v1177 + 24);
  swift_bridgeObjectRelease();
  uint64_t v1190 = *(void *)(v1177 + 40);
  *(void *)(v1176 + 32) = *(void *)(v1177 + 32);
  *(void *)(v1176 + 40) = v1190;
  swift_bridgeObjectRelease();
  uint64_t v1191 = *(void *)(v1177 + 56);
  *(void *)(v1176 + 48) = *(void *)(v1177 + 48);
  *(void *)(v1176 + 56) = v1191;
  swift_bridgeObjectRelease();
  uint64_t v1192 = *(void *)(v1177 + 72);
  *(void *)(v1176 + 64) = *(void *)(v1177 + 64);
  *(void *)(v1176 + 72) = v1192;
  swift_bridgeObjectRelease();
  uint64_t v1193 = *(void *)(v1177 + 88);
  *(void *)(v1176 + 80) = *(void *)(v1177 + 80);
  *(void *)(v1176 + 88) = v1193;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1176 + 96) = *(unsigned char *)(v1177 + 96);
  uint64_t v1194 = *(void *)(v1177 + 112);
  *(void *)(v1176 + 104) = *(void *)(v1177 + 104);
  *(void *)(v1176 + 112) = v1194;
  swift_bridgeObjectRelease();
  uint64_t v1195 = *(void *)(v1177 + 128);
  *(void *)(v1176 + 120) = *(void *)(v1177 + 120);
  *(void *)(v1176 + 128) = v1195;
  swift_bridgeObjectRelease();
  uint64_t v1196 = v1178[14];
  uint64_t v1197 = v1176 + v1196;
  uint64_t v1198 = (const void *)(v1177 + v1196);
  uint64_t v1199 = type metadata accessor for DateComponents();
  uint64_t v1273 = v1197;
  LODWORD(v1197) = __swift_getEnumTagSinglePayload(v1197, 1, v1199);
  int v1200 = __swift_getEnumTagSinglePayload((uint64_t)v1198, 1, v1199);
  if (v1197)
  {
    if (!v1200)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v1199 - 8) + 32))(v1273, v1198, v1199);
      __swift_storeEnumTagSinglePayload(v1273, 0, 1, v1199);
      goto LABEL_498;
    }
    size_t v1201 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                  - 8)
                      + 64);
    uint64_t v1202 = (void *)v1273;
  }
  else
  {
    uint64_t v1203 = *(void *)(v1199 - 8);
    if (!v1200)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v1203 + 40))(v1273, v1198, v1199);
      goto LABEL_498;
    }
    (*(void (**)(uint64_t, uint64_t))(v1203 + 8))(v1273, v1199);
    size_t v1201 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?)
                                  - 8)
                      + 64);
    uint64_t v1202 = (void *)v1273;
  }
  memcpy(v1202, v1198, v1201);
LABEL_498:
  uint64_t v1204 = v1178[15];
  uint64_t v1205 = (void *)(v1176 + v1204);
  uint64_t v1206 = (uint64_t *)(v1177 + v1204);
  uint64_t v1208 = *v1206;
  uint64_t v1207 = v1206[1];
  void *v1205 = v1208;
  v1205[1] = v1207;
  swift_bridgeObjectRelease();
  uint64_t v1209 = v1178[16];
  uint64_t v1210 = (void *)(v1176 + v1209);
  uint64_t v1211 = (uint64_t *)(v1177 + v1209);
  uint64_t v1213 = *v1211;
  uint64_t v1212 = v1211[1];
  void *v1210 = v1213;
  v1210[1] = v1212;
  swift_bridgeObjectRelease();
  uint64_t v1214 = v1178[17];
  uint64_t v1215 = (void *)(v1176 + v1214);
  uint64_t v1216 = (uint64_t *)(v1177 + v1214);
  uint64_t v1218 = *v1216;
  uint64_t v1217 = v1216[1];
  void *v1215 = v1218;
  v1215[1] = v1217;
  swift_bridgeObjectRelease();
  uint64_t v1219 = v1178[18];
  uint64_t v1220 = (void *)(v1176 + v1219);
  uint64_t v1221 = (uint64_t *)(v1177 + v1219);
  uint64_t v1223 = *v1221;
  uint64_t v1222 = v1221[1];
  void *v1220 = v1223;
  v1220[1] = v1222;
  swift_bridgeObjectRelease();
  uint64_t v1224 = v1178[19];
  uint64_t v1225 = (void *)(v1176 + v1224);
  uint64_t v1226 = (uint64_t *)(v1177 + v1224);
  uint64_t v1228 = *v1226;
  uint64_t v1227 = v1226[1];
  void *v1225 = v1228;
  v1225[1] = v1227;
  swift_bridgeObjectRelease();
  *(void *)(v1176 + v1178[20]) = *(void *)(v1177 + v1178[20]);
  swift_bridgeObjectRelease();
  uint64_t v1229 = v1178[21];
  uint64_t v1230 = (void *)(v1176 + v1229);
  uint64_t v1231 = (uint64_t *)(v1177 + v1229);
  uint64_t v1233 = *v1231;
  uint64_t v1232 = v1231[1];
  void *v1230 = v1233;
  v1230[1] = v1232;
  swift_bridgeObjectRelease();
  uint64_t v1234 = v1178[22];
  uint64_t v1235 = (void *)(v1176 + v1234);
  v1236 = (uint64_t *)(v1177 + v1234);
  uint64_t v1238 = *v1236;
  uint64_t v1237 = v1236[1];
  void *v1235 = v1238;
  v1235[1] = v1237;
  swift_bridgeObjectRelease();
  uint64_t v1239 = v1178[23];
  int v1240 = (void *)(v1176 + v1239);
  v1241 = (uint64_t *)(v1177 + v1239);
  uint64_t v1243 = *v1241;
  uint64_t v1242 = v1241[1];
  void *v1240 = v1243;
  v1240[1] = v1242;
  swift_bridgeObjectRelease();
LABEL_113:
  uint64_t v271 = a3[18];
  uint64_t v272 = (void *)((char *)a1 + v271);
  uint64_t v273 = (void *)((char *)a2 + v271);
  uint64_t v274 = (int *)type metadata accessor for PreExtractedCard(0);
  int v275 = __swift_getEnumTagSinglePayload((uint64_t)v272, 1, (uint64_t)v274);
  int v276 = __swift_getEnumTagSinglePayload((uint64_t)v273, 1, (uint64_t)v274);
  if (!v275)
  {
    if (v276)
    {
      outlined destroy of EmailDocument((uint64_t)v272, (void (*)(void))type metadata accessor for PreExtractedCard);
      goto LABEL_119;
    }
    uint64_t v285 = v273[1];
    void *v272 = *v273;
    v272[1] = v285;
    swift_bridgeObjectRelease();
    uint64_t v286 = v273[3];
    v272[2] = v273[2];
    v272[3] = v286;
    swift_bridgeObjectRelease();
    uint64_t v287 = v273[5];
    v272[4] = v273[4];
    v272[5] = v287;
    swift_bridgeObjectRelease();
    uint64_t v288 = v273[7];
    v272[6] = v273[6];
    v272[7] = v288;
    swift_bridgeObjectRelease();
    uint64_t v289 = v273[9];
    v272[8] = v273[8];
    v272[9] = v289;
    swift_bridgeObjectRelease();
    uint64_t v290 = v273[11];
    v272[10] = v273[10];
    v272[11] = v290;
    swift_bridgeObjectRelease();
    uint64_t v291 = v274[10];
    uint64_t v292 = (char *)v272 + v291;
    uint64_t v293 = (char *)v273 + v291;
    int v294 = __swift_getEnumTagSinglePayload((uint64_t)v272 + v291, 1, v13);
    int v295 = __swift_getEnumTagSinglePayload((uint64_t)v293, 1, v13);
    if (v294)
    {
      if (!v295)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v292, v293, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v13);
        goto LABEL_134;
      }
    }
    else
    {
      uint64_t v304 = *(void *)(v13 - 8);
      if (!v295)
      {
        (*(void (**)(char *, char *, uint64_t))(v304 + 40))(v292, v293, v13);
LABEL_134:
        uint64_t v306 = v274[11];
        uint64_t v307 = (char *)v272 + v306;
        uint64_t v308 = (char *)v273 + v306;
        int v309 = __swift_getEnumTagSinglePayload((uint64_t)v272 + v306, 1, v13);
        int v310 = __swift_getEnumTagSinglePayload((uint64_t)v308, 1, v13);
        if (v309)
        {
          if (!v310)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v307, v308, v13);
            __swift_storeEnumTagSinglePayload((uint64_t)v307, 0, 1, v13);
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v311 = *(void *)(v13 - 8);
          if (!v310)
          {
            (*(void (**)(char *, char *, uint64_t))(v311 + 40))(v307, v308, v13);
LABEL_140:
            uint64_t v313 = v274[12];
            uint64_t v314 = (void *)((char *)v272 + v313);
            uint64_t v315 = (void *)((char *)v273 + v313);
            uint64_t v317 = *v315;
            uint64_t v316 = v315[1];
            void *v314 = v317;
            v314[1] = v316;
            swift_bridgeObjectRelease();
            uint64_t v318 = v274[13];
            uint64_t v319 = (void *)((char *)v272 + v318);
            int v320 = (void *)((char *)v273 + v318);
            uint64_t v322 = *v320;
            uint64_t v321 = v320[1];
            *uint64_t v319 = v322;
            v319[1] = v321;
            swift_bridgeObjectRelease();
            uint64_t v323 = v274[14];
            uint64_t v324 = (void *)((char *)v272 + v323);
            int v325 = (void *)((char *)v273 + v323);
            uint64_t v327 = *v325;
            uint64_t v326 = v325[1];
            void *v324 = v327;
            v324[1] = v326;
            swift_bridgeObjectRelease();
            uint64_t v328 = v274[15];
            uint64_t v329 = (char *)v272 + v328;
            uint64_t v330 = (char *)v273 + v328;
            int v331 = __swift_getEnumTagSinglePayload((uint64_t)v272 + v328, 1, v13);
            int v332 = __swift_getEnumTagSinglePayload((uint64_t)v330, 1, v13);
            if (v331)
            {
              if (!v332)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v329, v330, v13);
                __swift_storeEnumTagSinglePayload((uint64_t)v329, 0, 1, v13);
LABEL_146:
                uint64_t v335 = v274[16];
                int v336 = (void *)((char *)v272 + v335);
                int v337 = (void *)((char *)v273 + v335);
                uint64_t v339 = *v337;
                uint64_t v338 = v337[1];
                void *v336 = v339;
                v336[1] = v338;
                swift_bridgeObjectRelease();
                uint64_t v340 = v274[17];
                uint64_t v341 = (void *)((char *)v272 + v340);
                uint64_t v342 = (void *)((char *)v273 + v340);
                uint64_t v344 = *v342;
                uint64_t v343 = v342[1];
                *uint64_t v341 = v344;
                v341[1] = v343;
                swift_bridgeObjectRelease();
                uint64_t v345 = v274[18];
                uint64_t v346 = (void *)((char *)v272 + v345);
                uint64_t v347 = (void *)((char *)v273 + v345);
                uint64_t v349 = *v347;
                uint64_t v348 = v347[1];
                void *v346 = v349;
                v346[1] = v348;
                swift_bridgeObjectRelease();
                uint64_t v350 = v274[19];
                uint64_t v351 = (void *)((char *)v272 + v350);
                uint64_t v352 = (void *)((char *)v273 + v350);
                uint64_t v354 = *v352;
                uint64_t v353 = v352[1];
                void *v351 = v354;
                v351[1] = v353;
                swift_bridgeObjectRelease();
                uint64_t v355 = v274[20];
                uint64_t v356 = (void *)((char *)v272 + v355);
                uint64_t v357 = (void *)((char *)v273 + v355);
                uint64_t v359 = *v357;
                uint64_t v358 = v357[1];
                *uint64_t v356 = v359;
                v356[1] = v358;
                swift_bridgeObjectRelease();
                uint64_t v360 = v274[21];
                uint64_t v361 = (void *)((char *)v272 + v360);
                uint64_t v362 = (void *)((char *)v273 + v360);
                uint64_t v364 = *v362;
                uint64_t v363 = v362[1];
                void *v361 = v364;
                v361[1] = v363;
                swift_bridgeObjectRelease();
                uint64_t v365 = v274[22];
                uint64_t v366 = (void *)((char *)v272 + v365);
                uint64_t v367 = (void *)((char *)v273 + v365);
                uint64_t v369 = *v367;
                uint64_t v368 = v367[1];
                *uint64_t v366 = v369;
                v366[1] = v368;
                swift_bridgeObjectRelease();
                uint64_t v370 = v274[23];
                uint64_t v371 = (void *)((char *)v272 + v370);
                uint64_t v372 = (void *)((char *)v273 + v370);
                uint64_t v374 = *v372;
                uint64_t v373 = v372[1];
                *uint64_t v371 = v374;
                v371[1] = v373;
                swift_bridgeObjectRelease();
                goto LABEL_147;
              }
            }
            else
            {
              uint64_t v333 = *(void *)(v13 - 8);
              if (!v332)
              {
                (*(void (**)(char *, char *, uint64_t))(v333 + 40))(v329, v330, v13);
                goto LABEL_146;
              }
              (*(void (**)(char *, uint64_t))(v333 + 8))(v329, v13);
            }
            uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v329, v330, *(void *)(*(void *)(v334 - 8) + 64));
            goto LABEL_146;
          }
          (*(void (**)(char *, uint64_t))(v311 + 8))(v307, v13);
        }
        uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v307, v308, *(void *)(*(void *)(v312 - 8) + 64));
        goto LABEL_140;
      }
      (*(void (**)(char *, uint64_t))(v304 + 8))(v292, v13);
    }
    uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v292, v293, *(void *)(*(void *)(v305 - 8) + 64));
    goto LABEL_134;
  }
  if (v276)
  {
LABEL_119:
    uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
    memcpy(v272, v273, *(void *)(*(void *)(v284 - 8) + 64));
    goto LABEL_147;
  }
  long long v277 = *((_OWORD *)v273 + 1);
  *(_OWORD *)uint64_t v272 = *(_OWORD *)v273;
  *((_OWORD *)v272 + 1) = v277;
  long long v278 = *((_OWORD *)v273 + 3);
  *((_OWORD *)v272 + 2) = *((_OWORD *)v273 + 2);
  *((_OWORD *)v272 + 3) = v278;
  long long v279 = *((_OWORD *)v273 + 5);
  *((_OWORD *)v272 + 4) = *((_OWORD *)v273 + 4);
  *((_OWORD *)v272 + 5) = v279;
  uint64_t v280 = v274[10];
  uint64_t v281 = (char *)v272 + v280;
  uint64_t v282 = (char *)v273 + v280;
  if (__swift_getEnumTagSinglePayload((uint64_t)v273 + v280, 1, v13))
  {
    uint64_t v283 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v281, v282, *(void *)(*(void *)(v283 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v281, v282, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v281, 0, 1, v13);
  }
  uint64_t v296 = v274[11];
  uint64_t v297 = (char *)v272 + v296;
  uint64_t v298 = (char *)v273 + v296;
  if (__swift_getEnumTagSinglePayload((uint64_t)v273 + v296, 1, v13))
  {
    uint64_t v299 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v297, v298, *(void *)(*(void *)(v299 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v297, v298, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v297, 0, 1, v13);
  }
  *(_OWORD *)((char *)v272 + v274[12]) = *(_OWORD *)((char *)v273 + v274[12]);
  *(_OWORD *)((char *)v272 + v274[13]) = *(_OWORD *)((char *)v273 + v274[13]);
  *(_OWORD *)((char *)v272 + v274[14]) = *(_OWORD *)((char *)v273 + v274[14]);
  uint64_t v300 = v274[15];
  uint64_t v301 = (char *)v272 + v300;
  uint64_t v302 = (char *)v273 + v300;
  if (__swift_getEnumTagSinglePayload((uint64_t)v273 + v300, 1, v13))
  {
    uint64_t v303 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v301, v302, *(void *)(*(void *)(v303 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v301, v302, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v301, 0, 1, v13);
  }
  *(_OWORD *)((char *)v272 + v274[16]) = *(_OWORD *)((char *)v273 + v274[16]);
  *(_OWORD *)((char *)v272 + v274[17]) = *(_OWORD *)((char *)v273 + v274[17]);
  *(_OWORD *)((char *)v272 + v274[18]) = *(_OWORD *)((char *)v273 + v274[18]);
  *(_OWORD *)((char *)v272 + v274[19]) = *(_OWORD *)((char *)v273 + v274[19]);
  *(_OWORD *)((char *)v272 + v274[20]) = *(_OWORD *)((char *)v273 + v274[20]);
  *(_OWORD *)((char *)v272 + v274[21]) = *(_OWORD *)((char *)v273 + v274[21]);
  *(_OWORD *)((char *)v272 + v274[22]) = *(_OWORD *)((char *)v273 + v274[22]);
  *(_OWORD *)((char *)v272 + v274[23]) = *(_OWORD *)((char *)v273 + v274[23]);
  __swift_storeEnumTagSinglePayload((uint64_t)v272, 0, 1, (uint64_t)v274);
LABEL_147:
  uint64_t v375 = a3[19];
  uint64_t v376 = (void *)((char *)a1 + v375);
  uint64_t v377 = (void *)((char *)a2 + v375);
  uint64_t v378 = (int *)type metadata accessor for PreExtractedContact(0);
  int v379 = __swift_getEnumTagSinglePayload((uint64_t)v376, 1, (uint64_t)v378);
  int v380 = __swift_getEnumTagSinglePayload((uint64_t)v377, 1, (uint64_t)v378);
  if (!v379)
  {
    if (v380)
    {
      outlined destroy of EmailDocument((uint64_t)v376, (void (*)(void))type metadata accessor for PreExtractedContact);
      goto LABEL_153;
    }
    uint64_t v389 = v377[1];
    void *v376 = *v377;
    v376[1] = v389;
    swift_bridgeObjectRelease();
    uint64_t v390 = v377[3];
    v376[2] = v377[2];
    v376[3] = v390;
    swift_bridgeObjectRelease();
    uint64_t v391 = v377[5];
    v376[4] = v377[4];
    v376[5] = v391;
    swift_bridgeObjectRelease();
    uint64_t v392 = v377[7];
    v376[6] = v377[6];
    v376[7] = v392;
    swift_bridgeObjectRelease();
    v376[8] = v377[8];
    swift_bridgeObjectRelease();
    v376[9] = v377[9];
    swift_bridgeObjectRelease();
    uint64_t v393 = v377[11];
    v376[10] = v377[10];
    v376[11] = v393;
    swift_bridgeObjectRelease();
    uint64_t v394 = v378[11];
    uint64_t v395 = (char *)v376 + v394;
    uint64_t v396 = (char *)v377 + v394;
    int v397 = __swift_getEnumTagSinglePayload((uint64_t)v376 + v394, 1, v13);
    int v398 = __swift_getEnumTagSinglePayload((uint64_t)v396, 1, v13);
    if (v397)
    {
      if (!v398)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v395, v396, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v395, 0, 1, v13);
        goto LABEL_165;
      }
    }
    else
    {
      uint64_t v403 = *(void *)(v13 - 8);
      if (!v398)
      {
        (*(void (**)(char *, char *, uint64_t))(v403 + 40))(v395, v396, v13);
LABEL_165:
        uint64_t v405 = v378[12];
        uint64_t v406 = (void *)((char *)v376 + v405);
        uint64_t v407 = (void *)((char *)v377 + v405);
        uint64_t v409 = *v407;
        uint64_t v408 = v407[1];
        void *v406 = v409;
        v406[1] = v408;
        swift_bridgeObjectRelease();
        *(void *)((char *)v376 + v378[13]) = *(void *)((char *)v377 + v378[13]);
        swift_bridgeObjectRelease();
        uint64_t v410 = v378[14];
        uint64_t v411 = (char *)v376 + v410;
        uint64_t v412 = (char *)v377 + v410;
        int v413 = __swift_getEnumTagSinglePayload((uint64_t)v376 + v410, 1, v13);
        int v414 = __swift_getEnumTagSinglePayload((uint64_t)v412, 1, v13);
        if (v413)
        {
          if (!v414)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v411, v412, v13);
            __swift_storeEnumTagSinglePayload((uint64_t)v411, 0, 1, v13);
LABEL_171:
            *(void *)((char *)v376 + v378[15]) = *(void *)((char *)v377 + v378[15]);
            swift_bridgeObjectRelease();
            *(void *)((char *)v376 + v378[16]) = *(void *)((char *)v377 + v378[16]);
            swift_bridgeObjectRelease();
            uint64_t v417 = v378[17];
            uint64_t v418 = (void *)((char *)v376 + v417);
            int v419 = (void *)((char *)v377 + v417);
            uint64_t v421 = *v419;
            uint64_t v420 = v419[1];
            *uint64_t v418 = v421;
            v418[1] = v420;
            swift_bridgeObjectRelease();
            *(void *)((char *)v376 + v378[18]) = *(void *)((char *)v377 + v378[18]);
            swift_bridgeObjectRelease();
            *(void *)((char *)v376 + v378[19]) = *(void *)((char *)v377 + v378[19]);
            swift_bridgeObjectRelease();
            goto LABEL_172;
          }
        }
        else
        {
          uint64_t v415 = *(void *)(v13 - 8);
          if (!v414)
          {
            (*(void (**)(char *, char *, uint64_t))(v415 + 40))(v411, v412, v13);
            goto LABEL_171;
          }
          (*(void (**)(char *, uint64_t))(v415 + 8))(v411, v13);
        }
        uint64_t v416 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v411, v412, *(void *)(*(void *)(v416 - 8) + 64));
        goto LABEL_171;
      }
      (*(void (**)(char *, uint64_t))(v403 + 8))(v395, v13);
    }
    uint64_t v404 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v395, v396, *(void *)(*(void *)(v404 - 8) + 64));
    goto LABEL_165;
  }
  if (v380)
  {
LABEL_153:
    uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
    memcpy(v376, v377, *(void *)(*(void *)(v388 - 8) + 64));
    goto LABEL_172;
  }
  long long v381 = *((_OWORD *)v377 + 1);
  *(_OWORD *)uint64_t v376 = *(_OWORD *)v377;
  *((_OWORD *)v376 + 1) = v381;
  long long v382 = *((_OWORD *)v377 + 3);
  *((_OWORD *)v376 + 2) = *((_OWORD *)v377 + 2);
  *((_OWORD *)v376 + 3) = v382;
  long long v383 = *((_OWORD *)v377 + 5);
  *((_OWORD *)v376 + 4) = *((_OWORD *)v377 + 4);
  *((_OWORD *)v376 + 5) = v383;
  uint64_t v384 = v378[11];
  uint64_t v385 = (char *)v376 + v384;
  uint64_t v386 = (char *)v377 + v384;
  if (__swift_getEnumTagSinglePayload((uint64_t)v377 + v384, 1, v13))
  {
    uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v385, v386, *(void *)(*(void *)(v387 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v385, v386, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v385, 0, 1, v13);
  }
  *(_OWORD *)((char *)v376 + v378[12]) = *(_OWORD *)((char *)v377 + v378[12]);
  *(void *)((char *)v376 + v378[13]) = *(void *)((char *)v377 + v378[13]);
  uint64_t v399 = v378[14];
  uint64_t v400 = (char *)v376 + v399;
  uint64_t v401 = (char *)v377 + v399;
  if (__swift_getEnumTagSinglePayload((uint64_t)v377 + v399, 1, v13))
  {
    uint64_t v402 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v400, v401, *(void *)(*(void *)(v402 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v400, v401, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v400, 0, 1, v13);
  }
  *(void *)((char *)v376 + v378[15]) = *(void *)((char *)v377 + v378[15]);
  *(void *)((char *)v376 + v378[16]) = *(void *)((char *)v377 + v378[16]);
  *(_OWORD *)((char *)v376 + v378[17]) = *(_OWORD *)((char *)v377 + v378[17]);
  *(void *)((char *)v376 + v378[18]) = *(void *)((char *)v377 + v378[18]);
  *(void *)((char *)v376 + v378[19]) = *(void *)((char *)v377 + v378[19]);
  __swift_storeEnumTagSinglePayload((uint64_t)v376, 0, 1, (uint64_t)v378);
LABEL_172:
  uint64_t v422 = a3[20];
  uint64_t v423 = (void *)((char *)a1 + v422);
  uint64_t v424 = (void *)((char *)a2 + v422);
  uint64_t v425 = (int *)type metadata accessor for PreExtractedSharedLink(0);
  int v426 = __swift_getEnumTagSinglePayload((uint64_t)v423, 1, (uint64_t)v425);
  int v427 = __swift_getEnumTagSinglePayload((uint64_t)v424, 1, (uint64_t)v425);
  if (!v426)
  {
    if (v427)
    {
      outlined destroy of EmailDocument((uint64_t)v423, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
      goto LABEL_178;
    }
    v1267 = a3;
    uint64_t v436 = v13;
    uint64_t v437 = v424[1];
    void *v423 = *v424;
    v423[1] = v437;
    swift_bridgeObjectRelease();
    uint64_t v438 = v424[3];
    v423[2] = v424[2];
    v423[3] = v438;
    swift_bridgeObjectRelease();
    uint64_t v439 = v424[5];
    v423[4] = v424[4];
    v423[5] = v439;
    swift_bridgeObjectRelease();
    uint64_t v440 = v424[7];
    v423[6] = v424[6];
    v423[7] = v440;
    swift_bridgeObjectRelease();
    uint64_t v441 = v425[8];
    uint64_t v442 = (char *)v423 + v441;
    uint64_t v443 = (char *)v424 + v441;
    uint64_t v444 = type metadata accessor for URL();
    int v445 = __swift_getEnumTagSinglePayload((uint64_t)v442, 1, v444);
    int v446 = __swift_getEnumTagSinglePayload((uint64_t)v443, 1, v444);
    if (v445)
    {
      if (!v446)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 32))(v442, v443, v444);
        __swift_storeEnumTagSinglePayload((uint64_t)v442, 0, 1, v444);
        goto LABEL_193;
      }
    }
    else
    {
      uint64_t v458 = *(void *)(v444 - 8);
      if (!v446)
      {
        (*(void (**)(char *, char *, uint64_t))(v458 + 40))(v442, v443, v444);
LABEL_193:
        uint64_t v460 = v436;
        uint64_t v461 = v425[9];
        uint64_t v462 = (void *)((char *)v423 + v461);
        uint64_t v463 = (void *)((char *)v424 + v461);
        uint64_t v465 = *v463;
        uint64_t v464 = v463[1];
        void *v462 = v465;
        v462[1] = v464;
        swift_bridgeObjectRelease();
        uint64_t v466 = v425[10];
        uint64_t v467 = (void *)((char *)v423 + v466);
        uint64_t v468 = (void *)((char *)v424 + v466);
        uint64_t v470 = *v468;
        uint64_t v469 = v468[1];
        *uint64_t v467 = v470;
        v467[1] = v469;
        swift_bridgeObjectRelease();
        uint64_t v471 = v425[11];
        uint64_t v472 = (void *)((char *)v423 + v471);
        uint64_t v473 = (void *)((char *)v424 + v471);
        uint64_t v475 = *v473;
        uint64_t v474 = v473[1];
        *uint64_t v472 = v475;
        v472[1] = v474;
        swift_bridgeObjectRelease();
        uint64_t v476 = v425[12];
        uint64_t v477 = (char *)v423 + v476;
        uint64_t v478 = (char *)v424 + v476;
        int v479 = __swift_getEnumTagSinglePayload((uint64_t)v423 + v476, 1, v436);
        int v480 = __swift_getEnumTagSinglePayload((uint64_t)v478, 1, v436);
        if (v479)
        {
          if (v480)
          {
            uint64_t v481 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v477, v478, *(void *)(*(void *)(v481 - 8) + 64));
            uint64_t v460 = v436;
          }
          else
          {
            uint64_t v460 = v436;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 32))(v477, v478, v436);
            __swift_storeEnumTagSinglePayload((uint64_t)v477, 0, 1, v436);
          }
        }
        else
        {
          uint64_t v482 = *(void *)(v436 - 8);
          if (v480)
          {
            (*(void (**)(char *, uint64_t))(v482 + 8))(v477, v436);
            uint64_t v483 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v477, v478, *(void *)(*(void *)(v483 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v482 + 40))(v477, v478, v436);
          }
        }
        uint64_t v513 = v425[13];
        uint64_t v514 = (char *)v423 + v513;
        uint64_t v515 = (char *)v424 + v513;
        int v516 = __swift_getEnumTagSinglePayload((uint64_t)v423 + v513, 1, v460);
        int v517 = __swift_getEnumTagSinglePayload((uint64_t)v515, 1, v460);
        if (v516)
        {
          if (!v517)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 32))(v514, v515, v436);
            __swift_storeEnumTagSinglePayload((uint64_t)v514, 0, 1, v436);
LABEL_215:
            a3 = v1267;
            uint64_t v520 = v425[14];
            uint64_t v521 = (char *)v423 + v520;
            uint64_t v522 = (char *)v424 + v520;
            *(void *)uint64_t v521 = *(void *)v522;
            v521[8] = v522[8];
            uint64_t v523 = v425[15];
            uint64_t v524 = (void *)((char *)v423 + v523);
            uint64_t v525 = (void *)((char *)v424 + v523);
            uint64_t v527 = *v525;
            uint64_t v526 = v525[1];
            void *v524 = v527;
            v524[1] = v526;
            swift_bridgeObjectRelease();
            uint64_t v528 = v425[16];
            uint64_t v529 = (void *)((char *)v423 + v528);
            uint64_t v530 = (void *)((char *)v424 + v528);
            uint64_t v532 = *v530;
            uint64_t v531 = v530[1];
            void *v529 = v532;
            v529[1] = v531;
            swift_bridgeObjectRelease();
            uint64_t v533 = v425[17];
            uint64_t v534 = (void *)((char *)v423 + v533);
            uint64_t v535 = (void *)((char *)v424 + v533);
            uint64_t v537 = *v535;
            uint64_t v536 = v535[1];
            *uint64_t v534 = v537;
            v534[1] = v536;
            swift_bridgeObjectRelease();
            uint64_t v538 = v425[18];
            uint64_t v539 = (void *)((char *)v423 + v538);
            uint64_t v540 = (void *)((char *)v424 + v538);
            uint64_t v542 = *v540;
            uint64_t v541 = v540[1];
            *uint64_t v539 = v542;
            v539[1] = v541;
            swift_bridgeObjectRelease();
            uint64_t v543 = v425[19];
            int v544 = (void *)((char *)v423 + v543);
            uint64_t v545 = (void *)((char *)v424 + v543);
            uint64_t v547 = *v545;
            uint64_t v546 = v545[1];
            void *v544 = v547;
            v544[1] = v546;
            swift_bridgeObjectRelease();
            goto LABEL_216;
          }
        }
        else
        {
          uint64_t v518 = *(void *)(v460 - 8);
          if (!v517)
          {
            (*(void (**)(char *, char *, uint64_t))(v518 + 40))(v514, v515, v460);
            goto LABEL_215;
          }
          (*(void (**)(char *, uint64_t))(v518 + 8))(v514, v460);
        }
        uint64_t v519 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v514, v515, *(void *)(*(void *)(v519 - 8) + 64));
        goto LABEL_215;
      }
      (*(void (**)(char *, uint64_t))(v458 + 8))(v442, v444);
    }
    uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v442, v443, *(void *)(*(void *)(v459 - 8) + 64));
    goto LABEL_193;
  }
  if (v427)
  {
LABEL_178:
    uint64_t v435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
    memcpy(v423, v424, *(void *)(*(void *)(v435 - 8) + 64));
    goto LABEL_216;
  }
  long long v428 = *((_OWORD *)v424 + 1);
  *(_OWORD *)uint64_t v423 = *(_OWORD *)v424;
  *((_OWORD *)v423 + 1) = v428;
  long long v429 = *((_OWORD *)v424 + 3);
  *((_OWORD *)v423 + 2) = *((_OWORD *)v424 + 2);
  *((_OWORD *)v423 + 3) = v429;
  uint64_t v430 = v425[8];
  uint64_t v431 = (char *)v423 + v430;
  uint64_t v432 = (char *)v424 + v430;
  uint64_t v433 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v433))
  {
    uint64_t v434 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v431, v432, *(void *)(*(void *)(v434 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v433 - 8) + 32))(v431, v432, v433);
    __swift_storeEnumTagSinglePayload((uint64_t)v431, 0, 1, v433);
  }
  *(_OWORD *)((char *)v423 + v425[9]) = *(_OWORD *)((char *)v424 + v425[9]);
  *(_OWORD *)((char *)v423 + v425[10]) = *(_OWORD *)((char *)v424 + v425[10]);
  *(_OWORD *)((char *)v423 + v425[11]) = *(_OWORD *)((char *)v424 + v425[11]);
  uint64_t v447 = v425[12];
  uint64_t v448 = (char *)v423 + v447;
  uint64_t v449 = (char *)v424 + v447;
  if (__swift_getEnumTagSinglePayload((uint64_t)v424 + v447, 1, v13))
  {
    uint64_t v450 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v448, v449, *(void *)(*(void *)(v450 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v448, v449, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v448, 0, 1, v13);
  }
  uint64_t v451 = v425[13];
  uint64_t v452 = (char *)v423 + v451;
  uint64_t v453 = (char *)v424 + v451;
  if (__swift_getEnumTagSinglePayload((uint64_t)v424 + v451, 1, v13))
  {
    uint64_t v454 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v452, v453, *(void *)(*(void *)(v454 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v452, v453, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v452, 0, 1, v13);
  }
  uint64_t v455 = v425[14];
  uint64_t v456 = (char *)v423 + v455;
  uint64_t v457 = (char *)v424 + v455;
  *(void *)uint64_t v456 = *(void *)v457;
  v456[8] = v457[8];
  *(_OWORD *)((char *)v423 + v425[15]) = *(_OWORD *)((char *)v424 + v425[15]);
  *(_OWORD *)((char *)v423 + v425[16]) = *(_OWORD *)((char *)v424 + v425[16]);
  *(_OWORD *)((char *)v423 + v425[17]) = *(_OWORD *)((char *)v424 + v425[17]);
  *(_OWORD *)((char *)v423 + v425[18]) = *(_OWORD *)((char *)v424 + v425[18]);
  *(_OWORD *)((char *)v423 + v425[19]) = *(_OWORD *)((char *)v424 + v425[19]);
  __swift_storeEnumTagSinglePayload((uint64_t)v423, 0, 1, (uint64_t)v425);
LABEL_216:
  uint64_t v548 = a3[21];
  uint64_t v549 = (void *)((char *)a1 + v548);
  uint64_t v550 = (void *)((char *)a2 + v548);
  if (!*(void *)((char *)a1 + v548 + 8))
  {
LABEL_220:
    memcpy(v549, v550, 0x90uLL);
    return a1;
  }
  uint64_t v551 = v550[1];
  if (!v551)
  {
    outlined destroy of PreExtractedBreadcrumb((uint64_t)v549);
    goto LABEL_220;
  }
  void *v549 = *v550;
  v549[1] = v551;
  swift_bridgeObjectRelease();
  v549[2] = v550[2];
  swift_bridgeObjectRelease();
  v549[3] = v550[3];
  swift_bridgeObjectRelease();
  v549[4] = v550[4];
  swift_bridgeObjectRelease();
  v549[5] = v550[5];
  swift_bridgeObjectRelease();
  v549[6] = v550[6];
  swift_bridgeObjectRelease();
  v549[7] = v550[7];
  swift_bridgeObjectRelease();
  v549[8] = v550[8];
  swift_bridgeObjectRelease();
  v549[9] = v550[9];
  swift_bridgeObjectRelease();
  v549[10] = v550[10];
  swift_bridgeObjectRelease();
  v549[11] = v550[11];
  swift_bridgeObjectRelease();
  v549[12] = v550[12];
  swift_bridgeObjectRelease();
  v549[13] = v550[13];
  swift_bridgeObjectRelease();
  v549[14] = v550[14];
  swift_bridgeObjectRelease();
  v549[15] = v550[15];
  swift_bridgeObjectRelease();
  v549[16] = v550[16];
  swift_bridgeObjectRelease();
  v549[17] = v550[17];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Photo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258536338);
}

uint64_t sub_258536338()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v1[11];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      uint64_t v5 = v1[17];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        uint64_t v5 = v1[18];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v8 + 84) == v0)
        {
          uint64_t v5 = v1[19];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          uint64_t v5 = v1[20];
        }
      }
    }
  }
  uint64_t v9 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v9, v10, v11);
}

uint64_t storeEnumTagSinglePayload for Photo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258536458);
}

void sub_258536458()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = v0[11];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v5 + 84) == v1)
      {
        uint64_t v4 = v0[17];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v6 + 84) == v1)
        {
          uint64_t v4 = v0[18];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          OUTLINED_FUNCTION_29_3();
          if (*(_DWORD *)(v7 + 84) == v1)
          {
            uint64_t v4 = v0[19];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            uint64_t v4 = v0[20];
          }
        }
      }
    }
    uint64_t v8 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
  }
}

void type metadata completion function for Photo()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PartialExtractedAttributes?, (void (*)(uint64_t))type metadata accessor for PartialExtractedAttributes);
    if (v1 <= 0x3F)
    {
      type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedCard?, (void (*)(uint64_t))type metadata accessor for PreExtractedCard);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedContact?, (void (*)(uint64_t))type metadata accessor for PreExtractedContact);
        if (v3 <= 0x3F)
        {
          type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for PreExtractedSharedLink?, (void (*)(uint64_t))type metadata accessor for PreExtractedSharedLink);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NoteDocument(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v14 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v14))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v18, v19, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v14);
    }
  }
  return v4;
}

uint64_t destroy for NoteDocument(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v8(v6, v5);
  }
  return result;
}

void *initializeWithCopy for NoteDocument(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v13))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v17, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
  }
  return a1;
}

void *assignWithCopy for NoteDocument(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v14, 1, v9);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for NoteDocument(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v11))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v14, v15, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v11);
  }
  return a1;
}

void *assignWithTake for NoteDocument(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v18, 1, v13);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v13);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v13 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v19, v20, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v13);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v19, v20, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoteDocument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2585373F8);
}

uint64_t sub_2585373F8()
{
  OUTLINED_FUNCTION_87_1();
  if (v1) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v3 = OUTLINED_FUNCTION_108_7(*(int *)(v0 + 32));
  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for NoteDocument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258537478);
}

void sub_258537478()
{
  OUTLINED_FUNCTION_71_1();
  if (v1)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    uint64_t v3 = OUTLINED_FUNCTION_95_0(*(int *)(v2 + 32));
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

void type metadata completion function for NoteDocument()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for Reminder(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v16, 1, v13))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v17, v18, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v13);
    }
    uint64_t v20 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    int v21 = (void *)((char *)v4 + v20);
    int v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *int v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[11];
    uint64_t v25 = a3[12];
    long long v26 = (void *)((char *)v4 + v24);
    int v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *long long v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v4 + v25;
    long long v30 = (char *)a2 + v25;
    uint64_t v31 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
    }
  }
  return v4;
}

uint64_t destroy for Reminder(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[8];
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[12];
  uint64_t v8 = type metadata accessor for URL();
  uint64_t result = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v10(v7, v8);
  }
  return result;
}

void *initializeWithCopy for Reminder(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v14, 1, v12))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v15, v16, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
  }
  uint64_t v18 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  int v27 = (char *)a1 + v23;
  uint64_t v28 = (char *)a2 + v23;
  uint64_t v29 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  return a1;
}

void *assignWithCopy for Reminder(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v14, 1, v9);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v19 = *(void *)(v9 - 8);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
LABEL_13:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[12];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for URL();
  int v31 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v30);
  int v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30);
  if (!v31)
  {
    uint64_t v33 = *(void *)(v30 - 8);
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  return a1;
}

_OWORD *initializeWithTake for Reminder(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v10))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  uint64_t v17 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  int v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

void *assignWithTake for Reminder(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v17 = a3[8];
  int v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v17, 1, v12);
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v12);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v18, v19, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v22 = *(void *)(v12 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v12);
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v18, v19, v12);
LABEL_13:
  uint64_t v24 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)((char *)a1 + v29);
  int v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  size_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for URL();
  int v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v37);
  int v39 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37);
  if (!v38)
  {
    uint64_t v40 = *(void *)(v37 - 8);
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v35, v36, v37);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v37);
    goto LABEL_18;
  }
  if (v39)
  {
LABEL_18:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for Reminder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258538778);
}

uint64_t sub_258538778()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 28);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v5 = *(int *)(v1 + 48);
  }
  uint64_t v6 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for Reminder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258538820);
}

void sub_258538820()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 28);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      uint64_t v4 = *(int *)(v0 + 48);
    }
    uint64_t v5 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

void type metadata completion function for Reminder()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneHistory(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = a3[10];
    uint64_t v29 = (char *)a2 + v11;
    __dst = (char *)a1 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v12 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(__dst, v29, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(__dst, v29, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v12);
    }
    uint64_t v15 = a3[11];
    uint64_t v16 = a3[12];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    int v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    int v20 = (uint64_t *)((char *)v4 + v16);
    int v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *int v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[13];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
    }
  }
  return v4;
}

uint64_t destroy for PhoneHistory(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for PhoneHistory(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  uint64_t v9 = a3[10];
  __dst = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v11 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(__dst, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v11);
  }
  uint64_t v13 = a3[11];
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  int v18 = (void *)((char *)a1 + v14);
  uint64_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *int v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[13];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
  }
  return a1;
}

void *assignWithCopy for PhoneHistory(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[12];
  int v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *int v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[13];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for URL();
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  int v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (!v24)
  {
    uint64_t v26 = *(void *)(v23 - 8);
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
  return a1;
}

_OWORD *initializeWithTake for PhoneHistory(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[10];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[13];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  return a1;
}

void *assignWithTake for PhoneHistory(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[10];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[13];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for URL();
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v29);
  int v31 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29);
  if (!v30)
  {
    uint64_t v32 = *(void *)(v29 - 8);
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v27, v28, v29);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v29);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneHistory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853982C);
}

uint64_t sub_25853982C()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 40);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v5 = *(int *)(v1 + 52);
  }
  uint64_t v6 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for PhoneHistory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2585398D4);
}

void sub_2585398D4()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 40);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      uint64_t v4 = *(int *)(v0 + 52);
    }
    uint64_t v5 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

void type metadata completion function for PhoneHistory()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for VoicemailTranscript(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t destroy for VoicemailTranscript(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for VoicemailTranscript(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  return a1;
}

void *assignWithCopy for VoicemailTranscript(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for URL();
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  return a1;
}

_OWORD *initializeWithTake for VoicemailTranscript(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithTake for VoicemailTranscript(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 32);
  int v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for URL();
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v20 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for VoicemailTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853A6C8);
}

uint64_t sub_25853A6C8()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 28);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v5 = *(int *)(v1 + 32);
  }
  uint64_t v6 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for VoicemailTranscript(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853A770);
}

void sub_25853A770()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 28);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      uint64_t v4 = *(int *)(v0 + 32);
    }
    uint64_t v5 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

void type metadata completion function for VoicemailTranscript()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for JournalEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853A930);
}

uint64_t sub_25853A930()
{
  return __swift_get_extra_inhabitant_index_6Tm();
}

uint64_t storeEnumTagSinglePayload for JournalEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853A950);
}

void sub_25853A950()
{
}

void type metadata completion function for JournalEntry()
{
  type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for VoiceMemo(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v15;
    int v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    int v19 = (char *)v4 + v16;
    uint64_t v20 = (char *)a2 + v16;
    uint64_t v21 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
    }
  }
  return v4;
}

uint64_t destroy for VoiceMemo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for VoiceMemo(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = (char *)a1 + v14;
  int v18 = (char *)a2 + v14;
  uint64_t v19 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

void *assignWithCopy for VoiceMemo(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for URL();
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (!v22)
  {
    uint64_t v24 = *(void *)(v21 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  return a1;
}

_OWORD *initializeWithTake for VoiceMemo(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithTake for VoiceMemo(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  uint64_t v22 = type metadata accessor for URL();
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22);
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22);
  if (!v23)
  {
    uint64_t v25 = *(void *)(v22 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceMemo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853B660);
}

uint64_t sub_25853B660()
{
  OUTLINED_FUNCTION_87_1();
  if (v2) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 24);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v5 = *(int *)(v1 + 32);
  }
  uint64_t v6 = OUTLINED_FUNCTION_108_7(v5);
  return __swift_getEnumTagSinglePayload(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for VoiceMemo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853B708);
}

void sub_25853B708()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    OUTLINED_FUNCTION_297();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 24);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      uint64_t v4 = *(int *)(v0 + 32);
    }
    uint64_t v5 = OUTLINED_FUNCTION_95_0(v4);
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

void type metadata completion function for VoiceMemo()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Safari(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)v4 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    int v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v12))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v24, v25, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for Safari(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v8(v6, v5);
  }
  return result;
}

void *initializeWithCopy for Safari(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  uint64_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v11))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v22, v23, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v11);
  }
  return a1;
}

void *assignWithCopy for Safari(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v20, 1, v9);
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v9);
  if (!v23)
  {
    uint64_t v25 = *(void *)(v9 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v21, v22, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v9);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v21, v22, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for Safari(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v14, v15, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
  }
  return a1;
}

void *assignWithTake for Safari(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  int v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v26, 1, v11);
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v11);
  if (!v29)
  {
    uint64_t v31 = *(void *)(v11 - 8);
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v27, v28, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v11);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v27, v28, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Safari(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853C55C);
}

uint64_t sub_25853C55C()
{
  OUTLINED_FUNCTION_87_1();
  if (v1) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v3 = OUTLINED_FUNCTION_108_7(*(int *)(v0 + 24));
  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for Safari(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853C5DC);
}

void sub_25853C5DC()
{
  OUTLINED_FUNCTION_71_1();
  if (v1)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v3 = OUTLINED_FUNCTION_95_0(*(int *)(v2 + 24));
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

void type metadata completion function for Safari()
{
  type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void destroy for FileDocument(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *initializeBufferWithCopyOfBuffer for FileDocument(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for FileDocument(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for FileDocument(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

void type metadata accessor for FileDocument()
{
}

unsigned char *storeEnumTagSinglePayload for FileDocument.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853C908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for FileDocument.CodingKeys()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for WalletTransaction(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)v4 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    uint64_t v25 = a3[11];
    uint64_t v26 = (uint64_t *)((char *)v4 + v24);
    uint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    int v29 = (char *)v4 + v25;
    int v30 = (char *)a2 + v25;
    *(_OWORD *)int v29 = *(_OWORD *)v30;
    *(void *)(v29 + 13) = *(void *)(v30 + 13);
    uint64_t v31 = a3[12];
    uint64_t v32 = (uint64_t *)((char *)v4 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for WalletTransaction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WalletTransaction(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (char *)a1 + v23;
  uint64_t v28 = (char *)a2 + v23;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(void *)(v27 + 13) = *(void *)(v28 + 13);
  uint64_t v29 = a3[12];
  int v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WalletTransaction(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  long long v26 = *(_OWORD *)v25;
  *(void *)(v24 + 13) = *(void *)(v25 + 13);
  *(_OWORD *)uint64_t v24 = v26;
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for WalletTransaction(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 13) = *(void *)(v15 + 13);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *assignWithTake for WalletTransaction(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v32;
  size_t v35 = (char *)a2 + v32;
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(void *)(v34 + 13) = *(void *)(v35 + 13);
  uint64_t v36 = (void *)((char *)a1 + v33);
  uint64_t v37 = (void *)((char *)a2 + v33);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WalletTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853D3B0);
}

uint64_t sub_25853D3B0()
{
  return __swift_get_extra_inhabitant_index_6Tm();
}

uint64_t storeEnumTagSinglePayload for WalletTransaction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853D3D0);
}

void sub_25853D3D0()
{
}

void type metadata completion function for WalletTransaction()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WalletPass(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for WalletPass(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WalletPass(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WalletPass(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for WalletPass(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

void *assignWithTake for WalletPass(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WalletPass(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853DD40);
}

uint64_t sub_25853DD40()
{
  return __swift_get_extra_inhabitant_index_6Tm();
}

uint64_t __swift_get_extra_inhabitant_index_6Tm()
{
  OUTLINED_FUNCTION_87_1();
  if (v1) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(v3);
  uint64_t v4 = OUTLINED_FUNCTION_108_7(*(int *)(v0 + 28));
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for WalletPass(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853DDC8);
}

void sub_25853DDC8()
{
}

void __swift_store_extra_inhabitant_index_7Tm()
{
  OUTLINED_FUNCTION_71_1();
  if (v2)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    uint64_t v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(v1);
    uint64_t v4 = OUTLINED_FUNCTION_95_0(*(int *)(v3 + 28));
    __swift_storeEnumTagSinglePayload(v4, v5, v6, v7);
  }
}

void type metadata completion function for WalletPass()
{
  type metadata accessor for PartialExtractedAttributes?(319, &lazy cache variable for type metadata for Date?, MEMORY[0x263F07490]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for Contact()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Contact(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Contact(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Contact(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Contact(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Contact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Contact()
{
}

void *initializeBufferWithCopyOfBuffer for Answer(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a3[9];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[6] = a2[6];
    uint64_t v12 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(__dst, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v12);
    }
    uint64_t v15 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Answer(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Answer(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[9];
  __dst = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v11 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(__dst, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v11);
  }
  uint64_t v13 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Answer(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Answer(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

void *assignWithTake for Answer(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
LABEL_7:
  uint64_t v16 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Answer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25853EB30);
}

uint64_t sub_25853EB30()
{
  OUTLINED_FUNCTION_87_1();
  if (v1) {
    return OUTLINED_FUNCTION_44_21();
  }
  OUTLINED_FUNCTION_119_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v3 = OUTLINED_FUNCTION_108_7(*(int *)(v0 + 36));
  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for Answer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25853EBB0);
}

void sub_25853EBB0()
{
  OUTLINED_FUNCTION_71_1();
  if (v1)
  {
    OUTLINED_FUNCTION_113_11();
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v3 = OUTLINED_FUNCTION_95_0(*(int *)(v2 + 36));
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

void type metadata completion function for Answer()
{
  type metadata accessor for PartialExtractedAttributes?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for Answer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853EDC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Answer.CodingKeys()
{
  return &unk_2706B39D0;
}

unsigned char *storeEnumTagSinglePayload for Contact.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853EEC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Contact.CodingKeys()
{
  return &unk_2706B3A60;
}

void *type metadata accessor for WalletPass.CodingKeys()
{
  return &unk_2706B3AF0;
}

void *type metadata accessor for WalletTransaction.CodingKeys()
{
  return &unk_2706B3B80;
}

void *type metadata accessor for Safari.CodingKeys()
{
  return &unk_2706B3C10;
}

void *type metadata accessor for VoiceMemo.CodingKeys()
{
  return &unk_2706B3CA0;
}

unsigned char *storeEnumTagSinglePayload for JournalEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for JournalEntry.CodingKeys()
{
  return &unk_2706B3D30;
}

uint64_t getEnumTagSinglePayload for VoiceMemo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_218_0(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_218_0(v8);
}

unsigned char *storeEnumTagSinglePayload for VoiceMemo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_133_5((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_130_5((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F19CLL);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_131_7((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_132_6(result, a2 + 4);
        break;
    }
  }
  return result;
}

void *type metadata accessor for VoicemailTranscript.CodingKeys()
{
  return &unk_2706B3DC0;
}

void *type metadata accessor for PhoneHistory.CodingKeys()
{
  return &unk_2706B3E50;
}

uint64_t getEnumTagSinglePayload for WalletTransaction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_218_0(-1);
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 9);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 9);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 9);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_218_0(v8);
}

unsigned char *storeEnumTagSinglePayload for WalletTransaction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_133_5((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_130_5((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F32CLL);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_131_7((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_132_6(result, a2 + 8);
        break;
    }
  }
  return result;
}

void *type metadata accessor for Reminder.CodingKeys()
{
  return &unk_2706B3EE0;
}

uint64_t getEnumTagSinglePayload for WalletPass.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_218_0(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 6);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 6);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 6);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_218_0(v8);
}

unsigned char *storeEnumTagSinglePayload for WalletPass.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_133_5((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_130_5((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F4A4);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_131_7((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_132_6(result, a2 + 5);
        break;
    }
  }
  return result;
}

void *type metadata accessor for NoteDocument.CodingKeys()
{
  return &unk_2706B3F70;
}

unsigned char *storeEnumTagSinglePayload for Photo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F5A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Photo.CodingKeys()
{
  return &unk_2706B4000;
}

uint64_t getEnumTagSinglePayload for PhoneHistory.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_218_0(-1);
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 10);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 10);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 10);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_218_0(v8);
}

unsigned char *storeEnumTagSinglePayload for PhoneHistory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_133_5((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_130_5((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F720);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_131_7((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_132_6(result, a2 + 9);
        break;
    }
  }
  return result;
}

void *type metadata accessor for CalendarEvent.CodingKeys()
{
  return &unk_2706B4090;
}

unsigned char *storeEnumTagSinglePayload for MobileSMSDocument.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

void *type metadata accessor for MobileSMSDocument.CodingKeys()
{
  return &unk_2706B4120;
}

unsigned char *storeEnumTagSinglePayload for EmailDocument.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25853F928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

void *type metadata accessor for EmailDocument.CodingKeys()
{
  return &unk_2706B41B0;
}

uint64_t OUTLINED_FUNCTION_3_44@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 160) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_4_34()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_9_25()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_15_31()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_20_26()
{
  *(unsigned char *)(v0 - 65) = 0;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_25_24()
{
  return *(void *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_29_24()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

void OUTLINED_FUNCTION_31_25(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 56) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_36_25()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_37_24()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_38_22()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_39_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_18@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

void OUTLINED_FUNCTION_43_23(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 48) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_45_16()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_46_21()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_47_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_17()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_49_19()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_51_23@<X0>(uint64_t a1@<X8>)
{
  int v3 = (uint64_t *)(v2 + a1);
  uint64_t result = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *uint64_t v1 = *v3;
  v1[1] = v5;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v8;
  return result;
}

uint64_t OUTLINED_FUNCTION_57_16()
{
  *(unsigned char *)(v0 - 68) = 3;
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_58_15()
{
  return v0;
}

void OUTLINED_FUNCTION_59_16(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 32) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_60_13(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 64) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_61_15()
{
  *(unsigned char *)(v0 + 160) = 0;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

void *OUTLINED_FUNCTION_64_13()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_67_16()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_69_15()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_71_15@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_75_12()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_76_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_77_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_78_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_80_12@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 360) = a1;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_81_11@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 344) = a1;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_82_13@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 344) = a1;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_83_9()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_84_12()
{
  *(void *)(v0 + 136) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_85_15()
{
  *(void *)(v0 + 144) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_86_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_88_10@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = (void *)(v3 + a3);
  *unsigned int v4 = result;
  v4[1] = a2;
  return result;
}

void OUTLINED_FUNCTION_90_14()
{
  *(void *)(v0 + 160) = *(void *)(v1 + *(int *)(*(void *)v0 + 48));
  *(unsigned char *)(v0 + 16) = 8;
}

uint64_t OUTLINED_FUNCTION_91_14()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_92_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_93_11(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  *(unsigned char *)(v3 - 67) = 2;
  return v3 - 67;
}

uint64_t OUTLINED_FUNCTION_94_15()
{
  *(unsigned char *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t OUTLINED_FUNCTION_96_12()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_97_7@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 360) = a1;
  return *(void *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_98_10()
{
  return *(void *)(v0 + *(int *)(v1 + 48));
}

void OUTLINED_FUNCTION_99_10(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

__n128 OUTLINED_FUNCTION_103_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, long long a10)
{
  __n128 result = a9;
  *(_OWORD *)uint64_t v11 = a10;
  *(__n128 *)(v11 + 16) = a9;
  *(void *)(v11 + 32) = v10;
  return result;
}

uint64_t OUTLINED_FUNCTION_104_14@<X0>(uint64_t a1@<X8>)
{
  return outlined assign with take of SearchResultItem?(v3, v2 + a1, v1);
}

uint64_t OUTLINED_FUNCTION_105_14()
{
  return type metadata accessor for MobileSMSDocument(0);
}

uint64_t OUTLINED_FUNCTION_107_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + a1);
  return outlined consume of DataDetectorResults?(v3);
}

uint64_t OUTLINED_FUNCTION_108_8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  return outlined init with take of URL?(v21 + a1, (uint64_t)&a20, v20);
}

void *OUTLINED_FUNCTION_110_11(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_111_11()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_113_13()
{
  *(unsigned char *)(v0 - 67) = 2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_114_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_115_8()
{
  *(unsigned char *)(v0 + 160) = 15;
  return 0;
}

uint64_t OUTLINED_FUNCTION_116_9()
{
  *(unsigned char *)(v0 + 160) = 17;
  return 0;
}

__n128 OUTLINED_FUNCTION_117_8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  uint64_t v4 = *(void *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)v3;
  *(_OWORD *)(v1 + 176) = v6;
  *(void *)(v1 + 192) = v4;
  return result;
}

void OUTLINED_FUNCTION_118_9()
{
  *(unsigned char *)(v0 - 72) = 6;
}

void OUTLINED_FUNCTION_121_8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 72) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_122_9(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_124_10(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 40) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_126_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_127_8()
{
  return type metadata accessor for EmailDocument(0);
}

uint64_t OUTLINED_FUNCTION_128_7(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t OUTLINED_FUNCTION_129_7()
{
  return type metadata accessor for EmailDocument(0);
}

uint64_t OUTLINED_FUNCTION_130_5@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_131_7@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

unsigned char *OUTLINED_FUNCTION_132_6@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *__n128 result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_133_5@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_135_5()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_136_4()
{
  *(unsigned char *)(v0 - 68) = 3;
}

uint64_t OUTLINED_FUNCTION_137_2()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_138_3()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_139_4()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

double OUTLINED_FUNCTION_140_4@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_141_4()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_142_5()
{
  *(unsigned char *)(v0 - 69) = 4;
  return type metadata accessor for URL();
}

void OUTLINED_FUNCTION_144_5(int a1@<W8>)
{
  v1[26] = a1;
  v1[28] = a1;
  v1[30] = a1;
}

uint64_t OUTLINED_FUNCTION_147_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_149_2@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_150_4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 72) = v2 + a1;
  *(unsigned char *)(v1 + 160) = 7;
  return 0;
}

uint64_t OUTLINED_FUNCTION_152_5()
{
  return outlined init with take of URL?(v0 + 160, v0 + 16, v1);
}

void OUTLINED_FUNCTION_153_5(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
  *(unsigned char *)(v2 + 16) = 4;
}

void OUTLINED_FUNCTION_154_5(uint64_t a1@<X8>)
{
  *(void *)(v1 + 160) = a1;
}

uint64_t OUTLINED_FUNCTION_155_4()
{
  *(unsigned char *)(v0 - 68) = 3;
  return v0 - 68;
}

uint64_t OUTLINED_FUNCTION_156_5@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 160) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_162_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_165_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return outlined init with take of URL?((uint64_t)&a9, v10, v9);
}

uint64_t OUTLINED_FUNCTION_166_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return outlined init with take of URL?((uint64_t)&a9, v9, v10);
}

void OUTLINED_FUNCTION_167_4(float a1)
{
  *uint64_t v1 = a1;
}

BOOL OUTLINED_FUNCTION_168_4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_169_3()
{
  *(unsigned char *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t OUTLINED_FUNCTION_170_5()
{
  *(unsigned char *)(v0 - 65) = 0;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_174_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return 0;
}

uint64_t OUTLINED_FUNCTION_176_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_178_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_180_4()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_181_5(uint64_t a1)
{
  *(void *)(v1 + 552) = a1;
  return v1 + 552;
}

uint64_t OUTLINED_FUNCTION_182_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_183_4()
{
  return *(void *)(v0 + *(int *)(v1 + 36));
}

uint64_t OUTLINED_FUNCTION_184_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_186_4()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_189_3(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_191_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *long long v6 = a1;
  v6[1] = a2;
  v6[2] = a3;
  v6[3] = a4;
  v6[4] = a5;
  v6[5] = a6;
  return 0;
}

uint64_t OUTLINED_FUNCTION_192_3@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_197_4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1 + 160;
}

void OUTLINED_FUNCTION_198_2()
{
  *(unsigned char *)(v0 - 81) = 4;
}

void OUTLINED_FUNCTION_199_2()
{
  *(unsigned char *)(v0 - 81) = 3;
}

uint64_t OUTLINED_FUNCTION_200_2()
{
  return v0;
}

void OUTLINED_FUNCTION_202_2()
{
  *(void *)(v0[26] + *(int *)(v0[25] + 60)) = v0[64];
}

uint64_t OUTLINED_FUNCTION_204_3()
{
  return *(void *)(v0 + *(int *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_205_2@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 512) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_206_2@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 512) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_207_3@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 512) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_208_3@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 512) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_209_3()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_210_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_211_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_212_2(uint64_t a1)
{
  *(void *)(v1 + 344) = a1;
  return v1 + 344;
}

uint64_t OUTLINED_FUNCTION_214_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return 0;
}

uint64_t OUTLINED_FUNCTION_215_2(uint64_t a1)
{
  *(void *)(v1 + 392) = a1;
  return v1 + 392;
}

uint64_t OUTLINED_FUNCTION_217_2()
{
  return type metadata accessor for Photo(0);
}

uint64_t OUTLINED_FUNCTION_219_2@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 488) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t SpotlightIndexRequest.init(userQuery:targetMatches:spQUParse:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 24) = a4 & 1;
  *(void *)(a6 + 32) = a5;
  return result;
}

uint64_t SpotlightIndexRequest.userQuery.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SpotlightIndexRequest.userQuery.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SpotlightIndexRequest.userQuery.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SpotlightIndexRequest.targetMatches.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t SpotlightIndexRequest.targetMatches.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*SpotlightIndexRequest.targetMatches.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void *SpotlightIndexRequest.spQUParse.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void SpotlightIndexRequest.spQUParse.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*SpotlightIndexRequest.spQUParse.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SpotlightIndexRequest.description.getter()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    id v2 = v1;
    if (!outlined bridged method (pb) of @objc SPQUParse.getEncodedData()(v2)) {
      Dictionary.init(dictionaryLiteral:)();
    }
    v3._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v3);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v14[0];
    uint64_t v4 = (void *)v14[1];
  }
  else
  {
    uint64_t v4 = (void *)0xE300000000000000;
    uint64_t v5 = 7104878;
  }
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "User Query: ");
  BYTE5(v14[1]) = 0;
  HIWORD(v14[1]) = -5120;
  uint64_t v6 = *v0;
  uint64_t v7 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x8000000258683580;
  v9._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x615055515053202CLL;
  v11._object = (void *)0xED0000203A657372;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = v5;
  v12._object = v4;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return v14[0];
}

void destroy for SpotlightIndexRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for SpotlightIndexRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for SpotlightIndexRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for SpotlightIndexRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for SpotlightIndexRequest()
{
  return &type metadata for SpotlightIndexRequest;
}

id SPQUParse.init(from:query:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Entity = type metadata accessor for PersonQueryEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_185_0();
  uint64_t v130 = v7;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v8);
  uint64_t v129 = (uint64_t)&v128 - v9;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v10);
  uint64_t v128 = (uint64_t)&v128 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonQueryEntity?);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v136 = (char *)&v128 - v16;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v17);
  long long v135 = (char *)&v128 - v18;
  uint64_t v143 = type metadata accessor for LocationQueryEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v19);
  uint64_t v139 = (uint64_t)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocationQueryEntity?);
  MEMORY[0x270FA5388](v21 - 8);
  OUTLINED_FUNCTION_185_0();
  uint64_t v134 = v22;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v23);
  uint64_t v142 = (char *)&v128 - v24;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v25);
  uint64_t v140 = (char *)&v128 - v26;
  type metadata accessor for TokenArgumentCollector();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = MEMORY[0x263F8EE78];
  long long v133 = v27 + 2;
  v27[3] = a2;
  v27[4] = a3;
  uint64_t v28 = type metadata accessor for StructuredQueryEntity(0);
  OUTLINED_FUNCTION_0_22();
  uint64_t v29 = v147;
  uint64_t v144 = v28;
  uint64_t v141 = v27;
  long long v138 = v15;
  if (v147)
  {
    uint64_t v30 = *(void *)(v147 + 16);
    if (v30)
    {
      uint64_t v131 = static SPQUParse.returnTypeToIntentLabel(_:)(v147);
      uint64_t v132 = v31;
      uint64_t v32 = 0;
      long long v145 = xmmword_258661700;
      do
      {
        char v33 = *(unsigned char *)(v29 + v32++ + 32);
        LOBYTE(v147) = v33;
        uint64_t v34 = static SPQUParse.returnTypeToQUPPArg(_:)((char *)&v147);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v145;
        LOBYTE(v147) = v33;
        *(void *)(inited + 32) = ReturnType.rawValue.getter();
        *(void *)(inited + 40) = v36;
        TokenArgumentCollector.addArguments(_:argLabel:findRange:)(inited, v34, 0);
        swift_setDeallocating();
        specialized _ContiguousArrayStorage.__deallocating_deinit();
      }
      while (v30 != v32);
      uint64_t v15 = v138;
      uint64_t v37 = v144;
      uint64_t v38 = (uint64_t)v142;
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_0_22();
  LOBYTE(v146) = v147;
  uint64_t v131 = static SPQUParse.objectTypeToIntentLabel(_:)((char *)&v146);
  uint64_t v132 = v39;
  EntityProperty.wrappedValue.getter();
  uint64_t v40 = static SPQUParse.objectTypeToQUPPArg(_:)((unsigned __int8 *)&v147);
  uint64_t v38 = (uint64_t)v142;
  if ((v41 & 1) == 0)
  {
    uint64_t v42 = v40;
    EntityProperty.wrappedValue.getter();
    switch((char)v147)
    {
      case 10:
        break;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        int v43 = (__n128 *)swift_initStackObject();
        int v44 = OUTLINED_FUNCTION_7_37(v43, (__n128)xmmword_258661700);
        OUTLINED_FUNCTION_3_45((uint64_t)v44, v42);
        swift_setDeallocating();
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        break;
    }
  }
  OUTLINED_FUNCTION_0_22();
  uint64_t v45 = static SPQUParse.utTypeToQUPPArg(_:)((unsigned __int8 *)&v147);
  if ((v46 & 1) == 0)
  {
    uint64_t v47 = v45;
    EntityProperty.wrappedValue.getter();
    if (v147 != 12)
    {
      LOBYTE(v146) = v147;
      unint64_t v48 = EntityUTType.rawValue.getter();
      uint64_t v50 = v49;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v51 = swift_initStackObject();
      *(_OWORD *)(v51 + 16) = xmmword_258661700;
      *(void *)(v51 + 32) = v48;
      *(void *)(v51 + 40) = v50;
      OUTLINED_FUNCTION_3_45(v51, v47);
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
    }
  }
  OUTLINED_FUNCTION_0_22();
  uint64_t v52 = v147;
  if (!v147)
  {
    uint64_t v37 = v144;
    uint64_t v60 = (uint64_t)v140;
    goto LABEL_29;
  }
  uint64_t v53 = *(void *)(v147 + 16);
  if (v53)
  {
    *(void *)&long long v145 = a1;
    uint64_t v147 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v54 = 0;
    uint64_t v55 = v147;
    do
    {
      unint64_t v56 = 0xEA0000000000746FLL;
      uint64_t v57 = 0x68736E6565726373;
      switch(*(unsigned char *)(v52 + v54 + 32))
      {
        case 1:
          unint64_t v56 = 0xE600000000000000;
          uint64_t v57 = 0x6569666C6573;
          break;
        case 2:
          unint64_t v56 = 0xE800000000000000;
          uint64_t v57 = 0x616D61726F6E6170;
          break;
        case 3:
          unint64_t v56 = 0xE500000000000000;
          uint64_t v57 = 0x6F6D6F6C73;
          break;
        case 4:
          unint64_t v56 = 0xEC0000006F656469;
          uint64_t v57 = 0x566C616974617073;
          break;
        default:
          break;
      }
      uint64_t v147 = v55;
      unint64_t v58 = *(void *)(v55 + 16);
      if (v58 >= *(void *)(v55 + 24) >> 1)
      {
        OUTLINED_FUNCTION_6_36();
        uint64_t v55 = v147;
      }
      ++v54;
      *(void *)(v55 + 16) = v58 + 1;
      uint64_t v59 = v55 + 16 * v58;
      *(void *)(v59 + 32) = v57;
      *(void *)(v59 + 40) = v56;
    }
    while (v53 != v54);
    swift_bridgeObjectRelease();
    a1 = v145;
    uint64_t v15 = v138;
    uint64_t v38 = (uint64_t)v142;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v55 = MEMORY[0x263F8EE78];
  }
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v55, 70, 1);
  uint64_t v37 = v144;
LABEL_28:
  uint64_t v60 = (uint64_t)v140;
  swift_bridgeObjectRelease();
LABEL_29:
  OUTLINED_FUNCTION_0_22();
  uint64_t v61 = v147;
  if (v147)
  {
    uint64_t v62 = *(void *)(v147 + 16);
    if (v62)
    {
      *(void *)&long long v145 = a1;
      uint64_t v147 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v63 = 0;
      uint64_t v64 = v147;
      do
      {
        unint64_t v65 = 0xE800000000000000;
        unint64_t v66 = 0x6B72616D6B6F6F62;
        switch(*(unsigned char *)(v61 + v63 + 32))
        {
          case 1:
            unint64_t v66 = 0x6873646165727073;
            unint64_t v65 = 0xEB00000000746565;
            break;
          case 2:
            unint64_t v65 = 0xEC0000006E6F6974;
            unint64_t v66 = 0x61746E6573657270;
            break;
          case 3:
            unint64_t v65 = 0xE700000000000000;
            unint64_t v66 = 0x6567617373656DLL;
            break;
          case 4:
            unint64_t v65 = 0xE700000000000000;
            unint64_t v66 = 0x746361746E6F63;
            break;
          case 5:
            unint64_t v66 = 0x7261646E656C6163;
            unint64_t v65 = 0xED0000746E657645;
            break;
          case 6:
            unint64_t v65 = 0xEC00000065676173;
            unint64_t v66 = 0x73654D6C69616D65;
            break;
          case 7:
            unint64_t v65 = 0xE500000000000000;
            uint64_t v67 = 1734438249;
            goto LABEL_42;
          case 8:
            unint64_t v65 = 0xE500000000000000;
            unint64_t v66 = 0x6F69647561;
            break;
          case 9:
            unint64_t v65 = 0xE500000000000000;
            uint64_t v67 = 1769369453;
LABEL_42:
            unint64_t v66 = v67 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
            break;
          case 0xA:
            unint64_t v65 = 0xE300000000000000;
            unint64_t v66 = 6710384;
            break;
          case 0xB:
            unint64_t v65 = 0xE300000000000000;
            unint64_t v66 = 7367034;
            break;
          default:
            break;
        }
        uint64_t v147 = v64;
        unint64_t v68 = *(void *)(v64 + 16);
        if (v68 >= *(void *)(v64 + 24) >> 1)
        {
          OUTLINED_FUNCTION_6_36();
          uint64_t v64 = v147;
        }
        ++v63;
        *(void *)(v64 + 16) = v68 + 1;
        uint64_t v69 = v64 + 16 * v68;
        *(void *)(v69 + 32) = v66;
        *(void *)(v69 + 40) = v65;
      }
      while (v62 != v63);
      swift_bridgeObjectRelease();
      uint64_t v37 = v144;
      a1 = v145;
      uint64_t v15 = v138;
      uint64_t v38 = (uint64_t)v142;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v64 = MEMORY[0x263F8EE78];
      uint64_t v37 = v144;
    }
    TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v64, 71, 1);
    swift_bridgeObjectRelease();
    uint64_t v60 = (uint64_t)v140;
  }
  EntityProperty.wrappedValue.getter();
  if (OUTLINED_FUNCTION_5_31(v60))
  {
    outlined destroy of SearchResult?(v60, &demangling cache variable for type metadata for LocationQueryEntity?);
  }
  else
  {
    uint64_t v70 = v139;
    outlined init with copy of PersonQueryEntity(v60, v139, (void (*)(void))type metadata accessor for LocationQueryEntity);
    outlined destroy of SearchResult?(v60, &demangling cache variable for type metadata for LocationQueryEntity?);
    EntityProperty.wrappedValue.getter();
    uint64_t v71 = v148;
    uint64_t v72 = v70;
    uint64_t v38 = (uint64_t)v142;
    outlined destroy of StructuredQueryEntity(v72, (void (*)(void))type metadata accessor for LocationQueryEntity);
    if (v71)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v73 = (__n128 *)swift_initStackObject();
      uint64_t v74 = OUTLINED_FUNCTION_7_37(v73, (__n128)xmmword_258661700);
      OUTLINED_FUNCTION_1_32((uint64_t)v74, 5);
      swift_setDeallocating();
      uint64_t v38 = (uint64_t)v142;
      specialized _ContiguousArrayStorage.__deallocating_deinit();
    }
  }
  EntityProperty.wrappedValue.getter();
  if (OUTLINED_FUNCTION_5_31(v38))
  {
    outlined destroy of SearchResult?(v38, &demangling cache variable for type metadata for LocationQueryEntity?);
  }
  else
  {
    uint64_t v75 = v38;
    uint64_t v76 = v38;
    uint64_t v77 = v139;
    outlined init with copy of PersonQueryEntity(v75, v139, (void (*)(void))type metadata accessor for LocationQueryEntity);
    outlined destroy of SearchResult?(v76, &demangling cache variable for type metadata for LocationQueryEntity?);
    EntityProperty.wrappedValue.getter();
    uint64_t v78 = v148;
    outlined destroy of StructuredQueryEntity(v77, (void (*)(void))type metadata accessor for LocationQueryEntity);
    if (v78)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v79 = (__n128 *)swift_initStackObject();
      uint64_t v80 = OUTLINED_FUNCTION_7_37(v79, (__n128)xmmword_258661700);
      OUTLINED_FUNCTION_1_32((uint64_t)v80, 7);
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
    }
  }
  uint64_t v81 = v134;
  EntityProperty.wrappedValue.getter();
  if (OUTLINED_FUNCTION_5_31(v81))
  {
    outlined destroy of SearchResult?(v81, &demangling cache variable for type metadata for LocationQueryEntity?);
    uint64_t v82 = Entity;
  }
  else
  {
    uint64_t v83 = v139;
    outlined init with copy of PersonQueryEntity(v81, v139, (void (*)(void))type metadata accessor for LocationQueryEntity);
    outlined destroy of SearchResult?(v81, &demangling cache variable for type metadata for LocationQueryEntity?);
    EntityProperty.wrappedValue.getter();
    uint64_t v84 = v148;
    outlined destroy of StructuredQueryEntity(v83, (void (*)(void))type metadata accessor for LocationQueryEntity);
    uint64_t v82 = Entity;
    if (v84)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      long long v85 = (__n128 *)swift_initStackObject();
      long long v86 = OUTLINED_FUNCTION_7_37(v85, (__n128)xmmword_258661700);
      OUTLINED_FUNCTION_1_32((uint64_t)v86, 6);
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
    }
  }
  OUTLINED_FUNCTION_0_22();
  uint64_t v87 = static SPQUParse.sortOrderToQUPPArg(_:)((char *)&v147);
  if ((v88 & 1) == 0)
  {
    uint64_t v89 = v87;
    EntityProperty.wrappedValue.getter();
    unint64_t v90 = 0xE400000000000000;
    uint64_t v91 = 1953718636;
    switch(v92)
    {
      case 1:
        uint64_t v91 = 1954047342;
        goto LABEL_67;
      case 2:
        unint64_t v90 = 0xE500000000000000;
        uint64_t v91 = 0x7473726966;
        goto LABEL_67;
      case 3:
        break;
      default:
LABEL_67:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t v93 = swift_initStackObject();
        *(_OWORD *)(v93 + 16) = xmmword_258661700;
        *(void *)(v93 + 32) = v91;
        *(void *)(v93 + 40) = v90;
        OUTLINED_FUNCTION_3_45(v93, v89);
        swift_setDeallocating();
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        break;
    }
  }
  OUTLINED_FUNCTION_0_22();
  uint64_t v94 = static SPQUParse.temporalReferenceToQUPPArg(_:)((char *)&v147);
  if ((v95 & 1) == 0)
  {
    uint64_t v96 = v94;
    EntityProperty.wrappedValue.getter();
    unint64_t v97 = 0xE600000000000000;
    uint64_t v98 = 0x657275747566;
    switch((char)v147)
    {
      case 0:
        goto LABEL_72;
      case 1:
        uint64_t v98 = 1953718640;
        unint64_t v97 = 0xE400000000000000;
        goto LABEL_72;
      case 2:
        unint64_t v97 = 0xEB00000000646569;
        uint64_t v98 = 0x6669636570736E75;
LABEL_72:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t v99 = swift_initStackObject();
        *(_OWORD *)(v99 + 16) = xmmword_258661700;
        *(void *)(v99 + 32) = v98;
        *(void *)(v99 + 40) = v97;
        OUTLINED_FUNCTION_3_45(v99, v96);
        swift_setDeallocating();
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        break;
      case 3:
        break;
      default:
        JUMPOUT(0);
    }
  }
  OUTLINED_FUNCTION_0_22();
  uint64_t v100 = static SPQUParse.appEntityStatusToQUPPArg(_:)((char *)&v147);
  if ((v101 & 1) == 0)
  {
    uint64_t v102 = v100;
    EntityProperty.wrappedValue.getter();
    if (v147 != 22)
    {
      LOBYTE(v146) = v147;
      uint64_t v103 = AppEntityStatus.rawValue.getter();
      uint64_t v105 = v104;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v106 = swift_initStackObject();
      *(_OWORD *)(v106 + 16) = xmmword_258661700;
      *(void *)(v106 + 32) = v103;
      *(void *)(v106 + 40) = v105;
      OUTLINED_FUNCTION_3_45(v106, v102);
      swift_setDeallocating();
      uint64_t v37 = v144;
      specialized _ContiguousArrayStorage.__deallocating_deinit();
    }
  }
  OUTLINED_FUNCTION_0_22();
  uint64_t v107 = OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_1_32(v107, 1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_22();
  uint64_t v108 = OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_1_32(v108, 8);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_22();
  uint64_t v109 = OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_1_32(v109, 68);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_22();
  uint64_t v110 = OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_1_32(v110, 69);
  swift_bridgeObjectRelease();
  uint64_t v111 = *(void *)(a1 + *(int *)(v37 + 60));
  EntityProperty.wrappedValue.getter();
  if (OUTLINED_FUNCTION_9_26())
  {
    outlined destroy of SearchResult?(v111, &demangling cache variable for type metadata for PersonQueryEntity?);
LABEL_78:
    uint64_t v112 = 0;
    goto LABEL_81;
  }
  uint64_t v113 = v128;
  outlined init with copy of PersonQueryEntity(v111, v128, (void (*)(void))type metadata accessor for PersonQueryEntity);
  outlined destroy of SearchResult?(v111, &demangling cache variable for type metadata for PersonQueryEntity?);
  EntityProperty.wrappedValue.getter();
  outlined destroy of StructuredQueryEntity(v113, (void (*)(void))type metadata accessor for PersonQueryEntity);
  uint64_t v114 = v147;
  if (!v147) {
    goto LABEL_78;
  }
  EntityProperty.wrappedValue.getter();
  outlined consume of Person?(v114);
  uint64_t v112 = v146;
LABEL_81:
  OUTLINED_FUNCTION_1_32(v112, 64);
  swift_bridgeObjectRelease();
  EntityProperty.wrappedValue.getter();
  if (OUTLINED_FUNCTION_9_26())
  {
    outlined destroy of SearchResult?(v111, &demangling cache variable for type metadata for PersonQueryEntity?);
LABEL_83:
    uint64_t v115 = 0;
    goto LABEL_86;
  }
  uint64_t v116 = v129;
  outlined init with copy of PersonQueryEntity(v111, v129, (void (*)(void))type metadata accessor for PersonQueryEntity);
  outlined destroy of SearchResult?(v111, &demangling cache variable for type metadata for PersonQueryEntity?);
  EntityProperty.wrappedValue.getter();
  outlined destroy of StructuredQueryEntity(v116, (void (*)(void))type metadata accessor for PersonQueryEntity);
  uint64_t v117 = v147;
  if (!v147) {
    goto LABEL_83;
  }
  EntityProperty.wrappedValue.getter();
  outlined consume of Person?(v117);
  uint64_t v115 = v146;
LABEL_86:
  OUTLINED_FUNCTION_1_32(v115, 65);
  swift_bridgeObjectRelease();
  EntityProperty.wrappedValue.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v82))
  {
    outlined destroy of SearchResult?((uint64_t)v15, &demangling cache variable for type metadata for PersonQueryEntity?);
  }
  else
  {
    uint64_t v119 = v130;
    outlined init with copy of PersonQueryEntity((uint64_t)v15, v130, (void (*)(void))type metadata accessor for PersonQueryEntity);
    outlined destroy of SearchResult?((uint64_t)v15, &demangling cache variable for type metadata for PersonQueryEntity?);
    EntityProperty.wrappedValue.getter();
    outlined destroy of StructuredQueryEntity(v119, (void (*)(void))type metadata accessor for PersonQueryEntity);
    uint64_t v120 = v147;
    if (v147)
    {
      EntityProperty.wrappedValue.getter();
      outlined consume of Person?(v120);
      uint64_t v118 = v146;
      goto LABEL_91;
    }
  }
  uint64_t v118 = 0;
LABEL_91:
  uint64_t v121 = v132;
  uint64_t v122 = v131;
  OUTLINED_FUNCTION_1_32(v118, 66);
  swift_bridgeObjectRelease();
  id v123 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v124 = (void *)MEMORY[0x25A2C7AB0](v122, v121);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  type metadata accessor for SPQUParseTokenArgument();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v126 = objc_msgSend(v123, sel_initWithIntentLabel_tokenArguments_, v124, isa);
  swift_release();

  outlined destroy of StructuredQueryEntity(a1, (void (*)(void))type metadata accessor for StructuredQueryEntity);
  return v126;
}

uint64_t static SPQUParse.returnTypeToIntentLabel(_:)(uint64_t a1)
{
  id v2 = (id)llmIntentLabel();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((*(unsigned char *)(a1 + i + 32) - 36) <= 7u)
      {
        swift_bridgeObjectRelease();
        id v6 = (id)llmIntentLabel();
        uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t static SPQUParse.returnTypeToQUPPArg(_:)(char *a1)
{
  return qword_258676A98[*a1];
}

uint64_t static SPQUParse.objectTypeToIntentLabel(_:)(char *a1)
{
  uint64_t v1 = *a1;
  id v2 = (id)llmIntentLabel();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 != 10)
  {
    swift_bridgeObjectRelease();
    id v4 = (id)llmIntentLabel();
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v3;
}

uint64_t static SPQUParse.objectTypeToQUPPArg(_:)(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t result = 0;
  switch(v1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_11_33();
      break;
    case 2:
      uint64_t result = 74;
      break;
    case 3:
      uint64_t result = 17;
      break;
    case 4:
      uint64_t result = 16;
      break;
    case 5:
      uint64_t result = 15;
      break;
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return result;
    default:
      uint64_t result = 14;
      break;
  }
  return result;
}

uint64_t static SPQUParse.utTypeToQUPPArg(_:)(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t result = 0;
  switch(v1)
  {
    case 3:
      uint64_t result = 19;
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_11_33();
      break;
    case 5:
      uint64_t result = 29;
      break;
    case 6:
      uint64_t result = 25;
      break;
    case 7:
      uint64_t result = 30;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static SPQUParse.sortOrderToQUPPArg(_:)(char *a1)
{
  uint64_t v1 = *a1;
  if (v1 == 3) {
    return 0;
  }
  else {
    return qword_258676C70[v1];
  }
}

uint64_t static SPQUParse.temporalReferenceToQUPPArg(_:)(char *a1)
{
  uint64_t v1 = *a1;
  if (v1 == 3) {
    return 0;
  }
  else {
    return qword_258676C88[v1];
  }
}

uint64_t static SPQUParse.appEntityStatusToQUPPArg(_:)(char *a1)
{
  uint64_t v1 = *a1;
  if (v1 == 22) {
    return 0;
  }
  else {
    return qword_258676CA0[v1];
  }
}

uint64_t outlined init with copy of PersonQueryEntity(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t outlined destroy of StructuredQueryEntity(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_1_32(uint64_t a1, uint64_t a2)
{
  return TokenArgumentCollector.addArguments(_:argLabel:findRange:)(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_3_45(uint64_t a1, uint64_t a2)
{
  return TokenArgumentCollector.addArguments(_:argLabel:findRange:)(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_5_31(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 128);
  return __swift_getEnumTagSinglePayload(a1, 1, v3);
}

void OUTLINED_FUNCTION_6_36()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

__n128 *OUTLINED_FUNCTION_7_37(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = v3;
  result[2].n128_u64[1] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_26()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_10_32()
{
  return *(void *)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_11_33()
{
  return 35;
}

uint64_t Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 64) = a5;
  *(void *)(v6 + 72) = a6;
  *(void *)(v6 + 48) = a3;
  *(void *)(v6 + 56) = a4;
  *(void *)(v6 + 40) = a2;
  *(unsigned char *)(v6 + 104) = a1;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  OUTLINED_FUNCTION_14_27();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  long long v5 = *(_OWORD *)(v0 + 40);
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  *(void *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 40) = v5;
  *(void *)(v0 + 88) = type metadata accessor for Array();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v6;
  *uint64_t v6 = v0;
  v6[1] = Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return MEMORY[0x270FA2158](v0 + 16);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  uint64_t v11 = *(void *)(v10 + 16);
  if ((*(unsigned char *)(v10 + 104) & 1) == 0)
  {
    *(void *)(v10 + 24) = v11;
    *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v10 + 64);
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v11 = Sequence.sorted(by:)();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 16) = v11;
  }
  uint64_t v12 = *(void *)(v10 + 88);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(v10 + 72);
  *(void *)(v10 + 32) = v11;
  uint64_t v15 = swift_task_alloc();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v13;
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for closure #3 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), v15, v12, v13, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_139();
  return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a5;
  uint64_t v35 = a8;
  int v44 = a1;
  uint64_t v45 = a2;
  uint64_t v33 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  char v46 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v32 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = dispatch thunk of Collection.count.getter();
  if (!v20) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v21 = v20;
  uint64_t v49 = Array.init()();
  uint64_t v38 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v21);
  uint64_t v42 = a6;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = (void (**)(char *))(v39 + 2);
    char v41 = v14;
    ++v39;
    while (1)
    {
      uint64_t v23 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v24 = v12;
      uint64_t v25 = v12;
      uint64_t v26 = AssociatedTypeWitness;
      (*v40)(v24);
      v23(v48, 0);
      uint64_t v27 = v47;
      v44(v25, v46);
      if (v27) {
        break;
      }
      uint64_t v47 = 0;
      (*v39)(v25, v26);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      --v21;
      uint64_t v12 = v25;
      if (!v21)
      {
        uint64_t v28 = v36;
        uint64_t v29 = v37;
        uint64_t v30 = v32;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v19, v37);
        _expectEnd<A>(of:is:)();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
        return v49;
      }
    }
    (*v39)(v25, v26);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v35, v46, v34);
  }
  return result;
}

uint64_t Array.asyncReduce<A>(_:_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  v0[9] = v1;
  v0[10] = v3;
  v0[7] = v4;
  v0[8] = v5;
  v0[5] = v6;
  v0[6] = v7;
  v0[4] = v8;
  v0[11] = *(void *)(v3 - 8);
  v0[12] = swift_task_alloc();
  uint64_t v9 = *(void *)(v2 - 8);
  v0[13] = v9;
  v0[14] = *(void *)(v9 + 64);
  v0[15] = swift_task_alloc();
  v0[16] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t Array.asyncReduce<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  uint64_t v14 = v10[8];
  uint64_t v13 = v10[9];
  (*(void (**)(void, void, void))(v10[11] + 16))(v10[4], v10[5], v10[10]);
  swift_bridgeObjectRetain();
  uint64_t v15 = Array.startIndex.getter();
  v10[2] = v15;
  if (v15 == MEMORY[0x25A2C7F00](v14, v13))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_139();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    uint64_t v25 = v10[8];
    Array._hoistableIsNativeTypeChecked()();
    OUTLINED_FUNCTION_12_35();
    if (v11)
    {
      uint64_t v26 = OUTLINED_FUNCTION_2_27();
      v27(v26);
    }
    else
    {
      uint64_t v39 = v10[14];
      uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
      if (v39 != 8)
      {
        __break(1u);
        return result;
      }
      uint64_t v40 = OUTLINED_FUNCTION_4_35(result);
      v41(v40);
      swift_unknownObjectRelease();
    }
    OUTLINED_FUNCTION_10_33();
    MEMORY[0x25A2C7F10](v10 + 2, v11, v25);
    swift_bridgeObjectRelease();
    uint64_t v28 = OUTLINED_FUNCTION_9_27();
    v29(v28);
    uint64_t v42 = (char *)v12 + *v12;
    uint64_t v30 = (void *)swift_task_alloc();
    v10[17] = v30;
    void *v30 = v10;
    v30[1] = Array.asyncReduce<A>(_:_:);
    OUTLINED_FUNCTION_8_21();
    OUTLINED_FUNCTION_139();
    return v34(v31, v32, v33, v34, v35, v36, v37, v38, v42, a10);
  }
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  char *v46;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  uint64_t v11 = v10[12];
  uint64_t v12 = v10[10];
  uint64_t v13 = v10[11];
  uint64_t v15 = v10[8];
  uint64_t v14 = v10[9];
  uint64_t v16 = v10[4];
  (*(void (**)(void, uint64_t))(v10[13] + 8))(v10[15], v14);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  uint64_t v17 = (int *)(v13 + 32);
  v18(v16, v11, v12);
  uint64_t v19 = v10[2];
  if (v19 == MEMORY[0x25A2C7F00](v15, v14))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_139();
    return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
  }
  else
  {
    uint64_t v29 = v10[8];
    Array._hoistableIsNativeTypeChecked()();
    OUTLINED_FUNCTION_12_35();
    if (v16)
    {
      uint64_t v30 = OUTLINED_FUNCTION_2_27();
      v31(v30);
    }
    else
    {
      int v43 = v10[14];
      uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
      if (v43 != 8)
      {
        __break(1u);
        return result;
      }
      int v44 = OUTLINED_FUNCTION_4_35(result);
      v45(v44);
      swift_unknownObjectRelease();
    }
    OUTLINED_FUNCTION_10_33();
    MEMORY[0x25A2C7F10](v10 + 2, v16, v29);
    swift_bridgeObjectRelease();
    uint64_t v32 = OUTLINED_FUNCTION_9_27();
    v33(v32);
    char v46 = (char *)v17 + *v17;
    uint64_t v34 = (void *)swift_task_alloc();
    v10[17] = v34;
    *uint64_t v34 = v10;
    v34[1] = Array.asyncReduce<A>(_:_:);
    OUTLINED_FUNCTION_8_21();
    OUTLINED_FUNCTION_139();
    return v38(v35, v36, v37, v38, v39, v40, v41, v42, v46, a10);
  }
}

void *Array<A>.argminN(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (MEMORY[0x25A2C7EE0](a2, a3) < a1) {
    return specialized _copyCollectionToContiguousArray<A>(_:)(0, a1);
  }
  uint64_t v8 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = MEMORY[0x25A2C7D80](v20, v8, WitnessTable);
  MEMORY[0x270FA5388](v10);
  type metadata accessor for EnumeratedSequence();
  swift_getWitnessTable();
  Sequence.sorted(by:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x263F8D6C8];
  swift_getTupleTypeMetadata2();
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t v12 = Collection.prefix(_:)();
  long long v18 = v20[0];
  long long v19 = v20[1];
  MEMORY[0x270FA5388](v12);
  v17[2] = a3;
  v17[3] = a4;
  uint64_t v13 = type metadata accessor for ArraySlice();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v7 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for closure #2 in Array<A>.argminN(_:), (uint64_t)v17, v13, v11, MEMORY[0x263F8E628], v14, MEMORY[0x263F8E658], v15);
  swift_unknownObjectRelease();
  return (void *)v7;
}

uint64_t Array.elements(at:)()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t _sScG7addTask8priority9operationyScPSg_xyYaYAcntF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of TaskPriority?(a1, (uint64_t)v12);
  uint64_t v13 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v12);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v16 = v15;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v17 = *v5;
  long long v18 = (void *)swift_allocObject();
  v18[2] = *(void *)(a4 + 16);
  v18[3] = a2;
  v18[4] = a3;
  long long v19 = (void *)(v16 | v14);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    long long v19 = v22;
    v22[2] = v14;
    v22[3] = v16;
  }
  v21[1] = 1;
  v21[2] = v19;
  v21[3] = v17;
  swift_task_create();
  return swift_release();
}

uint64_t Array<A>.argmin()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v16 - v8;
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence<>.min()();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, a2);
    v16[1] = a1;
    swift_getWitnessTable();
    Collection<>.firstIndex(of:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a2);
    return v17;
  }
}

uint64_t closure #1 in Array<A>.argminN(_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)() & 1;
}

uint64_t closure #2 in Array<A>.argminN(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(int *)(v7 + 56);
  uint64_t v11 = &v9[v10];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = *a1;
  *(void *)uint64_t v9 = v13;
  uint64_t v14 = *(void *)(a2 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v9[v10], v12, a2);
  *a3 = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, a2);
}

uint64_t closure #1 in Array.elements(at:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<Int>);
  if (Range.contains(_:)())
  {
    Array.subscript.getter();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v4, 1, a1);
}

uint64_t closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  uint64_t v8 = *(void *)(a6 - 8);
  v7[15] = v8;
  v7[16] = *(void *)(v8 + 64);
  v7[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  void v7[18] = swift_task_alloc();
  v7[19] = swift_getTupleTypeMetadata2();
  uint64_t v9 = type metadata accessor for Optional();
  v7[20] = v9;
  v7[21] = *(void *)(v9 - 8);
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

uint64_t closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  uint64_t v1 = v0[21];
  uint64_t v29 = v0[19];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  v0[6] = v0[10];
  uint64_t v4 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A2C7D80](v4, WitnessTable);
  v0[7] = v0[5];
  type metadata accessor for EnumeratedSequence();
  EnumeratedSequence.makeIterator()();
  uint64_t v28 = v2;
  uint64_t v27 = v3 + 7;
  type metadata accessor for EnumeratedSequence.Iterator();
  while (1)
  {
    uint64_t v7 = v0[22];
    uint64_t v6 = v0[23];
    uint64_t v9 = v0[19];
    uint64_t v8 = v0[20];
    EnumeratedSequence.Iterator.next()();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v6, v7, v8);
    if (__swift_getEnumTagSinglePayload(v6, 1, v9) == 1) {
      break;
    }
    uint64_t v10 = (uint64_t *)v0[23];
    uint64_t v12 = (char *)v0[17];
    uint64_t v11 = v0[18];
    uint64_t v14 = v0[13];
    uint64_t v13 = v0[14];
    uint64_t v15 = v0[12];
    uint64_t v32 = v11;
    uint64_t v30 = v0[11];
    uint64_t v31 = *v10;
    uint64_t v16 = (char *)v10 + *(int *)(v29 + 48);
    uint64_t v17 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v11, 1, 1, v17);
    long long v18 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v18(v12, v16, v14);
    unint64_t v19 = (*(unsigned __int8 *)(v28 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v20 = (char *)swift_allocObject();
    *((void *)v20 + 2) = 0;
    *((void *)v20 + 3) = 0;
    *((void *)v20 + 4) = v14;
    *((void *)v20 + 5) = v13;
    *((void *)v20 + 6) = v30;
    *((void *)v20 + 7) = v15;
    v18(&v20[v19], v12, v14);
    *(void *)&v20[(v27 + v19) & 0xFFFFFFFFFFFFFFF8] = v31;
    swift_retain();
    OUTLINED_FUNCTION_14_27();
    uint64_t v21 = type metadata accessor for TaskGroup();
    _sScG7addTask8priority9operationyScPSg_xyYaYAcntF(v32, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), (uint64_t)v20, v21);
    outlined destroy of TaskPriority?(v32);
  }
  uint64_t v22 = (uint64_t *)v0[9];
  swift_bridgeObjectRelease();
  uint64_t v23 = *v22;
  uint64_t v24 = (void *)swift_task_alloc();
  v0[24] = v24;
  uint64_t v25 = OUTLINED_FUNCTION_14_27();
  void *v24 = v0;
  v24[1] = closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return TaskGroup.oms_results.getter(v23, v25);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  **(void **)(v0 + 64) = *(void *)(v0 + 200);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t partial apply for closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  *uint64_t v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_139();
  return closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a7;
  v7[4] = v15;
  v7[2] = a1;
  v7[5] = *(void *)(v15 - 8);
  uint64_t v10 = swift_task_alloc();
  v7[6] = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[7] = v11;
  *uint64_t v11 = v7;
  v11[1] = closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return v13(v10, a6);
}

uint64_t closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v0[2];
  uint64_t v6 = (char *)v5 + *(int *)(OUTLINED_FUNCTION_14_27() + 48);
  *uint64_t v5 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v7();
}

BOOL partial apply for closure #2 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(void *a1, void *a2)
{
  return *a2 >= *a1;
}

uint64_t closure #3 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = *(int *)(MEMORY[0x270FA5388](TupleTypeMetadata2 - 8) + 56);
  uint64_t v9 = (char *)&v13 + v8 - v7;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, v10, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
}

uint64_t partial apply for closure #3 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #3 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a1, *(void *)(v2 + 24), a2);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRTQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRTQ0_()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

uint64_t partial apply for closure #1 in Array<A>.argminN(_:)()
{
  return closure #1 in Array<A>.argminN(_:)() & 1;
}

uint64_t partial apply for closure #2 in Array<A>.argminN(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return closure #2 in Array<A>.argminN(_:)(a1, *(void *)(v2 + 16), a2);
}

uint64_t partial apply for closure #1 in Array.elements(at:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in Array.elements(at:)(*(void *)(v1 + 16), a1);
}

uint64_t sub_258545688()
{
  uint64_t v1 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_0_10();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 64) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v9, v8);
}

uint64_t partial apply for closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_10();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (int *)v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = (uint64_t)v1 + v4;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_26_1(v12);
  *uint64_t v13 = v14;
  v13[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2585458B8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRTA(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 24);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_26_1(v4);
  *uint64_t v5 = v6;
  v5[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRTu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRTu);
  return v7(a1, v3);
}

uint64_t OUTLINED_FUNCTION_2_27()
{
  return *(void *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_4_35(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + 128);
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return *(void *)(v0 + 96);
}

uint64_t OUTLINED_FUNCTION_9_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_33()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return swift_getTupleTypeMetadata2();
}

Swift::String __swiftcall Encodable.oms_jsonPrettyPrinted()()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  MEMORY[0x270FA5388](v0 - 8);
  OUTLINED_FUNCTION_15();
  if (one-time initialization token for iso8601PrettyPrinted != -1) {
    swift_once();
  }
  uint64_t v1 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v3 = v2;
  static String.Encoding.utf8.getter();
  uint64_t v4 = String.init(data:encoding:)();
  if (v5)
  {
    uint64_t v6 = v4;
    unint64_t v7 = v5;
    outlined consume of Data._Representation(v1, v3);
  }
  else
  {
    outlined consume of Data._Representation(v1, v3);
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v8 = v6;
  uint64_t v9 = (void *)v7;
  result._object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t *JSONEncoder.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static JSONEncoder.shared;
}

uint64_t static JSONEncoder.shared.getter()
{
  return static JSONEncoder.shared.getter(&one-time initialization token for shared);
}

uint64_t one-time initialization function for iso8601()
{
  uint64_t v0 = type metadata accessor for JSONEncoder.KeyEncodingStrategy();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for JSONEncoder.OutputFormatting();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSONEncoder();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06198], v7);
  v12[1] = MEMORY[0x263F8EE78];
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [JSONEncoder.OutputFormatting]);
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06150], v0);
  uint64_t result = JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)((uint64_t)v10, (uint64_t)v6, (uint64_t)v3);
  static JSONEncoder.iso8601 = result;
  return result;
}

uint64_t JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = type metadata accessor for JSONEncoder.KeyEncodingStrategy();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_15();
  uint64_t v9 = v8 - v7;
  uint64_t v25 = type metadata accessor for JSONEncoder.OutputFormatting();
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_15();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  OUTLINED_FUNCTION_0_10();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_15();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = dispatch thunk of JSONEncoder.__allocating_init()();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a1, v16);
  swift_retain();
  dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, a2, v25);
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a3, v27);
  dispatch thunk of JSONEncoder.keyEncodingStrategy.setter();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a3, v27);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v16);
  return v23;
}

uint64_t *JSONEncoder.iso8601.unsafeMutableAddressor()
{
  if (one-time initialization token for iso8601 != -1) {
    swift_once();
  }
  return &static JSONEncoder.iso8601;
}

uint64_t static JSONEncoder.iso8601.getter()
{
  return static JSONEncoder.shared.getter(&one-time initialization token for iso8601);
}

uint64_t one-time initialization function for iso8601PrettyPrinted()
{
  uint64_t v0 = type metadata accessor for JSONEncoder.KeyEncodingStrategy();
  OUTLINED_FUNCTION_0_10();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for JSONEncoder.OutputFormatting();
  MEMORY[0x270FA5388](v7 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  OUTLINED_FUNCTION_0_10();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_15();
  uint64_t v17 = v16 - v15;
  type metadata accessor for JSONEncoder();
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v17, *MEMORY[0x263F06198], v11);
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, *MEMORY[0x263F06150], v0);
  uint64_t result = JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)(v17, v10, v6);
  static JSONEncoder.iso8601PrettyPrinted = result;
  return result;
}

uint64_t *JSONEncoder.iso8601PrettyPrinted.unsafeMutableAddressor()
{
  if (one-time initialization token for iso8601PrettyPrinted != -1) {
    swift_once();
  }
  return &static JSONEncoder.iso8601PrettyPrinted;
}

uint64_t static JSONEncoder.iso8601PrettyPrinted.getter()
{
  return static JSONEncoder.shared.getter(&one-time initialization token for iso8601PrettyPrinted);
}

uint64_t static JSONEncoder.shared.getter(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting;
  if (!lazy protocol witness table cache variable for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting)
  {
    type metadata accessor for JSONEncoder.OutputFormatting();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting);
  }
  return result;
}

uint64_t CodableNSSecureCoding.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_unknownObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CodableNSSecureCoding.wrappedValue.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void *CodableNSSecureCoding.init(from:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    lazy protocol witness table accessor for type Data and conformance Data();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    id v4 = objc_allocWithZone(MEMORY[0x263F08928]);
    outlined copy of Data._Representation(v8, v9);
    id v6 = @nonobjc NSKeyedUnarchiver.init(forReadingFrom:)(v8, v9);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    objc_msgSend(v6, sel_setRequiresSecureCoding_, objc_msgSend(ObjCClassFromMetadata, sel_supportsSecureCoding));
    id v7 = objc_msgSend(objc_allocWithZone((Class)ObjCClassFromMetadata), sel_initWithCoder_, v6);
    if (v7)
    {
      ObjCClassFromMetadata = v7;
      objc_msgSend(v6, sel_finishDecoding);

      outlined consume of Data._Representation(v8, v9);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      return ObjCClassFromMetadata;
    }
    type metadata accessor for CodableNSSecureCoding.Error();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();

    outlined consume of Data._Representation(v8, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return ObjCClassFromMetadata;
}

uint64_t CodableNSSecureCoding.encode(to:)(void *a1, void *a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  objc_msgSend(a2, sel_encodeWithCoder_, v4);
  objc_msgSend(v4, sel_finishEncoding);
  id v5 = objc_msgSend(v4, sel_encodedData);
  uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  lazy protocol witness table accessor for type Data and conformance Data();
  dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();

  outlined consume of Data._Representation(v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t static CodableNSSecureCoding.Error.== infix(_:_:)()
{
  return 1;
}

void CodableNSSecureCoding.Error.hash(into:)()
{
}

Swift::Int CodableNSSecureCoding.Error.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CodableNSSecureCoding<A>.Error()
{
  return Hasher._finalize()();
}

uint64_t static CodableNSSecureCoding.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void *protocol witness for Decodable.init(from:) in conformance CodableNSSecureCoding<A>@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = CodableNSSecureCoding.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance CodableNSSecureCoding<A>(void *a1)
{
  return CodableNSSecureCoding.encode(to:)(a1, *v1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CodableNSSecureCoding<A>()
{
  return static CodableNSSecureCoding.== infix(_:_:)();
}

id @nonobjc NSKeyedUnarchiver.init(forReadingFrom:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  v11[1] = *(id *)MEMORY[0x263EF8340];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v11[0] = 0;
  id v7 = objc_msgSend(v3, sel_initForReadingFromData_error_, isa, v11);

  if (v7)
  {
    id v8 = v11[0];
  }
  else
  {
    id v9 = v11[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  outlined consume of Data._Representation(a1, a2);
  return v7;
}

uint64_t type metadata accessor for CodableNSSecureCoding.Error()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t base witness table accessor for Equatable in CodableNSSecureCoding<A>.Error()
{
  return swift_getWitnessTable();
}

uint64_t type metadata instantiation function for CodableNSSecureCoding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for CodableNSSecureCoding()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for CodableNSSecureCoding.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x258546A74);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Collection.at(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = &v15[-v4];
  dispatch thunk of Collection.indices.getter();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  char v6 = Sequence<>.contains(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  if (v6)
  {
    id v7 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v9 = v8;
    uint64_t v10 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, v9, v10);
    v7(v15, 0);
    uint64_t v11 = a1;
    uint64_t v12 = 0;
    uint64_t v13 = v10;
  }
  else
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    uint64_t v11 = a1;
    uint64_t v12 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
}

uint64_t CSSearchableItem.associatedAppEntityId.getter()
{
  return OUTLINED_FUNCTION_0_23(35, 0x800000025867C720);
}

uint64_t CSSearchableItem.associatedAppEntityTypeId.getter()
{
  return OUTLINED_FUNCTION_0_23(31, 0x8000000258684B90);
}

uint64_t CSSearchableItem.associatedAppEntityId.getter(uint64_t a1, uint64_t a2)
{
  id v5 = objc_msgSend(v2, sel_attributeSet);
  char v6 = (void *)MEMORY[0x25A2C7AB0](a1, a2);
  id v7 = objc_msgSend(v5, sel_attributeForKey_, v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  outlined init with take of Any?((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    if (swift_dynamicCast()) {
      return v9;
    }
    else {
      return 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)v11);
    return 0;
  }
}

uint64_t CSSearchableItem.associatedAppEntityProtocolId.getter()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_0_23(uint64_t a1, uint64_t a2)
{
  return CSSearchableItem.associatedAppEntityId.getter(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

OmniSearch::EntityType_optional __swiftcall EntityType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v4 = v1;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EntityType.init(rawValue:), v3);
  result.value = swift_bridgeObjectRelease();
  char v7 = 15;
  if (v5 < 0xF) {
    char v7 = v5;
  }
  *uint64_t v4 = v7;
  return result;
}

unint64_t EntityType.rawValue.getter()
{
  unint64_t result = 0x6E6F697461636F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E6F73726570;
      break;
    case 2:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      unint64_t result = 0x6464416C69616D65;
      break;
    case 4:
      unint64_t result = 6910581;
      break;
    case 5:
      unint64_t result = 0x7469746E45707061;
      break;
    case 6:
      unint64_t result = 0x6563616C70;
      break;
    case 7:
      unint64_t result = 0x72656D6974;
      break;
    case 8:
      unint64_t result = 0x6D72616C61;
      break;
    case 9:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 0xA:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 0xB:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xD:
      unint64_t result = 0x656D695465746164;
      break;
    case 0xE:
      unint64_t result = 0x657449616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance EntityType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance EntityType()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EntityType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance EntityType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::EntityType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EntityType(Swift::String *a1)
{
  return EntityType.init(rawValue:)(*a1);
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance EntityType@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = EntityType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EntityType()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EntityType()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t EntityMatch.entityId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t EntityMatch.entityId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*EntityMatch.entityId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$entityId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EntityMatch.entityType.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t EntityMatch.entityType.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*EntityMatch.entityType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$entityType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EntityMatch.entityName.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t EntityMatch.entityName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*EntityMatch.entityName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$entityName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EntityMatch.matchedUserUtterance.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t EntityMatch.matchedUserUtterance.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*EntityMatch.matchedUserUtterance.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$matchedUserUtterance.getter()
{
  return EntityProperty.projectedValue.getter();
}

void EntityMatch.matcherType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *EntityMatch.matcherType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*EntityMatch.matcherType.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

double EntityMatch.matchScore.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

void key path getter for EntityMatch.matchScore : EntityMatch(double *a1@<X8>)
{
  *a1 = EntityMatch.matchScore.getter();
}

uint64_t key path setter for EntityMatch.matchScore : EntityMatch()
{
  return EntityMatch.matchScore.setter();
}

uint64_t EntityMatch.matchScore.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*EntityMatch.matchScore.modify())()
{
  double v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$matchScore.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EntityMatch.originAppBundleId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for EntityMatch.entityId : EntityMatch(uint64_t a1)
{
  __n128 v2 = OUTLINED_FUNCTION_0_24(a1);
  uint64_t result = v3(v2);
  *uint64_t v1 = result;
  v1[1] = v5;
  return result;
}

uint64_t key path setter for EntityMatch.entityId : EntityMatch(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t EntityMatch.originAppBundleId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*EntityMatch.originAppBundleId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$originAppBundleId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EntityMatch.startIndex.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t EntityMatch.startIndex.setter()
{
  return OUTLINED_FUNCTION_213_0();
}

uint64_t (*EntityMatch.startIndex.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$startIndex.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EntityMatch.endIndex.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for EntityMatch.startIndex : EntityMatch(uint64_t a1)
{
  __n128 v2 = OUTLINED_FUNCTION_0_24(a1);
  uint64_t result = v3(v2);
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = v5 & 1;
  return result;
}

uint64_t key path setter for EntityMatch.startIndex : EntityMatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void))
{
  return a5(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t EntityMatch.endIndex.setter()
{
  return OUTLINED_FUNCTION_213_0();
}

uint64_t (*EntityMatch.endIndex.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t EntityMatch.$endIndex.getter()
{
  return EntityProperty.projectedValue.getter();
}

void EntityMatch.matchProperties.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  char v4 = *(unsigned char *)(v1 + 96);
  int v5 = *(_DWORD *)(v1 + 100);
  char v6 = *(unsigned char *)(v1 + 104);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 28) = v5;
  *(unsigned char *)(a1 + 32) = v6;
}

uint64_t EntityMatch.matchProperties.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)(result + 16);
  char v4 = *(unsigned char *)(result + 24);
  int v5 = *(_DWORD *)(result + 28);
  char v6 = *(unsigned char *)(result + 32);
  *(void *)(v1 + 72) = *(void *)result;
  *(unsigned char *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v3;
  *(unsigned char *)(v1 + 96) = v4;
  *(_DWORD *)(v1 + 100) = v5;
  *(unsigned char *)(v1 + 104) = v6;
  return result;
}

uint64_t (*EntityMatch.matchProperties.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t EntityMatch.init(entityId:startIndex:endIndex:entityType:entityName:userUtterance:matchScore:matchProperties:matcherType:originAppBundleId:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t *a4, char *a5)
{
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_21_7();
  uint64_t v37 = *a4;
  char v36 = *((unsigned char *)a4 + 8);
  uint64_t v43 = a4[2];
  int v41 = *((_DWORD *)a4 + 7);
  char v42 = *((unsigned char *)a4 + 24);
  char v39 = *a5;
  char v40 = *((unsigned char *)a4 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_106_2();
  uint64_t v9 = v8;
  swift_retain();
  OUTLINED_FUNCTION_16_28();
  uint64_t v10 = MEMORY[0x25A2C4900](v5);
  swift_retain();
  OUTLINED_FUNCTION_8_22();
  uint64_t v11 = MEMORY[0x25A2C4900](v5);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v12 = MEMORY[0x25A2C4900](v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Double>);
  swift_retain();
  OUTLINED_FUNCTION_17_27();
  uint64_t v13 = MEMORY[0x25A2C4920](v5);
  swift_retain();
  OUTLINED_FUNCTION_15_32();
  OUTLINED_FUNCTION_106_2();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  swift_retain();
  OUTLINED_FUNCTION_7_38();
  uint64_t v16 = MEMORY[0x25A2C4930](v5);
  swift_retain();
  OUTLINED_FUNCTION_13_36();
  uint64_t v17 = MEMORY[0x25A2C4930](v5);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v45 = String.index(_:offsetBy:)();
  unint64_t v44 = String.index(_:offsetBy:)();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  uint64_t v18 = v17;
  swift_release();
  uint64_t v19 = v16;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v20 = v12;
  swift_release();
  uint64_t v21 = v11;
  swift_release();
  uint64_t v22 = v10;
  swift_release();
  uint64_t result = swift_release();
  if (v44 >> 14 < v45 >> 14)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    uint64_t v35 = v21;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v34 = v19;
    swift_retain();
    uint64_t v24 = v18;
    swift_retain();
    uint64_t v25 = String.subscript.getter();
    uint64_t v26 = v15;
    uint64_t v27 = v13;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    MEMORY[0x25A2C7B70](v25, v29, v31, v33);
    swift_bridgeObjectRelease();
    EntityProperty.wrappedValue.setter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.setter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.setter();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    uint64_t result = swift_release_n();
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v22;
    *(void *)(a1 + 16) = v35;
    *(void *)(a1 + 24) = v20;
    *(unsigned char *)(a1 + 32) = v39;
    *(void *)(a1 + 40) = v27;
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = v34;
    *(void *)(a1 + 64) = v24;
    *(void *)(a1 + 72) = v37;
    *(unsigned char *)(a1 + 80) = v36;
    *(void *)(a1 + 88) = v43;
    *(unsigned char *)(a1 + 96) = v42;
    *(_DWORD *)(a1 + 100) = v41;
    *(unsigned char *)(a1 + 104) = v40;
  }
  return result;
}

uint64_t EntityMatch.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_21_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_106_2();
  uint64_t v6 = v5;
  swift_retain();
  OUTLINED_FUNCTION_16_28();
  uint64_t v7 = MEMORY[0x25A2C4900](v1);
  swift_retain();
  OUTLINED_FUNCTION_8_22();
  uint64_t v8 = MEMORY[0x25A2C4900](v1);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v9 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Double>);
  swift_retain();
  OUTLINED_FUNCTION_17_27();
  uint64_t v10 = MEMORY[0x25A2C4920](v1);
  swift_retain();
  OUTLINED_FUNCTION_15_32();
  OUTLINED_FUNCTION_106_2();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  swift_retain();
  OUTLINED_FUNCTION_7_38();
  uint64_t v13 = MEMORY[0x25A2C4930](v1);
  swift_retain();
  OUTLINED_FUNCTION_13_36();
  uint64_t v14 = MEMORY[0x25A2C4930](v1);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_22_26();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_22_26();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_28_22();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_28_22();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 1;
  *(_DWORD *)(a1 + 100) = 0;
  *(unsigned char *)(a1 + 104) = 1;
  return result;
}

uint64_t MatchProperties.init(maxTokenCount:matchedTokenCount:matchedAliasTypes:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, int *a5@<X4>, uint64_t a6@<X8>)
{
  int v6 = *a5;
  char v7 = *((unsigned char *)a5 + 4);
  *(void *)a6 = result;
  *(unsigned char *)(a6 + 8) = a2 & 1;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 24) = a4 & 1;
  *(_DWORD *)(a6 + 28) = v6;
  *(unsigned char *)(a6 + 32) = v7;
  return result;
}

uint64_t EntityMatch.description.getter()
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (one-time initialization token for entityTypeMap != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static EntityMatchFormatter.entityTypeMap;
  if (!*(void *)(static EntityMatchFormatter.entityTypeMap + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v1 = specialized __RawDictionaryStorage.find<A>(_:)(v11._countAndFlagsBits, (uint64_t)v11._object);
  if ((v2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    String.splitByCapitalLetters()();
    Swift::String v6 = String.lowercased()();
    uint64_t countAndFlagsBits = v6._countAndFlagsBits;
    object = v6._object;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 56) + 16 * v1);
  uint64_t countAndFlagsBits = *v3;
  object = (void *)v3[1];
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
LABEL_8:
  v7._uint64_t countAndFlagsBits = countAndFlagsBits;
  v7._object = object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x222064656D616E20;
  v8._object = (void *)0xE800000000000000;
  String.append(_:)(v8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 34;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return 8289;
}

uint64_t static EntityMatchFormatter.format(entityType:)(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for entityTypeMap != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static EntityMatchFormatter.entityTypeMap;
  if (!*(void *)(static EntityMatchFormatter.entityTypeMap + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    String.splitByCapitalLetters()();
    uint64_t countAndFlagsBits = String.lowercased()()._countAndFlagsBits;
    goto LABEL_8;
  }
  uint64_t countAndFlagsBits = *(void *)(*(void *)(v4 + 56) + 16 * v5);
  swift_endAccess();
  swift_bridgeObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t EntityMatch.debugString.getter()
{
  HIDWORD(v73) = *(unsigned __int8 *)(v0 + 32);
  uint64_t v68 = *(void *)(v0 + 72);
  HIDWORD(v63) = *(unsigned __int8 *)(v0 + 80);
  uint64_t v59 = *(void *)(v0 + 88);
  LODWORD(v55) = *(_DWORD *)(v0 + 100);
  HIDWORD(v55) = *(unsigned __int8 *)(v0 + 96);
  HIDWORD(v51) = *(unsigned __int8 *)(v0 + 104);
  _StringGuts.grow(_:)(235);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x8000000258684BF0;
  String.append(_:)(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = swift_release();
  OUTLINED_FUNCTION_12_36(v2, v3, v4, v5, v6, v7, v8, v9, v39, v43, v47, v51, v55, v59, v63, v68, v73, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_28((uint64_t)",\n    entityType: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = swift_release();
  OUTLINED_FUNCTION_12_36(v10, v11, v12, v13, v14, v15, v16, v17, v40, v44, v48, v52, v56, v60, v64, v69, v74, v78, v82);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_28((uint64_t)",\n    entityName: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = swift_release();
  OUTLINED_FUNCTION_12_36(v18, v19, v20, v21, v22, v23, v24, v25, v41, v45, v49, v53, v57, v61, v65, v70, v75, v79, v83);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_28((uint64_t)",\n    startIndex: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_21_26();
  v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_30(0xD000000000000010, (uint64_t)",\n    endIndex: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_21_26();
  v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_30(0xD00000000000001CLL, (uint64_t)",\n    matchedUserUtterance: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = swift_release();
  OUTLINED_FUNCTION_12_36(v28, v29, v30, v31, v32, v33, v34, v35, v42, v46, v50, v54, v58, v62, v66, v71, v76, v80, v84);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_28((uint64_t)",\n    matchScore: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  Double.write<A>(to:)();
  v36._uint64_t countAndFlagsBits = 0xD000000000000017;
  v36._object = (void *)0x8000000258684CD0;
  String.append(_:)(v36);
  v81._uint64_t countAndFlagsBits = v72;
  LOBYTE(v81._object) = v67;
  OUTLINED_FUNCTION_27_24();
  OUTLINED_FUNCTION_24_30(0xD000000000000013, (uint64_t)",\n    matcherType: ");
  LOBYTE(v81._countAndFlagsBits) = v77;
  OUTLINED_FUNCTION_27_24();
  OUTLINED_FUNCTION_24_30(0xD000000000000019, (uint64_t)",\n    originAppBundleId: ");
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  String.append(_:)(v81);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 32010;
  v37._object = (void *)0xE200000000000000;
  String.append(_:)(v37);
  return 0;
}

uint64_t static EntityMatch.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static EntityMatch.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static EntityMatch.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t EntityMatch.displayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_184_0();
  uint64_t v14 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v13 = v5;
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_184_0();
  uint64_t v6 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_12();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v15);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  LocalizedStringResource.init(stringInterpolation:)();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v12);
  uint64_t v10 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v10);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance EntityMatch(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance EntityMatch()
{
  lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return UUID.init()();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance EntityMatch(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance EntityMatch(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return MEMORY[0x270EE1D98](a1, v2);
}

OmniSearch::EntityMatcherType_optional __swiftcall EntityMatcherType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v4 = v1;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EntityMatcherType.init(rawValue:), v3);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *uint64_t v4 = v7;
  return result;
}

uint64_t EntityMatcherType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance EntityMatcherType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance EntityMatcherType()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EntityMatcherType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance EntityMatcherType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::EntityMatcherType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EntityMatcherType(Swift::String *a1)
{
  return EntityMatcherType.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance EntityMatcherType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityMatcherType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EntityMatcherType()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EntityMatcherType()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t MatchProperties.maxTokenCount.getter()
{
  return *(void *)v0;
}

uint64_t MatchProperties.matchedTokenCount.getter()
{
  return *(void *)(v0 + 16);
}

void MatchProperties.matchedAliasTypes.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 28);
  *(unsigned char *)(a1 + 4) = v2;
}

uint64_t MatchProperties.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656B6F5478616DLL && a2 == 0xED0000746E756F43;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000258684D30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000258684D50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t MatchProperties.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x6E656B6F5478616DLL;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MatchProperties.CodingKeys()
{
  return MatchProperties.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MatchProperties.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = MatchProperties.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MatchProperties.CodingKeys(uint64_t a1)
{
  unint64_t matched = lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  return MEMORY[0x270FA00B0](a1, matched);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MatchProperties.CodingKeys(uint64_t a1)
{
  unint64_t matched = lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  return MEMORY[0x270FA00B8](a1, matched);
}

uint64_t MatchProperties.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<MatchProperties.CodingKeys>);
  OUTLINED_FUNCTION_1_33();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  Swift::String v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v1 + 16);
  int v9 = *(unsigned __int8 *)(v1 + 24);
  int v15 = *(_DWORD *)(v1 + 28);
  int v16 = v9;
  HIDWORD(v14) = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v23 = 0;
  uint64_t v10 = v18;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v10)
  {
    char v12 = BYTE4(v14);
    int v11 = v15;
    char v22 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    int v19 = v11;
    char v20 = v12;
    char v21 = 2;
    lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v2);
}

uint64_t MatchProperties.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MatchProperties.CodingKeys>);
  OUTLINED_FUNCTION_1_33();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_13_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    uint64_t v6 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v8 = v7;
    uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v14 = v11;
    uint64_t v15 = v9;
    lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v12 = OUTLINED_FUNCTION_86_12();
    v13(v12);
    *(void *)a2 = v6;
    *(unsigned char *)(a2 + 8) = v8 & 1;
    *(void *)(a2 + 16) = v15;
    *(unsigned char *)(a2 + 24) = v14 & 1;
    *(_DWORD *)(a2 + 28) = v16;
    *(unsigned char *)(a2 + 32) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t protocol witness for Decodable.init(from:) in conformance MatchProperties@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MatchProperties.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance MatchProperties(void *a1)
{
  return MatchProperties.encode(to:)(a1);
}

uint64_t AliasTypes.rawValue.getter()
{
  return *v0;
}

uint64_t AliasTypes.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static AliasTypes.homeEntity.getter(_DWORD *a1@<X8>)
{
}

void static AliasTypes.synonym.getter(_DWORD *a1@<X8>)
{
}

void static AliasTypes.transliteration.getter(_DWORD *a1@<X8>)
{
}

void static AliasTypes.expandedEmoji.getter(_DWORD *a1@<X8>)
{
}

void static AliasTypes.contactRelationship.getter(_DWORD *a1@<X8>)
{
}

void static AliasTypes.contactHypocorism.getter(_DWORD *a1@<X8>)
{
}

void static AliasTypes.contactHandle.getter(_DWORD *a1@<X8>)
{
}

uint64_t protocol witness for OptionSet.init(rawValue:) in conformance AliasTypes@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return AliasTypes.init(rawValue:)(*a1, a2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance AliasTypes()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AliasTypes()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for SetAlgebra.contains(_:) in conformance AliasTypes(unsigned int *a1)
{
  return specialized OptionSet<>.contains(_:)(*a1, *v1);
}

void protocol witness for SetAlgebra.union(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
}

uint64_t protocol witness for SetAlgebra.intersection(_:) in conformance AliasTypes@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return specialized OptionSet.intersection(_:)(*a1, *v2, a2);
}

void protocol witness for SetAlgebra.symmetricDifference(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
}

BOOL protocol witness for SetAlgebra.insert(_:) in conformance AliasTypes(_DWORD *a1, int *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

void protocol witness for SetAlgebra.remove(_:) in conformance AliasTypes(int *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for SetAlgebra.update(with:) in conformance AliasTypes(int *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance AliasTypes(unsigned int *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance AliasTypes(unsigned int *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance AliasTypes(unsigned int *a1)
{
  return specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

void protocol witness for SetAlgebra.subtracting(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance AliasTypes(int *a1)
{
  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isDisjoint(with:) in conformance AliasTypes(int *a1)
{
  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isSuperset(of:) in conformance AliasTypes(int *a1)
{
  return specialized SetAlgebra.isSuperset(of:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isEmpty.getter in conformance AliasTypes()
{
  return specialized SetAlgebra.isEmpty.getter(*v0);
}

uint64_t protocol witness for SetAlgebra.init<A>(_:) in conformance AliasTypes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

uint64_t protocol witness for SetAlgebra.subtract(_:) in conformance AliasTypes(unsigned int *a1)
{
  return specialized SetAlgebra.subtract(_:)(*a1);
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance AliasTypes@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = AliasTypes.init(rawValue:)(*a1, (_DWORD *)a2);
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AliasTypes@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = AliasTypes.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AliasTypes(int *a1, int *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t one-time initialization function for entityTypeMap()
{
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  static EntityMatchFormatter.entityTypeMap = result;
  return result;
}

uint64_t *EntityMatchFormatter.entityTypeMap.unsafeMutableAddressor()
{
  if (one-time initialization token for entityTypeMap != -1) {
    swift_once();
  }
  return &static EntityMatchFormatter.entityTypeMap;
}

uint64_t static EntityMatchFormatter.entityTypeMap.getter()
{
  if (one-time initialization token for entityTypeMap != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static EntityMatchFormatter.entityTypeMap.setter(uint64_t a1)
{
  if (one-time initialization token for entityTypeMap != -1) {
    swift_once();
  }
  swift_beginAccess();
  static EntityMatchFormatter.entityTypeMap = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static EntityMatchFormatter.entityTypeMap.modify())()
{
  if (one-time initialization token for entityTypeMap != -1) {
    swift_once();
  }
  swift_beginAccess();
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t static EntityMatchFormatter.format(entities:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    strcpy((char *)v8, "The user has ");
    HIWORD(v8[1]) = -4864;
    uint64_t v2 = 0;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = v1;
      if (v1 == 1) {
        break;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (v2)
      {
        OUTLINED_FUNCTION_3_46();
        uint64_t v3 = 8236;
        unint64_t v4 = 0xE200000000000000;
        goto LABEL_7;
      }
LABEL_8:
      v5._uint64_t countAndFlagsBits = EntityMatch.description.getter();
      String.append(_:)(v5);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v2 += 112;
      --v1;
      if (v7 == 1)
      {
        swift_bridgeObjectRelease();
        return v8[0];
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_3_46();
    uint64_t v3 = 0x20646E61202CLL;
    unint64_t v4 = 0xE600000000000000;
LABEL_7:
    String.append(_:)(*(Swift::String *)&v3);
    goto LABEL_8;
  }
  return 0;
}

unint64_t lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes()
{
  unint64_t result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityType and conformance EntityType()
{
  unint64_t result = lazy protocol witness table cache variable for type EntityType and conformance EntityType;
  if (!lazy protocol witness table cache variable for type EntityType and conformance EntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityType and conformance EntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EntityType and conformance EntityType;
  if (!lazy protocol witness table cache variable for type EntityType and conformance EntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityType and conformance EntityType);
  }
  return result;
}

uint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in EntityMatch()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<EntityMatch> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<EntityMatch>);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in EntityMatch()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<EntityMatch> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<EntityMatch>);
}

unint64_t lazy protocol witness table accessor for type EntityMatcherType and conformance EntityMatcherType()
{
  unint64_t result = lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType;
  if (!lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType;
  if (!lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType);
  }
  return result;
}

uint64_t sub_25854B020(uint64_t a1)
{
  return key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_25854B04C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.entityId.setter);
}

uint64_t sub_25854B078(uint64_t a1)
{
  return key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_25854B0A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.entityType.setter);
}

uint64_t sub_25854B0D0(uint64_t a1)
{
  return key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_25854B0FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.entityName.setter);
}

uint64_t sub_25854B128(uint64_t a1)
{
  return key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_25854B154(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.matchedUserUtterance.setter);
}

uint64_t sub_25854B188(uint64_t a1)
{
  return key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_25854B1B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.originAppBundleId.setter);
}

uint64_t sub_25854B1E0(uint64_t a1)
{
  return key path getter for EntityMatch.startIndex : EntityMatch(a1);
}

uint64_t sub_25854B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.startIndex : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(void, void))EntityMatch.startIndex.setter);
}

uint64_t sub_25854B238(uint64_t a1)
{
  return key path getter for EntityMatch.startIndex : EntityMatch(a1);
}

uint64_t sub_25854B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.startIndex : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(void, void))EntityMatch.endIndex.setter);
}

unsigned char *storeEnumTagSinglePayload for EntityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854B35CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntityType()
{
}

uint64_t destroy for EntityMatch()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EntityMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EntityMatch(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v5;
  LODWORD(v5) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = v5;
  return a1;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for EntityMatch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityMatch(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 105))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityMatch(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EntityMatch()
{
}

unsigned char *storeEnumTagSinglePayload for EntityMatcherType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854B818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntityMatcherType()
{
}

uint64_t getEnumTagSinglePayload for MatchProperties(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MatchProperties(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

void type metadata accessor for MatchProperties()
{
}

void type metadata accessor for AliasTypes()
{
}

void type metadata accessor for EntityMatchFormatter()
{
}

unsigned char *storeEnumTagSinglePayload for MatchProperties.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854B98CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for MatchProperties.CodingKeys()
{
  return &unk_2706B4618;
}

__n128 OUTLINED_FUNCTION_0_24(uint64_t a1)
{
  return *(__n128 *)(a1 + 56);
}

void OUTLINED_FUNCTION_2_28(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000012;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

void OUTLINED_FUNCTION_4_36(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_7_38()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_8_22()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_9_28()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_12_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  String.append(_:)(*(Swift::String *)&a18);
}

uint64_t OUTLINED_FUNCTION_13_36()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_15_32()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_17_27()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_24_30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_27_24()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t OUTLINED_FUNCTION_28_22()
{
  *(void *)(v0 - 96) = 0;
  *(unsigned char *)(v0 - 88) = 1;
  return swift_retain();
}

uint64_t FeatureFlagService.__allocating_init()()
{
  return swift_allocObject();
}

Swift::Bool __swiftcall FeatureFlagService.isEnabled(_:)(OmniSearch::FeatureFlagService::FeatureFlag a1)
{
  uint64_t v5 = &type metadata for FeatureFlagService.FeatureFlag;
  unint64_t v6 = lazy protocol witness table accessor for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag();
  v4[0] = a1;
  char v2 = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2 & 1;
}

Swift::Bool __swiftcall FeatureFlagService.isDisabled(_:)(OmniSearch::FeatureFlagService::FeatureFlag a1)
{
  return ((*(uint64_t (**)(void))(*(void *)v1 + 80))(a1) & 1) == 0;
}

const char *FeatureFlagService.FeatureFlag.domain.getter(char a1)
{
  if (a1 == 9) {
    return "Photos";
  }
  else {
    return "OmniSearch";
  }
}

const char *FeatureFlagService.FeatureFlag.feature.getter(char a1)
{
  unint64_t result = "albusSearch";
  switch(a1)
  {
    case 1:
      unint64_t result = "dataDetectors";
      break;
    case 2:
      unint64_t result = "extractedFlightResolution";
      break;
    case 3:
      unint64_t result = "locationResolution";
      break;
    case 4:
      unint64_t result = "mediaResolution";
      break;
    case 5:
      unint64_t result = "llmQUConstrainedDecoding";
      break;
    case 6:
      unint64_t result = "PQAVerification";
      break;
    case 7:
      unint64_t result = "reflectionToken";
      break;
    case 8:
      unint64_t result = "ResponseOverride";
      break;
    case 9:
      unint64_t result = "MemoryCreation";
      break;
    case 10:
      unint64_t result = "attributionUI";
      break;
    case 11:
      unint64_t result = "eventAnswers";
      break;
    case 12:
      unint64_t result = "preExtractedBreadcrumbs";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static FeatureFlagService.FeatureFlag.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void FeatureFlagService.FeatureFlag.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int FeatureFlagService.FeatureFlag.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance FeatureFlagService.FeatureFlag(char *a1, char *a2)
{
  return static FeatureFlagService.FeatureFlag.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance FeatureFlagService.FeatureFlag()
{
  return FeatureFlagService.FeatureFlag.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance FeatureFlagService.FeatureFlag(uint64_t a1)
{
  FeatureFlagService.FeatureFlag.hash(into:)(a1, *v1);
}

const char *protocol witness for FeatureFlagsKey.domain.getter in conformance FeatureFlagService.FeatureFlag()
{
  return FeatureFlagService.FeatureFlag.domain.getter(*v0);
}

const char *protocol witness for FeatureFlagsKey.feature.getter in conformance FeatureFlagService.FeatureFlag()
{
  return FeatureFlagService.FeatureFlag.feature.getter(*v0);
}

uint64_t FeatureFlagService.deinit()
{
  return v0;
}

uint64_t FeatureFlagService.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t FeatureFlagService.init()()
{
  return v0;
}

unint64_t lazy protocol witness table accessor for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag()
{
  unint64_t result = lazy protocol witness table cache variable for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag;
  if (!lazy protocol witness table cache variable for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag;
  if (!lazy protocol witness table cache variable for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FeatureFlagService.FeatureFlag and conformance FeatureFlagService.FeatureFlag);
  }
  return result;
}

uint64_t type metadata accessor for FeatureFlagService()
{
  return self;
}

uint64_t method lookup function for FeatureFlagService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FeatureFlagService);
}

uint64_t dispatch thunk of FeatureFlagService.isEnabled(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of FeatureFlagService.isDisabled(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of FeatureFlagService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t getEnumTagSinglePayload for FeatureFlagService.FeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureFlagService.FeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854C398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagService.FeatureFlag()
{
  return &type metadata for FeatureFlagService.FeatureFlag;
}

uint64_t *HallucinationMitigator.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static HallucinationMitigator.shared;
}

OmniSearch::ProposedDialog __swiftcall ProposedDialog.init(dialog:sourceDocuments:useCase:)(Swift::String dialog, Swift::OpaquePointer sourceDocuments, OmniSearch::ProposedDialog::UseCase useCase)
{
  OmniSearch::ProposedDialog::UseCase v3 = useCase & 1;
  result.dialog = dialog;
  result.sourceDocuments = sourceDocuments;
  result.useCase = v3;
  return result;
}

uint64_t static HallucinationMitigator.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

id HallucinationMitigator.ddConfig.getter()
{
  return *(id *)(v0 + 16);
}

void *HallucinationMitigator.DataDetectorFlightInformationType.unsafeMutableAddressor()
{
  return &static HallucinationMitigator.DataDetectorFlightInformationType;
}

unint64_t static HallucinationMitigator.DataDetectorFlightInformationType.getter()
{
  return 0xD000000000000011;
}

uint64_t HallucinationMitigator.().init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F394B8]), sel_initWithScannerType_passiveIntent_, 0, 1);
  return v0;
}

uint64_t _s10OmniSearch22HallucinationMitigatorC16postLLMCallCheck5query14inputDocuments6dialogySS_SayAA0B6ResultVGAA14ProposedDialogVtAA0N13OverrideErrorOYKF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, BOOL *a8)
{
  uint64_t v10 = v8;
  uint64_t v13 = self;
  char v14 = (void *)MEMORY[0x25A2C7AB0](a4, a5);
  id v15 = objc_msgSend(v13, sel_scanString_, v14);

  type metadata accessor for DDScannerResult();
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
LABEL_3:
      uint64_t v30 = a8;
      unint64_t v33 = v16 & 0xC000000000000001;
      uint64_t v18 = (void *)MEMORY[0x263F8EE78];
      uint64_t v19 = 4;
      uint64_t v32 = v17;
      do
      {
        if (v33) {
          id v20 = (id)MEMORY[0x25A2C8550](v19 - 4, v16);
        }
        else {
          id v20 = *(id *)(v16 + 8 * v19);
        }
        char v21 = v20;
        uint64_t v22 = v19 - 3;
        if (__OFADD__(v19 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        unint64_t v23 = v16;
        a8 = (BOOL *)objc_msgSend(v20, sel_type);
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

        if (v24 == 0xD000000000000011 && v26 == 0x8000000258684EC0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v27 & 1) == 0)
          {
            unint64_t v16 = v23;
            goto LABEL_17;
          }
        }
        if (specialized static Array<A>.== infix(_:_:)(v18, MEMORY[0x263F8EE78]))
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = (void *)HallucinationMitigator.scanInputDocuments(inputDocuments:)(a3);
        }
        unint64_t v16 = v23;
        _s10OmniSearch22HallucinationMitigatorC26inputEntitiesContainFlight33_4877CDCBE248C517EE90FB47757CC8DELL0eF06entityySaySaySo15DDScannerResultCGG_AItAA19DialogOverrideErrorOYKF((uint64_t)v18, v21, &v34);
        if (v10)
        {
          BOOL v28 = v34;

          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          BOOL *v30 = v28;
          return result;
        }
        uint64_t v10 = 0;
LABEL_17:

        ++v19;
      }
      while (v22 != v32);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t type metadata accessor for DDScannerResult()
{
  unint64_t result = lazy cache variable for type metadata for DDScannerResult;
  if (!lazy cache variable for type metadata for DDScannerResult)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for DDScannerResult);
  }
  return result;
}

uint64_t HallucinationMitigator.scanInputDocuments(inputDocuments:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResult(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v8 = self;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    do
    {
      outlined init with copy of SearchResult(v9, (uint64_t)v5);
      SearchResultItem.associatedValue.getter((uint64_t)v21);
      uint64_t v11 = v22;
      uint64_t v12 = v23;
      __swift_project_boxed_opaque_existential_1(v21, v22);
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
      uint64_t v15 = v14;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
      unint64_t v16 = (void *)MEMORY[0x25A2C7AB0](v13, v15);
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v8, sel_scanString_, v16);

      type metadata accessor for DDScannerResult();
      uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      outlined destroy of SearchResult((uint64_t)v5);
      uint64_t v7 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v7 = v24;
      }
      unint64_t v19 = *(void *)(v7 + 16);
      if (v19 >= *(void *)(v7 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v7 = v24;
      }
      *(void *)(v7 + 16) = v19 + 1;
      *(void *)(v7 + 8 * v19 + 32) = v18;
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void _s10OmniSearch22HallucinationMitigatorC26inputEntitiesContainFlight33_4877CDCBE248C517EE90FB47757CC8DELL0eF06entityySaySaySo15DDScannerResultCGG_AItAA19DialogOverrideErrorOYKF(uint64_t a1, void *a2, BOOL *a3)
{
  uint64_t v3 = a2;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04910]), sel_initWithDDScannerResult_, a2);
  if (!v5)
  {
    if (one-time initialization token for hallucination != -1) {
LABEL_53:
    }
      swift_once();
    uint64_t v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)static Logging.hallucination);
    id v42 = v3;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      OUTLINED_FUNCTION_6_37();
      uint64_t v45 = (void *)swift_slowAlloc();
      OUTLINED_FUNCTION_0_25(5.7779e-34);
      OUTLINED_FUNCTION_1_34();
      *uint64_t v45 = v63;

      OUTLINED_FUNCTION_28_5(&dword_257DC6000, v46, v47, "Cannot make flight from entity %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
    }
    lazy protocol witness table accessor for type DialogOverrideError and conformance DialogOverrideError();
    swift_willThrowTypedImpl();
    goto LABEL_51;
  }
  uint64_t v59 = *(void *)(a1 + 16);
  if (!v59)
  {
LABEL_45:
    if (one-time initialization token for hallucination != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    __swift_project_value_buffer(v52, (uint64_t)static Logging.hallucination);
    id v53 = v3;
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      OUTLINED_FUNCTION_6_37();
      uint64_t v56 = (void *)swift_slowAlloc();
      OUTLINED_FUNCTION_0_25(5.7779e-34);
      OUTLINED_FUNCTION_1_34();
      *uint64_t v56 = v63;

      OUTLINED_FUNCTION_28_5(&dword_257DC6000, v57, v58, "Cannot make flight from entity %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
    }
    lazy protocol witness table accessor for type DialogOverrideError and conformance DialogOverrideError();
    swift_willThrowTypedImpl();

LABEL_51:
    *a3 = v5 == 0;
    return;
  }
  uint64_t v61 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v63 = v3;
  while (1)
  {
    unint64_t v7 = *(void *)(v61 + 8 * v6);
    uint64_t v62 = v6;
    if (!(v7 >> 62))
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8) {
        break;
      }
      goto LABEL_30;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      break;
    }
LABEL_30:
    uint64_t v6 = v62 + 1;
    swift_bridgeObjectRelease();
    if (v62 + 1 == v59)
    {
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
  }
  unint64_t v67 = v7 & 0xC000000000000001;
  uint64_t v9 = 4;
  uint64_t v65 = v8;
  unint64_t v66 = v7;
  while (1)
  {
    if (v67) {
      id v10 = (id)MEMORY[0x25A2C8550](v9 - 4, v7);
    }
    else {
      id v10 = *(id *)(v7 + 8 * v9);
    }
    uint64_t v11 = v10;
    uint64_t v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    id v13 = objc_msgSend(v3, sel_type);
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    if (v14 == 0xD000000000000011 && v16 == 0x8000000258684EC0) {
      break;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_15;
    }
LABEL_29:

    ++v9;
    unint64_t v7 = v66;
    if (v12 == v65) {
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04910]), sel_initWithDDScannerResult_, v11);
  if (!v18) {
    goto LABEL_29;
  }
  unint64_t v19 = v18;
  uint64_t v64 = v11;
  id v20 = objc_msgSend(v18, sel_flightNumber);
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  uint64_t v24 = v5;
  id v25 = objc_msgSend(v5, sel_flightNumber);
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  if (v21 == v26 && v23 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = OUTLINED_FUNCTION_2_29();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
LABEL_28:

      id v5 = v24;
      uint64_t v3 = v63;
      uint64_t v11 = v64;
      goto LABEL_29;
    }
  }
  id v31 = objc_msgSend(v19, sel_airline);
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  id v35 = objc_msgSend(v24, sel_airline);
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  if (v32 != v36 || v34 != v38)
  {
    char v40 = OUTLINED_FUNCTION_2_29();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (one-time initialization token for hallucination != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  __swift_project_value_buffer(v48, (uint64_t)static Logging.hallucination);
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&dword_257DC6000, v49, v50, "Output flight detail match with dialog", v51, 2u);
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
}

uint64_t HallucinationMitigator.deinit()
{
  return v0;
}

uint64_t HallucinationMitigator.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t _s10OmniSearch22HallucinationMitigatorCAA0C18MitigationProtocolA2aDP15preLLMCallCheck5query9documentsySS_SayAA0B6ResultVGtAA19DialogOverrideErrorOYKFTW(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(**(void **)v4 + 96))(a1, a2, a3, &v8);
  if (v5) {
    *a4 = v8;
  }
  return result;
}

uint64_t _s10OmniSearch22HallucinationMitigatorCAA0C18MitigationProtocolA2aDP16postLLMCallCheck5query14inputDocuments6dialogySS_SayAA0B6ResultVGAA14ProposedDialogVtAA0P13OverrideErrorOYKFTW(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, unsigned char *a8)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, char *))(**(void **)v8 + 104))(a1, a2, a3, a4, a5, a6, a7 & 1, &v12);
  if (v9) {
    *a8 = v12;
  }
  return result;
}

uint64_t ProposedDialog.dialog.getter(uint64_t a1)
{
  return a1;
}

uint64_t ProposedDialog.sourceDocuments.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL static ProposedDialog.UseCase.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ProposedDialog.UseCase.hash(into:)(uint64_t a1, char a2)
{
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ProposedDialog.UseCase(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ProposedDialog.UseCase.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ProposedDialog.UseCase()
{
  return ProposedDialog.UseCase.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ProposedDialog.UseCase(uint64_t a1)
{
  ProposedDialog.UseCase.hash(into:)(a1, *v1);
}

uint64_t ProposedDialog.useCase.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

#error "25854D308: call analysis failed (funcsize=31)"

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ProposedDialog(uint64_t a1, uint64_t a2)
{
  return static ProposedDialog.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

unint64_t lazy protocol witness table accessor for type ProposedDialog.UseCase and conformance ProposedDialog.UseCase()
{
  unint64_t result = lazy protocol witness table cache variable for type ProposedDialog.UseCase and conformance ProposedDialog.UseCase;
  if (!lazy protocol witness table cache variable for type ProposedDialog.UseCase and conformance ProposedDialog.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ProposedDialog.UseCase and conformance ProposedDialog.UseCase);
  }
  return result;
}

uint64_t _s10OmniSearch31HallucinationMitigationProtocolP15preLLMCallCheck5query9documentsySS_SayAA0B6ResultVGtAA19DialogOverrideErrorOYKFTj(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t _s10OmniSearch31HallucinationMitigationProtocolP16postLLMCallCheck5query14inputDocuments6dialogySS_SayAA0B6ResultVGAA14ProposedDialogVtAA0O13OverrideErrorOYKFTj(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a10 + 16))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t type metadata accessor for HallucinationMitigator()
{
  return self;
}

uint64_t method lookup function for HallucinationMitigator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HallucinationMitigator);
}

uint64_t _s10OmniSearch22HallucinationMitigatorC15preLLMCallCheck5query9documentsySS_SayAA0B6ResultVGtAA19DialogOverrideErrorOYKFTj()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t _s10OmniSearch22HallucinationMitigatorC16postLLMCallCheck5query14inputDocuments6dialogySS_SayAA0B6ResultVGAA14ProposedDialogVtAA0N13OverrideErrorOYKFTj(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v7 + 104))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t initializeWithCopy for ProposedDialog(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProposedDialog(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ProposedDialog(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProposedDialog(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProposedDialog(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ProposedDialog()
{
}

void type metadata accessor for ProposedDialog.UseCase()
{
}

unsigned char *storeEnumTagSinglePayload for ProposedDialog.UseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854D784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for DialogOverrideError()
{
}

id OUTLINED_FUNCTION_0_25(float a1)
{
  *unint64_t v2 = a1;
  *(void *)(v3 - 72) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_6_37()
{
  return swift_slowAlloc();
}

uint64_t LatencyProfiler.__allocating_init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  LatencyProfiler.init(_:)(a1, a2);
  return v4;
}

void *LatencyProfiler.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  v2[2] = mach_absolute_time();
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v6 = one-time initialization token for search;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)id v10 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v8, v9, "LP - started %s", v10, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v3;
}

Swift::Void __swiftcall LatencyProfiler.finish()()
{
  uint64_t v3 = v0;
  v20[1] = *MEMORY[0x263EF8340];
  id v4 = (id)mach_absolute_time();
  mach_timebase_info info = 0;
  mach_timebase_info(&info);
  unint64_t v5 = *(void *)(v0 + 16);
  BOOL v6 = (unint64_t)v4 >= v5;
  unint64_t v7 = (unint64_t)v4 - v5;
  if (!v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!is_mul_ok(v7, info.numer)) {
    goto LABEL_14;
  }
  if (!info.denom)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  double v8 = (double)(v7 * info.numer / info.denom) / 1000000.0;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v4, sel_setNumberStyle_, 1);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
    goto LABEL_10;
  }
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, (uint64_t)v8);
  id v10 = objc_msgSend(v4, sel_stringFromNumber_, v9);

  if (!v10) {
    goto LABEL_13;
  }
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v1 = v11;

  if (one-time initialization token for search != -1) {
    goto LABEL_19;
  }
LABEL_10:
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logging.search);
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v18 = v2;
    uint64_t v17 = *(void *)(v3 + 24);
    unint64_t v16 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v16, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v1, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v13, v14, "LP - finished %s in %s ms", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
LABEL_13:
}

uint64_t LatencyProfiler.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LatencyProfiler.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t type metadata accessor for LatencyProfiler()
{
  return self;
}

uint64_t method lookup function for LatencyProfiler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LatencyProfiler);
}

uint64_t dispatch thunk of LatencyProfiler.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of LatencyProfiler.finish()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t Logging.answerSynthesis.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for answerSynthesis, MEMORY[0x263F90268], (uint64_t)static Logging.answerSynthesis);
}

uint64_t Logging.searchSignposter.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for searchSignposter, MEMORY[0x263F90228], (uint64_t)static Logging.searchSignposter);
}

uint64_t Logging.search.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for search, MEMORY[0x263F90268], (uint64_t)static Logging.search);
}

uint64_t Logging.searchComponentSignposter.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for searchComponentSignposter, MEMORY[0x263F90228], (uint64_t)static Logging.searchComponentSignposter);
}

uint64_t Logging.stextension.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for stextension, MEMORY[0x263F90268], (uint64_t)static Logging.stextension);
}

uint64_t Logging.utilities.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for utilities, MEMORY[0x263F90268], (uint64_t)static Logging.utilities);
}

uint64_t Logging.llmQU.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for llmQU, MEMORY[0x263F90268], (uint64_t)static Logging.llmQU);
}

uint64_t Logging.memoryCreationQU.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for memoryCreationQU, MEMORY[0x263F90268], (uint64_t)static Logging.memoryCreationQU);
}

uint64_t Logging.hallucination.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for hallucination, MEMORY[0x263F90268], (uint64_t)static Logging.hallucination);
}

uint64_t one-time initialization function for interface(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.interface);
}

uint64_t Logging.interface.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(one-time initialization token for interface, MEMORY[0x263F90268], (uint64_t)static Logging.interface);
}

uint64_t static Logging.interface.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(one-time initialization token for interface, MEMORY[0x263F90268], (uint64_t)static Logging.interface, a1);
}

uint64_t one-time initialization function for search(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_26(a1, static Logging.search);
}

uint64_t static Logging.search.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for search, MEMORY[0x263F90268], (uint64_t)static Logging.search, a1);
}

uint64_t one-time initialization function for searchComponents(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.searchComponents);
}

uint64_t Logging.searchComponents.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for searchComponents, MEMORY[0x263F90268], (uint64_t)static Logging.searchComponents);
}

uint64_t static Logging.searchComponents.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for searchComponents, MEMORY[0x263F90268], (uint64_t)static Logging.searchComponents, a1);
}

uint64_t one-time initialization function for utilities(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.utilities);
}

uint64_t static Logging.utilities.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for utilities, MEMORY[0x263F90268], (uint64_t)static Logging.utilities, a1);
}

uint64_t one-time initialization function for stextension(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.stextension);
}

uint64_t static Logging.stextension.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for stextension, MEMORY[0x263F90268], (uint64_t)static Logging.stextension, a1);
}

uint64_t one-time initialization function for memoryCreationQU(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_35(a1, static Logging.memoryCreationQU);
}

uint64_t static Logging.memoryCreationQU.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for memoryCreationQU, MEMORY[0x263F90268], (uint64_t)static Logging.memoryCreationQU, a1);
}

uint64_t one-time initialization function for llmQU(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.llmQU);
}

uint64_t static Logging.llmQU.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for llmQU, MEMORY[0x263F90268], (uint64_t)static Logging.llmQU, a1);
}

uint64_t one-time initialization function for visual(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_26(a1, static Logging.visual);
}

uint64_t Logging.visual.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(&one-time initialization token for visual, MEMORY[0x263F90268], (uint64_t)static Logging.visual);
}

uint64_t static Logging.visual.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for visual, MEMORY[0x263F90268], (uint64_t)static Logging.visual, a1);
}

uint64_t one-time initialization function for hallucination(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_35(a1, static Logging.hallucination);
}

uint64_t static Logging.hallucination.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for hallucination, MEMORY[0x263F90268], (uint64_t)static Logging.hallucination, a1);
}

uint64_t one-time initialization function for answerSynthesis(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.answerSynthesis);
}

uint64_t static Logging.answerSynthesis.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for answerSynthesis, MEMORY[0x263F90268], (uint64_t)static Logging.answerSynthesis, a1);
}

uint64_t one-time initialization function for uiPlugin(uint64_t a1)
{
  return one-time initialization function for interface(a1, static Logging.uiPlugin);
}

uint64_t one-time initialization function for interface(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t Logging.uiPlugin.unsafeMutableAddressor()
{
  return Logging.answerSynthesis.unsafeMutableAddressor(one-time initialization token for uiPlugin, MEMORY[0x263F90268], (uint64_t)static Logging.uiPlugin);
}

uint64_t Logging.answerSynthesis.unsafeMutableAddressor(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);
  return __swift_project_value_buffer(v5, a3);
}

uint64_t static Logging.uiPlugin.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(one-time initialization token for uiPlugin, MEMORY[0x263F90268], (uint64_t)static Logging.uiPlugin, a1);
}

uint64_t one-time initialization function for searchSignposter(uint64_t a1)
{
  return one-time initialization function for searchSignposter(a1, static Logging.searchSignposter, &one-time initialization token for search, (uint64_t)static Logging.search);
}

uint64_t static Logging.searchSignposter.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for searchSignposter, MEMORY[0x263F90228], (uint64_t)static Logging.searchSignposter, a1);
}

uint64_t one-time initialization function for searchComponentSignposter(uint64_t a1)
{
  return one-time initialization function for searchSignposter(a1, static Logging.searchComponentSignposter, &one-time initialization token for searchComponents, (uint64_t)static Logging.searchComponents);
}

uint64_t one-time initialization function for searchSignposter(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OSSignposter();
  __swift_allocate_value_buffer(v11, a2);
  __swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return OSSignposter.init(logger:)();
}

uint64_t static Logging.searchComponentSignposter.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logging.interface.getter(&one-time initialization token for searchComponentSignposter, MEMORY[0x263F90228], (uint64_t)static Logging.searchComponentSignposter, a1);
}

uint64_t static Logging.interface.getter@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

ValueMetadata *type metadata accessor for Logging()
{
  return &type metadata for Logging;
}

uint64_t OUTLINED_FUNCTION_0_26(uint64_t a1, uint64_t *a2)
{
  return one-time initialization function for interface(a1, a2);
}

uint64_t OUTLINED_FUNCTION_1_35(uint64_t a1, uint64_t *a2)
{
  return one-time initialization function for interface(a1, a2);
}

char *MobileGestalt.deviceClass.unsafeMutableAddressor()
{
  if (one-time initialization token for deviceClass != -1) {
    swift_once();
  }
  return &static MobileGestalt.deviceClass;
}

uint64_t MobileGestalt.DeviceClass.rawValue.getter(char a1)
{
  uint64_t result = 0x454E4F4850;
  switch(a1)
  {
    case 1:
      uint64_t result = 4473168;
      break;
    case 2:
      uint64_t result = 0x4E414D4553524F48;
      break;
    case 3:
      uint64_t result = 1398097242;
      break;
    case 4:
      uint64_t result = 0x4F454D4143;
      break;
    case 5:
      uint64_t result = 0x4843544157;
      break;
    case 6:
      uint64_t result = 5390659;
      break;
    case 7:
      uint64_t result = 0x544952414752414DLL;
      break;
    case 8:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static MobileGestalt.deviceType.getter()
{
  return static MobileGestalt.deviceType.getter(0x54746375646F7250, 0xEB00000000657079);
}

OmniSearch::MobileGestalt::DeviceClass_optional __swiftcall MobileGestalt.DeviceClass.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MobileGestalt.DeviceClass.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 9) {
    return (OmniSearch::MobileGestalt::DeviceClass_optional)9;
  }
  else {
    return (OmniSearch::MobileGestalt::DeviceClass_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MobileGestalt.DeviceClass()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MobileGestalt.DeviceClass()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MobileGestalt.DeviceClass()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MobileGestalt.DeviceClass()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::MobileGestalt::DeviceClass_optional protocol witness for RawRepresentable.init(rawValue:) in conformance MobileGestalt.DeviceClass@<W0>(Swift::String *a1@<X0>, OmniSearch::MobileGestalt::DeviceClass_optional *a2@<X8>)
{
  result.value = MobileGestalt.DeviceClass.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance MobileGestalt.DeviceClass@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MobileGestalt.DeviceClass.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void one-time initialization function for deviceClass()
{
  if (one-time initialization token for rawMGValueToDeviceClass != -1) {
    swift_once();
  }
  uint64_t v0 = static MobileGestalt.rawMGValueToDeviceClass;
  if (one-time initialization token for currentMGDeviceClass != -1) {
    swift_once();
  }
  if (v0[2]
    && (unint64_t v1 = specialized __RawDictionaryStorage.find<A>(_:)(static MobileGestalt.currentMGDeviceClass), (v2 & 1) != 0))
  {
    char v3 = *(unsigned char *)(v0[7] + v1);
  }
  else
  {
    char v3 = 8;
  }
  static MobileGestalt.deviceClass = v3;
}

uint64_t static MobileGestalt.deviceClass.getter()
{
  if (one-time initialization token for deviceClass != -1) {
    swift_once();
  }
  return static MobileGestalt.deviceClass;
}

void one-time initialization function for currentMGDeviceClass()
{
  uint64_t v0 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000011, 0x8000000258684FD0);
  int v1 = MGGetSInt32Answer();

  static MobileGestalt.currentMGDeviceClass = v1;
}

void *one-time initialization function for rawMGValueToDeviceClass()
{
  uint64_t result = (void *)Dictionary.init(dictionaryLiteral:)();
  static MobileGestalt.rawMGValueToDeviceClass = result;
  return result;
}

BOOL static MobileGestalt.DevicePlatform.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void MobileGestalt.DevicePlatform.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int MobileGestalt.DevicePlatform.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MobileGestalt.DevicePlatform(char *a1, char *a2)
{
  return static MobileGestalt.DevicePlatform.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MobileGestalt.DevicePlatform()
{
  return MobileGestalt.DevicePlatform.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MobileGestalt.DevicePlatform(uint64_t a1)
{
  MobileGestalt.DevicePlatform.hash(into:)(a1, *v1);
}

uint64_t static MobileGestalt.devicePlatform(deviceClass:)(char a1)
{
  if ((a1 & 0xF8) != 0) {
    return 5;
  }
  else {
    return (0x405030102020000uLL >> (8 * a1));
  }
}

uint64_t static MobileGestalt.devicePlatform.getter()
{
  if (one-time initialization token for deviceClass != -1) {
    swift_once();
  }
  if (static MobileGestalt.deviceClass >= 8uLL) {
    return 5;
  }
  else {
    return (0x405030102020000uLL >> (8 * static MobileGestalt.deviceClass));
  }
}

double static MobileGestalt._deviceInfo(for:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[1] = *MEMORY[0x263EF8340];
  BOOL v6 = (void *)MEMORY[0x25A2C7AB0]();
  uint64_t v7 = MGCopyAnswerWithError();

  if (v7)
  {
    *(void *)(a3 + 24) = swift_getObjectType();
    *(void *)a3 = v7;
  }
  else
  {
    if (one-time initialization token for utilities != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logging.utilities);
    swift_bridgeObjectRetain_n();
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v17[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2080;
      swift_beginAccess();
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_257DC6000, v10, v11, "MGCopyAnswerWithError error for key: %s -> %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v13, -1, -1);
      MEMORY[0x25A2C94B0](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t static MobileGestalt.buildVersion.getter()
{
  return static MobileGestalt.deviceType.getter(0x726556646C697542, 0xEC0000006E6F6973);
}

uint64_t static MobileGestalt.osVersion.getter()
{
  return static MobileGestalt.deviceType.getter(0x56746375646F7250, 0xEE006E6F69737265);
}

uint64_t static MobileGestalt.deviceType.getter(uint64_t a1, unint64_t a2)
{
  static MobileGestalt._deviceInfo(for:)(a1, a2, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v3;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)v4);
  }
  return 0;
}

unint64_t lazy protocol witness table accessor for type MobileGestalt.DeviceClass and conformance MobileGestalt.DeviceClass()
{
  unint64_t result = lazy protocol witness table cache variable for type MobileGestalt.DeviceClass and conformance MobileGestalt.DeviceClass;
  if (!lazy protocol witness table cache variable for type MobileGestalt.DeviceClass and conformance MobileGestalt.DeviceClass)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MobileGestalt.DeviceClass and conformance MobileGestalt.DeviceClass);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MobileGestalt.DevicePlatform and conformance MobileGestalt.DevicePlatform()
{
  unint64_t result = lazy protocol witness table cache variable for type MobileGestalt.DevicePlatform and conformance MobileGestalt.DevicePlatform;
  if (!lazy protocol witness table cache variable for type MobileGestalt.DevicePlatform and conformance MobileGestalt.DevicePlatform)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MobileGestalt.DevicePlatform and conformance MobileGestalt.DevicePlatform);
  }
  return result;
}

void type metadata accessor for MobileGestalt()
{
}

unsigned char *storeEnumTagSinglePayload for MobileGestalt.DeviceClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854F3E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

void type metadata accessor for MobileGestalt.DeviceClass()
{
}

unsigned char *storeEnumTagSinglePayload for MobileGestalt.DevicePlatform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25854F4E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for MobileGestalt.DevicePlatform()
{
}

uint64_t baseDirectoryURLCreatingIfNeeded()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x270FA5388](v8 - 8);
  OUTLINED_FUNCTION_12_7();
  uint64_t v9 = type metadata accessor for URL();
  OUTLINED_FUNCTION_1();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v36 - v16;
  id v39 = self;
  id v18 = objc_msgSend(v39, sel_defaultManager);
  id v19 = objc_msgSend(v18, sel_URLsForDirectory_inDomains_, 5, 1);

  uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Collection.first.getter(v20, v1);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v1, 1, v9) == 1)
  {
    outlined destroy of URL?(v1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v17, v1, v9);
    unint64_t v42 = 0xD000000000000010;
    unint64_t v43 = 0x8000000258685040;
    uint64_t v21 = *MEMORY[0x263F06E30];
    uint64_t v38 = v9;
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    v37(v7, v21, v2);
    lazy protocol witness table accessor for type String and conformance String();
    char v40 = v17;
    URL.appending<A>(path:directoryHint:)();
    uint64_t v22 = *(void (**)(uint64_t))(v4 + 8);
    uint64_t v23 = OUTLINED_FUNCTION_2_30();
    v22(v23);
    swift_bridgeObjectRelease();
    unint64_t v42 = 5065804;
    unint64_t v43 = 0xE300000000000000;
    v37(v7, v21, v2);
    URL.appending<A>(path:directoryHint:)();
    uint64_t v24 = OUTLINED_FUNCTION_2_30();
    v22(v24);
    swift_bridgeObjectRelease();
    id v25 = *(void (**)(char *))(v11 + 8);
    uint64_t v26 = v38;
    v25(v15);
    id v27 = objc_msgSend(v39, sel_defaultManager);
    URL._bridgeToObjectiveC()(v28);
    char v30 = v29;
    unint64_t v42 = 0;
    LODWORD(v22) = objc_msgSend(v27, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 1, 0, &v42);

    if (v22)
    {
      id v31 = (id)v42;
      return ((uint64_t (*)(char *, uint64_t))v25)(v40, v26);
    }
    id v33 = (id)v42;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    unint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD00000000000002CLL;
    unint64_t v43 = 0x8000000258685060;
    swift_getErrorValue();
    v34._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    v35._uint64_t countAndFlagsBits = 46;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::String __swiftcall baseDirectoryStringCreatingIfNeeded()()
{
  uint64_t v1 = type metadata accessor for URL();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_12_7();
  baseDirectoryURLCreatingIfNeeded()(v0);
  uint64_t v5 = URL.absoluteString.getter();
  uint64_t v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  uint64_t v8 = v5;
  uint64_t v9 = v7;
  result._object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t one-time initialization function for baseDirectory()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  baseDirectoryURLCreatingIfNeeded()((uint64_t)v3);
  uint64_t v4 = URL.absoluteString.getter();
  uint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  static Paths.baseDirectory = v4;
  unk_26A099550 = v6;
  return result;
}

uint64_t *Paths.baseDirectory.unsafeMutableAddressor()
{
  if (one-time initialization token for baseDirectory != -1) {
    swift_once();
  }
  return &static Paths.baseDirectory;
}

uint64_t static Paths.baseDirectory.getter()
{
  if (one-time initialization token for baseDirectory != -1) {
    swift_once();
  }
  uint64_t v0 = static Paths.baseDirectory;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for baseDirectoryURL()
{
  uint64_t v0 = type metadata accessor for URL();
  __swift_allocate_value_buffer(v0, static Paths.baseDirectoryURL);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)static Paths.baseDirectoryURL);
  return baseDirectoryURLCreatingIfNeeded()(v1);
}

uint64_t Paths.baseDirectoryURL.unsafeMutableAddressor()
{
  if (one-time initialization token for baseDirectoryURL != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for URL();
  return __swift_project_value_buffer(v0, (uint64_t)static Paths.baseDirectoryURL);
}

uint64_t static Paths.baseDirectoryURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for baseDirectoryURL != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Paths.baseDirectoryURL);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

ValueMetadata *type metadata accessor for Paths()
{
  return &type metadata for Paths;
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  return v0;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitOutput.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitOutput != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  uint64_t v0 = &static NSUserDefaults._answerSynthesisTokenLimitOutput;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisPromptTemplateOverride.getter()
{
  if (one-time initialization token for _answerSynthesisPromptTemplateOverride != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.pqaVerificationPromptTemplateOverride.getter()
{
  if (one-time initialization token for _pqaVerificationPromptTemplateOverride != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.answerSynthesisModelType.getter()
{
  if (one-time initialization token for _answerSynthesisModelType != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitDevice.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitDevice != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  uint64_t v0 = &static NSUserDefaults._answerSynthesisTokenLimitDevice;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitServer.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitServer != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  uint64_t v0 = &static NSUserDefaults._answerSynthesisTokenLimitServer;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisSearchResultsPerRequest.getter()
{
  if (one-time initialization token for _answerSynthesisSearchResultsPerRequest != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  uint64_t v0 = &static NSUserDefaults._answerSynthesisSearchResultsPerRequest;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisLimit.getter()
{
  if (one-time initialization token for _answerSynthesisLimit != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  uint64_t v0 = &static NSUserDefaults._answerSynthesisLimit;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.allowNoAnswerFallbackToPCS.getter()
{
  if (one-time initialization token for _allowNoAnswerFallbackToPCS != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._allowNoAnswerFallbackToPCS);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  char v0 = &static NSUserDefaults._answerSynthesisTokenLimitNonUserPrompt;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

float static NSUserDefaults.answerSynthesisTokenCharMultiplier.getter()
{
  if (one-time initialization token for _answerSynthesisTokenCharMultiplier != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  uint64_t v0 = qword_26A065998;
  uint64_t v1 = unk_26A0659A0;
  uint64_t v2 = (void *)qword_26A0659A8;
  swift_bridgeObjectRetain();
  id v3 = v2;
  specialized UserDefault.wrappedValue.getter(v0, v1, v3);
  float v5 = v4;

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static NSUserDefaults.emailContentPreprocessing.getter()
{
  if (one-time initialization token for _emailContentPreprocessing != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._emailContentPreprocessing);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.smartChunkingPreprocessing.getter()
{
  if (one-time initialization token for _smartChunkingPreprocessing != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._smartChunkingPreprocessing);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.smartChunksPerDocument.getter()
{
  if (one-time initialization token for _smartChunksPerDocument != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  char v0 = &static NSUserDefaults._smartChunksPerDocument;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.smartChunkingOverlap.getter()
{
  if (one-time initialization token for _smartChunkingOverlap != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  char v0 = &static NSUserDefaults._smartChunkingOverlap;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.forceContentHydration.getter()
{
  if (one-time initialization token for _forceContentHydration != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._forceContentHydration);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.fallbackLocale.getter()
{
  if (one-time initialization token for _fallbackLocale != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.disambiguationLimit.getter()
{
  if (one-time initialization token for _disambiguationLimit != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  uint64_t v0 = &static NSUserDefaults._disambiguationLimit;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.llmPromptLineBreak.getter()
{
  if (one-time initialization token for _llmPromptLineBreak != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.sendInstantAnswerDocToAS.getter()
{
  if (one-time initialization token for _sendInstantAnswerDocToAS != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._sendInstantAnswerDocToAS);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.msgCntBeforeTarget.getter()
{
  if (one-time initialization token for _msgCntBeforeTarget != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  char v0 = &static NSUserDefaults._msgCntBeforeTarget;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.msgCntAfterTarget.getter()
{
  if (one-time initialization token for _msgCntAfterTarget != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_9_29();
  char v0 = &static NSUserDefaults._msgCntAfterTarget;
  uint64_t v1 = OUTLINED_FUNCTION_7_39();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static NSUserDefaults.llmQUModelType.getter()
{
  if (one-time initialization token for _llmQUModelType != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.llmQUPromptTemplateOverride.getter()
{
  if (one-time initialization token for _llmQUPromptTemplateOverride != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_15_33(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_24_31(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static NSUserDefaults.spotlightQueryBundleIDs.getter()
{
  if (one-time initialization token for _spotlightQueryBundleIDs != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  uint64_t v0 = static NSUserDefaults._spotlightQueryBundleIDs;
  uint64_t v1 = *(void *)algn_26A065C98;
  uint64_t v3 = qword_26A065CA0;
  uint64_t v2 = (void *)unk_26A065CA8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  uint64_t v5 = specialized UserDefault.wrappedValue.getter(v0, v1, v3, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t *static NSUserDefaults.currentTime.getter()
{
  if (one-time initialization token for _currentTime != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_21_27(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_29_25(v8, v9, v10, v11);
  return &static NSUserDefaults._currentTime;
}

uint64_t specialized UserDefault.wrappedValue.getter()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)MEMORY[0x25A2C7AB0](v0[2], v0[3]);
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  if (swift_dynamicCast() && *((void *)&v6 + 1)) {
    return v6;
  }
  uint64_t v4 = *v0;
  swift_bridgeObjectRetain();
  return v4;
}

{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  long long v6;
  _OWORD v7[2];

  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)MEMORY[0x25A2C7AB0](v0[2], v0[3]);
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  if (swift_dynamicCast() && *((void *)&v6 + 1) != 1) {
    return v6;
  }
  uint64_t v4 = *v0;
  swift_bridgeObjectRetain();
  return v4;
}

{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  _OWORD v5[2];
  _OWORD v6[2];

  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)MEMORY[0x25A2C7AB0](v0[2], v0[3]);
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  if (swift_dynamicCast()) {
    uint64_t v0 = v5;
  }
  else {
    *(void *)&v5[0] = 0;
  }
  return *v0;
}

uint64_t specialized UserDefault.wrappedValue.getter(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v6 = (void *)MEMORY[0x25A2C7AB0](a2, a3);
  id v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  if (swift_dynamicCast() && v9 != 2) {
    a1 = v9 & 1;
  }
  return a1 & 1;
}

uint64_t specialized UserDefault.wrappedValue.getter(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x25A2C7AB0]();
  id v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  return swift_dynamicCast();
}

uint64_t specialized UserDefault.wrappedValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v6 = (void *)MEMORY[0x25A2C7AB0](a2, a3);
  id v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  if (swift_dynamicCast()) {
    return v9;
  }
  else {
    return a1;
  }
}

{
  void *v6;
  id v7;
  long long v9;
  _OWORD v10[2];

  long long v6 = (void *)MEMORY[0x25A2C7AB0](a2, a3);
  id v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  if (swift_dynamicCast() && (void)v9) {
    return v9;
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t static NSUserDefaults.answerSynthesisLimit.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisLimit);
}

void specialized UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)v2[4];
  swift_bridgeObjectRetain();
  uint64_t v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v5 = (void *)MEMORY[0x25A2C7AB0](v2[2], v2[3]);
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  id v3 = (void *)v2[4];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  uint64_t v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v5 = (void *)MEMORY[0x25A2C7AB0](v2[2], v2[3]);
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void specialized UserDefault.wrappedValue.setter()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v3 = (void *)MEMORY[0x25A2C7AB0](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v3 = (void *)MEMORY[0x25A2C7AB0](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v3 = (void *)MEMORY[0x25A2C7AB0](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  uint64_t v1 = (void *)v0[3];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  uint64_t v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v3 = (void *)MEMORY[0x25A2C7AB0](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void specialized UserDefault.wrappedValue.setter(uint64_t a1, char a2)
{
  id v3 = (void *)v2[4];
  LOBYTE(v7) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  uint64_t v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v5 = (void *)MEMORY[0x25A2C7AB0](v2[2], v2[3]);
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5, a1, v7);
  swift_unknownObjectRelease();
}

uint64_t (*static NSUserDefaults.answerSynthesisLimit.modify())()
{
  if (one-time initialization token for _answerSynthesisLimit != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.answerSynthesisLimit.modify;
}

uint64_t static NSUserDefaults.answerSynthesisLimit.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

{
  uint64_t vars8;

  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

double one-time initialization function for _answerSynthesisLimit()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 5;
  static NSUserDefaults._answerSynthesisLimit = xmmword_258677B70;
  qword_26B2E14A0 = 0x8000000258685310;
  unk_26B2E14A8 = v0;
  return result;
}

id static NSUserDefaults.$answerSynthesisLimit.getter()
{
  if (one-time initialization token for _answerSynthesisLimit != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisSearchResultsPerRequest.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisSearchResultsPerRequest);
}

uint64_t static NSUserDefaults.answerSynthesisLimit.setter(uint64_t a1, void *a2)
{
  if (*a2 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t (*static NSUserDefaults.answerSynthesisSearchResultsPerRequest.modify())()
{
  if (one-time initialization token for _answerSynthesisSearchResultsPerRequest != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.answerSynthesisSearchResultsPerRequest.modify;
}

uint64_t static NSUserDefaults.answerSynthesisSearchResultsPerRequest.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisSearchResultsPerRequest()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 5;
  static NSUserDefaults._answerSynthesisSearchResultsPerRequest = xmmword_258677B80;
  qword_26A065940 = 0x8000000258685330;
  unk_26A065948 = v0;
  return result;
}

id static NSUserDefaults.$answerSynthesisSearchResultsPerRequest.getter()
{
  if (one-time initialization token for _answerSynthesisSearchResultsPerRequest != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisModelType.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _answerSynthesisModelType, (uint64_t)&static NSUserDefaults._answerSynthesisModelType, specialized UserDefault.wrappedValue.setter);
}

void (*static NSUserDefaults.answerSynthesisModelType.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _answerSynthesisModelType != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_18_31();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.answerSynthesisModelType.modify;
}

void static NSUserDefaults.answerSynthesisModelType.modify()
{
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_27_25();
  if (v3)
  {
    swift_bridgeObjectRetain();
    specialized UserDefault.wrappedValue.setter(v1, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    specialized UserDefault.wrappedValue.setter(v1, v2);
  }
  swift_endAccess();
  free(v0);
}

uint64_t one-time initialization function for _answerSynthesisModelType()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._answerSynthesisModelType = 0x726576726573;
  *(void *)algn_26B2E2608 = 0xE600000000000000;
  qword_26B2E2610 = 0xD000000000000018;
  unk_26B2E2618 = 0x80000002586853A0;
  qword_26B2E2620 = result;
  return result;
}

id static NSUserDefaults.$answerSynthesisModelType.getter()
{
  if (one-time initialization token for _answerSynthesisModelType != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_10_34();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitDevice.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitDevice);
}

uint64_t (*static NSUserDefaults.answerSynthesisTokenLimitDevice.modify())()
{
  if (one-time initialization token for _answerSynthesisTokenLimitDevice != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.answerSynthesisTokenLimitDevice.modify;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitDevice.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitDevice()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 2048;
  static NSUserDefaults._answerSynthesisTokenLimitDevice = xmmword_258677B90;
  qword_26A065960 = 0x8000000258685380;
  unk_26A065968 = v0;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitDevice.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitDevice != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitServer.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitServer);
}

uint64_t (*static NSUserDefaults.answerSynthesisTokenLimitServer.modify())()
{
  if (one-time initialization token for _answerSynthesisTokenLimitServer != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.answerSynthesisTokenLimitServer.modify;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitServer.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitServer()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 4096;
  static NSUserDefaults._answerSynthesisTokenLimitServer = xmmword_258677BA0;
  qword_26B2E2640 = 0x8000000258685360;
  unk_26B2E2648 = v0;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitServer.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitServer != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt);
}

uint64_t (*static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.modify())()
{
  if (one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.modify;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitNonUserPrompt()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 300;
  static NSUserDefaults._answerSynthesisTokenLimitNonUserPrompt = xmmword_258677BB0;
  qword_26A065980 = 0x80000002586852C0;
  unk_26A065988 = v0;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitNonUserPrompt.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisTokenCharMultiplier.setter()
{
  if (one-time initialization token for _answerSynthesisTokenCharMultiplier != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t (*static NSUserDefaults.answerSynthesisTokenCharMultiplier.modify(uint64_t a1))()
{
  if (one-time initialization token for _answerSynthesisTokenCharMultiplier != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  specialized UserDefault.wrappedValue.getter(qword_26A065998, unk_26A0659A0, (void *)qword_26A0659A8);
  *(_DWORD *)(a1 + 24) = v2;
  return static NSUserDefaults.answerSynthesisTokenCharMultiplier.modify;
}

uint64_t static NSUserDefaults.answerSynthesisTokenCharMultiplier.modify()
{
  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t one-time initialization function for _answerSynthesisTokenCharMultiplier()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._answerSynthesisTokenCharMultiplier = 1075838976;
  qword_26A065998 = 0xD000000000000022;
  unk_26A0659A0 = 0x8000000258685290;
  qword_26A0659A8 = result;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenCharMultiplier.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for _answerSynthesisTokenCharMultiplier != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  uint64_t v3 = qword_26A065998;
  uint64_t v2 = unk_26A0659A0;
  id v6 = (id)qword_26A0659A8;
  uint64_t v4 = qword_26A0659A8;
  *(_DWORD *)a1 = static NSUserDefaults._answerSynthesisTokenCharMultiplier;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitOutput.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitOutput);
}

uint64_t (*static NSUserDefaults.answerSynthesisTokenLimitOutput.modify())()
{
  if (one-time initialization token for _answerSynthesisTokenLimitOutput != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.answerSynthesisTokenLimitOutput.modify;
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitOutput.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitOutput()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 256;
  static NSUserDefaults._answerSynthesisTokenLimitOutput = xmmword_258677BC0;
  qword_26A0659C0 = 0x8000000258685420;
  unk_26A0659C8 = v0;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitOutput.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitOutput != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.answerSynthesisPromptTemplateOverride.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _answerSynthesisPromptTemplateOverride, (uint64_t)&static NSUserDefaults._answerSynthesisPromptTemplateOverride, specialized UserDefault.wrappedValue.setter);
}

void (*static NSUserDefaults.answerSynthesisPromptTemplateOverride.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _answerSynthesisPromptTemplateOverride != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_23_21();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.answerSynthesisPromptTemplateOverride.modify;
}

void static NSUserDefaults.answerSynthesisPromptTemplateOverride.modify()
{
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_27_25();
  if (v3)
  {
    swift_bridgeObjectRetain();
    specialized UserDefault.wrappedValue.setter(v1, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    specialized UserDefault.wrappedValue.setter(v1, v2);
  }
  swift_endAccess();
  free(v0);
}

uint64_t one-time initialization function for _answerSynthesisPromptTemplateOverride()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._answerSynthesisPromptTemplateOverride = 0;
  *(void *)algn_26A0659D8 = 0;
  qword_26A0659E0 = 0xD000000000000025;
  unk_26A0659E8 = 0x80000002586853F0;
  qword_26A0659F0 = result;
  return result;
}

uint64_t outlined retain of UserDefault<String?>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t outlined release of UserDefault<String?>(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

id static NSUserDefaults.$answerSynthesisPromptTemplateOverride.getter()
{
  if (one-time initialization token for _answerSynthesisPromptTemplateOverride != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_14_28();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static NSUserDefaults.disambiguationLimit.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _disambiguationLimit);
}

uint64_t (*static NSUserDefaults.disambiguationLimit.modify())()
{
  if (one-time initialization token for _disambiguationLimit != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.disambiguationLimit.modify;
}

uint64_t static NSUserDefaults.disambiguationLimit.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _disambiguationLimit()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 5;
  static NSUserDefaults._disambiguationLimit = xmmword_258677BD0;
  qword_26A065A08 = 0x80000002586851D0;
  unk_26A065A10 = v0;
  return result;
}

id static NSUserDefaults.$disambiguationLimit.getter()
{
  if (one-time initialization token for _disambiguationLimit != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.pqaVerificationPromptTemplateOverride.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _pqaVerificationPromptTemplateOverride, (uint64_t)&static NSUserDefaults._pqaVerificationPromptTemplateOverride, specialized UserDefault.wrappedValue.setter);
}

void (*static NSUserDefaults.pqaVerificationPromptTemplateOverride.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _pqaVerificationPromptTemplateOverride != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_23_21();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.pqaVerificationPromptTemplateOverride.modify;
}

void static NSUserDefaults.pqaVerificationPromptTemplateOverride.modify()
{
}

uint64_t one-time initialization function for _pqaVerificationPromptTemplateOverride()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._pqaVerificationPromptTemplateOverride = 0;
  unk_26A065A20 = 0;
  qword_26A065A28 = 0xD000000000000025;
  unk_26A065A30 = 0x80000002586853C0;
  qword_26A065A38 = result;
  return result;
}

id static NSUserDefaults.$pqaVerificationPromptTemplateOverride.getter()
{
  if (one-time initialization token for _pqaVerificationPromptTemplateOverride != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_14_28();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *static NSUserDefaults.globalSearchLocationLatitude.getter()
{
  if (one-time initialization token for _globalSearchLocationLatitude != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_21_27(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_29_25(v8, v9, v10, v11);
  return &static NSUserDefaults._globalSearchLocationLatitude;
}

uint64_t static NSUserDefaults.globalSearchLocationLatitude.setter(uint64_t a1, char a2)
{
  return static NSUserDefaults.globalSearchLocationLatitude.setter(a1, a2, &one-time initialization token for _globalSearchLocationLatitude);
}

void (*static NSUserDefaults.globalSearchLocationLatitude.modify())(uint64_t a1)
{
  uint64_t v0 = malloc(0x49uLL);
  OUTLINED_FUNCTION_19_29((uint64_t)v0);
  if (one-time initialization token for _globalSearchLocationLatitude != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  uint64_t v1 = OUTLINED_FUNCTION_22_27();
  OUTLINED_FUNCTION_28_23(v1, v2);
  return static NSUserDefaults.globalSearchLocationLatitude.modify;
}

void static NSUserDefaults.globalSearchLocationLatitude.modify(uint64_t a1)
{
}

{
  void *v1;
  uint64_t vars8;

  uint64_t v1 = *(void **)a1;
  specialized UserDefault.wrappedValue.setter(*(void *)(*(void *)a1 + 64), *(unsigned char *)(*(void *)a1 + 72));
  swift_endAccess();
  free(v1);
}

uint64_t one-time initialization function for _globalSearchLocationLatitude()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._globalSearchLocationLatitude = 0;
  byte_26A065A48 = 1;
  qword_26A065A50 = 0xD00000000000001CLL;
  unk_26A065A58 = 0x80000002586850F0;
  qword_26A065A60 = result;
  return result;
}

id static NSUserDefaults.$globalSearchLocationLatitude.getter()
{
  if (one-time initialization token for _globalSearchLocationLatitude != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_13_37();
  return v1;
}

uint64_t *static NSUserDefaults.globalSearchLocationLongitude.getter()
{
  if (one-time initialization token for _globalSearchLocationLongitude != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_21_27(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_29_25(v8, v9, v10, v11);
  return &static NSUserDefaults._globalSearchLocationLongitude;
}

uint64_t static NSUserDefaults.globalSearchLocationLongitude.setter(uint64_t a1, char a2)
{
  return static NSUserDefaults.globalSearchLocationLatitude.setter(a1, a2, &one-time initialization token for _globalSearchLocationLongitude);
}

void (*static NSUserDefaults.globalSearchLocationLongitude.modify())(uint64_t a1)
{
  uint64_t v0 = malloc(0x49uLL);
  OUTLINED_FUNCTION_19_29((uint64_t)v0);
  if (one-time initialization token for _globalSearchLocationLongitude != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  uint64_t v1 = OUTLINED_FUNCTION_22_27();
  OUTLINED_FUNCTION_28_23(v1, v2);
  return static NSUserDefaults.globalSearchLocationLongitude.modify;
}

void static NSUserDefaults.globalSearchLocationLongitude.modify(uint64_t a1)
{
}

uint64_t one-time initialization function for _globalSearchLocationLongitude()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._globalSearchLocationLongitude = 0;
  byte_26A065A70 = 1;
  qword_26A065A78 = 0xD00000000000001DLL;
  unk_26A065A80 = 0x80000002586850D0;
  qword_26A065A88 = result;
  return result;
}

id static NSUserDefaults.$globalSearchLocationLongitude.getter()
{
  if (one-time initialization token for _globalSearchLocationLongitude != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_13_37();
  return v1;
}

uint64_t static NSUserDefaults.logForEval.getter()
{
  if (one-time initialization token for _logForEval != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._logForEval);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.logForEval.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _logForEval);
}

uint64_t (*static NSUserDefaults.logForEval.modify())()
{
  if (one-time initialization token for _logForEval != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.logForEval.modify;
}

uint64_t static NSUserDefaults.logForEval.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

{
  uint64_t vars8;

  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t one-time initialization function for _logForEval()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._logForEval = 0;
  qword_26A065A98 = 0x7645726F46676F6CLL;
  unk_26A065AA0 = 0xEA00000000006C61;
  qword_26A065AA8 = result;
  return result;
}

id static NSUserDefaults.$logForEval.getter()
{
  if (one-time initialization token for _logForEval != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.postProcessingFilter.getter()
{
  if (one-time initialization token for _postProcessingFilter != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._postProcessingFilter);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.postProcessingFilter.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _postProcessingFilter);
}

uint64_t (*static NSUserDefaults.postProcessingFilter.modify())()
{
  if (one-time initialization token for _postProcessingFilter != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.postProcessingFilter.modify;
}

uint64_t static NSUserDefaults.postProcessingFilter.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _postProcessingFilter()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._postProcessingFilter = 0;
  qword_26A065AB8 = 0xD000000000000014;
  unk_26A065AC0 = 0x80000002586850B0;
  qword_26A065AC8 = result;
  return result;
}

id static NSUserDefaults.$postProcessingFilter.getter()
{
  if (one-time initialization token for _postProcessingFilter != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.emailContentPreprocessing.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _emailContentPreprocessing);
}

uint64_t (*static NSUserDefaults.emailContentPreprocessing.modify())()
{
  if (one-time initialization token for _emailContentPreprocessing != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.emailContentPreprocessing.modify;
}

uint64_t static NSUserDefaults.emailContentPreprocessing.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _emailContentPreprocessing()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._emailContentPreprocessing = 1;
  qword_26A065AD8 = 0xD000000000000019;
  unk_26A065AE0 = 0x8000000258685270;
  qword_26A065AE8 = result;
  return result;
}

id static NSUserDefaults.$emailContentPreprocessing.getter()
{
  if (one-time initialization token for _emailContentPreprocessing != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.smartChunkingPreprocessing.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _smartChunkingPreprocessing);
}

uint64_t (*static NSUserDefaults.smartChunkingPreprocessing.modify())()
{
  if (one-time initialization token for _smartChunkingPreprocessing != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.smartChunkingPreprocessing.modify;
}

uint64_t static NSUserDefaults.smartChunkingPreprocessing.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _smartChunkingPreprocessing()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._smartChunkingPreprocessing = 0;
  qword_26A065AF8 = 0xD00000000000001ALL;
  unk_26A065B00 = 0x8000000258685250;
  qword_26A065B08 = result;
  return result;
}

id static NSUserDefaults.$smartChunkingPreprocessing.getter()
{
  if (one-time initialization token for _smartChunkingPreprocessing != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.smartChunksPerDocument.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _smartChunksPerDocument);
}

uint64_t (*static NSUserDefaults.smartChunksPerDocument.modify())()
{
  if (one-time initialization token for _smartChunksPerDocument != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.smartChunksPerDocument.modify;
}

uint64_t static NSUserDefaults.smartChunksPerDocument.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _smartChunksPerDocument()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 2;
  static NSUserDefaults._smartChunksPerDocument = xmmword_258677BE0;
  qword_26A065B20 = 0x8000000258685230;
  unk_26A065B28 = v0;
  return result;
}

id static NSUserDefaults.$smartChunksPerDocument.getter()
{
  if (one-time initialization token for _smartChunksPerDocument != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.smartChunkingOverlap.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _smartChunkingOverlap);
}

uint64_t (*static NSUserDefaults.smartChunkingOverlap.modify())()
{
  if (one-time initialization token for _smartChunkingOverlap != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.smartChunkingOverlap.modify;
}

uint64_t static NSUserDefaults.smartChunkingOverlap.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _smartChunkingOverlap()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  double result = 0.0;
  static NSUserDefaults._smartChunkingOverlap = xmmword_258677BF0;
  qword_26A065B40 = 0x8000000258685210;
  unk_26A065B48 = v0;
  return result;
}

id static NSUserDefaults.$smartChunkingOverlap.getter()
{
  if (one-time initialization token for _smartChunkingOverlap != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.sendInstantAnswerDocToAS.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _sendInstantAnswerDocToAS);
}

uint64_t (*static NSUserDefaults.sendInstantAnswerDocToAS.modify())()
{
  if (one-time initialization token for _sendInstantAnswerDocToAS != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.sendInstantAnswerDocToAS.modify;
}

uint64_t static NSUserDefaults.sendInstantAnswerDocToAS.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _sendInstantAnswerDocToAS()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._sendInstantAnswerDocToAS = 0;
  qword_26A065B58 = 0xD000000000000018;
  unk_26A065B60 = 0x8000000258685190;
  qword_26A065B68 = result;
  return result;
}

id static NSUserDefaults.$sendInstantAnswerDocToAS.getter()
{
  if (one-time initialization token for _sendInstantAnswerDocToAS != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.msgCntBeforeTarget.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _msgCntBeforeTarget);
}

uint64_t (*static NSUserDefaults.msgCntBeforeTarget.modify())()
{
  if (one-time initialization token for _msgCntBeforeTarget != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.msgCntBeforeTarget.modify;
}

uint64_t static NSUserDefaults.msgCntBeforeTarget.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _msgCntBeforeTarget()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 5;
  static NSUserDefaults._msgCntBeforeTarget = xmmword_258677C00;
  qword_26A065B80 = 0x8000000258685170;
  unk_26A065B88 = v0;
  return result;
}

id static NSUserDefaults.$msgCntBeforeTarget.getter()
{
  if (one-time initialization token for _msgCntBeforeTarget != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.msgCntAfterTarget.setter(uint64_t a1)
{
  return static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _msgCntAfterTarget);
}

uint64_t (*static NSUserDefaults.msgCntAfterTarget.modify())()
{
  if (one-time initialization token for _msgCntAfterTarget != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.msgCntAfterTarget.modify;
}

uint64_t static NSUserDefaults.msgCntAfterTarget.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _msgCntAfterTarget()
{
  type metadata accessor for NSUserDefaults();
  uint64_t v0 = static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(void *)&double result = 5;
  static NSUserDefaults._msgCntAfterTarget = xmmword_258677C10;
  qword_26A065BA0 = 0x8000000258685150;
  unk_26A065BA8 = v0;
  return result;
}

id static NSUserDefaults.$msgCntAfterTarget.getter()
{
  if (one-time initialization token for _msgCntAfterTarget != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_4_37();
  return v1;
}

uint64_t static NSUserDefaults.llmQUModelType.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _llmQUModelType, (uint64_t)&static NSUserDefaults._llmQUModelType, specialized UserDefault.wrappedValue.setter);
}

void (*static NSUserDefaults.llmQUModelType.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _llmQUModelType != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_18_31();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.llmQUModelType.modify;
}

void static NSUserDefaults.llmQUModelType.modify()
{
}

uint64_t one-time initialization function for _llmQUModelType()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._llmQUModelType = 7564647;
  *(void *)algn_26A065BB8 = 0xE300000000000000;
  strcpy((char *)&qword_26A065BC0, "llmQUModelType");
  unk_26A065BCF = -18;
  qword_26A065BD0 = result;
  return result;
}

id static NSUserDefaults.$llmQUModelType.getter()
{
  if (one-time initialization token for _llmQUModelType != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_10_34();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static NSUserDefaults.llmQUPromptTemplateOverride.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _llmQUPromptTemplateOverride, (uint64_t)&static NSUserDefaults._llmQUPromptTemplateOverride, specialized UserDefault.wrappedValue.setter);
}

void (*static NSUserDefaults.llmQUPromptTemplateOverride.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _llmQUPromptTemplateOverride != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_23_21();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.llmQUPromptTemplateOverride.modify;
}

void static NSUserDefaults.llmQUPromptTemplateOverride.modify()
{
}

uint64_t one-time initialization function for _llmQUPromptTemplateOverride()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._llmQUPromptTemplateOverride = 0;
  unk_26A065BE0 = 0;
  qword_26A065BE8 = 0xD00000000000001BLL;
  unk_26A065BF0 = 0x8000000258685130;
  qword_26A065BF8 = result;
  return result;
}

id static NSUserDefaults.$llmQUPromptTemplateOverride.getter()
{
  if (one-time initialization token for _llmQUPromptTemplateOverride != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_14_28();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static NSUserDefaults.llmPromptLineBreak.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _llmPromptLineBreak, (uint64_t)&static NSUserDefaults._llmPromptLineBreak, specialized UserDefault.wrappedValue.setter);
}

void (*static NSUserDefaults.llmPromptLineBreak.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _llmPromptLineBreak != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_18_31();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.llmPromptLineBreak.modify;
}

void static NSUserDefaults.llmPromptLineBreak.modify()
{
}

uint64_t one-time initialization function for _llmPromptLineBreak()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._llmPromptLineBreak = 4091452;
  *(void *)algn_26A065C08 = 0xE300000000000000;
  qword_26A065C10 = 0xD000000000000012;
  unk_26A065C18 = 0x80000002586851B0;
  qword_26A065C20 = result;
  return result;
}

id static NSUserDefaults.$llmPromptLineBreak.getter()
{
  if (one-time initialization token for _llmPromptLineBreak != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_10_34();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static NSUserDefaults.forceContentHydration.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _forceContentHydration);
}

uint64_t (*static NSUserDefaults.forceContentHydration.modify())()
{
  if (one-time initialization token for _forceContentHydration != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.forceContentHydration.modify;
}

uint64_t static NSUserDefaults.forceContentHydration.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _forceContentHydration()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._forceContentHydration = 0;
  qword_26A065C30 = 0xD000000000000015;
  unk_26A065C38 = 0x80000002586851F0;
  qword_26A065C40 = result;
  return result;
}

id static NSUserDefaults.$forceContentHydration.getter()
{
  if (one-time initialization token for _forceContentHydration != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.skipGlobalSearch.getter()
{
  if (one-time initialization token for _skipGlobalSearch != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._skipGlobalSearch);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.skipGlobalSearch.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _skipGlobalSearch);
}

uint64_t (*static NSUserDefaults.skipGlobalSearch.modify())()
{
  if (one-time initialization token for _skipGlobalSearch != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.skipGlobalSearch.modify;
}

uint64_t static NSUserDefaults.skipGlobalSearch.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _skipGlobalSearch()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._skipGlobalSearch = 0;
  qword_26A065C50 = 0xD000000000000010;
  unk_26A065C58 = 0x8000000258685090;
  qword_26A065C60 = result;
  return result;
}

id static NSUserDefaults.$skipGlobalSearch.getter()
{
  if (one-time initialization token for _skipGlobalSearch != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.currentTime.setter(uint64_t a1, char a2)
{
  return static NSUserDefaults.globalSearchLocationLatitude.setter(a1, a2, &one-time initialization token for _currentTime);
}

uint64_t static NSUserDefaults.globalSearchLocationLatitude.setter(uint64_t a1, char a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  specialized UserDefault.wrappedValue.setter(a1, a2 & 1);
  return swift_endAccess();
}

void (*static NSUserDefaults.currentTime.modify())(uint64_t a1)
{
  uint64_t v0 = malloc(0x49uLL);
  OUTLINED_FUNCTION_19_29((uint64_t)v0);
  if (one-time initialization token for _currentTime != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  uint64_t v1 = OUTLINED_FUNCTION_22_27();
  OUTLINED_FUNCTION_28_23(v1, v2);
  return static NSUserDefaults.currentTime.modify;
}

void static NSUserDefaults.currentTime.modify(uint64_t a1)
{
}

uint64_t one-time initialization function for _currentTime()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._currentTime = 0;
  byte_26A065C70 = 1;
  qword_26A065C78 = 0x54746E6572727563;
  unk_26A065C80 = 0xEB00000000656D69;
  qword_26A065C88 = result;
  return result;
}

id static NSUserDefaults.$currentTime.getter()
{
  if (one-time initialization token for _currentTime != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_13_37();
  return v1;
}

uint64_t static NSUserDefaults.spotlightQueryBundleIDs.setter()
{
  if (one-time initialization token for _spotlightQueryBundleIDs != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t (*static NSUserDefaults.spotlightQueryBundleIDs.modify())(uint64_t a1, char a2)
{
  if (one-time initialization token for _spotlightQueryBundleIDs != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_16_29();
  uint64_t v4 = specialized UserDefault.wrappedValue.getter(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17_28(v4);
  return static NSUserDefaults.spotlightQueryBundleIDs.modify;
}

uint64_t static NSUserDefaults.spotlightQueryBundleIDs.modify(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    specialized UserDefault.wrappedValue.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    specialized UserDefault.wrappedValue.setter();
  }
  return swift_endAccess();
}

uint64_t one-time initialization function for _spotlightQueryBundleIDs()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._spotlightQueryBundleIDs = MEMORY[0x263F8EE78];
  *(void *)algn_26A065C98 = 0xD000000000000017;
  qword_26A065CA0 = 0x8000000258685110;
  unk_26A065CA8 = result;
  return result;
}

id static NSUserDefaults.$spotlightQueryBundleIDs.getter@<X0>(void *a1@<X8>)
{
  if (one-time initialization token for _spotlightQueryBundleIDs != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  uint64_t v2 = *(void *)algn_26A065C98;
  uint64_t v4 = qword_26A065CA0;
  id v6 = (id)unk_26A065CA8;
  uint64_t v3 = unk_26A065CA8;
  *a1 = static NSUserDefaults._spotlightQueryBundleIDs;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t static NSUserDefaults.allowFeedbackUI.getter()
{
  if (one-time initialization token for _allowFeedbackUI != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_8_23();
  char v0 = OUTLINED_FUNCTION_6_38(&static NSUserDefaults._allowFeedbackUI);

  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static NSUserDefaults.allowFeedbackUI.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _allowFeedbackUI);
}

uint64_t (*static NSUserDefaults.allowFeedbackUI.modify())()
{
  if (one-time initialization token for _allowFeedbackUI != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.allowFeedbackUI.modify;
}

uint64_t static NSUserDefaults.allowFeedbackUI.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _allowFeedbackUI()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._allowFeedbackUI = 1;
  qword_26A065CB8 = 0x656546776F6C6C61;
  unk_26A065CC0 = 0xEF49556B63616264;
  qword_26A065CC8 = result;
  return result;
}

id static NSUserDefaults.$allowFeedbackUI.getter()
{
  if (one-time initialization token for _allowFeedbackUI != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t static NSUserDefaults.fallbackLocale.setter(uint64_t a1, uint64_t a2)
{
  return static NSUserDefaults.answerSynthesisModelType.setter(a1, a2, &one-time initialization token for _fallbackLocale, (uint64_t)&static NSUserDefaults._fallbackLocale, specialized UserDefault.wrappedValue.setter);
}

uint64_t static NSUserDefaults.answerSynthesisModelType.setter(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  if (*a3 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  a5(a1, a2);
  return swift_endAccess();
}

void (*static NSUserDefaults.fallbackLocale.modify())()
{
  id v1 = OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_19_29((uint64_t)v1);
  if (one-time initialization token for _fallbackLocale != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_18_31();
  *(void *)(v0 + 72) = v2;
  return static NSUserDefaults.fallbackLocale.modify;
}

void static NSUserDefaults.fallbackLocale.modify()
{
}

uint64_t one-time initialization function for _fallbackLocale()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._fallbackLocale = 0x53555F6E65;
  *(void *)algn_26A065CD8 = 0xE500000000000000;
  strcpy((char *)&qword_26A065CE0, "fallbackLocale");
  unk_26A065CEF = -18;
  qword_26A065CF0 = result;
  return result;
}

id static NSUserDefaults.$fallbackLocale.getter()
{
  if (one-time initialization token for _fallbackLocale != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_10_34();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static NSUserDefaults.allowNoAnswerFallbackToPCS.setter(uint64_t a1)
{
  return static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _allowNoAnswerFallbackToPCS);
}

uint64_t static NSUserDefaults.logForEval.setter(uint64_t a1, void *a2)
{
  if (*a2 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_32();
  specialized UserDefault.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t (*static NSUserDefaults.allowNoAnswerFallbackToPCS.modify())()
{
  if (one-time initialization token for _allowNoAnswerFallbackToPCS != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_7();
  uint64_t v0 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_11_34(v0);
  return static NSUserDefaults.allowNoAnswerFallbackToPCS.modify;
}

uint64_t static NSUserDefaults.allowNoAnswerFallbackToPCS.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

uint64_t one-time initialization function for _allowNoAnswerFallbackToPCS()
{
  type metadata accessor for NSUserDefaults();
  uint64_t result = static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._allowNoAnswerFallbackToPCS = 0;
  qword_26A065D00 = 0xD00000000000001ALL;
  unk_26A065D08 = 0x80000002586852F0;
  qword_26A065D10 = result;
  return result;
}

uint64_t outlined retain of UserDefault<Double?>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t outlined release of UserDefault<Double?>(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id static NSUserDefaults.$allowNoAnswerFallbackToPCS.getter()
{
  if (one-time initialization token for _allowNoAnswerFallbackToPCS != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_3_47();
  return v1;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_47()
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *(unsigned char *)uint64_t v0 = *(unsigned char *)v1;
  *(void *)(v0 + 8) = v4;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_5_32()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_38(void *a1)
{
  return specialized UserDefault.wrappedValue.getter(v1, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_7_39()
{
  return specialized UserDefault.wrappedValue.getter(v1, v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_8_23()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_29()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_10_34()
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  void *v0 = *v1;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_34(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  char v2 = *(unsigned char *)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  return specialized UserDefault.wrappedValue.getter(v2, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  *(void *)uint64_t v0 = *(void *)v1;
  *(unsigned char *)(v0 + 8) = v3;
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)uint64_t v0 = *(void *)v1;
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_15_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15)
{
  long long v17 = v15[1];
  a13 = *v15;
  a14 = v17;
  a15 = *((void *)v15 + 4);
  return outlined retain of UserDefault<String?>((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_17_28(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_18_31()
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  return specialized UserDefault.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_19_29(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15)
{
  long long v17 = v15[1];
  a13 = *v15;
  a14 = v17;
  a15 = *((void *)v15 + 4);
  return outlined retain of UserDefault<Double?>((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_22_27()
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  return specialized UserDefault.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_23_21()
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  return specialized UserDefault.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_24_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return outlined release of UserDefault<String?>((uint64_t)va);
}

void *OUTLINED_FUNCTION_25_25()
{
  return malloc(0x50uLL);
}

uint64_t OUTLINED_FUNCTION_28_23(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return outlined release of UserDefault<Double?>((uint64_t)va);
}

double SearchContext.latitude.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

double SearchContext.longitude.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.latitude.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchContext.latitude.modify())()
{
  double v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$latitude.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.longitude.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchContext.longitude.modify())()
{
  double v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$longitude.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.onScreenEntities.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchContext.onScreenEntities : SearchContext()
{
  return SearchContext.onScreenEntities.setter();
}

uint64_t SearchContext.onScreenEntities.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*SearchContext.onScreenEntities.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$onScreenEntities.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.asrSpeechPackageData.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for SearchContext.asrSpeechPackageData : SearchContext(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of IntentFile?(a1, (uint64_t)v4);
  return SearchContext.asrSpeechPackageData.setter((uint64_t)v4);
}

uint64_t SearchContext.asrSpeechPackageData.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_16();
  outlined init with copy of IntentFile?(a1, v1);
  EntityProperty.wrappedValue.setter();
  return outlined destroy of IntentFile?(a1);
}

uint64_t (*SearchContext.asrSpeechPackageData.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$asrSpeechPackageData.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.assistantId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchContext.assistantId : SearchContext()
{
  return SearchContext.assistantId.setter();
}

uint64_t SearchContext.assistantId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchContext.assistantId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$assistantId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.responseMode.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.responseMode.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchContext.responseMode.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$responseMode.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.deviceRestrictionsRawValue.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.deviceRestrictionsRawValue.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*SearchContext.deviceRestrictionsRawValue.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$deviceRestrictionsRawValue.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isEyesFree.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isEyesFree.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isEyesFree.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isEyesFree.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isPersonal.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isPersonal.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isPersonal.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isPersonal.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isMultiUser.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isMultiUser.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isMultiUser.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isMultiUser.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isVoiceTriggerEnabled.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isVoiceTriggerEnabled.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isVoiceTriggerEnabled.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isVoiceTriggerEnabled.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isTextToSpeechEnabled.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isTextToSpeechEnabled.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isTextToSpeechEnabled.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isTextToSpeechEnabled.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isTriggerlessFollowup.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isTriggerlessFollowup.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isTriggerlessFollowup.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isTriggerlessFollowup.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.inputOriginName.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.inputOriginName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchContext.inputOriginName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$inputOriginName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.bargeInModes.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchContext.bargeInModes : SearchContext()
{
  return SearchContext.bargeInModes.setter();
}

uint64_t SearchContext.bargeInModes.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*SearchContext.bargeInModes.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$bargeInModes.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.isOnlyUserInHome.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.isOnlyUserInHome.setter()
{
  return OUTLINED_FUNCTION_8_24();
}

uint64_t (*SearchContext.isOnlyUserInHome.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$isOnlyUserInHome.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.sharedUserId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchContext.responseMode : SearchContext(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t SearchContext.sharedUserId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchContext.sharedUserId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$sharedUserId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.userIdentityClassificationValue.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchContext.userIdentityClassificationValue.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*SearchContext.userIdentityClassificationValue.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchContext.$userIdentityClassificationValue.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchContext.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v40 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (uint64_t)&v33 - v6;
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_59_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Double>);
  OUTLINED_FUNCTION_61_3();
  uint64_t v53 = MEMORY[0x25A2C4920](v1);
  swift_retain();
  OUTLINED_FUNCTION_15_34();
  uint64_t v49 = MEMORY[0x25A2C4920](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[EntityMatch]>);
  swift_retain();
  OUTLINED_FUNCTION_16_30();
  unint64_t v9 = lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  uint64_t v47 = MEMORY[0x25A2C4890](v1, v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  uint64_t v43 = MEMORY[0x25A2C48A0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v46 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  uint64_t v42 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int>);
  swift_retain();
  OUTLINED_FUNCTION_15_34();
  uint64_t v45 = MEMORY[0x25A2C4930](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v52 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v51 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v50 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  OUTLINED_FUNCTION_4_38();
  uint64_t v44 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  OUTLINED_FUNCTION_4_38();
  uint64_t v48 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  OUTLINED_FUNCTION_4_38();
  uint64_t v41 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  OUTLINED_FUNCTION_16_30();
  uint64_t v10 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  uint64_t v34 = v10;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = MEMORY[0x25A2C4900](v1);
  uint64_t v35 = v11;
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  uint64_t v12 = MEMORY[0x25A2C4910](v1);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v13 = MEMORY[0x25A2C4900](v1);
  uint64_t v36 = v13;
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  uint64_t v37 = MEMORY[0x25A2C4930](v1);
  v56[0] = v53;
  v56[1] = v49;
  v56[2] = v47;
  v56[3] = v43;
  v56[4] = v46;
  v56[5] = v42;
  v56[6] = v45;
  v56[7] = v52;
  v56[8] = v51;
  v56[9] = v50;
  v56[10] = v44;
  v56[11] = v48;
  v56[12] = v41;
  v56[13] = v10;
  v56[14] = v11;
  v56[15] = v12;
  v56[16] = v13;
  v56[17] = v37;
  uint64_t v54 = 0;
  swift_retain();
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = 0;
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v54 = MEMORY[0x263F8EE78];
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v15 = type metadata accessor for IntentFile();
  uint64_t v16 = v39;
  __swift_storeEnumTagSinglePayload(v39, 1, 1, v15);
  outlined init with copy of IntentFile?(v16, v40);
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined destroy of IntentFile?(v16);
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = 0;
  unint64_t v55 = 0;
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = 1;
  outlined retain of SearchContext((uint64_t)v56);
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  uint64_t v17 = v41;
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  OUTLINED_FUNCTION_5_33();
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = 0;
  unint64_t v55 = 0;
  outlined retain of SearchContext((uint64_t)v56);
  uint64_t v18 = v34;
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = v14;
  outlined retain of SearchContext((uint64_t)v56);
  uint64_t v19 = v35;
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  uint64_t v54 = 0;
  unint64_t v55 = 0;
  outlined retain of SearchContext((uint64_t)v56);
  uint64_t v20 = v36;
  EntityProperty.wrappedValue.setter();
  outlined release of SearchContext((uint64_t)v56);
  outlined retain of SearchContext((uint64_t)v56);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v21 = v42;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v22 = v44;
  swift_release();
  uint64_t v23 = v48;
  swift_release();
  uint64_t v24 = v17;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = v12;
  swift_release();
  swift_release();
  uint64_t v26 = v37;
  swift_release();
  uint64_t v54 = 0;
  EntityProperty.wrappedValue.setter();
  uint64_t result = outlined release of SearchContext((uint64_t)v56);
  uint64_t v28 = v38;
  uint64_t v29 = v49;
  *uint64_t v38 = v53;
  v28[1] = v29;
  uint64_t v30 = v43;
  v28[2] = v47;
  v28[3] = v30;
  v28[4] = v46;
  v28[5] = v21;
  uint64_t v31 = v52;
  v28[6] = v45;
  v28[7] = v31;
  uint64_t v32 = v50;
  v28[8] = v51;
  v28[9] = v32;
  v28[10] = v22;
  v28[11] = v23;
  v28[12] = v24;
  v28[13] = v18;
  v28[14] = v19;
  v28[15] = v25;
  v28[16] = v20;
  v28[17] = v26;
  return result;
}

uint64_t outlined release of SearchContext(uint64_t a1)
{
  return a1;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance SearchContext(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchContext and conformance SearchContext();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchContext()
{
  lazy protocol witness table accessor for type SearchContext and conformance SearchContext();
  return UUID.init()();
}

uint64_t static SearchContext.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchContext.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchContext(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchContext and conformance SearchContext();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t SearchContext.displayRepresentation.getter()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_16();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_59_0();
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  memcpy(__dst, v0, sizeof(__dst));
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
  outlined retain of SearchContext((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of SearchContext((uint64_t)__dst);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v14);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  LocalizedStringResource.init(stringInterpolation:)();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v7);
  uint64_t v12 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v12);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchContext(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchContext and conformance SearchContext();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t static SearchContext.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchContext.typeDisplayRepresentation);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static SearchContext.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchContext.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

id SearchContext.location.getter(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  OUTLINED_FUNCTION_14_29(a1, v8, a3, a4, a5, a6, a7, a8, v10, v11, v13);
  outlined retain of SearchContext((uint64_t)&v13);
  EntityProperty.wrappedValue.getter();
  EntityProperty.wrappedValue.getter();
  outlined release of SearchContext((uint64_t)&v13);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v12, v12);
}

uint64_t SearchContext.inputOrigin.getter@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, uint64_t a8@<X8>)
{
  OUTLINED_FUNCTION_14_29(a1, v8, a2, a3, a4, a5, a6, a7, v12, v13, v15[0]);
  outlined retain of SearchContext((uint64_t)v15);
  EntityProperty.wrappedValue.getter();
  outlined release of SearchContext((uint64_t)v15);
  if (v14) {
    return InputOrigin.init(rawValue:)();
  }
  uint64_t v11 = type metadata accessor for InputOrigin();
  return __swift_storeEnumTagSinglePayload(a8, 1, 1, v11);
}

uint64_t SearchContext.deviceRestrictions.getter(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  OUTLINED_FUNCTION_14_29(a1, v8, a3, a4, a5, a6, a7, a8, v10, v11, v12[0]);
  outlined retain of SearchContext((uint64_t)v12);
  EntityProperty.wrappedValue.getter();
  outlined release of SearchContext((uint64_t)v12);
  return DeviceRestrictions.init(rawValue:)();
}

uint64_t SearchContext.userIdentityClassification.getter(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  OUTLINED_FUNCTION_14_29(a1, v8, a3, a4, a5, a6, a7, a8, v10, v11, v13[0]);
  outlined retain of SearchContext((uint64_t)v13);
  EntityProperty.wrappedValue.getter();
  outlined release of SearchContext((uint64_t)v13);
  return v12;
}

uint64_t SearchContext.afSpeechPacakge.getter()
{
  return 0;
}

uint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in SearchContext()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<SearchContext> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<SearchContext>);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchContext()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchContext> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<SearchContext>);
}

void sub_258557B80()
{
  OUTLINED_FUNCTION_13_7();
  double *v0 = SearchContext.latitude.getter();
}

uint64_t sub_258557BA8()
{
  return SearchContext.latitude.setter();
}

void sub_258557BD0()
{
  OUTLINED_FUNCTION_13_7();
  double *v0 = SearchContext.longitude.getter();
}

uint64_t sub_258557BF8()
{
  return SearchContext.longitude.setter();
}

uint64_t sub_258557C20()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.onScreenEntities.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_258557C4C()
{
  return SearchContext.asrSpeechPackageData.getter();
}

uint64_t sub_258557C74()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.assistantId.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_258557CA0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.responseMode.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_258557CC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchContext.responseMode : SearchContext(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchContext.responseMode.setter);
}

uint64_t sub_258557CF4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.deviceRestrictionsRawValue.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_258557D1C()
{
  return SearchContext.deviceRestrictionsRawValue.setter();
}

uint64_t sub_258557D44()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isEyesFree.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557D6C(unsigned __int8 *a1)
{
  return SearchContext.isEyesFree.setter();
}

uint64_t sub_258557D90()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isPersonal.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557DB8(unsigned __int8 *a1)
{
  return SearchContext.isPersonal.setter();
}

uint64_t sub_258557DDC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isMultiUser.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557E04(unsigned __int8 *a1)
{
  return SearchContext.isMultiUser.setter();
}

uint64_t sub_258557E28()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isVoiceTriggerEnabled.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557E50(unsigned __int8 *a1)
{
  return SearchContext.isVoiceTriggerEnabled.setter();
}

uint64_t sub_258557E74()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isTextToSpeechEnabled.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557E9C(unsigned __int8 *a1)
{
  return SearchContext.isTextToSpeechEnabled.setter();
}

uint64_t sub_258557EC0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isTriggerlessFollowup.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557EE8(unsigned __int8 *a1)
{
  return SearchContext.isTriggerlessFollowup.setter();
}

uint64_t sub_258557F0C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.inputOriginName.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_258557F34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchContext.responseMode : SearchContext(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchContext.inputOriginName.setter);
}

uint64_t sub_258557F60()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.bargeInModes.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_258557F8C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t v0 = SearchContext.isOnlyUserInHome.getter();
  return OUTLINED_FUNCTION_105_1(v0);
}

uint64_t sub_258557FB4(unsigned __int8 *a1)
{
  return SearchContext.isOnlyUserInHome.setter();
}

uint64_t sub_258557FD8()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.sharedUserId.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_258558000(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchContext.responseMode : SearchContext(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchContext.sharedUserId.setter);
}

uint64_t sub_25855802C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchContext.userIdentityClassificationValue.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_258558054()
{
  return SearchContext.userIdentityClassificationValue.setter();
}

uint64_t destroy for SearchContext()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for SearchContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SearchContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SearchContext(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  swift_release();
  a1[7] = a2[7];
  swift_release();
  swift_release();
  a1[8] = a2[8];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SearchContext()
{
  return &type metadata for SearchContext;
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  *(unsigned char *)(v0 - 248) = 0;
  return outlined retain of SearchContext(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_8_24()
{
  return EntityProperty.wrappedValue.setter();
}

void *OUTLINED_FUNCTION_14_29(int a1, const void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char __dst)
{
  return memcpy(&__dst, a2, 0x90uLL);
}

uint64_t OUTLINED_FUNCTION_15_34()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_16_30()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

Swift::Bool __swiftcall String.containsHTMLTag()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  id v4 = objc_allocWithZone(MEMORY[0x263F08AE8]);
  id v5 = @nonobjc NSRegularExpression.init(pattern:options:)(0xD000000000000026, 0x800000025867E030, 0);
  String.text.getter();
  uint64_t v6 = String.UTF16View.count.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)MEMORY[0x25A2C7AB0](v3, v2);
  id v8 = objc_msgSend(v5, sel_firstMatchInString_options_range_, v7, 0, 0, v6);

  if (!v8) {
    return 0;
  }

  return 1;
}

__C::_NSRange_optional __swiftcall String.nsRangeWithCompleteTokenMatch(of:)(Swift::String of)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = String.standardizeQuotations()();
  unint64_t v6 = v5;
  uint64_t v26 = String.standardizeQuotations()();
  unint64_t v8 = v7;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v6, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v8, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v10, v11, "Checking to see if standardized string: %s, contains standardized key: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v13 = v4 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v25 = 4 * v13;
  unint64_t v14 = 15;
  while (v25 > v14 >> 14)
  {
    uint64_t v29 = v4;
    unint64_t v30 = v6;
    uint64_t v27 = v26;
    unint64_t v28 = v8;
    uint64_t v15 = v8;
    uint64_t v16 = type metadata accessor for Locale();
    __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v16);
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v17 = StringProtocol.range<A>(of:options:range:locale:)();
    unint64_t v14 = v18;
    char v20 = v19;
    outlined destroy of Locale?((uint64_t)v3);
    if ((v20 & 1) != 0 || (v17 ^ v14) < 0x4000) {
      break;
    }
    uint64_t v21 = String.distance(from:to:)();
    unint64_t v8 = v15;
    if (String.isCompleteToken(index:key:)(v21, v26, v15, v4, v6))
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = v17;
      unint64_t v30 = v14;
      uint64_t v27 = v4;
      unint64_t v28 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<String.Index>);
      lazy protocol witness table accessor for type Range<String.Index> and conformance Range<A>();
      Swift::Int v22 = _NSRange.init<A, B>(_:in:)();
      Swift::Bool v24 = 0;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::Int v22 = 0;
  Swift::Int v23 = 0;
  Swift::Bool v24 = 1;
LABEL_15:
  result.value.length = v23;
  result.value.location = v22;
  result.is_nil = v24;
  return result;
}

Swift::String_optional __swiftcall String.substringFromNSRange(_:)(__C::_NSRange a1)
{
  Range<>.init(_:in:)();
  if (v1)
  {
    uint64_t v3 = 0;
    unint64_t v5 = 0;
  }
  else
  {
    uint64_t v2 = String.subscript.getter();
    uint64_t v3 = MEMORY[0x25A2C7B70](v2);
    unint64_t v5 = v4;
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3;
  unint64_t v7 = v5;
  result.value._object = v7;
  result.value._uint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t String.oms_trimCharacters(_:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  specialized Sequence.compactMap<A>(_:)(a1);
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  specialized RangeReplaceableCollection.filter(_:)(a2, a3, v6);
  String.UnicodeScalarView.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t String.nilIfEmpty.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t String.standardizeQuotations()()
{
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t String.isCompleteToken(index:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  swift_bridgeObjectRetain();
  unint64_t v8 = specialized _copyCollectionToContiguousArray<A>(_:)(a4, a5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_258662FE0;
  *(void *)(result + 32) = 32;
  *(void *)(result + 40) = 0xE100000000000000;
  *(void *)(result + 48) = 39;
  *(void *)(result + 56) = 0xE100000000000000;
  *(void *)(result + 64) = 34;
  *(void *)(result + 72) = 0xE100000000000000;
  *(void *)(result + 80) = 92;
  *(void *)(result + 88) = 0xE100000000000000;
  *(void *)(result + 96) = 47;
  *(void *)(result + 104) = 0xE100000000000000;
  *(void *)(result + 112) = 91;
  *(void *)(result + 120) = 0xE100000000000000;
  *(void *)(result + 128) = 45;
  *(void *)(result + 136) = 0xE100000000000000;
  *(void *)(result + 144) = 46;
  *(void *)(result + 152) = 0xE100000000000000;
  *(void *)(result + 160) = 10911970;
  *(void *)(result + 168) = 0xA300000000000000;
  unint64_t v10 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
  }
  else
  {
    if (v10 >= v8[1].value._countAndFlagsBits)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    char v11 = specialized Sequence<>.contains(_:)(v8[v10 + 2].value._countAndFlagsBits, (uint64_t)v8[v10 + 2].value._object, (void *)result);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    if ((v11 & 1) == 0)
    {
      swift_release();
      char v12 = 0;
      return v12 & 1;
    }
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258663000;
  *(void *)(inited + 32) = 32;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 48) = 46;
  *(void *)(inited + 56) = 0xE100000000000000;
  *(void *)(inited + 64) = 44;
  *(void *)(inited + 72) = 0xE100000000000000;
  *(void *)(inited + 80) = 39;
  *(void *)(inited + 88) = 0xE100000000000000;
  *(void *)(inited + 96) = 34;
  *(void *)(inited + 104) = 0xE100000000000000;
  *(void *)(inited + 112) = 58;
  *(void *)(inited + 120) = 0xE100000000000000;
  *(void *)(inited + 128) = 59;
  *(void *)(inited + 136) = 0xE100000000000000;
  *(void *)(inited + 144) = 33;
  *(void *)(inited + 152) = 0xE100000000000000;
  *(void *)(inited + 160) = 63;
  *(void *)(inited + 168) = 0xE100000000000000;
  *(void *)(inited + 176) = 92;
  *(void *)(inited + 184) = 0xE100000000000000;
  *(void *)(inited + 192) = 47;
  *(void *)(inited + 200) = 0xE100000000000000;
  *(void *)(inited + 208) = 93;
  *(void *)(inited + 216) = 0xE100000000000000;
  *(void *)(inited + 224) = 45;
  *(void *)(inited + 232) = 0xE100000000000000;
  *(void *)(inited + 240) = 10911970;
  *(void *)(inited + 248) = 0xA300000000000000;
  uint64_t result = String.count.getter();
  uint64_t v14 = a1 + result;
  if (__OFADD__(a1, result))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v14 >= v8[1].value._countAndFlagsBits)
  {
    swift_release();
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    char v12 = 1;
    return v12 & 1;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = &v8[v14];
    uint64_t countAndFlagsBits = v15[2].value._countAndFlagsBits;
    uint64_t object = (uint64_t)v15[2].value._object;
    swift_bridgeObjectRetain();
    swift_release();
    char v12 = specialized Sequence<>.contains(_:)(countAndFlagsBits, object, (void *)inited);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    return v12 & 1;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t outlined destroy of Locale?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type Range<String.Index> and conformance Range<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Range<String.Index> and conformance Range<A>;
  if (!lazy protocol witness table cache variable for type Range<String.Index> and conformance Range<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Range<String.Index>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Range<String.Index> and conformance Range<A>);
  }
  return result;
}

uint64_t TaskGroup.oms_results.getter(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  v2[5] = *(void *)(a2 - 8);
  v2[6] = swift_task_alloc();
  type metadata accessor for Optional();
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TaskGroup.Iterator();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](TaskGroup.oms_results.getter, 0, 0);
}

uint64_t TaskGroup.oms_results.getter()
{
  *(void *)(v0 + 16) = static Array._allocateUninitialized(_:)();
  TaskGroup.makeAsyncIterator()();
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *char v1 = v0;
  v1[1] = TaskGroup.oms_results.getter;
  uint64_t v2 = OUTLINED_FUNCTION_0_28();
  return MEMORY[0x270FA1E60](v2);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return MEMORY[0x270FA2498](TaskGroup.oms_results.getter, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;

  char v1 = v0[7];
  uint64_t v2 = v0[4];
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    uint64_t v3 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(v3);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v0[5] + 32))(v0[6], v1, v2);
    type metadata accessor for Array();
    Array.append(_:)();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    *uint64_t v6 = v0;
    v6[1] = TaskGroup.oms_results.getter;
    unint64_t v7 = OUTLINED_FUNCTION_0_28();
    return MEMORY[0x270FA1E60](v7);
  }
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return *(void *)(v0 + 56);
}

uint64_t UTType.searchToolExportedExperiences.unsafeMutableAddressor()
{
  if (one-time initialization token for searchToolExportedExperiences != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for UTType();
  return __swift_project_value_buffer(v0, (uint64_t)static UTType.searchToolExportedExperiences);
}

uint64_t one-time initialization function for searchToolExportedExperiences()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UTType();
  __swift_allocate_value_buffer(v3, static UTType.searchToolExportedExperiences);
  __swift_project_value_buffer(v3, (uint64_t)static UTType.searchToolExportedExperiences);
  static UTType.data.getter();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v3);
  return UTType.init(exportedAs:conformingTo:)();
}

uint64_t static UTType.searchToolExportedExperiences.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for searchToolExportedExperiences != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static UTType.searchToolExportedExperiences);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static UTType.searchToolExportedExperiences.setter(uint64_t a1)
{
  if (one-time initialization token for searchToolExportedExperiences != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static UTType.searchToolExportedExperiences);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static UTType.searchToolExportedExperiences.modify())()
{
  if (one-time initialization token for searchToolExportedExperiences != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for UTType();
  __swift_project_value_buffer(v0, (uint64_t)static UTType.searchToolExportedExperiences);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

id static NSUserDefaults.makeModelCatalogAjaxUserDefaults()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  id v1 = @nonobjc NSUserDefaults.init(suiteName:)(0xD00000000000001BLL, 0x8000000258685620);
  if (!v1)
  {
    if (one-time initialization token for utilities != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logging.utilities);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_257DC6000, v3, v4, "Failed to create UserDefaults for ModelCatalog.Ajax", v5, 2u);
      MEMORY[0x25A2C94B0](v5, -1, -1);
    }
  }
  return v1;
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_0_10();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = *(int *)(v5 + 36);
  uint64_t v17 = *(void **)(v3 + *(int *)(v5 + 40));
  unint64_t v18 = (void *)MEMORY[0x25A2C7AB0](*(void *)(v3 + v16), *(void *)(v3 + v16 + 8));
  id v19 = objc_msgSend(v17, sel_objectForKey_, v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v30, v31);
  }
  else
  {
    memset(v31, 0, sizeof(v31));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  int v20 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v20 ^ 1u, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v29, v8, v9);
    uint64_t v22 = OUTLINED_FUNCTION_4_39();
    v23(v22);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  }
  else
  {
    uint64_t v25 = OUTLINED_FUNCTION_4_39();
    v26(v25);
    OUTLINED_FUNCTION_1_0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v15, v9);
  }
}