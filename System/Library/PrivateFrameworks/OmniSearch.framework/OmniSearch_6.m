uint64_t MobileSMSDocument.displayChatName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  void *v14;
  void *v15;
  Swift::OpaquePointer_optional v16;

  v1 = type metadata accessor for MobileSMSDocument(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 56));
  if (v2[1])
  {
    v3 = *v2;
    goto LABEL_21;
  }
  v4 = *(void **)(v0 + *(int *)(v1 + 60));
  v5 = v4[2];
  if (v5)
  {
    if (v5 == 1)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v4 = v14;
      }
      v7 = v4[2];
      if (v7 >= v4[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v4 = v15;
      }
      v5 = 0x6E656577746562;
      v4[2] = v7 + 1;
      v8 = &v4[2 * v7];
      v8[4] = 25965;
      v8[5] = 0xE200000000000000;
      v6 = (void *)0xE700000000000000;
      goto LABEL_18;
    }
    if (v5 == 2) {
      v6 = (void *)0xE700000000000000;
    }
    else {
      v6 = (void *)0xE500000000000000;
    }
    if (v5 == 2) {
      v5 = 0x6E656577746562;
    }
    else {
      v5 = 0x676E6F6D61;
    }
  }
  else
  {
    v6 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
LABEL_18:
  MEMORY[0x25A2C7B90](10);
  if (v4[2])
  {
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = 32;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    v10._countAndFlagsBits = v5;
    v10._object = v6;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v16.value._rawValue = v4;
    v16.is_nil = 3;
    v11._countAndFlagsBits = 0xE000000000000000;
    LLMFormatter.StringInterpolation.appendInterpolation(names:countToShow:suffix:)(v16, 0, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LLMFormatter.sanitized.getter();
  v3 = v12;
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRetain();
  return v3;
}

void Photo.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v5 = (uint64_t)v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_17_1();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_59_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_39();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_22_15();
  uint64_t v59 = type metadata accessor for Date.FormatStyle();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_97_1();
  v15 = (int *)type metadata accessor for Photo(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x270FA5388](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_15_20();
  MEMORY[0x25A2C7B90](124);
  uint64_t v72 = v68;
  uint64_t v73 = v69;
  v19._countAndFlagsBits = 0x6C616E6F73726550;
  v19._object = (void *)0xEF206F746F687020;
  String.append(_:)(v19);
  uint64_t v20 = v1[3];
  if (v20)
  {
    uint64_t v21 = v1[2];
    uint64_t v70 = MEMORY[0x263F8D310];
    uint64_t v71 = MEMORY[0x263F8D378];
    uint64_t v68 = v21;
    uint64_t v69 = v20;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v68);
  outlined destroy of CustomStringConvertible?((uint64_t)&v68, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v22 = v1[10];
  if (v22)
  {
    uint64_t v23 = *(void *)(v5 + 72);
    *((void *)&v66 + 1) = MEMORY[0x263F8D310];
    uint64_t v67 = MEMORY[0x263F8D378];
    *(void *)&long long v65 = v23;
    *((void *)&v65 + 1) = v22;
  }
  else
  {
    uint64_t v67 = 0;
    long long v65 = 0u;
    long long v66 = 0u;
  }
  outlined init with copy of MobileSMSDocument(v5, (uint64_t)v18, (void (*)(void))type metadata accessor for Photo);
  uint64_t v60 = v0;
  if (v22)
  {
    swift_bridgeObjectRetain();
    outlined destroy of PreExtractedSharedLink((uint64_t)v18, (void (*)(void))type metadata accessor for Photo);
    outlined init with take of SageSearchClient(&v65, (uint64_t)&v68);
  }
  else
  {
    uint64_t v24 = *((void *)v18 + 8);
    if (v24)
    {
      uint64_t v25 = *((void *)v18 + 7);
      uint64_t v70 = MEMORY[0x263F8D310];
      uint64_t v71 = MEMORY[0x263F8D378];
      uint64_t v68 = v25;
      uint64_t v69 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      outlined destroy of PreExtractedSharedLink((uint64_t)v18, (void (*)(void))type metadata accessor for Photo);
    }
    else
    {
      swift_bridgeObjectRetain();
      outlined destroy of PreExtractedSharedLink((uint64_t)v18, (void (*)(void))type metadata accessor for Photo);
      OUTLINED_FUNCTION_10_22();
    }
    outlined destroy of CustomStringConvertible?((uint64_t)&v65, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_102_3(0xD000000000000025, (uint64_t)"The photo contains the following text");
  outlined destroy of CustomStringConvertible?((uint64_t)&v68, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  v74.value._rawValue = *(void **)(v5 + v15[13]);
  v26._countAndFlagsBits = 0xD00000000000001CLL;
  v26._object = (void *)0x8000000258681090;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v26, v74);
  OUTLINED_FUNCTION_17_17();
  v27._countAndFlagsBits = OUTLINED_FUNCTION_122_3();
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v27, v75);
  OUTLINED_FUNCTION_17_17();
  v76.value._rawValue = *(void **)(v5 + 32);
  v28._countAndFlagsBits = 0xD000000000000021;
  v28._object = (void *)0x80000002586810D0;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v28, v76);
  OUTLINED_FUNCTION_17_17();
  static LLMFormatter.dateTimeFormatter.getter();
  OUTLINED_FUNCTION_122_3();
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
  OUTLINED_FUNCTION_30();
  v30(v29);
  OUTLINED_FUNCTION_17_17();
  outlined init with copy of EagerResolutionService?(v5 + v15[17], v4, &demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v31 = type metadata accessor for PartialExtractedAttributes(0);
  OUTLINED_FUNCTION_11_20(v4, v32, v31);
  if (v33)
  {
    outlined destroy of CustomStringConvertible?(v4, &demangling cache variable for type metadata for PartialExtractedAttributes?);
    OUTLINED_FUNCTION_82_5();
    uint64_t v40 = v60;
    uint64_t v34 = MEMORY[0x263F8D310];
    uint64_t v35 = MEMORY[0x263F8D378];
  }
  else
  {
    specialized PartialExtractedAttributesSearchItem.llmConsumableDescription.getter();
    uint64_t v34 = MEMORY[0x263F8D310];
    uint64_t v63 = MEMORY[0x263F8D310];
    uint64_t v35 = MEMORY[0x263F8D378];
    uint64_t v64 = MEMORY[0x263F8D378];
    uint64_t v61 = v36;
    uint64_t v62 = v37;
    uint64_t v38 = outlined destroy of PreExtractedSharedLink(v4, (void (*)(void))type metadata accessor for PartialExtractedAttributes);
    uint64_t v40 = v60;
  }
  OUTLINED_FUNCTION_5_17(v38, v39, (uint64_t)&v61);
  outlined destroy of CustomStringConvertible?((uint64_t)&v61, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  outlined init with copy of EagerResolutionService?(v5 + v15[18], v3, &demangling cache variable for type metadata for PreExtractedCard?);
  uint64_t v41 = type metadata accessor for PreExtractedCard(0);
  OUTLINED_FUNCTION_11_20(v3, v42, v41);
  if (v33)
  {
    outlined destroy of CustomStringConvertible?(v3, &demangling cache variable for type metadata for PreExtractedCard?);
    OUTLINED_FUNCTION_82_5();
  }
  else
  {
    PreExtractedCard.llmConsumableDescription.getter();
    uint64_t v63 = v34;
    uint64_t v64 = v35;
    uint64_t v61 = v43;
    uint64_t v62 = v44;
    uint64_t v45 = outlined destroy of PreExtractedSharedLink(v3, (void (*)(void))type metadata accessor for PreExtractedCard);
  }
  OUTLINED_FUNCTION_5_17(v45, v46, (uint64_t)&v61);
  outlined destroy of CustomStringConvertible?((uint64_t)&v61, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  outlined init with copy of EagerResolutionService?(v5 + v15[19], v2, &demangling cache variable for type metadata for PreExtractedContact?);
  uint64_t v47 = type metadata accessor for PreExtractedContact(0);
  OUTLINED_FUNCTION_11_20(v2, v48, v47);
  if (v33)
  {
    outlined destroy of CustomStringConvertible?(v2, &demangling cache variable for type metadata for PreExtractedContact?);
    OUTLINED_FUNCTION_82_5();
  }
  else
  {
    PreExtractedContact.llmConsumableDescription.getter();
    uint64_t v63 = v34;
    uint64_t v64 = v35;
    uint64_t v61 = v49;
    uint64_t v62 = v50;
    uint64_t v51 = outlined destroy of PreExtractedSharedLink(v2, (void (*)(void))type metadata accessor for PreExtractedContact);
  }
  OUTLINED_FUNCTION_5_17(v51, v52, (uint64_t)&v61);
  outlined destroy of CustomStringConvertible?((uint64_t)&v61, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  outlined init with copy of EagerResolutionService?(v5 + v15[20], v40, &demangling cache variable for type metadata for PreExtractedSharedLink?);
  uint64_t v53 = type metadata accessor for PreExtractedSharedLink(0);
  OUTLINED_FUNCTION_11_20(v40, v54, v53);
  if (v33)
  {
    outlined destroy of CustomStringConvertible?(v40, &demangling cache variable for type metadata for PreExtractedSharedLink?);
    OUTLINED_FUNCTION_82_5();
  }
  else
  {
    PreExtractedSharedLink.llmConsumableDescription.getter();
    uint64_t v63 = v34;
    uint64_t v64 = v35;
    uint64_t v61 = v55;
    uint64_t v62 = v56;
    uint64_t v57 = outlined destroy of PreExtractedSharedLink(v40, (void (*)(void))type metadata accessor for PreExtractedSharedLink);
  }
  OUTLINED_FUNCTION_5_17(v57, v58, (uint64_t)&v61);
  outlined destroy of CustomStringConvertible?((uint64_t)&v61, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_119_4();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

uint64_t WalletTransaction.llmConsumableDescription.getter()
{
  v1 = v0;
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  MEMORY[0x25A2C7B90](113);
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  v2._countAndFlagsBits = 0xD000000000000020;
  v2._object = (void *)0x8000000258681120;
  String.append(_:)(v2);
  unint64_t v3 = v0[3];
  uint64_t v4 = MEMORY[0x263F8D310];
  uint64_t v5 = MEMORY[0x263F8D378];
  if (v3)
  {
    uint64_t v6 = v0[2];
    uint64_t v49 = MEMORY[0x263F8D310];
    uint64_t v50 = MEMORY[0x263F8D378];
    uint64_t v46 = v6;
    unint64_t v47 = v3;
  }
  else
  {
    OUTLINED_FUNCTION_69_8();
  }
  uint64_t v7 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50_14(v7, v8, (uint64_t)&v46);
  outlined destroy of CustomStringConvertible?((uint64_t)&v46, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  unint64_t v9 = v0[5];
  if (v9)
  {
    uint64_t v10 = v0[4];
    uint64_t v49 = v4;
    uint64_t v50 = v5;
    uint64_t v46 = v10;
    unint64_t v47 = v9;
  }
  else
  {
    OUTLINED_FUNCTION_69_8();
  }
  uint64_t v11 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50_14(v11, v12, (uint64_t)&v46);
  outlined destroy of CustomStringConvertible?((uint64_t)&v46, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CustomStringConvertible?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258661D70;
  uint64_t v14 = (int *)type metadata accessor for WalletTransaction(0);
  v15 = (void *)((char *)v0 + v14[8]);
  uint64_t v16 = v15[1];
  if (v16)
  {
    uint64_t v17 = *v15;
    uint64_t v18 = MEMORY[0x263F8D378];
    uint64_t v19 = v16;
    uint64_t v20 = MEMORY[0x263F8D310];
  }
  else
  {
    OUTLINED_FUNCTION_78_6();
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v19;
  *(void *)(inited + 56) = v20;
  *(void *)(inited + 64) = v18;
  uint64_t v21 = OUTLINED_FUNCTION_4_22(v14[9]);
  if (v21)
  {
    uint64_t v23 = *v22;
    uint64_t v24 = MEMORY[0x263F8D378];
    uint64_t v25 = v21;
    uint64_t v26 = MEMORY[0x263F8D310];
  }
  else
  {
    OUTLINED_FUNCTION_78_6();
    *(void *)(inited + 88) = 0;
  }
  *(void *)(inited + 72) = v23;
  *(void *)(inited + 80) = v25;
  *(void *)(inited + 96) = v26;
  *(void *)(inited + 104) = v24;
  Swift::String v27 = (void *)((char *)v1 + v14[10]);
  uint64_t v28 = v27[1];
  if (v28)
  {
    uint64_t v29 = *v27;
    uint64_t v30 = MEMORY[0x263F8D378];
    uint64_t v31 = MEMORY[0x263F8D310];
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    uint64_t v30 = 0;
    *(void *)(inited + 128) = 0;
  }
  *(void *)(inited + 112) = v29;
  *(void *)(inited + 120) = v28;
  *(void *)(inited + 136) = v31;
  *(void *)(inited + 144) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = 0x61636F6C20656854;
  v32._object = (void *)0xEF7369206E6F6974;
  LLMFormatter.StringInterpolation.appendInterpolation(_:ifAll:)(v32, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  v33._object = (void *)0x8000000258681150;
  v33._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v33);
  uint64_t v34 = (char *)v1 + v14[11];
  if (v34[20])
  {
    OUTLINED_FUNCTION_69_8();
  }
  else
  {
    uint64_t v36 = *(void *)v34;
    unint64_t v35 = *((void *)v34 + 1);
    uint64_t v37 = HIDWORD(*(void *)v34);
    uint64_t v38 = HIWORD(*(void *)v34);
    int v39 = *((_DWORD *)v34 + 4);
    type metadata accessor for NSDecimal(0);
    uint64_t v49 = v40;
    uint64_t v50 = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type NSDecimal and conformance NSDecimal, type metadata accessor for NSDecimal);
    LODWORD(v46) = v36;
    WORD2(v46) = v37;
    HIWORD(v46) = v38;
    unint64_t v47 = v35;
    uint64_t v4 = MEMORY[0x263F8D310];
    uint64_t v5 = MEMORY[0x263F8D378];
    int v48 = v39;
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v46);
  outlined destroy of CustomStringConvertible?((uint64_t)&v46, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v41 = OUTLINED_FUNCTION_4_22(v14[12]);
  if (v41)
  {
    uint64_t v43 = *v42;
    uint64_t v49 = v4;
    uint64_t v50 = v5;
    uint64_t v46 = v43;
    unint64_t v47 = v41;
  }
  else
  {
    OUTLINED_FUNCTION_69_8();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v46);
  outlined destroy of CustomStringConvertible?((uint64_t)&v46, &demangling cache variable for type metadata for CustomStringConvertible?);
  v44._countAndFlagsBits = 46;
  v44._object = (void *)0xE100000000000000;
  String.append(_:)(v44);
  LLMFormatter.sanitized.getter();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t WalletPass.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_76_6();
  MEMORY[0x25A2C7B90](78);
  OUTLINED_FUNCTION_134_2();
  OUTLINED_FUNCTION_75_5();
  String.append(_:)(v1);
  uint64_t v2 = v0[3];
  uint64_t v3 = MEMORY[0x263F8D310];
  uint64_t v4 = MEMORY[0x263F8D378];
  if (v2)
  {
    uint64_t v5 = v0[2];
    uint64_t v20 = MEMORY[0x263F8D310];
    uint64_t v21 = MEMORY[0x263F8D378];
    uint64_t v18 = v5;
    uint64_t v19 = v2;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50_14(v6, v7, (uint64_t)&v18);
  outlined destroy of CustomStringConvertible?((uint64_t)&v18, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v8 = v0[5];
  if (v8)
  {
    uint64_t v9 = v0[4];
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    uint64_t v18 = v9;
    uint64_t v19 = v8;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50_14(v10, v11, (uint64_t)&v18);
  outlined destroy of CustomStringConvertible?((uint64_t)&v18, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v12 = type metadata accessor for WalletPass(0);
  uint64_t v13 = OUTLINED_FUNCTION_4_22(*(int *)(v12 + 32));
  if (v13)
  {
    uint64_t v15 = *v14;
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    uint64_t v18 = v15;
    uint64_t v19 = v13;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x6165726320656854, 0xEE00736920726F74, (uint64_t)&v18, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)&v18, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_75_5();
  v16._countAndFlagsBits = 0xD000000000000017;
  LLMFormatter.StringInterpolation.appendInterpolation(_:dictionary:)(v16, v22);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t NoteDocument.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_76_6();
  MEMORY[0x25A2C7B90](48);
  OUTLINED_FUNCTION_134_2();
  v1._countAndFlagsBits = 0x742065746F6E2041;
  v1._object = (void *)0xEF203A64656C7469;
  String.append(_:)(v1);
  uint64_t v2 = v0[3];
  uint64_t v3 = MEMORY[0x263F8D310];
  uint64_t v4 = MEMORY[0x263F8D378];
  if (v2)
  {
    uint64_t v5 = v0[2];
    uint64_t v21 = MEMORY[0x263F8D310];
    uint64_t v22 = MEMORY[0x263F8D378];
    uint64_t v19 = v5;
    uint64_t v20 = v2;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_113_6(v6, v7, v8, v9, v10, v11, v12, v13, v19);
  outlined destroy of CustomStringConvertible?((uint64_t)&v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_111_5();
  uint64_t v14 = v0[5];
  if (v14)
  {
    uint64_t v15 = v0[4];
    uint64_t v21 = v3;
    uint64_t v22 = v4;
    uint64_t v19 = v15;
    uint64_t v20 = v14;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_30_18(17, 0x80000002586811C0, (uint64_t)&v19);
  outlined destroy of CustomStringConvertible?((uint64_t)&v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v16 = v0[7];
  if (v16)
  {
    uint64_t v17 = v0[6];
    uint64_t v21 = v3;
    uint64_t v22 = v4;
    uint64_t v19 = v17;
    uint64_t v20 = v16;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_101_6(0xD00000000000001ALL, (uint64_t)"The note is in the folder:", v19);
  outlined destroy of CustomStringConvertible?((uint64_t)&v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

void Reminder.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_87_7();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_124_4();
  OUTLINED_FUNCTION_39_10();
  OUTLINED_FUNCTION_74_7();
  v8._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v8);
  uint64_t v9 = (int *)type metadata accessor for Reminder(0);
  uint64_t v10 = (uint64_t)v0 + v9[7];
  static LLMFormatter.dateTimeFormatter.getter();
  LLMFormatter.StringInterpolation.appendInterpolation(date:formatStyle:)(v10);
  uint64_t v11 = *(void (**)(void))(v5 + 8);
  OUTLINED_FUNCTION_111_0();
  v11();
  v12._countAndFlagsBits = 0x3A656C746954202ELL;
  v12._object = (void *)0xE900000000000020;
  String.append(_:)(v12);
  uint64_t v13 = v0[3];
  if (v13) {
    OUTLINED_FUNCTION_20_19(v13, v0[2]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)v19);
  outlined destroy of CustomStringConvertible?((uint64_t)v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_111_5();
  outlined init with copy of EagerResolutionService?((uint64_t)v0 + v9[8], v1, &demangling cache variable for type metadata for Date?);
  if (*((unsigned char *)v0 + v9[9]) == 1) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
  OUTLINED_FUNCTION_111_0();
  v11();
  outlined destroy of CustomStringConvertible?(v1, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v14 = v0[5];
  if (v14) {
    OUTLINED_FUNCTION_20_19(v14, v0[4]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x73746E656D6D6F43, 0xEA0000000000203ALL, (uint64_t)v19, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v15 = OUTLINED_FUNCTION_4_22(v9[10]);
  if (v15) {
    OUTLINED_FUNCTION_20_19(v15, *v16);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_77_6(0x7461636F6C207441, 0x203A6E6F69, (uint64_t)v19);
  outlined destroy of CustomStringConvertible?((uint64_t)v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v17 = OUTLINED_FUNCTION_4_22(v9[11]);
  if (v17) {
    OUTLINED_FUNCTION_20_19(v17, *v18);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x6572646461207441, 0xEC000000203A7373, (uint64_t)v19, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

void PhoneHistory.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = type metadata accessor for Date.FormatStyle();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_15_20();
  MEMORY[0x25A2C7B90](50);
  OUTLINED_FUNCTION_39_10();
  OUTLINED_FUNCTION_35_15(0xD000000000000012, (uint64_t)"A phone call with ");
  uint64_t v7 = MEMORY[0x263F8D310];
  uint64_t v8 = MEMORY[0x263F8D378];
  if (*(void *)(v0 + 32))
  {
    uint64_t v18 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_128_3();
    uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v11;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v18);
  outlined destroy of CustomStringConvertible?((uint64_t)&v18, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  uint64_t v12 = type metadata accessor for PhoneHistory(0);
  static LLMFormatter.dateTimeFormatter.getter();
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  OUTLINED_FUNCTION_17_17();
  uint64_t v13 = OUTLINED_FUNCTION_4_22(*(int *)(v12 + 44));
  if (v13)
  {
    uint64_t v15 = *v14;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v18 = v15;
    uint64_t v19 = v13;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_59_9();
  OUTLINED_FUNCTION_30_18(16, v16, v17);
  outlined destroy of CustomStringConvertible?((uint64_t)&v18, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

uint64_t VoicemailTranscript.llmConsumableDescription.getter()
{
  uint64_t v2 = type metadata accessor for Date.FormatStyle();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_44_15();
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = v6;
  MEMORY[0x25A2C7B90](60);
  long long v19 = v16;
  OUTLINED_FUNCTION_177_0();
  String.append(_:)(v7);
  uint64_t v8 = v0[5];
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D378];
  if (v8)
  {
    uint64_t v11 = v0[4];
    *((void *)&v17 + 1) = MEMORY[0x263F8D310];
    uint64_t v18 = MEMORY[0x263F8D378];
    *(void *)&long long v16 = v11;
    *((void *)&v16 + 1) = v8;
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v16);
  outlined destroy of CustomStringConvertible?((uint64_t)&v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  type metadata accessor for VoicemailTranscript(0);
  static LLMFormatter.dateTimeFormatter.getter();
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  OUTLINED_FUNCTION_17_17();
  uint64_t v12 = v0[3];
  if (v12)
  {
    uint64_t v13 = v0[2];
    *((void *)&v17 + 1) = v9;
    uint64_t v18 = v10;
    *(void *)&long long v16 = v13;
    *((void *)&v16 + 1) = v12;
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_30_18(21, v14, (uint64_t)&v16);
  outlined destroy of CustomStringConvertible?((uint64_t)&v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  LLMFormatter.sanitized.getter();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t JournalEntry.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_76_6();
  MEMORY[0x25A2C7B90](50);
  OUTLINED_FUNCTION_134_2();
  OUTLINED_FUNCTION_75_5();
  v1._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    v14[3] = MEMORY[0x263F8D310];
    v14[4] = MEMORY[0x263F8D378];
    v14[0] = v3;
    v14[1] = v2;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_113_6(v4, v5, v6, v7, v8, v9, v10, v11, v14[0]);
  outlined destroy of CustomStringConvertible?((uint64_t)v14, &demangling cache variable for type metadata for CustomStringConvertible?);
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t VoiceMemo.llmConsumableDescription.getter()
{
  uint64_t v2 = type metadata accessor for Date.FormatStyle();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_44_15();
  *(void *)&long long v11 = 0;
  *((void *)&v11 + 1) = v6;
  MEMORY[0x25A2C7B90](42);
  long long v14 = v11;
  OUTLINED_FUNCTION_177_0();
  v7._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v7);
  uint64_t v8 = *(void *)(v0 + 24);
  if (v8)
  {
    uint64_t v9 = *(void *)(v0 + 16);
    *((void *)&v12 + 1) = MEMORY[0x263F8D310];
    uint64_t v13 = MEMORY[0x263F8D378];
    *(void *)&long long v11 = v9;
    *((void *)&v11 + 1) = v8;
  }
  else
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v11);
  outlined destroy of CustomStringConvertible?((uint64_t)&v11, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  type metadata accessor for VoiceMemo(0);
  static LLMFormatter.dateTimeFormatter.getter();
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  LLMFormatter.sanitized.getter();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

void Safari.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Safari(0);
  Swift::String v7 = (unint64_t *)(v0 + *(int *)(v6 + 32));
  unint64_t v8 = v7[1];
  uint64_t v9 = MEMORY[0x263F8D310];
  if (v8
    && (unint64_t v10 = *v7,
        v11._countAndFlagsBits = 0xD000000000000011,
        v11._object = (void *)0x80000002586812F0,
        String.hasPrefix(_:)(v11)))
  {
    uint64_t v22 = v10;
    unint64_t v23 = v8;
    unint64_t v26 = 0xD000000000000011;
    unint64_t v27 = 0x80000002586812F0;
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    OUTLINED_FUNCTION_83_4();
  }
  else
  {
    unint64_t v10 = 0xE400000000000000;
  }
  OUTLINED_FUNCTION_15_20();
  MEMORY[0x25A2C7B90](46);
  OUTLINED_FUNCTION_105_7();
  v12._countAndFlagsBits = 0x6972616661532041;
  v12._object = (void *)0xE900000000000020;
  String.append(_:)(v12);
  uint64_t v13 = MEMORY[0x263F8D378];
  uint64_t v24 = v9;
  uint64_t v25 = MEMORY[0x263F8D378];
  uint64_t v22 = 1835365481;
  unint64_t v23 = v10;
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v22);
  outlined destroy of CustomStringConvertible?((uint64_t)&v22, &demangling cache variable for type metadata for CustomStringConvertible?);
  v14._countAndFlagsBits = 0x20726F6620;
  v14._object = (void *)0xE500000000000000;
  String.append(_:)(v14);
  unint64_t v15 = *(void *)(v1 + 24);
  if (v15)
  {
    uint64_t v16 = *(void *)(v1 + 16);
    uint64_t v24 = v9;
    uint64_t v25 = v13;
    uint64_t v22 = v16;
    unint64_t v23 = v15;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v22);
  outlined destroy of CustomStringConvertible?((uint64_t)&v22, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_111_5();
  outlined init with copy of EagerResolutionService?(v1 + *(int *)(v6 + 24), (uint64_t)v5, &demangling cache variable for type metadata for URL?);
  uint64_t v17 = type metadata accessor for URL();
  OUTLINED_FUNCTION_53_2((uint64_t)v5, 1, v17);
  if (v18)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v5, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_10_22();
  }
  else
  {
    uint64_t v24 = v17;
    uint64_t v19 = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, MEMORY[0x263F06EA8]);
    OUTLINED_FUNCTION_90_4(v19);
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(void))(v20 + 32))();
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x204C525520656854, 0xEA00000000007369, (uint64_t)&v22, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)&v22, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

void RentalCarReservation.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_123_4();
  OUTLINED_FUNCTION_39_10();
  OUTLINED_FUNCTION_35_15(31, (uint64_t)"Rental car reservation details:");
  uint64_t v6 = v0[29];
  uint64_t v7 = MEMORY[0x263F8D310];
  uint64_t v8 = MEMORY[0x263F8D378];
  if (v6) {
    OUTLINED_FUNCTION_31_15(v6, v0[28]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_30_18(17, 0x8000000258681330, (uint64_t)v28);
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v0[32])
  {
    v28[0] = v0[32];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    uint64_t v9 = OUTLINED_FUNCTION_109_4();
    uint64_t v11 = v10;
    uint64_t v12 = swift_bridgeObjectRelease();
    v28[3] = v7;
    v28[4] = v8;
    v28[0] = v9;
    v28[1] = v11;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  OUTLINED_FUNCTION_32_12(v12, 0xEA00000000003A72);
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v13 = v1[34];
  if (v13) {
    OUTLINED_FUNCTION_31_15(v13, v1[33]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x3A726F6620, 0xE500000000000000, (uint64_t)v28, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v14 = v1[36];
  if (v14) {
    OUTLINED_FUNCTION_31_15(v14, v1[35]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_68_7();
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v15 = v1[38];
  if (v15) {
    OUTLINED_FUNCTION_31_15(v15, v1[37]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_20();
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v16 = v1[42];
  if (v16) {
    OUTLINED_FUNCTION_31_15(v16, v1[41]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_55_10(0x3A746120646E6520, v17, (uint64_t)v28);
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v18 = v1[44];
  if (v18) {
    OUTLINED_FUNCTION_31_15(v18, v1[43]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_20();
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v19 = v1[50];
  if (v19) {
    OUTLINED_FUNCTION_31_15(v19, v1[49]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_41_13();
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v20 = v1[52];
  if (v20) {
    OUTLINED_FUNCTION_31_15(v20, v1[51]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_55_10(0x3A73757461747320, v21, (uint64_t)v28);
  outlined destroy of CustomStringConvertible?((uint64_t)v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  type metadata accessor for RentalCarReservation(0);
  OUTLINED_FUNCTION_38_11();
  if (v22) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_24_20();
  unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  OUTLINED_FUNCTION_30();
  v23(v24, v25);
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_38_11();
  if (v22) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_30();
  v23(v26, v27);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

void TicketedTransportation.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15_20();
  MEMORY[0x25A2C7B90](132);
  OUTLINED_FUNCTION_39_10();
  OUTLINED_FUNCTION_35_15(32, (uint64_t)"Ticketed transportation details:");
  uint64_t v6 = v0[13];
  uint64_t v7 = MEMORY[0x263F8D310];
  uint64_t v8 = MEMORY[0x263F8D378];
  if (v6) {
    OUTLINED_FUNCTION_31_15(v6, v0[12]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_23_13();
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v0[26])
  {
    v26[0] = v0[26];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    uint64_t v9 = OUTLINED_FUNCTION_109_4();
    uint64_t v11 = v10;
    uint64_t v12 = swift_bridgeObjectRelease();
    uint64_t v27 = v7;
    uint64_t v28 = v8;
    v26[0] = v9;
    v26[1] = v11;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  OUTLINED_FUNCTION_32_12(v12, 0xEA00000000003A72);
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v13 = v1[28];
  if (v13) {
    OUTLINED_FUNCTION_31_15(v13, v1[27]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_68_7();
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v14 = v1[30];
  if (v14) {
    OUTLINED_FUNCTION_31_15(v14, v1[29]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_20();
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v15 = v1[32];
  if (v15) {
    OUTLINED_FUNCTION_31_15(v15, v1[31]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_55_10(0x3A746120646E6520, v16, (uint64_t)v26);
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v17 = v1[34];
  if (v17) {
    OUTLINED_FUNCTION_31_15(v17, v1[33]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_20();
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v18 = v1[35];
  if (v18)
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    uint64_t v28 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v26[0] = v18;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_40_11();
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v1[37])
  {
    OUTLINED_FUNCTION_0_13();
  }
  else
  {
    uint64_t v19 = v1[36];
    uint64_t v27 = MEMORY[0x263F8D538];
    uint64_t v28 = MEMORY[0x263F8D5A8];
    v26[0] = v19;
  }
  OUTLINED_FUNCTION_30_18(21, 0x8000000258681380, (uint64_t)v26);
  outlined destroy of CustomStringConvertible?((uint64_t)v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  type metadata accessor for TicketedTransportation(0);
  OUTLINED_FUNCTION_38_11();
  if (v20) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_24_20();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  OUTLINED_FUNCTION_30();
  v21(v22, v23);
  OUTLINED_FUNCTION_38_11();
  if (v20) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_30();
  v21(v24, v25);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

void TicketedShow.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  v31[1] = type metadata accessor for Date.FormatStyle();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_123_4();
  OUTLINED_FUNCTION_39_10();
  OUTLINED_FUNCTION_35_15(0xD000000000000016, (uint64_t)"Ticketed show details:");
  uint64_t v10 = v0[27];
  uint64_t v11 = MEMORY[0x263F8D310];
  uint64_t v12 = MEMORY[0x263F8D378];
  if (v10) {
    OUTLINED_FUNCTION_93_6(v10, v0[26]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_30_18(17, 0x8000000258681330, (uint64_t)v32);
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v13 = v0[13];
  if (v13) {
    OUTLINED_FUNCTION_93_6(v13, v0[12]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_23_13();
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v0[30])
  {
    v32[0] = v0[30];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_128_3();
    uint64_t v14 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v16 = v15;
    uint64_t v17 = swift_bridgeObjectRelease();
    uint64_t v33 = v11;
    uint64_t v34 = v12;
    v32[0] = v14;
    v32[1] = v16;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  OUTLINED_FUNCTION_32_12(v17, 0xEA00000000003A72);
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v18 = v1[32];
  if (v18) {
    OUTLINED_FUNCTION_93_6(v18, v1[31]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_56_7();
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v19 = v1[34];
  if (v19) {
    OUTLINED_FUNCTION_93_6(v19, v1[33]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_20();
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v20 = v1[35];
  if (v20)
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    uint64_t v34 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v32[0] = v20;
  }
  else
  {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_40_11();
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v1[37])
  {
    OUTLINED_FUNCTION_0_13();
  }
  else
  {
    uint64_t v21 = v1[36];
    uint64_t v33 = MEMORY[0x263F8D538];
    uint64_t v34 = MEMORY[0x263F8D5A8];
    v32[0] = v21;
  }
  OUTLINED_FUNCTION_13_24(0xD000000000000015, (uint64_t)" duration in seconds:");
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v22 = type metadata accessor for TicketedShow(0);
  uint64_t v23 = OUTLINED_FUNCTION_130_2(*(int *)(v22 + 120));
  if (v23) {
    OUTLINED_FUNCTION_93_6(v23, *v24);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_41_13();
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v25 = v1[39];
  if (v25) {
    OUTLINED_FUNCTION_93_6(v25, v1[38]);
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_77_6(0x2074656B63697420, 0x3A65707974, (uint64_t)v32);
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  outlined init with copy of EagerResolutionService?((uint64_t)v1 + *(int *)(v22 + 116), (uint64_t)v9, &demangling cache variable for type metadata for URL?);
  uint64_t v26 = type metadata accessor for URL();
  OUTLINED_FUNCTION_53_2((uint64_t)v9, 1, v26);
  if (v27)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v9, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_10_22();
  }
  else
  {
    uint64_t v33 = v26;
    uint64_t v28 = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, MEMORY[0x263F06EA8]);
    OUTLINED_FUNCTION_90_4(v28);
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(void))(v29 + 32))();
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x3A6B6E696C20, 0xE600000000000000, (uint64_t)v32, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_38_11();
  if (v27) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
  uint64_t v30 = *(void (**)(void))(v3 + 8);
  OUTLINED_FUNCTION_111_0();
  v30();
  OUTLINED_FUNCTION_38_11();
  if (v27) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_111_0();
  v30();
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

void Appointment.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_15_20();
  MEMORY[0x25A2C7B90](100);
  OUTLINED_FUNCTION_39_10();
  OUTLINED_FUNCTION_74_7();
  v5._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v5);
  uint64_t v6 = *(void *)(v0 + 216);
  if (v6) {
    OUTLINED_FUNCTION_110_6(v6, *(void *)(v0 + 208));
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x3A656D616E20, 0xE600000000000000, (uint64_t)v16, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v7 = *(void *)(v0 + 232);
  if (v7) {
    OUTLINED_FUNCTION_110_6(v7, *(void *)(v0 + 224));
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_56_7();
  outlined destroy of CustomStringConvertible?((uint64_t)v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v8 = *(void *)(v0 + 248);
  if (v8) {
    OUTLINED_FUNCTION_110_6(v8, *(void *)(v0 + 240));
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_20();
  outlined destroy of CustomStringConvertible?((uint64_t)v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v9 = *(void *)(v0 + 264);
  if (v9) {
    OUTLINED_FUNCTION_110_6(v9, *(void *)(v0 + 256));
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_72_5();
  outlined destroy of CustomStringConvertible?((uint64_t)v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (*(unsigned char *)(v0 + 280))
  {
    OUTLINED_FUNCTION_0_13();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 272);
    v16[3] = MEMORY[0x263F8D538];
    v16[4] = MEMORY[0x263F8D5A8];
    v16[0] = v10;
  }
  OUTLINED_FUNCTION_13_24(21, (uint64_t)" duration in seconds:");
  outlined destroy of CustomStringConvertible?((uint64_t)v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v11 = *(void *)(v0 + 296);
  if (v11) {
    OUTLINED_FUNCTION_110_6(v11, *(void *)(v0 + 288));
  }
  else {
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_41_13();
  outlined destroy of CustomStringConvertible?((uint64_t)v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  type metadata accessor for Appointment(0);
  OUTLINED_FUNCTION_38_11();
  if (v12) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_24_20();
  uint64_t v13 = *(void (**)(uint64_t))(v2 + 8);
  OUTLINED_FUNCTION_30();
  v13(v14);
  OUTLINED_FUNCTION_38_11();
  if (v12) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_30();
  v13(v15);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

void Trip.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_89_3();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_15_20();
  MEMORY[0x25A2C7B90](63);
  OUTLINED_FUNCTION_105_7();
  v8._countAndFlagsBits = 0x7465642070697254;
  v8._object = (void *)0xED00003A736C6961;
  String.append(_:)(v8);
  uint64_t v9 = *(void *)(v1 + 216);
  if (v9)
  {
    uint64_t v10 = *(void *)(v1 + 208);
    uint64_t v28 = MEMORY[0x263F8D310];
    uint64_t v29 = MEMORY[0x263F8D378];
    uint64_t v11 = MEMORY[0x263F8D378];
    uint64_t v26 = v10;
    uint64_t v27 = v9;
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8D378];
    OUTLINED_FUNCTION_0_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_42_10(0x746E65766520, v12, (uint64_t)&v26);
  outlined destroy of CustomStringConvertible?((uint64_t)&v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  uint64_t v13 = type metadata accessor for Trip(0);
  OUTLINED_FUNCTION_38_11();
  if (v14) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_60_7();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  OUTLINED_FUNCTION_111_0();
  v15(v16, v17);
  OUTLINED_FUNCTION_38_11();
  if (v14) {
    static LLMFormatter.dateOnlyFormatter.getter();
  }
  else {
    static LLMFormatter.dateTimeFormatter.getter();
  }
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_111_0();
  v15(v18, v19);
  uint64_t v20 = v1 + *(int *)(v13 + 96);
  if (*(unsigned char *)(v20 + 8))
  {
    OUTLINED_FUNCTION_0_13();
  }
  else
  {
    uint64_t v21 = *(void *)v20;
    uint64_t v28 = MEMORY[0x263F8D538];
    uint64_t v29 = MEMORY[0x263F8D5A8];
    uint64_t v26 = v21;
  }
  OUTLINED_FUNCTION_30_18(21, 0x8000000258681380, (uint64_t)&v26);
  outlined destroy of CustomStringConvertible?((uint64_t)&v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  outlined init with copy of EagerResolutionService?(v1 + *(int *)(v13 + 100), v0, &demangling cache variable for type metadata for URL?);
  uint64_t v22 = type metadata accessor for URL();
  OUTLINED_FUNCTION_53_2(v0, 1, v22);
  if (v14)
  {
    outlined destroy of CustomStringConvertible?(v0, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_10_22();
  }
  else
  {
    uint64_t v23 = URL.absoluteString.getter();
    uint64_t v28 = MEMORY[0x263F8D310];
    uint64_t v29 = v11;
    uint64_t v26 = v23;
    uint64_t v27 = v24;
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v0, v22);
  }
  OUTLINED_FUNCTION_52_10();
  outlined destroy of CustomStringConvertible?((uint64_t)&v26, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_119_0();
}

uint64_t FileDocument.llmConsumableDescription.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  OUTLINED_FUNCTION_76_6();
  MEMORY[0x25A2C7B90](86);
  OUTLINED_FUNCTION_134_2();
  OUTLINED_FUNCTION_58_7((uint64_t)"An File titled: ");
  swift_bridgeObjectRetain();
  id v2 = v1;
  uint64_t v3 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(objc_msgSend(v2, sel_attributeSet));
  uint64_t v5 = v4;

  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x263F8D310];
  uint64_t v15 = MEMORY[0x263F8D378];
  if (v5)
  {
    uint64_t v51 = MEMORY[0x263F8D310];
    uint64_t v52 = MEMORY[0x263F8D378];
    v50._countAndFlagsBits = v3;
    v50._object = v5;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  OUTLINED_FUNCTION_113_6(v6, v7, v8, v9, v10, v11, v12, v13, v50._countAndFlagsBits);
  outlined destroy of CustomStringConvertible?((uint64_t)&v50, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_58_7((uint64_t)" with filename: ");
  swift_bridgeObjectRetain();
  id v16 = v2;
  uint64_t v17 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(objc_msgSend(v16, sel_attributeSet), (SEL *)&selRef_filename);
  uint64_t v19 = v18;

  uint64_t v20 = swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v51 = v14;
    uint64_t v52 = v15;
    v50._countAndFlagsBits = v17;
    v50._object = v19;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  OUTLINED_FUNCTION_113_6(v20, v21, v22, v23, v24, v25, v26, v27, v50._countAndFlagsBits);
  outlined destroy of CustomStringConvertible?((uint64_t)&v50, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_111_5();
  swift_bridgeObjectRetain();
  id v28 = v16;
  uint64_t v29 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(objc_msgSend(v28, sel_attributeSet), (SEL *)&selRef_kind);
  uint64_t v31 = v30;

  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v51 = v14;
    uint64_t v52 = v15;
    v50._countAndFlagsBits = v29;
    v50._object = v31;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  OUTLINED_FUNCTION_101_6(0xD000000000000014, (uint64_t)"The file is of type:", v50._countAndFlagsBits);
  outlined destroy of CustomStringConvertible?((uint64_t)&v50, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_17_17();
  swift_bridgeObjectRetain();
  id v32 = v28;
  uint64_t v33 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.keywords.getter(objc_msgSend(v32, sel_attributeSet));

  swift_bridgeObjectRelease();
  if (v33) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  if (*(void *)(v34 + 16))
  {
    v50._countAndFlagsBits = 0x6261207369207449;
    v50._object = (void *)0xEB0000000074756FLL;
    OUTLINED_FUNCTION_17_17();
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    v50._countAndFlagsBits = v34;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    uint64_t v35 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v51 = v14;
    uint64_t v52 = v15;
    v50._object = v36;
    OUTLINED_FUNCTION_113_6(v35, (uint64_t)v36, v37, v38, v39, v40, v41, v42, v35);
    outlined destroy of CustomStringConvertible?((uint64_t)&v50, &demangling cache variable for type metadata for CustomStringConvertible?);
    v43._countAndFlagsBits = 46;
    v43._object = (void *)0xE100000000000000;
    String.append(_:)(v43);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_17();
  swift_bridgeObjectRetain();
  id v44 = v32;
  uint64_t v45 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(objc_msgSend(v44, sel_attributeSet), (SEL *)&selRef_textContent);
  unint64_t v47 = v46;

  swift_bridgeObjectRelease();
  if (v47)
  {
    uint64_t v51 = v14;
    uint64_t v52 = v15;
    v50._countAndFlagsBits = v45;
    v50._object = v47;
  }
  else
  {
    OUTLINED_FUNCTION_19_19();
  }
  OUTLINED_FUNCTION_55_10(0x3A746E65746E6F43, v48, (uint64_t)&v50);
  outlined destroy of CustomStringConvertible?((uint64_t)&v50, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t Contact.llmConsumableDescription.getter()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v3 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v5 = (void *)v0[7];
  uint64_t v7 = v0[9];
  uint64_t v16 = v0[8];
  *(void *)&long long v17 = 0;
  *((void *)&v17 + 1) = 0xE000000000000000;
  MEMORY[0x25A2C7B90](91);
  long long v20 = v17;
  OUTLINED_FUNCTION_100_7();
  String.append(_:)(v8);
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8D310];
    *((void *)&v18 + 1) = MEMORY[0x263F8D310];
    uint64_t v19 = MEMORY[0x263F8D378];
    uint64_t v10 = MEMORY[0x263F8D378];
    *(void *)&long long v17 = v2;
    *((void *)&v17 + 1) = v1;
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8D378];
    uint64_t v9 = MEMORY[0x263F8D310];
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v17);
  outlined destroy of CustomStringConvertible?((uint64_t)&v17, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_111_5();
  v11._countAndFlagsBits = 0x756E20656E6F6850;
  v11._object = (void *)0xEE003A737265626DLL;
  v21.value._rawValue = v4;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v11, v21);
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_100_7();
  v12._countAndFlagsBits = 0xD000000000000010;
  v22.value._rawValue = v3;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v12, v22);
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_100_7();
  v23.value._rawValue = v6;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v13, v23);
  OUTLINED_FUNCTION_17_17();
  v14._countAndFlagsBits = 0x3A7365746144;
  v14._object = (void *)0xE600000000000000;
  v24.value._rawValue = v5;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(v14, v24);
  OUTLINED_FUNCTION_17_17();
  if (v7)
  {
    *((void *)&v18 + 1) = v9;
    uint64_t v19 = v10;
    *(void *)&long long v17 = v16;
    *((void *)&v17 + 1) = v7;
  }
  else
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x7961646874726942, 0xE90000000000003ALL, (uint64_t)&v17, 0);
  outlined destroy of CustomStringConvertible?((uint64_t)&v17, &demangling cache variable for type metadata for CustomStringConvertible?);
  LLMFormatter.sanitized.getter();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t AppEntityItem.llmConsumableDescription.getter()
{
  MEMORY[0x25A2C7B90](61);
  OUTLINED_FUNCTION_75_5();
  v0._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = OUTLINED_FUNCTION_135_2(v1);
  OUTLINED_FUNCTION_136_1(v2);
  v3._countAndFlagsBits = 0x70797420646E6120;
  v3._object = (void *)0xED00002044492065;
  String.append(_:)(v3);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = OUTLINED_FUNCTION_135_2(v4);
  OUTLINED_FUNCTION_136_1(v5);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_3_26();
  return OUTLINED_FUNCTION_148();
}

uint64_t outlined init with take of Photo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Photo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PreExtractedSharedLink(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t outlined init with copy of MobileSMSDocument(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t lazy protocol witness table accessor for type URL and conformance URL(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

{
  uint64_t result;

  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(void *a1)
{
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(a1, (SEL *)&selRef_filename);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.kind.getter(void *a1)
{
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(a1, (SEL *)&selRef_kind);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.keywords.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_keywords);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.textContent.getter(void *a1)
{
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(a1, (SEL *)&selRef_textContent);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_148();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1Tm, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return outlined init with take of SageSearchClient(&v12, v10 + 40 * a1 + 32);
}

double OUTLINED_FUNCTION_0_13()
{
  *(void *)(v0 - 112) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_22@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_5_17(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0, 0xE000000000000000, a3, 0);
}

uint64_t OUTLINED_FUNCTION_6_20()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x7373657264646120, 0xE90000000000003ALL, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_9_15()
{
  return v0;
}

double OUTLINED_FUNCTION_10_22()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(void *)(v0 - 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, 1, a3);
}

uint64_t OUTLINED_FUNCTION_13_24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(a1, (a2 - 32) | 0x8000000000000000, v2 - 144, 0);
}

void OUTLINED_FUNCTION_15_20()
{
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_16_20()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

uint64_t OUTLINED_FUNCTION_17_18()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_18_23@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a2;
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = v5;
  *(void *)(v4 - 136) = result;
  return result;
}

double OUTLINED_FUNCTION_19_19()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_20_19@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = a2;
  *(void *)(v4 - 136) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_19@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a2;
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = v5;
  *(void *)(v4 - 136) = result;
  return result;
}

void OUTLINED_FUNCTION_22_18()
{
  LLMFormatter.sanitized.getter();
}

uint64_t OUTLINED_FUNCTION_23_13()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x7079742062757320, 0xEB00000000203A65, v0 - 144, 0);
}

void OUTLINED_FUNCTION_24_20()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

double OUTLINED_FUNCTION_25_17()
{
  *(void *)(v0 + 368) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_30_18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v4, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_31_15@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = a2;
  *(void *)(v4 - 136) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_12(uint64_t a1, uint64_t a2)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x656D6F7473756320, a2, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_33_12()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x20656372756F5320, 0xE800000000000000, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_34_15()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 1);
}

void OUTLINED_FUNCTION_35_15(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_36_14()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

uint64_t OUTLINED_FUNCTION_37_16@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v3 - 112) = v2;
  *(void *)(v3 - 144) = a2;
  *(void *)(v3 - 136) = result;
  return result;
}

void OUTLINED_FUNCTION_39_10()
{
  uint64_t v1 = *(void *)(v0 - 136);
  *(void *)(v0 - 96) = *(void *)(v0 - 144);
  *(void *)(v0 - 88) = v1;
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x756E207461657320, 0xEE003A737265626DLL, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_41_13()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x3A74736F6320, 0xE600000000000000, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_42_10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL | 0x6E20000000000000;
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v4, 0xED0000203A656D61, a3, 0);
}

uint64_t OUTLINED_FUNCTION_46_10@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a2;
  *(void *)(v4 - 120) = v3;
  *(void *)(v4 - 112) = v2;
  *(void *)(v4 - 144) = v5;
  *(void *)(v4 - 136) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_10@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v4 - 120) = v3;
  *(void *)(v4 - 112) = v2;
  *(void *)(v4 - 144) = a2;
  *(void *)(v4 - 136) = result;
  return result;
}

double OUTLINED_FUNCTION_49_10()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(void *)(v0 + 368) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_50_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(1931965513, 0xE400000000000000, a3, 0);
}

uint64_t OUTLINED_FUNCTION_51_11()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_52_10()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x7520746E65766520, 0xEB000000003A6C72, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_53_9()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_54_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(a1, 0xE800000000000000, a3, 0);
}

uint64_t OUTLINED_FUNCTION_56_7()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(980705568, 0xE400000000000000, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_57_7()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x6E207265646E7520, 0xEC0000003A656D61, v0 - 144, 0);
}

void OUTLINED_FUNCTION_58_7(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

void OUTLINED_FUNCTION_60_7()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

void OUTLINED_FUNCTION_66_6()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

void OUTLINED_FUNCTION_67_7()
{
  uint64_t v3 = *(void *)(v0 + 344);
  *(void *)(v1 - 112) = *(void *)(v0 + 336);
  *(void *)(v1 - 104) = v3;
  uint64_t v4 = 0x206C69616D45;
  unint64_t v5 = 0xE600000000000000;
  String.append(_:)(*(Swift::String *)&v4);
}

uint64_t OUTLINED_FUNCTION_68_7()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x6120747261747320, v0 + 15, v1 - 144, 0);
}

double OUTLINED_FUNCTION_69_8()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_70_7()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 1);
}

uint64_t OUTLINED_FUNCTION_71_7()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 1);
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x3A656E6F687020, 0xE700000000000000, v0 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_73_4()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, v0, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_77_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(a1, v4, a3, 0);
}

uint64_t OUTLINED_FUNCTION_81_6@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 336) = v1;
  *(_OWORD *)(v2 + 344) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 360) = *(_OWORD *)(a1 + 24);
  return DataDetectorResults.description.getter();
}

double OUTLINED_FUNCTION_82_5()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 240) = 0u;
  *(_OWORD *)(v0 - 224) = 0u;
  *(void *)(v0 - 208) = 0;
  return result;
}

void OUTLINED_FUNCTION_85_7()
{
  LLMFormatter.sanitized.getter();
}

uint64_t OUTLINED_FUNCTION_87_7()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t OUTLINED_FUNCTION_89_3()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t *OUTLINED_FUNCTION_90_4(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_91_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(v4 - 120) = a3;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = result;
  *(void *)(v4 - 136) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_92_7()
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(0x3A79646F42, 0xE500000000000000, v0 + 336, 0);
}

uint64_t OUTLINED_FUNCTION_93_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v4 - 120) = v3;
  *(void *)(v4 - 112) = v2;
  *(void *)(v4 - 144) = a2;
  *(void *)(v4 - 136) = result;
  return result;
}

void OUTLINED_FUNCTION_95_6()
{
  static LLMFormatter.dateTimeFormatter.getter();
}

void OUTLINED_FUNCTION_96_5()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

uint64_t OUTLINED_FUNCTION_98_6()
{
  return 0x6B6365686320;
}

uint64_t OUTLINED_FUNCTION_99_6()
{
  return 0x7265697272616320;
}

uint64_t OUTLINED_FUNCTION_101_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(a1, (a2 - 32) | 0x8000000000000000, (uint64_t)&a3, 0);
}

uint64_t OUTLINED_FUNCTION_102_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(a1, (a2 - 32) | 0x8000000000000000, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_103_6@<X0>(uint64_t a1@<X8>)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, (a1 - 32) | 0x8000000000000000, v2 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_104_7@<X0>(uint64_t a1@<X8>)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:if:skipLastDot:)(v1, (a1 - 32) | 0x8000000000000000, v2 - 144, 0);
}

void OUTLINED_FUNCTION_105_7()
{
  uint64_t v1 = *(void *)(v0 - 136);
  *(void *)(v0 - 96) = *(void *)(v0 - 144);
  *(void *)(v0 - 88) = v1;
}

double OUTLINED_FUNCTION_106_7()
{
  *(void *)(v0 - 224) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 256) = 0u;
  *(_OWORD *)(v0 - 240) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_109_4()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t OUTLINED_FUNCTION_110_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = a2;
  *(void *)(v4 - 136) = result;
  return result;
}

void OUTLINED_FUNCTION_111_5()
{
  uint64_t v1 = 8238;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_113_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&a9);
}

void OUTLINED_FUNCTION_116_5(uint64_t a1, uint64_t a2, Swift::OpaquePointer_optional a3)
{
  a3.value._rawValue = *(void **)(v3 + 72);
  uint64_t v5 = 1836020326;
  unint64_t v6 = 0xE400000000000000;
  LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(*(Swift::String *)&v5, a3);
}

void OUTLINED_FUNCTION_117_3()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_119_4()
{
  LLMFormatter.sanitized.getter();
}

uint64_t OUTLINED_FUNCTION_120_5(uint64_t result, uint64_t a2)
{
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = result;
  *(void *)(v4 - 136) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_121_3(uint64_t result, uint64_t a2)
{
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v3;
  *(void *)(v4 - 144) = result;
  *(void *)(v4 - 136) = a2;
  return result;
}

unint64_t OUTLINED_FUNCTION_122_3()
{
  return 0xD000000000000017;
}

void OUTLINED_FUNCTION_123_4()
{
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0xE000000000000000;
  JUMPOUT(0x25A2C7B90);
}

void OUTLINED_FUNCTION_124_4()
{
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0xE000000000000000;
  JUMPOUT(0x25A2C7B90);
}

void OUTLINED_FUNCTION_125_4()
{
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0xE000000000000000;
  JUMPOUT(0x25A2C7B90);
}

void OUTLINED_FUNCTION_126_2()
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:date:formatStyle:)();
}

uint64_t OUTLINED_FUNCTION_127_3()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t OUTLINED_FUNCTION_128_3()
{
  return 8236;
}

uint64_t OUTLINED_FUNCTION_129_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v4[45] = a3;
  v4[46] = v3;
  v4[42] = result;
  v4[43] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_130_2@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_131_2(uint64_t result, uint64_t a2)
{
  v2[45] = v3;
  v2[46] = v4;
  v2[42] = result;
  v2[43] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_132_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v4[45] = v2;
  v4[46] = v3;
  v4[42] = a2;
  v4[43] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_135_2(uint64_t a1, ...)
{
  va_start(va, a1);
  return LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_136_1(uint64_t a1, ...)
{
  va_start(va, a1);
  return outlined destroy of CustomStringConvertible?((uint64_t)va, v1);
}

uint64_t specialized Sequence.compactMap<A>(_:)(unint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v29 = v2 & 0xC000000000000001;
    uint64_t v30 = MEMORY[0x263F8EE78];
    uint64_t v4 = 4;
    uint64_t v28 = v3;
    while (1)
    {
      id v5 = v29 ? (id)MEMORY[0x25A2C8550](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      unint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_label);
      if (v8)
      {
        uint64_t v9 = v8;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      uint64_t v10 = ContactContentManager.extractLabel(from:)();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      if (v12)
      {
        if (one-time initialization token for dateFormatter != -1) {
          swift_once();
        }
        uint64_t v13 = (void *)static ContactContentManager.dateFormatter;
        id v14 = objc_msgSend(v6, sel_value, v27);
        id v15 = objc_msgSend(v13, sel_stringFromDateComponents_, v14);

        if (v15)
        {
          unint64_t v16 = v2;
          uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v19 = v18;

          v20._countAndFlagsBits = 8250;
          v20._object = (void *)0xE200000000000000;
          String.append(_:)(v20);
          v21._countAndFlagsBits = v17;
          v21._object = v19;
          String.append(_:)(v21);

          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v30 = v24;
          }
          unint64_t v22 = *(void *)(v30 + 16);
          if (v22 >= *(void *)(v30 + 24) >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v30 = v25;
          }
          *(void *)(v30 + 16) = v22 + 1;
          uint64_t v23 = v30 + 16 * v22;
          *(void *)(v23 + 32) = v10;
          *(void *)(v23 + 40) = v12;
          unint64_t v2 = v16;
          uint64_t v3 = v28;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
      ++v4;
      if (v7 == v3) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
LABEL_26:
  swift_release();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch0E6ResultVG_AHs5NeverOTg504_s10d73Search21ContactContentManagerC013fetchContactsD015contactsResultsSayAA0B6F15VGAH_tFA2GXEfU_AF0jkL0CTf1cn_n(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SearchResult(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  id v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v16 = v2;
    uint64_t v18 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v10 = v18;
    unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = a1 + v17;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      uint64_t v13 = a2;
      ContactContentManager.fetchContactContent(contactsResult:)(v11, v8);
      uint64_t v18 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      if (v14 >= *(void *)(v10 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v10 = v18;
      }
      *(void *)(v10 + 16) = v14 + 1;
      outlined init with take of SearchResult((uint64_t)v8, v10 + v17 + v14 * v12);
      v11 += v12;
      --v9;
      a2 = v13;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo14CNLabeledValueCySo13CNPhoneNumberCGG_SSs5NeverOTg50119_s10OmniSearch21ContactContentManagerC05fetchcD033_9CFD868317A59130903FC5568A7A143BLL14contactsResultAA0bM0VAH_tFSSSo14de6CySo13fG7CGXEfU_0J6Search0lmN0CTf1cn_n(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v29 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v2 < 0) {
        break;
      }
      uint64_t v3 = 0;
      unint64_t v26 = v1 & 0xC000000000000001;
      unint64_t v4 = v1;
      while (v2 != v3)
      {
        if (v26) {
          id v5 = (id)MEMORY[0x25A2C8550](v3, v1);
        }
        else {
          id v5 = *(id *)(v1 + 8 * v3 + 32);
        }
        uint64_t v6 = v5;
        id v7 = objc_msgSend(v5, sel_label);
        if (v7)
        {
          id v8 = v7;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v9 = ContactContentManager.extractLabel(from:)();
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        if (v11)
        {
          uint64_t v27 = v9;
          uint64_t v28 = v11;
          v12._countAndFlagsBits = 8250;
          v12._object = (void *)0xE200000000000000;
          String.append(_:)(v12);
          id v13 = objc_msgSend(v6, sel_value);
          id v14 = objc_msgSend(v13, sel_stringValue);

          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v17 = v16;

          v18._countAndFlagsBits = v15;
          v18._object = v17;
          String.append(_:)(v18);

          swift_bridgeObjectRelease();
          uint64_t v20 = v27;
          uint64_t v19 = v28;
        }
        else
        {
          id v21 = objc_msgSend(v6, sel_value);
          id v22 = objc_msgSend(v21, sel_stringValue);

          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v19 = v23;
        }
        unint64_t v24 = *(void *)(v29 + 16);
        if (v24 >= *(void *)(v29 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v3;
        *(void *)(v29 + 16) = v24 + 1;
        uint64_t v25 = v29 + 16 * v24;
        *(void *)(v25 + 32) = v20;
        *(void *)(v25 + 40) = v19;
        unint64_t v1 = v4;
        if (v2 == v3) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_release();
  }
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo14CNLabeledValueCySo8NSStringCGG_SSs5NeverOTg50119_s10OmniSearch21ContactContentManagerC05fetchcD033_9CFD868317A59130903FC5568A7A143BLL14contactsResultAA0bM0VAH_tFSSSo14de5CySo8F8CGXEfU0_0I6Search0klM0CTf1cn_n(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v29 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v2 < 0) {
        break;
      }
      uint64_t v3 = 0;
      unint64_t v26 = v1 & 0xC000000000000001;
      unint64_t v4 = v1;
      while (v2 != v3)
      {
        if (v26) {
          id v5 = (id)MEMORY[0x25A2C8550](v3, v1);
        }
        else {
          id v5 = *(id *)(v1 + 8 * v3 + 32);
        }
        uint64_t v6 = v5;
        id v7 = objc_msgSend(v5, sel_label);
        if (v7)
        {
          id v8 = v7;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v9 = ContactContentManager.extractLabel(from:)();
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        if (v11)
        {
          uint64_t v27 = v9;
          uint64_t v28 = v11;
          v12._countAndFlagsBits = 8250;
          v12._object = (void *)0xE200000000000000;
          String.append(_:)(v12);
          id v13 = objc_msgSend(v6, sel_value);
          id v14 = objc_msgSend(v13, sel_description);
          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v17 = v16;

          v18._countAndFlagsBits = v15;
          v18._object = v17;
          String.append(_:)(v18);

          swift_bridgeObjectRelease();
          uint64_t v20 = v27;
          uint64_t v19 = v28;
        }
        else
        {
          id v21 = objc_msgSend(v6, sel_value);
          id v22 = objc_msgSend(v21, sel_description);
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v19 = v23;
        }
        unint64_t v24 = *(void *)(v29 + 16);
        if (v24 >= *(void *)(v29 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v3;
        *(void *)(v29 + 16) = v24 + 1;
        uint64_t v25 = v29 + 16 * v24;
        *(void *)(v25 + 32) = v20;
        *(void *)(v25 + 40) = v19;
        unint64_t v1 = v4;
        if (v2 == v3) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_release();
  }
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo14CNLabeledValueCySo15CNPostalAddressCGG_SSs5NeverOTg50119_s10OmniSearch21ContactContentManagerC05fetchcD033_9CFD868317A59130903FC5568A7A143BLL14contactsResultAA0bM0VAH_tFSSSo14de6CySo15fG8CGXEfU1_0J6Search0lmN0CAQXDXMTTf1cn_n(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v31 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v2 < 0) {
        break;
      }
      uint64_t v3 = 0;
      unint64_t v28 = v1 & 0xC000000000000001;
      unint64_t v4 = v1;
      while (v2 != v3)
      {
        if (v28) {
          id v5 = (id)MEMORY[0x25A2C8550](v3, v1);
        }
        else {
          id v5 = *(id *)(v1 + 8 * v3 + 32);
        }
        uint64_t v6 = v5;
        id v7 = objc_msgSend(v5, sel_label);
        if (v7)
        {
          id v8 = v7;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v9 = ContactContentManager.extractLabel(from:)();
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        if (v11)
        {
          uint64_t v29 = v9;
          uint64_t v30 = v11;
          v12._countAndFlagsBits = 8250;
          v12._object = (void *)0xE200000000000000;
          String.append(_:)(v12);
          if (one-time initialization token for addressFormatter != -1) {
            swift_once();
          }
          id v13 = (void *)static ContactContentManager.addressFormatter;
          id v14 = objc_msgSend(v6, sel_value);
          id v15 = objc_msgSend(v13, sel_stringFromPostalAddress_, v14);

          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::String v18 = v17;

          v19._countAndFlagsBits = v16;
          v19._object = v18;
          String.append(_:)(v19);

          swift_bridgeObjectRelease();
          uint64_t v21 = v29;
          uint64_t v20 = v30;
        }
        else
        {
          if (one-time initialization token for addressFormatter != -1) {
            swift_once();
          }
          id v22 = (void *)static ContactContentManager.addressFormatter;
          id v23 = objc_msgSend(v6, sel_value);
          id v24 = objc_msgSend(v22, sel_stringFromPostalAddress_, v23);

          uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v20 = v25;
        }
        unint64_t v26 = *(void *)(v31 + 16);
        if (v26 >= *(void *)(v31 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v3;
        *(void *)(v31 + 16) = v26 + 1;
        uint64_t v27 = v31 + 16 * v26;
        *(void *)(v27 + 32) = v21;
        *(void *)(v27 + 40) = v20;
        unint64_t v1 = v4;
        if (v2 == v3) {
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_release();
  }
}

id protocol witness for ContactStoreProtocol.unifiedContact(withIdentifier:keysToFetch:) in conformance CNContactStore()
{
  return @nonobjc CNContactStore.unifiedContact(withIdentifier:keysToFetch:)();
}

id @nonobjc CNContactStore.unifiedContact(withIdentifier:keysToFetch:)()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v1 = (void *)MEMORY[0x25A2C7AB0]();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v7[0] = 0;
  id v3 = objc_msgSend(v0, sel_unifiedContactWithIdentifier_keysToFetch_error_, v1, isa, v7);

  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v3;
}

id one-time initialization function for addressFormatter()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB38]), sel_init);
  static ContactContentManager.addressFormatter = (uint64_t)result;
  return result;
}

id one-time initialization function for dateFormatter()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33598]), sel_init);
  static ContactContentManager.dateFormatter = (uint64_t)result;
  return result;
}

uint64_t ContactContentManager.contactStore.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of CustomStringConvertible(v1 + 16, a1);
}

uint64_t *ContactContentManager.__allocating_init(contactStore:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  id v4 = OUTLINED_FUNCTION_3_27(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_11_21();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t *ContactContentManager.init(contactStore:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  id v4 = OUTLINED_FUNCTION_3_27(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_11_21();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t ContactContentManager.extractLabel(from:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
  MEMORY[0x270FA5388](v1 - 8);
  OUTLINED_FUNCTION_13_12();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match);
  OUTLINED_FUNCTION_0_10();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Substring, Substring));
  Regex.init(_regexString:version:)();
  Regex.firstMatch(in:)();
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) == 1)
  {
    outlined destroy of Any?(v0, &demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logging.search);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl(&dword_257DC6000, v11, v12, "Failed to extract label with regex", v13, 2u);
      OUTLINED_FUNCTION_34();
    }

    uint64_t v14 = OUTLINED_FUNCTION_1_14();
    v15(v14);
    return 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v8, v0, v2);
    swift_getKeyPath();
    Regex.Match.subscript.getter();
    swift_release();
    uint64_t v16 = MEMORY[0x25A2C7B70]();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
    uint64_t v18 = OUTLINED_FUNCTION_1_14();
    v19(v18);
  }
  return v16;
}

uint64_t ContactContentManager.fetchContactContent(contactsResult:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v137 = *v2;
  uint64_t v144 = type metadata accessor for OSSignpostError();
  OUTLINED_FUNCTION_0_10();
  uint64_t v143 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v9);
  v135 = (char *)&v121 - v10;
  uint64_t v134 = type metadata accessor for DateComponents();
  OUTLINED_FUNCTION_0_10();
  uint64_t v133 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_15();
  uint64_t v131 = v14 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  MEMORY[0x270FA5388](v15 - 8);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v16);
  v132 = (char *)&v121 - v17;
  uint64_t v18 = type metadata accessor for SearchResult(0);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_13_12();
  uint64_t v19 = type metadata accessor for OSSignpostID();
  OUTLINED_FUNCTION_0_10();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_73();
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  unint64_t v28 = (char *)&v121 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v121 - v29;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for OSSignposter();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v147 = a1;
  outlined init with copy of SearchResult(a1, v3);
  uint64_t v33 = OSSignposter.logHandle.getter();
  LODWORD(v139) = static os_signpost_type_t.begin.getter();
  char v34 = OS_os_log.signpostsEnabled.getter();
  uint64_t v148 = v19;
  v146 = a2;
  uint64_t v142 = v18;
  uint64_t v145 = v32;
  if (v34)
  {
    v128 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v126 = v30;
    v128(v28, v30, v19);
    uint64_t v35 = swift_slowAlloc();
    uint64_t v149 = v21;
    uint64_t v36 = (uint8_t *)v35;
    uint64_t v127 = swift_slowAlloc();
    uint64_t v160 = v127;
    *(_DWORD *)uint64_t v36 = 136315138;
    SearchResultItem.associatedValue.getter((uint64_t)&v150);
    uint64_t v37 = v153;
    uint64_t v38 = v154;
    __swift_project_boxed_opaque_existential_1(&v150, v153);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 32))(v37, v38);
    unint64_t v41 = v40;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v150);
    uint64_t v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v160);
    uint64_t v42 = v126;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v19 = v148;
    swift_bridgeObjectRelease();
    outlined destroy of SearchResult(v3);
    os_signpost_id_t v43 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v33, (os_signpost_type_t)v139, v43, "ContactContentManager.fetchContactContent", "Fetching contact information for %s", v36, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    uint64_t v21 = v149;
    OUTLINED_FUNCTION_34();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v19);
    v128(v28, v42, v19);
  }
  else
  {
    uint64_t v42 = v30;

    outlined destroy of SearchResult(v3);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v28, v30, v19);
  }
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v44 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v149 = v21 + 8;
  v45(v42, v19);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_25866DC10;
  unint64_t v47 = (void *)*MEMORY[0x263EFE070];
  uint64_t v48 = (void *)*MEMORY[0x263EFDF80];
  uint64_t v49 = (void **)MEMORY[0x263EFE0A0];
  *(void *)(v46 + 32) = *MEMORY[0x263EFE070];
  *(void *)(v46 + 40) = v48;
  Swift::String v50 = *v49;
  uint64_t v51 = (void *)*MEMORY[0x263EFDF68];
  *(void *)(v46 + 48) = *v49;
  *(void *)(v46 + 56) = v51;
  uint64_t v52 = (void *)*MEMORY[0x263EFDF48];
  *(void *)(v46 + 64) = *MEMORY[0x263EFDF48];
  uint64_t v150 = v46;
  specialized Array._endMutation()();
  uint64_t v53 = v150;
  id v54 = v47;
  id v55 = v48;
  id v56 = v50;
  id v57 = v51;
  id v58 = v52;
  uint64_t v59 = v147;
  SearchResultItem.associatedValue.getter((uint64_t)&v160);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
  if (swift_dynamicCast())
  {
    uint64_t v136 = v44;
    v139 = v45;
    uint64_t v61 = v150;
    uint64_t v60 = v151;
    uint64_t v62 = v152;
    uint64_t v140 = v153;
    uint64_t v63 = v154;
    uint64_t v127 = v155;
    v126 = v156;
    uint64_t v125 = v157;
    uint64_t v124 = v158;
    v128 = v159;
    uint64_t v64 = (uint64_t)v141;
    uint64_t v65 = v141[5];
    uint64_t v66 = v141[6];
    __swift_project_boxed_opaque_existential_1(v141 + 2, v65);
    Swift::OpaquePointer_optional v75 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8))(v61, v60, v53, v65, v66);
    uint64_t v129 = v63;
    uint64_t v138 = v60;
    swift_bridgeObjectRelease();
    id v76 = v75;
    id v77 = objc_msgSend(v76, sel_phoneNumbers);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNLabeledValue);
    unint64_t v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo14CNLabeledValueCySo13CNPhoneNumberCGG_SSs5NeverOTg50119_s10OmniSearch21ContactContentManagerC05fetchcD033_9CFD868317A59130903FC5568A7A143BLL14contactsResultAA0bM0VAH_tFSSSo14de6CySo13fG7CGXEfU_0J6Search0lmN0CTf1cn_n(v78);
    uint64_t v124 = v79;
    swift_bridgeObjectRelease();
    id v80 = objc_msgSend(v76, sel_emailAddresses);
    unint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo14CNLabeledValueCySo8NSStringCGG_SSs5NeverOTg50119_s10OmniSearch21ContactContentManagerC05fetchcD033_9CFD868317A59130903FC5568A7A143BLL14contactsResultAA0bM0VAH_tFSSSo14de5CySo8F8CGXEfU0_0I6Search0klM0CTf1cn_n(v81);
    uint64_t v123 = v82;
    swift_bridgeObjectRelease();
    id v83 = objc_msgSend(v76, sel_postalAddresses);
    unint64_t v84 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo14CNLabeledValueCySo15CNPostalAddressCGG_SSs5NeverOTg50119_s10OmniSearch21ContactContentManagerC05fetchcD033_9CFD868317A59130903FC5568A7A143BLL14contactsResultAA0bM0VAH_tFSSSo14de6CySo15fG8CGXEfU1_0J6Search0lmN0CAQXDXMTTf1cn_n(v84);
    uint64_t v122 = v85;
    swift_bridgeObjectRelease();
    id v86 = objc_msgSend(v76, sel_dates);
    unint64_t v87 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    v141 = (void *)specialized Sequence.compactMap<A>(_:)(v87, v64);
    swift_bridgeObjectRelease();
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    __swift_project_value_buffer(v88, (uint64_t)static Logging.search);
    v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.debug.getter();
    uint64_t v91 = v62;
    if (os_log_type_enabled(v89, v90))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      *(_DWORD *)v92 = 136315138;
      uint64_t v160 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000024, 0x8000000258681530, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v89, v90, "%s Finished fetching missing contact attributes directly from CNContactStore", v92, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v93 = v147;
    uint64_t v94 = v134;
    uint64_t v95 = v133;
    uint64_t v96 = (uint64_t)v132;
    uint64_t v97 = v131;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v98 = objc_msgSend(v76, sel_birthday);
    if (v98)
    {
      v99 = v98;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v100 = 0;
    }
    else
    {
      uint64_t v100 = 1;
    }
    __swift_storeEnumTagSinglePayload(v96, v100, 1, v94);
    uint64_t v101 = v130;
    outlined init with copy of DateComponents?(v96, v130);
    if (__swift_getEnumTagSinglePayload(v101, 1, v94) == 1)
    {

      uint64_t v53 = 0;
      uint64_t v102 = 0;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v97, v101, v94);
      closure #5 in ContactContentManager.fetchContactContent(contactsResult:)(&v150);
      uint64_t v103 = OUTLINED_FUNCTION_7_23();
      v104(v103);

      uint64_t v102 = v150;
      uint64_t v53 = v151;
    }
    outlined destroy of Any?(v96, &demangling cache variable for type metadata for DateComponents?);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v105 = v140;
    swift_bridgeObjectRelease();
    uint64_t v68 = v138;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v106 = v146;
    uint64_t *v146 = v61;
    v106[1] = v68;
    v106[2] = v91;
    v106[3] = v105;
    uint64_t v107 = v123;
    v106[4] = v124;
    v106[5] = v107;
    v108 = v141;
    v106[6] = v122;
    v106[7] = (uint64_t)v108;
    v106[8] = v102;
    v106[9] = v53;
    type metadata accessor for SearchResultItem(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v109 = v142;
    v110 = *(void **)(v93 + *(int *)(v142 + 20));
    v111 = (uint64_t *)((char *)v106 + *(int *)(v142 + 24));
    void *v111 = 0;
    v111[1] = 0;
    *(uint64_t *)((char *)v106 + *(int *)(v109 + 20)) = (uint64_t)v110;
    id v112 = v110;
    uint64_t v67 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_6_21();
    os_signpost_type_t v69 = static os_signpost_type_t.end.getter();
    uint64_t v70 = v67;
    char v113 = OS_os_log.signpostsEnabled.getter();
    uint64_t v71 = v135;
    if ((v113 & 1) == 0)
    {
      uint64_t v119 = v148;
      uint64_t v45 = v139;
      goto LABEL_27;
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v114 = OUTLINED_FUNCTION_2_11();
    int v116 = v115(v114);
    uint64_t v45 = v139;
    if (v116 != *MEMORY[0x263F90238]) {
      goto LABEL_23;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  outlined init with copy of SearchResult(v59, (uint64_t)v146);
  uint64_t v67 = OSSignposter.logHandle.getter();
  uint64_t v68 = v140;
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v69 = static os_signpost_type_t.end.getter();
  uint64_t v70 = v67;
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    uint64_t v71 = (char *)v136;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v72 = OUTLINED_FUNCTION_2_11();
    if (v73(v72) != *MEMORY[0x263F90238])
    {
LABEL_23:
      ((void (*)(char *, uint64_t))v70[1].isa)(v71, v53);
      Swift::OpaquePointer_optional v74 = "";
      goto LABEL_24;
    }
LABEL_10:
    Swift::OpaquePointer_optional v74 = "[Error] Interval already ended";
LABEL_24:
    v117 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v117 = 0;
    os_signpost_id_t v118 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v67, v69, v118, "fetchContactContent.fetchContactContent", v74, v117, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v119 = v148;
LABEL_27:

  v45((char *)v68, v119);
  return swift_release();
}

void closure #5 in ContactContentManager.fetchContactContent(contactsResult:)(uint64_t *a1@<X8>)
{
  if (one-time initialization token for dateFormatter != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)static ContactContentManager.dateFormatter;
  Class isa = DateComponents._bridgeToObjectiveC()().super.isa;
  id v4 = objc_msgSend(v2, sel_stringFromDateComponents_, isa);

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t ContactContentManager.fetchContactsContent(contactsResults:)(uint64_t a1)
{
  swift_retain();
  return _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch0E6ResultVG_AHs5NeverOTg504_s10d73Search21ContactContentManagerC013fetchContactsD015contactsResultsSayAA0B6F15VGAH_tFA2GXEfU_AF0jkL0CTf1cn_n(a1, v1);
}

uint64_t ContactContentManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t ContactContentManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t *specialized ContactContentManager.init(contactStore:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a3);
  return a2;
}

uint64_t dispatch thunk of ContactStoreProtocol.unifiedContact(withIdentifier:keysToFetch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for ContactContentManager()
{
  return self;
}

uint64_t method lookup function for ContactContentManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactContentManager);
}

uint64_t dispatch thunk of ContactContentManager.__allocating_init(contactStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ContactContentManager.fetchContactsContent(contactsResults:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t outlined init with copy of DateComponents?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return v0;
}

char *OUTLINED_FUNCTION_3_27@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_7_23()
{
  return v0;
}

uint64_t *OUTLINED_FUNCTION_11_21()
{
  return specialized ContactContentManager.init(contactStore:)(v3, v0, v1, v2);
}

uint64_t specialized Sequence.reduce<A>(into:_:)(Swift::Int a1, unint64_t a2, void *a3)
{
  unint64_t v3 = a2;
  if (a2 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();

    return a1;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_22;
  }
LABEL_3:
  uint64_t v28 = v5;
  unint64_t v29 = v3;
  unint64_t v30 = v3 & 0xC000000000000001;
  uint64_t v6 = 4;
  while (1)
  {
    if (v30) {
      id v7 = (id)MEMORY[0x25A2C8550](v6 - 4, v3);
    }
    else {
      id v7 = *(id *)(v3 + 8 * v6);
    }
    uint64_t v8 = v7;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v33 = v6 - 3;
    id v9 = objc_msgSend(a3, sel_messageForObjectID_, v7);
    unint64_t v3 = (unint64_t)objc_msgSend(v9, sel_result);

    uint64_t v32 = v8;
    objc_msgSend(v8, sel_globalMessageID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v12 = v11;
    id v13 = (id)v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v34 = (void *)a1;
    unint64_t v15 = specialized __RawDictionaryStorage.find<A>(_:)(v10, v12);
    uint64_t v17 = *(void *)(a1 + 16);
    BOOL v18 = (v16 & 1) == 0;
    a1 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_19;
    }
    unint64_t v3 = v15;
    char v19 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, EMMessage>);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, a1)) {
      break;
    }
LABEL_12:
    a1 = (Swift::Int)v34;
    if (v19)
    {
      uint64_t v22 = v34[7];

      *(void *)(v22 + 8 * v3) = v13;
    }
    else
    {
      v34[(v3 >> 6) + 8] |= 1 << v3;
      uint64_t v23 = (uint64_t *)(v34[6] + 16 * v3);
      *uint64_t v23 = v10;
      v23[1] = v12;
      *(void *)(v34[7] + 8 * v3) = v13;
      uint64_t v24 = v34[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_20;
      }
      v34[2] = v26;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v6;
    unint64_t v3 = v29;
    if (v33 == v28) {
      goto LABEL_22;
    }
  }
  unint64_t v20 = specialized __RawDictionaryStorage.find<A>(_:)(v10, v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v3 = v20;
    goto LABEL_12;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *EmailContentManager.bodyFetchTimeout.unsafeMutableAddressor()
{
  return &static EmailContentManager.bodyFetchTimeout;
}

double static EmailContentManager.bodyFetchTimeout.getter()
{
  return 2.0;
}

uint64_t one-time initialization function for contentRequestOptions()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F3B158]);
  uint64_t result = @nonobjc EMContentRequestOptions.init(builder:)((uint64_t)closure #1 in variable initialization expression of static EmailContentManager.contentRequestOptions, 0);
  static EmailContentManager.contentRequestOptions = result;
  return result;
}

id closure #1 in variable initialization expression of static EmailContentManager.contentRequestOptions(void *a1)
{
  objc_msgSend(a1, sel_setRequestedRepresentation_, *MEMORY[0x263F3B120]);
  objc_msgSend(a1, sel_setNetworkUsage_, 2);
  return objc_msgSend(a1, sel_setIncludeSuggestionItems_, 2);
}

uint64_t *EmailContentManager.contentRequestOptions.unsafeMutableAddressor()
{
  if (one-time initialization token for contentRequestOptions != -1) {
    swift_once();
  }
  return &static EmailContentManager.contentRequestOptions;
}

id static EmailContentManager.contentRequestOptions.getter()
{
  if (one-time initialization token for contentRequestOptions != -1) {
    swift_once();
  }
  id v0 = (void *)static EmailContentManager.contentRequestOptions;
  return v0;
}

id EmailContentManager.mailRepository.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t EmailContentManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B160]), sel_init);
  return v0;
}

uint64_t EmailContentManager.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B160]), sel_init);
  return v0;
}

uint64_t EmailContentManager.hydrateEmailResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[5] = v2;
  v1[6] = v0;
  v1[7] = *v0;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[8] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[9] = v4;
  v1[10] = OUTLINED_FUNCTION_49_1();
  uint64_t v5 = type metadata accessor for SearchResultItem(0);
  v1[11] = v5;
  OUTLINED_FUNCTION_81(v5);
  v1[12] = OUTLINED_FUNCTION_49_1();
  uint64_t v6 = type metadata accessor for EmailDocument(0);
  v1[13] = v6;
  OUTLINED_FUNCTION_81(v6);
  v1[14] = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = type metadata accessor for SearchResult(0);
  v1[15] = v7;
  OUTLINED_FUNCTION_12_0(v7);
  v1[16] = v8;
  v1[17] = OUTLINED_FUNCTION_50_0();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OSSignpostID();
  v1[20] = v9;
  OUTLINED_FUNCTION_12_0(v9);
  v1[21] = v10;
  v1[22] = OUTLINED_FUNCTION_50_0();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  void *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t);
  const char *v5;
  uint8_t *v6;
  os_signpost_id_t v7;
  void (*v8)(uint64_t, uint64_t);
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  uint64_t v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v2 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v3 = OUTLINED_FUNCTION_77_7();
    if (v4(v3) == *MEMORY[0x263F90238])
    {
      uint64_t v5 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
      uint64_t v5 = "";
    }
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v6 = 0;
    uint64_t v7 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v1, v2, v7, "EmailContentManager.hydrateEmailResults", v5, v6, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[27];
  uint64_t v9 = v1;
  uint64_t v10 = v0[22];
  uint64_t v11 = v0[20];
  uint64_t v14 = v0[3];

  v8(v10, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v14);
}

uint64_t EmailContentManager.hydrateEmailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for OSSignposter();
  v14[25] = __swift_project_value_buffer(v15, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  char v16 = OSSignposter.logHandle.getter();
  os_signpost_type_t v17 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    BOOL v18 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)BOOL v18 = 0;
    os_signpost_id_t v19 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v16, v17, v19, "EmailContentManager.hydrateEmailResults", "", v18, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v20 = v14[21];

  OUTLINED_FUNCTION_64_0();
  v21();
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v14[26] = OUTLINED_FUNCTION_160();
  v14[27] = *(void *)(v20 + 8);
  v14[28] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v22 = OUTLINED_FUNCTION_74_8();
  v23(v22);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  os_log_type_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.info.getter();
  BOOL v28 = OUTLINED_FUNCTION_51_1(v27);
  uint64_t v29 = v14[5];
  if (v28)
  {
    unint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    *(_DWORD *)unint64_t v30 = 134217984;
    v14[4] = *(void *)(v29 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v26, v25, "EmailContentManager: Gathering full email documents for %ld email items", v30, 0xCu);
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v79 = MEMORY[0x263F8EE78];
  uint64_t v32 = *(void *)(v14[5] + 16);
  uint64_t v33 = swift_bridgeObjectRetain();
  if (v32)
  {
    uint64_t v34 = v14[16];
    uint64_t v35 = v14[13];
    uint64_t v36 = *(void *)(v34 + 72);
    a9 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v37 = v33 + a9;
    uint64_t v77 = MEMORY[0x263F8EE78];
    while (1)
    {
      _s10OmniSearch0B6ResultVWOcTm_2(v37, v14[19], (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v38 = OUTLINED_FUNCTION_77_7();
      _s10OmniSearch0B6ResultVWOcTm_2(v38, v39, v40);
      if (swift_getEnumCaseMultiPayload()) {
        break;
      }
      uint64_t v43 = v14[14];
      outlined init with take of EmailDocument(v14[12], v43, (void (*)(void))type metadata accessor for EmailDocument);
      int v44 = *(unsigned __int8 *)(v43 + *(int *)(v35 + 68));
      uint64_t v41 = v14[14];
      if (v44 == 2)
      {
        uint64_t v42 = type metadata accessor for EmailDocument;
        goto LABEL_16;
      }
      _s10OmniSearch0B10ResultItemOWOhTm_4(v41, (void (*)(void))type metadata accessor for EmailDocument);
      if (v44)
      {
        outlined init with take of EmailDocument(v14[19], v14[18], (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v45 = v77;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v45 = v79;
        }
        unint64_t v46 = *(void *)(v45 + 16);
        if (v46 >= *(void *)(v45 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v45 = v79;
        }
        uint64_t v47 = v14[18];
        *(void *)(v45 + 16) = v46 + 1;
        uint64_t v77 = v45;
        outlined init with take of EmailDocument(v47, v45 + a9 + v46 * v36, (void (*)(void))type metadata accessor for SearchResult);
        goto LABEL_18;
      }
LABEL_17:
      _s10OmniSearch0B10ResultItemOWOhTm_4(v14[19], (void (*)(void))type metadata accessor for SearchResult);
LABEL_18:
      v37 += v36;
      if (!--v32) {
        goto LABEL_27;
      }
    }
    uint64_t v41 = v14[12];
    uint64_t v42 = type metadata accessor for SearchResultItem;
LABEL_16:
    _s10OmniSearch0B10ResultItemOWOhTm_4(v41, (void (*)(void))v42);
    goto LABEL_17;
  }
  uint64_t v77 = v31;
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(v77 + 16);
  if (v48)
  {
    uint64_t v50 = v14[15];
    uint64_t v49 = v14[16];
    uint64_t v51 = v77 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    uint64_t v52 = *(void *)(v49 + 72);
    swift_retain();
    uint64_t v53 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v54 = v14[17];
      _s10OmniSearch0B6ResultVWOcTm_2(v51, v54, (void (*)(void))type metadata accessor for SearchResult);
      id v55 = objc_msgSend(*(id *)(v54 + *(int *)(v50 + 20)), sel_uniqueIdentifier);
      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v57;

      _s10OmniSearch0B10ResultItemOWOhTm_4(v54, (void (*)(void))type metadata accessor for SearchResult);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v53 = v61;
      }
      unint64_t v59 = *(void *)(v53 + 16);
      if (v59 >= *(void *)(v53 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v53 = v62;
      }
      *(void *)(v53 + 16) = v59 + 1;
      uint64_t v60 = v53 + 16 * v59;
      *(void *)(v60 + 32) = v56;
      *(void *)(v60 + 40) = v58;
      v51 += v52;
      --v48;
    }
    while (v48);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  uint64_t v63 = v14[6];
  uint64_t v64 = v14[7];
  uint64_t v65 = EmailContentManager.messages(for:)();
  swift_bridgeObjectRelease();
  uint64_t v66 = (void *)swift_allocObject();
  v14[29] = v66;
  v66[2] = v65;
  v66[3] = v63;
  v66[4] = v64;
  unint64_t v78 = (char *)&async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)
      + async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  swift_retain();
  uint64_t v67 = (void *)swift_task_alloc();
  v14[30] = v67;
  *uint64_t v67 = v14;
  v67[1] = EmailContentManager.hydrateEmailResults(_:);
  OUTLINED_FUNCTION_45_0();
  return v72(v68, v69, v70, v71, v72, v73, v74, v75, a9, v78, v79, a12, a13, a14);
}

uint64_t closure #3 in EmailContentManager.hydrateEmailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  uint64_t v6 = type metadata accessor for SearchResult(0);
  v5[20] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[21] = v7;
  v5[22] = *(void *)(v7 + 64);
  v5[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #3 in EmailContentManager.hydrateEmailResults(_:), 0, 0);
}

uint64_t closure #3 in EmailContentManager.hydrateEmailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_71();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_135();
  a20 = v22;
  id v25 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(v22 + 128)
                                                              + *(int *)(*(void *)(v22 + 160) + 20)), sel_attributeSet));
  id v26 = objc_msgSend(v25, sel_attributeForKey_, *MEMORY[0x263F029A8]);

  if (v26)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v22 + 48) = 0u;
    *(_OWORD *)(v22 + 64) = 0u;
  }
  outlined init with take of EagerResolutionService?(v22 + 48, v22 + 16, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!*(void *)(v22 + 40))
  {
    outlined destroy of EagerResolutionService?(v22 + 16, (uint64_t *)&demangling cache variable for type metadata for Any?);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    __swift_project_value_buffer(v49, (uint64_t)static Logging.search);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_50_11(&dword_257DC6000, v52, v53, "EmailContentManager: No mail message id from csitem");
      OUTLINED_FUNCTION_34();
    }
    uint64_t v55 = *(void *)(v22 + 120);
    uint64_t v54 = *(void *)(v22 + 128);

    uint64_t v56 = v54;
    uint64_t v57 = v55;
    goto LABEL_16;
  }
  uint64_t v27 = *(void *)(v22 + 136);
  uint64_t v29 = *(void *)(v22 + 80);
  unint64_t v28 = *(void *)(v22 + 88);
  *(void *)(v22 + 192) = v29;
  *(void *)(v22 + 200) = v28;
  swift_bridgeObjectRetain();
  unint64_t v30 = (void *)specialized Dictionary.subscript.getter(v29, v28, v27);
  *(void *)(v22 + 208) = v30;
  swift_bridgeObjectRelease();
  if (v30)
  {
    uint64_t v32 = *(void *)(v22 + 176);
    uint64_t v31 = *(void *)(v22 + 184);
    uint64_t v33 = *(void *)(v22 + 168);
    uint64_t v34 = *(void *)(v22 + 144);
    uint64_t v35 = *(void *)(v22 + 152);
    _s10OmniSearch0B6ResultVWOcTm_2(*(void *)(v22 + 128), v31, (void (*)(void))type metadata accessor for SearchResult);
    unint64_t v36 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    unint64_t v37 = (v32 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = swift_allocObject();
    *(void *)(v22 + 216) = v38;
    *(void *)(v38 + 16) = v30;
    outlined init with take of EmailDocument(v31, v38 + v36, (void (*)(void))type metadata accessor for SearchResult);
    *(void *)(v38 + v37) = v34;
    *(void *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v35;
    id v39 = v30;
    swift_retain();
    unint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v22 + 224) = v40;
    *unint64_t v40 = v22;
    v40[1] = closure #3 in EmailContentManager.hydrateEmailResults(_:);
    OUTLINED_FUNCTION_45_0();
    return MEMORY[0x270F72A38](v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14);
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v66 = type metadata accessor for Logger();
  os_log_type_t v67 = __swift_project_value_buffer(v66, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v68 = Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_51_1(v69))
  {
    a9 = v22 + 96;
    uint64_t v70 = swift_slowAlloc();
    a10 = swift_slowAlloc();
    a11 = a10;
    *(_DWORD *)uint64_t v70 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v22 + 96) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v70 + 12) = 2080;
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for EMMessage);
    swift_bridgeObjectRetain();
    uint64_t v71 = Dictionary.description.getter();
    unint64_t v73 = v72;
    swift_bridgeObjectRelease();
    *(void *)(v22 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v73, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v68, v67, "EmailContentManager: no mail message from id: %s from messages %s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v57 = *(void *)(v22 + 120);
  uint64_t v56 = *(void *)(v22 + 128);
LABEL_16:
  _s10OmniSearch0B6ResultVWOcTm_2(v56, v57, (void (*)(void))type metadata accessor for SearchResult);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_45_0();
  return v59(v58, v59, v60, v61, v62, v63, v64, v65, a9, a10, a11, a12, a13, a14);
}

uint64_t closure #3 in EmailContentManager.hydrateEmailResults(_:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();

  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t closure #3 in EmailContentManager.hydrateEmailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_71();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_135();
  a20 = v22;
  swift_release();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain();
  id v26 = (void *)Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  BOOL v28 = OUTLINED_FUNCTION_51_1(v27);
  uint64_t v29 = *(void **)(v22 + 232);
  unint64_t v30 = *(void *)(v22 + 200);
  if (v28)
  {
    a9 = v22 + 112;
    a10 = *(void **)(v22 + 208);
    uint64_t v31 = *(void *)(v22 + 192);
    uint64_t v32 = (_DWORD *)OUTLINED_FUNCTION_14_1();
    a11 = swift_slowAlloc();
    *uint64_t v32 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v22 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v30, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_71_8(&dword_257DC6000, v33, v34, "EmailContentManager: timeout when fetching email body for %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  _s10OmniSearch0B6ResultVWOcTm_2(*(void *)(v22 + 128), *(void *)(v22 + 120), (void (*)(void))type metadata accessor for SearchResult);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_45_0();
  return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14);
}

uint64_t closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  type metadata accessor for EmailDocument(0);
  v4[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:), 0, 0);
}

uint64_t closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:)()
{
  OUTLINED_FUNCTION_27();
  if (one-time initialization token for contentRequestOptions != -1) {
    swift_once();
  }
  uint64_t v1 = static EmailContentManager.contentRequestOptions;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:);
  return EMMessage.oms_requestRepresentation(with:)(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  uint64_t v15 = *(void **)(v14 + 72);
  if (v15)
  {
    EmailContentManager.createEmailDoc(message:contentRep:)(*(void **)(v14 + 32), *(void **)(v14 + 72), *(void *)(v14 + 56));
    uint64_t v23 = *(void *)(v14 + 56);
    uint64_t v24 = *(void *)(v14 + 40);
    uint64_t v25 = *(void *)(v14 + 24);

    outlined init with take of EmailDocument(v23, v25, (void (*)(void))type metadata accessor for EmailDocument);
    type metadata accessor for SearchResultItem(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = type metadata accessor for SearchResult(0);
    os_log_type_t v27 = *(void **)(v24 + *(int *)(v26 + 20));
    BOOL v28 = (void *)(v25 + *(int *)(v26 + 24));
    *BOOL v28 = 0;
    v28[1] = 0;
    *(void *)(v25 + *(int *)(v26 + 20)) = v27;
    id v29 = v27;
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logging.search);
    os_signpost_type_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_50_11(&dword_257DC6000, v19, v20, "EmailContentManager: EM Content Representation is nil");
      OUTLINED_FUNCTION_34();
    }
    uint64_t v21 = *(void *)(v14 + 40);
    uint64_t v22 = *(void *)(v14 + 24);

    _s10OmniSearch0B6ResultVWOcTm_2(v21, v22, (void (*)(void))type metadata accessor for SearchResult);
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_45_0();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14);
}

uint64_t EMMessage.oms_requestRepresentation(with:)(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OSSignpostID();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](EMMessage.oms_requestRepresentation(with:), 0, 0);
}

uint64_t EMMessage.oms_requestRepresentation(with:)()
{
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[2].i64[1];
  uint64_t v2 = type metadata accessor for OSSignposter();
  v0[7].i64[0] = __swift_project_value_buffer(v2, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  id v3 = v1;
  uint64_t v4 = OSSignposter.logHandle.getter();
  os_signpost_type_t v5 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v6 = (void *)v0[2].i64[1];
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[5].i64[0] + 16);
    OUTLINED_FUNCTION_64_0();
    v7();
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    *(_DWORD *)uint64_t v8 = 134217984;
    id v9 = objc_msgSend(v6, sel_objectID);
    id v10 = objc_msgSend(v9, sel_globalMessageID);

    v0[1].i64[1] = (uint64_t)v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    os_signpost_id_t v11 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v4, v5, v11, "EmailContentManager.oms_requestRepresentation", "Requesting body for message id: %lld", v8, 0xCu);
    OUTLINED_FUNCTION_34();

    OUTLINED_FUNCTION_16_1();
    v12();
    uint64_t v13 = v22;
  }
  else
  {
    uint64_t v14 = v0[5].i64[0];
    uint64_t v15 = (void *)v0[2].i64[1];

    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  }
  uint64_t v16 = v0[5].i64[0];
  int8x16_t v23 = v0[2];
  v13(v0[6].i64[0], v0[6].i64[1], v0[4].i64[1]);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v0[7].i64[1] = OUTLINED_FUNCTION_160();
  v0[8].i64[0] = *(void *)(v16 + 8);
  v0[8].i64[1] = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v17 = OUTLINED_FUNCTION_74_8();
  v18(v17);
  uint64_t v19 = (int8x16_t *)swift_task_alloc();
  v0[9].i64[0] = (uint64_t)v19;
  v19[1] = vextq_s8(v23, v23, 8uLL);
  uint64_t v20 = (void *)swift_task_alloc();
  v0[9].i64[1] = (uint64_t)v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EMContentRepresentation?);
  *uint64_t v20 = v0;
  v20[1] = EMMessage.oms_requestRepresentation(with:);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2318]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  os_signpost_id_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  uint64_t v14 = v0[2];
  uint64_t v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v2 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = v0[7];
    id v3 = v0[8];
    os_signpost_type_t v5 = v0[6];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x263F90238])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v7 = 0;
    uint64_t v8 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v1, v2, v8, "EmailContentManager.oms_requestRepresentation", v6, v7, 2u);
    OUTLINED_FUNCTION_34();
  }
  id v9 = (void (*)(uint64_t, uint64_t))v0[16];
  id v10 = v0[11];
  os_signpost_id_t v11 = v0[9];

  v9(v10, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v14);
}

uint64_t EmailContentManager.mailURLFromId(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[6] = v2;
  v1[7] = v0;
  v1[5] = v3;
  uint64_t v4 = type metadata accessor for URL();
  v1[8] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v1[9] = v5;
  v1[10] = OUTLINED_FUNCTION_49_1();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_81(v6);
  v1[11] = OUTLINED_FUNCTION_50_0();
  v1[12] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;

  uint64_t v1 = v0[6];
  uint64_t v2 = v0[5];
  uint64_t v3 = objc_msgSend(*(id *)(v0[7] + 16), sel_messageRepository);
  uint64_t v4 = (void *)MEMORY[0x25A2C7AB0](v2, v1);
  uint64_t v5 = objc_msgSend(v3, sel_messageForSearchableItemIdentifier_, v4);

  uint64_t v6 = objc_msgSend(v5, sel_result);
  v0[13] = v6;

  uint64_t v7 = swift_task_alloc();
  v0[14] = v7;
  *(void *)(v7 + 16) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EMContentRepresentation?);
  *uint64_t v8 = v0;
  v8[1] = EmailContentManager.mailURLFromId(_:);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2318]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v21;

  uint64_t v1 = *(void **)(v0 + 32);
  if (!v1)
  {

LABEL_8:
    id v10 = 0;
    uint64_t v11 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = objc_msgSend(*(id *)(v0 + 32), sel_publicMessageURL);
  if (v2)
  {
    uint64_t v3 = v2;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  __swift_storeEnumTagSinglePayload(v6, v4, 1, *(void *)(v0 + 64));
  outlined init with take of EagerResolutionService?(v6, v5, &demangling cache variable for type metadata for URL?);
  uint64_t v7 = OUTLINED_FUNCTION_9_1(v5);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void **)(v0 + 104);
  if (v7)
  {

    outlined destroy of EagerResolutionService?(v8, &demangling cache variable for type metadata for URL?);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_64_0();
  v12();
  outlined destroy of EagerResolutionService?(v8, &demangling cache variable for type metadata for URL?);
  uint64_t v13 = URL.absoluteString.getter();
  uint64_t v15 = v14;
  uint64_t v16 = OUTLINED_FUNCTION_77_7();
  v17(v16);
  *(void *)(v0 + 16) = v13;
  *(void *)(v0 + 24) = v15;
  lazy protocol witness table accessor for type String and conformance String();
  id v10 = StringProtocol.removingPercentEncoding.getter();
  uint64_t v11 = v18;

  swift_bridgeObjectRelease();
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v19(v10, v11);
}

void closure #1 in EmailContentManager.mailURLFromId(_:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  id v7 = objc_msgSend(self, sel_optionsWithRequestedRepresentationType_networkUsage_includeSuggestions_, *MEMORY[0x263F3B120], 2, 2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed EMContentRepresentation?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_5;
  id v10 = _Block_copy(aBlock);
  swift_release();
  id v11 = objc_msgSend(a2, sel_requestRepresentationWithOptions_completionHandler_, v7, v10);
  _Block_release(v10);
}

void thunk for @escaping @callee_guaranteed (@guaranteed EMContentRepresentation?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t EmailContentManager.mailIDForMailURL(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_81(v4);
  v1[6] = OUTLINED_FUNCTION_49_1();
  uint64_t v5 = type metadata accessor for URL();
  v1[7] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v1[8] = v6;
  v1[9] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t EmailContentManager.mailIDForMailURL(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_71();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_135();
  a20 = v22;
  uint64_t v26 = v22[6];
  uint64_t v25 = v22[7];
  URL.init(string:)();
  if (__swift_getEnumTagSinglePayload(v26, 1, v25) == 1)
  {
    outlined destroy of EagerResolutionService?(v22[6], &demangling cache variable for type metadata for URL?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)static Logging.search);
    swift_bridgeObjectRetain_n();
    BOOL v28 = (void *)Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    BOOL v30 = OUTLINED_FUNCTION_51_1(v29);
    unint64_t v31 = v22[4];
    if (v30)
    {
      a10 = v22[3];
      uint64_t v32 = (_DWORD *)OUTLINED_FUNCTION_14_1();
      a11 = swift_slowAlloc();
      *uint64_t v32 = 136315138;
      swift_bridgeObjectRetain();
      v22[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a10, v31, &a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_71_8(&dword_257DC6000, v33, v34, "Can't convert to URL: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v35 = v22[5];
    (*(void (**)(void, void, void))(v22[8] + 32))(v22[9], v22[6], v22[7]);
    uint64_t v36 = *(void **)(v35 + 16);
    id v37 = objc_msgSend(v36, sel_messageRepository);
    URL._bridgeToObjectiveC()(v38);
    uint64_t v40 = v39;
    id v41 = objc_msgSend(v37, sel_messageObjectIDForURL_, v39);

    id v42 = objc_msgSend(v41, sel_result);
    id v43 = objc_msgSend(v36, sel_messageRepository);
    id v44 = objc_msgSend(v43, sel_messageForObjectID_, v42);

    id v45 = objc_msgSend(v44, sel_result);
    id v46 = objc_msgSend(v45, sel_searchableMessageID);
    uint64_t v47 = v46;
    if (v46)
    {
      id v48 = objc_msgSend(v46, sel_stringValue);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = OUTLINED_FUNCTION_53_10();
      v50(v49);
    }
    else
    {
      uint64_t v51 = OUTLINED_FUNCTION_53_10();
      v52(v51);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_45_0();
  return v56(v53, v54, v55, v56, v57, v58, v59, v60, a9, a10, a11, a12, a13, a14);
}

uint64_t EmailContentManager.messages(for:)()
{
  uint64_t v1 = v0;
  uint64_t v62 = type metadata accessor for OSSignpostError();
  OUTLINED_FUNCTION_1();
  uint64_t v67 = v2;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v66 = v4;
  OUTLINED_FUNCTION_26_8();
  uint64_t v68 = type metadata accessor for OSSignpostID();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  id v10 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_88_6();
  MEMORY[0x270FA5388](v11);
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for OSSignposter();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v63 = v13;
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v16 = v10;
    uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v14, v15, v18, "EmailContentManager.messages(for:)", "", v17, 2u);
    id v10 = v16;
    OUTLINED_FUNCTION_34();
  }

  OUTLINED_FUNCTION_64_0();
  v19();
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v65 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v64 = *(void *)(v6 + 8);
  OUTLINED_FUNCTION_26_2();
  v20();
  id v21 = objc_msgSend(*(id *)(v1 + 16), sel_messageRepository);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v23 = objc_msgSend(v21, sel_messageObjectIDsForSearchableItemIdentifiers_, isa);

  id v24 = objc_msgSend(v23, sel_result);
  id v25 = objc_msgSend(v24, sel_objectIDs);
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for EMMessageObjectID);
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for EMMessage);
  Swift::Int v27 = Dictionary.init(dictionaryLiteral:)();
  id v28 = v21;
  uint64_t v29 = specialized Sequence.reduce<A>(into:_:)(v27, v26, v28);
  swift_bridgeObjectRelease();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  unint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    id v60 = v24;
    uint64_t v34 = v33;
    uint64_t v35 = (void *)swift_slowAlloc();
    v59[1] = v35;
    *(_DWORD *)uint64_t v34 = 134218498;
    uint64_t v69 = *(void *)(v29 + 16);
    v70[0] = (uint64_t)v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v61 = v10;
    swift_bridgeObjectRetain();
    uint64_t v36 = Dictionary.Keys.description.getter();
    v59[0] = v28;
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, v70);
    OUTLINED_FUNCTION_82_6(v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v40 = Dictionary.Values.description.getter();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, v70);
    OUTLINED_FUNCTION_82_6(v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v31, v32, "EmailContentManager: found %ld messages, mail message id keys: %s, values: %s", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v45 = v66;
  uint64_t v44 = v67;
  id v46 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v47 = v62;
    OUTLINED_FUNCTION_164_0();
    if (v48() != *MEMORY[0x263F90238]) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v47);
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_79_6();
    _os_signpost_emit_with_name_impl(v49, v50, v51, v52, v53, v54, v55, v56);
    OUTLINED_FUNCTION_34();
  }

  OUTLINED_FUNCTION_26_2();
  v57();
  swift_release();
  return v29;
}

uint64_t EmailContentManager.createEmailDoc(message:contentRep:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v224 = a2;
  uint64_t v207 = a3;
  type metadata accessor for OSSignpostError();
  OUTLINED_FUNCTION_1();
  uint64_t v215 = v6;
  uint64_t v216 = v5;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_185_0();
  uint64_t v201 = v7;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_88_6();
  MEMORY[0x270FA5388](v9);
  v208 = (char *)&v193 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_184_0();
  uint64_t v204 = v13;
  OUTLINED_FUNCTION_26_8();
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = OUTLINED_FUNCTION_81(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_184_0();
  uint64_t v203 = v16;
  uint64_t v17 = OUTLINED_FUNCTION_26_8();
  uint64_t v200 = type metadata accessor for EmailDocument(v17);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_185_0();
  uint64_t v199 = v19;
  OUTLINED_FUNCTION_113_1();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  id v23 = (char *)&v193 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v209 = (uint64_t)&v193 - v24;
  OUTLINED_FUNCTION_26_8();
  uint64_t v25 = type metadata accessor for String.Encoding();
  uint64_t v26 = OUTLINED_FUNCTION_81(v25);
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_184_0();
  uint64_t v210 = v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v29 = OUTLINED_FUNCTION_81(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_184_0();
  uint64_t v221 = v30;
  OUTLINED_FUNCTION_26_8();
  uint64_t v223 = type metadata accessor for URL();
  OUTLINED_FUNCTION_1();
  uint64_t v218 = v31;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_185_0();
  id v217 = v33;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v34);
  v214 = (char *)&v193 - v35;
  OUTLINED_FUNCTION_26_8();
  uint64_t v36 = type metadata accessor for OSSignpostID();
  OUTLINED_FUNCTION_1();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_185_0();
  uint64_t v213 = v40;
  OUTLINED_FUNCTION_113_1();
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (void (*)(void))((char *)&v193 - v43);
  MEMORY[0x270FA5388](v42);
  v206 = (char *)&v193 - v45;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v46);
  id v48 = (char *)&v193 - v47;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v49);
  os_signpost_type_t v51 = (char *)&v193 - v50;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  v222 = v44;
  uint64_t v212 = v3;
  v205 = v23;
  uint64_t v52 = type metadata accessor for OSSignposter();
  uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  id v54 = a1;
  v229 = v51;
  id v55 = v54;
  uint64_t v219 = v53;
  uint32_t v56 = OSSignposter.logHandle.getter();
  int v57 = static os_signpost_type_t.begin.getter();
  char v58 = OS_os_log.signpostsEnabled.getter();
  v202 = v55;
  if (v58)
  {
    v220 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 16);
    v197 = v48;
    OUTLINED_FUNCTION_64_0();
    v59();
    id v60 = (uint8_t *)swift_slowAlloc();
    LODWORD(v198) = v57;
    uint64_t v61 = v60;
    *(_DWORD *)id v60 = 134217984;
    v196 = v60 + 4;
    uint64_t v62 = v36;
    id v63 = [v55 (SEL)0x1F65F1598];
    uint64_t v64 = v38;
    id v65 = [v63 (SEL)0x1F6D23E80];

    uint64_t v36 = v62;
    uint64_t v66 = (uint64_t)v197;
    *(void *)&long long v226 = v65;
    uint64_t v38 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    os_signpost_id_t v67 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v56, (os_signpost_type_t)v198, v67, "EmailContentManager.createEmailDoc", "Creating doc for message: %lld", v61, 0xCu);
    OUTLINED_FUNCTION_34();

    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v66, v36);
    v220(v66, v229, v36);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v48, v229, v36);
  }
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v68 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v69 = *(void (**)(void))(v38 + 8);
  v220 = (void (*)(uint64_t, char *, uint64_t))v36;
  v229 = (char *)(v38 + 8);
  OUTLINED_FUNCTION_26_2();
  v69();
  id v70 = objc_msgSend(v224, sel_contentURL);
  uint64_t v71 = v223;
  if (!v70)
  {
    uint64_t v75 = v221;
    __swift_storeEnumTagSinglePayload(v221, 1, 1, v223);
    goto LABEL_13;
  }
  unint64_t v72 = v70;
  id v73 = v217;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v74 = *(void (**)(uint64_t, id, uint64_t))(v218 + 32);
  uint64_t v75 = v221;
  v74(v221, v73, v71);
  __swift_storeEnumTagSinglePayload(v75, 0, 1, v71);
  if (__swift_getEnumTagSinglePayload(v75, 1, v71) == 1)
  {
LABEL_13:
    outlined destroy of EagerResolutionService?(v75, &demangling cache variable for type metadata for URL?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v87 = type metadata accessor for Logger();
    __swift_project_value_buffer(v87, (uint64_t)static Logging.search);
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      os_log_type_t v90 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)os_log_type_t v90 = 0;
      _os_log_impl(&dword_257DC6000, v88, v89, "EmailContentManager: no contentURL", v90, 2u);
      OUTLINED_FUNCTION_34();
    }

    lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
    uint64_t v91 = swift_allocError();
    *(void *)uint64_t v92 = 0xD000000000000022;
    *(void *)(v92 + 8) = 0x8000000258681650;
    *(unsigned char *)(v92 + 16) = 1;
    swift_willThrow();
    uint64_t v82 = (void *)OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
      goto LABEL_50;
    }
    swift_retain();
    uint64_t v93 = v212;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v94 = v215;
    uint64_t v95 = v216;
    OUTLINED_FUNCTION_164_0();
    int v97 = v96();
    int v98 = *MEMORY[0x263F90238];
    uint64_t v221 = v91;
    if (v97 != v98) {
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v95);
    }
    goto LABEL_49;
  }
  v222 = v69;
  id v76 = v214;
  v74((uint64_t)v214, (id)v75, v71);
  uint64_t v77 = v76;
  id v78 = objc_msgSend(v224, sel_searchableItem);
  static String.Encoding.utf8.getter();
  uint64_t v79 = v211;
  uint64_t v80 = String.init(contentsOf:encoding:)();
  uint64_t v221 = v79;
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v218 + 8))(v77, v71);

    uint64_t v82 = (void *)OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    char v83 = OS_os_log.signpostsEnabled.getter();
    uint64_t v69 = v222;
    if ((v83 & 1) == 0) {
      goto LABEL_50;
    }
    swift_retain();
    uint64_t v84 = v201;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v85 = v215;
    OUTLINED_FUNCTION_164_0();
    if (v86() != *MEMORY[0x263F90238]) {
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v216);
    }
LABEL_49:
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_78_7(&dword_257DC6000, v138, v139, v140, "EmailContentManager.createEmailDoc");
    OUTLINED_FUNCTION_34();
LABEL_50:

    OUTLINED_FUNCTION_26_2();
    v69();
    return swift_release();
  }
  uint64_t v99 = v80;
  uint64_t v100 = v81;
  id v217 = v78;
  uint64_t v101 = self;
  uint64_t v102 = (void *)MEMORY[0x25A2C7AB0](v99, v100);
  swift_bridgeObjectRelease();
  id v103 = objc_msgSend(v101, sel_snippetFromHTMLBody_options_maxLength_preservingQuotedForwardedContent_, v102, 32, 0x7FFFFFFFFFFFFFFFLL, 1);

  uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v106 = v105;

  uint64_t v107 = (uint64_t *)v68;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v108 = type metadata accessor for Logger();
  uint64_t v109 = __swift_project_value_buffer(v108, (uint64_t)static Logging.search);
  v110 = v202;
  swift_bridgeObjectRetain_n();
  id v111 = v110;
  uint64_t v212 = v109;
  id v112 = Logger.logObject.getter();
  os_log_type_t v113 = static os_log_type_t.info.getter();
  BOOL v114 = os_log_type_enabled(v112, v113);
  uint64_t v213 = v106;
  id v193 = v111;
  if (v114)
  {
    v115 = (_DWORD *)swift_slowAlloc();
    uint64_t v211 = v104;
    int v116 = v115;
    _DWORD *v115 = 134218240;
    id v117 = objc_msgSend(v111, sel_objectID);
    id v118 = objc_msgSend(v117, sel_globalMessageID);

    *(void *)&long long v226 = v118;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *((_WORD *)v116 + 6) = 2048;
    uint64_t v119 = String.count.getter();
    swift_bridgeObjectRelease();
    *(void *)&long long v226 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v104 = v211;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v112, v113, "EmailContentManager: Got body for mail messageId %lld with length %ld", (uint8_t *)v116, 0x16u);
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v120 = v224;
  id v121 = objc_msgSend(v224, sel_searchableItem, v193);
  id v122 = v217;
  if (v121
    && (id v123 = OUTLINED_FUNCTION_90_5(v121),
        v112,
        (uint64_t v124 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.attachmentNames.getter(v123)) != 0))
  {
    uint64_t v211 = v124;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v211 = MEMORY[0x263F8EE78];
  }
  id v125 = objc_msgSend(v120, sel_searchableItem);
  if (v125
    && (id v126 = OUTLINED_FUNCTION_90_5(v125),
        v112,
        (uint64_t v127 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.attachmentTypes.getter(v126)) != 0))
  {
    uint64_t v210 = v127;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v210 = MEMORY[0x263F8EE78];
  }
  id v128 = objc_msgSend(v120, sel_searchableItem);
  if (v128
    && (id v129 = OUTLINED_FUNCTION_90_5(v128),
        v112,
        (uint64_t v130 = (void *)outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.attachmentPaths.getter(v129)) != 0))
  {
    v202 = v130;
  }
  else
  {
    swift_bridgeObjectRelease();
    v202 = (void *)MEMORY[0x263F8EE78];
  }
  id v131 = objc_msgSend(v120, sel_searchableItem);
  if (v131
    && (id v132 = OUTLINED_FUNCTION_90_5(v131),
        v112,
        id v133 = objc_msgSend(v132, sel_mailRead),
        v132,
        v133))
  {
    unsigned int v134 = objc_msgSend(v133, sel_BOOLValue);

    int v135 = v134 ^ 1;
  }
  else
  {
    int v135 = 2;
  }
  LODWORD(v201) = v135;
  if (!v122
    || (id v136 = objc_msgSend(v122, sel_attributeSet),
        id v137 = objc_msgSend(v122, sel_uniqueIdentifier),
        static String._unconditionallyBridgeFromObjectiveC(_:)(),
        v137,
        !v136))
  {
    long long v226 = 0u;
    long long v227 = 0u;
    uint64_t v142 = v193;
LABEL_52:
    outlined destroy of EagerResolutionService?((uint64_t)&v226, (uint64_t *)&demangling cache variable for type metadata for Any?);
    goto LABEL_53;
  }
  if (objc_msgSend(v136, sel_attributeForKey_, *MEMORY[0x263F029A8]))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v225, 0, sizeof(v225));
  }
  uint64_t v142 = v193;
  outlined init with take of EagerResolutionService?((uint64_t)v225, (uint64_t)&v226, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!*((void *)&v227 + 1)) {
    goto LABEL_52;
  }
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_52_11();
    unint64_t v143 = *((void *)&v225[0] + 1);
    uint64_t v195 = *(void *)&v225[0];
    goto LABEL_54;
  }
LABEL_53:
  OUTLINED_FUNCTION_52_11();
  uint64_t v195 = 0;
  unint64_t v143 = 0xE000000000000000;
LABEL_54:
  unint64_t v194 = v143;
  uint64_t v144 = v104;
  id v145 = objc_msgSend(v142, sel_subject);
  v146 = v145;
  v198 = v107;
  if (v145)
  {
    id v147 = objc_msgSend(v145, sel_subjectString);

    uint64_t v148 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v146 = v149;
  }
  else
  {
    uint64_t v148 = 0;
  }
  id v150 = objc_msgSend(v142, sel_senderList);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ECEmailAddressConvertible);
  unint64_t v151 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  EmailContentManager.convertEmailToStringArray(_:)(v151);
  uint64_t v153 = v152;
  swift_bridgeObjectRelease();
  id v154 = objc_msgSend(v142, sel_toList);
  unint64_t v155 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  EmailContentManager.convertEmailToStringArray(_:)(v155);
  uint64_t v157 = v156;
  swift_bridgeObjectRelease();
  id v158 = objc_msgSend(v142, sel_ccList);
  unint64_t v159 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  EmailContentManager.convertEmailToStringArray(_:)(v159);
  uint64_t v161 = v160;
  swift_bridgeObjectRelease();
  id v162 = objc_msgSend(v142, sel_date);
  uint64_t v163 = v203;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v164 = type metadata accessor for PartialExtractedAttributes(0);
  long long v226 = 0u;
  long long v227 = 0u;
  uint64_t v228 = 0;
  uint64_t v165 = v204;
  __swift_storeEnumTagSinglePayload(v204, 1, 1, v164);
  type metadata accessor for FeatureFlagService();
  uint64_t v166 = swift_allocObject();
  BYTE1(v191) = 1;
  LOBYTE(v191) = v201;
  uint64_t v190 = v161;
  uint64_t v167 = v209;
  EmailDocument.init(id:mailMessageId:subject:body:authorNames:from:to:cc:date:attachmentNames:attachmentTypes:attachmentPaths:unread:hydratable:dataDetectorResults:extractedEventsLLMConsumableDescription:partialExtractedAttributes:csItem:featureFlagService:)((uint64_t)v197, (uint64_t)v196, v195, v194, v148, (uint64_t)v146, v144, v213, MEMORY[0x263F8EE78], v153, v157, v190, v163, v211, v210, (uint64_t)v202, v191, (uint64_t)&v226, 0,
    0,
    v165,
    0,
    v166,
    v192,
    (uint64_t)v193,
    v194,
    v195,
    (uint64_t)v196,
    (char)v197,
    SBYTE1(v197),
    v198,
    v199,
    v200,
    v201,
    v202);
  uint64_t v168 = (uint64_t)v205;
  _s10OmniSearch0B6ResultVWOcTm_2(v167, (uint64_t)v205, (void (*)(void))type metadata accessor for EmailDocument);
  v169 = Logger.logObject.getter();
  os_log_type_t v170 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v169, v170))
  {
    v171 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v226 = swift_slowAlloc();
    *(_DWORD *)v171 = 136642819;
    _s10OmniSearch0B6ResultVWOcTm_2(v168, v199, (void (*)(void))type metadata accessor for EmailDocument);
    uint64_t v172 = String.init<A>(describing:)();
    *(void *)&v225[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v172, v173, (uint64_t *)&v226);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B10ResultItemOWOhTm_4(v168, (void (*)(void))type metadata accessor for EmailDocument);
    _os_log_impl(&dword_257DC6000, v169, v170, "EmailContentManager: returning %{sensitive}s", v171, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    _s10OmniSearch0B10ResultItemOWOhTm_4(v168, (void (*)(void))type metadata accessor for EmailDocument);
  }

  OUTLINED_FUNCTION_16_1();
  v174();
  v175 = v220;
  uint64_t v176 = v216;
  v177 = v208;
  v178 = v206;
  outlined init with take of EmailDocument(v209, v207, (void (*)(void))type metadata accessor for EmailDocument);
  v179 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v180 = v215;
    OUTLINED_FUNCTION_164_0();
    if (v181() != *MEMORY[0x263F90238]) {
      (*(void (**)(char *, uint64_t))(v180 + 8))(v177, v176);
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_79_6();
    _os_signpost_emit_with_name_impl(v182, v183, v184, v185, v186, v187, v188, v189);
    OUTLINED_FUNCTION_34();
  }

  ((void (*)(char *, void (*)(uint64_t, char *, uint64_t)))v222)(v178, v175);
  return swift_release();
}

void EmailContentManager.convertEmailToStringArray(_:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v4 = (void *)MEMORY[0x25A2C8550](v3, a1);
        }
        else
        {
          uint64_t v4 = *(void **)(a1 + 8 * v3 + 32);
          swift_unknownObjectRetain();
        }
        id v5 = objc_msgSend(v4, sel_stringValue);
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v7;
        swift_unknownObjectRelease();

        unint64_t v9 = *(void *)(v11 + 16);
        if (v9 >= *(void *)(v11 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v3;
        *(void *)(v11 + 16) = v9 + 1;
        uint64_t v10 = v11 + 16 * v9;
        *(void *)(v10 + 32) = v6;
        *(void *)(v10 + 40) = v8;
      }
      while (v2 != v3);
    }
  }
}

uint64_t EmailContentManager.deinit()
{
  return v0;
}

uint64_t EmailContentManager.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 24, 7);
}

void closure #1 in EMMessage.oms_requestRepresentation(with:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = partial apply for closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:);
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed EMContentRepresentation?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_27;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  id v12 = objc_msgSend(a2, sel_requestRepresentationWithOptions_completionHandler_, a3, v11);
  _Block_release(v11);
}

uint64_t closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:)(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  return CheckedContinuation.resume(returning:)();
}

uint64_t @nonobjc EMContentRequestOptions.init(builder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v9[4] = partial apply for thunk for @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ();
  v9[5] = v5;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ();
  v9[3] = &block_descriptor_33;
  uint64_t v6 = _Block_copy(v9);
  swift_retain();
  id v7 = objc_msgSend(v2, sel_initWithBuilder_, v6);
  _Block_release(v6);
  swift_release();
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0) {
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t _s10OmniSearch0B10ResultItemOWOhTm_4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t outlined init with take of EmailDocument(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t sub_2583C0F40()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t partial apply for closure #3 in EmailContentManager.hydrateEmailResults(_:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v8 = swift_task_alloc();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_44_0(v8);
  *unint64_t v9 = v10;
  v9[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return closure #3 in EmailContentManager.hydrateEmailResults(_:)(v4, v2, v5, v6, v7);
}

void partial apply for closure #1 in EmailContentManager.mailURLFromId(_:)(uint64_t a1)
{
  closure #1 in EmailContentManager.mailURLFromId(_:)(a1, *(void **)(v1 + 16));
}

uint64_t type metadata accessor for EmailContentManager()
{
  return self;
}

uint64_t method lookup function for EmailContentManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmailContentManager);
}

uint64_t dispatch thunk of EmailContentManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EmailContentManager.hydrateEmailResults(_:)(uint64_t a1)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_44_0(v3);
  *uint64_t v4 = v5;
  v4[1] = dispatch thunk of AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:);
  return v7(a1);
}

uint64_t dispatch thunk of EmailContentManager.mailURLFromId(_:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_85_8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = dispatch thunk of EmailContentManager.mailURLFromId(_:);
  uint64_t v3 = OUTLINED_FUNCTION_86_5();
  return v4(v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  return v7(v4, v2);
}

uint64_t dispatch thunk of EmailContentManager.mailIDForMailURL(_:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_85_8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = dispatch thunk of EmailContentManager.mailIDForMailURL(_:);
  uint64_t v3 = OUTLINED_FUNCTION_86_5();
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError()
{
  unint64_t result = lazy protocol witness table cache variable for type OmniSearchError and conformance OmniSearchError;
  if (!lazy protocol witness table cache variable for type OmniSearchError and conformance OmniSearchError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OmniSearchError and conformance OmniSearchError);
  }
  return result;
}

uint64_t _s10OmniSearch0B6ResultVWOcTm_2(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_2583C1510()
{
  uint64_t v4 = type metadata accessor for SearchResult(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = (int *)((v5 + 24) & ~v5);
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);

  uint64_t v8 = (id *)((char *)v6 + v0);
  type metadata accessor for SearchResultItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v351 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v9 = (int *)type metadata accessor for EmailDocument(0);
      uint64_t v10 = OUTLINED_FUNCTION_38_0();
      OUTLINED_FUNCTION_1_0();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      if (*(id *)((char *)v8 + v9[19]))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v12 = (int *)((char *)v8 + v9[21]);
      uint64_t v13 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        uint64_t v345 = (v5 + 24) & ~v5;
        swift_bridgeObjectRelease();
        uint64_t v14 = OUTLINED_FUNCTION_185();
        if (!OUTLINED_FUNCTION_8_0(v14))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v5 + 24) & ~v5) + 0x8C)))
          {
            uint64_t v15 = OUTLINED_FUNCTION_24_1();
            v16(v15);
          }
          uint64_t v13 = v3 + *(int *)(((v5 + 24) & ~v5) + 0x90);
          if (!OUTLINED_FUNCTION_9_1(v13))
          {
            uint64_t v17 = OUTLINED_FUNCTION_24_1();
            v18(v17);
          }
        }
        uint64_t v19 = OUTLINED_FUNCTION_181();
        if (!OUTLINED_FUNCTION_8_0(v19))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v5 + 24) & ~v5) + 0x70)))
          {
            uint64_t v20 = OUTLINED_FUNCTION_24_1();
            v21(v20);
          }
          uint64_t v13 = v3 + *(int *)(((v5 + 24) & ~v5) + 0x74);
          if (!OUTLINED_FUNCTION_9_1(v13))
          {
            uint64_t v22 = OUTLINED_FUNCTION_24_1();
            v23(v22);
          }
        }
        uint64_t v24 = OUTLINED_FUNCTION_180();
        v343 = v12;
        if (!OUTLINED_FUNCTION_8_0(v24))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v3 + *(int *)(((v5 + 24) & ~v5) + 0x74);
          type metadata accessor for URL();
          if (!OUTLINED_FUNCTION_21_1(v5))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v25();
          }
          OUTLINED_FUNCTION_2_0();
          uint64_t v13 = v3 + v6[31];
          if (!OUTLINED_FUNCTION_48_0(v13))
          {
            OUTLINED_FUNCTION_151();
            v26();
          }
          if (!OUTLINED_FUNCTION_121())
          {
            uint64_t v27 = OUTLINED_FUNCTION_24_1();
            v28(v27);
          }
        }
        uint64_t v29 = OUTLINED_FUNCTION_182();
        if (!OUTLINED_FUNCTION_8_0(v29))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[27]))
          {
            uint64_t v30 = OUTLINED_FUNCTION_24_1();
            v31(v30);
          }
          uint64_t v13 = v3 + v6[28];
          if (!OUTLINED_FUNCTION_9_1(v13))
          {
            uint64_t v32 = OUTLINED_FUNCTION_24_1();
            v33(v32);
          }
        }
        uint64_t v34 = OUTLINED_FUNCTION_183();
        if (!OUTLINED_FUNCTION_8_0(v34))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[24]))
          {
            uint64_t v35 = OUTLINED_FUNCTION_24_1();
            v36(v35);
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[25]))
          {
            uint64_t v37 = OUTLINED_FUNCTION_24_1();
            v38(v37);
          }
          uint64_t v13 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v39();
          }
        }
        uint64_t v40 = OUTLINED_FUNCTION_179();
        if (!OUTLINED_FUNCTION_8_0(v40))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[22]))
          {
            uint64_t v41 = OUTLINED_FUNCTION_24_1();
            v42(v41);
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[23]))
          {
            uint64_t v43 = OUTLINED_FUNCTION_24_1();
            v44(v43);
          }
          uint64_t v13 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v45();
          }
        }
        uint64_t v46 = OUTLINED_FUNCTION_174();
        if (!OUTLINED_FUNCTION_8_0(v46))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v47 = v3 + v6[13];
          type metadata accessor for URL();
          if (!OUTLINED_FUNCTION_29_1(v47))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v48 = OUTLINED_FUNCTION_30_1();
            v49(v48);
          }
          if (!OUTLINED_FUNCTION_29_1(v3 + v6[14]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v50 = OUTLINED_FUNCTION_30_1();
            v51(v50);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_1_0();
          uint64_t v53 = *(void (**)(void))(v52 + 8);
          uint64_t v10 = v52 + 8;
          OUTLINED_FUNCTION_56_0();
          v53();
          OUTLINED_FUNCTION_56_0();
          v53();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          if (!OUTLINED_FUNCTION_51_12())
          {
            uint64_t v54 = OUTLINED_FUNCTION_24_1();
            v55(v54);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v12 = v343;
          uint64_t v13 = v349;
        }
        uint32_t v56 = (char *)v12 + *(int *)(v13 + 48);
        uint64_t v57 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_8_0(v57))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_88();
          if (!OUTLINED_FUNCTION_29_1(v13))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v58 = OUTLINED_FUNCTION_30_1();
            v59(v58);
          }
          if (!OUTLINED_FUNCTION_29_1((uint64_t)&v56[v6[15]]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v60 = OUTLINED_FUNCTION_30_1();
            v61(v60);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v5 = v10;
          unint64_t v9 = v12;
          uint64_t v12 = v343;
          uint64_t v13 = v349;
        }
        uint64_t v62 = (uint64_t)v12 + *(int *)(v13 + 52);
        uint64_t v63 = type metadata accessor for RestaurantReservation(0);
        uint64_t v6 = (int *)v345;
        if (!__swift_getEnumTagSinglePayload(v62, 1, v63))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_8_0(v64))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v65 = OUTLINED_FUNCTION_58();
            v66(v65);
          }
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          uint64_t v6 = (int *)v345;
        }
      }
      os_signpost_id_t v67 = (char *)v8 + v9[22];
      uint64_t v68 = (int *)type metadata accessor for PreExtractedCard(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v67[v68[10]]))
        {
          OUTLINED_FUNCTION_27_1();
          v69();
        }
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v67[v68[11]]))
        {
          OUTLINED_FUNCTION_27_1();
          v70();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v67[v68[15]]))
        {
          OUTLINED_FUNCTION_27_1();
          v71();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      unint64_t v72 = (char *)v8 + v9[23];
      uint64_t v73 = type metadata accessor for PreExtractedContact(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v72[*(int *)(v73 + 44)]))
        {
          OUTLINED_FUNCTION_27_1();
          v74();
        }
        OUTLINED_FUNCTION_7_1();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v72[*(int *)(v73 + 56)]))
        {
          OUTLINED_FUNCTION_27_1();
          v75();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_7_1();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      id v76 = (char *)v8 + v9[24];
      uint64_t v77 = type metadata accessor for PreExtractedSharedLink(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = type metadata accessor for URL();
        if (!OUTLINED_FUNCTION_8_0(v78))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v79 = OUTLINED_FUNCTION_58();
          v80(v79);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_48_0((uint64_t)&v76[*(int *)(v77 + 48)]))
        {
          OUTLINED_FUNCTION_151();
          v81();
        }
        if (!OUTLINED_FUNCTION_54_0())
        {
          OUTLINED_FUNCTION_151();
          v82();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      uint64_t v83 = v9[25];
      goto LABEL_252;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v84 = (int *)type metadata accessor for MobileSMSDocument(0);
      uint64_t v85 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v86 = OUTLINED_FUNCTION_3_1();
        v87(v86);
      }
      uint64_t v88 = (char *)v8 + v84[11];
      uint64_t v89 = type metadata accessor for URL();
      uint64_t v90 = OUTLINED_FUNCTION_120();
      if (!__swift_getEnumTagSinglePayload(v90, v91, v89))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v88, v89);
      }
      uint64_t v351 = v7;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(id *)((char *)v8 + v84[17]))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v348 = v89;
      OUTLINED_FUNCTION_6_1();
      uint64_t v93 = (char *)v8 + v84[19];
      uint64_t v94 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_62_7())
      {
        swift_bridgeObjectRelease();
        uint64_t v350 = v94;
        uint64_t v95 = OUTLINED_FUNCTION_38_12();
        uint64_t v96 = type metadata accessor for RentalCarReservation(v95);
        if (!OUTLINED_FUNCTION_19_1(v96))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v97 = OUTLINED_FUNCTION_3_1();
            v98(v97);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v99 = OUTLINED_FUNCTION_3_1();
            v100(v99);
          }
        }
        uint64_t v101 = OUTLINED_FUNCTION_38_12();
        uint64_t v102 = type metadata accessor for TicketedTransportation(v101);
        if (!OUTLINED_FUNCTION_19_1(v102))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v103 = OUTLINED_FUNCTION_3_1();
            v104(v103);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v105 = OUTLINED_FUNCTION_3_1();
            v106(v105);
          }
        }
        uint64_t v107 = OUTLINED_FUNCTION_38_12();
        uint64_t v108 = type metadata accessor for TicketedShow(v107);
        if (!OUTLINED_FUNCTION_19_1(v108))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v109();
          }
          OUTLINED_FUNCTION_11_1();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v110 = OUTLINED_FUNCTION_3_1();
            v111(v110);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v112 = OUTLINED_FUNCTION_3_1();
            v113(v112);
          }
        }
        uint64_t v114 = OUTLINED_FUNCTION_38_12();
        uint64_t v115 = type metadata accessor for Appointment(v114);
        if (!OUTLINED_FUNCTION_19_1(v115))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v116 = OUTLINED_FUNCTION_3_1();
            v117(v116);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v118 = OUTLINED_FUNCTION_3_1();
            v119(v118);
          }
        }
        uint64_t v120 = OUTLINED_FUNCTION_38_12();
        uint64_t v121 = type metadata accessor for Party(v120);
        if (!OUTLINED_FUNCTION_19_1(v121))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v122 = OUTLINED_FUNCTION_3_1();
            v123(v122);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v124 = OUTLINED_FUNCTION_3_1();
            v125(v124);
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v126();
          }
        }
        uint64_t v127 = OUTLINED_FUNCTION_38_12();
        uint64_t v128 = type metadata accessor for Trip(v127);
        if (!OUTLINED_FUNCTION_19_1(v128))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v129 = OUTLINED_FUNCTION_3_1();
            v130(v129);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v131 = OUTLINED_FUNCTION_3_1();
            v132(v131);
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v133();
          }
        }
        uint64_t v134 = OUTLINED_FUNCTION_38_12();
        uint64_t v135 = type metadata accessor for FlightReservation(v134);
        if (!OUTLINED_FUNCTION_19_1(v135))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v136();
          }
          v344 = v93;
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v137();
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v138 = (char *)v6 + *(int *)(v5 + 72);
          uint64_t v139 = type metadata accessor for DateComponents();
          OUTLINED_FUNCTION_1_0();
          v141 = *(void (**)(char *, uint64_t))(v140 + 8);
          v141(v138, v139);
          v141((char *)v6 + *(int *)(v5 + 76), v139);
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v142 = OUTLINED_FUNCTION_120();
          if (!__swift_getEnumTagSinglePayload(v142, v143, v85))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v144 = OUTLINED_FUNCTION_3_1();
            v145(v144);
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v93 = v344;
          uint64_t v94 = v350;
        }
        uint64_t v146 = OUTLINED_FUNCTION_38_12();
        uint64_t v147 = type metadata accessor for HotelReservation(v146);
        if (!OUTLINED_FUNCTION_19_1(v147))
        {
          uint64_t v148 = v93;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v149 = (char *)v6 + *(int *)(v5 + 56);
          uint64_t v150 = type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_62_7())
          {
            OUTLINED_FUNCTION_1_0();
            (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v150);
          }
          uint64_t v152 = (char *)v6 + *(int *)(v5 + 60);
          if (!OUTLINED_FUNCTION_62_7())
          {
            OUTLINED_FUNCTION_1_0();
            (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v150);
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v93 = v148;
          uint64_t v94 = v350;
        }
        id v154 = &v93[*(int *)(v94 + 52)];
        uint64_t v155 = type metadata accessor for RestaurantReservation(0);
        uint64_t v6 = (int *)((v5 + 24) & ~v5);
        if (!OUTLINED_FUNCTION_41_0(v155))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v156 = &v154[*((int *)v93 + 14)];
          uint64_t v157 = type metadata accessor for DateComponents();
          uint64_t v158 = OUTLINED_FUNCTION_120();
          if (!__swift_getEnumTagSinglePayload(v158, v159, v157))
          {
            OUTLINED_FUNCTION_1_0();
            (*(void (**)(char *, uint64_t))(v160 + 8))(v156, v157);
          }
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          uint64_t v6 = (int *)((v5 + 24) & ~v5);
        }
      }
      uint64_t v161 = type metadata accessor for PreExtractedCard(0);
      if (!OUTLINED_FUNCTION_41_0(v161))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v162 = OUTLINED_FUNCTION_3_1();
          v163(v162);
        }
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v164 = OUTLINED_FUNCTION_3_1();
          v165(v164);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v166 = OUTLINED_FUNCTION_3_1();
          v167(v166);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
      }
      uint64_t v168 = type metadata accessor for PreExtractedContact(0);
      if (!OUTLINED_FUNCTION_41_0(v168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v169 = OUTLINED_FUNCTION_3_1();
          v170(v169);
        }
        OUTLINED_FUNCTION_14_2();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v171 = OUTLINED_FUNCTION_3_1();
          v172(v171);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_14_2();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v173 = type metadata accessor for PreExtractedSharedLink(0);
      if (!OUTLINED_FUNCTION_41_0(v173))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v174 = OUTLINED_FUNCTION_120();
        if (!__swift_getEnumTagSinglePayload(v174, v175, v348))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v176 = OUTLINED_FUNCTION_3_1();
          v177(v176);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        uint64_t v178 = OUTLINED_FUNCTION_120();
        if (!__swift_getEnumTagSinglePayload(v178, v179, v85))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v180 = OUTLINED_FUNCTION_3_1();
          v181(v180);
        }
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v182 = OUTLINED_FUNCTION_3_1();
          v183(v182);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
      }
      uint64_t v83 = v84[23];
      goto LABEL_252;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v184 = type metadata accessor for CalendarEvent(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v185 = OUTLINED_FUNCTION_3_1();
        v186(v185);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v187 = OUTLINED_FUNCTION_3_1();
        v188(v187);
      }
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      if (!*(id *)((char *)v8 + *(int *)(v184 + 52))) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 3u:
      uint64_t v351 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint32_t v189 = (int *)type metadata accessor for Photo(0);
      uint64_t v190 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v191 = OUTLINED_FUNCTION_3_1();
        v192(v191);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      id v193 = (int *)((char *)v8 + v189[17]);
      uint64_t v194 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        uint64_t v346 = (v5 + 24) & ~v5;
        swift_bridgeObjectRelease();
        uint64_t v195 = OUTLINED_FUNCTION_185();
        if (!OUTLINED_FUNCTION_8_0(v195))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v5 + 24) & ~v5) + 0x8C)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v196();
          }
          uint64_t v194 = v3 + *(int *)(((v5 + 24) & ~v5) + 0x90);
          if (!OUTLINED_FUNCTION_9_1(v194))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v197();
          }
        }
        uint64_t v198 = OUTLINED_FUNCTION_181();
        if (!OUTLINED_FUNCTION_8_0(v198))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v5 + 24) & ~v5) + 0x70)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v199();
          }
          uint64_t v194 = v3 + *(int *)(((v5 + 24) & ~v5) + 0x74);
          if (!OUTLINED_FUNCTION_9_1(v194))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v200();
          }
        }
        uint64_t v201 = OUTLINED_FUNCTION_180();
        v347 = v193;
        if (!OUTLINED_FUNCTION_8_0(v201))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v3 + *(int *)(((v5 + 24) & ~v5) + 0x74);
          type metadata accessor for URL();
          if (!OUTLINED_FUNCTION_21_1(v5))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v202();
          }
          OUTLINED_FUNCTION_2_0();
          uint64_t v194 = v3 + v6[31];
          if (!OUTLINED_FUNCTION_48_0(v194))
          {
            OUTLINED_FUNCTION_1_0();
            (*(void (**)(uint64_t, int *))(v203 + 8))(v194, v189);
          }
          if (!OUTLINED_FUNCTION_121())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v204();
          }
        }
        uint64_t v205 = OUTLINED_FUNCTION_182();
        if (!OUTLINED_FUNCTION_8_0(v205))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[27]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v206();
          }
          uint64_t v194 = v3 + v6[28];
          if (!OUTLINED_FUNCTION_9_1(v194))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v207();
          }
        }
        uint64_t v208 = OUTLINED_FUNCTION_183();
        if (!OUTLINED_FUNCTION_8_0(v208))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[24]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v209();
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[25]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v210();
          }
          uint64_t v194 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v211();
          }
        }
        uint64_t v212 = OUTLINED_FUNCTION_179();
        if (!OUTLINED_FUNCTION_8_0(v212))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[22]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v213();
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + v6[23]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v214();
          }
          uint64_t v194 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v215();
          }
        }
        uint64_t v216 = OUTLINED_FUNCTION_174();
        if (!OUTLINED_FUNCTION_8_0(v216))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v217 = v3 + v6[13];
          type metadata accessor for URL();
          if (!OUTLINED_FUNCTION_29_1(v217))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v218 = OUTLINED_FUNCTION_30_1();
            v219(v218);
          }
          if (!OUTLINED_FUNCTION_29_1(v3 + v6[14]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v220 = OUTLINED_FUNCTION_30_1();
            v221(v220);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_1_0();
          uint64_t v223 = *(void (**)(void))(v222 + 8);
          uint64_t v190 = v222 + 8;
          OUTLINED_FUNCTION_56_0();
          v223();
          OUTLINED_FUNCTION_56_0();
          v223();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          if (!OUTLINED_FUNCTION_51_12())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v224();
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          id v193 = v347;
          uint64_t v194 = v349;
        }
        v225 = (char *)v193 + *(int *)(v194 + 48);
        uint64_t v226 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_8_0(v226))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_88();
          if (!OUTLINED_FUNCTION_29_1(v194))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v227 = OUTLINED_FUNCTION_30_1();
            v228(v227);
          }
          if (!OUTLINED_FUNCTION_29_1((uint64_t)&v225[v6[15]]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v229 = OUTLINED_FUNCTION_30_1();
            v230(v229);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v5 = v190;
          uint64_t v190 = (uint64_t)v189;
          uint32_t v189 = v193;
          id v193 = v347;
          uint64_t v194 = v349;
        }
        uint64_t v231 = (uint64_t)v193 + *(int *)(v194 + 52);
        uint64_t v232 = type metadata accessor for RestaurantReservation(0);
        uint64_t v6 = (int *)v346;
        if (!__swift_getEnumTagSinglePayload(v231, 1, v232))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v233 = type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_8_0(v233))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v234 = OUTLINED_FUNCTION_58();
            v235(v234);
          }
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          uint64_t v6 = (int *)v346;
        }
      }
      v236 = (char *)v8 + v189[18];
      v237 = (int *)type metadata accessor for PreExtractedCard(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v236[v237[10]]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v238();
        }
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v236[v237[11]]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v239();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v236[v237[15]]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v240();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      v241 = (char *)v8 + v189[19];
      uint64_t v242 = type metadata accessor for PreExtractedContact(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v241[*(int *)(v242 + 44)]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v243();
        }
        OUTLINED_FUNCTION_7_1();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1((uint64_t)&v241[*(int *)(v242 + 56)]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v244();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_7_1();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v245 = (char *)v8 + v189[20];
      uint64_t v246 = type metadata accessor for PreExtractedSharedLink(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v247 = type metadata accessor for URL();
        if (!OUTLINED_FUNCTION_8_0(v247))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v248 = OUTLINED_FUNCTION_58();
          v249(v248);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        uint64_t v250 = (uint64_t)&v245[*(int *)(v246 + 48)];
        if (!OUTLINED_FUNCTION_48_0(v250))
        {
          OUTLINED_FUNCTION_1_0();
          (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v250, v190);
        }
        if (!OUTLINED_FUNCTION_54_0())
        {
          OUTLINED_FUNCTION_1_0();
          (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v250, v190);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      uint64_t v83 = v189[21];
LABEL_252:
      uint64_t v7 = v351;
      if (!*(id *)((char *)v8 + v83 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v253 = type metadata accessor for NoteDocument(0);
      uint64_t v254 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v254))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v255 = OUTLINED_FUNCTION_37_17();
        v256(v255);
      }
      goto LABEL_273;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v257 = type metadata accessor for Reminder(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v258 = OUTLINED_FUNCTION_3_1();
        v259(v258);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v260 = OUTLINED_FUNCTION_3_1();
        v261(v260);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v262 = *(int *)(v257 + 48);
      goto LABEL_323;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v263 = type metadata accessor for PhoneHistory(0);
      uint64_t v264 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v264))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v265 = OUTLINED_FUNCTION_22_1();
        v266(v265);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v262 = *(int *)(v263 + 52);
      goto LABEL_323;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v267 = type metadata accessor for VoicemailTranscript(0);
      goto LABEL_267;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v262 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
      goto LABEL_323;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v267 = type metadata accessor for VoiceMemo(0);
LABEL_267:
      uint64_t v268 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v268))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v269 = OUTLINED_FUNCTION_22_1();
        v270(v269);
      }
      uint64_t v262 = *(int *)(v267 + 32);
      goto LABEL_323;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v253 = type metadata accessor for Safari(0);
      uint64_t v271 = type metadata accessor for URL();
      if (!OUTLINED_FUNCTION_35_1(v271))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v272 = OUTLINED_FUNCTION_37_17();
        v273(v272);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
LABEL_273:
      uint64_t v274 = *(int *)(v253 + 36);
      goto LABEL_311;
    case 0xBu:
      swift_bridgeObjectRelease();

      break;
    case 0xCu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for WalletTransaction(0);
      uint64_t v275 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v275))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v276 = OUTLINED_FUNCTION_22_1();
        v277(v276);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for WalletPass(0);
      uint64_t v278 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v278))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v279 = OUTLINED_FUNCTION_22_1();
        v280(v279);
      }
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0xEu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v281 = type metadata accessor for FlightReservation(0);
      type metadata accessor for URL();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v282 = OUTLINED_FUNCTION_3_1();
        v283(v282);
      }
      uint64_t v352 = v7;
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v284 = OUTLINED_FUNCTION_3_1();
        v285(v284);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v286 = type metadata accessor for DateComponents();
      OUTLINED_FUNCTION_1_0();
      v288 = *(void (**)(uint64_t))(v287 + 8);
      uint64_t v289 = OUTLINED_FUNCTION_77_7();
      v288(v289);
      ((void (*)(char *, uint64_t))v288)((char *)v8 + *(int *)(v281 + 76), v286);
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v290 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v290))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v291 = OUTLINED_FUNCTION_22_1();
        v292(v291);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      uint64_t v7 = v352;
      break;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for HotelReservation(0);
      type metadata accessor for DateComponents();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v293 = OUTLINED_FUNCTION_3_1();
        v294(v293);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v295 = OUTLINED_FUNCTION_3_1();
        v296(v295);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for RestaurantReservation(0);
      uint64_t v297 = type metadata accessor for DateComponents();
      if (!OUTLINED_FUNCTION_15_0(v297))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v298 = OUTLINED_FUNCTION_22_1();
        v299(v298);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v300 = type metadata accessor for RentalCarReservation(0);
      uint64_t v301 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v301))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v302 = OUTLINED_FUNCTION_37_17();
        v303(v302);
      }
      uint64_t v274 = *(int *)(v300 + 144);
      goto LABEL_311;
    case 0x13u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v304 = type metadata accessor for TicketedTransportation(0);
      uint64_t v305 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v305))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v306 = OUTLINED_FUNCTION_37_17();
        v307(v306);
      }
      uint64_t v274 = *(int *)(v304 + 116);
      goto LABEL_311;
    case 0x14u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v308 = type metadata accessor for TicketedShow(0);
      uint64_t v309 = type metadata accessor for URL();
      if (!OUTLINED_FUNCTION_15_0(v309))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v310 = OUTLINED_FUNCTION_22_1();
        v311(v310);
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v312 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v313 = OUTLINED_FUNCTION_3_1();
        v314(v313);
      }
      uint64_t v315 = (uint64_t)v8 + *(int *)(v308 + 128);
      goto LABEL_324;
    case 0x15u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v316 = type metadata accessor for Appointment(0);
      uint64_t v317 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v317))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v318 = OUTLINED_FUNCTION_37_17();
        v319(v318);
      }
      uint64_t v274 = *(int *)(v316 + 112);
LABEL_311:
      v320 = (char *)v8 + v274;
      if (!OUTLINED_FUNCTION_48_0((uint64_t)v8 + v274))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(char *, uint64_t))(v321 + 8))(v320, v1);
      }
      break;
    case 0x16u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v322 = type metadata accessor for Party(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v323 = OUTLINED_FUNCTION_3_1();
        v324(v323);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v325 = OUTLINED_FUNCTION_3_1();
        v326(v325);
      }
      uint64_t v262 = *(int *)(v322 + 104);
      goto LABEL_323;
    case 0x17u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v327 = type metadata accessor for Trip(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v328 = OUTLINED_FUNCTION_3_1();
        v329(v328);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v330 = OUTLINED_FUNCTION_3_1();
        v331(v330);
      }
      uint64_t v262 = *(int *)(v327 + 100);
LABEL_323:
      uint64_t v315 = (uint64_t)v8 + v262;
      uint64_t v312 = type metadata accessor for URL();
LABEL_324:
      if (!OUTLINED_FUNCTION_9_1(v315))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v315, v312);
      }
      break;
    case 0x18u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v333 = type metadata accessor for GlobalItem();
      uint64_t v334 = type metadata accessor for GlobalDialog();
      if (!OUTLINED_FUNCTION_15_0(v334))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v335 = OUTLINED_FUNCTION_22_1();
        v336(v335);
      }
      v337 = (uint64_t *)((char *)v8 + *(int *)(v333 + 32));
      unint64_t v338 = v337[1];
      if (v338 >> 60 != 15) {
        outlined consume of Data._Representation(*v337, v338);
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
      goto LABEL_334;
    case 0x19u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 0x1Au:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Answer(0);
      uint64_t v339 = type metadata accessor for URL();
      if (!OUTLINED_FUNCTION_15_0(v339))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v340 = OUTLINED_FUNCTION_22_1();
        v341(v340);
      }
LABEL_334:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  OUTLINED_FUNCTION_6_1();
  swift_release();
  return MEMORY[0x270FA0238](v0, (((((unint64_t)v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5 | 7);
}

uint64_t partial apply for closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = *(void *)(v0 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_44_0(v12);
  *uint64_t v13 = v14;
  v13[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return closure #1 in closure #3 in EmailContentManager.hydrateEmailResults(_:)(v2, v9, v10, v11);
}

void partial apply for closure #1 in EMMessage.oms_requestRepresentation(with:)(uint64_t a1)
{
  closure #1 in EMMessage.oms_requestRepresentation(with:)(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_13Tm()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  OUTLINED_FUNCTION_1_0();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_16_1();
  v5();
  return MEMORY[0x270FA0238](v0, v3, v4);
}

uint64_t partial apply for closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:)(void *a1)
{
  return closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:)(a1);
}

uint64_t sub_2583C5AC0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t OUTLINED_FUNCTION_37_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_12()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_51_12()
{
  uint64_t v4 = v1 + *(int *)(v2 + 152);
  return __swift_getEnumTagSinglePayload(v4, 1, v0);
}

void OUTLINED_FUNCTION_52_11()
{
  *(void *)(v3 - 392) = v2;
  *(void *)(v3 - 384) = v1;
  *(void *)(v3 - 168) = v0;
}

uint64_t OUTLINED_FUNCTION_53_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

void OUTLINED_FUNCTION_71_8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_74_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_77_7()
{
  return v0;
}

void OUTLINED_FUNCTION_78_7(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v7, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_82_6(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_86_5()
{
  return v0;
}

id OUTLINED_FUNCTION_90_5(void *a1)
{
  return [a1 (SEL)(v1 + 1047)];
}

void specialized Sequence.forEach(_:)(unint64_t a1, uint64_t *a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2C8550](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v10 = v7;
      closure #1 in closure #1 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(&v10, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return;
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

uint64_t static EventManager.hydrateWithEvents(for:)()
{
  OUTLINED_FUNCTION_27();
  v0[10] = v1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v0[11] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v0[12] = v3;
  v0[13] = OUTLINED_FUNCTION_50_0();
  v0[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SearchResult(0);
  v0[15] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v0[16] = v5;
  v0[17] = OUTLINED_FUNCTION_50_0();
  v0[18] = swift_task_alloc();
  v0[19] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OSSignpostID();
  v0[20] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v0[21] = v7;
  v0[22] = OUTLINED_FUNCTION_50_0();
  v0[23] = swift_task_alloc();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 248) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  SEL *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t);
  const char *v35;
  void (*v36)(void);
  _WORD *v37;
  os_signpost_type_t v38;
  os_signpost_id_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v44;
  void *v45;
  NSObject *log;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v50 = v1;
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v45 = (void *)(v1 + 16);
    uint64_t v5 = *(void *)(v1 + 120);
    uint64_t v4 = *(void *)(v1 + 128);
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v0 = *(NSObject **)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v7 = (SEL *)&unk_265435000;
    uint64_t v44 = v5;
    uint64_t v47 = v0;
    do
    {
      uint64_t v8 = *(void *)(v1 + 152);
      _s10OmniSearch0B6ResultVWOcTm_3(v6, v8, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v9 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.detectedEventTypes.getter([*(id *)(v8 + *(int *)(v5 + 20)) v7[137]]);
      if (v9)
      {
        if (*(void *)(v9 + 16))
        {
          if (one-time initialization token for search != -1) {
            swift_once();
          }
          uint64_t v10 = *(void *)(v1 + 144);
          uint64_t v11 = *(void *)(v1 + 152);
          uint64_t v12 = type metadata accessor for Logger();
          __swift_project_value_buffer(v12, (uint64_t)static Logging.search);
          _s10OmniSearch0B6ResultVWOcTm_3(v11, v10, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v13 = OUTLINED_FUNCTION_148();
          _s10OmniSearch0B6ResultVWOcTm_3(v13, v14, (void (*)(void))type metadata accessor for SearchResult);
          swift_bridgeObjectRetain();
          uint64_t v15 = Logger.logObject.getter();
          uint64_t v16 = static os_log_type_t.info.getter();
          uint64_t v17 = OUTLINED_FUNCTION_27_12(v16);
          uint64_t v18 = *(void *)(v1 + 144);
          uint64_t v19 = *(void *)(v1 + 152);
          uint64_t v20 = *(void *)(v1 + 136);
          if (v17)
          {
            uint64_t v21 = swift_slowAlloc();
            uint64_t v49 = swift_slowAlloc();
            *(_DWORD *)uint64_t v21 = 136315906;
            *(void *)(v21 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000017, 0x8000000258681790, &v49);
            *(_WORD *)(v21 + 12) = 2080;
            log = v15;
            SearchResultItem.type.getter((char *)(v1 + 256));
            lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey();
            uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v21 + 14) = OUTLINED_FUNCTION_76_7(v22, v23);
            swift_bridgeObjectRelease();
            _s10OmniSearch0B6ResultVWOhTm_0(v18, (void (*)(void))type metadata accessor for SearchResult);
            *(_WORD *)(v21 + 22) = 2080;
            SearchResultItem.associatedValue.getter((uint64_t)v45);
            uint64_t v24 = *(void *)(v1 + 40);
            uint64_t v25 = *(void *)(v1 + 48);
            __swift_project_boxed_opaque_existential_1(v45, v24);
            (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
            uint64_t v26 = OUTLINED_FUNCTION_148();
            *(void *)(v21 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, v28);
            swift_bridgeObjectRelease();
            _s10OmniSearch0B6ResultVWOhTm_0(v20, (void (*)(void))type metadata accessor for SearchResult);
            *(_WORD *)(v21 + 32) = 2080;
            uint64_t v29 = swift_bridgeObjectRetain();
            uint64_t v30 = MEMORY[0x25A2C7E60](v29, MEMORY[0x263F8D310]);
            uint64_t v32 = v31;
            swift_bridgeObjectRelease();
            *(void *)(v21 + 34) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, &v49);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, log, (os_log_type_t)type metadata accessor for SearchResult, "%s %s %s has MDItemDetectedEventTypes: %s", (uint8_t *)v21, 0x2Au);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            uint64_t v5 = v44;
            OUTLINED_FUNCTION_34();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            _s10OmniSearch0B6ResultVWOhTm_0(v20, (void (*)(void))type metadata accessor for SearchResult);
            _s10OmniSearch0B6ResultVWOhTm_0(v18, (void (*)(void))type metadata accessor for SearchResult);
          }
          _s10OmniSearch0B6ResultVWOhTm_0(v19, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v0 = v47;
          uint64_t v7 = (SEL *)&unk_265435000;
        }
        else
        {
          _s10OmniSearch0B6ResultVWOhTm_0(*(void *)(v1 + 152), (void (*)(void))type metadata accessor for SearchResult);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(*(void *)(v1 + 152), (void (*)(void))type metadata accessor for SearchResult);
      }
      v6 += (uint64_t)v0;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_18_9();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v33 = OUTLINED_FUNCTION_20_1();
    if (v34(v33) == *MEMORY[0x263F90238])
    {
      uint64_t v35 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v36();
      uint64_t v35 = "";
    }
    uint64_t v37 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v37);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v0, v38, v39, "EventManager.hydrateWithEvents", v35);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v40 = *(void (**)(uint64_t))(v1 + 224);

  uint64_t v41 = OUTLINED_FUNCTION_148();
  v40(v41);
  uint64_t v48 = *(void *)(v1 + 248);
  OUTLINED_FUNCTION_46_11();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return v42(v48);
}

void static EventManager.hydrateWithEvents(for:)()
{
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  v0[26] = v2;
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v3 = OSSignposter.logHandle.getter();
  os_signpost_type_t v4 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v5 = 0;
    os_signpost_id_t v6 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v3, v4, v6, "EventManager.hydrateWithEvents", "", v5, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[25];
  uint64_t v9 = v0[20];
  uint64_t v10 = v0[21];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v8, v9);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v0[27] = OUTLINED_FUNCTION_160();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v0[28] = v11;
  v0[29] = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v11(v8, v9);
  type metadata accessor for FeatureFlagService();
  swift_initStackObject();
  if (FeatureFlagService.isEnabled(_:)(OmniSearch_FeatureFlagService_FeatureFlag_eventAnswers))
  {
    uint64_t v12 = (void *)swift_task_alloc();
    v0[30] = v12;
    *uint64_t v12 = v0;
    v12[1] = static EventManager.hydrateWithEvents(for:);
    OUTLINED_FUNCTION_45_0();
    __asm { BR              X4 }
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logging.search);
  uint64_t v16 = (void *)Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_54_9(v17))
  {
    uint64_t v18 = (_DWORD *)swift_slowAlloc();
    uint64_t v32 = OUTLINED_FUNCTION_13_1();
    _DWORD *v18 = 136315138;
    v0[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000017, 0x8000000258681790, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_67_8(&dword_257DC6000, v19, v20, "%s FF OmniSearch/eventAnswers disabled. Skip hydrating pre-extracted events from source documents. Return origResults as-is");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }

  swift_bridgeObjectRetain();
  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_18_9();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v22 = v0[12];
    uint64_t v21 = v0[13];
    uint64_t v23 = v0[11];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 88))(v21, v23) == *MEMORY[0x263F90238])
    {
      uint64_t v24 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v25();
      uint64_t v24 = "";
    }
    uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v26);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v2, v27, v28, "EventManager.hydrateWithEvents", v24);
    OUTLINED_FUNCTION_34();
  }

  uint64_t v29 = OUTLINED_FUNCTION_148();
  ((void (*)(uint64_t))v11)(v29);
  OUTLINED_FUNCTION_46_11();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_45_0();
  __asm { BRAA            X2, X16 }
}

uint64_t closure #1 in static EventManager.hydrateWithEvents(for:)(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  v2[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  v2[13] = swift_task_alloc();
  v2[14] = type metadata accessor for EmailDocument(0);
  v2[15] = swift_task_alloc();
  v2[16] = type metadata accessor for SearchResultItem(0);
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for SearchResult(0);
  v2[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in static EventManager.hydrateWithEvents(for:), 0, 0);
}

uint64_t closure #1 in static EventManager.hydrateWithEvents(for:)()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  _s10OmniSearch0B6ResultVWOcTm_3(v0[11], v1, (void (*)(void))type metadata accessor for SearchResult);
  _s10OmniSearch0B6ResultVWOcTm_3(v1, v2, (void (*)(void))type metadata accessor for SearchResultItem);
  OUTLINED_FUNCTION_56_1();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v4 = v0[17];
  if (EnumCaseMultiPayload)
  {
    _s10OmniSearch0B6ResultVWOcTm_3(v0[11], v0[10], (void (*)(void))type metadata accessor for SearchResult);
    _s10OmniSearch0B6ResultVWOhTm_0(v4, (void (*)(void))type metadata accessor for SearchResultItem);
    OUTLINED_FUNCTION_78_8();
    _s10OmniSearch0B6ResultVWOhTm_0(v4, (void (*)(void))type metadata accessor for SearchResult);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    return v5();
  }
  else
  {
    outlined init with take of RestaurantReservation(v0[17], v0[15], (void (*)(void))type metadata accessor for EmailDocument);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[20] = (uint64_t)v7;
    *uint64_t v7 = v0;
    v7[1] = closure #1 in static EventManager.hydrateWithEvents(for:);
    return static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)();
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 168) = v3;
  *(void *)(v1 + 176) = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  uint64_t v22 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = (void *)(v0[15] + *(int *)(v0[14] + 80));
  swift_bridgeObjectRelease();
  *uint64_t v3 = v1;
  v3[1] = v2;
  if (!v2)
  {
    uint64_t v5 = v0[14];
    uint64_t v4 = v0[15];
    os_signpost_id_t v6 = v0[13];
    PartialExtractedAttributes.init(item:bundleID:)(*(id *)(v0[11] + *(int *)(v0[18] + 20)), 0xD000000000000014, 0x800000025867C750, v6);
    outlined assign with take of PartialExtractedAttributes?(v6, v4 + *(int *)(v5 + 84));
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
    uint64_t v8 = Logger.logObject.getter();
    uint64_t v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = v0[15];
      uint64_t v11 = v0[13];
      uint64_t v20 = v5;
      uint64_t v12 = OUTLINED_FUNCTION_83_2();
      uint64_t v21 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)uint64_t v12 = 136315395;
      v0[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000017, 0x8000000258681790, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2085;
      OUTLINED_FUNCTION_0_1();
      outlined init with copy of PartialExtractedAttributes?(v10 + *(int *)(v20 + 84), v11);
      uint64_t v13 = String.init<A>(describing:)();
      v0[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_49_11(&dword_257DC6000, v8, v9, "%s No Events fetched for source doc. Falled back and created these partially extracted attributes from source doc: %{sensitive}s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
  }
  uint64_t v15 = v0[19];
  uint64_t v16 = v0[15];
  os_log_type_t v17 = v0[10];
  _s10OmniSearch0B6ResultVWOhTm_0(v15, (void (*)(void))type metadata accessor for SearchResultItem);
  OUTLINED_FUNCTION_0_1();
  _s10OmniSearch0B6ResultVWOcTm_3(v16, v15, (void (*)(void))type metadata accessor for EmailDocument);
  OUTLINED_FUNCTION_56_1();
  swift_storeEnumTagMultiPayload();
  _s10OmniSearch0B6ResultVWOcTm_3(v15, v17, (void (*)(void))type metadata accessor for SearchResult);
  _s10OmniSearch0B6ResultVWOhTm_0(v16, (void (*)(void))type metadata accessor for EmailDocument);
  OUTLINED_FUNCTION_78_8();
  _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)(v0 + 2), (void (*)(void))type metadata accessor for SearchResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v18();
}

uint64_t static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)()
{
  OUTLINED_FUNCTION_27();
  v0[37] = v1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v0[38] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v0[39] = v3;
  v0[40] = OUTLINED_FUNCTION_50_0();
  v0[41] = swift_task_alloc();
  v0[42] = swift_task_alloc();
  v0[43] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SearchResult(0);
  v0[44] = v4;
  OUTLINED_FUNCTION_81(v4);
  v0[45] = OUTLINED_FUNCTION_50_0();
  v0[46] = swift_task_alloc();
  v0[47] = swift_task_alloc();
  v0[48] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v0[49] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v0[50] = v6;
  v0[51] = OUTLINED_FUNCTION_50_0();
  v0[52] = swift_task_alloc();
  v0[53] = swift_task_alloc();
  v0[54] = swift_task_alloc();
  v0[55] = swift_task_alloc();
  v0[56] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  _WORD *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  os_log_type_t v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  NSObject *v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t);
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  unint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t);
  uint64_t v75;
  unsigned int (*v76)(uint64_t);
  uint64_t v77;
  const char *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  unint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  id v87;
  Class isa;
  id v89;
  id v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  void (*v94)(void);
  os_signpost_type_t v95;
  os_signpost_id_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v100;
  void *v101;
  void *v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;

  uint64_t v124 = v0;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  *(void *)(v0 + 456) = v2;
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v3 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v4);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v3, v5, v6, "EventManager.fetchEvents", "");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v115 = v0 + 288;
  uint64_t v7 = *(void *)(v0 + 400);

  uint64_t v8 = OUTLINED_FUNCTION_25_18();
  v9(v8);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  uint64_t v118 = OUTLINED_FUNCTION_160();
  *(void *)(v0 + 464) = v118;
  *(void *)(v0 + 472) = *(void *)(v7 + 8);
  *(void *)(v0 + 480) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v10 = OUTLINED_FUNCTION_65_7();
  v11(v10);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 384);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
  *(void *)(v0 + 488) = v15;
  _s10OmniSearch0B6ResultVWOcTm_3(v13, v12, (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v120 = v15;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  uint64_t v18 = OUTLINED_FUNCTION_27_12(v17);
  uint64_t v19 = *(void *)(v0 + 384);
  uint64_t v116 = v2;
  if (v18)
  {
    uint64_t v20 = *(void *)(v0 + 376);
    uint64_t v110 = *(void *)(v0 + 352);
    os_log_type_t v113 = v0 + 208;
    uint64_t v21 = OUTLINED_FUNCTION_83_2();
    uint64_t v122 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v21 = 136315395;
    *(void *)(v0 + 288) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x80000002586817D0, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2085;
    _s10OmniSearch0B6ResultVWOcTm_3(v19, v20, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)(v0 + 208) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v19, (void (*)(void))type metadata accessor for SearchResult);
    OUTLINED_FUNCTION_57_8(&dword_257DC6000, v16, v24, "%s fetching com.apple.spotlight.events associated with this: %{sensitive}s");
    OUTLINED_FUNCTION_62_8();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    _s10OmniSearch0B6ResultVWOhTm_0(v19, (void (*)(void))type metadata accessor for SearchResult);
  }

  uint64_t v25 = *(id *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 352) + 20));
  uint64_t v26 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(v25);
  if (!v27)
  {
    uint64_t v37 = (void *)Logger.logObject.getter();
    uint64_t v38 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_54_9(v38))
    {
      uint64_t v39 = (_DWORD *)swift_slowAlloc();
      uint64_t v122 = OUTLINED_FUNCTION_13_1();
      *uint64_t v39 = 136315138;
      *(void *)(v0 + 240) = OUTLINED_FUNCTION_17_19((uint64_t)"fetchExtractedEventsLLMConsumableDescription(for:)", v104, v105, v107, v108, v109, v110, v113, v115, v116, v118, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_67_8(&dword_257DC6000, v40, v41, "%s unable to get bundleID from CSItem");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v42 = (uint64_t *)(v0 + 408);
    uint64_t v43 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
      goto LABEL_45;
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v44 = OUTLINED_FUNCTION_34_16();
    if (v45(v44) == *MEMORY[0x263F90238]) {
      goto LABEL_44;
    }
    goto LABEL_53;
  }
  os_signpost_id_t v28 = v26;
  uint64_t v29 = v27;
  if (one-time initialization token for dict != -1) {
    swift_once();
  }
  uint64_t v30 = static BundleIdEventSourceIdMapping.dict;
  swift_bridgeObjectRetain();
  uint64_t v31 = specialized Dictionary.subscript.getter(v28, v29, v30);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (!v33)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = Logger.logObject.getter();
    uint64_t v47 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = OUTLINED_FUNCTION_13_1();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v122 = v49;
      *(_DWORD *)uint64_t v48 = 136315650;
      *(void *)(v0 + 224) = OUTLINED_FUNCTION_17_19((uint64_t)"fetchExtractedEventsLLMConsumableDescription(for:)", v104, v105, v107, v108, v109, v110, v0 + 184, v115, v116, v118, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v48 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 192) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v48 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v50 = Dictionary.description.getter();
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 184) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v52, &v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_257DC6000, v46, v47, "%s Skipping. Unsupported as we don't have the mapping for source id of this bundleID: %s. Current dict: %s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v42 = (uint64_t *)(v0 + 416);
    uint64_t v43 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
      goto LABEL_45;
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v75 = OUTLINED_FUNCTION_34_16();
    if (v76(v75) == *MEMORY[0x263F90238]) {
      goto LABEL_44;
    }
LABEL_53:
    uint64_t v77 = *v42;
    OUTLINED_FUNCTION_77();
    v94();
    uint64_t v78 = "";
    goto LABEL_54;
  }
  uint64_t v114 = v0 + 184;
  swift_bridgeObjectRelease();
  uint64_t v34 = objc_msgSend(v25, sel_attributeSet);
  id v111 = v31;
  uint64_t v35 = (void *)MEMORY[0x25A2C7AB0](v31, v33);
  uint64_t v36 = objc_msgSend(v34, sel_attributeForKey_, v35);

  if (v36)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
  }
  outlined init with take of Any?(v0 + 88, v0 + 56);
  if (!*(void *)(v0 + 80))
  {
    outlined destroy of SearchResult?(v0 + 56, (uint64_t *)&demangling cache variable for type metadata for Any?);
LABEL_35:
    swift_bridgeObjectRetain();
    id v70 = Logger.logObject.getter();
    uint64_t v71 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_54_9(v71))
    {
      unint64_t v72 = OUTLINED_FUNCTION_83_2();
      uint64_t v122 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)unint64_t v72 = 136315394;
      *(void *)(v0 + 168) = OUTLINED_FUNCTION_17_19((uint64_t)"fetchExtractedEventsLLMConsumableDescription(for:)", v104, v105, v107, v108, v109, v111, v114, v115, v116, v118, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v72 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 176) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v112, v33, &v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v70, (os_log_type_t)(v0 + 88), "%s unable to get attribute for %s)", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      OUTLINED_FUNCTION_73_5();
    }

    uint64_t v42 = (uint64_t *)(v0 + 424);
    uint64_t v43 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v73 = OUTLINED_FUNCTION_34_16();
      if (v74(v73) != *MEMORY[0x263F90238]) {
        goto LABEL_53;
      }
LABEL_44:
      uint64_t v77 = *v42;
      uint64_t v78 = "[Error] Interval already ended";
LABEL_54:
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      uint64_t v106 = v77;
      OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_93_0();
      OUTLINED_FUNCTION_40_1(&dword_257DC6000, v43, v95, v96, "EventManager.fetchEvents", v78);
      OUTLINED_FUNCTION_34();
LABEL_55:
      uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
      int v98 = *(void *)(v0 + 392);

      v97(v106, v98);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_35_0();
      __asm { BRAA            X3, X16 }
    }
LABEL_45:
    uint64_t v106 = *v42;
    goto LABEL_55;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_35;
  }
  uint64_t v54 = *(void *)(v0 + 152);
  uint64_t v53 = *(void **)(v0 + 160);
  if (one-time initialization token for fetchAttributes != -1) {
    swift_once();
  }
  id v55 = static LocalIndexClient.fetchAttributes;
  uint32_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    id v55 = v101;
  }
  uint64_t v59 = v55[2];
  if (v59 >= v55[3] >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    id v55 = v102;
  }
  v55[2] = v59 + 1;
  uint64_t v60 = (char *)&v55[2 * v59];
  *((void *)v60 + 4) = v56;
  *((void *)v60 + 5) = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v61 = Logger.logObject.getter();
  uint64_t v62 = static os_log_type_t.debug.getter();
  uint64_t v119 = v0 + 272;
  if (OUTLINED_FUNCTION_51_1(v62))
  {
    id v117 = v54;
    uint64_t v63 = OUTLINED_FUNCTION_83_2();
    uint64_t v64 = OUTLINED_FUNCTION_11_22();
    uint64_t v122 = v64;
    *(_DWORD *)uint64_t v63 = 136315394;
    *(void *)(v0 + 272) = OUTLINED_FUNCTION_17_19((uint64_t)"fetchExtractedEventsLLMConsumableDescription(for:)", v104, v105, v107, v108, v109, v111, v64, v115, v117, v119, v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v63 + 12) = 2080;
    uint64_t v109 = v63 + 14;
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = MEMORY[0x25A2C7E60](v65, MEMORY[0x263F8D310]);
    os_signpost_id_t v67 = v53;
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 280) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v69, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v53 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v61, (os_log_type_t)v56, "%s fetching attributes from com.apple.spotlight.events: %s", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    uint64_t v54 = v116;
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v122 = v111;
  id v123 = v33;
  v79._countAndFlagsBits = 2243901;
  v79._object = (void *)0xE300000000000000;
  String.append(_:)(v79);
  v80._countAndFlagsBits = v54;
  v80._object = v53;
  String.append(_:)(v80);
  swift_bridgeObjectRelease();
  v81._countAndFlagsBits = 34;
  v81._object = (void *)0xE100000000000000;
  String.append(_:)(v81);
  uint64_t v83 = v122;
  uint64_t v82 = v123;
  swift_bridgeObjectRetain_n();
  uint64_t v84 = Logger.logObject.getter();
  uint64_t v85 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = OUTLINED_FUNCTION_83_2();
    uint64_t v122 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v86 = 136315394;
    *(void *)(v0 + 256) = OUTLINED_FUNCTION_17_19((uint64_t)"fetchExtractedEventsLLMConsumableDescription(for:)", v104, v105, v107, v108, v109, v111, v114, v115, v116, v119, v83);
    uint64_t v83 = v121;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v86 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 264) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v121, v82, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_49_11(&dword_257DC6000, v84, v85, "%s queryString: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    OUTLINED_FUNCTION_73_5();
  }

  uint64_t v87 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02AD0]), sel_init);
  *(void *)(v0 + 496) = v87;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_setFetchAttributes_, isa);

  outlined bridged method (mbnn) of @objc CSSearchQueryContext.bundleIDs.setter((uint64_t)&outlined read-only object #0 of static EventManager.fetchExtractedEventsLLMConsumableDescription(for:), v87);
  objc_allocWithZone(MEMORY[0x263F02AC8]);
  uint64_t v89 = v87;
  uint64_t v90 = @nonobjc CSSearchQuery.init(queryString:queryContext:)(v83, v82, v87);
  *(void *)(v0 + 504) = v90;
  uint64_t v91 = swift_task_alloc();
  *(void *)(v0 + 512) = v91;
  *(void *)(v91 + 16) = v90;
  uint64_t v92 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v92;
  *(void *)(v0 + 528) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  uint8_t *v92 = v0;
  v92[1] = static EventManager.fetchExtractedEventsLLMConsumableDescription(for:);
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_35_0();
  return MEMORY[0x270FA2318]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

void static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  _s10OmniSearch0B6ResultVWOcTm_3(v2, *(void *)(v0 + 368), (void (*)(void))type metadata accessor for SearchResult);
  _s10OmniSearch0B6ResultVWOcTm_3(v2, v1, (void (*)(void))type metadata accessor for SearchResult);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  uint64_t v41 = v3;
  if (os_log_type_enabled(v5, v6))
  {
    log = v5;
    uint64_t v39 = *(void **)(v0 + 504);
    uint64_t v40 = *(void **)(v0 + 496);
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 368);
    uint64_t v9 = v4;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315907;
    os_log_type_t type = v6;
    *(void *)(v0 + 200) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x80000002586817D0, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    SearchResultItem.type.getter((char *)(v0 + 536));
    lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey();
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 216) = OUTLINED_FUNCTION_76_7(v11, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v8, (void (*)(void))type metadata accessor for SearchResult);
    *(_WORD *)(v10 + 22) = 2080;
    SearchResultItem.associatedValue.getter(v0 + 16);
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v14);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v14, v13);
    unint64_t v17 = v16;
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    *(void *)(v0 + 232) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v7, (void (*)(void))type metadata accessor for SearchResult);
    *(_WORD *)(v10 + 32) = 2085;
    *(void *)(v0 + 120) = v41;
    *(void *)(v0 + 128) = v9;
    swift_bridgeObjectRetain();
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v0 + 248) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, log, type, "%s returning LLM prompt from com.apple.spotlight.events associated with source %s %s: %{sensitive}s", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v20 = *(void **)(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 368);

    _s10OmniSearch0B6ResultVWOhTm_0(v21, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v22 = OUTLINED_FUNCTION_56_1();
    _s10OmniSearch0B6ResultVWOhTm_0(v22, v23);
    OUTLINED_FUNCTION_73_5();
  }
  uint64_t v24 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v25 = *(void *)(v0 + 344);
    uint64_t v27 = *(void *)(v0 + 304);
    uint64_t v26 = *(void *)(v0 + 312);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v26 + 88))(v25, v27) == *MEMORY[0x263F90238])
    {
      os_signpost_id_t v28 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v29();
      os_signpost_id_t v28 = "";
    }
    uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v30 = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_186();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v24, v31, v32, "EventManager.fetchEvents", v28, v30, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v33 = *(void (**)(uint64_t))(v0 + 472);

  uint64_t v34 = OUTLINED_FUNCTION_77_7();
  v33(v34);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_35_0();
  __asm { BRAA            X3, X16 }
}

uint64_t closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<String?, Never>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  unint64_t v17 = partial apply for closure #1 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:);
  uint64_t v18 = v7;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  uint64_t v15 = thunk for @escaping @callee_guaranteed (@guaranteed [CSSearchableItem]) -> ();
  unint64_t v16 = &block_descriptor_6;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_setFoundItemsHandler_, v8);
  _Block_release(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v10 + ((v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  unint64_t v17 = partial apply for closure #2 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:);
  uint64_t v18 = v10;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  uint64_t v15 = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  unint64_t v16 = &block_descriptor_15;
  uint64_t v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_setCompletionHandler_, v11);
  _Block_release(v11);
  objc_msgSend(a2, sel_start);
  return swift_release();
}

void closure #1 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(unint64_t a1, uint64_t a2)
{
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x80000002586817D0, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v5, v6, "%s found %ld Event(s)", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v8, -1, -1);
    MEMORY[0x25A2C94B0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  specialized Sequence.forEach(_:)(a1, (uint64_t *)(a2 + 16));
}

void closure #1 in closure #1 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(void **a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SearchResult(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static EventManager.createSearchResult(from:)(*a1, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v6, &demangling cache variable for type metadata for SearchResult?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logging.search);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v21[0] = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v20[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x80000002586817D0, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v11, v12, "%s skip this CSSearchableItem as no associated SearchResult could be created", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v14, -1, -1);
      MEMORY[0x25A2C94B0](v13, -1, -1);
    }
  }
  else
  {
    outlined init with take of RestaurantReservation((uint64_t)v6, (uint64_t)v9, (void (*)(void))type metadata accessor for SearchResult);
    SearchResultItem.associatedValue.getter((uint64_t)v21);
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
    uint64_t v19 = v18;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    swift_beginAccess();
    if (a2[1])
    {
      swift_beginAccess();
      if (a2[1])
      {
        MEMORY[0x25A2C7C50](v17, v19);
        swift_endAccess();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)v9, (void (*)(void))type metadata accessor for SearchResult);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)v9, (void (*)(void))type metadata accessor for SearchResult);
      swift_beginAccess();
      *a2 = v17;
      a2[1] = v19;
      swift_bridgeObjectRelease();
    }
  }
}

id static EventManager.createSearchResult(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v7 = OUTLINED_FUNCTION_22_13(v6);
  uint64_t v275 = type metadata accessor for RestaurantReservation(v7);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_184_0();
  uint64_t v15 = OUTLINED_FUNCTION_22_13(v14);
  uint64_t v278 = type metadata accessor for HotelReservation(v15);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
  uint64_t v21 = OUTLINED_FUNCTION_81(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_184_0();
  uint64_t v23 = OUTLINED_FUNCTION_22_13(v22);
  uint64_t v281 = type metadata accessor for FlightReservation(v23);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v27);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
  uint64_t v29 = OUTLINED_FUNCTION_81(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_184_0();
  uint64_t v31 = OUTLINED_FUNCTION_22_13(v30);
  uint64_t v32 = type metadata accessor for Trip(v31);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v269 - v36;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v38);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
  uint64_t v40 = OUTLINED_FUNCTION_81(v39);
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_184_0();
  uint64_t v42 = OUTLINED_FUNCTION_22_13(v41);
  uint64_t v284 = type metadata accessor for Party(v42);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v269 - v46;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
  uint64_t v49 = OUTLINED_FUNCTION_81(v48);
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_184_0();
  uint64_t v51 = OUTLINED_FUNCTION_22_13(v50);
  uint64_t v286 = type metadata accessor for Appointment(v51);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v53);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v55);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
  uint64_t v57 = OUTLINED_FUNCTION_81(v56);
  MEMORY[0x270FA5388](v57);
  OUTLINED_FUNCTION_184_0();
  uint64_t v59 = OUTLINED_FUNCTION_22_13(v58);
  uint64_t v289 = type metadata accessor for TicketedShow(v59);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v62);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v63);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
  uint64_t v65 = OUTLINED_FUNCTION_81(v64);
  MEMORY[0x270FA5388](v65);
  OUTLINED_FUNCTION_184_0();
  uint64_t v293 = v66;
  uint64_t v294 = type metadata accessor for TicketedTransportation(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v67);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v68);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_27_10();
  uint64_t v291 = v70;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
  uint64_t v72 = OUTLINED_FUNCTION_81(v71);
  MEMORY[0x270FA5388](v72);
  OUTLINED_FUNCTION_184_0();
  uint64_t v298 = v73;
  uint64_t v299 = type metadata accessor for RentalCarReservation(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v74);
  OUTLINED_FUNCTION_185_0();
  uint64_t v292 = v75;
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_43_4();
  uint64_t v295 = v77;
  MEMORY[0x270FA5388](v78);
  OUTLINED_FUNCTION_27_10();
  uint64_t v296 = v79;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v80 = type metadata accessor for Logger();
  uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)static Logging.search);
  id v82 = a1;
  uint64_t v83 = Logger.logObject.getter();
  os_log_type_t v84 = static os_log_type_t.debug.getter();
  LODWORD(v300) = v84;
  BOOL v85 = os_log_type_enabled(v83, v84);
  uint64_t v86 = (SEL *)&unk_265435000;
  v283 = v37;
  if (v85)
  {
    uint64_t v87 = OUTLINED_FUNCTION_13_1();
    uint64_t v270 = swift_slowAlloc();
    uint64_t v305 = v270;
    *(_DWORD *)uint64_t v87 = 136315650;
    uint64_t v297 = a2;
    *(void *)&long long v303 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, 0x8000000258681810, &v305);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v272 = v47;
    *(_WORD *)(v87 + 12) = 2080;
    id v88 = v82;
    id v89 = objc_msgSend(v88, sel_description);
    uint64_t v273 = v81;
    uint64_t v90 = v32;
    id v91 = v89;
    uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v271 = v82;
    uint64_t v93 = v92;
    unint64_t v95 = v94;

    *(void *)&long long v303 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v95, &v305);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 22) = 2080;
    id v96 = objc_msgSend(v88, sel_attributeSet);
    id v97 = objc_msgSend(v96, sel_description);
    uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v100 = v99;

    uint64_t v32 = v90;
    uint64_t v101 = v98;
    id v82 = v271;
    *(void *)&long long v303 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v101, v100, &v305);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a2 = v297;
    uint64_t v47 = v272;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v83, (os_log_type_t)v300, "%s CSSearchableItem: %s, attributes: %s", (uint8_t *)v87, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    uint64_t v86 = (SEL *)&unk_265435000;
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  id v102 = [v82 v86[137]];
  id v103 = objc_msgSend(v102, sel_attributeForKey_, *MEMORY[0x263F02280]);

  if (v103)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v303 = 0u;
    long long v304 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v303, (uint64_t)&v305);
  if (!v307)
  {
    outlined destroy of SearchResult?((uint64_t)&v305, (uint64_t *)&demangling cache variable for type metadata for Any?);
    goto LABEL_59;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_59:
    uint64_t v127 = Logger.logObject.getter();
    os_log_type_t v133 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v127, v133))
    {
LABEL_62:

LABEL_63:
      uint64_t v137 = type metadata accessor for SearchResult(0);
      return (id)__swift_storeEnumTagSinglePayload(a2, 1, 1, v137);
    }
    uint64_t v134 = OUTLINED_FUNCTION_83_2();
    uint64_t v305 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v134 = 136315394;
    *(void *)&long long v303 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v134 + 12) = 2080;
    uint64_t v135 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)&long long v303 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136, &v305);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v127, v133, "%s skip this CSSearchableItem as it has no %s", (uint8_t *)v134, 0x16u);
    swift_arrayDestroy();
LABEL_61:
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
    goto LABEL_62;
  }
  uint64_t v104 = v301;
  unint64_t v105 = v302;
  BOOL v107 = static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v106 == v105;
  if (v107)
  {
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  char v108 = v106;
  char v109 = OUTLINED_FUNCTION_22_19();
  swift_bridgeObjectRelease();
  if (v109)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    id v139 = v82;
    uint64_t v112 = v298;
    id v300 = v139;
    RentalCarReservation.init(item:)((uint64_t)v139);
    uint64_t v140 = OUTLINED_FUNCTION_31_16();
    if (__swift_getEnumTagSinglePayload(v140, v141, v299) != 1)
    {
      uint64_t v297 = a2;
      uint64_t v144 = v296;
      outlined init with take of RestaurantReservation(v112, v296, (void (*)(void))type metadata accessor for RentalCarReservation);
      uint64_t v145 = v295;
      _s10OmniSearch0B6ResultVWOcTm_3(v144, v295, (void (*)(void))type metadata accessor for RentalCarReservation);
      uint64_t v146 = Logger.logObject.getter();
      os_log_type_t v147 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v146, v147))
      {
        uint64_t v148 = OUTLINED_FUNCTION_83_2();
        uint64_t v305 = OUTLINED_FUNCTION_11_22();
        *(_DWORD *)uint64_t v148 = 136315394;
        *(void *)&long long v303 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v148 + 12) = 2080;
        _s10OmniSearch0B6ResultVWOcTm_3(v145, v292, (void (*)(void))type metadata accessor for RentalCarReservation);
        uint64_t v149 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v149, v150);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v145, (void (*)(void))type metadata accessor for RentalCarReservation);
        OUTLINED_FUNCTION_49_11(&dword_257DC6000, v146, v147, "%s created rentalCarReservation: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v145, (void (*)(void))type metadata accessor for RentalCarReservation);
      }

      uint64_t v151 = v297;
      outlined init with take of RestaurantReservation(v144, v297, (void (*)(void))type metadata accessor for RentalCarReservation);
      type metadata accessor for SearchResultItem(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v152 = type metadata accessor for SearchResult(0);
      uint64_t v153 = (void *)(v151 + *(int *)(v152 + 24));
      *uint64_t v153 = 0;
      v153[1] = 0;
      *(void *)(v151 + *(int *)(v152 + 20)) = v300;
      uint64_t v154 = v151;
      goto LABEL_81;
    }
    uint64_t v142 = &demangling cache variable for type metadata for RentalCarReservation?;
LABEL_67:
    uint64_t v143 = v112;
LABEL_68:
    outlined destroy of SearchResult?(v143, v142);
    goto LABEL_63;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v110 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  uint64_t v112 = v110;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_74:
    swift_bridgeObjectRelease();
    id v155 = v82;
    uint64_t v112 = v293;
    id v300 = v155;
    TicketedTransportation.init(item:)((uint64_t)v155);
    uint64_t v156 = OUTLINED_FUNCTION_31_16();
    if (__swift_getEnumTagSinglePayload(v156, v157, v294) != 1)
    {
      uint64_t v158 = v291;
      outlined init with take of RestaurantReservation(v112, v291, (void (*)(void))type metadata accessor for TicketedTransportation);
      OUTLINED_FUNCTION_70_8(v158, (void (*)(void))type metadata accessor for TicketedTransportation, (uint64_t)&v314);
      uint64_t v159 = (void *)Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v160))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v161 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_79_7(v161);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v162 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v162);
        OUTLINED_FUNCTION_18_24();
        OUTLINED_FUNCTION_41_14(v32, (void (*)(void))type metadata accessor for TicketedTransportation, (uint64_t)&v312);
        uint64_t v163 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v163, v164);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for TicketedTransportation);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v165, v166, "%s created ticketedTransportation: %s");
        OUTLINED_FUNCTION_28_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for TicketedTransportation);
      }

      OUTLINED_FUNCTION_66_7(v167, v168, (void (*)(void))type metadata accessor for TicketedTransportation);
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = (uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?;
    goto LABEL_67;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v113 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_85;
  }
  uint64_t v112 = v113;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_85:
    swift_bridgeObjectRelease();
    uint64_t v171 = OUTLINED_FUNCTION_23_14((uint64_t)v82);
    TicketedShow.init(item:)(v171);
    uint64_t v172 = OUTLINED_FUNCTION_31_16();
    OUTLINED_FUNCTION_39_11(v172, v173, (uint64_t)&v313);
    if (!v107)
    {
      uint64_t v174 = v287;
      outlined init with take of RestaurantReservation(v112, v287, (void (*)(void))type metadata accessor for TicketedShow);
      OUTLINED_FUNCTION_70_8(v174, (void (*)(void))type metadata accessor for TicketedShow, (uint64_t)&v311);
      uint64_t v175 = (void *)Logger.logObject.getter();
      os_log_type_t v176 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v176))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v178 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_79_7(v178);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v179 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v179);
        OUTLINED_FUNCTION_18_24();
        OUTLINED_FUNCTION_41_14(v32, (void (*)(void))type metadata accessor for TicketedShow, (uint64_t)&v309);
        uint64_t v180 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v180, v181);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for TicketedShow);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v182, v183, "%s created ticketedShow: %s");
        OUTLINED_FUNCTION_28_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for TicketedShow);
      }

      OUTLINED_FUNCTION_66_7(v184, v185, (void (*)(void))type metadata accessor for TicketedShow);
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = &demangling cache variable for type metadata for TicketedShow?;
    goto LABEL_67;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v115 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_93;
  }
  uint64_t v112 = v115;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_93:
    swift_bridgeObjectRelease();
    uint64_t v186 = OUTLINED_FUNCTION_23_14((uint64_t)v82);
    Appointment.init(item:)(v186);
    uint64_t v187 = OUTLINED_FUNCTION_31_16();
    OUTLINED_FUNCTION_39_11(v187, v188, (uint64_t)&v310);
    if (!v107)
    {
      uint64_t v189 = v285;
      outlined init with take of RestaurantReservation(v112, v285, (void (*)(void))type metadata accessor for Appointment);
      OUTLINED_FUNCTION_70_8(v189, (void (*)(void))type metadata accessor for Appointment, (uint64_t)v308);
      uint64_t v190 = (void *)Logger.logObject.getter();
      os_log_type_t v191 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v191))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v193 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_79_7(v193);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v194 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v194);
        OUTLINED_FUNCTION_18_24();
        OUTLINED_FUNCTION_41_14(v32, (void (*)(void))type metadata accessor for Appointment, (uint64_t)v306);
        uint64_t v195 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v195, v196);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for Appointment);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v197, v198, "%s created appointment: %s");
        OUTLINED_FUNCTION_28_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for Appointment);
      }

      OUTLINED_FUNCTION_66_7(v199, v200, (void (*)(void))type metadata accessor for Appointment);
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = (uint64_t *)&demangling cache variable for type metadata for Appointment?;
    goto LABEL_67;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v117 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_101;
  }
  uint64_t v112 = v117;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_101:
    swift_bridgeObjectRelease();
    uint64_t v201 = OUTLINED_FUNCTION_23_14((uint64_t)v82);
    Party.init(item:)(v201);
    uint64_t v202 = OUTLINED_FUNCTION_31_16();
    OUTLINED_FUNCTION_39_11(v202, v203, (uint64_t)&v307);
    if (!v107)
    {
      outlined init with take of RestaurantReservation(v112, (uint64_t)v47, (void (*)(void))type metadata accessor for Party);
      OUTLINED_FUNCTION_70_8((uint64_t)v47, (void (*)(void))type metadata accessor for Party, (uint64_t)&v305);
      uint64_t v204 = (void *)Logger.logObject.getter();
      os_log_type_t v205 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v205))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v207 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_79_7(v207);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v208 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v208);
        OUTLINED_FUNCTION_18_24();
        OUTLINED_FUNCTION_41_14(v32, (void (*)(void))type metadata accessor for Party, (uint64_t)&v304 + 8);
        uint64_t v209 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v209, v210);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for Party);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v211, v212, "%s created upcomingParty: %s");
        OUTLINED_FUNCTION_28_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v32, (void (*)(void))type metadata accessor for Party);
      }

      OUTLINED_FUNCTION_66_7(v213, v214, (void (*)(void))type metadata accessor for Party);
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = &demangling cache variable for type metadata for Party?;
    goto LABEL_67;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v119 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
  uint64_t v112 = v119;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_109:
    swift_bridgeObjectRelease();
    uint64_t v215 = OUTLINED_FUNCTION_23_14((uint64_t)v82);
    Trip.init(item:)(v215);
    uint64_t v216 = OUTLINED_FUNCTION_31_16();
    if (__swift_getEnumTagSinglePayload(v216, v217, v32) != 1)
    {
      uint64_t v299 = v32;
      OUTLINED_FUNCTION_77_8(v112, (void (*)(void))type metadata accessor for Trip, (uint64_t)&v304);
      uint64_t v218 = (uint64_t)v283;
      _s10OmniSearch0B6ResultVWOcTm_3(v112, (uint64_t)v283, (void (*)(void))type metadata accessor for Trip);
      uint64_t v219 = (void *)Logger.logObject.getter();
      os_log_type_t v220 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v220))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v221 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_56_8(v221);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v222 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v222);
        OUTLINED_FUNCTION_18_24();
        OUTLINED_FUNCTION_41_14(v218, (void (*)(void))type metadata accessor for Trip, (uint64_t)&v301);
        uint64_t v223 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v223, v224);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v218, (void (*)(void))type metadata accessor for Trip);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v225, v226, "%s created trip: %s");
        OUTLINED_FUNCTION_33_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v218, (void (*)(void))type metadata accessor for Trip);
      }

      OUTLINED_FUNCTION_68_8((void (*)(void))type metadata accessor for Trip, (uint64_t)&v304);
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = (uint64_t *)&demangling cache variable for type metadata for Trip?;
    goto LABEL_67;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v121 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_116;
  }
  uint64_t v112 = v121;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    uint64_t v227 = (void *)OUTLINED_FUNCTION_23_14((uint64_t)v82);
    FlightReservation.init(item:)(v227, v228);
    uint64_t v229 = OUTLINED_FUNCTION_31_16();
    OUTLINED_FUNCTION_39_11(v229, v230, (uint64_t)&v302);
    if (!v107)
    {
      OUTLINED_FUNCTION_77_8(v282, (void (*)(void))type metadata accessor for FlightReservation, (uint64_t)&v300);
      _s10OmniSearch0B6ResultVWOcTm_3(v112, v280, (void (*)(void))type metadata accessor for FlightReservation);
      uint64_t v232 = (void *)Logger.logObject.getter();
      os_log_type_t v233 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v233))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v235 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_56_8(v235);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v236 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v236);
        OUTLINED_FUNCTION_18_24();
        uint64_t v237 = v280;
        OUTLINED_FUNCTION_41_14(v280, (void (*)(void))type metadata accessor for FlightReservation, (uint64_t)&v296);
        uint64_t v238 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v238, v239);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v237, (void (*)(void))type metadata accessor for FlightReservation);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v240, v241, "%s created upcomingFlight: %s");
        OUTLINED_FUNCTION_33_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v280, (void (*)(void))type metadata accessor for FlightReservation);
      }

      uint64_t v242 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]))
                    + 48);
      OUTLINED_FUNCTION_68_8((void (*)(void))type metadata accessor for FlightReservation, (uint64_t)&v300);
      *(void *)(a2 + v242) = MEMORY[0x263F8EE78];
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = (uint64_t *)&demangling cache variable for type metadata for FlightReservation?;
    uint64_t v231 = (uint64_t *)&v303;
    goto LABEL_119;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v123 == v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_125;
  }
  OUTLINED_FUNCTION_72_6();
  OUTLINED_FUNCTION_44_11();
  if (v108)
  {
LABEL_125:
    swift_bridgeObjectRelease();
    uint64_t v243 = OUTLINED_FUNCTION_23_14((uint64_t)v82);
    HotelReservation.init(item:)(v243);
    uint64_t v244 = OUTLINED_FUNCTION_31_16();
    OUTLINED_FUNCTION_39_11(v244, v245, (uint64_t)&v297);
    if (!v107)
    {
      OUTLINED_FUNCTION_77_8(v279, (void (*)(void))type metadata accessor for HotelReservation, (uint64_t)&v295);
      _s10OmniSearch0B6ResultVWOcTm_3(v112, v277, (void (*)(void))type metadata accessor for HotelReservation);
      uint64_t v246 = (void *)Logger.logObject.getter();
      os_log_type_t v247 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_16_21(v247))
      {
        OUTLINED_FUNCTION_83_2();
        uint64_t v249 = OUTLINED_FUNCTION_11_22();
        OUTLINED_FUNCTION_56_8(v249);
        OUTLINED_FUNCTION_36_15(4.8151e-34);
        uint64_t v250 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
        OUTLINED_FUNCTION_3_28(v250);
        OUTLINED_FUNCTION_18_24();
        uint64_t v251 = v277;
        OUTLINED_FUNCTION_41_14(v277, (void (*)(void))type metadata accessor for HotelReservation, (uint64_t)&v291);
        uint64_t v252 = String.init<A>(describing:)();
        *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v252, v253);
        OUTLINED_FUNCTION_5_18();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v251, (void (*)(void))type metadata accessor for HotelReservation);
        OUTLINED_FUNCTION_13_25(&dword_257DC6000, v254, v255, "%s created upcomingHotel: %s");
        OUTLINED_FUNCTION_33_13();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v277, (void (*)(void))type metadata accessor for HotelReservation);
      }

      OUTLINED_FUNCTION_68_8((void (*)(void))type metadata accessor for HotelReservation, (uint64_t)&v295);
      type metadata accessor for SearchResultItem(0);
      OUTLINED_FUNCTION_43_14();
      goto LABEL_80;
    }
    uint64_t v142 = &demangling cache variable for type metadata for HotelReservation?;
    uint64_t v231 = &v298;
    goto LABEL_119;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v104 && v125 == v105)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_72_6();
    OUTLINED_FUNCTION_44_11();
    if ((v108 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v127 = Logger.logObject.getter();
      os_log_type_t v128 = static os_log_type_t.error.getter();
      if (!OUTLINED_FUNCTION_16_21(v128))
      {

        OUTLINED_FUNCTION_73_5();
        goto LABEL_63;
      }
      OUTLINED_FUNCTION_83_2();
      uint64_t v129 = OUTLINED_FUNCTION_11_22();
      OUTLINED_FUNCTION_56_8(v129);
      OUTLINED_FUNCTION_36_15(4.8151e-34);
      uint64_t v130 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
      OUTLINED_FUNCTION_3_28(v130);
      OUTLINED_FUNCTION_18_24();
      swift_bridgeObjectRetain();
      *(void *)&long long v303 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v104, v105, &v305);
      OUTLINED_FUNCTION_5_18();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_13_25(&dword_257DC6000, v131, v132, "%s unimplemented eventType: %s");
      OUTLINED_FUNCTION_33_13();
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v256 = OUTLINED_FUNCTION_23_14((uint64_t)v82);
  RestaurantReservation.init(item:)(v256);
  uint64_t v257 = OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_39_11(v257, v258, (uint64_t)&v292);
  if (v107)
  {
    uint64_t v142 = (uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?;
    uint64_t v231 = &v293;
LABEL_119:
    uint64_t v143 = *(v231 - 32);
    goto LABEL_68;
  }
  OUTLINED_FUNCTION_77_8(v276, (void (*)(void))type metadata accessor for RestaurantReservation, (uint64_t)v290);
  _s10OmniSearch0B6ResultVWOcTm_3(v112, v274, (void (*)(void))type metadata accessor for RestaurantReservation);
  v259 = (void *)Logger.logObject.getter();
  os_log_type_t v260 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_16_21(v260))
  {
    OUTLINED_FUNCTION_83_2();
    uint64_t v262 = OUTLINED_FUNCTION_11_22();
    OUTLINED_FUNCTION_56_8(v262);
    OUTLINED_FUNCTION_36_15(4.8151e-34);
    uint64_t v263 = OUTLINED_FUNCTION_4_23((uint64_t)"createSearchResult(from:)");
    OUTLINED_FUNCTION_3_28(v263);
    OUTLINED_FUNCTION_18_24();
    uint64_t v264 = v274;
    OUTLINED_FUNCTION_41_14(v274, (void (*)(void))type metadata accessor for RestaurantReservation, (uint64_t)v288);
    uint64_t v265 = String.init<A>(describing:)();
    *(void *)&long long v303 = OUTLINED_FUNCTION_32_13(v265, v266);
    OUTLINED_FUNCTION_5_18();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v264, (void (*)(void))type metadata accessor for RestaurantReservation);
    OUTLINED_FUNCTION_13_25(&dword_257DC6000, v267, v268, "%s created upcomingRestaurant: %s");
    OUTLINED_FUNCTION_33_13();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    _s10OmniSearch0B6ResultVWOhTm_0(v274, (void (*)(void))type metadata accessor for RestaurantReservation);
  }

  OUTLINED_FUNCTION_68_8((void (*)(void))type metadata accessor for RestaurantReservation, (uint64_t)v290);
  type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_43_14();
LABEL_80:
  swift_storeEnumTagMultiPayload();
  uint64_t v152 = type metadata accessor for SearchResult(0);
  uint64_t v169 = (void *)(a2 + *(int *)(v152 + 24));
  void *v169 = 0;
  v169[1] = 0;
  *(void *)(a2 + *(int *)(v152 + 20)) = v300;
  uint64_t v154 = a2;
LABEL_81:
  __swift_storeEnumTagSinglePayload(v154, 0, 1, v152);
  os_log_type_t v170 = v300;
  return v170;
}

uint64_t closure #2 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t default argument 1 of SearchResultItem.flightReservation(_:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t static EventManager.hydrateWithSourceDocuments(for:itemFetcher:)()
{
  OUTLINED_FUNCTION_27();
  v0[9] = v1;
  v0[10] = v2;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v0[11] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v0[12] = v4;
  v0[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v0[14] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v0[15] = v6;
  v0[16] = OUTLINED_FUNCTION_50_0();
  v0[17] = swift_task_alloc();
  v0[18] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t (__cdecl *v15)();
  uint64_t v16;

  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 152) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = OSSignposter.logHandle.getter();
  uint64_t v3 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v2, v3, v5, "EventManager.hydrateWithSourceDocuments", "", v4, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 80);

  uint64_t v8 = OUTLINED_FUNCTION_25_18();
  v9(v8);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 160) = OUTLINED_FUNCTION_160();
  *(void *)(v0 + 168) = *(void *)(v6 + 8);
  *(void *)(v0 + 176) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v10 = OUTLINED_FUNCTION_77_7();
  v11(v10);
  outlined init with copy of CustomStringConvertible(v7, v0 + 16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 184) = v12;
  outlined init with take of SageSearchClient((long long *)(v0 + 16), v12 + 16);
  uint64_t v15 = (uint64_t (__cdecl *)())((char *)&async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)
                              + async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v13;
  *uint64_t v13 = v0;
  v13[1] = static EventManager.hydrateWithSourceDocuments(for:itemFetcher:);
  return v15();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *(void *)(v1 + 56) = v0;
  *(void *)(v1 + 64) = v3;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  NSObject *v0;
  void *v1;
  uint64_t v2;
  unsigned int (*v3)(uint64_t);
  const char *v4;
  void (*v5)(void);
  _WORD *v6;
  os_signpost_type_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  NSObject *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_18_9();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v2 = OUTLINED_FUNCTION_20_1();
    if (v3(v2) == *MEMORY[0x263F90238])
    {
      uint64_t v4 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v5();
      uint64_t v4 = "";
    }
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v6);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v0, v7, v8, "EventManager.hydrateWithSourceDocuments", v4);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v9 = v1[8];
  uint64_t v10 = v0;
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v1[21];
  uint64_t v12 = v1[16];
  uint64_t v13 = v1[14];

  v11(v12, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v1[1];
  return v14(v9);
}

uint64_t closure #1 in static EventManager.hydrateWithSourceDocuments(for:itemFetcher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[14] = a2;
  v3[15] = a3;
  v3[13] = a1;
  type metadata accessor for SearchResult(0);
  v3[16] = swift_task_alloc();
  v3[17] = type metadata accessor for SearchResultItem(0);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in static EventManager.hydrateWithSourceDocuments(for:itemFetcher:), 0, 0);
}

uint64_t closure #1 in static EventManager.hydrateWithSourceDocuments(for:itemFetcher:)()
{
  uint64_t v37 = v0;
  _s10OmniSearch0B6ResultVWOcTm_3(v0[14], v0[19], (void (*)(void))type metadata accessor for SearchResultItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 17)
  {
    uint64_t v2 = v0[18];
    _s10OmniSearch0B6ResultVWOcTm_3(v0[19], v2, (void (*)(void))type metadata accessor for SearchResultItem);
    v0[5] = type metadata accessor for RestaurantReservation(0);
    v0[6] = lazy protocol witness table accessor for type RestaurantReservation and conformance RestaurantReservation(&lazy protocol witness table cache variable for type RestaurantReservation and conformance RestaurantReservation, (void (*)(uint64_t))type metadata accessor for RestaurantReservation);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v0 + 2);
    uint64_t v4 = type metadata accessor for RestaurantReservation;
  }
  else if (EnumCaseMultiPayload == 16)
  {
    uint64_t v2 = v0[18];
    _s10OmniSearch0B6ResultVWOcTm_3(v0[19], v2, (void (*)(void))type metadata accessor for SearchResultItem);
    v0[5] = type metadata accessor for HotelReservation(0);
    v0[6] = lazy protocol witness table accessor for type RestaurantReservation and conformance RestaurantReservation(&lazy protocol witness table cache variable for type HotelReservation and conformance HotelReservation, (void (*)(uint64_t))type metadata accessor for HotelReservation);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v0 + 2);
    uint64_t v4 = type metadata accessor for HotelReservation;
  }
  else
  {
    if (EnumCaseMultiPayload != 15)
    {
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v23 = v0[16];
      uint64_t v24 = v0[14];
      uint64_t v25 = type metadata accessor for Logger();
      __swift_project_value_buffer(v25, (uint64_t)static Logging.search);
      _s10OmniSearch0B6ResultVWOcTm_3(v24, v23, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_51_1(v27))
      {
        uint64_t v28 = v0[18];
        uint64_t v29 = v0[16];
        uint64_t v30 = OUTLINED_FUNCTION_83_2();
        uint64_t v36 = OUTLINED_FUNCTION_11_22();
        *(_DWORD *)uint64_t v30 = 136315394;
        v0[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002CLL, 0x80000002586818D0, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v30 + 12) = 2080;
        _s10OmniSearch0B6ResultVWOcTm_3(v29, v28, (void (*)(void))type metadata accessor for SearchResultItem);
        uint64_t v31 = String.init<A>(describing:)();
        v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B6ResultVWOhTm_0(v29, (void (*)(void))type metadata accessor for SearchResult);
        _os_log_impl(&dword_257DC6000, v26, (os_log_type_t)v24, "%s Returning event as-is. Unimplemented sub event type: %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        _s10OmniSearch0B6ResultVWOhTm_0(v0[16], (void (*)(void))type metadata accessor for SearchResult);
      }

      uint64_t v33 = v0[19];
      _s10OmniSearch0B6ResultVWOcTm_3(v0[14], v0[13], (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOhTm_0(v33, (void (*)(void))type metadata accessor for SearchResultItem);
LABEL_26:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_45_0();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v2 = v0[18];
    _s10OmniSearch0B6ResultVWOcTm_3(v0[19], v2, (void (*)(void))type metadata accessor for SearchResultItem);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
    swift_bridgeObjectRelease();
    v0[5] = type metadata accessor for FlightReservation(0);
    v0[6] = lazy protocol witness table accessor for type RestaurantReservation and conformance RestaurantReservation(&lazy protocol witness table cache variable for type FlightReservation and conformance FlightReservation, (void (*)(uint64_t))type metadata accessor for FlightReservation);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v0 + 2);
    uint64_t v4 = type metadata accessor for FlightReservation;
  }
  outlined init with take of RestaurantReservation(v2, (uint64_t)boxed_opaque_existential_1Tm, (void (*)(void))v4);
  _s10OmniSearch0B6ResultVWOhTm_0(v0[19], (void (*)(void))type metadata accessor for SearchResultItem);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v5 = OUTLINED_FUNCTION_77_7();
  uint64_t v7 = v6(v5);
  uint64_t v9 = v8;
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v10);
  os_log_type_t v12 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
  v0[20] = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  if (!v9
    || (v7 != 0xD000000000000014 || v9 != 0x800000025867C750)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logging.search);
    swift_bridgeObjectRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_27_12(v19))
    {
      uint64_t v20 = OUTLINED_FUNCTION_83_2();
      uint64_t v36 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)uint64_t v20 = 136315394;
      v0[11] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002CLL, 0x80000002586818D0, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2080;
      v0[7] = v7;
      v0[8] = v9;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v21 = String.init<A>(describing:)();
      v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_49_11(&dword_257DC6000, v18, v12, "%s Returning event as-is. Unimplemented bundleId: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    _s10OmniSearch0B6ResultVWOcTm_3(v0[14], v0[13], (void (*)(void))type metadata accessor for SearchResult);
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v14;
  *uint64_t v14 = v0;
  v14[1] = closure #1 in static EventManager.hydrateWithSourceDocuments(for:itemFetcher:);
  OUTLINED_FUNCTION_45_0();
  return static EventManager.hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

uint64_t static EventManager.hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)()
{
  OUTLINED_FUNCTION_27();
  v0[36] = v1;
  v0[37] = v2;
  v0[34] = v3;
  v0[35] = v4;
  v0[33] = v5;
  uint64_t v6 = type metadata accessor for OSSignpostError();
  v0[38] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v0[39] = v7;
  v0[40] = OUTLINED_FUNCTION_50_0();
  v0[41] = swift_task_alloc();
  v0[42] = swift_task_alloc();
  v0[43] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for RestaurantReservation(0);
  v0[44] = v8;
  OUTLINED_FUNCTION_81(v8);
  v0[45] = OUTLINED_FUNCTION_50_0();
  v0[46] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for HotelReservation(0);
  v0[47] = v9;
  OUTLINED_FUNCTION_81(v9);
  v0[48] = OUTLINED_FUNCTION_50_0();
  v0[49] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FlightReservation(0);
  v0[50] = v10;
  OUTLINED_FUNCTION_81(v10);
  v0[51] = OUTLINED_FUNCTION_50_0();
  v0[52] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SearchResultItem(0);
  v0[53] = v11;
  OUTLINED_FUNCTION_81(v11);
  v0[54] = OUTLINED_FUNCTION_50_0();
  v0[55] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for EmailDocument(0);
  OUTLINED_FUNCTION_81(v12);
  v0[56] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SearchResult(0);
  v0[57] = v13;
  OUTLINED_FUNCTION_81(v13);
  v0[58] = OUTLINED_FUNCTION_50_0();
  v0[59] = swift_task_alloc();
  v0[60] = swift_task_alloc();
  v0[61] = swift_task_alloc();
  v0[62] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for OSSignpostID();
  v0[63] = v14;
  OUTLINED_FUNCTION_12_0(v14);
  v0[64] = v15;
  v0[65] = OUTLINED_FUNCTION_50_0();
  v0[66] = swift_task_alloc();
  v0[67] = swift_task_alloc();
  v0[68] = swift_task_alloc();
  v0[69] = swift_task_alloc();
  v0[70] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v16, v17, v18);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  *(void *)(v6 + 624) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void static EventManager.hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)()
{
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 568) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v3);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v2, v4, v5, "EventManager.hydrateWithSourceEmailDocument", "");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v6 = *(void *)(v0 + 512);

  uint64_t v7 = OUTLINED_FUNCTION_25_18();
  v8(v7);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 576) = OUTLINED_FUNCTION_160();
  *(void *)(v0 + 584) = *(void *)(v6 + 8);
  *(void *)(v0 + 592) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v9 = OUTLINED_FUNCTION_65_7();
  v10(v9);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 496);
  uint64_t v12 = *(void *)(v0 + 272);
  uint64_t v13 = type metadata accessor for Logger();
  *(void *)(v0 + 600) = __swift_project_value_buffer(v13, (uint64_t)static Logging.search);
  _s10OmniSearch0B6ResultVWOcTm_3(v12, v11, (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void *)(v0 + 496);
  uint64_t v18 = objc_retain_x10;
  if (v16)
  {
    uint64_t v19 = *(void *)(v0 + 488);
    uint64_t v20 = OUTLINED_FUNCTION_83_2();
    uint64_t v57 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v20 = 136315394;
    *(void *)(v0 + 248) = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    _s10OmniSearch0B6ResultVWOcTm_3(v17, v19, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v0 + 256) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v17, (void (*)(void))type metadata accessor for SearchResult);
    OUTLINED_FUNCTION_57_8(&dword_257DC6000, v14, v23, "%s Fetching source Email for event: %s");
    OUTLINED_FUNCTION_62_8();
    uint64_t v18 = objc_retain_x10;
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    _s10OmniSearch0B6ResultVWOhTm_0(*(void *)(v0 + 496), (void (*)(void))type metadata accessor for SearchResult);
  }

  unint64_t v24 = *(void *)(v0 + 288);
  if (v24)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = *(void *)(v0 + 280);
      uint64_t v28 = OUTLINED_FUNCTION_83_2();
      uint64_t v57 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)uint64_t v28 = *((void *)v18 + 403);
      *(void *)(v0 + 232) = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 240) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v24, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_49_11(&dword_257DC6000, v25, v26, "%s Fetching source document via mailMessageId: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v37 = *(void *)(v0 + 280);
    __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 296), *(void *)(*(void *)(v0 + 296) + 24));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    *(void *)(inited + 32) = v37;
    *(void *)(inited + 40) = v24;
    swift_bridgeObjectRetain();
    specialized Set.init(_nonEmptyArrayLiteral:)();
    *(void *)(v0 + 608) = v39;
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v40;
    *uint64_t v40 = v0;
    v40[1] = static EventManager.hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:);
    OUTLINED_FUNCTION_55_11();
    __asm { BRAA            X4, X16 }
  }
  _s10OmniSearch0B6ResultVWOcTm_3(*(void *)(v0 + 272), *(void *)(v0 + 464), (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = v18;
    uint64_t v32 = *(void *)(v0 + 488);
    uint64_t v33 = *(void *)(v0 + 464);
    uint64_t v34 = OUTLINED_FUNCTION_83_2();
    uint64_t v57 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v34 = *((void *)v31 + 403);
    *(void *)(v0 + 216) = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v34 + 12) = 2080;
    _s10OmniSearch0B6ResultVWOcTm_3(v33, v32, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v35 = String.init<A>(describing:)();
    *(void *)(v0 + 192) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v33, (void (*)(void))type metadata accessor for SearchResult);
    _os_log_impl(&dword_257DC6000, v29, v30, "%s Skipping. No mailMessageId for this event: %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    _s10OmniSearch0B6ResultVWOhTm_0(*(void *)(v0 + 464), (void (*)(void))type metadata accessor for SearchResult);
  }

  _s10OmniSearch0B6ResultVWOcTm_3(*(void *)(v0 + 272), *(void *)(v0 + 264), (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v43 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v44 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v45 = OUTLINED_FUNCTION_148();
    int v47 = v46(v45);
    uint64_t v48 = *(void *)(v0 + 520);
    if (v47 == *MEMORY[0x263F90238])
    {
      uint64_t v49 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v50();
      uint64_t v49 = "";
    }
    uint64_t v51 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v51 = 0;
    os_signpost_id_t v52 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v43, v44, v52, "EventManager.hydrateWithSourceEmailDocument", v49, v51, 2u);
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v48 = *(void *)(v0 + 520);
  }
  uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v54 = *(void *)(v0 + 504);
  OUTLINED_FUNCTION_9_16(v43);
  v53(v48, v54);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_55_11();
  __asm { BRAA            X1, X16 }
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  uint64_t v68;
  unint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  unsigned int (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t);
  uint64_t v87;
  const char *v88;
  void (*v89)(void);
  uint8_t *v90;
  os_signpost_type_t v91;
  os_signpost_id_t v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  uint64_t v1 = (uint64_t)(v0 + 18);
  uint64_t v2 = v0[78];
  uint64_t v3 = v0[36];
  swift_bridgeObjectRetain();
  os_signpost_type_t v4 = OUTLINED_FUNCTION_56_1();
  uint64_t v6 = (void *)specialized Dictionary.subscript.getter(v4, v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    uint64_t v7 = v0[60];
    uint64_t v8 = v0[55];
    uint64_t v9 = v0[34];
    swift_bridgeObjectRelease();
    type metadata accessor for LocalIndexClient();
    static LocalIndexClient.emailDocument(from:)();
    _s10OmniSearch0B6ResultVWOcTm_3(v9, v7, (void (*)(void))type metadata accessor for SearchResult);
    _s10OmniSearch0B6ResultVWOcTm_3(v9, v8, (void (*)(void))type metadata accessor for SearchResultItem);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 17:
        uint64_t v39 = v0[60];
        uint64_t v40 = v0[46];
        outlined init with take of RestaurantReservation(v0[55], v40, (void (*)(void))type metadata accessor for RestaurantReservation);
        EmailDocument.llmConsumableDescription.getter();
        uint64_t v42 = v41;
        os_signpost_type_t v44 = v43;
        swift_bridgeObjectRelease();
        *(void *)(v40 + 80) = v42;
        *(void *)(v40 + 88) = v44;
        _s10OmniSearch0B6ResultVWOhTm_0(v39, (void (*)(void))type metadata accessor for SearchResultItem);
        _s10OmniSearch0B6ResultVWOcTm_3(v40, v39, (void (*)(void))type metadata accessor for RestaurantReservation);
        swift_storeEnumTagMultiPayload();
        uint64_t v1 = Logger.logObject.getter();
        uint64_t v45 = static os_log_type_t.debug.getter();
        uint64_t v46 = os_log_type_enabled((os_log_t)v1, v45);
        int v47 = v0[56];
        uint64_t v25 = v0[46];
        if (v46)
        {
          uint64_t v98 = v0[46];
          uint64_t v48 = v0[45];
          uint64_t v49 = OUTLINED_FUNCTION_83_2();
          unint64_t v100 = OUTLINED_FUNCTION_11_22();
          *(_DWORD *)uint64_t v49 = 136315394;
          v0[20] = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v49 + 12) = 2080;
          OUTLINED_FUNCTION_0_1();
          _s10OmniSearch0B6ResultVWOcTm_3(v98, v48, (void (*)(void))type metadata accessor for RestaurantReservation);
          uint64_t v50 = String.init<A>(describing:)();
          v0[22] = OUTLINED_FUNCTION_76_7(v50, v51);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_257DC6000, (os_log_t)v1, v45, "%s Set eventSourceLLMConsumableDescription to %s", (uint8_t *)v49, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();

          _s10OmniSearch0B6ResultVWOhTm_0(v47, (void (*)(void))type metadata accessor for EmailDocument);
          os_signpost_id_t v52 = type metadata accessor for RestaurantReservation;
          uint64_t v53 = v98;
          goto LABEL_25;
        }

        _s10OmniSearch0B6ResultVWOhTm_0(v47, (void (*)(void))type metadata accessor for EmailDocument);
        uint64_t v80 = type metadata accessor for RestaurantReservation;
LABEL_24:
        os_signpost_id_t v52 = v80;
        uint64_t v53 = v25;
LABEL_25:
        _s10OmniSearch0B6ResultVWOhTm_0(v53, (void (*)(void))v52);
        unint64_t v36 = v0 + 67;
        outlined init with take of RestaurantReservation(v0[60], v0[33], (void (*)(void))type metadata accessor for SearchResult);
        OSSignposter.logHandle.getter();
        OUTLINED_FUNCTION_53_11();
        static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          swift_retain();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v81 = OUTLINED_FUNCTION_35_16();
          if (v82(v81) != *MEMORY[0x263F90238]) {
            goto LABEL_33;
          }
LABEL_31:
          uint64_t v87 = *v36;
          id v88 = "[Error] Interval already ended";
LABEL_34:
          uint64_t v90 = (uint8_t *)OUTLINED_FUNCTION_55();
          *(_WORD *)uint64_t v90 = 0;
          id v97 = v87;
          OSSignpostID.rawValue.getter();
          OUTLINED_FUNCTION_186();
          _os_signpost_emit_with_name_impl(&dword_257DC6000, (os_log_t)v1, v91, v92, "EventManager.hydrateWithSourceEmailDocument", v88, v90, 2u);
          OUTLINED_FUNCTION_34();
LABEL_35:
          uint64_t v93 = (void (*)(uint64_t, uint64_t))v0[73];
          unint64_t v94 = v0[63];
          OUTLINED_FUNCTION_9_16((void *)v1);
          v93(v97, v94);
          swift_release();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          OUTLINED_FUNCTION_13();
          OUTLINED_FUNCTION_55_11();
          __asm { BRAA            X1, X16 }
        }
LABEL_32:
        id v97 = *v36;
        goto LABEL_35;
      case 16:
        uint64_t v54 = v0[60];
        uint64_t v55 = v0[49];
        outlined init with take of RestaurantReservation(v0[55], v55, (void (*)(void))type metadata accessor for HotelReservation);
        EmailDocument.llmConsumableDescription.getter();
        uint64_t v57 = v56;
        uint64_t v59 = v58;
        swift_bridgeObjectRelease();
        *(void *)(v55 + 80) = v57;
        *(void *)(v55 + 88) = v59;
        _s10OmniSearch0B6ResultVWOhTm_0(v54, (void (*)(void))type metadata accessor for SearchResultItem);
        _s10OmniSearch0B6ResultVWOcTm_3(v55, v54, (void (*)(void))type metadata accessor for HotelReservation);
        swift_storeEnumTagMultiPayload();
        uint64_t v60 = Logger.logObject.getter();
        uint64_t v61 = static os_log_type_t.debug.getter();
        uint64_t v1 = v61;
        uint64_t v62 = os_log_type_enabled(v60, v61);
        uint64_t v63 = v0[56];
        uint64_t v25 = v0[49];
        if (v62)
        {
          uint64_t v64 = OUTLINED_FUNCTION_83_2();
          unint64_t v100 = OUTLINED_FUNCTION_11_22();
          *(_DWORD *)uint64_t v64 = 136315394;
          v0[23] = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v64 + 12) = 2080;
          OUTLINED_FUNCTION_0_1();
          uint64_t v65 = OUTLINED_FUNCTION_148();
          _s10OmniSearch0B6ResultVWOcTm_3(v65, v66, v67);
          uint64_t v68 = String.init<A>(describing:)();
          v0[25] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, &v100);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_257DC6000, v60, (os_log_type_t)v1, "%s Set eventSourceLLMConsumableDescription to %s", (uint8_t *)v64, 0x16u);
          OUTLINED_FUNCTION_62_8();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
        }
        _s10OmniSearch0B6ResultVWOhTm_0(v63, (void (*)(void))type metadata accessor for EmailDocument);
        uint64_t v80 = type metadata accessor for HotelReservation;
        goto LABEL_24;
      case 15:
        uint64_t v11 = v0[60];
        uint64_t v12 = v0[55];
        uint64_t v13 = v0[52];
        uint64_t v1 = v0[53];
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        os_log_type_t v15 = *(void *)(v12 + *(int *)(v14 + 48));
        outlined init with take of RestaurantReservation(v12, v13, (void (*)(void))type metadata accessor for FlightReservation);
        EmailDocument.llmConsumableDescription.getter();
        uint64_t v17 = v16;
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        *(void *)(v13 + 80) = v17;
        *(void *)(v13 + 88) = v19;
        _s10OmniSearch0B6ResultVWOhTm_0(v11, (void (*)(void))type metadata accessor for SearchResultItem);
        uint64_t v20 = *(int *)(v14 + 48);
        _s10OmniSearch0B6ResultVWOcTm_3(v13, v11, (void (*)(void))type metadata accessor for FlightReservation);
        *(void *)(v11 + v20) = v15;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = Logger.logObject.getter();
        unint64_t v22 = static os_log_type_t.debug.getter();
        uint64_t v23 = os_log_type_enabled(v21, v22);
        unint64_t v24 = v0[56];
        uint64_t v25 = v0[52];
        if (v23)
        {
          os_log_type_t v26 = v0[51];
          uint64_t v1 = OUTLINED_FUNCTION_83_2();
          unint64_t v100 = OUTLINED_FUNCTION_11_22();
          *(_DWORD *)uint64_t v1 = 136315394;
          v0[26] = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v1 + 12) = 2080;
          OUTLINED_FUNCTION_0_1();
          _s10OmniSearch0B6ResultVWOcTm_3(v25, v26, (void (*)(void))type metadata accessor for FlightReservation);
          uint64_t v27 = String.init<A>(describing:)();
          v0[28] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v100);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_57_8(&dword_257DC6000, v21, v29, "%s Set eventSourceLLMConsumableDescription to %s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
        }
        _s10OmniSearch0B6ResultVWOhTm_0(v24, (void (*)(void))type metadata accessor for EmailDocument);
        uint64_t v80 = type metadata accessor for FlightReservation;
        goto LABEL_24;
    }
    _s10OmniSearch0B6ResultVWOcTm_3(v0[34], v0[59], (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v70 = Logger.logObject.getter();
    uint64_t v71 = static os_log_type_t.debug.getter();
    uint64_t v72 = os_log_type_enabled(v70, v71);
    uint64_t v73 = v0[59];
    uint64_t v74 = v0[56];
    if (v72)
    {
      unint64_t v99 = v0[56];
      uint64_t v75 = v0[54];
      uint64_t v76 = OUTLINED_FUNCTION_83_2();
      unint64_t v100 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)uint64_t v76 = 136315394;
      v0[18] = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
      uint64_t v1 = (uint64_t)(v0 + 19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v76 + 12) = 2080;
      _s10OmniSearch0B6ResultVWOcTm_3(v73, v75, (void (*)(void))type metadata accessor for SearchResultItem);
      uint64_t v77 = String.init<A>(describing:)();
      v0[19] = OUTLINED_FUNCTION_76_7(v77, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10OmniSearch0B6ResultVWOhTm_0(v73, (void (*)(void))type metadata accessor for SearchResult);
      _os_log_impl(&dword_257DC6000, v70, v71, "%s Returning event as-is. Unimplemented sub event type: %s", (uint8_t *)v76, 0x16u);
      OUTLINED_FUNCTION_62_8();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();

      uint64_t v79 = v99;
    }
    else
    {

      _s10OmniSearch0B6ResultVWOhTm_0(v73, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v79 = v74;
    }
    _s10OmniSearch0B6ResultVWOhTm_0(v79, (void (*)(void))type metadata accessor for EmailDocument);
    unint64_t v36 = v0 + 68;
    uint64_t v83 = v0[60];
    os_log_type_t v84 = v0[55];
    _s10OmniSearch0B6ResultVWOcTm_3(v0[34], v0[33], (void (*)(void))type metadata accessor for SearchResult);
    _s10OmniSearch0B6ResultVWOhTm_0(v84, (void (*)(void))type metadata accessor for SearchResultItem);
    _s10OmniSearch0B6ResultVWOhTm_0(v83, (void (*)(void))type metadata accessor for SearchResult);
    OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_53_11();
    static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
      goto LABEL_32;
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    BOOL v85 = OUTLINED_FUNCTION_35_16();
    if (v86(v85) == *MEMORY[0x263F90238]) {
      goto LABEL_31;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    os_log_type_t v30 = Logger.logObject.getter();
    uint64_t v31 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_51_1(v31))
    {
      uint64_t v1 = (uint64_t)(v0 + 21);
      uint64_t v32 = OUTLINED_FUNCTION_83_2();
      unint64_t v100 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)uint64_t v32 = 136315394;
      v0[21] = OUTLINED_FUNCTION_7_24((uint64_t)"hydrateWithSourceEmailDocument(for:mailMessageId:itemFetcher:)");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v33 = OUTLINED_FUNCTION_77_7();
      v0[17] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v30, (os_log_type_t)v3, "%s No EmailDocument in the mapping for %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v36 = v0 + 66;
    _s10OmniSearch0B6ResultVWOcTm_3(v0[34], v0[33], (void (*)(void))type metadata accessor for SearchResult);
    OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_53_11();
    static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
      goto LABEL_32;
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v37 = OUTLINED_FUNCTION_35_16();
    if (v38(v37) == *MEMORY[0x263F90238]) {
      goto LABEL_31;
    }
  }
LABEL_33:
  uint64_t v87 = *v36;
  OUTLINED_FUNCTION_77();
  v89();
  id v88 = "";
  goto LABEL_34;
}

id @nonobjc CSSearchQuery.init(queryString:queryContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  os_signpost_id_t v5 = (void *)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithQueryString_queryContext_, v5, a3);

  return v6;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.detectedEventTypes.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_detectedEventTypes);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey;
  if (!lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey;
  if (!lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey;
  if (!lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey;
  if (!lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey;
  if (!lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultKey and conformance SearchResultKey);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc CSSearchQueryContext.bundleIDs.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setBundleIDs_, isa);
}

uint64_t partial apply for closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(uint64_t a1)
{
  return closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(a1, *(void **)(v1 + 16));
}

uint64_t sub_2583CDA78()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t partial apply for closure #1 in static EventManager.hydrateWithSourceDocuments(for:itemFetcher:)(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:);
  return closure #1 in static EventManager.hydrateWithSourceDocuments(for:itemFetcher:)(a1, a2, v2 + 16);
}

uint64_t _s10OmniSearch0B6ResultVWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

ValueMetadata *type metadata accessor for EventManager()
{
  return &type metadata for EventManager;
}

uint64_t lazy protocol witness table accessor for type RestaurantReservation and conformance RestaurantReservation(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2583CDC10()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void partial apply for closure #1 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(unint64_t a1)
{
  closure #1 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)(a1, v1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_2583CDC68()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<String?, Never>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + ((v2 + 16) & ~v2));
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_148();
  return MEMORY[0x270FA0238](v4, v5, v3);
}

uint64_t partial apply for closure #2 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<String?, Never>);
  OUTLINED_FUNCTION_12_0(v0);
  return closure #2 in closure #1 in static EventManager.fetchExtractedEventsLLMConsumableDescription(for:)();
}

uint64_t outlined init with take of RestaurantReservation(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t _s10OmniSearch0B6ResultVWOcTm_3(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t outlined assign with take of PartialExtractedAttributes?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_28(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_4_23@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_5_18()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_7_24@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003ELL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 80));
}

void OUTLINED_FUNCTION_9_16(void *a1@<X8>)
{
  uint64_t v4 = v1[42];
  *(void *)(v2 - 112) = v1[43];
  *(void *)(v2 - 104) = v4;
  uint64_t v5 = v1[40];
  *(void *)(v2 - 96) = v1[41];
  *(void *)(v2 - 88) = v5;
}

uint64_t OUTLINED_FUNCTION_11_22()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_13_25(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

BOOL OUTLINED_FUNCTION_16_21(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_17_19@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void OUTLINED_FUNCTION_18_24()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_23_14(uint64_t result)
{
  *(void *)(v1 - 184) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_13()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_31_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_13(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 120));
}

uint64_t OUTLINED_FUNCTION_33_13()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_34_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_16()
{
  return v0;
}

void OUTLINED_FUNCTION_36_15(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_39_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return __swift_getEnumTagSinglePayload(a1, a2, *(void *)(a3 - 256));
}

uint64_t OUTLINED_FUNCTION_41_14@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return _s10OmniSearch0B6ResultVWOcTm_3(a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_43_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_11()
{
  return swift_release();
}

void OUTLINED_FUNCTION_49_11(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_53_11()
{
  return OSSignpostIntervalState.signpostID.getter();
}

BOOL OUTLINED_FUNCTION_54_9(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_56_8(uint64_t result)
{
  *(void *)(v1 - 120) = result;
  return result;
}

void OUTLINED_FUNCTION_57_8(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_62_8()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_65_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_66_7(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return outlined init with take of RestaurantReservation(v3, v4, a3);
}

void OUTLINED_FUNCTION_67_8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_68_8@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return outlined init with take of RestaurantReservation(v4, v2, a1);
}

uint64_t OUTLINED_FUNCTION_70_8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return _s10OmniSearch0B6ResultVWOcTm_3(a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_72_6()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_73_5()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_76_7(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t OUTLINED_FUNCTION_77_8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return outlined init with take of RestaurantReservation(a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_79_7(uint64_t result)
{
  *(void *)(v1 - 192) = result;
  *(void *)(v1 - 120) = result;
  return result;
}

id one-time initialization function for searchableIndex()
{
  id result = objc_msgSend(self, sel_defaultSearchableIndex);
  static FileContentManager.searchableIndex = (uint64_t)result;
  return result;
}

uint64_t static FileContentManager.hydrateFileContent(from:)(uint64_t a1)
{
  v1[44] = a1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v1[45] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v1[46] = v3;
  v1[47] = OUTLINED_FUNCTION_50_0();
  v1[48] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SearchResult(0);
  v1[49] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v1[50] = v5;
  v1[51] = OUTLINED_FUNCTION_50_0();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OSSignpostID();
  v1[60] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v1[61] = v7;
  v1[62] = OUTLINED_FUNCTION_50_0();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  return MEMORY[0x270FA2498](static FileContentManager.hydrateFileContent(from:), 0, 0);
}

uint64_t static FileContentManager.hydrateFileContent(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v93 = v12;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  *(void *)(v12 + 528) = __swift_project_value_buffer(v13, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    BOOL v16 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)BOOL v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v14, v15, v17, "FileContentManager.hydrateFileContent", "", v16, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v18 = *(void *)(v12 + 520);
  uint64_t v19 = *(void *)(v12 + 512);
  uint64_t v20 = *(void *)(v12 + 480);
  uint64_t v21 = *(void *)(v12 + 488);
  uint64_t v22 = *(void *)(v12 + 352);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v12 + 536) = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  *(void *)(v12 + 544) = v23;
  *(void *)(v12 + 552) = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v23(v18, v20);
  uint64_t v24 = *(void *)(v22 + 16);
  *(void *)(v12 + 560) = v24;
  if (v24)
  {
    uint64_t v25 = *(void *)(v12 + 400);
    int v26 = *(_DWORD *)(v25 + 80);
    *(_DWORD *)(v12 + 664) = v26;
    uint64_t v27 = *(void *)(v25 + 72);
    *(void *)(v12 + 568) = v27;
    *(void *)(v12 + 576) = *MEMORY[0x263F08098];
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    uint64_t v30 = MEMORY[0x263F8EE78];
    while (1)
    {
      *(void *)(v12 + 600) = v30;
      *(void *)(v12 + 592) = v29;
      *(void *)(v12 + 584) = 0;
      outlined init with copy of SearchResult(v28 + ((v26 + 32) & ~(unint64_t)v26) + v27 * v29, *(void *)(v12 + 472));
      SearchResultItem.associatedValue.getter(v12 + 80);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
      OUTLINED_FUNCTION_29_16();
      if (swift_dynamicCast())
      {
        uint64_t v32 = *(void *)(v12 + 200);
        unint64_t v31 = *(void *)(v12 + 208);
        *(void *)(v12 + 608) = v32;
        *(void *)(v12 + 616) = v31;
        uint64_t v33 = *(void **)(v12 + 216);
        *(void *)(v12 + 624) = v33;
        swift_bridgeObjectRetain();
        id v34 = v33;
        uint64_t v22 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(objc_msgSend(v34, sel_attributeSet));
        unint64_t v36 = v35;
        swift_bridgeObjectRelease();

        if (v36)
        {
          uint64_t v67 = one-time initialization token for search;
          swift_bridgeObjectRetain();
          if (v67 != -1) {
            swift_once();
          }
          uint64_t v68 = type metadata accessor for Logger();
          *(void *)(v12 + 632) = __swift_project_value_buffer(v68, (uint64_t)static Logging.search);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v69 = Logger.logObject.getter();
          os_log_type_t v70 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = OUTLINED_FUNCTION_13_1();
            uint64_t v92 = swift_slowAlloc();
            *(_DWORD *)uint64_t v71 = 136315650;
            *(void *)(v12 + 328) = OUTLINED_FUNCTION_19_20();
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v71 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v12 + 336) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v36, &v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v71 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v12 + 344) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v31, &v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, v69, v70, "%s Fetching file content with bundleID: %s, itemIdentifier: %s", (uint8_t *)v71, 0x20u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          if (one-time initialization token for searchableIndex != -1) {
            swift_once();
          }
          id v91 = (void *)static FileContentManager.searchableIndex;
          uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v79 = MEMORY[0x25A2C7AB0](v78);
          *(void *)(v12 + 640) = v79;
          swift_bridgeObjectRelease();
          uint64_t v80 = MEMORY[0x25A2C7AB0](v22, v36);
          *(void *)(v12 + 648) = v80;
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          uint64_t v81 = swift_allocObject();
          *(_OWORD *)(v81 + 16) = xmmword_258661700;
          *(void *)(v81 + 32) = v32;
          *(void *)(v81 + 40) = v31;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          *(void *)(v12 + 656) = isa;
          swift_bridgeObjectRelease();
          *(void *)(v12 + 16) = v12;
          *(void *)(v12 + 56) = v12 + 224;
          *(void *)(v12 + 24) = static FileContentManager.hydrateFileContent(from:);
          uint64_t v83 = swift_continuation_init();
          *(void *)(v12 + 160) = MEMORY[0x263EF8330];
          *(void *)(v12 + 168) = 0x40000000;
          *(void *)(v12 + 176) = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray?) -> () with result type [NSObject]?;
          *(void *)(v12 + 184) = &block_descriptor_1;
          *(void *)(v12 + 192) = v83;
          objc_msgSend(v91, sel_bulkFetchCacheFileDescriptorForProtectionClass_bundleID_identifiers_reason_completionHandler_, v79, v80, isa, 0, v12 + 160);
          return MEMORY[0x270FA23F0](v12 + 16, v84, v85, v86, v87, v88, v89, v90, a9, a10, a11, a12);
        }
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        __swift_project_value_buffer(v37, (uint64_t)static Logging.search);
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v22 = OUTLINED_FUNCTION_14_1();
          uint64_t v92 = OUTLINED_FUNCTION_13_1();
          *(_DWORD *)uint64_t v22 = 136315138;
          *(void *)(v22 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, 0x8000000258681970, &v92);
          _os_log_impl(&dword_257DC6000, v38, v39, "%s Expected to have item's CSSearchableItem.attributeSet.bundleID. It's OK, will just preserve existing result", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }

        outlined init with copy of SearchResult(*(void *)(v12 + 472), *(void *)(v12 + 424));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = OUTLINED_FUNCTION_17_20();
        }
        unint64_t v41 = *(void *)(v30 + 16);
        unint64_t v40 = *(void *)(v30 + 24);
        if (v41 >= v40 >> 1) {
          uint64_t v30 = OUTLINED_FUNCTION_15_21(v40);
        }
        uint64_t v42 = OUTLINED_FUNCTION_12_24();
        *(void *)(v30 + 16) = v41 + 1;
        outlined init with take of SearchResult(v42, v30 + v43 + v44 * v41);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v45 = *(void *)(v12 + 472);
        uint64_t v46 = *(void *)(v12 + 416);
        uint64_t v47 = type metadata accessor for Logger();
        __swift_project_value_buffer(v47, (uint64_t)static Logging.search);
        outlined init with copy of SearchResult(v45, v46);
        uint64_t v48 = Logger.logObject.getter();
        os_log_type_t v49 = static os_log_type_t.error.getter();
        uint64_t v22 = v49;
        BOOL v50 = os_log_type_enabled(v48, v49);
        uint64_t v51 = *(void *)(v12 + 416);
        if (v50)
        {
          uint64_t v52 = OUTLINED_FUNCTION_83_2();
          uint64_t v92 = OUTLINED_FUNCTION_11_22();
          *(_DWORD *)uint64_t v52 = 136315394;
          *(void *)(v52 + 4) = OUTLINED_FUNCTION_19_20();
          *(_WORD *)(v52 + 12) = 2080;
          SearchResultItem.associatedValue.getter(v12 + 120);
          uint64_t v53 = String.init<A>(describing:)();
          *(void *)(v52 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v92);
          swift_bridgeObjectRelease();
          outlined destroy of SearchResult(v51);
          _os_log_impl(&dword_257DC6000, v48, (os_log_type_t)v22, "%s Expected item to be of type FileDocument, but got -> %s. It's OK, will just preserve existing result", (uint8_t *)v52, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
          outlined destroy of SearchResult(*(void *)(v12 + 416));
        }

        outlined init with copy of SearchResult(*(void *)(v12 + 472), *(void *)(v12 + 408));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = OUTLINED_FUNCTION_17_20();
        }
        unint64_t v56 = *(void *)(v30 + 16);
        unint64_t v55 = *(void *)(v30 + 24);
        if (v56 >= v55 >> 1) {
          uint64_t v30 = OUTLINED_FUNCTION_15_21(v55);
        }
        uint64_t v57 = OUTLINED_FUNCTION_11_23();
        *(void *)(v30 + 16) = v56 + 1;
        outlined init with take of SearchResult(v57, v30 + v58 + v59 * v56);
      }
      uint64_t v60 = *(void *)(v12 + 560);
      uint64_t v61 = *(void *)(v12 + 592) + 1;
      outlined destroy of SearchResult(*(void *)(v12 + 472));
      if (v61 == v60)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      uint64_t v29 = *(void *)(v12 + 592) + 1;
      uint64_t v27 = *(void *)(v12 + 568);
      LOBYTE(v26) = *(unsigned char *)(v12 + 664);
      uint64_t v28 = *(void *)(v12 + 352);
    }
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
LABEL_32:
  uint64_t v62 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v63 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v64 = *(void *)(v12 + 384);
    uint64_t v66 = *(void *)(v12 + 360);
    uint64_t v65 = *(void *)(v12 + 368);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v65 + 88))(v64, v66) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v72();
    }
    uint64_t v22 = OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v73 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_20_20(&dword_257DC6000, v62, (os_signpost_type_t)v63, v73, "FileContentManager.hydrateFileContent");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_10_23();
  uint64_t v74 = *(void *)(v12 + 480);
  OUTLINED_FUNCTION_5_19();

  ((void (*)(uint64_t, uint64_t))v22)(v63, v74);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(uint64_t (**)(uint64_t))(v12 + 8);
  return v76(v30);
}

{
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  Swift::Int v43;
  Swift::String_optional v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_signpost_type_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t);
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(void);
  os_signpost_id_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  NSObject *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  os_log_type_t v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(uint64_t);
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(void);
  os_signpost_id_t v134;
  uint64_t v135;
  id v136;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  Class isa;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169[2];
  uint64_t v170;

  os_log_type_t v170 = v12;
  uint64_t v14 = (void *)(v12 + 224);
  uint64_t v13 = *(void *)(v12 + 224);
  os_signpost_type_t v15 = *(void **)(v12 + 648);
  BOOL v16 = *(void *)(v12 + 640);

  swift_bridgeObjectRetain_n();
  os_signpost_id_t v17 = Logger.logObject.getter();
  uint64_t v18 = static os_log_type_t.debug.getter();
  uint64_t v161 = (uint64_t *)(v12 + 328);
  uint64_t v162 = v12 + 224;
  if (os_log_type_enabled(v17, v18))
  {
    BOOL v16 = OUTLINED_FUNCTION_83_2();
    v169[0] = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)BOOL v16 = 136315394;
    *(void *)(v12 + 304) = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
    uint64_t v14 = (void *)(v12 + 224);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2080;
    *(void *)(v12 + 312) = v13;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSObject]?);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v12 + 320) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v17, v18, "%s CSSearchableIndex bulkFetchCacheFileDescriptor returned results: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v21 = (uint8_t *)(v14 + 2);
  if (v13)
  {
    BOOL v16 = (uint64_t)(v14 + 3);
    uint64_t v22 = specialized _arrayConditionalCast<A, B>(_:)(v13);
    swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v21 = (uint8_t *)(v14 + 9);
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v89) {
          goto LABEL_8;
        }
      }
      else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v22 & 0xC000000000000001) == 0, v22);
        if ((v22 & 0xC000000000000001) != 0)
        {
          uint64_t v23 = MEMORY[0x25A2C8550](0, v22);
        }
        else
        {
          uint64_t v23 = *(void *)(v22 + 32);
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_unknownObjectRetain_n();
        uint64_t v24 = Logger.logObject.getter();
        uint64_t v25 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v24, v25))
        {
          int v26 = OUTLINED_FUNCTION_83_2();
          v169[0] = OUTLINED_FUNCTION_11_22();
          *(_DWORD *)int v26 = 136315394;
          uint64_t v14[6] = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v26 + 12) = 2080;
          uint64_t v21 = (uint8_t *)(v26 + 14);
          v14[7] = v23;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OS_xpc_object);
          uint64_t v27 = String.init<A>(describing:)();
          v14[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v169);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_27_18();
          _os_log_impl(&dword_257DC6000, v24, v25, "%s bulkFetchCacheFileDescriptor's 1st xpcObject: %s", (uint8_t *)v26, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
          OUTLINED_FUNCTION_27_18();
        }

        swift_getObjectType();
        uint64_t v43 = default argument 0 of OS_xpc_object.oms_read(byteCount:)();
        uint64_t v44 = OS_xpc_object.oms_read(byteCount:)(v43);
        if (v45)
        {
          uint64_t v46 = *(void **)(v12 + 624);
          uint64_t v47 = *(void *)(v12 + 472);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          outlined destroy of SearchResult(v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v48 = OSSignposter.logHandle.getter();
          OSSignpostIntervalState.signpostID.getter();
          os_log_type_t v49 = static os_signpost_type_t.end.getter();
          if (OS_os_log.signpostsEnabled.getter())
          {
            swift_retain();
            checkForErrorAndConsumeState(state:)();
            swift_release();
            BOOL v50 = OUTLINED_FUNCTION_24_21();
            if (v51(v50) != *MEMORY[0x263F90238])
            {
              OUTLINED_FUNCTION_77();
              v69();
            }
            *(_WORD *)OUTLINED_FUNCTION_55() = 0;
            os_log_type_t v70 = OSSignpostID.rawValue.getter();
            OUTLINED_FUNCTION_20_20(&dword_257DC6000, v48, v49, v70, "FileContentManager.hydrateFileContent");
            OUTLINED_FUNCTION_34();
          }
          uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v12 + 544);
          uint64_t v72 = *(void *)(v12 + 496);
          os_signpost_id_t v73 = *(void *)(v12 + 480);

          v71(v72, v73);
          swift_release();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          OUTLINED_FUNCTION_16_22();
          __asm { BRAA            X1, X16 }
        }
        if (v44.value._object)
        {
          uint64_t v52 = *(void **)(v12 + 624);
          uint64_t v53 = *(void *)(v12 + 616);
          uint64_t v165 = *(void *)(v12 + 608);
          unint64_t v54 = *(void **)(v12 + 464);
          uint64_t v166 = *(void *)(v12 + 392);
          unint64_t v55 = objc_msgSend(v52, sel_attributeSet);
          outlined bridged method (mbgnn) of @objc CSSearchableItemAttributeSet.textContent.setter(v44.value._countAndFlagsBits, (uint64_t)v44.value._object, v55);
          unint64_t v56 = objc_msgSend(v52, sel_uniqueIdentifier);
          uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v21 = v58;

          uint64_t v59 = outlined bridged method (pb) of @objc CSSearchableItem.domainIdentifier.getter(v52);
          uint64_t v61 = v60;
          uint64_t v62 = objc_allocWithZone(MEMORY[0x263F02AE0]);
          uint64_t v63 = @nonobjc CSSearchableItem.init(uniqueIdentifier:domainIdentifier:attributeSet:)(v57, (uint64_t)v21, v59, v61, v55);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *unint64_t v54 = v165;
          v54[1] = v53;
          v54[2] = v63;
          type metadata accessor for SearchResultItem(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v64 = (void *)((char *)v54 + *(int *)(v166 + 24));
          *uint64_t v64 = 0;
          v64[1] = 0;
          *(void *)((char *)v54 + *(int *)(v166 + 20)) = v63;
          uint64_t v65 = v63;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v33 = *(void *)(v12 + 600);
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v33 = OUTLINED_FUNCTION_2_12();
          }
          uint64_t v68 = *(void *)(v33 + 16);
          uint64_t v67 = *(void *)(v33 + 24);
          uint64_t v29 = (v68 + 1);
          uint64_t v14 = (void *)(v12 + 224);
          if (v68 >= v67 >> 1) {
            uint64_t v33 = OUTLINED_FUNCTION_1_18(v67);
          }
        }
        else
        {
          swift_unknownObjectRetain_n();
          uint64_t v76 = Logger.logObject.getter();
          uint64_t v77 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v76, (os_log_type_t)v77))
          {
            uint64_t v78 = OUTLINED_FUNCTION_83_2();
            v169[0] = OUTLINED_FUNCTION_11_22();
            *(_DWORD *)uint64_t v78 = 136315394;
            v14[3] = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v78 + 12) = 2080;
            uint64_t v21 = (uint8_t *)(v78 + 14);
            *(void *)(v12 + 256) = v23;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OS_xpc_object);
            uint64_t v79 = String.init<A>(describing:)();
            uint64_t v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, v169);
            OUTLINED_FUNCTION_26_17(v81);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_27_18();
            _os_log_impl(&dword_257DC6000, v76, (os_log_type_t)v77, "%s Unable to read content of %s. It's OK, will just preserve existing result", (uint8_t *)v78, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {
            OUTLINED_FUNCTION_27_18();
          }

          id v82 = OUTLINED_FUNCTION_30_19();
          outlined init with copy of SearchResult(v82, *(void *)(v12 + 456));
          uint64_t v83 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v33 = *(void *)(v12 + 600);
          if ((v83 & 1) == 0) {
            uint64_t v33 = OUTLINED_FUNCTION_2_12();
          }
          uint64_t v14 = (void *)(v12 + 224);
          uint64_t v68 = *(void *)(v33 + 16);
          uint64_t v84 = *(void *)(v33 + 24);
          uint64_t v29 = (v68 + 1);
          if (v68 >= v84 >> 1) {
            uint64_t v33 = OUTLINED_FUNCTION_1_18(v84);
          }
        }
        uint64_t v85 = *(void **)(v12 + 624);
        OUTLINED_FUNCTION_6_22();
        OUTLINED_FUNCTION_33_14();
        outlined init with take of SearchResult(v88, v87 + v86 * v68);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v167 = 0;
        id v34 = 0x258661000;
        goto LABEL_58;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = Logger.logObject.getter();
      uint64_t v90 = static os_log_type_t.debug.getter();
      BOOL v16 = v90;
      if (os_log_type_enabled(v29, v90))
      {
        uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_14_1();
        v169[0] = OUTLINED_FUNCTION_13_1();
        *(_DWORD *)uint64_t v21 = 136315138;
        *(void *)(v12 + 296) = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_257DC6000, v29, (os_log_type_t)v16, "%s Unable to get the first file descriptor. It's OK, will just preserve existing result", v21, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }

      id v91 = OUTLINED_FUNCTION_30_19();
      outlined init with copy of SearchResult(v91, *(void *)(v12 + 448));
      uint64_t v92 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *(void *)(v12 + 600);
      id v34 = (unint64_t)objc_retain_x10;
      if ((v92 & 1) == 0) {
        uint64_t v33 = OUTLINED_FUNCTION_2_12();
      }
      OUTLINED_FUNCTION_13_26();
      if (v36) {
        uint64_t v33 = OUTLINED_FUNCTION_1_18(v93);
      }
    }
    else
    {
      uint64_t v29 = Logger.logObject.getter();
      uint64_t v37 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, (os_log_type_t)v37))
      {
        uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_14_1();
        uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_13_1();
        *(_DWORD *)uint64_t v38 = 136315138;
        v169[0] = (uint64_t)v21;
        os_log_type_t v39 = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
        OUTLINED_FUNCTION_26_17(v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_257DC6000, v29, (os_log_type_t)v37, "%s Unable to cast to [xpc_object_t]. It's OK, will just preserve existing result", v38, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }

      unint64_t v40 = OUTLINED_FUNCTION_30_19();
      outlined init with copy of SearchResult(v40, *(void *)(v12 + 440));
      unint64_t v41 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *(void *)(v12 + 600);
      id v34 = 0x258661000;
      if ((v41 & 1) == 0) {
        uint64_t v33 = OUTLINED_FUNCTION_2_12();
      }
      OUTLINED_FUNCTION_13_26();
      if (v36) {
        uint64_t v33 = OUTLINED_FUNCTION_1_18(v42);
      }
    }
  }
  else
  {
    uint64_t v29 = Logger.logObject.getter();
    uint64_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      BOOL v16 = (uint64_t)"hydrateFileContent(from:)";
      uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      v169[0] = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v21 = 136315138;
      v14[1] = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v29, (os_log_type_t)v30, "%s CSSearchableIndex bulkFetchCacheFileDescriptor returned nil results. It's OK, will just preserve existing result", v21, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    unint64_t v31 = OUTLINED_FUNCTION_30_19();
    outlined init with copy of SearchResult(v31, *(void *)(v12 + 432));
    uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *(void *)(v12 + 600);
    id v34 = 0x258661000;
    if ((v32 & 1) == 0) {
      uint64_t v33 = OUTLINED_FUNCTION_2_12();
    }
    OUTLINED_FUNCTION_13_26();
    if (v36) {
      uint64_t v33 = OUTLINED_FUNCTION_1_18(v35);
    }
  }
  uint64_t v94 = *(void **)(v12 + 624);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_33_14();
  outlined init with take of SearchResult(v97, v96 + v95 * v16);
  swift_bridgeObjectRelease();

  uint64_t v167 = *(void *)(v12 + 584);
LABEL_58:
  OUTLINED_FUNCTION_32_14();
  if (v21 == (uint8_t *)v29)
  {
LABEL_59:
    swift_bridgeObjectRelease();
    uint64_t v98 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    unint64_t v99 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      unint64_t v100 = OUTLINED_FUNCTION_24_21();
      if (v101(v100) != *MEMORY[0x263F90238])
      {
        OUTLINED_FUNCTION_77();
        v133();
      }
      id v34 = OUTLINED_FUNCTION_55();
      *(_WORD *)id v34 = 0;
      uint64_t v134 = OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_20_20(&dword_257DC6000, v98, (os_signpost_type_t)v99, v134, "FileContentManager.hydrateFileContent");
      OUTLINED_FUNCTION_34();
    }
    OUTLINED_FUNCTION_10_23();
    uint64_t v135 = *(void *)(v12 + 480);
    OUTLINED_FUNCTION_5_19();

    ((void (*)(uint64_t, uint64_t))v34)(v99, v135);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16_22();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v163 = *(void *)(v34 + 3224);
  unint64_t v164 = v12;
  while (1)
  {
    id v102 = *(void *)(v12 + 592) + 1;
    *(void *)(v12 + 600) = v33;
    *(void *)(v12 + 592) = v102;
    *(void *)(v12 + 584) = v167;
    outlined init with copy of SearchResult(*(void *)(v12 + 352)+ ((*(unsigned __int8 *)(v12 + 664) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 664))+ *(void *)(v12 + 568) * v102, *(void *)(v12 + 472));
    SearchResultItem.associatedValue.getter((uint64_t)(v14 - 18));
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
    OUTLINED_FUNCTION_29_16();
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v119 = *(void *)(v12 + 472);
      uint64_t v120 = *(void *)(v12 + 416);
      uint64_t v121 = type metadata accessor for Logger();
      __swift_project_value_buffer(v121, (uint64_t)static Logging.search);
      outlined init with copy of SearchResult(v119, v120);
      uint64_t v122 = Logger.logObject.getter();
      uint64_t v123 = static os_log_type_t.error.getter();
      id v34 = v123;
      uint64_t v124 = os_log_type_enabled(v122, v123);
      uint64_t v125 = *(void *)(v12 + 416);
      if (v124)
      {
        id v126 = OUTLINED_FUNCTION_83_2();
        v169[0] = OUTLINED_FUNCTION_11_22();
        *(_DWORD *)id v126 = v163;
        *(void *)(v126 + 4) = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
        *(_WORD *)(v126 + 12) = 2080;
        SearchResultItem.associatedValue.getter((uint64_t)(v14 - 13));
        uint64_t v127 = String.init<A>(describing:)();
        *(void *)(v126 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v127, v128, v169);
        swift_bridgeObjectRelease();
        outlined destroy of SearchResult(v125);
        _os_log_impl(&dword_257DC6000, v122, (os_log_type_t)v34, "%s Expected item to be of type FileDocument, but got -> %s. It's OK, will just preserve existing result", (uint8_t *)v126, 0x16u);
        swift_arrayDestroy();
        uint64_t v12 = v164;
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        outlined destroy of SearchResult(*(void *)(v12 + 416));
      }

      outlined init with copy of SearchResult(*(void *)(v12 + 472), *(void *)(v12 + 408));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = OUTLINED_FUNCTION_2_12();
      }
      uint64_t v114 = *(void *)(v33 + 16);
      uint64_t v129 = *(void *)(v33 + 24);
      uint64_t v115 = v114 + 1;
      if (v114 >= v129 >> 1) {
        uint64_t v33 = OUTLINED_FUNCTION_1_18(v129);
      }
      uint64_t v130 = OUTLINED_FUNCTION_11_23();
      *(void *)(v33 + 16) = v115;
      outlined init with take of SearchResult(v130, v33 + v131 + v132 * v114);
      goto LABEL_84;
    }
    id v103 = *(void *)(v12 + 200);
    id v34 = *(void *)(v12 + 208);
    *(void *)(v12 + 608) = v103;
    *(void *)(v12 + 616) = v34;
    uint64_t v104 = *(void **)(v12 + 216);
    *(void *)(v12 + 624) = v104;
    swift_bridgeObjectRetain();
    unint64_t v105 = v104;
    uint64_t v106 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(objc_msgSend(v105, sel_attributeSet));
    char v108 = v107;
    swift_bridgeObjectRelease();

    if (v108) {
      break;
    }
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    char v109 = type metadata accessor for Logger();
    __swift_project_value_buffer(v109, (uint64_t)static Logging.search);
    uint64_t v110 = Logger.logObject.getter();
    id v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = OUTLINED_FUNCTION_14_1();
      v169[0] = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v112 = 136315138;
      *(void *)(v112 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, 0x8000000258681970, v169);
      _os_log_impl(&dword_257DC6000, v110, v111, "%s Expected to have item's CSSearchableItem.attributeSet.bundleID. It's OK, will just preserve existing result", (uint8_t *)v112, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    outlined init with copy of SearchResult(*(void *)(v12 + 472), *(void *)(v12 + 424));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v33 = OUTLINED_FUNCTION_2_12();
    }
    uint64_t v114 = *(void *)(v33 + 16);
    uint64_t v113 = *(void *)(v33 + 24);
    uint64_t v115 = v114 + 1;
    if (v114 >= v113 >> 1) {
      uint64_t v33 = OUTLINED_FUNCTION_1_18(v113);
    }
    uint64_t v116 = OUTLINED_FUNCTION_12_24();
    *(void *)(v33 + 16) = v115;
    outlined init with take of SearchResult(v116, v33 + v117 + v118 * v114);
    swift_bridgeObjectRelease();

LABEL_84:
    OUTLINED_FUNCTION_32_14();
    if (v114 == v115) {
      goto LABEL_59;
    }
  }
  id v139 = one-time initialization token for search;
  swift_bridgeObjectRetain();
  if (v139 != -1) {
    swift_once();
  }
  uint64_t v140 = type metadata accessor for Logger();
  *(void *)(v12 + 632) = __swift_project_value_buffer(v140, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_25_19();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v141 = Logger.logObject.getter();
  uint64_t v142 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v141, v142))
  {
    uint64_t v143 = OUTLINED_FUNCTION_13_1();
    v169[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v143 = 136315650;
    *uint64_t v161 = OUTLINED_FUNCTION_3_29((uint64_t)"er.hydrateFileContent");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v143 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v144 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v106, v108, v169);
    OUTLINED_FUNCTION_26_17(v144);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v143 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v145 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v103, v34, v169);
    OUTLINED_FUNCTION_26_17(v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v141, v142, "%s Fetching file content with bundleID: %s, itemIdentifier: %s", (uint8_t *)v143, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_25_19();
    swift_bridgeObjectRelease_n();
  }

  if (one-time initialization token for searchableIndex != -1) {
    swift_once();
  }
  uint64_t v168 = (void *)static FileContentManager.searchableIndex;
  uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  os_log_type_t v147 = MEMORY[0x25A2C7AB0](v146);
  *(void *)(v12 + 640) = v147;
  swift_bridgeObjectRelease();
  uint64_t v148 = MEMORY[0x25A2C7AB0](v106, v108);
  *(void *)(v12 + 648) = v148;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v149 = swift_allocObject();
  *(_OWORD *)(v149 + 16) = xmmword_258661700;
  *(void *)(v149 + 32) = v103;
  *(void *)(v149 + 40) = v34;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  *(void *)(v12 + 656) = isa;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = v12;
  *(void *)(v12 + 56) = v162;
  *(void *)(v12 + 24) = static FileContentManager.hydrateFileContent(from:);
  uint64_t v151 = swift_continuation_init();
  *(void *)(v12 + 160) = MEMORY[0x263EF8330];
  *(void *)(v12 + 168) = 0x40000000;
  *(void *)(v12 + 176) = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray?) -> () with result type [NSObject]?;
  *(void *)(v12 + 184) = &block_descriptor_1;
  *(void *)(v12 + 192) = v151;
  objc_msgSend(v168, sel_bulkFetchCacheFileDescriptorForProtectionClass_bundleID_identifiers_reason_completionHandler_, v147, v148, isa, 0, v12 + 160);
  OUTLINED_FUNCTION_16_22();
  return MEMORY[0x270FA23F0](v152, v153, v154, v155, v156, v157, v158, v159, a9, a10, a11, a12);
}

uint64_t static FileContentManager.hydrateFileContent(from:)()
{
  return MEMORY[0x270FA2498](static FileContentManager.hydrateFileContent(from:), 0, 0);
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray?) -> () with result type [NSObject]?(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    type metadata accessor for NSObject();
    a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return specialized _resumeUnsafeContinuation<A>(_:_:)(v2, a2);
}

uint64_t specialized _resumeUnsafeContinuation<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  outlined init with take of [NSObject]?((uint64_t)&v3, *(void *)(*(void *)(a1 + 64) + 40));
  return swift_continuation_resume();
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OS_xpc_object.oms_read(byteCount:)(Swift::Int byteCount)
{
  uint64_t v4 = v1;
  if ((xpc_fd_dup(v4) & 0x80000000) == 0)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = v6 + byteCount;
    uint64_t v8 = FileDescriptor.read(into:retryOnInterrupt:)();
    if (v2)
    {

      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      __swift_project_value_buffer(v9, (uint64_t)static Logging.search);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        OUTLINED_FUNCTION_7_25((uint64_t)"oms_read(byteCount:)", (uint64_t)log, v34, v36, v37, v38);
        OUTLINED_FUNCTION_28_14();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_257DC6000, v10, v11, "%s No file size returned.", v12, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }

      OUTLINED_FUNCTION_34();
      uint64_t v13 = FileDescriptor._close()();
      if ((v13 & 0x100000000) != 0)
      {
        LODWORD(v39) = v13;
        lazy protocol witness table accessor for type Errno and conformance Errno();
        swift_willThrowTypedImpl();
      }
      uint64_t v7 = 0;
      unint64_t v3 = 0;
      goto LABEL_31;
    }
    if (v8 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = specialized RandomAccessCollection.index(_:offsetBy:limitedBy:)(0, v8, byteCount, v6, v7);
      if (v19) {
        unint64_t v20 = byteCount;
      }
      else {
        unint64_t v20 = v18;
      }
      if ((v20 & 0x8000000000000000) == 0)
      {
        if (v6) {
          unint64_t v21 = byteCount;
        }
        else {
          unint64_t v21 = 0;
        }
        if ((v21 & 0x8000000000000000) == 0)
        {
          if (v21 >= v20)
          {
            uint64_t v7 = static String._fromUTF8Repairing(_:)();
            unint64_t v3 = v22;
            if (one-time initialization token for search == -1) {
              goto LABEL_26;
            }
            goto LABEL_36;
          }
LABEL_35:
          __break(1u);
LABEL_36:
          swift_once();
LABEL_26:
          uint64_t v23 = type metadata accessor for Logger();
          __swift_project_value_buffer(v23, (uint64_t)static Logging.search);
          OUTLINED_FUNCTION_25_19();
          swift_bridgeObjectRetain_n();
          uint64_t v24 = Logger.logObject.getter();
          os_log_type_t v25 = static os_log_type_t.debug.getter();
          int v26 = v25;
          if (os_log_type_enabled(v24, v25))
          {
            HIDWORD(v34) = v26;
            uint64_t v27 = swift_slowAlloc();
            uint64_t v28 = swift_slowAlloc();
            uint64_t v39 = v28;
            *(_DWORD *)uint64_t v27 = 136315651;
            OUTLINED_FUNCTION_7_25((uint64_t)"oms_read(byteCount:)", (uint64_t)log, v34, v28, v37, v38);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v27 + 12) = 2048;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v27 + 22) = 2085;
            swift_bridgeObjectRetain();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v3, &v39);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, v24, type, "%s size read: %ld, content: %{sensitive}s", (uint8_t *)v27, 0x20u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            OUTLINED_FUNCTION_25_19();
            swift_bridgeObjectRelease_n();
          }
          OUTLINED_FUNCTION_34();
          uint64_t v29 = FileDescriptor._close()();
          if ((v29 & 0x100000000) != 0)
          {
            LODWORD(v39) = v29;
            lazy protocol witness table accessor for type Errno and conformance Errno();
            swift_willThrowTypedImpl();
          }
          goto LABEL_31;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
  os_signpost_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    os_signpost_id_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)os_signpost_id_t v17 = 136315138;
    OUTLINED_FUNCTION_7_25((uint64_t)"oms_read(byteCount:)", (uint64_t)log, v34, v36, v37, v38);
    OUTLINED_FUNCTION_28_14();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v15, v16, "%s Per xpc.h 'If the descriptor could not be created or if the given object was not an XPC file descriptor, -1 is returned'.", v17, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }

  uint64_t v7 = 0;
  unint64_t v3 = 0;
LABEL_31:
  uint64_t v30 = v7;
  unint64_t v31 = (void *)v3;
  result.value._object = v31;
  result.value._countAndFlagsBits = v30;
  return result;
}

OmniSearch::FileDocument __swiftcall FileDocument.updateCSSearchableItemAttributeTextContent(with:)(Swift::String with)
{
  object = with._object;
  uint64_t countAndFlagsBits = with._countAndFlagsBits;
  uint64_t v5 = v1;
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = (void *)v2[2];
  id v9 = objc_msgSend(v8, sel_attributeSet);
  outlined bridged method (mbgnn) of @objc CSSearchableItemAttributeSet.textContent.setter(countAndFlagsBits, (uint64_t)object, v9);
  id v10 = objc_msgSend(v8, sel_uniqueIdentifier);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  uint64_t v14 = outlined bridged method (pb) of @objc CSSearchableItem.domainIdentifier.getter(v8);
  uint64_t v16 = v15;
  id v17 = objc_allocWithZone(MEMORY[0x263F02AE0]);
  id v18 = @nonobjc CSSearchableItem.init(uniqueIdentifier:domainIdentifier:attributeSet:)(v11, v13, v14, v16, v9);
  *uint64_t v5 = v7;
  v5[1] = v6;
  v5[2] = v18;
  uint64_t v19 = swift_bridgeObjectRetain();
  result.item.super.Class isa = v21;
  result.id._object = v20;
  result.id._uint64_t countAndFlagsBits = v19;
  return result;
}

uint64_t FileDescriptor.read(into:retryOnInterrupt:)()
{
  uint64_t v2 = FileDescriptor._read(into:retryOnInterrupt:)();
  if (!v0 && (v1 & 1) != 0)
  {
    lazy protocol witness table accessor for type Errno and conformance Errno();
    swift_willThrowTypedImpl();
    swift_allocError();
    *unint64_t v3 = v2;
  }
  return v2;
}

id @nonobjc CSSearchableItem.init(uniqueIdentifier:domainIdentifier:attributeSet:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a2)
  {
    id v9 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    id v10 = 0;
    goto LABEL_6;
  }
  id v9 = (void *)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  id v10 = (void *)MEMORY[0x25A2C7AB0](a3, a4);
  swift_bridgeObjectRelease();
LABEL_6:
  id v11 = objc_msgSend(v5, sel_initWithUniqueIdentifier_domainIdentifier_attributeSet_, v9, v10, a5);

  return v11;
}

void outlined bridged method (mbgnn) of @objc CSSearchableItemAttributeSet.textContent.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x25A2C7AB0]();
  objc_msgSend(a3, sel_setTextContent_, v4);
}

uint64_t outlined bridged method (pb) of @objc CSSearchableItem.domainIdentifier.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_domainIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized RandomAccessCollection<>.index(_:offsetBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v6 = a4 - a3;
  if (!a3) {
    uint64_t v6 = 0;
  }
  if (result < 0 || v6 < result) {
    goto LABEL_8;
  }
  return result;
}

uint64_t specialized RandomAccessCollection.index(_:offsetBy:limitedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = specialized RandomAccessCollection<>.distance(from:to:)(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return specialized RandomAccessCollection<>.index(_:offsetBy:)(a1, a2, a4, a5);
}

uint64_t specialized RandomAccessCollection<>.distance(from:to:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 - a3;
  if (!a3) {
    uint64_t v4 = 0;
  }
  if (result < 0 || v4 < result)
  {
    __break(1u);
  }
  else if ((a2 & 0x8000000000000000) == 0 && v4 >= a2)
  {
    return a2 - result;
  }
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type Errno and conformance Errno()
{
  unint64_t result = lazy protocol witness table cache variable for type Errno and conformance Errno;
  if (!lazy protocol witness table cache variable for type Errno and conformance Errno)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Errno and conformance Errno);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileContentManager()
{
  return &type metadata for FileContentManager;
}

unint64_t type metadata accessor for NSObject()
{
  unint64_t result = lazy cache variable for type metadata for NSObject;
  if (!lazy cache variable for type metadata for NSObject)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  }
  return result;
}

uint64_t outlined init with take of [NSObject]?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSObject]?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_18@<X0>(unint64_t a1@<X8>)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_3_29@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, a1 | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_7_25@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000014, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  return *(void *)(v0 + 408);
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  return *(void *)(v0 + 424);
}

uint64_t OUTLINED_FUNCTION_15_21@<X0>(unint64_t a1@<X8>)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v2, 1, v1);
}

uint64_t OUTLINED_FUNCTION_17_20()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_19_20()
{
  unint64_t v2 = *(void *)(v0 - 96) | 0x8000000000000000;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, v2, (uint64_t *)(v0 - 80));
}

void OUTLINED_FUNCTION_20_20(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, v5, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_24_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_19()
{
  return v0;
}

void *OUTLINED_FUNCTION_26_17(uint64_t a1)
{
  void *v1 = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_27_18()
{
  return swift_unknownObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_29_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_19()
{
  return *(void *)(v0 + 472);
}

uint64_t OUTLINED_FUNCTION_32_14()
{
  uint64_t v2 = *(void *)(v0 + 472);
  return outlined destroy of SearchResult(v2);
}

void OUTLINED_FUNCTION_33_14()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  specialized _NativeDictionary.makeIterator()(v25, a1);
  uint64_t v3 = v25[0];
  uint64_t v26 = v25[1];
  int64_t v4 = v25[3];
  unint64_t v5 = v25[4];
  int64_t v6 = (unint64_t)(v25[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v11 >= v6) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v26 + 8 * v11);
    int64_t v13 = v4 + 1;
    if (!v12)
    {
      int64_t v13 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v26 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v4 + 3;
        if (v4 + 3 >= v6) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v4 + 4;
          if (v4 + 4 >= v6) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v26 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v4 + 5;
            if (v4 + 5 >= v6) {
              goto LABEL_27;
            }
            unint64_t v12 = *(void *)(v26 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v4 + 6;
              while (v14 < v6)
              {
                unint64_t v12 = *(void *)(v26 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return v8;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v4 = v13;
LABEL_20:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v22, v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
      outlined init with take of SageSearchClient(&v22, (uint64_t)v24);
      outlined init with take of SageSearchClient(v24, (uint64_t)&v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v8 = v20;
      }
      unint64_t v19 = *(void *)(v8 + 16);
      if (v19 >= *(void *)(v8 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v8 = v21;
      }
      *(void *)(v8 + 16) = v19 + 1;
      uint64_t result = outlined init with take of SageSearchClient(&v22, v8 + 40 * v19 + 32);
    }
    else
    {
      uint64_t result = outlined destroy of SearchResult?((uint64_t)&v22, &demangling cache variable for type metadata for MessageRecord?);
    }
  }
  __break(1u);
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySSG_SSs5NeverOTg5224_s10OmniSearch18MessageBodyManagerV06enrichC19WithAssociatedGuids33_687DBA3D1536BCD45E6718749ACC92F3LL04mainC3IdsSDySSSaySSGGSayAA0C10Identifier_pG_tYaFSS_AGtAaI_pYacfU0_S2Scfu_32cfd6abeb9142fd6cb6c011096cba1c5aS2STf3nnnpk_nTf1cn_n(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v13;
    int64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v7 = String.oms_IMMessagePartGUID.getter(v5, v6);
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      unint64_t v10 = *(void *)(v13 + 16);
      if (v10 >= *(void *)(v13 + 24) >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v4 += 2;
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t specialized Sequence.flatMap<A>(_:)(uint64_t a1)
{
  specialized _NativeDictionary.makeIterator()(v23, a1);
  uint64_t v1 = v23[0];
  uint64_t v24 = v23[1];
  int64_t v2 = v23[3];
  unint64_t v3 = v23[4];
  int64_t v4 = (unint64_t)(v23[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v6 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v7 = v6 | (v2 << 6);
  while (1)
  {
    uint64_t v12 = *(void *)(*(void *)(v1 + 56) + 8 * v7);
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = *(void *)(v5 + 16);
    if (__OFADD__(v14, v13)) {
      break;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(void *)(v5 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v5 = v15;
    }
    if (*(void *)(v12 + 16))
    {
      uint64_t v16 = *(void *)(v5 + 16);
      if ((*(void *)(v5 + 24) >> 1) - v16 < v13) {
        goto LABEL_39;
      }
      unint64_t v17 = v5 + 16 * v16 + 32;
      if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13) {
        goto LABEL_42;
      }
      swift_arrayInitWithCopy();
      if (v13)
      {
        uint64_t v19 = *(void *)(v5 + 16);
        BOOL v20 = __OFADD__(v19, v13);
        uint64_t v21 = v19 + v13;
        if (v20) {
          goto LABEL_40;
        }
        *(void *)(v5 + 16) = v21;
      }
    }
    else if (v13)
    {
      goto LABEL_38;
    }
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_41;
    }
    if (v8 >= v4) {
      goto LABEL_36;
    }
    unint64_t v9 = *(void *)(v24 + 8 * v8);
    int64_t v10 = v2 + 1;
    if (!v9)
    {
      int64_t v10 = v2 + 2;
      if (v2 + 2 >= v4) {
        goto LABEL_36;
      }
      unint64_t v9 = *(void *)(v24 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v2 + 3;
        if (v2 + 3 >= v4) {
          goto LABEL_36;
        }
        unint64_t v9 = *(void *)(v24 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v2 + 4;
          if (v2 + 4 >= v4) {
            goto LABEL_36;
          }
          unint64_t v9 = *(void *)(v24 + 8 * v10);
          if (!v9)
          {
            int64_t v10 = v2 + 5;
            if (v2 + 5 >= v4) {
              goto LABEL_36;
            }
            unint64_t v9 = *(void *)(v24 + 8 * v10);
            if (!v9)
            {
              int64_t v11 = v2 + 6;
              while (v11 < v4)
              {
                unint64_t v9 = *(void *)(v24 + 8 * v11++);
                if (v9)
                {
                  int64_t v10 = v11 - 1;
                  goto LABEL_18;
                }
              }
LABEL_36:
              swift_release();
              return v5;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v3 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v2 = v10;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  uint64_t v38 = type metadata accessor for TypeIdentifier();
  int64_t v2 = *(void *)(v38 - 8);
  unint64_t v3 = MEMORY[0x270FA5388](v38);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v31 - v6;
  unint64_t v7 = *(void *)(a1 + 56);
  uint64_t v32 = a1 + 56;
  int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  unint64_t v9 = -1;
  if (v8 < 64) {
    unint64_t v9 = ~(-1 << v8);
  }
  int64_t v10 = v9 & v7;
  unint64_t v35 = v2 + 32;
  uint64_t v36 = v2 + 16;
  uint64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v34 = v2 + 8;
  uint64_t v39 = a1;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v11 << 6); ; i = __clz(__rbit64(v16)) + (v11 << 6))
  {
    uint64_t v19 = v37;
    uint64_t v18 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v37, *(void *)(v39 + 48) + *(void *)(v2 + 72) * i, v38);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v19, v18);
    BOOL v20 = static SearchEntityTypeIdentifier.make(identifier:)((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v18);
    uint64_t v21 = *(void *)(v20 + 16);
    long long v22 = *(void *)(v12 + 16);
    if (__OFADD__(v22, v21))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(void *)(v12 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v12 = v23;
    }
    if (*(void *)(v20 + 16))
    {
      uint64_t v24 = *(void *)(v12 + 16);
      if ((*(void *)(v12 + 24) >> 1) - v24 < v21) {
        goto LABEL_41;
      }
      os_log_type_t v25 = v12 + 16 * v24 + 32;
      if (v20 + 32 < v25 + 16 * v21 && v25 < v20 + 32 + 16 * v21) {
        goto LABEL_45;
      }
      swift_arrayInitWithCopy();
      if (v21)
      {
        uint64_t v27 = *(void *)(v12 + 16);
        uint64_t v28 = __OFADD__(v27, v21);
        uint64_t v29 = v27 + v21;
        if (v28) {
          goto LABEL_42;
        }
        *(void *)(v12 + 16) = v29;
      }
    }
    else if (v21)
    {
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_43;
    }
    if (v15 >= v33) {
      goto LABEL_38;
    }
    uint64_t v16 = *(void *)(v32 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v33) {
        goto LABEL_38;
      }
      uint64_t v16 = *(void *)(v32 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v33) {
          goto LABEL_38;
        }
        uint64_t v16 = *(void *)(v32 + 8 * v11);
        if (!v16)
        {
          int64_t v11 = v15 + 3;
          if (v15 + 3 >= v33) {
            goto LABEL_38;
          }
          uint64_t v16 = *(void *)(v32 + 8 * v11);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_20:
    int64_t v10 = (v16 - 1) & v16;
  }
  unint64_t v17 = v15 + 4;
  if (v17 >= v33)
  {
LABEL_38:
    swift_release();
    return v12;
  }
  uint64_t v16 = *(void *)(v32 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_38;
    }
    uint64_t v16 = *(void *)(v32 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t IMSPIMessage.id.getter()
{
  uint64_t result = outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_guid);
  if (!v2) {
    __break(1u);
  }
  return result;
}

uint64_t IMSPIMessage.chatId.getter()
{
  return outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_chatIdentifier);
}

uint64_t IMSPIMessage.serviceName.getter()
{
  return outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_service);
}

uint64_t IMSPIMessage.from.getter()
{
  id v1 = objc_msgSend(v0, sel_sender);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = v1;
  uint64_t v3 = IMSPIHandle.senderName.getter();
  uint64_t v5 = v4;

  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_258661700;
  *(void *)(result + 32) = v3;
  *(void *)(result + 40) = v5;
  return result;
}

uint64_t IMSPIHandle.senderName.getter()
{
  if (objc_msgSend(v0, sel_isMe)) {
    return 25933;
  }
  uint64_t result = outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_displayName);
  if (!v2)
  {
    uint64_t result = outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_address);
    if (!v3)
    {
      uint64_t result = outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_cnContactID);
      if (!v4) {
        return outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_businessName);
      }
    }
  }
  return result;
}

uint64_t protocol witness for MessageRecord.guid.getter in conformance IMSPIMessage()
{
  return @nonobjc IMSPIMessage.guid.getter();
}

uint64_t @nonobjc IMSPIMessage.guid.getter()
{
  return outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_guid);
}

uint64_t protocol witness for MessageRecord.body.getter in conformance IMSPIMessage()
{
  return @nonobjc IMSPIMessage.body.getter();
}

uint64_t @nonobjc IMSPIMessage.body.getter()
{
  return outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_body);
}

uint64_t protocol witness for MessageRecord.date.getter in conformance IMSPIMessage@<X0>(uint64_t a1@<X8>)
{
  return @nonobjc IMSPIMessage.date.getter(a1);
}

uint64_t @nonobjc IMSPIMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_date);
  if (v3)
  {
    uint64_t v4 = v3;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = type metadata accessor for Date();
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

uint64_t protocol witness for MessageRecord.from.getter in conformance IMSPIMessage()
{
  return IMSPIMessage.from.getter();
}

uint64_t protocol witness for MessageIdentifier.id.getter in conformance IMSPIMessage()
{
  return IMSPIMessage.id.getter();
}

uint64_t protocol witness for MessageIdentifier.chatId.getter in conformance IMSPIMessage()
{
  return IMSPIMessage.chatId.getter();
}

uint64_t protocol witness for MessageIdentifier.serviceName.getter in conformance IMSPIMessage()
{
  return IMSPIMessage.serviceName.getter();
}

uint64_t IMSPIChat.chatName.getter()
{
  return outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v0, (SEL *)&selRef_displayName);
}

unint64_t IMSPIChat.chatParticipants.getter()
{
  unint64_t result = outlined bridged method (pb) of @objc IMSPIChat.handles.getter(v0);
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v2 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_18:
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_19:
    swift_bridgeObjectRelease_n();
    return v5;
  }
  uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_18;
  }
LABEL_4:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x263F8EE78];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = OUTLINED_FUNCTION_49_12();
        id v7 = (id)MEMORY[0x25A2C8550](v6);
      }
      else
      {
        id v7 = *(id *)(v2 + 8 * v4 + 32);
      }
      int64_t v8 = v7;
      uint64_t v9 = IMSPIHandle.senderName.getter();
      uint64_t v11 = v10;

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_115();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v5 = v14;
        }
        unint64_t v12 = *(void *)(v5 + 16);
        if (v12 >= *(void *)(v5 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v12 + 1;
        uint64_t v13 = v5 + 16 * v12;
        *(void *)(v13 + 32) = v9;
        *(void *)(v13 + 40) = v11;
      }
      ++v4;
    }
    while (v3 != v4);
    goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t protocol witness for ChatInfo.chatName.getter in conformance IMSPIChat()
{
  return IMSPIChat.chatName.getter();
}

unint64_t protocol witness for ChatInfo.chatParticipants.getter in conformance IMSPIChat()
{
  return IMSPIChat.chatParticipants.getter();
}

uint64_t protocol witness for ChatMessageRecord.mainMessage.getter in conformance IMMessageRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of CustomStringConvertible(v1 + 16, a1);
}

uint64_t protocol witness for ChatMessageRecord.chatMessages.getter in conformance IMMessageRecord()
{
  return swift_bridgeObjectRetain();
}

uint64_t specialized ChatMessageRecord.guid.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t ChatMessageRecord.guid.getter()
{
  OUTLINED_FUNCTION_10_24();
  v0();
  uint64_t v1 = OUTLINED_FUNCTION_9_17(v4);
  v2(v1);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t specialized ChatMessageRecord.body.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t ChatMessageRecord.body.getter()
{
  OUTLINED_FUNCTION_10_24();
  v0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  uint64_t v1 = OUTLINED_FUNCTION_56_9();
  v2(v1);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t specialized ChatMessageRecord.date.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t ChatMessageRecord.date.getter()
{
  OUTLINED_FUNCTION_10_24();
  v0();
  uint64_t v1 = v5;
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t specialized ChatMessageRecord.from.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t ChatMessageRecord.from.getter()
{
  OUTLINED_FUNCTION_10_24();
  v0();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v1 = OUTLINED_FUNCTION_56_9();
  uint64_t v3 = v2(v1);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  return v3;
}

uint64_t protocol witness for ChatInfo.chatParticipants.getter in conformance IMMessageRecord()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageBodyManager.helper.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of CustomStringConvertible(v1, a1);
}

uint64_t MessageBodyManager.init(helper:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return outlined init with take of SageSearchClient(a1, a2);
}

uint64_t MessageBodyManager.retrieveMessages(for:)()
{
  OUTLINED_FUNCTION_27();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[5] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[6] = v4;
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v1[9] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v1[10] = v6;
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v0;
  *uint64_t v4 = *v0;
  *(void *)(v3 + 160) = v2;
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 168) = v6;
  *uint64_t v6 = v5;
  v6[1] = MessageBodyManager.retrieveMessages(for:);
  return MessageBodyManager.enrichMessagesWithContext(from:)(v2);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_9_9();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  *(void *)(v6 + 176) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  os_signpost_id_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v2 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[6];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x263F90238])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(v0[6] + 8))(v0[8], v0[5]);
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    uint64_t v8 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v1, v2, v8, "MessageBodyManager.retrieveMessages", v6, v7, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[17];
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[9];

  v9(v10, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = OUTLINED_FUNCTION_51_0();
  return v13(v12);
}

uint64_t MessageBodyManager.retrieveMessages(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint8_t *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_61();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_118();
  a22 = v24;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for OSSignposter();
  v24[15] = __swift_project_value_buffer(v27, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v28 = OSSignposter.logHandle.getter();
  os_signpost_type_t v29 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v28, v29, v31, "MessageBodyManager.retrieveMessages", "", v30, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v32 = v24[3];
  uint64_t v33 = v24[13];
  uint64_t v34 = v24[14];
  uint64_t v35 = v24[9];
  uint64_t v36 = v24[10];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v34, v35);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v24[16] = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v24[17] = v37;
  v24[18] = (v36 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v37(v34, v35);
  if (*(void *)(v32 + 16))
  {
    uint64_t v38 = (void *)swift_task_alloc();
    v24[19] = v38;
    *uint64_t v38 = v24;
    v38[1] = MessageBodyManager.retrieveMessages(for:);
    OUTLINED_FUNCTION_36_1();
    return MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)(v39);
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    __swift_project_value_buffer(v42, (uint64_t)static Logging.search);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      a11 = v24 + 2;
      uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      a12 = OUTLINED_FUNCTION_13_1();
      a13 = a12;
      *(_DWORD *)uint64_t v45 = 136315138;
      a10 = v45 + 4;
      long long v24[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016, 0x80000002586819E0, &a13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v43, v44, "%s messageIdentifiers cannot be empty", v45, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v46 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v47 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v49 = v24[6];
      uint64_t v48 = v24[7];
      uint64_t v50 = v24[5];
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v49 + 88))(v48, v50) == *MEMORY[0x263F90238])
      {
        uint64_t v51 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(v24[6] + 8))(v24[7], v24[5]);
        uint64_t v51 = "";
      }
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      os_signpost_id_t v53 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl(&dword_257DC6000, v46, v47, v53, "MessageBodyManager.retrieveMessages", v51, v52, 2u);
      OUTLINED_FUNCTION_34();
    }
    uint64_t v54 = v24[11];
    uint64_t v55 = v24[9];

    v37(v54, v55);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_36_1();
    return v58(v56, v57, v58, v59, v60, v61, v62, v63, a9, a10, a11, a12, a13, a14, a15, a16);
  }
}

uint64_t MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = v1;
  return MEMORY[0x270FA2498](MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:), 0, 0);
}

#error "2583D302C: call analysis failed (funcsize=318)"

uint64_t MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_9_9();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  *(void *)(v6 + 184) = v5;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v11;
  void *v12;
  uint64_t v13;

  unint64_t v12 = v0;
  uint64_t v1 = specialized Dictionary.init<A>(uniqueKeysWithValues:)(v0[23]);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = OUTLINED_FUNCTION_83_2();
    uint64_t v11 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v4 = 136315394;
    OUTLINED_FUNCTION_177_0();
    v0[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000031, v5, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    uint64_t v6 = Dictionary.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[14] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v2, v3, "%s Returning dict of target message's GUID to list of surrounding message GUIDs: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v1);
}

uint64_t MessageBodyManager.enrichMessagesWithContext(from:)(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = v1;
  return MEMORY[0x270FA2498](MessageBodyManager.enrichMessagesWithContext(from:), 0, 0);
}

uint64_t MessageBodyManager.enrichMessagesWithContext(from:)()
{
  uint64_t v42 = v0;
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v2 = v0 + 192;
  uint64_t v1 = v3;
  uint64_t v37 = (uint64_t *)(v2 - 16);
  uint64_t v38 = (uint64_t *)(v2 - 8);
  specialized _NativeDictionary.makeIterator()((void *)(v2 - 176), v3);
  uint64_t v4 = *(void *)(v2 - 176);
  uint64_t v5 = *(void *)(v2 - 168);
  int64_t v6 = *(void *)(v2 - 152);
  unint64_t v7 = *(void *)(v2 - 144);
  int64_t v8 = (unint64_t)(*(void *)(v2 - 160) + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v7) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v11 = v10 | (v6 << 6);
  while (1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v11);
    uint64_t v17 = *v16;
    uint64_t v1 = v16[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_115();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v9 = v20;
    }
    unint64_t v18 = *(void *)(v9 + 16);
    if (v18 >= *(void *)(v9 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v9 = v21;
    }
    *(void *)(v9 + 16) = v18 + 1;
    uint64_t v19 = v9 + 16 * v18;
    *(void *)(v19 + 32) = v17;
    *(void *)(v19 + 40) = v1;
    if (v7) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v12 >= v8) {
      goto LABEL_27;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    int64_t v14 = v6 + 1;
    if (!v13)
    {
      int64_t v14 = v6 + 2;
      if (v6 + 2 >= v8) {
        goto LABEL_27;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v6 + 3;
        if (v6 + 3 >= v8) {
          goto LABEL_27;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v6 + 4;
          if (v6 + 4 >= v8) {
            goto LABEL_27;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v6 + 5;
            if (v6 + 5 >= v8) {
              goto LABEL_27;
            }
            unint64_t v13 = *(void *)(v5 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v6 + 6;
              if (v6 + 6 >= v8) {
                goto LABEL_27;
              }
              unint64_t v13 = *(void *)(v5 + 8 * v14);
              if (!v13) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v6 = v14;
  }
  int64_t v15 = v6 + 7;
  while (v15 < v8)
  {
    unint64_t v13 = *(void *)(v5 + 8 * v15++);
    if (v13)
    {
      int64_t v14 = v15 - 1;
      goto LABEL_20;
    }
  }
LABEL_27:
  uint64_t v22 = v40[24];
  swift_release();
  specialized Sequence.flatMap<A>(_:)(v22);
  v40[26] = 0;
  v41[0] = v9;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v1 = specialized Set.init<A>(_:)(v9);
  if (one-time initialization token for search == -1) {
    goto LABEL_28;
  }
LABEL_35:
  swift_once();
LABEL_28:
  uint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = OUTLINED_FUNCTION_83_2();
    v41[0] = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v26 = 136315394;
    OUTLINED_FUNCTION_177_0();
    *uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020, v27, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v28 = Set.description.getter();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *uint64_t v38 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v24, v25, "%s uniq set of GUIDs of key and surrounding message GUIDs: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  os_signpost_id_t v31 = (void *)v40[25];
  uint64_t v32 = v31[3];
  uint64_t v33 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v32);
  uint64_t v34 = specialized _copyCollectionToContiguousArray<A>(_:)(v1);
  v40[27] = v34;
  swift_bridgeObjectRelease();
  uint64_t v39 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v33 + 8) + **(int **)(v33 + 8));
  uint64_t v35 = (void *)swift_task_alloc();
  v40[28] = v35;
  *uint64_t v35 = v40;
  v35[1] = MessageBodyManager.enrichMessagesWithContext(from:);
  return v39(v34, v32, v33);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_9_9();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  *(void *)(v6 + 232) = v5;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_51_0();
  return v4(v3);
}

uint64_t MessageBodyManager.enrichMessagesWithContext(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_118();
  uint64_t v17 = *(void *)(v16 + 232);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = (void *)(v16 + 56);
    uint64_t v58 = (long long *)(v16 + 96);
    uint64_t v20 = v17 + 32;
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)MEMORY[0x263F8EE80];
    a10 = v16;
    while (1)
    {
      outlined init with copy of CustomStringConvertible(v20, (uint64_t)v19);
      uint64_t v22 = *(void *)(v16 + 80);
      uint64_t v23 = *(void *)(v16 + 88);
      __swift_project_boxed_opaque_existential_1(v19, v22);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      if (!v25) {
        goto LABEL_23;
      }
      uint64_t v26 = result;
      uint64_t v27 = v25;
      uint64_t v28 = (uint64_t)v19;
      outlined init with copy of CustomStringConvertible((uint64_t)v19, (uint64_t)v58);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a12 = v21;
      uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v26, v27);
      uint64_t v31 = v21[2];
      BOOL v32 = (v30 & 1) == 0;
      Swift::Int v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        return result;
      }
      unint64_t v34 = result;
      char v35 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, MessageRecord>);
      Swift::Bool v36 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v33);
      uint64_t v21 = a12;
      if (v36)
      {
        unint64_t v37 = specialized __RawDictionaryStorage.find<A>(_:)(v26, v27);
        if ((v35 & 1) != (v38 & 1))
        {
          OUTLINED_FUNCTION_36_1();
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v34 = v37;
      }
      if (v35)
      {
        uint64_t v39 = a12[7] + 40 * v34;
        __swift_destroy_boxed_opaque_existential_1Tm(v39);
        outlined init with take of SageSearchClient(v58, v39);
      }
      else
      {
        a12[(v34 >> 6) + 8] |= 1 << v34;
        uint64_t v40 = (uint64_t *)(a12[6] + 16 * v34);
        *uint64_t v40 = v26;
        v40[1] = v27;
        uint64_t result = outlined init with take of SageSearchClient(v58, a12[7] + 40 * v34);
        uint64_t v41 = a12[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_22;
        }
        a12[2] = v43;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = (void *)v28;
      __swift_destroy_boxed_opaque_existential_1Tm(v28);
      v20 += 40;
      --v18;
      uint64_t v16 = a10;
      if (!v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
  }
  uint64_t v21 = (void *)MEMORY[0x263F8EE80];
LABEL_15:
  uint64_t v44 = *(void *)(v16 + 200);
  uint64_t v45 = *(void *)(v16 + 192);
  swift_bridgeObjectRelease();
  *(void *)(swift_task_alloc() + 16) = v21;
  *(void *)(v16 + 240) = specialized Sequence.compactMap<A>(_:)(v45, (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))partial apply for closure #4 in MessageBodyManager.enrichMessagesWithContext(from:));
  swift_task_dealloc();
  outlined init with copy of MessageBodyManager(v44, v16 + 136);
  uint64_t v46 = swift_allocObject();
  *(void *)(v16 + 248) = v46;
  *(void *)(v46 + 16) = v45;
  *(void *)(v46 + 24) = v21;
  long long v47 = *(_OWORD *)(v16 + 152);
  *(_OWORD *)(v46 + 32) = *(_OWORD *)(v16 + 136);
  *(_OWORD *)(v46 + 48) = v47;
  *(void *)(v46 + 64) = *(void *)(v16 + 168);
  uint64_t v59 = (char *)&async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)
      + async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  swift_bridgeObjectRetain();
  uint64_t v48 = (void *)swift_task_alloc();
  *(void *)(v16 + 256) = v48;
  *uint64_t v48 = v16;
  v48[1] = MessageBodyManager.enrichMessagesWithContext(from:);
  OUTLINED_FUNCTION_36_1();
  return v53(v49, v50, v51, v52, v53, v54, v55, v56, a9, a10, v59, a12, a13, a14, a15, a16);
}

uint64_t MessageBodyManager.hydrateMessageBody(origMessages:enrichedMessages:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MobileSMSDocument?);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MobileSMSDocument(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (uint64_t)&v151 - v21;
  uint64_t v173 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_1();
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_73();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_194_0((uint64_t)&v151 - v32);
  uint64_t v176 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v158 = v34;
    uint64_t v184 = v33;
    uint64_t v186 = (int *)v17;
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    uint64_t v190 = __swift_project_value_buffer(v35, (uint64_t)static Logging.search);
    Swift::Bool v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    BOOL v38 = os_log_type_enabled(v36, v37);
    unint64_t v181 = v16;
    uint64_t v189 = (void *)v22;
    if (v38)
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      unint64_t v200 = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v22 = (uint64_t)(v39 + 12);
      uint64_t v40 = OUTLINED_FUNCTION_26_18((uint64_t)"retrieveMessages(for:)");
      OUTLINED_FUNCTION_52_12(v40);
      uint64_t v16 = v181;
      OUTLINED_FUNCTION_54_10();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v36, v37, "%s Iterate each message and optionally create new MobileSMSDocument if body is different", v39, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v46 = v185;
    long long v47 = v186;
    uint64_t v192 = *(void *)(a1 + 16);
    if (!v192) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v48 = a1;
    unint64_t v187 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v49 = (a1 + v187);
    uint64_t v50 = *(void *)(v24 + 72);
    uint64_t v159 = v195;
    uint64_t v152 = v48;
    swift_bridgeObjectRetain();
    uint64_t v193 = MEMORY[0x263F8EE78];
    uint64_t v183 = "retrieveMessages(for:)";
    uint64_t v157 = (long long *)0x8000000258681A00;
    *(void *)&long long v51 = 136315138;
    long long v160 = v51;
    uint64_t v156 = MEMORY[0x263F8EE58] + 8;
    *(void *)&long long v51 = 136315394;
    long long v182 = v51;
    *(void *)&long long v51 = 136315395;
    long long v153 = v51;
    uint64_t v52 = v176;
    uint64_t v188 = v50;
    while (1)
    {
      _s10OmniSearch0B6ResultVWOcTm_4();
      SearchResultItem.associatedValue.getter((uint64_t)&v200);
      unint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
      if (swift_dynamicCast())
      {
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v47);
        _s10OmniSearch0B6ResultVWObTm_4();
        if (*(void *)(v22 + 56))
        {
          swift_bridgeObjectRetain();
          uint64_t v54 = OUTLINED_FUNCTION_79_0();
          unint64_t v53 = String.oms_IMMessagePartGUID.getter(v54, v55);
          uint64_t v191 = v56;
          swift_bridgeObjectRelease();
          if (*(void *)(v52 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v57 = OUTLINED_FUNCTION_49_12();
            unint64_t v59 = specialized __RawDictionaryStorage.find<A>(_:)(v57, v58);
            if (v60)
            {
              outlined init with copy of CustomStringConvertible(*(void *)(v52 + 56) + 40 * v59, (uint64_t)&v197);
            }
            else
            {
              uint64_t v199 = 0;
              long long v197 = 0u;
              long long v198 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v198 + 1))
            {
              uint64_t v179 = v53;
              outlined init with take of SageSearchClient(&v197, (uint64_t)&v200);
              OUTLINED_FUNCTION_39_12();
              uint64_t v74 = OUTLINED_FUNCTION_38_13();
              uint64_t v76 = v75(v74);
              if (v77)
              {
                unint64_t v78 = v77;
                uint64_t v155 = v76;
                uint64_t v79 = (void *)((char *)v189 + v47[14]);
                uint64_t v81 = *v79;
                uint64_t v80 = v79[1];
                outlined init with copy of CustomStringConvertible((uint64_t)&v200, (uint64_t)&v197);
                if (v80)
                {
                  uint64_t v170 = v80;
                }
                else
                {
                  __swift_project_boxed_opaque_existential_1(&v197, *((uint64_t *)&v198 + 1));
                  uint64_t v96 = OUTLINED_FUNCTION_57_9();
                  long long v47 = v186;
                  uint64_t v81 = v97(v96);
                  uint64_t v170 = v98;
                }
                uint64_t v171 = v81;
                swift_bridgeObjectRetain();
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v197);
                if (*(void *)(*(void *)((char *)v189 + v47[15]) + 16))
                {
                  uint64_t v169 = *(void *)((char *)v189 + v47[15]);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  OUTLINED_FUNCTION_39_12();
                  uint64_t v99 = OUTLINED_FUNCTION_38_13();
                  uint64_t v169 = v100(v99);
                }
                OUTLINED_FUNCTION_39_12();
                uint64_t v101 = OUTLINED_FUNCTION_79_0();
                uint64_t v103 = ChatMessageRecord.chatMobileSMSDocuments.getter(v101, v102);
                uint64_t v104 = *(void *)(v103 + 16);
                unint64_t v172 = v78;
                if (v104)
                {
                  unint64_t v105 = v47;
                  uint64_t v106 = v189;
                  uint64_t v166 = v103;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v106 = v189;
                  uint64_t v166 = *(void *)((char *)v189 + v47[16]);
                  swift_bridgeObjectRetain();
                  unint64_t v105 = v47;
                }
                uint64_t v107 = v106[3];
                uint64_t v168 = v106[2];
                uint64_t v162 = v107;
                uint64_t v108 = v106[5];
                uint64_t v167 = v106[4];
                uint64_t v165 = v108;
                uint64_t v109 = v202;
                uint64_t v110 = v203;
                __swift_project_boxed_opaque_existential_1(&v200, v202);
                uint64_t v111 = *(void *)(v110 + 16);
                uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v111 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v164 = v112(v109, v111);
                uint64_t v163 = v113;
                uint64_t v115 = v106[8];
                uint64_t v114 = v106[9];
                outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v106 + v105[10], v178, &demangling cache variable for type metadata for Date?);
                uint64_t v116 = v174;
                outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v106 + v105[11], v174, &demangling cache variable for type metadata for URL?);
                uint64_t v117 = *(void *)((char *)v106 + v105[12]);
                uint64_t v118 = (void *)((char *)v106 + v105[13]);
                uint64_t v119 = v118[1];
                uint64_t v161 = *v118;
                uint64_t v120 = type metadata accessor for PartialExtractedAttributes(0);
                memset(v195, 0, sizeof(v195));
                uint64_t v196 = 0;
                uint64_t v121 = v175;
                __swift_storeEnumTagSinglePayload(v175, 1, 1, v120);
                uint64_t v122 = v173;
                uint64_t v123 = *(void **)(v185 + *(int *)(v173 + 20));
                swift_bridgeObjectRetain();
                id v124 = v123;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                MobileSMSDocument.init(id:chatId:displayName:body:from:to:date:contentURL:photoAttachments:serviceName:chatName:chatParticipants:chatMessages:dataDetectorResults:extractedEventsLLMConsumableDescription:partialExtractedAttributes:csItem:)((uint64_t)v179, v191, v168, v162, v167, v165, v164, v163, v115, v114, v178, v116, v117, v161, v119, v171, v170, v169, v166,
                  (uint64_t)v195,
                  0,
                  0,
                  v121,
                  (uint64_t)v123,
                  v151,
                  v152,
                  v153,
                  *((uint64_t *)&v153 + 1),
                  v154,
                  v155,
                  v156,
                  v157,
                  v158,
                  (uint64_t)v159,
                  v160,
                  *((void **)&v160 + 1));
                uint64_t v125 = v158;
                _s10OmniSearch0B6ResultVWOcTm_4();
                type metadata accessor for SearchResultItem(0);
                swift_storeEnumTagMultiPayload();
                id v126 = (void *)(v125 + *(int *)(v122 + 24));
                void *v126 = 0;
                v126[1] = 0;
                *(void *)(v125 + *(int *)(v122 + 20)) = v124;
                id v127 = v124;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v193 = OUTLINED_FUNCTION_6_23();
                }
                OUTLINED_FUNCTION_30_20();
                OUTLINED_FUNCTION_11_24();
                uint64_t v46 = v185;
                if (v69) {
                  uint64_t v193 = OUTLINED_FUNCTION_5_20(v128);
                }
                OUTLINED_FUNCTION_2_13();
                _s10OmniSearch0B6ResultVWObTm_4();
                swift_bridgeObjectRetain();
                uint64_t v129 = OUTLINED_FUNCTION_24_22();
                os_log_type_t v130 = static os_log_type_t.info.getter();
                if (OUTLINED_FUNCTION_40_12(v130))
                {
                  uint64_t v131 = OUTLINED_FUNCTION_83_2();
                  *(void *)&v195[0] = OUTLINED_FUNCTION_11_22();
                  OUTLINED_FUNCTION_43_15((uint64_t)v201);
                  uint64_t v132 = OUTLINED_FUNCTION_12_25();
                  OUTLINED_FUNCTION_31_17(v132);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v131 + 12) = 2080;
                  unint64_t v133 = v191;
                  swift_bridgeObjectRetain();
                  uint64_t v134 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v179, v133, (uint64_t *)v195);
                  OUTLINED_FUNCTION_50_15(v134);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  OUTLINED_FUNCTION_48_9(&dword_257DC6000, v129, (os_log_type_t)v125, "%s Replaced body of message id: %s");
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_34();
                  OUTLINED_FUNCTION_34();
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                uint64_t v135 = v177;
                unint64_t v53 = v172;
                swift_bridgeObjectRetain();
                unint64_t v136 = OUTLINED_FUNCTION_24_22();
                os_log_type_t v137 = static os_log_type_t.debug.getter();
                if (OUTLINED_FUNCTION_40_12(v137))
                {
                  uint64_t v138 = OUTLINED_FUNCTION_83_2();
                  *(void *)&v195[0] = OUTLINED_FUNCTION_11_22();
                  OUTLINED_FUNCTION_43_15((uint64_t)&v182);
                  uint64_t v139 = OUTLINED_FUNCTION_12_25();
                  OUTLINED_FUNCTION_31_17(v139);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v138 + 12) = 2085;
                  swift_bridgeObjectRetain();
                  uint64_t v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v155, v53, (uint64_t *)v195);
                  OUTLINED_FUNCTION_50_15(v140);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  OUTLINED_FUNCTION_48_9(&dword_257DC6000, v136, (os_log_type_t)v125, "%s retrievedMessageBody: %{sensitive}s");
                  OUTLINED_FUNCTION_41_15();
                  uint64_t v135 = v177;
                  OUTLINED_FUNCTION_34();
                  OUTLINED_FUNCTION_34();
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                uint64_t v141 = v180;
                _s10OmniSearch0B6ResultVWOcTm_4();
                uint64_t v142 = OUTLINED_FUNCTION_24_22();
                os_log_type_t v143 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v142, v143))
                {
                  uint64_t v144 = OUTLINED_FUNCTION_83_2();
                  uint64_t v191 = OUTLINED_FUNCTION_11_22();
                  *(void *)&v195[0] = v191;
                  OUTLINED_FUNCTION_43_15((uint64_t)&v182);
                  uint64_t v194 = OUTLINED_FUNCTION_12_25();
                  uint64_t v179 = v142;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v144 + 12) = 2085;
                  uint64_t v145 = v186;
                  uint64_t v146 = swift_bridgeObjectRetain();
                  uint64_t v147 = MEMORY[0x25A2C7E60](v146, v145);
                  unint64_t v149 = v148;
                  swift_bridgeObjectRelease();
                  uint64_t v194 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v147, v149, (uint64_t *)v195);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  _s10OmniSearch0B6ResultVWOhTm_1(v135, (void (*)(void))type metadata accessor for MobileSMSDocument);
                  unint64_t v53 = (unint64_t)v179;
                  OUTLINED_FUNCTION_48_9(&dword_257DC6000, v179, v143, "%s chatMessages: %{sensitive}s");
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_34();
                  OUTLINED_FUNCTION_34();

                  _s10OmniSearch0B6ResultVWOhTm_1(v180, (void (*)(void))type metadata accessor for MobileSMSDocument);
                }
                else
                {

                  _s10OmniSearch0B6ResultVWOhTm_1(v135, (void (*)(void))type metadata accessor for MobileSMSDocument);
                  _s10OmniSearch0B6ResultVWOhTm_1(v141, (void (*)(void))type metadata accessor for MobileSMSDocument);
                }
                uint64_t v22 = (uint64_t)v189;
                _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v189, (void (*)(void))type metadata accessor for MobileSMSDocument);
                _s10OmniSearch0B6ResultVWOhTm_1(v46, (void (*)(void))type metadata accessor for SearchResult);
                uint64_t v52 = v176;
                uint64_t v16 = v181;
                OUTLINED_FUNCTION_30_20();
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v200);
                long long v47 = v186;
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v92 = OUTLINED_FUNCTION_24_22();
                os_log_type_t v93 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v92, v93))
                {
                  uint64_t v94 = OUTLINED_FUNCTION_14_1();
                  unint64_t v53 = OUTLINED_FUNCTION_13_1();
                  *(void *)&long long v197 = v53;
                  *(void *)(v94 + 4) = OUTLINED_FUNCTION_19_21((uint64_t)&v186);
                  _os_log_impl(&dword_257DC6000, v92, v93, "%s Expected retrievedMessage to have body. It's OK, will just preserve existing message", (uint8_t *)v94, 0xCu);
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_34();
                  long long v47 = v186;
                  OUTLINED_FUNCTION_34();
                }

                OUTLINED_FUNCTION_54_10();
                OUTLINED_FUNCTION_30_20();
                _s10OmniSearch0B6ResultVWOcTm_4();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v193 = OUTLINED_FUNCTION_6_23();
                }
                OUTLINED_FUNCTION_11_24();
                if (v69) {
                  uint64_t v193 = OUTLINED_FUNCTION_5_20(v95);
                }
                OUTLINED_FUNCTION_2_13();
                _s10OmniSearch0B6ResultVWObTm_4();
                _s10OmniSearch0B6ResultVWOhTm_1(v22, (void (*)(void))type metadata accessor for MobileSMSDocument);
                _s10OmniSearch0B6ResultVWOhTm_1(v46, (void (*)(void))type metadata accessor for SearchResult);
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v200);
              }
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v199 = 0;
            long long v197 = 0u;
            long long v198 = 0u;
          }
          outlined destroy of SearchResult?((uint64_t)&v197, &demangling cache variable for type metadata for ChatMessageRecord?);
          swift_bridgeObjectRetain();
          id v82 = OUTLINED_FUNCTION_24_22();
          os_log_type_t v83 = static os_log_type_t.error.getter();
          if (OUTLINED_FUNCTION_40_12(v83))
          {
            uint64_t v84 = OUTLINED_FUNCTION_83_2();
            uint64_t v85 = OUTLINED_FUNCTION_11_22();
            uint64_t v22 = v191;
            uint64_t v179 = v49;
            uint64_t v86 = v16;
            uint64_t v87 = v52;
            unint64_t v88 = v53;
            unint64_t v53 = v85;
            unint64_t v200 = v85;
            OUTLINED_FUNCTION_43_15((uint64_t)v201);
            *(void *)(v84 + 4) = OUTLINED_FUNCTION_26_18((uint64_t)v183);
            *(_WORD *)(v84 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v89 = v88;
            uint64_t v52 = v87;
            uint64_t v16 = v86;
            uint64_t v49 = v179;
            *(void *)(v84 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v89, v22, (uint64_t *)&v200);
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_48_9(&dword_257DC6000, v82, (os_log_type_t)v47, "%s Expected matching spiMessages with id: %s. It's OK, will just preserve existing message");
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          OUTLINED_FUNCTION_30_20();
          _s10OmniSearch0B6ResultVWOcTm_4();
          swift_isUniquelyReferenced_nonNull_native();
          long long v47 = v186;
          OUTLINED_FUNCTION_54_10();
          if ((v90 & 1) == 0) {
            uint64_t v193 = OUTLINED_FUNCTION_6_23();
          }
          OUTLINED_FUNCTION_11_24();
          if (v69) {
            uint64_t v193 = OUTLINED_FUNCTION_5_20(v91);
          }
        }
        else
        {
          os_log_type_t v70 = OUTLINED_FUNCTION_24_22();
          os_log_type_t v71 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v70, v71))
          {
            uint64_t v72 = OUTLINED_FUNCTION_14_1();
            unint64_t v53 = OUTLINED_FUNCTION_13_1();
            unint64_t v200 = v53;
            *(_DWORD *)uint64_t v72 = v160;
            *(void *)(v72 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, (unint64_t)v157, (uint64_t *)&v200);
            _os_log_impl(&dword_257DC6000, v70, v71, "%s Expected origMessage to have body. It's OK, will just preserve existing message", (uint8_t *)v72, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            long long v47 = v186;
            OUTLINED_FUNCTION_34();
          }

          OUTLINED_FUNCTION_30_20();
          _s10OmniSearch0B6ResultVWOcTm_4();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v193 = OUTLINED_FUNCTION_6_23();
          }
          OUTLINED_FUNCTION_11_24();
          if (v69) {
            uint64_t v193 = OUTLINED_FUNCTION_5_20(v73);
          }
        }
        OUTLINED_FUNCTION_2_13();
        _s10OmniSearch0B6ResultVWObTm_4();
        _s10OmniSearch0B6ResultVWOhTm_1(v22, (void (*)(void))type metadata accessor for MobileSMSDocument);
      }
      else
      {
        OUTLINED_FUNCTION_34_10((uint64_t)v16);
        outlined destroy of SearchResult?((uint64_t)v16, &demangling cache variable for type metadata for MobileSMSDocument?);
        uint64_t v61 = v184;
        _s10OmniSearch0B6ResultVWOcTm_4();
        uint64_t v62 = OUTLINED_FUNCTION_24_22();
        os_log_type_t v63 = static os_log_type_t.error.getter();
        uint64_t v22 = v63;
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = OUTLINED_FUNCTION_83_2();
          *(void *)&long long v197 = OUTLINED_FUNCTION_11_22();
          *(void *)(v64 + 4) = OUTLINED_FUNCTION_19_21((uint64_t)v201);
          *(_WORD *)(v64 + 12) = 2080;
          SearchResultItem.associatedValue.getter((uint64_t)&v200);
          uint64_t v65 = String.init<A>(describing:)();
          *(void *)(v64 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, (uint64_t *)&v197);
          swift_bridgeObjectRelease();
          _s10OmniSearch0B6ResultVWOhTm_1(v61, (void (*)(void))type metadata accessor for SearchResult);
          _os_log_impl(&dword_257DC6000, v62, (os_log_type_t)v22, "%s Expected item to be of type MobileSMSDocument, but got -> %s. It's OK, will just preserve existing message", (uint8_t *)v64, 0x16u);
          OUTLINED_FUNCTION_41_15();
          uint64_t v16 = v181;
          OUTLINED_FUNCTION_34();
          long long v47 = v186;
          OUTLINED_FUNCTION_34();
        }
        else
        {
          _s10OmniSearch0B6ResultVWOhTm_1(v61, (void (*)(void))type metadata accessor for SearchResult);
        }

        OUTLINED_FUNCTION_30_20();
        uint64_t v46 = v185;
        _s10OmniSearch0B6ResultVWOcTm_4();
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_54_10();
        if ((v67 & 1) == 0) {
          uint64_t v193 = OUTLINED_FUNCTION_6_23();
        }
        OUTLINED_FUNCTION_11_24();
        if (v69) {
          uint64_t v193 = OUTLINED_FUNCTION_5_20(v68);
        }
        OUTLINED_FUNCTION_2_13();
        _s10OmniSearch0B6ResultVWObTm_4();
      }
      _s10OmniSearch0B6ResultVWOhTm_1(v46, (void (*)(void))type metadata accessor for SearchResult);
LABEL_48:
      uint64_t v49 = ((char *)v49 + v53);
      if (!--v192)
      {
        swift_bridgeObjectRelease();
        return v193;
      }
    }
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  __swift_project_value_buffer(v41, (uint64_t)static Logging.search);
  BOOL v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    unint64_t v200 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v45 = OUTLINED_FUNCTION_26_18((uint64_t)"retrieveMessages(for:)");
    OUTLINED_FUNCTION_52_12(v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v42, v43, "%s Didn't get any messages back from IMSPIQueryMessagesWithGUIDsAndQOS, returning orig list as-is", v44, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }

  swift_bridgeObjectRetain();
  return a1;
}

uint64_t String.oms_IMMessagePartGUID.getter(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x263F4AFC8]);
  OUTLINED_FUNCTION_57_9();
  swift_bridgeObjectRetain();
  id v5 = @nonobjc IMMessagePartGUID.init(encodedMessagePartGUID:)(a1, a2);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_messageGUID);

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a1;
    unint64_t v10 = a2;
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_57_9();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = OUTLINED_FUNCTION_13_1();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315650;
    OUTLINED_FUNCTION_177_0();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v12, v13, "%s IMMessagePartGUID converted %s to %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v8;
}

uint64_t ChatMessageRecord.chatMobileSMSDocuments.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v12);
  os_log_type_t v13 = (int *)type metadata accessor for MobileSMSDocument(0);
  OUTLINED_FUNCTION_1();
  uint64_t v58 = v14;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (void *)((char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v55 - v19;
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v71 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v55[1] = v21;
    uint64_t v23 = v21 + 32;
    uint64_t v56 = v18 + 2;
    uint64_t v65 = v22 - 1;
    uint64_t v57 = v20;
    uint64_t v24 = v59;
    while (1)
    {
      uint64_t v61 = v23;
      outlined init with copy of CustomStringConvertible(v23, (uint64_t)v68);
      uint64_t v25 = OUTLINED_FUNCTION_9_17(v68);
      uint64_t result = v26(v25);
      if (!v28) {
        break;
      }
      uint64_t v29 = result;
      uint64_t v30 = v28;
      uint64_t v31 = v69;
      uint64_t v32 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
      uint64_t v63 = v33;
      uint64_t v34 = v69;
      uint64_t v35 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 32))(v34, v35);
      uint64_t v36 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      uint64_t v37 = OUTLINED_FUNCTION_57_9();
      v38(v37, v36);
      uint64_t v39 = type metadata accessor for URL();
      uint64_t v40 = v60;
      __swift_storeEnumTagSinglePayload(v60, 1, 1, v39);
      type metadata accessor for PartialExtractedAttributes(0);
      OUTLINED_FUNCTION_34_10(v66);
      uint64_t v41 = (char *)v18 + v13[17];
      BOOL v42 = (uint64_t *)((char *)v18 + v13[18]);
      uint64_t v43 = (uint64_t)v18 + v13[19];
      OUTLINED_FUNCTION_34_10(v43);
      uint64_t v44 = type metadata accessor for PreExtractedCard(0);
      OUTLINED_FUNCTION_25_20(v44);
      uint64_t v45 = type metadata accessor for PreExtractedContact(0);
      OUTLINED_FUNCTION_25_20(v45);
      uint64_t v46 = type metadata accessor for PreExtractedSharedLink(0);
      OUTLINED_FUNCTION_25_20(v46);
      uint64_t v47 = (uint64_t)v18 + v13[23];
      _s10OmniSearch0B7ContextVSgWOi0_(v67);
      outlined init with take of PreExtractedBreadcrumb?((uint64_t)v67, v47);
      uint64_t *v18 = v29;
      v18[1] = v30;
      uint64_t v48 = v56;
      *uint64_t v56 = 0u;
      v48[1] = 0u;
      uint64_t v49 = v63;
      v18[6] = v64;
      v18[7] = v49;
      v18[8] = v62;
      uint64_t v50 = MEMORY[0x263F8EE78];
      v18[9] = MEMORY[0x263F8EE78];
      outlined init with copy of PQAVerificationModelProtocol?(v24, (uint64_t)v18 + v13[10], &demangling cache variable for type metadata for Date?);
      outlined init with copy of PQAVerificationModelProtocol?(v40, (uint64_t)v18 + v13[11], &demangling cache variable for type metadata for URL?);
      *(uint64_t *)((char *)v18 + v13[12]) = v50;
      long long v51 = (uint64_t *)((char *)v18 + v13[14]);
      *long long v51 = 0;
      v51[1] = 0;
      *(uint64_t *)((char *)v18 + v13[15]) = v50;
      *(uint64_t *)((char *)v18 + v13[16]) = v50;
      uint64_t v52 = (uint64_t *)((char *)v18 + v13[13]);
      *uint64_t v52 = 0;
      v52[1] = 0;
      *(_OWORD *)uint64_t v41 = 0u;
      *((_OWORD *)v41 + 1) = 0u;
      *((void *)v41 + 4) = 0;
      *BOOL v42 = 0;
      v42[1] = 0;
      outlined assign with take of PartialExtractedAttributes?(v66, v43);
      outlined destroy of SearchResult?(v40, &demangling cache variable for type metadata for URL?);
      outlined destroy of SearchResult?(v24, &demangling cache variable for type metadata for Date?);
      _s10OmniSearch0B6ResultVWObTm_4();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
      uint64_t v53 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_115();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v53 = v71;
      }
      unint64_t v54 = *(void *)(v53 + 16);
      if (v54 >= *(void *)(v53 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v53 = v71;
      }
      *(void *)(v53 + 16) = v54 + 1;
      _s10OmniSearch0B6ResultVWObTm_4();
      if (!v65)
      {
        swift_bridgeObjectRelease();
        return v53;
      }
      uint64_t v23 = v61 + 40;
      --v65;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return result;
}

double closure #4 in MessageBodyManager.enrichMessagesWithContext(from:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
    if (v9)
    {
      outlined init with copy of CustomStringConvertible(*(void *)(a3 + 56) + 40 * v8, (uint64_t)&v16);
      swift_bridgeObjectRelease();
      if (*((void *)&v17 + 1))
      {
        outlined init with take of SageSearchClient(&v16, a4);
        return result;
      }
    }
    else
    {
      uint64_t v18 = 0;
      long long v16 = 0u;
      long long v17 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  outlined destroy of SearchResult?((uint64_t)&v16, &demangling cache variable for type metadata for MessageRecord?);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(void *)&long long v16 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020, 0x8000000258681B10, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v12, v13, "%s - Failed to fetch full body for message: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v15, -1, -1);
    MEMORY[0x25A2C94B0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)(a4 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[27] = a4;
  v5[28] = a5;
  v5[25] = a2;
  v5[26] = a3;
  v5[24] = a1;
  uint64_t v6 = type metadata accessor for Logger();
  v5[29] = v6;
  v5[30] = *(void *)(v6 - 8);
  v5[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #5 in MessageBodyManager.enrichMessagesWithContext(from:), 0, 0);
}

uint64_t closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_61();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_118();
  a22 = v24;
  uint64_t v27 = OUTLINED_FUNCTION_9_17(*(void **)(v24 + 200));
  uint64_t result = v28(v27);
  if (!v30)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v31 = specialized Dictionary.subscript.getter(result, v30, *(void *)(v24 + 208));
  swift_bridgeObjectRelease();
  if (!v31)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v24 + 240);
    uint64_t v32 = *(void *)(v24 + 248);
    uint64_t v34 = *(void *)(v24 + 232);
    uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)static Logging.search);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
    uint64_t v36 = OUTLINED_FUNCTION_49_12();
    outlined init with copy of CustomStringConvertible(v36, v37);
    BOOL v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v38, v39))
    {
      uint64_t v47 = *(void *)(v24 + 240);
      uint64_t v46 = *(void *)(v24 + 248);
      uint64_t v48 = *(void *)(v24 + 232);
      __swift_destroy_boxed_opaque_existential_1Tm(v24 + 16);

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
      goto LABEL_9;
    }
    uint64_t v40 = OUTLINED_FUNCTION_83_2();
    a12 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v40 = 136315394;
    OUTLINED_FUNCTION_177_0();
    *(void *)(v24 + 176) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020, v41, &a12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v42 = *(void *)(v24 + 40);
    uint64_t v43 = *(void *)(v24 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v24 + 16), v42);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
    if (v44)
    {
      uint64_t v45 = *(void *)(v24 + 240);
      a10 = *(void *)(v24 + 232);
      a11 = *(void *)(v24 + 248);
      *(void *)(v24 + 184) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(result, v44, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(v24 + 16);
      _os_log_impl(&dword_257DC6000, v38, v39, "%s - No guids of chat messages surrounding: %s", (uint8_t *)v40, 0x16u);
      OUTLINED_FUNCTION_41_15();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(a11, a10);
LABEL_9:
      uint64_t v31 = MEMORY[0x263F8EE78];
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_10:
  uint64_t v49 = *(void *)(v24 + 216);
  uint64_t v50 = *(void *)(v24 + 200);
  uint64_t v51 = swift_task_alloc();
  *(void *)(v51 + 16) = v49;
  *(void *)(v51 + 24) = v50;
  uint64_t v52 = specialized Sequence.compactMap<A>(_:)((void (*)(long long *__return_ptr, void *))partial apply for closure #1 in closure #5 in MessageBodyManager.enrichMessagesWithContext(from:), v51, v31);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  a12 = v52;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&a12);
  uint64_t v53 = *(void **)(v24 + 224);
  uint64_t v54 = *(void *)(v24 + 200);
  swift_bridgeObjectRelease();
  uint64_t v55 = a12;
  uint64_t v56 = v53[3];
  uint64_t v57 = v53[4];
  __swift_project_boxed_opaque_existential_1(v53, v56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v54, v56, v57);
  uint64_t v59 = *(void *)(v24 + 192);
  uint64_t v58 = *(void *)(v24 + 200);
  if (*(void *)(v24 + 120))
  {
    uint64_t v60 = (long long *)OUTLINED_FUNCTION_49_12();
    outlined init with take of SageSearchClient(v60, v61);
    outlined init with copy of CustomStringConvertible(v58, v24 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(v24 + 56), *(void *)(v24 + 80));
    uint64_t v62 = OUTLINED_FUNCTION_55_12();
    uint64_t v64 = v63(v62);
    uint64_t v66 = v65;
    uint64_t v67 = *(void *)(v24 + 80);
    uint64_t v68 = *(void *)(v24 + 88);
    __swift_project_boxed_opaque_existential_1((void *)(v24 + 56), v67);
    uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
    *(void *)(v59 + 24) = &unk_2706AC6D8;
    *(void *)(v59 + 32) = &protocol witness table for IMMessageRecord;
    uint64_t v70 = (void *)swift_allocObject();
    outlined init with take of SageSearchClient((long long *)(v24 + 136), (uint64_t)(v70 + 4));
    uint64_t v70[2] = v64;
    v70[3] = v66;
    v70[9] = v55;
    v70[10] = v69;
    __swift_destroy_boxed_opaque_existential_1Tm(v24 + 56);
  }
  else
  {
    outlined destroy of SearchResult?(v24 + 96, &demangling cache variable for type metadata for ChatInfo?);
    *(void *)(v59 + 24) = &unk_2706AC6D8;
    *(void *)(v59 + 32) = &protocol witness table for IMMessageRecord;
    uint64_t v70 = (void *)swift_allocObject();
    outlined init with copy of CustomStringConvertible(v58, (uint64_t)(v70 + 4));
    uint64_t v70[2] = 0;
    v70[3] = 0;
    uint64_t v71 = MEMORY[0x263F8EE78];
    v70[9] = v55;
    v70[10] = v71;
  }
  **(void **)(v24 + 192) = v70;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_1();
  return v73(v72, v73, v74, v75, v76, v77, v78, v79, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t closure #1 in closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    uint64_t v15 = *a1;
    uint64_t v14 = a1[1];
    swift_bridgeObjectRetain();
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v14);
    if (v17)
    {
      outlined init with copy of CustomStringConvertible(*(void *)(a2 + 56) + 40 * v16, (uint64_t)&v33);
      swift_bridgeObjectRelease();
      if (*((void *)&v34 + 1)) {
        return outlined init with take of SageSearchClient(&v33, a4);
      }
    }
    else
    {
      uint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
  }
  outlined destroy of SearchResult?((uint64_t)&v33, &demangling cache variable for type metadata for MessageRecord?);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v10, (uint64_t)static Logging.search);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
  outlined init with copy of CustomStringConvertible(a3, (uint64_t)&v33);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v20, v21))
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_13;
  }
  uint64_t v29 = v11;
  uint64_t v30 = a4;
  uint64_t v31 = v5;
  uint64_t v22 = swift_slowAlloc();
  uint64_t v28 = swift_slowAlloc();
  uint64_t v36 = v28;
  *(_DWORD *)uint64_t v22 = 136315394;
  uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020, 0x8000000258681B10, &v36);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v22 + 12) = 2080;
  uint64_t v23 = *((void *)&v34 + 1);
  uint64_t v24 = v35;
  __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  if (v25)
  {
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(result, v25, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
    _os_log_impl(&dword_257DC6000, v20, v21, "%s - No full body for message: %s", (uint8_t *)v22, 0x16u);
    uint64_t v26 = v28;
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v26, -1, -1);
    MEMORY[0x25A2C94B0](v22, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v10);
    a4 = v30;
LABEL_13:
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  void v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x270FA2498](closure #2 in MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:), 0, 0);
}

uint64_t closure #2 in MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = (void *)v0[4];
  uint64_t v4 = (uint64_t *)v0[3];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  unint64_t v9 = v8;
  uint64_t v10 = MessageBodyManager.retrieveSurroundingChatMessages(targetMessage:countBefore:countAfter:)(v3, v2, v1);
  uint64_t v11 = String.oms_IMMessagePartGUID.getter(v7, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySSG_SSs5NeverOTg5224_s10OmniSearch18MessageBodyManagerV06enrichC19WithAssociatedGuids33_687DBA3D1536BCD45E6718749ACC92F304mainC3IdsSDySSSaySSGGSayAA0C10Identifier_pG_tYaFSS_AGtAaI_pYacfU0_S2Scfu_32cfd6abeb9142fd6cb6c011096cba1c5aS2STf3nnnpk_nTf1cn_n(v10);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v11;
  v4[1] = v13;
  v4[2] = v10;
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t MessageBodyManager.retrieveSurroundingChatMessages(targetMessage:countBefore:countAfter:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  if (!v10)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logging.search);
    outlined init with copy of CustomStringConvertible((uint64_t)a1, (uint64_t)v63);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v61 = v23;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000046, 0x8000000258681B80, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v24 = v64;
      uint64_t v25 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
      _os_log_impl(&dword_257DC6000, v20, v21, "%s - Failed to get chatIdentifier from message: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v23, -1, -1);
      MEMORY[0x25A2C94B0](v22, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
    }

    return MEMORY[0x263F8EE78];
  }
  unint64_t v11 = v10;
  uint64_t v56 = a2;
  uint64_t v61 = 0;
  unint64_t v62 = 0;
  uint64_t v59 = 0;
  unint64_t v60 = 0;
  uint64_t v12 = v3[3];
  uint64_t v13 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v12);
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t *, uint64_t, uint64_t))(v13 + 16))(v57, v11, &v61, &v59, v12, v13);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  if (!v17)
  {
    unint64_t v18 = v60;
    if (v60)
    {
      uint64_t v55 = v59;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    __swift_project_value_buffer(v45, (uint64_t)static Logging.search);
    outlined init with copy of CustomStringConvertible((uint64_t)a1, (uint64_t)v63);
    swift_bridgeObjectRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v58 = v49;
      *(_DWORD *)uint64_t v48 = 136315650;
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000046, 0x8000000258681B80, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v48 + 12) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v11, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v48 + 22) = 2080;
      uint64_t v50 = v64;
      uint64_t v51 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v50, v51);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
      _os_log_impl(&dword_257DC6000, v46, v47, "%s - Failed to get service from either Spotlight or chatGUID: %s for message: %s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v49, -1, -1);
      MEMORY[0x25A2C94B0](v48, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  unint64_t v18 = v17;
  uint64_t v55 = v16;
LABEL_10:
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
  uint64_t v32 = String.oms_IMMessagePartGUID.getter(v30, v31);
  unint64_t v34 = v33;
  swift_bridgeObjectRelease();
  unint64_t v35 = v62;
  if (v62)
  {
    uint64_t v57 = v61;
    swift_bridgeObjectRelease();
    unint64_t v11 = v35;
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  __swift_project_value_buffer(v36, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v63[0] = v54;
    *(_DWORD *)uint64_t v39 = 136315906;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000046, 0x8000000258681B80, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v11, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v40 = v55;
    uint64_t v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v18, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v37, v38, "%s - Fetching messages surrounding the message: %s, withChatId: %s, withService: %s", (uint8_t *)v39, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v54, -1, -1);
    MEMORY[0x25A2C94B0](v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v40 = v55;
  }
  uint64_t v41 = v4[3];
  uint64_t v42 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v41);
  uint64_t v43 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 24))(v32, v34, v57, v11, v40, v18, v56, a3, v41, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x270FA2498](IMSPIMessageQueryHelper.queryFullBody(messageGuids:), 0, 0);
}

uint64_t IMSPIMessageQueryHelper.queryFullBody(messageGuids:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MessageRecord]);
  *uint64_t v3 = v0;
  v3[1] = IMSPIMessageQueryHelper.queryFullBody(messageGuids:);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2318]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MessageRecord], Never>);
  uint64_t v3 = *(void *)(v21 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v21);
  uint64_t v5 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  static DispatchQoS.userInitiated.getter();
  DispatchQoS.qosClass.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  DispatchQoS.QoSClass.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v21);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16 + v15, (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  aBlock[4] = partial apply for closure #1 in closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:);
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ();
  aBlock[3] = &block_descriptor_7;
  unint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  Class v18 = isa;
  IMSPIQueryMessagesWithGUIDsAndQOS();

  _Block_release(v17);
}

uint64_t closure #1 in closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(uint64_t a1)
{
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v26 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001CLL, 0x8000000258681AF0, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x25A2C7E60](v7, MEMORY[0x263F8D310]);
    uint64_t v9 = a1;
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v11, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a1 = v9;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v3, v4, "%s - Query via IMSPIQueryMessagesWithGUIDsAndQOS for full message content for messageGuids: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v6, -1, -1);
    MEMORY[0x25A2C94B0](v5, -1, -1);

    if (!v9) {
      goto LABEL_12;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a1)
    {
LABEL_12:
      uint64_t v26 = MEMORY[0x263F8EE78];
      goto LABEL_15;
    }
  }
  uint64_t v12 = specialized _arrayConditionalCast<A, B>(_:)(a1);
  if (!v12) {
    goto LABEL_12;
  }
  unint64_t v13 = v12;
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = v17;
    *(_DWORD *)uint64_t v16 = 136315651;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001CLL, 0x8000000258681AF0, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2085;
    uint64_t v18 = type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for IMSPIMessage);
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x25A2C7E60](v19, v18);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v14, v15, "%s - IMSPIQueryMessagesWithGUIDsAndQOS returned %ld messages: %{sensitive}s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v17, -1, -1);
    MEMORY[0x25A2C94B0](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  specialized _arrayForceCast<A, B>(_:)();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v26 = v24;
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MessageRecord], Never>);
  return CheckedContinuation.resume(returning:)();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void IMSPIMessageQueryHelper.parseChatGUID(from:toIdentifier:toService:)(uint64_t a1, unint64_t a2)
{
  v14[1] = *MEMORY[0x263EF8340];
  os_log_type_t v4 = (void *)MEMORY[0x25A2C7AB0]();
  v14[0] = 0;
  IMComponentsFromChatGUID();

  uint64_t v13 = a1;
  uint64_t v5 = one-time initialization token for search;
  id v6 = 0;
  id v7 = 0;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v14[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002BLL, 0x8000000258681AC0, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, a2, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v9, v10, "%s IMComponentsFromChatGUID unable to extract identifier and service from chatGUID: %s, return as-is.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v12, -1, -1);
    MEMORY[0x25A2C94B0](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t IMSPIMessageQueryHelper.queryMessagesBeforeAndAfter(targetGuid:withChatId:withService:countBefore:countAfter:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  v61[1] = *MEMORY[0x263EF8340];
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  uint64_t v58 = a3;
  uint64_t v59 = a8;
  unint64_t v60 = a4;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    v61[0] = v55;
    *(_DWORD *)uint64_t v17 = 136316418;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000056, 0x8000000258681A60, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v18 = a1;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, a4, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 32) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a5, a6, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 42) = 2048;
    uint64_t v19 = a7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 52) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v15, v16, "%s - parameters. targetGuid: %s, chatIdentifier: %s, service: %s, countBefore: %lu, countAfter: %lu", (uint8_t *)v17, 0x3Eu);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v55, -1, -1);
    uint64_t v20 = v17;
    a3 = v58;
    MEMORY[0x25A2C94B0](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v19 = a7;
    uint64_t v18 = a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_258661700;
  *(void *)(v21 + 32) = a3;
  *(void *)(v21 + 40) = a4;
  swift_bridgeObjectRetain();
  v22.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_258661700;
  *(void *)(v23 + 32) = a5;
  *(void *)(v23 + 40) = a6;
  swift_bridgeObjectRetain();
  v24.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v25 = MEMORY[0x25A2C7AB0](v18, a2);
  if ((v59 | v19) < 0)
  {
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_17;
    }
    goto LABEL_28;
  }
  uint64_t v26 = (void *)v25;
  uint64_t v27 = v18;
  uint64_t v28 = (void *)MEMORY[0x25A2C7AB0](0, 0xE000000000000000);
  uint64_t v29 = (void *)IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier();

  if (!v29
    || (v61[0] = 0,
        v30 = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for IMDMessageRecord), static Array._conditionallyBridgeFromObjectiveC(_:result:)(), v29, (unint64_t v23 = v61[0]) == 0))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v61[0] = v42;
      *(_DWORD *)uint64_t v41 = 136315650;
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000056, 0x8000000258681A60, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v41 + 12) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, a2, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 22) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v39, v40, "%s - Nothing returned from IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID for message: %s, chatIdentifier: %s", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v42, -1, -1);
      MEMORY[0x25A2C94B0](v41, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain_n();
  unint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v61[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315395;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000056, 0x8000000258681A60, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2085;
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = MEMORY[0x25A2C7E60](v35, v30);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v31, v32, "%s - Returned from IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID: %{sensitive}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v34, -1, -1);
    MEMORY[0x25A2C94B0](v33, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v23 >> 62) {
    goto LABEL_27;
  }
  uint64_t v43 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v43)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_17:
  v61[0] = MEMORY[0x263F8EE78];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if (v43 < 0) {
    __break(1u);
  }
  uint64_t v44 = 0;
  uint64_t v45 = v61[0];
  do
  {
    if ((v23 & 0xC000000000000001) != 0) {
      id v46 = (id)MEMORY[0x25A2C8550](v44, v23);
    }
    else {
      id v46 = *(id *)(v23 + 8 * v44 + 32);
    }
    os_log_type_t v47 = v46;
    id v48 = objc_msgSend(v46, sel_guid, v55);
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = v50;

    v61[0] = v45;
    unint64_t v52 = *(void *)(v45 + 16);
    if (v52 >= *(void *)(v45 + 24) >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v45 = v61[0];
    }
    ++v44;
    *(void *)(v45 + 16) = v52 + 1;
    uint64_t v53 = v45 + 16 * v52;
    *(void *)(v53 + 32) = v49;
    *(void *)(v53 + 40) = v51;
  }
  while (v43 != v44);
  swift_bridgeObjectRelease();
  return v45;
}

double IMSPIMessageQueryHelper.queryChat(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of CustomStringConvertible(a1, (uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MessageRecord);
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for IMSPIMessage);
  if (swift_dynamicCast())
  {
    uint64_t v12 = v26;
    static DispatchQoS.userInitiated.getter();
    DispatchQoS.qosClass.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v13 = DispatchQoS.QoSClass.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v14 = objc_msgSend(v12, sel_spiChatWithQOS_, v13);
    if (v14)
    {
      id v15 = v14;
      *(void *)(a2 + 24) = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for IMSPIChat);
      *(void *)(a2 + 32) = &protocol witness table for IMSPIChat;

      *(void *)a2 = v15;
      return result;
    }
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logging.search);
    outlined init with copy of CustomStringConvertible(a1, (uint64_t)v27);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = (void *)v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x6168437972657571, 0xEF293A726F662874, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1(v27, v27[3]);
      swift_getDynamicType();
      uint64_t v22 = _typeName(_:qualified:)();
      uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
      _os_log_impl(&dword_257DC6000, v18, v19, "%s - Can only query IMSPIChat for %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v21, -1, -1);
      MEMORY[0x25A2C94B0](v20, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    }
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t IMSPIMessageQueryHelper.messageCountBeforeTarget.getter()
{
  return static NSUserDefaults.msgCntBeforeTarget.getter();
}

uint64_t IMSPIMessageQueryHelper.messageCountAfterTarget.getter()
{
  return static NSUserDefaults.msgCntAfterTarget.getter();
}

uint64_t protocol witness for MessageQueryHelper.queryFullBody(messageGuids:) in conformance IMSPIMessageQueryHelper(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = dispatch thunk of AnswerResolvable.resolve(extractedResults:);
  return IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(a1);
}

id @nonobjc IMMessagePartGUID.init(encodedMessagePartGUID:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)MEMORY[0x25A2C7AB0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithEncodedMessagePartGUID_, v3);

  return v4;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v63 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v66 = (char *)&v62 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v65 = (char *)&v62 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v67 = (char *)&v62 - v15;
  uint64_t v16 = (uint64_t)(a2 - a1) / 40;
  uint64_t v17 = (uint64_t)(a3 - a2) / 40;
  if (v16 >= v17)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - a2) / 40, a4);
    unint64_t v18 = a4 + 40 * v17;
    if ((uint64_t)(a3 - a2) < 40 || a1 >= a2) {
      goto LABEL_48;
    }
    unint64_t v43 = a3 - 40;
    while (1)
    {
      uint64_t v74 = (char *)v18;
      uint64_t v64 = (char *)(v18 - 40);
      outlined init with copy of CustomStringConvertible(v18 - 40, (uint64_t)v71);
      uint64_t v67 = (char *)a2;
      uint64_t v44 = (char *)(a2 - 40);
      outlined init with copy of CustomStringConvertible(a2 - 40, (uint64_t)v68);
      uint64_t v46 = v72;
      uint64_t v45 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v47 = (uint64_t)v66;
      (*(void (**)(uint64_t, uint64_t))(v45 + 24))(v46, v45);
      uint64_t v48 = type metadata accessor for Date();
      uint64_t result = __swift_getEnumTagSinglePayload(v47, 1, v48);
      if (result == 1) {
        goto LABEL_51;
      }
      unint64_t v49 = a1;
      unint64_t v50 = a4;
      uint64_t v51 = v69;
      uint64_t v52 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      uint64_t v53 = (uint64_t)v63;
      (*(void (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52);
      uint64_t result = __swift_getEnumTagSinglePayload(v53, 1, v48);
      if (result == 1) {
        goto LABEL_52;
      }
      uint64_t v65 = (char *)(v43 + 40);
      lazy protocol witness table accessor for type Date and conformance Date();
      uint64_t v54 = v66;
      char v55 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v56 = *(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
      v56(v53, v48);
      v56((uint64_t)v54, v48);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v71);
      if (v55)
      {
        BOOL v57 = v65 != v74 || v43 >= (unint64_t)v74;
        unint64_t v18 = (unint64_t)v64;
        uint64_t v44 = v64;
        a4 = v50;
        a1 = v49;
        if (!v57) {
          goto LABEL_44;
        }
      }
      else
      {
        BOOL v58 = v65 != v67 || v43 >= (unint64_t)v67;
        uint64_t v67 = v44;
        a4 = v50;
        a1 = v49;
        unint64_t v18 = (unint64_t)v74;
        if (!v58) {
          goto LABEL_44;
        }
      }
      long long v59 = *(_OWORD *)v44;
      long long v60 = *((_OWORD *)v44 + 1);
      *(void *)(v43 + 32) = *((void *)v44 + 4);
      *(_OWORD *)unint64_t v43 = v59;
      *(_OWORD *)(v43 + 16) = v60;
LABEL_44:
      v43 -= 40;
      a2 = (unint64_t)v67;
      if (v18 <= a4 || (unint64_t)v67 <= a1) {
        goto LABEL_48;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (uint64_t)(a2 - a1) / 40, a4);
  unint64_t v18 = a4 + 40 * v16;
  if ((uint64_t)(a2 - a1) < 40 || a2 >= a3)
  {
LABEL_24:
    a2 = a1;
LABEL_48:
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, (uint64_t)(v18 - a4) / 40, a2);
    return 1;
  }
  uint64_t v74 = (char *)(a4 + 40 * v16);
  uint64_t v64 = (char *)a3;
  while (1)
  {
    unint64_t v20 = a1;
    outlined init with copy of CustomStringConvertible(a2, (uint64_t)v71);
    unint64_t v21 = a4;
    outlined init with copy of CustomStringConvertible(a4, (uint64_t)v68);
    uint64_t v22 = v72;
    uint64_t v23 = v73;
    __swift_project_boxed_opaque_existential_1(v71, v72);
    uint64_t v24 = (uint64_t)v67;
    (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    uint64_t v25 = type metadata accessor for Date();
    uint64_t result = __swift_getEnumTagSinglePayload(v24, 1, v25);
    if (result == 1) {
      break;
    }
    uint64_t v27 = v69;
    uint64_t v28 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    uint64_t v29 = v27;
    uint64_t v30 = (uint64_t)v65;
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v29, v28);
    uint64_t result = __swift_getEnumTagSinglePayload(v30, 1, v25);
    if (result == 1) {
      goto LABEL_50;
    }
    lazy protocol witness table accessor for type Date and conformance Date();
    unint64_t v31 = v67;
    char v32 = dispatch thunk of static Comparable.< infix(_:_:)();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
    v33(v30, v25);
    v33((uint64_t)v31, v25);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v71);
    a4 = v21;
    unint64_t v34 = v20;
    if (v32)
    {
      unint64_t v35 = v21;
      a4 = v21 + 40;
      BOOL v36 = v20 != v21 || v20 >= a4;
    }
    else
    {
      BOOL v37 = v20 == a2;
      unint64_t v35 = a2;
      a2 += 40;
      BOOL v36 = !v37 || v20 >= a2;
    }
    unint64_t v38 = (unint64_t)v64;
    if (v36)
    {
      long long v39 = *(_OWORD *)v35;
      long long v40 = *(_OWORD *)(v35 + 16);
      *(void *)(v34 + 32) = *(void *)(v35 + 32);
      *(_OWORD *)unint64_t v34 = v39;
      *(_OWORD *)(v34 + 16) = v40;
    }
    a1 = v34 + 40;
    unint64_t v18 = (unint64_t)v74;
    if (a4 >= (unint64_t)v74 || a2 >= v38) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_79_0();
}

uint64_t outlined bridged method (pb) of @objc IMSPIChat.handles.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_handles);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for IMSPIHandle);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t _s10OmniSearch0B6ResultVWObTm_4()
{
  uint64_t v2 = OUTLINED_FUNCTION_44_16();
  v3(v2);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t _s10OmniSearch0B6ResultVWOhTm_1(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t _s10OmniSearch0B6ResultVWOcTm_4()
{
  uint64_t v1 = OUTLINED_FUNCTION_44_16();
  v2(v1);
  OUTLINED_FUNCTION_7_2();
  uint64_t v3 = OUTLINED_FUNCTION_210();
  v4(v3);
  return v0;
}

uint64_t dispatch thunk of MessageRecord.guid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MessageRecord.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MessageRecord.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MessageRecord.from.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MessageIdentifier.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MessageIdentifier.chatId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MessageIdentifier.serviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ChatInfo.chatName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ChatInfo.chatParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ChatMessageRecord.mainMessage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ChatMessageRecord.chatMessages.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MessageQueryHelper.queryFullBody(messageGuids:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 8) + **(int **)(v1 + 8));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v7;
  *id v7 = v0;
  v7[1] = dispatch thunk of AnswerResolver.resolve(extractedResults:);
  return v9(v6, v4, v2);
}

uint64_t dispatch thunk of MessageQueryHelper.parseChatGUID(from:toIdentifier:toService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of MessageQueryHelper.queryMessagesBeforeAndAfter(targetGuid:withChatId:withService:countBefore:countAfter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 24))();
}

uint64_t dispatch thunk of MessageQueryHelper.queryChat(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MessageQueryHelper.messageCountBeforeTarget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MessageQueryHelper.messageCountAfterTarget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t initializeWithCopy for MessageBodyManager(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for MessageBodyManager(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for MessageBodyManager(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageBodyManager(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageBodyManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBodyManager()
{
  return &type metadata for MessageBodyManager;
}

ValueMetadata *type metadata accessor for IMSPIMessageQueryHelper()
{
  return &type metadata for IMSPIMessageQueryHelper;
}

void partial apply for closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(uint64_t a1)
{
  closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(a1, *(void *)(v1 + 16));
}

uint64_t sub_2583DAA28()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MessageRecord], Never>);
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t partial apply for closure #1 in closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MessageRecord], Never>);
  return closure #1 in closure #1 in IMSPIMessageQueryHelper.queryFullBody(messageGuids:)(a1);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

double partial apply for closure #4 in MessageBodyManager.enrichMessagesWithContext(from:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return closure #4 in MessageBodyManager.enrichMessagesWithContext(from:)(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t outlined init with copy of MessageBodyManager(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2583DABA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t partial apply for closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for DynamicOptionsProvider.results() in conformance MediaEntity.Query;
  uint64_t v2 = OUTLINED_FUNCTION_29_17();
  return closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)(v2, v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in closure #5 in MessageBodyManager.enrichMessagesWithContext(from:)(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_2583DACB0()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

unint64_t lazy protocol witness table accessor for type Date and conformance Date()
{
  unint64_t result = lazy protocol witness table cache variable for type Date and conformance Date;
  if (!lazy protocol witness table cache variable for type Date and conformance Date)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Date and conformance Date);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Date and conformance Date;
  if (!lazy protocol witness table cache variable for type Date and conformance Date)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Date and conformance Date);
  }
  return result;
}

uint64_t sub_2583DAD50()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t partial apply for closure #2 in MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  uint64_t v2 = OUTLINED_FUNCTION_29_17();
  return closure #2 in MessageBodyManager.enrichMessageWithAssociatedGuids(mainMessageIds:)(v2, v3, v4, v5, v6);
}

uint64_t destroy for IMMessageRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IMMessageRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IMMessageRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IMMessageRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IMMessageRecord(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMMessageRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *type metadata accessor for IMMessageRecord()
{
  return &unk_2706AC6D8;
}

void OUTLINED_FUNCTION_2_13()
{
  *(void *)(*(void *)(v1 - 240) + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_5_20@<X0>(unint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v2 - 240);
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v1, 1, v4);
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  uint64_t v2 = *(void *)(v0 - 240);
  uint64_t v3 = *(void *)(v2 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v3, 1, v2);
}

uint64_t OUTLINED_FUNCTION_9_17(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  unint64_t v2 = *(void *)(v0 - 328) | 0x8000000000000000;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, v2, (uint64_t *)(v0 - 224));
}

uint64_t OUTLINED_FUNCTION_19_21@<X0>(uint64_t a1@<X8>)
{
  _DWORD *v1 = *(_OWORD *)(a1 - 256);
  unint64_t v4 = *(void *)(v2 - 328) | 0x8000000000000000;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, v4, (uint64_t *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_20_21()
{
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_24_22()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_25_20(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_26_18@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, a1 | 0x8000000000000000, (uint64_t *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_29_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_17(uint64_t a1)
{
  *(void *)(v1 - 232) = a1;
  return v1 - 232;
}

uint64_t OUTLINED_FUNCTION_38_13()
{
  return v0;
}

void *OUTLINED_FUNCTION_39_12()
{
  uint64_t v2 = *(void *)(v0 - 104);
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), v2);
}

BOOL OUTLINED_FUNCTION_40_12(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_41_15()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_42_11@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000031, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

__n128 OUTLINED_FUNCTION_43_15@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(a1 - 256);
  _DWORD *v1 = result.n128_u32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  return 0;
}

void OUTLINED_FUNCTION_48_9(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_49_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_15(uint64_t a1)
{
  *(void *)(v1 - 232) = a1;
  return v1 - 232;
}

uint64_t OUTLINED_FUNCTION_52_12(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return v1 - 176;
}

uint64_t OUTLINED_FUNCTION_55_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57_9()
{
  return v0;
}

uint64_t specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  uint64_t v4 = swift_allocError();
  *uint64_t v5 = a2;
  return MEMORY[0x270FA2410](a1, v4);
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x270FA2408]();
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x270FA2408]();
}

const char *NoteContentManager.targetTypeIdentifier.unsafeMutableAddressor()
{
  return "NoteEntity";
}

uint64_t static NoteContentManager.targetTypeIdentifier.getter()
{
  return OUTLINED_FUNCTION_11_25();
}

const char *NoteContentManager.keyLNPropertyContentsIdentifier.unsafeMutableAddressor()
{
  return "contents";
}

uint64_t static NoteContentManager.keyLNPropertyContentsIdentifier.getter()
{
  return 0x73746E65746E6F63;
}

uint64_t static NoteContentManager.retrieveNotesViaLinkServices(for:)(uint64_t a1)
{
  v1[28] = a1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v1[29] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v1[30] = v3;
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OSSignpostID();
  v1[36] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v1[37] = v5;
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  return MEMORY[0x270FA2498](static NoteContentManager.retrieveNotesViaLinkServices(for:), 0, 0);
}

uint64_t static NoteContentManager.retrieveNotesViaLinkServices(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v140 = v12;
  v139[1] = *MEMORY[0x263EF8340];
  if (one-time initialization token for searchSignposter != -1) {
    goto LABEL_70;
  }
LABEL_2:
  uint64_t v13 = type metadata accessor for OSSignposter();
  v12[45] = __swift_project_value_buffer(v13, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v14, v15, v17, "NoteContentManager.retrieveNotesViaLinkServices", "", v16, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v18 = v12[43];
  uint64_t v19 = v12[44];
  uint64_t v20 = v12[36];
  uint64_t v21 = v12[37];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, v19, v20);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v12[46] = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v12[47] = v22;
  v12[48] = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  os_log_type_t v137 = v22;
  v22(v19, v20);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F520A8]), sel_init);
  uint64_t v24 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000015, 0x800000025867FED0);
  v12[19] = 0;
  id v25 = objc_msgSend(v23, sel_entitiesForBundleIdentifier_error_, v24, v12 + 19);

  uint64_t v26 = (void *)v12[19];
  if (!v25)
  {
    id v50 = v26;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v51 = (void *)OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OUTLINED_FUNCTION_60_0())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v52 = OUTLINED_FUNCTION_15_8();
      if (v53(v52) != *MEMORY[0x263F90238])
      {
        OUTLINED_FUNCTION_2_14();
        v112();
      }
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_186();
      OUTLINED_FUNCTION_23_15(&dword_257DC6000, v113, v114, v115, "NoteContentManager.retrieveNotesViaLinkServices");
      OUTLINED_FUNCTION_34();
    }
    uint64_t v116 = v12[40];
    uint64_t v117 = v12[36];

    v137(v116, v117);
LABEL_66:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16_22();
    __asm { BRAA            X1, X16 }
  }
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for LNEntityMetadata);
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v28 = v26;

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    if (!v29)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      __swift_project_value_buffer(v40, (uint64_t)static Logging.search);
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = OUTLINED_FUNCTION_83_2();
        v139[0] = OUTLINED_FUNCTION_11_22();
        *(_DWORD *)uint64_t v43 = 136315394;
        v12[18] = OUTLINED_FUNCTION_5_21((uint64_t)"er.retrieveNotesViaLinkServices");
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v43 + 12) = 2080;
        uint64_t v44 = OUTLINED_FUNCTION_11_25();
        v12[15] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_49_11(&dword_257DC6000, v41, v42, "%s Unable to create LNMetadataProvider for: %s.");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }

      uint64_t v47 = (void *)OSSignposter.logHandle.getter();
      OSSignpostIntervalState.signpostID.getter();
      static os_signpost_type_t.end.getter();
      if (OUTLINED_FUNCTION_60_0())
      {
        swift_retain();
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v48 = OUTLINED_FUNCTION_15_8();
        if (v49(v48) != *MEMORY[0x263F90238])
        {
          OUTLINED_FUNCTION_2_14();
          v118();
        }
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OSSignpostID.rawValue.getter();
        OUTLINED_FUNCTION_186();
        OUTLINED_FUNCTION_32_1(&dword_257DC6000, v119, v120, v121, "NoteContentManager.retrieveNotesViaLinkServices");
        OUTLINED_FUNCTION_34();
      }

      uint64_t v122 = v12[41];
      OUTLINED_FUNCTION_15_22();
      v123(v122);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16_22();
      __asm { BRAA            X2, X16 }
    }
  }
  else
  {
    uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v29) {
      goto LABEL_18;
    }
  }
  uint64_t v30 = 0;
  while (1)
  {
    if ((v27 & 0xC000000000000001) != 0) {
      id v31 = (id)MEMORY[0x25A2C8550](v30, v27);
    }
    else {
      id v31 = *(id *)(v27 + 8 * v30 + 32);
    }
    char v32 = v31;
    v12[49] = v31;
    uint64_t v33 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
LABEL_70:
      swift_once();
      goto LABEL_2;
    }
    id v34 = objc_msgSend(v31, sel_identifier);
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    if (v35 == 0x69746E4565746F4ELL && v37 == 0xEA00000000007974) {
      break;
    }
    char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_29;
    }

    ++v30;
    if (v33 == v29) {
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
LABEL_29:
  swift_bridgeObjectRelease_n();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for Logger();
  v12[50] = __swift_project_value_buffer(v54, (uint64_t)static Logging.search);
  id v55 = v32;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  unint64_t v136 = v55;
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = OUTLINED_FUNCTION_83_2();
    v139[0] = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v58 = 136315394;
    v12[26] = OUTLINED_FUNCTION_5_21((uint64_t)"er.retrieveNotesViaLinkServices");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v58 + 12) = 2080;
    id v59 = v55;
    id v60 = objc_msgSend(v59, sel_description);
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v63 = v62;

    v12[27] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v63, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_49_11(&dword_257DC6000, v56, v57, "%s Created LNEntityMetadata: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  uint64_t v64 = (SEL *)&unk_265435000;
  uint64_t v65 = v12[28];
  v139[0] = MEMORY[0x263F8EE78];
  uint64_t v66 = *(void *)(v65 + 16);
  if (v66)
  {
    uint64_t v67 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v69 = *(v67 - 1);
      uint64_t v68 = *v67;
      objc_allocWithZone(MEMORY[0x263F51BB8]);
      swift_bridgeObjectRetain();
      uint64_t v70 = OUTLINED_FUNCTION_11_25();
      if (@nonobjc LNEntityIdentifier.init(typeIdentifier:instanceIdentifier:)(v70, v71, v69, v68))
      {
        MEMORY[0x25A2C7E10]();
        if (*(void *)((v139[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v139[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v67 += 2;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease();
    uint64_t v64 = (SEL *)&unk_265435000;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v72 = Logger.logObject.getter();
  os_log_type_t v73 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (_DWORD *)OUTLINED_FUNCTION_83_2();
    v139[0] = OUTLINED_FUNCTION_11_22();
    *uint64_t v74 = 136315394;
    v12[24] = OUTLINED_FUNCTION_5_21((uint64_t)"er.retrieveNotesViaLinkServices");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_18_25();
    uint64_t v75 = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for LNEntityIdentifier);
    uint64_t v76 = swift_bridgeObjectRetain();
    uint64_t v77 = MEMORY[0x25A2C7E60](v76, v75);
    uint64_t v78 = v64;
    unint64_t v80 = v79;
    swift_bridgeObjectRelease();
    v12[25] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v80, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v64 = v78;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_73_5();
    OUTLINED_FUNCTION_49_11(&dword_257DC6000, v72, v73, "%s Created LNEntityIdentifier(s): %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    OUTLINED_FUNCTION_73_5();
  }

  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for LNConfigurableQueryRequest);
  id v81 = objc_allocWithZone(MEMORY[0x263F52118]);
  id v82 = v136;
  id v135 = [v81 v64[98]];
  os_log_type_t v83 = (void *)LNConfigurableQueryRequest.init(query:target:options:)();
  v12[51] = v83;
  id v84 = v83;
  uint64_t v85 = Logger.logObject.getter();
  os_log_type_t v86 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = (_DWORD *)OUTLINED_FUNCTION_83_2();
    v139[0] = OUTLINED_FUNCTION_11_22();
    *uint64_t v87 = 136315394;
    v12[22] = OUTLINED_FUNCTION_5_21((uint64_t)"er.retrieveNotesViaLinkServices");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_18_25();
    id v138 = v82;
    id v88 = v84;
    id v89 = objc_msgSend(v88, sel_description, v135);
    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v91 = v84;
    unint64_t v93 = v92;

    v12[23] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v93, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v84 = v91;
    swift_bridgeObjectRelease();

    id v82 = v138;
    OUTLINED_FUNCTION_49_11(&dword_257DC6000, v85, v86, "%s Created LNConfigurableQueryRequest: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  id v94 = objc_msgSend(self, sel_policyWithEntityMetadata_, v82);
  v12[52] = v94;
  v12[16] = 0;
  id v95 = objc_msgSend(v94, sel_connectionWithError_, v12 + 16);
  v12[53] = v95;
  uint64_t v96 = (void *)v12[16];
  if (!v95)
  {
    id v108 = v96;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v109 = (void *)OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OUTLINED_FUNCTION_60_0())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v110 = OUTLINED_FUNCTION_15_8();
      if (v111(v110) != *MEMORY[0x263F90238])
      {
        OUTLINED_FUNCTION_2_14();
        v126();
      }
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_186();
      OUTLINED_FUNCTION_23_15(&dword_257DC6000, v127, v128, v129, "NoteContentManager.retrieveNotesViaLinkServices");
      OUTLINED_FUNCTION_34();
    }
    uint64_t v130 = v12[39];
    uint64_t v131 = v12[36];

    v137(v130, v131);
    goto LABEL_66;
  }
  id v97 = v95;
  v12[2] = v12;
  v12[7] = v12 + 17;
  v12[3] = static NoteContentManager.retrieveNotesViaLinkServices(for:);
  uint64_t v98 = swift_continuation_init();
  v12[10] = MEMORY[0x263EF8330];
  v12[11] = 0x40000000;
  v12[12] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned LNQueryOutput?, @unowned NSError?) -> () with result type LNQueryOutput;
  v12[13] = &block_descriptor_2;
  v12[14] = v98;
  id v99 = v96;
  objc_msgSend(v97, sel_performConfigurableQuery_completionHandler_, v84, v12 + 10);
  OUTLINED_FUNCTION_16_22();
  return MEMORY[0x270FA23F0](v100, v101, v102, v103, v104, v105, v106, v107, a9, a10, a11, a12);
}

uint64_t static NoteContentManager.retrieveNotesViaLinkServices(for:)()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 432) = v1;
  if (v1) {
    uint64_t v2 = static NoteContentManager.retrieveNotesViaLinkServices(for:);
  }
  else {
    uint64_t v2 = static NoteContentManager.retrieveNotesViaLinkServices(for:);
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  _DWORD *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  os_signpost_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  void (*v19)(void);
  uint8_t *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t (*v24)(id);
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31[2];
  uint64_t v32;
  uint64_t v33;

  char v32 = v0;
  v31[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(id *)(v0 + 136);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  uint64_t v26 = v1;
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v27 = *(void **)(v0 + 424);
    id v28 = *(void **)(v0 + 416);
    uint64_t v29 = *(void **)(v0 + 408);
    uint64_t v30 = *(void **)(v0 + 392);
    uint64_t v4 = (_DWORD *)OUTLINED_FUNCTION_83_2();
    v31[0] = OUTLINED_FUNCTION_11_22();
    *uint64_t v4 = 136315394;
    *(void *)(v0 + 160) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000022, 0x8000000258681C00, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_18_25();
    uint64_t v5 = v1;
    uint64_t v6 = objc_msgSend(v5, sel_description);
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    *(void *)(v0 + 168) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v9, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_49_11(&dword_257DC6000, v2, v3, "%s LNConnection.performConfigurableQuery returned LNQueryOutput: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 416);
    uint64_t v10 = *(void **)(v0 + 424);
    uint64_t v12 = *(void **)(v0 + 408);
  }
  uint64_t v13 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v14 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 232);
    os_signpost_id_t v17 = *(void *)(v0 + 240);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v15, v16) == *MEMORY[0x263F90238])
    {
      uint64_t v18 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_2_14();
      v19();
      uint64_t v18 = "";
    }
    uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v13, v14, v21, "NoteContentManager.retrieveNotesViaLinkServices", v18, v20, 2u);
    OUTLINED_FUNCTION_34();
  }

  uint64_t v22 = *(void *)(v0 + 336);
  OUTLINED_FUNCTION_15_22();
  v23(v22);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(id))(v0 + 8);
  return v24(v26);
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v17;

  uint64_t v1 = (void *)v0[53];
  uint64_t v3 = (void *)v0[51];
  uint64_t v2 = (void *)v0[52];
  uint64_t v4 = (void *)v0[49];
  swift_willThrow();

  uint64_t v5 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v7 = v0[30];
    uint64_t v6 = v0[31];
    uint64_t v8 = v0[29];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v7 + 88))(v6, v8) != *MEMORY[0x263F90238]) {
      (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_32_1(&dword_257DC6000, v9, v10, v11, "NoteContentManager.retrieveNotesViaLinkServices");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[47];
  uint64_t v13 = v0[38];
  uint64_t v14 = v0[36];

  v12(v13, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_type_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned LNQueryOutput?, @unowned NSError?) -> () with result type LNQueryOutput(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3) {
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v3, (uint64_t)a3);
  }
  if (a2)
  {
    id v4 = a2;
    return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v3, (uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static NoteContentManager.parseLNQueryOutput(from:)(void *a1)
{
  uint64_t v1 = (SEL *)&unk_265435000;
  id v2 = objc_msgSend(a1, sel_value);
  id v3 = objc_msgSend(v2, sel_value);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [LNValue]);
  char isUniquelyReferenced_nonNull_native = objc_retain_x10;
  uint64_t v5 = "parseLNQueryOutput(from:)";
  if (!swift_dynamicCast())
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logging.search);
    os_signpost_id_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v97[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      OUTLINED_FUNCTION_6_24((uint64_t)"utput\"8@\"NSError\"16");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v17, v18, "%s Unable to get LNValue(s)", v19, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    return 0;
  }
  unint64_t v6 = v95;
  if (one-time initialization token for search != -1) {
    goto LABEL_73;
  }
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  unint64_t v87 = v6;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = OUTLINED_FUNCTION_83_2();
    v97[0] = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v10 = 136315394;
    OUTLINED_FUNCTION_6_24((uint64_t)(v5 - 32));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v11 = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for LNValue);
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x25A2C7E60](v87, v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = v12;
    unint64_t v6 = v87;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v14, v97);
    uint64_t v1 = (SEL *)&unk_265435000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_73_5();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v8, v9, "%s LNQueryOutput contained [LNValue]: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    OUTLINED_FUNCTION_73_5();
  }
  uint64_t v96 = MEMORY[0x263F8EE80];
  if (!(v6 >> 62))
  {
    uint64_t v21 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v21) {
      goto LABEL_75;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_23();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_13:
    unint64_t v22 = 0;
    unint64_t v91 = v6 & 0xC000000000000001;
    unint64_t v85 = v6 + 32;
    uint64_t v86 = v6 & 0xFFFFFFFFFFFFFF8;
    uint64_t v84 = (uint64_t)(v5 - 32);
    unint64_t v82 = (unint64_t)(v5 - 32) | 0x8000000000000000;
    uint64_t v5 = (const char *)&unk_265435000;
    int v83 = isUniquelyReferenced_nonNull_native[222];
    uint64_t v90 = v21;
    while (1)
    {
      if (v91)
      {
        id v23 = (id)MEMORY[0x25A2C8550](v22, v6);
      }
      else
      {
        if (v22 >= *(void *)(v86 + 16)) {
          goto LABEL_69;
        }
        id v23 = *(id *)(v85 + 8 * v22);
      }
      BOOL v24 = __OFADD__(v22++, 1);
      if (v24)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        swift_once();
        goto LABEL_3;
      }
      unint64_t v93 = v23;
      id v25 = [v23 v1[171]];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for LNEntity);
      if (!swift_dynamicCast())
      {
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          v97[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v39 = v83;
          *(void *)(v39 + 4) = OUTLINED_FUNCTION_6_24(v84);
          _os_log_impl(&dword_257DC6000, v37, v38, "%s Unable to get LNEntity", (uint8_t *)v39, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          uint64_t v21 = v90;
          OUTLINED_FUNCTION_34();
        }

        goto LABEL_65;
      }
      id v92 = (id)v94;
      id v26 = objc_msgSend((id)v94, sel_properties);
      uint64_t v88 = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for LNProperty);
      unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v94 = MEMORY[0x263F8EE78];
      if (v6 >> 62)
      {
        OUTLINED_FUNCTION_24_23();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v27)
        {
LABEL_42:
          swift_bridgeObjectRelease();
          unint64_t v36 = MEMORY[0x263F8EE78];
          if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
            goto LABEL_59;
          }
LABEL_43:
          if ((v36 & 0x4000000000000000) != 0) {
            goto LABEL_59;
          }
          if (*(void *)(v36 + 16)) {
            goto LABEL_45;
          }
LABEL_60:
          swift_release();
LABEL_61:
          id v68 = v92;
          uint64_t v69 = Logger.logObject.getter();
          os_log_type_t v70 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = OUTLINED_FUNCTION_83_2();
            v97[0] = OUTLINED_FUNCTION_11_22();
            *(_DWORD *)uint64_t v71 = 136315394;
            *(void *)(v71 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, v82, v97);
            *(_WORD *)(v71 + 12) = 2080;
            id v72 = objc_msgSend(v68, sel_properties);
            char isUniquelyReferenced_nonNull_native = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v73 = MEMORY[0x25A2C7E60](isUniquelyReferenced_nonNull_native, v88);
            unint64_t v75 = v74;
            swift_bridgeObjectRelease();
            *(void *)(v71 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v75, v97);

            uint64_t v1 = (SEL *)&unk_265435000;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_257DC6000, v69, v70, "%s Not able extract 'contents' as AttributedString from properties: %s", (uint8_t *)v71, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {
          }
          unint64_t v6 = v87;
          uint64_t v21 = v90;
          goto LABEL_65;
        }
      }
      else
      {
        uint64_t v27 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v27) {
          goto LABEL_42;
        }
      }
      if (v27 < 1) {
        goto LABEL_70;
      }
      for (uint64_t i = 0; i != v27; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v29 = (id)MEMORY[0x25A2C8550](i, v6);
        }
        else {
          id v29 = *(id *)(v6 + 8 * i + 32);
        }
        uint64_t v30 = v29;
        char isUniquelyReferenced_nonNull_native = objc_msgSend(v29, sel_identifier);
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;

        if (v31 == 0x73746E65746E6F63 && v33 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
          {

            continue;
          }
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      swift_bridgeObjectRelease();
      unint64_t v36 = v94;
      uint64_t v1 = (SEL *)&unk_265435000;
      if ((v94 & 0x8000000000000000) == 0) {
        goto LABEL_43;
      }
LABEL_59:
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (!v67) {
        goto LABEL_60;
      }
LABEL_45:
      if ((v36 & 0xC000000000000001) != 0)
      {
        id v40 = (id)MEMORY[0x25A2C8550](0, v36);
        goto LABEL_48;
      }
      if (!*(void *)(v36 + 16)) {
        goto LABEL_71;
      }
      id v40 = *(id *)(v36 + 32);
LABEL_48:
      uint64_t v41 = v40;
      swift_release();
      id v42 = [v41 v1[171]];

      if (!v42) {
        goto LABEL_61;
      }
      id v43 = [v42 v1[171]];

      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_61;
      }
      id v44 = objc_msgSend(v92, sel_identifier);
      id v45 = objc_msgSend(v44, sel_instanceIdentifier);

      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v47;

      id v48 = objc_msgSend((id)v94, sel_string);
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v89 = v50;

      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      v97[0] = v96;
      unint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v46, v6);
      uint64_t v53 = *(void *)(v96 + 16);
      BOOL v54 = (v52 & 1) == 0;
      Swift::Int v55 = v53 + v54;
      if (__OFADD__(v53, v54)) {
        goto LABEL_72;
      }
      unint64_t v56 = v51;
      char v57 = v52;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, String>);
      Swift::Bool v58 = _NativeDictionary.ensureUnique(isUnique:capacity:)((Swift::Bool)isUniquelyReferenced_nonNull_native, v55);
      uint64_t v21 = v90;
      if (!v58) {
        goto LABEL_54;
      }
      unint64_t v59 = specialized __RawDictionaryStorage.find<A>(_:)(v46, v6);
      if ((v57 & 1) != (v60 & 1)) {
        goto LABEL_81;
      }
      unint64_t v56 = v59;
LABEL_54:
      uint64_t v61 = (void *)v97[0];
      if (v57)
      {
        unint64_t v62 = (uint64_t *)(*(void *)(v97[0] + 56) + 16 * v56);
        swift_bridgeObjectRelease();
        *unint64_t v62 = v49;
        v62[1] = v89;
        goto LABEL_58;
      }
      *(void *)(v97[0] + 8 * (v56 >> 6) + 64) |= 1 << v56;
      unint64_t v63 = (uint64_t *)(v61[6] + 16 * v56);
      *unint64_t v63 = v46;
      v63[1] = v6;
      uint64_t v64 = (uint64_t *)(v61[7] + 16 * v56);
      *uint64_t v64 = v49;
      v64[1] = v89;
      uint64_t v65 = v61[2];
      BOOL v24 = __OFADD__(v65, 1);
      uint64_t v66 = v65 + 1;
      if (v24)
      {
        __break(1u);
LABEL_81:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      uint64_t v61[2] = v66;
      swift_bridgeObjectRetain();
LABEL_58:
      uint64_t v96 = (uint64_t)v61;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v1 = (SEL *)&unk_265435000;
      unint64_t v6 = v87;
LABEL_65:
      if (v22 == v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = "parseLNQueryOutput(from:)";
        goto LABEL_76;
      }
    }
  }
LABEL_75:
  swift_bridgeObjectRelease();
LABEL_76:
  swift_bridgeObjectRetain_n();
  uint64_t v76 = Logger.logObject.getter();
  os_log_type_t v77 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = OUTLINED_FUNCTION_83_2();
    v97[0] = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v78 = 136315394;
    OUTLINED_FUNCTION_6_24((uint64_t)(v5 - 32));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v78 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v79 = Dictionary.description.getter();
    unint64_t v81 = v80;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v81, v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v76, v77, "%s Returning dict: %s", (uint8_t *)v78, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v96;
}

uint64_t static NoteContentManager.hydrateNoteFullContent(from:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NoteDocument?);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NoteDocument(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v74 = (void *)((char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = (void *)((char *)v65 - v12);
  uint64_t v78 = type metadata accessor for SearchResult(0);
  uint64_t v13 = MEMORY[0x270FA5388](v78);
  uint64_t v84 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v79 = (char *)v65 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v73 = (char *)v65 - v19;
  MEMORY[0x270FA5388](v18);
  id v23 = (char *)v65 - v22;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v76 = v21;
  unint64_t v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = a1 + v25;
  uint64_t v82 = *(void *)(v20 + 72);
  unint64_t v83 = v25;
  v65[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = MEMORY[0x263F8EE78];
  *(void *)&long long v28 = 136315394;
  long long v75 = v28;
  unint64_t v67 = (unint64_t)"parseLNQueryOutput(from:)";
  unint64_t v66 = 0x8000000258681C80;
  v65[2] = MEMORY[0x263F8EE58] + 8;
  unint64_t v80 = v7;
  uint64_t v81 = a2;
  uint64_t v85 = v8;
  os_log_type_t v77 = v23;
  do
  {
    _s10OmniSearch0B6ResultVWOcTm_5();
    SearchResultItem.associatedValue.getter((uint64_t)v88);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
      _s10OmniSearch0B6ResultVWObTm_5();
      id v29 = *(void **)&v23[*(int *)(v78 + 20)];
      id v30 = objc_msgSend(v29, sel_uniqueIdentifier);
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v32;

      if (*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v34 = specialized __RawDictionaryStorage.find<A>(_:)(v31, v33);
        if (v35)
        {
          unint64_t v36 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v34);
          uint64_t v37 = v36[1];
          uint64_t v71 = *v36;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          os_log_type_t v38 = v86;
          uint64_t v39 = v86[1];
          uint64_t v69 = *v86;
          uint64_t v68 = v86[2];
          uint64_t v72 = v27;
          uint64_t v40 = v86[3];
          uint64_t v2 = v86[7];
          uint64_t v70 = v86[6];
          uint64_t v41 = v85;
          id v42 = v74;
          outlined init with copy of Date?((uint64_t)v86 + *(int *)(v85 + 32), (uint64_t)v74 + *(int *)(v85 + 32));
          outlined init with copy of Date?((uint64_t)v38 + *(int *)(v41 + 36), (uint64_t)v42 + *(int *)(v41 + 36));
          *id v42 = v69;
          v42[1] = v39;
          uint64_t v43 = v40;
          uint64_t v27 = v72;
          v42[2] = v68;
          v42[3] = v43;
          v42[4] = v71;
          v42[5] = v37;
          v42[6] = v70;
          v42[7] = v2;
          id v44 = v73;
          _s10OmniSearch0B6ResultVWOcTm_5();
          type metadata accessor for SearchResultItem(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v45 = v78;
          uint64_t v46 = &v44[*(int *)(v78 + 24)];
          *(void *)uint64_t v46 = 0;
          *((void *)v46 + 1) = 0;
          *(void *)&v44[*(int *)(v45 + 20)] = v29;
          swift_bridgeObjectRetain();
          id v47 = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = OUTLINED_FUNCTION_2_12();
          }
          uint64_t v7 = v80;
          a2 = v81;
          OUTLINED_FUNCTION_13_26();
          uint64_t v8 = v85;
          id v23 = v77;
          if (v49) {
            uint64_t v27 = OUTLINED_FUNCTION_1_18(v48);
          }
          OUTLINED_FUNCTION_12_26();
          _s10OmniSearch0B6ResultVWObTm_5();
          _s10OmniSearch0B6ResultVWOhTm_2((uint64_t)v74, (void (*)(void))type metadata accessor for NoteDocument);
          uint64_t v50 = (uint64_t)v86;
LABEL_32:
          _s10OmniSearch0B6ResultVWOhTm_2(v50, (void (*)(void))type metadata accessor for NoteDocument);
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
      }
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v59 = type metadata accessor for Logger();
      __swift_project_value_buffer(v59, (uint64_t)static Logging.search);
      swift_bridgeObjectRetain();
      char v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.error.getter();
      uint64_t v2 = v61;
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = OUTLINED_FUNCTION_83_2();
        v88[0] = OUTLINED_FUNCTION_11_22();
        *(_DWORD *)uint64_t v62 = v75;
        *(void *)(v62 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000022, v66, v88);
        *(_WORD *)(v62 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v62 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, v88);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_257DC6000, v60, (os_log_type_t)v2, "%s Did not find %s in dict. It's OK, will just preserve existing note", (uint8_t *)v62, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        a2 = v81;
        OUTLINED_FUNCTION_34();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v7 = v80;
      uint64_t v8 = v85;
      _s10OmniSearch0B6ResultVWOcTm_5();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = OUTLINED_FUNCTION_2_12();
      }
      OUTLINED_FUNCTION_13_26();
      if (v49) {
        uint64_t v27 = OUTLINED_FUNCTION_1_18(v63);
      }
      OUTLINED_FUNCTION_12_26();
      _s10OmniSearch0B6ResultVWObTm_5();
      uint64_t v50 = (uint64_t)v86;
      goto LABEL_32;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
    outlined destroy of NoteDocument?((uint64_t)v7);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    __swift_project_value_buffer(v51, (uint64_t)static Logging.search);
    uint64_t v52 = v76;
    _s10OmniSearch0B6ResultVWOcTm_5();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = OUTLINED_FUNCTION_83_2();
      uint64_t v2 = OUTLINED_FUNCTION_11_22();
      uint64_t v87 = v2;
      *(_DWORD *)uint64_t v55 = v75;
      *(void *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000022, v67 | 0x8000000000000000, &v87);
      *(_WORD *)(v55 + 12) = 2080;
      SearchResultItem.associatedValue.getter((uint64_t)v88);
      uint64_t v56 = String.init<A>(describing:)();
      *(void *)(v55 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, &v87);
      swift_bridgeObjectRelease();
      _s10OmniSearch0B6ResultVWOhTm_2(v52, (void (*)(void))type metadata accessor for SearchResult);
      _os_log_impl(&dword_257DC6000, v53, v54, "%s Expected item to be of type NoteDocument, but got -> %s. It's OK, will just preserve existing note", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      uint64_t v7 = v80;
      OUTLINED_FUNCTION_34();
    }
    else
    {
      _s10OmniSearch0B6ResultVWOhTm_2(v52, (void (*)(void))type metadata accessor for SearchResult);
    }

    a2 = v81;
    uint64_t v8 = v85;
    id v23 = v77;
    _s10OmniSearch0B6ResultVWOcTm_5();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v27 = OUTLINED_FUNCTION_2_12();
    }
    OUTLINED_FUNCTION_13_26();
    if (v49) {
      uint64_t v27 = OUTLINED_FUNCTION_1_18(v58);
    }
    OUTLINED_FUNCTION_12_26();
    _s10OmniSearch0B6ResultVWObTm_5();
LABEL_33:
    _s10OmniSearch0B6ResultVWOhTm_2((uint64_t)v23, (void (*)(void))type metadata accessor for SearchResult);
    v26 += v2;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  return v27;
}

id @nonobjc LNEntityIdentifier.init(typeIdentifier:instanceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)MEMORY[0x25A2C7AB0](a3, a4);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v4, sel_initWithTypeIdentifier_instanceIdentifier_, v7, v8);

  return v9;
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t outlined destroy of NoteDocument?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NoteDocument?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s10OmniSearch0B6ResultVWObTm_5()
{
  uint64_t v2 = OUTLINED_FUNCTION_26_19();
  v3(v2);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t _s10OmniSearch0B6ResultVWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t _s10OmniSearch0B6ResultVWOcTm_5()
{
  uint64_t v2 = OUTLINED_FUNCTION_26_19();
  v3(v2);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

ValueMetadata *type metadata accessor for NoteContentManager()
{
  return &type metadata for NoteContentManager;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, char a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a5[6] + a1) = a2 & 1;
  uint64_t v5 = a5[7] + 16 * a1;
  *(void *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 8) = a4 & 1;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_21_20((uint64_t)a5, v8);
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_3_30(a1, a2, a3, a4, a5);
  if (v7) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_21_20(v5, v6);
  }
}

unint64_t OUTLINED_FUNCTION_3_30(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(*(void *)(a5 + 56) + 8 * result) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_21@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000022, a1 | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_6_24@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, a1 | 0x8000000000000000, (uint64_t *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_11_25()
{
  return 0x69746E4565746F4ELL;
}

void OUTLINED_FUNCTION_12_26()
{
  *(void *)(v1 + 16) = v0;
}

void OUTLINED_FUNCTION_18_25()
{
  *(_WORD *)(v0 + 12) = 2080;
}

void OUTLINED_FUNCTION_21_20(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

void OUTLINED_FUNCTION_23_15(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t OUTLINED_FUNCTION_24_23()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_19()
{
  return 0;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySsG_SSs5NeverOTg5012_sSsSSIeggo_f4SSs5D153OIegnrzr_TR129_s10OmniSearch14ResultHydratorC32fetchFullContentForPhotosResults33_4DC86B6DF70367122DAA7E88D902EF60LLySayAA0bC0VGAHYaKFSSSshcfu_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v15;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x25A2C7B70](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v15 + 16);
      if (v12 >= *(void *)(v15 + 24) >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      *(void *)(v15 + 16) = v12 + 1;
      uint64_t v13 = v15 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySi6offset_10OmniSearch0H6ResultV7elementtGSayAKGG_SiAH_AkLts5NeverOTg506_sSi10g9Search0B6i51VACSiACIgynndr_Si6offset_AC7elementt_ACtSiAD_AcEts5k83OIegnrzr_TR04_s10a8Search14c92HydratorC16fetchFullContent3forSayAA0bC0VGAH_tYaKFSayr21_AG7elementtGScgyAKs5c37_pGzq10KXEfU0_AKyq8KcfU_AKyq32YbKcfU_u7AI_AgJtU27AI_AgJt_AGtXEfZ1_Tf3nnnpf_nTf1cn_n(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v83 = *(void *)(v80 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v80);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v87 = (uint64_t *)((char *)&v68 - v8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v79 = (uint64_t *)((char *)&v68 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v78 = (uint64_t *)((char *)&v68 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v71 = (uint64_t *)((char *)&v68 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v72 = (uint64_t)&v68 - v15;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ((offset: Int, element: SearchResult), SearchResult));
  uint64_t v16 = MEMORY[0x270FA5388](v77);
  unint64_t v74 = (uint64_t *)((char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v70 = (uint64_t)&v68 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v69 = (uint64_t *)((char *)&v68 - v20);
  unint64_t v21 = *(void *)(a1 + 16);
  unint64_t v22 = *(void *)(a2 + 16);
  if (v22 >= v21) {
    unint64_t v23 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v23 = *(void *)(a2 + 16);
  }
  uint64_t v88 = MEMORY[0x263F8EE78];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v81 = a2;
  uint64_t v82 = a1;
  unint64_t v75 = v22;
  unint64_t v76 = v21;
  if (v23)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    uint64_t v84 = v23;
    uint64_t v73 = v6;
    while (v21 != v25)
    {
      unint64_t v26 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      uint64_t v27 = *(void *)(v83 + 72);
      uint64_t result = outlined init with copy of SearchResultItem?(a1 + v26 + v27 * v25, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      if (v22 == v25) {
        goto LABEL_28;
      }
      uint64_t v85 = v27;
      unint64_t v86 = v26;
      uint64_t v28 = *(void *)(type metadata accessor for SearchResult(0) - 8);
      uint64_t v29 = a2
          + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))
          + *(void *)(v28 + 72) * v25;
      id v30 = v74;
      uint64_t v31 = (uint64_t)v74 + *(int *)(v77 + 48);
      outlined init with take of SearchResultItem?((uint64_t)v6, (uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      _s10OmniSearch0B6ResultVWOcTm_6(v29, v31, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v32 = *v30;
      uint64_t v33 = v80;
      uint64_t v34 = *(int *)(v80 + 48);
      char v35 = v87;
      uint64_t v36 = (uint64_t)v87 + v34;
      uint64_t v37 = v78;
      uint64_t v38 = (uint64_t)v78 + v34;
      *uint64_t v78 = *v30;
      _s10OmniSearch0B6ResultVWOcTm_6((uint64_t)v30 + v34, (uint64_t)v37 + v34, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v39 = *(int *)(v33 + 48);
      uint64_t v40 = v79;
      uint64_t v41 = (uint64_t)v79 + v39;
      *uint64_t v79 = v32;
      _s10OmniSearch0B6ResultVWObTm_6(v38, (uint64_t)v40 + v39, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOcTm_6(v31, v36, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOhTm_3(v41, (void (*)(void))type metadata accessor for SearchResult);
      *char v35 = v32;
      outlined destroy of SearchResult?((uint64_t)v30, &demangling cache variable for type metadata for ((offset: Int, element: SearchResult), SearchResult));
      uint64_t v42 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v42 = v88;
      }
      unint64_t v43 = *(void *)(v42 + 16);
      a1 = v82;
      unint64_t v22 = v75;
      uint64_t v6 = v73;
      if (v43 >= *(void *)(v42 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v42 = v88;
      }
      ++v25;
      *(void *)(v42 + 16) = v43 + 1;
      uint64_t result = outlined init with take of SearchResultItem?((uint64_t)v87, v42 + v86 + v43 * v85, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      unint64_t v23 = v84;
      a2 = v81;
      unint64_t v21 = v76;
      if (v84 == v25) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_15:
    if (v21 <= v22)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v88;
    }
    while (v23 < v21)
    {
      unint64_t v44 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      uint64_t v45 = *(void *)(v83 + 72);
      uint64_t result = outlined init with copy of SearchResultItem?(a1 + v44 + v45 * v23, v72, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      if (v22 == v23)
      {
        outlined destroy of SearchResult?(v72, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
        goto LABEL_26;
      }
      if (v23 >= v22) {
        goto LABEL_30;
      }
      uint64_t v87 = (void *)v44;
      uint64_t v46 = *(void *)(type metadata accessor for SearchResult(0) - 8);
      uint64_t v47 = a2 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      uint64_t v48 = *(void *)(v46 + 72);
      uint64_t v84 = v23;
      uint64_t v49 = v47 + v48 * v23;
      uint64_t v50 = v77;
      uint64_t v51 = v70;
      uint64_t v52 = v70 + *(int *)(v77 + 48);
      outlined init with take of SearchResultItem?(v72, v70, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      _s10OmniSearch0B6ResultVWOcTm_6(v49, v52, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v53 = v69;
      outlined init with take of SearchResultItem?(v51, (uint64_t)v69, &demangling cache variable for type metadata for ((offset: Int, element: SearchResult), SearchResult));
      uint64_t v54 = *v53;
      uint64_t v55 = v80;
      uint64_t v56 = *(int *)(v80 + 48);
      uint64_t v57 = (uint64_t)v53 + *(int *)(v50 + 48);
      unint64_t v58 = v71;
      uint64_t v59 = (uint64_t)v71 + v56;
      char v60 = v78;
      uint64_t v61 = (uint64_t)v78 + v56;
      *uint64_t v78 = *v53;
      _s10OmniSearch0B6ResultVWOcTm_6((uint64_t)v53 + v56, (uint64_t)v60 + v56, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v62 = *(int *)(v55 + 48);
      unint64_t v63 = v79;
      uint64_t v64 = (uint64_t)v79 + v62;
      *uint64_t v79 = v54;
      _s10OmniSearch0B6ResultVWObTm_6(v61, (uint64_t)v63 + v62, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOcTm_6(v57, v59, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOhTm_3(v64, (void (*)(void))type metadata accessor for SearchResult);
      *unint64_t v58 = v54;
      outlined destroy of SearchResult?((uint64_t)v53, &demangling cache variable for type metadata for ((offset: Int, element: SearchResult), SearchResult));
      uint64_t v65 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v65 = v88;
      }
      unint64_t v22 = v75;
      unint64_t v21 = v76;
      unint64_t v66 = *(void *)(v65 + 16);
      a2 = v81;
      uint64_t v67 = v84;
      if (v66 >= *(void *)(v65 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v65 = v88;
      }
      unint64_t v23 = v67 + 1;
      *(void *)(v65 + 16) = v66 + 1;
      uint64_t result = outlined init with take of SearchResultItem?((uint64_t)v71, (uint64_t)v87 + v65 + v66 * v45, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      a1 = v82;
      if (v21 == v23) {
        goto LABEL_26;
      }
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t ResultHydrator.hydratedResultLimit.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ResultHydrator.emailContentManager.getter()
{
  return swift_retain();
}

uint64_t ResultHydrator.contactContentManager.getter()
{
  return swift_retain();
}

uint64_t key path setter for ResultHydrator.messageBodyManager : ResultHydrator(uint64_t a1, uint64_t a2)
{
  outlined init with copy of MessageBodyManager(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 144))(v4);
}

uint64_t ResultHydrator.messageBodyManager.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = outlined init with copy of SearchResultItem?(v1 + 40, (uint64_t)&v5, &demangling cache variable for type metadata for MessageBodyManager?);
  if (*((void *)&v6 + 1))
  {
    long long v4 = v6;
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v4;
    *(void *)(a1 + 32) = v7;
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)&v5, &demangling cache variable for type metadata for MessageBodyManager?);
    *(void *)(a1 + 24) = &type metadata for IMSPIMessageQueryHelper;
    *(void *)(a1 + 32) = &protocol witness table for IMSPIMessageQueryHelper;
    outlined init with copy of MessageBodyManager(a1, (uint64_t)&v5);
    OUTLINED_FUNCTION_112_5();
    outlined assign with take of SearchResultItem?((uint64_t)&v5, v1 + 40, &demangling cache variable for type metadata for MessageBodyManager?);
    return swift_endAccess();
  }
  return result;
}

uint64_t ResultHydrator.messageBodyManager.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  uint64_t v5 = *(void *)(a1 + 32);
  OUTLINED_FUNCTION_112_5();
  outlined assign with take of SearchResultItem?((uint64_t)v4, v1 + 40, &demangling cache variable for type metadata for MessageBodyManager?);
  return swift_endAccess();
}

void (*ResultHydrator.messageBodyManager.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  ResultHydrator.messageBodyManager.getter((uint64_t)v3);
  return ResultHydrator.messageBodyManager.modify;
}

void ResultHydrator.messageBodyManager.modify(uint64_t *a1, char a2)
{
  long long v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_56_1();
    outlined init with copy of MessageBodyManager(v3, v4);
    ResultHydrator.messageBodyManager.setter((uint64_t)v2 + 40);
    outlined destroy of MessageBodyManager((uint64_t)v2);
  }
  else
  {
    ResultHydrator.messageBodyManager.setter(*a1);
  }
  free(v2);
}

uint64_t outlined destroy of MessageBodyManager(uint64_t a1)
{
  return a1;
}

uint64_t ResultHydrator.featureFlagService.getter()
{
  return swift_retain();
}

uint64_t ResultHydrator.itemFetcher.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of CustomStringConvertible(v1 + 88, a1);
}

uint64_t ResultHydrator.__allocating_init()()
{
  uint64_t v1 = v0;
  type metadata accessor for EmailContentManager();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B160]), sel_init);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  type metadata accessor for ContactContentManager();
  uint64_t v4 = (void *)swift_allocObject();
  v4[5] = type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for CNContactStore);
  v4[6] = &protocol witness table for CNContactStore;
  _OWORD v4[2] = v3;
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  uint64_t v5 = static NSUserDefaults.answerSynthesisLimit.getter();
  type metadata accessor for FeatureFlagService();
  uint64_t v6 = swift_allocObject();
  v8[3] = type metadata accessor for ItemFetcher();
  v8[4] = &protocol witness table for ItemFetcher;
  v8[0] = swift_allocObject();
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v1 + 160))(v2, v4, v5, v6, v8);
}

uint64_t ResultHydrator.__allocating_init(emailContentManager:contactContentManager:hydratedResultLimit:featureFlagService:itemFetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = OUTLINED_FUNCTION_98_7();
  ResultHydrator.init(emailContentManager:contactContentManager:hydratedResultLimit:featureFlagService:itemFetcher:)(v9, v10, a3, a4, a5);
  return v8;
}

uint64_t ResultHydrator.init(emailContentManager:contactContentManager:hydratedResultLimit:featureFlagService:itemFetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  *(void *)(v5 + 128) = 0;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 80) = a4;
  outlined init with take of SageSearchClient(a5, v5 + 88);
  return v5;
}

uint64_t key path setter for ResultHydrator.hydrationFunctions : ResultHydrator(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 176);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ResultHydrator.hydrationFunctions.getter()
{
  if (*(void *)(v0 + 128))
  {
    uint64_t v1 = *(void *)(v0 + 128);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(SearchResultKey, (_:))>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258662FE0;
    uint64_t v3 = OUTLINED_FUNCTION_141();
    *(void *)(v3 + 16) = &async function pointer to partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v3 + 24) = v0;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error);
    *(void *)(inited + 48) = v3;
    uint64_t v4 = OUTLINED_FUNCTION_141();
    *(void *)(v4 + 16) = &async function pointer to partial apply for implicit closure #4 in implicit closure #3 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v4 + 24) = v0;
    *(unsigned char *)(inited + 56) = 3;
    *(void *)(inited + 64) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 72) = v4;
    uint64_t v5 = OUTLINED_FUNCTION_141();
    *(void *)(v5 + 16) = &async function pointer to partial apply for implicit closure #6 in implicit closure #5 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v5 + 24) = v0;
    *(unsigned char *)(inited + 80) = 1;
    *(void *)(inited + 88) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 96) = v5;
    uint64_t v6 = OUTLINED_FUNCTION_141();
    *(void *)(v6 + 16) = &async function pointer to partial apply for implicit closure #8 in implicit closure #7 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v6 + 24) = v0;
    *(unsigned char *)(inited + 104) = 5;
    *(void *)(inited + 112) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 120) = v6;
    uint64_t v7 = OUTLINED_FUNCTION_141();
    *(void *)(v7 + 16) = &async function pointer to partial apply for implicit closure #10 in implicit closure #9 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v7 + 24) = v0;
    *(unsigned char *)(inited + 128) = 15;
    *(void *)(inited + 136) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 144) = v7;
    uint64_t v8 = OUTLINED_FUNCTION_141();
    *(void *)(v8 + 16) = &async function pointer to partial apply for implicit closure #12 in implicit closure #11 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v8 + 24) = v0;
    *(unsigned char *)(inited + 152) = 12;
    *(void *)(inited + 160) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 168) = v8;
    uint64_t v9 = OUTLINED_FUNCTION_141();
    *(void *)(v9 + 16) = &async function pointer to partial apply for implicit closure #14 in implicit closure #13 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v9 + 24) = v0;
    *(unsigned char *)(inited + 176) = 17;
    *(void *)(inited + 184) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 192) = v9;
    uint64_t v10 = OUTLINED_FUNCTION_141();
    *(void *)(v10 + 16) = &async function pointer to partial apply for implicit closure #16 in implicit closure #15 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v10 + 24) = v0;
    *(unsigned char *)(inited + 200) = 16;
    *(void *)(inited + 208) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 216) = v10;
    uint64_t v11 = OUTLINED_FUNCTION_141();
    *(void *)(v11 + 16) = &async function pointer to partial apply for implicit closure #18 in implicit closure #17 in ResultHydrator.hydrationFunctions.getter;
    *(void *)(v11 + 24) = v0;
    *(unsigned char *)(inited + 224) = 18;
    *(void *)(inited + 232) = &thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)partial apply;
    *(void *)(inited + 240) = v11;
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:));
    lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey();
    uint64_t v1 = Dictionary.init(dictionaryLiteral:)();
    *(void *)(v0 + 128) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForMailResults(_:)();
}

uint64_t thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error);
  return v7(v4);
}

uint64_t thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t implicit closure #4 in implicit closure #3 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForPhotosResults(_:)();
}

uint64_t implicit closure #6 in implicit closure #5 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForMessagesResults(_:)();
}

uint64_t implicit closure #8 in implicit closure #7 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForNotesResults(_:)();
}

uint64_t implicit closure #10 in implicit closure #9 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForContactsResults(_:)();
}

uint64_t implicit closure #12 in implicit closure #11 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForFileResults(_:)();
}

uint64_t implicit closure #14 in implicit closure #13 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for AnswerResolvable.extractInfo(query:results:assistantLocale:) in conformance AnswerResolver;
  return ResultHydrator.fetchFullContentForEventsResults(_:)();
}

uint64_t implicit closure #16 in implicit closure #15 in ResultHydrator.hydrationFunctions.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return ResultHydrator.fetchFullContentForEventsResults(_:)();
}

uint64_t ResultHydrator.hydrationFunctions.setter(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ResultHydrator.hydrationFunctions.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = ResultHydrator.hydrationFunctions.getter();
  return ResultHydrator.hydrationFunctions.modify;
}

uint64_t ResultHydrator.hydrationFunctions.modify(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return ResultHydrator.hydrationFunctions.setter(*a1);
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  ResultHydrator.hydrationFunctions.setter(v2);
  return swift_bridgeObjectRelease();
}

uint64_t ResultHydrator.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_27();
  v1[16] = v2;
  v1[17] = v0;
  v1[18] = *v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  v1[19] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[20] = v4;
  v1[21] = OUTLINED_FUNCTION_50_0();
  v1[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v5);
  v1[23] = v6;
  v1[24] = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = type metadata accessor for OSSignpostError();
  v1[25] = v7;
  OUTLINED_FUNCTION_12_0(v7);
  v1[26] = v8;
  v1[27] = OUTLINED_FUNCTION_50_0();
  v1[28] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OSSignpostID();
  v1[29] = v9;
  OUTLINED_FUNCTION_12_0(v9);
  v1[30] = v10;
  v1[31] = OUTLINED_FUNCTION_50_0();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  _WORD *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  BOOL v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v32;

  OUTLINED_FUNCTION_29_7();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[35] = OUTLINED_FUNCTION_59_10(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = (void *)OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_9(v3);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_39_13(&dword_257DC6000, v4, v5, v6, "ResultHydrator.fetchFullContent", "");
    OUTLINED_FUNCTION_34();
  }

  uint64_t v7 = OUTLINED_FUNCTION_8_11();
  v8(v7);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v0[36] = OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_84_6();
  v0[37] = v9;
  v0[38] = v10;
  uint64_t v11 = OUTLINED_FUNCTION_74_8();
  v12(v11);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logging.search);
  swift_retain();
  uint64_t v14 = (void *)Logger.logObject.getter();
  uint64_t v15 = static os_log_type_t.debug.getter();
  uint64_t v16 = OUTLINED_FUNCTION_24_2(v15);
  uint64_t v17 = v0[17];
  if (v16)
  {
    *(_DWORD *)OUTLINED_FUNCTION_14_1() = 134217984;
    v0[15] = *(void *)(v17 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    OUTLINED_FUNCTION_113_7();
    OUTLINED_FUNCTION_105_8(v18, v19, v20, v21);
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_release();
  }

  unint64_t v22 = v0[17];
  unint64_t v23 = v0[18];
  OUTLINED_FUNCTION_209();
  (*(void (**)(void *))(v24 + 200))(v0 + 2);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  OUTLINED_FUNCTION_0_10();
  unint64_t v26 = v25;
  OUTLINED_FUNCTION_49_1();
  (*(void (**)(void))(v26 + 16))();
  lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey();
  uint64_t v27 = Dictionary.init<A>(grouping:by:)();
  v0[39] = v27;
  swift_task_dealloc();
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
  v0[40] = v28;
  uint64_t v29 = (void *)swift_task_alloc();
  v0[41] = v29;
  v29[2] = v22;
  v29[3] = v27;
  v29[4] = v23;
  id v30 = (void *)swift_task_alloc();
  v0[42] = v30;
  *id v30 = v0;
  v30[1] = ResultHydrator.fetchFullContent(for:);
  return MEMORY[0x270FA22B8](v0 + 12, v28, v28, 0, 0, &async function pointer to partial apply for closure #2 in ResultHydrator.fetchFullContent(for:), v29, v28);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 344) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  *(void *)(v6 + 368) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_61();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  uint64_t v27 = v24[43];
  uint64_t v28 = v24[12];
  __swift_project_boxed_opaque_existential_1(v24 + 7, v24[10]);
  v24[14] = v28;
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [(offset: Int, element: SearchResult)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
  static RangeReplaceableCollection.+ infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  a12 = v24[13];
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&a12);
  if (v27)
  {
    OUTLINED_FUNCTION_36_1();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = a12;
    uint64_t v32 = *(void *)(a12 + 16);
    if (v32)
    {
      uint64_t v33 = v24[23];
      uint64_t v34 = v24[20];
      uint64_t v49 = v24[19];
      a12 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      OUTLINED_FUNCTION_137();
      uint64_t v36 = v31 + v35;
      uint64_t v37 = *(void *)(v34 + 72);
      uint64_t v38 = a12;
      do
      {
        uint64_t v39 = v24[24];
        uint64_t v41 = v24[21];
        uint64_t v40 = v24[22];
        outlined init with copy of SearchResultItem?(v36, v40, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
        uint64_t v42 = *(int *)(v49 + 48);
        uint64_t v43 = v41 + v42;
        _s10OmniSearch0B6ResultVWOcTm_6(v40 + v42, v43, (void (*)(void))type metadata accessor for SearchResult);
        _s10OmniSearch0B6ResultVWObTm_6(v43, v39, (void (*)(void))type metadata accessor for SearchResult);
        outlined destroy of SearchResult?(v40, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = a12;
        }
        unint64_t v44 = *(void *)(v38 + 16);
        if (v44 >= *(void *)(v38 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = a12;
        }
        *(void *)(v38 + 16) = v44 + 1;
        OUTLINED_FUNCTION_137();
        _s10OmniSearch0B6ResultVWObTm_6(v46, v38 + v45 + *(void *)(v33 + 72) * v44, (void (*)(void))type metadata accessor for SearchResult);
        v36 += v37;
        --v32;
      }
      while (v32);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v38 = MEMORY[0x263F8EE78];
    }
    v24[44] = v38;
    uint64_t v47 = (void *)swift_task_alloc();
    v24[45] = v47;
    *uint64_t v47 = v24;
    v47[1] = ResultHydrator.fetchFullContent(for:);
    OUTLINED_FUNCTION_36_1();
    return static EventManager.hydrateWithEvents(for:)();
  }
}

uint64_t ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_61();
  uint64_t v38 = ResultHydrator.runDataDetectorsOnResults(_:)(v16[46]);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v16 + 7));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v16 + 2));
  uint64_t v17 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_50_16();
    if (v18() != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v19();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_20_20(&dword_257DC6000, v17, v20, v21, "ResultHydrator.fetchFullContent");
    OUTLINED_FUNCTION_34();
  }
  unint64_t v22 = (void (*)(uint64_t, uint64_t))v16[37];
  uint64_t v23 = v16[32];
  uint64_t v24 = v16[29];
  uint64_t v34 = v16[27];
  uint64_t v35 = v16[24];
  uint64_t v36 = v16[22];
  uint64_t v37 = v16[21];

  v22(v23, v24);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_36_1();
  return v27(v25, v26, v27, v28, v29, v30, v31, v32, v34, v35, v36, v37, v38, a14, a15, a16);
}

{
  void *v16;
  NSObject *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t);
  void (*v20)(void);
  _WORD *v21;
  os_signpost_type_t v22;
  os_signpost_id_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_61();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v16 + 7));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v16 + 2));
  uint64_t v17 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v18 = OUTLINED_FUNCTION_130();
    if (v19(v18) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v20();
    }
    os_signpost_id_t v21 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v21);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v17, v22, v23, "ResultHydrator.fetchFullContent");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v24 = (void (*)(uint64_t))v16[37];
  uint64_t v35 = v16[27];
  uint64_t v36 = v16[24];
  uint64_t v37 = v16[22];
  uint64_t v38 = v16[21];

  uint64_t v25 = OUTLINED_FUNCTION_92_0();
  v24(v25);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_36_1();
  return v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, v35, v36, v37, v38, a14, a15, a16);
}

uint64_t closure #1 in ResultHydrator.fetchFullContent(for:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(int *)(v5 + 56);
  uint64_t v9 = (uint64_t)v7 + v8;
  *uint64_t v7 = *a1;
  _s10OmniSearch0B6ResultVWOcTm_6((uint64_t)a1 + v8, (uint64_t)v7 + v8, (void (*)(void))type metadata accessor for SearchResult);
  SearchResultItem.type.getter(a2);
  return _s10OmniSearch0B6ResultVWOhTm_3(v9, (void (*)(void))type metadata accessor for SearchResult);
}

uint64_t closure #2 in ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ThrowingTaskGroup<[(offset: Int, element: SearchResult)], Error>.Iterator);
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in ResultHydrator.fetchFullContent(for:), 0, 0);
}

uint64_t closure #2 in ResultHydrator.fetchFullContent(for:)()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  OUTLINED_FUNCTION_209();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 168))();
  int64_t v4 = 0;
  uint64_t v46 = v3 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v3 + 64);
  int64_t v47 = (unint64_t)(63 - v6) >> 6;
  uint64_t v48 = v3;
  uint64_t v45 = v1;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_44:
      __break(1u);
      return MEMORY[0x270FA1E80](v3);
    }
    if (v10 >= v47) {
      goto LABEL_40;
    }
    unint64_t v11 = *(void *)(v46 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v47) {
        goto LABEL_40;
      }
      unint64_t v11 = *(void *)(v46 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v47) {
          goto LABEL_40;
        }
        unint64_t v11 = *(void *)(v46 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_20:
    uint64_t v13 = *(void *)(v48 + 56);
    char v14 = *(unsigned char *)(*(void *)(v48 + 48) + v9);
    uint64_t v15 = OUTLINED_FUNCTION_141();
    *(_OWORD *)(v15 + 16) = *(_OWORD *)(v13 + 16 * v9);
    uint64_t v16 = *(void *)(v1 + 16);
    swift_retain();
    if (v16)
    {
      unint64_t v17 = specialized __RawDictionaryStorage.find<A>(_:)(v14);
      uint64_t v18 = MEMORY[0x263F8EE78];
      if (v19)
      {
        uint64_t v18 = *(void *)(*(void *)(v1 + 56) + 8 * v17);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    if (*(void *)(v18 + 16))
    {
      unint64_t v49 = v7;
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      OUTLINED_FUNCTION_59_10(v20, (uint64_t)static Logging.search);
      swift_bridgeObjectRetain_n();
      os_signpost_id_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.info.getter();
      int64_t v50 = v4;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315907;
        *(void *)(v23 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016, 0x8000000258681F90, &v51);
        *(_WORD *)(v23 + 12) = 2048;
        *(void *)(v23 + 14) = *(void *)(v18 + 16);
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2080;
        *(unsigned char *)(v0 + 184) = v14;
        lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey();
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v23 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v51);
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 32) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
        uint64_t v27 = MEMORY[0x25A2C7E60](v18, v26);
        unint64_t v29 = v28;
        swift_bridgeObjectRelease();
        *(void *)(v23 + 34) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v51);
        OUTLINED_FUNCTION_51_13();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_257DC6000, v21, v22, "%s calling hydrator for %ld %s result(s): %{sensitive}s", (uint8_t *)v23, 0x2Au);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v31 = *(void *)(v0 + 120);
      uint64_t v30 = *(void *)(v0 + 128);
      uint64_t v32 = *(void *)(v0 + 112);
      uint64_t v33 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v30, 1, 1, v33);
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = 0;
      *(void *)(v34 + 24) = 0;
      *(void *)(v34 + 32) = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @async (@in_guaranteed [SearchResult]) -> (@out [SearchResult], @error @owned Error);
      *(void *)(v34 + 40) = v15;
      *(void *)(v34 + 48) = v18;
      *(unsigned char *)(v34 + 56) = v14;
      *(void *)(v34 + 64) = v32;
      outlined init with copy of SearchResultItem?(v30, v31, &demangling cache variable for type metadata for TaskPriority?);
      if (__swift_getEnumTagSinglePayload(v31, 1, v33) == 1)
      {
        outlined destroy of SearchResult?(*(void *)(v0 + 120), &demangling cache variable for type metadata for TaskPriority?);
      }
      else
      {
        TaskPriority.rawValue.getter();
        uint64_t v35 = OUTLINED_FUNCTION_19_0();
        v36(v35);
      }
      if (*(void *)(v34 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v37 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v39 = v38;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v37 = 0;
        uint64_t v39 = 0;
      }
      uint64_t v1 = v45;
      uint64_t v40 = **(void **)(v0 + 88);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
      uint64_t v41 = v39 | v37;
      if (v39 | v37)
      {
        uint64_t v41 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v37;
        *(void *)(v0 + 40) = v39;
      }
      uint64_t v42 = *(void *)(v0 + 128);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v41;
      *(void *)(v0 + 64) = v40;
      swift_task_create();
      swift_release();
      uint64_t v3 = outlined destroy of SearchResult?(v42, &demangling cache variable for type metadata for TaskPriority?);
      int64_t v4 = v50;
      unint64_t v7 = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = swift_release();
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 < v47)
  {
    unint64_t v11 = *(void *)(v46 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v4 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_44;
        }
        if (v4 >= v47) {
          goto LABEL_40;
        }
        unint64_t v11 = *(void *)(v46 + 8 * v4);
        ++v12;
        if (v11) {
          goto LABEL_19;
        }
      }
    }
    int64_t v4 = v12;
    goto LABEL_19;
  }
LABEL_40:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  ThrowingTaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 160) = MEMORY[0x263F8EE78];
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ThrowingTaskGroup<[(offset: Int, element: SearchResult)], Error>.Iterator and conformance ThrowingTaskGroup<A, B>.Iterator, &demangling cache variable for type metadata for ThrowingTaskGroup<[(offset: Int, element: SearchResult)], Error>.Iterator);
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v43;
  *uint64_t v43 = v0;
  v43[1] = closure #2 in ResultHydrator.fetchFullContent(for:);
  uint64_t v3 = OUTLINED_FUNCTION_88_7();
  return MEMORY[0x270FA1E80](v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *int64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = OUTLINED_FUNCTION_101_7();
    v8(v7);
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void *v20;
  uint64_t (*v21)(void);
  void *v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_29_7();
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[20];
  if (v1)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    int64_t v4 = *(void *)(v2 + 16);
    if (__OFADD__(v4, v3))
    {
      __break(1u);
    }
    else
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v6 = v0[20];
      if (!isUniquelyReferenced_nonNull_native || v4 + v3 > *(void *)(v6 + 24) >> 1) {
        uint64_t v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      if (*(void *)(v1 + 16))
      {
        unint64_t v7 = *(void *)(v6 + 16);
        unint64_t v8 = (*(void *)(v6 + 24) >> 1) - v7;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
        if (v8 >= v3)
        {
          OUTLINED_FUNCTION_108_3();
          unint64_t v11 = v6 + v9 + v10 * v7;
          int64_t v12 = v1 + v9;
          uint64_t v13 = v10 * v3;
          char v14 = v11 + v13;
          uint64_t v15 = v12 + v13;
          if (v12 < v14 && v11 < v15) {
            return _fatalErrorMessage(_:_:file:line:flags:)();
          }
          swift_arrayInitWithCopy();
          if (!v3) {
            goto LABEL_20;
          }
          unint64_t v17 = *(void *)(v6 + 16);
          uint64_t v18 = __OFADD__(v17, v3);
          char v19 = v17 + v3;
          if (!v18)
          {
            *(void *)(v6 + 16) = v19;
LABEL_20:
            swift_bridgeObjectRelease();
            v0[20] = v6;
            lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ThrowingTaskGroup<[(offset: Int, element: SearchResult)], Error>.Iterator and conformance ThrowingTaskGroup<A, B>.Iterator, &demangling cache variable for type metadata for ThrowingTaskGroup<[(offset: Int, element: SearchResult)], Error>.Iterator);
            uint64_t v23 = (void *)swift_task_alloc();
            v0[21] = v23;
            *uint64_t v23 = v0;
            v23[1] = closure #2 in ResultHydrator.fetchFullContent(for:);
            uint64_t v24 = OUTLINED_FUNCTION_88_7();
            return MEMORY[0x270FA1E80](v24);
          }
LABEL_26:
          __break(1u);
          return _fatalErrorMessage(_:_:file:line:flags:)();
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (!v3) {
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v20 = (void *)v0[10];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_bridgeObjectRelease();
  *uint64_t v20 = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v21();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t thunk for @escaping @callee_guaranteed @async (@in_guaranteed [SearchResult]) -> (@out [SearchResult], @error @owned Error)(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = thunk for @escaping @callee_guaranteed @async (@in_guaranteed [SearchResult]) -> (@out [SearchResult], @error @owned Error);
  return v5(v2 + 24, v2 + 16);
}

uint64_t thunk for @escaping @callee_guaranteed @async (@in_guaranteed [SearchResult]) -> (@out [SearchResult], @error @owned Error)()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *int64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 24);
    int64_t v10 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v10(v9);
  }
}

uint64_t closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 121) = a7;
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = a6;
  *(void *)(v7 + 40) = a1;
  *(void *)(v7 + 48) = a4;
  uint64_t v8 = type metadata accessor for TimeoutError();
  *(void *)(v7 + 72) = v8;
  *(void *)(v7 + 80) = *(void *)(v8 - 8);
  *(void *)(v7 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:), 0, 0);
}

uint64_t closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_49();
  uint64_t v15 = v14[7];
  uint64_t v16 = v14[8];
  uint64_t v17 = v14[6];
  uint64_t v18 = (void *)swift_allocObject();
  v14[12] = v18;
  v18[2] = v17;
  v18[3] = v15;
  v18[4] = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  char v19 = (void *)swift_task_alloc();
  v14[13] = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
  *char v19 = v14;
  v19[1] = closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:);
  uint64_t v25 = v14[5];
  return MEMORY[0x270F72A38](v25, &async function pointer to partial apply for closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:), v18, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *int64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    return v10();
  }
}

uint64_t closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_41_16();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_29_7();
  a18 = v20;
  uint64_t v23 = *(void **)(v20 + 112);
  swift_release();
  *(void *)(v20 + 16) = v23;
  id v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_125_0();
  if (swift_dynamicCast())
  {

    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_59_10(v25, (uint64_t)static Logging.search);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      char v28 = *(unsigned char *)(v20 + 121);
      uint64_t v29 = OUTLINED_FUNCTION_83_2();
      a9 = OUTLINED_FUNCTION_11_22();
      *(_DWORD *)uint64_t v29 = 136315394;
      *(void *)(v20 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016, 0x8000000258681F90, &a9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2080;
      *(unsigned char *)(v20 + 120) = v28;
      lazy protocol witness table accessor for type SearchResultKey and conformance SearchResultKey();
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v20 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &a9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_257DC6000, v26, v27, "%s Timeout while attempting to hydrate results with type: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v32 = *(void *)(v20 + 80);
    **(void **)(v20 + 40) = *(void *)(v20 + 64);
    uint64_t v33 = *(void (**)(uint64_t))(v32 + 8);
    swift_bridgeObjectRetain();
    uint64_t v34 = OUTLINED_FUNCTION_101_7();
    v33(v34);

    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {

    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
  }
  OUTLINED_FUNCTION_43_16();
  return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12);
}

uint64_t closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  void v4[3] = a1;
  void v4[4] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = *(void *)(type metadata accessor for SearchResult(0) - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:), 0, 0);
}

uint64_t closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  uint64_t v15 = v14[6];
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v18 = v14[11];
    uint64_t v19 = v14[8];
    uint64_t v43 = v14[7];
    a11 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v20 = v15 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v21 = *(void *)(v19 + 72);
    uint64_t v17 = a11;
    do
    {
      uint64_t v22 = v14[12];
      uint64_t v24 = v14[9];
      uint64_t v23 = v14[10];
      outlined init with copy of SearchResultItem?(v20, v23, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      uint64_t v25 = *(int *)(v43 + 48);
      uint64_t v26 = v24 + v25;
      _s10OmniSearch0B6ResultVWOcTm_6(v23 + v25, v26, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWObTm_6(v26, v22, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v27 = OUTLINED_FUNCTION_98_7();
      outlined destroy of SearchResult?(v27, v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v17 = a11;
      }
      unint64_t v30 = *(void *)(v17 + 16);
      unint64_t v29 = *(void *)(v17 + 24);
      if (v30 >= v29 >> 1)
      {
        OUTLINED_FUNCTION_92_8(v29);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v17 = a11;
      }
      *(void *)(v17 + 16) = v30 + 1;
      OUTLINED_FUNCTION_137();
      _s10OmniSearch0B6ResultVWObTm_6(v32, v17 + v31 + *(void *)(v18 + 72) * v30, (void (*)(void))type metadata accessor for SearchResult);
      v20 += v21;
      --v16;
    }
    while (v16);
  }
  v14[13] = v17;
  uint64_t v44 = v14[4] + *(int *)v14[4];
  uint64_t v33 = (void *)swift_task_alloc();
  v14[14] = v33;
  *uint64_t v33 = v14;
  v33[1] = closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:);
  OUTLINED_FUNCTION_45_0();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, v44, a11, a12, a13, a14);
}

uint64_t closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v5 + 128) = v3;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_29_7();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(uint64_t **)(v0 + 24);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySi6offset_10OmniSearch0H6ResultV7elementtGSayAKGG_SiAH_AkLts5NeverOTg506_sSi10g9Search0B6i51VACSiACIgynndr_Si6offset_AC7elementt_ACtSiAD_AcEts5k83OIegnrzr_TR04_s10a8Search14c92HydratorC16fetchFullContent3forSayAA0bC0VGAH_tYaKFSayr21_AG7elementtGScgyAKs5c37_pGzq10KXEfU0_AKyq8KcfU_AKyq32YbKcfU_u7AI_AgJtU27AI_AgJt_AGtXEfZ1_Tf3nnnpf_nTf1cn_n(v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v2 = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v5();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_49();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

size_t ResultHydrator.segmentResultsForHydration(_:)(uint64_t *a1, size_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (size_t *)((char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_43_4();
  uint64_t v96 = v12;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_43_4();
  unint64_t v93 = v14;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_43_4();
  id v92 = v16;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_43_4();
  uint64_t v102 = v18;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_43_4();
  id v97 = v20;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v21);
  uint64_t v103 = (uint64_t *)((char *)&v89 - v22);
  uint64_t v23 = swift_bridgeObjectRetain();
  size_t v24 = specialized _copySequenceToContiguousArray<A>(_:)(v23);
  size_t result = swift_bridgeObjectRelease();
  uint64_t v104 = v2;
  if (*(void *)(v24 + 16) >= *(void *)(v2 + 16)) {
    uint64_t v26 = *(void *)(v2 + 16);
  }
  else {
    uint64_t v26 = *(void *)(v24 + 16);
  }
  if (v26 < 0) {
    goto LABEL_57;
  }
  uint64_t v90 = a1;
  unint64_t v91 = a2;
  OUTLINED_FUNCTION_108_3();
  uint64_t v101 = v28;
  uint64_t v29 = v24 + v28;
  size_t v108 = v24;
  uint64_t v109 = v24 + v28;
  uint64_t v31 = (2 * v30) | 1;
  uint64_t v110 = v27;
  unint64_t v111 = v31;
  if (!v27)
  {
    uint64_t v83 = 0;
    uint64_t v84 = MEMORY[0x263F8EE78];
    size_t v82 = v24;
LABEL_48:
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
    unint64_t v86 = v90;
    v90[3] = v85;
    v86[4] = lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [(offset: Int, element: SearchResult)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: SearchResult)]);
    *unint64_t v86 = v84;
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArraySlice<(offset: Int, element: SearchResult)>);
    uint64_t v88 = v91;
    v91[3] = v87;
    v88[4] = lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ArraySlice<(offset: Int, element: SearchResult)> and conformance ArraySlice<A>, &demangling cache variable for type metadata for ArraySlice<(offset: Int, element: SearchResult)>);
    size_t result = swift_allocObject();
    *uint64_t v88 = result;
    *(void *)(result + 16) = v82;
    *(void *)(result + 24) = v29;
    *(void *)(result + 32) = v83;
    *(void *)(result + 40) = v31;
    return result;
  }
  uint64_t v32 = v27;
  uint64_t v100 = (uint64_t)v103 + *(int *)(v5 + 48);
  uint64_t v33 = *(uint64_t (**)(void))(*(void *)v104 + 168);
  uint64_t v98 = *(void *)v104 + 168;
  id v99 = v33;
  uint64_t v34 = *(void *)(v7 + 72);
  size_t v89 = v24;
  swift_retain();
  uint64_t v94 = MEMORY[0x263F8EE78];
  uint64_t v95 = v5;
  uint64_t v35 = v97;
  uint64_t v36 = v32;
  uint64_t v106 = v34;
  while (1)
  {
    uint64_t v37 = v103;
    outlined init with copy of SearchResultItem?(v29, (uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
    uint64_t v38 = (uint64_t)v35 + *(int *)(v5 + 48);
    uint64_t v39 = *v37;
    *uint64_t v35 = *v37;
    _s10OmniSearch0B6ResultVWObTm_6(v100, v38, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v40 = *(int *)(v5 + 48);
    uint64_t v41 = v102;
    *uint64_t v102 = v39;
    _s10OmniSearch0B6ResultVWOcTm_6(v38, (uint64_t)v41 + v40, (void (*)(void))type metadata accessor for SearchResult);
    SearchResultItem.type.getter(&v107);
    char v42 = v107;
    uint64_t v43 = OUTLINED_FUNCTION_19_0();
    uint64_t v45 = _s10OmniSearch0B6ResultVWOhTm_3(v43, v44);
    if (*(void *)(v99(v45) + 16))
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v42);
      if (v46)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v47 = OUTLINED_FUNCTION_125_0();
        _sxq_s5Error_pRi_zRi0_zRi__Ri0__r0_lySay10OmniSearch0C6ResultVGAEIsegHnrzo_SgWOe(v47);
        uint64_t v48 = *(int *)(v5 + 48);
        unint64_t v49 = v92;
        uint64_t v50 = (uint64_t)v92 + v48;
        void *v92 = v39;
        _s10OmniSearch0B6ResultVWOcTm_6(v38, (uint64_t)v49 + v48, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v51 = (uint64_t)v93 + *(int *)(v5 + 48);
        *unint64_t v93 = v39;
        _s10OmniSearch0B6ResultVWObTm_6(v50, v51, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v52 = v94;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_86_6();
          uint64_t v52 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v53 = v106;
        unint64_t v55 = *(void *)(v52 + 16);
        unint64_t v54 = *(void *)(v52 + 24);
        if (v55 >= v54 >> 1)
        {
          OUTLINED_FUNCTION_91_7(v54);
          uint64_t v52 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        *(void *)(v52 + 16) = v55 + 1;
        uint64_t v94 = v52;
        uint64_t v56 = v52 + v101;
        uint64_t v57 = (uint64_t)v93;
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRelease();
    _sxq_s5Error_pRi_zRi0_zRi__Ri0__r0_lySay10OmniSearch0C6ResultVGAEIsegHnrzo_SgWOe(0);
    uint64_t v58 = *(int *)(v5 + 48);
    uint64_t v59 = v96;
    uint64_t v60 = (uint64_t)v96 + v58;
    *uint64_t v96 = v39;
    _s10OmniSearch0B6ResultVWOcTm_6(v38, (uint64_t)v59 + v58, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v61 = (uint64_t)v11 + *(int *)(v5 + 48);
    *uint64_t v11 = v39;
    _s10OmniSearch0B6ResultVWObTm_6(v60, v61, (void (*)(void))type metadata accessor for SearchResult);
    unint64_t v62 = v111;
    if ((v111 & 1) == 0 || (size_t result = swift_isUniquelyReferenced_nonNull(), (result & 1) == 0))
    {
      size_t result = (v62 >> 1) - v110;
      if (__OFSUB__(v62 >> 1, v110)) {
        goto LABEL_52;
      }
      size_t result = specialized ArraySlice._copyToNewBuffer(oldCount:)(result);
      unint64_t v62 = v111;
    }
    uint64_t v105 = v36;
    uint64_t v63 = v110;
    unint64_t v64 = v62 >> 1;
    unint64_t v55 = (v62 >> 1) - v110;
    BOOL v65 = __OFSUB__(v62 >> 1, v110);
    if (__OFSUB__(v62 >> 1, v110)) {
      break;
    }
    int64_t v66 = (v62 >> 1) - v110;
    if (v62)
    {
      uint64_t v67 = v29;
      uint64_t v68 = v11;
      uint64_t v69 = v109;
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain();
      uint64_t v70 = swift_dynamicCastClass();
      if (!v70)
      {
        swift_unknownObjectRelease();
        uint64_t v70 = MEMORY[0x263F8EE78];
      }
      uint64_t v71 = *(void *)(v70 + 16);
      if (v69 + v63 * v106 + v55 * v106 == v70 + v101 + v71 * v106)
      {
        unint64_t v72 = *(void *)(v70 + 24);
        size_t result = swift_release();
        uint64_t v73 = (v72 >> 1) - v71;
        BOOL v74 = __OFADD__(v55, v73);
        int64_t v66 = v55 + v73;
        if (v74) {
          goto LABEL_56;
        }
      }
      else
      {
        size_t result = swift_release();
        int64_t v66 = (v62 >> 1) - v63;
      }
      uint64_t v11 = v68;
      uint64_t v29 = v67;
    }
    unint64_t v75 = v55 + 1;
    if (v66 < (uint64_t)(v55 + 1))
    {
      size_t result = specialized ArraySlice._copyToNewBuffer(oldCount:)((v62 >> 1) - v63);
      uint64_t v63 = v110;
      LOBYTE(v62) = v111;
      unint64_t v64 = v111 >> 1;
      uint64_t v76 = (v111 >> 1) - v110;
      if (__OFSUB__(v111 >> 1, v110)) {
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v76 = (v62 >> 1) - v63;
      if (v65) {
        goto LABEL_51;
      }
    }
    uint64_t v77 = v75 - v76;
    if (__OFSUB__(v75, v76)) {
      goto LABEL_50;
    }
    if (v77)
    {
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain();
      size_t result = swift_dynamicCastClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        size_t result = MEMORY[0x263F8EE78];
      }
      uint64_t v78 = *(void *)(result + 16);
      BOOL v74 = __OFADD__(v78, v77);
      uint64_t v79 = v78 + v77;
      if (v74) {
        goto LABEL_53;
      }
      *(void *)(result + 16) = v79;
      size_t result = swift_release();
      uint64_t v80 = v64 + v77;
      if (__OFADD__(v64, v77)) {
        goto LABEL_54;
      }
      if (v80 < 0) {
        goto LABEL_55;
      }
      unint64_t v111 = v62 & 1 | (2 * v80);
    }
    uint64_t v36 = v105;
    uint64_t v53 = v106;
    uint64_t v56 = v109 + v63 * v106;
    uint64_t v57 = (uint64_t)v11;
    uint64_t v5 = v95;
    uint64_t v35 = v97;
LABEL_40:
    outlined init with take of SearchResultItem?(v57, v56 + v55 * v53, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
    outlined destroy of SearchResult?((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
    v29 += v53;
    if (!--v36)
    {
      swift_release();
      size_t v82 = v108;
      uint64_t v29 = v109;
      uint64_t v83 = v110;
      uint64_t v31 = v111;
      uint64_t v84 = v94;
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t ResultHydrator.runDataDetectorsOnResults(_:)(uint64_t a1)
{
  uint64_t v124 = a1;
  uint64_t v129 = type metadata accessor for MobileSMSDocument(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_184_0();
  uint64_t v143 = v3;
  uint64_t v128 = type metadata accessor for EmailDocument(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v136 = v5;
  uint64_t v131 = type metadata accessor for CalendarEvent(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint8_t *)v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SearchResult(0);
  uint64_t v14 = OUTLINED_FUNCTION_12_0(v13);
  uint64_t v147 = v15;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_11_0();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v123 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)v123 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)v123 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)v123 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v123 - v29;
  OUTLINED_FUNCTION_209();
  if (((*(uint64_t (**)(uint64_t))(v31 + 80))(1) & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  uint64_t v139 = v30;
  uint64_t v140 = v28;
  uint64_t v132 = v25;
  uint64_t v133 = v22;
  uint64_t v134 = v19;
  uint64_t v135 = v1;
  uint64_t v141 = v12;
  uint64_t v142 = v8;
  type metadata accessor for DataDetectorsController();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = DataDetectorsController.init()();
  uint64_t v34 = *(void *)(v124 + 16);
  if (v34)
  {
    uint64_t v138 = v33;
    OUTLINED_FUNCTION_137();
    uint64_t v145 = v35;
    uint64_t v37 = v36 + v35;
    uint64_t v144 = *(void *)(v38 + 72);
    v123[1] = &v150;
    swift_bridgeObjectRetain();
    uint64_t v147 = MEMORY[0x263F8EE78];
    *(void *)&long long v39 = 136315138;
    long long v130 = v39;
    v123[0] = MEMORY[0x263F8EE58] + 8;
    uint64_t v40 = v142;
    uint64_t v41 = v143;
    uint64_t v42 = v136;
    uint64_t v137 = v9;
    uint64_t v44 = (uint64_t)v140;
    uint64_t v43 = (uint64_t)v141;
    uint64_t v45 = (uint64_t)v139;
    do
    {
      uint64_t v146 = v34;
      _s10OmniSearch0B6ResultVWOcTm_6(v37, v45, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOcTm_6(v45, v44, (void (*)(void))type metadata accessor for SearchResult);
      _s10OmniSearch0B6ResultVWOcTm_6(v44, v43, (void (*)(void))type metadata accessor for SearchResultItem);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          _s10OmniSearch0B6ResultVWObTm_6(v43, v41, (void (*)(void))type metadata accessor for MobileSMSDocument);
          if (*(void *)(v41 + 56))
          {
            OUTLINED_FUNCTION_209();
            uint64_t v77 = *(void *)(v76 + 96);
            swift_bridgeObjectRetain();
            uint64_t v78 = OUTLINED_FUNCTION_73_6();
            ((void (*)(uint64_t))v77)(v78);
            swift_bridgeObjectRelease();
            uint64_t v79 = v149;
            uint64_t v43 = v150;
            uint64_t v80 = v151;
            uint64_t v45 = v152;
            uint64_t v81 = v153;
            if (one-time initialization token for search != -1) {
              swift_once();
            }
            uint64_t v82 = type metadata accessor for Logger();
            __swift_project_value_buffer(v82, (uint64_t)static Logging.search);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            OUTLINED_FUNCTION_94_9();
            swift_bridgeObjectRetain_n();
            uint64_t v32 = Logger.logObject.getter();
            os_log_type_t v83 = static os_log_type_t.info.getter();
            if (OUTLINED_FUNCTION_24_2(v83))
            {
              OUTLINED_FUNCTION_14_1();
              uint64_t v84 = OUTLINED_FUNCTION_57_10();
              OUTLINED_FUNCTION_40_13(v84);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v85 = String.init<A>(describing:)();
              *(void *)(v77 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, v86, &v148);
              OUTLINED_FUNCTION_108_0();
              OUTLINED_FUNCTION_51_13();
              OUTLINED_FUNCTION_63_6();
              OUTLINED_FUNCTION_66_8();
              OUTLINED_FUNCTION_111_6();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_113_7();
              _os_log_impl(v87, v88, v89, "Ran dd on message and got fields: %s", (uint8_t *)v77, 0xCu);
              OUTLINED_FUNCTION_121_4();
              swift_arrayDestroy();
              OUTLINED_FUNCTION_34();
              OUTLINED_FUNCTION_34();
            }
            else
            {

              OUTLINED_FUNCTION_108_0();
              OUTLINED_FUNCTION_51_13();
              OUTLINED_FUNCTION_63_6();
              OUTLINED_FUNCTION_66_8();
              OUTLINED_FUNCTION_111_6();
            }
            uint64_t v40 = v142;
            uint64_t v41 = v143;
            os_signpost_type_t v114 = (uint64_t *)(v143 + *(int *)(v129 + 68));
            OUTLINED_FUNCTION_87_8();
            *os_signpost_type_t v114 = v79;
            v114[1] = v43;
            v114[2] = v80;
            v114[3] = v45;
            v114[4] = v81;
            uint64_t v44 = (uint64_t)v140;
            _s10OmniSearch0B6ResultVWOhTm_3((uint64_t)v140, (void (*)(void))type metadata accessor for SearchResultItem);
            _s10OmniSearch0B6ResultVWOcTm_6(v41, v44, (void (*)(void))type metadata accessor for MobileSMSDocument);
            OUTLINED_FUNCTION_77_9();
            swift_storeEnumTagMultiPayload();
            uint64_t v42 = v136;
            OUTLINED_FUNCTION_107_7();
          }
          _s10OmniSearch0B6ResultVWOcTm_6(v44, (uint64_t)v134, (void (*)(void))type metadata accessor for SearchResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            OUTLINED_FUNCTION_24_24();
          }
          OUTLINED_FUNCTION_58_8();
          if (v95)
          {
            uint64_t v115 = OUTLINED_FUNCTION_33_15(v118, v119);
            uint64_t v118 = v115;
          }
          OUTLINED_FUNCTION_19_22(v115, v116, v117, v118);
          _s10OmniSearch0B6ResultVWObTm_6((uint64_t)v134, v120, (void (*)(void))type metadata accessor for SearchResult);
          _s10OmniSearch0B6ResultVWOhTm_3(v45, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v98 = type metadata accessor for MobileSMSDocument;
          uint64_t v99 = v41;
        }
        else if (EnumCaseMultiPayload == 2)
        {
          _s10OmniSearch0B6ResultVWObTm_6(v43, (uint64_t)v40, (void (*)(void))type metadata accessor for CalendarEvent);
          CalendarEvent.llmConsumableDescription.getter();
          OUTLINED_FUNCTION_209();
          (*(void (**)(uint64_t *__return_ptr))(v47 + 96))(&v149);
          swift_bridgeObjectRelease();
          uint64_t v48 = v149;
          uint64_t v45 = v150;
          uint64_t v49 = v151;
          uint64_t v43 = v152;
          uint64_t v50 = v153;
          if (one-time initialization token for search != -1) {
            swift_once();
          }
          uint64_t v51 = type metadata accessor for Logger();
          OUTLINED_FUNCTION_59_10(v51, (uint64_t)static Logging.search);
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_94_9();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v32 = Logger.logObject.getter();
          os_log_type_t v52 = static os_log_type_t.info.getter();
          if (OUTLINED_FUNCTION_24_2(v52))
          {
            OUTLINED_FUNCTION_14_1();
            uint64_t v127 = OUTLINED_FUNCTION_57_10();
            uint64_t v148 = v127;
            uint64_t v149 = v48;
            id v126 = v40;
            *(_DWORD *)uint64_t v40 = v130;
            uint64_t v125 = v40 + 4;
            uint64_t v150 = v45;
            uint64_t v151 = v49;
            uint64_t v152 = v43;
            uint64_t v153 = v50;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v53 = String.init<A>(describing:)();
            uint64_t v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v148);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_66_8();
            OUTLINED_FUNCTION_108_0();
            OUTLINED_FUNCTION_51_13();
            OUTLINED_FUNCTION_63_6();
            uint64_t v42 = v136;
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_113_7();
            _os_log_impl(v55, v56, v57, "Ran dd on calendar and got fields: %s", v126, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_66_8();
            OUTLINED_FUNCTION_108_0();
            OUTLINED_FUNCTION_51_13();
            OUTLINED_FUNCTION_63_6();
          }
          uint64_t v40 = v142;
          uint64_t v100 = (uint64_t *)&v142[*(int *)(v131 + 52)];
          OUTLINED_FUNCTION_87_8();
          *uint64_t v100 = v48;
          v100[1] = v45;
          v100[2] = v49;
          v100[3] = v43;
          v100[4] = v50;
          uint64_t v44 = (uint64_t)v140;
          _s10OmniSearch0B6ResultVWOhTm_3((uint64_t)v140, (void (*)(void))type metadata accessor for SearchResultItem);
          _s10OmniSearch0B6ResultVWOcTm_6((uint64_t)v40, v44, (void (*)(void))type metadata accessor for CalendarEvent);
          OUTLINED_FUNCTION_77_9();
          swift_storeEnumTagMultiPayload();
          _s10OmniSearch0B6ResultVWOcTm_6(v44, (uint64_t)v132, (void (*)(void))type metadata accessor for SearchResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            OUTLINED_FUNCTION_24_24();
          }
          OUTLINED_FUNCTION_107_7();
          uint64_t v41 = v143;
          OUTLINED_FUNCTION_58_8();
          if (v95)
          {
            uint64_t v101 = OUTLINED_FUNCTION_33_15(v104, v105);
            uint64_t v104 = v101;
          }
          OUTLINED_FUNCTION_19_22(v101, v102, v103, v104);
          _s10OmniSearch0B6ResultVWObTm_6((uint64_t)v132, v106, (void (*)(void))type metadata accessor for SearchResult);
          _s10OmniSearch0B6ResultVWOhTm_3(v45, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v98 = type metadata accessor for CalendarEvent;
          uint64_t v99 = (uint64_t)v40;
        }
        else
        {
          _s10OmniSearch0B6ResultVWOcTm_6(v45, v135, (void (*)(void))type metadata accessor for SearchResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            OUTLINED_FUNCTION_24_24();
          }
          OUTLINED_FUNCTION_58_8();
          uint64_t v94 = v135;
          if (v95)
          {
            uint64_t v92 = OUTLINED_FUNCTION_33_15(v92, v93);
            uint64_t v94 = v135;
          }
          OUTLINED_FUNCTION_19_22(v94, v90, v91, v92);
          _s10OmniSearch0B6ResultVWObTm_6(v96, v97, (void (*)(void))type metadata accessor for SearchResult);
          _s10OmniSearch0B6ResultVWOhTm_3(v45, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v98 = type metadata accessor for SearchResultItem;
          uint64_t v99 = v43;
        }
      }
      else
      {
        uint64_t v58 = OUTLINED_FUNCTION_98_7();
        _s10OmniSearch0B6ResultVWObTm_6(v58, v59, v60);
        if (*(void *)(v42 + 56))
        {
          OUTLINED_FUNCTION_209();
          uint64_t v62 = *(void *)(v61 + 96);
          swift_bridgeObjectRetain();
          uint64_t v63 = OUTLINED_FUNCTION_73_6();
          ((void (*)(uint64_t))v62)(v63);
          swift_bridgeObjectRelease();
          uint64_t v64 = v149;
          uint64_t v43 = v150;
          uint64_t v65 = v151;
          uint64_t v45 = v152;
          uint64_t v66 = v153;
          if (one-time initialization token for search != -1) {
            swift_once();
          }
          uint64_t v67 = type metadata accessor for Logger();
          __swift_project_value_buffer(v67, (uint64_t)static Logging.search);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_94_9();
          swift_bridgeObjectRetain_n();
          uint64_t v68 = (void *)Logger.logObject.getter();
          os_log_type_t v69 = static os_log_type_t.info.getter();
          if (OUTLINED_FUNCTION_24_2(v69))
          {
            OUTLINED_FUNCTION_14_1();
            uint64_t v70 = OUTLINED_FUNCTION_57_10();
            OUTLINED_FUNCTION_40_13(v70);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v71 = String.init<A>(describing:)();
            *(void *)(v62 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, &v148);
            OUTLINED_FUNCTION_108_0();
            OUTLINED_FUNCTION_51_13();
            OUTLINED_FUNCTION_63_6();
            OUTLINED_FUNCTION_66_8();
            OUTLINED_FUNCTION_111_6();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_113_7();
            _os_log_impl(v73, v74, v75, "Ran dd on email and got fields: %s", (uint8_t *)v62, 0xCu);
            OUTLINED_FUNCTION_121_4();
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            OUTLINED_FUNCTION_108_0();
            OUTLINED_FUNCTION_51_13();
            OUTLINED_FUNCTION_63_6();
            OUTLINED_FUNCTION_66_8();
            OUTLINED_FUNCTION_111_6();
          }
          uint64_t v40 = v142;
          uint64_t v41 = v143;
          uint64_t v32 = v136;
          char v107 = (uint64_t *)(v136 + *(int *)(v128 + 76));
          OUTLINED_FUNCTION_87_8();
          *char v107 = v64;
          v107[1] = v43;
          uint64_t v42 = v32;
          v107[2] = v65;
          v107[3] = v45;
          v107[4] = v66;
          uint64_t v44 = (uint64_t)v140;
          _s10OmniSearch0B6ResultVWOhTm_3((uint64_t)v140, (void (*)(void))type metadata accessor for SearchResultItem);
          _s10OmniSearch0B6ResultVWOcTm_6(v32, v44, (void (*)(void))type metadata accessor for EmailDocument);
          OUTLINED_FUNCTION_77_9();
          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_107_7();
        }
        _s10OmniSearch0B6ResultVWOcTm_6(v44, (uint64_t)v133, (void (*)(void))type metadata accessor for SearchResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          OUTLINED_FUNCTION_24_24();
        }
        OUTLINED_FUNCTION_58_8();
        if (v95)
        {
          uint64_t v108 = OUTLINED_FUNCTION_33_15(v111, v112);
          uint64_t v111 = v108;
        }
        OUTLINED_FUNCTION_19_22(v108, v109, v110, v111);
        _s10OmniSearch0B6ResultVWObTm_6((uint64_t)v133, v113, (void (*)(void))type metadata accessor for SearchResult);
        _s10OmniSearch0B6ResultVWOhTm_3(v45, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v98 = type metadata accessor for EmailDocument;
        uint64_t v99 = v42;
      }
      _s10OmniSearch0B6ResultVWOhTm_3(v99, (void (*)(void))v98);
      uint64_t v121 = v146;
      _s10OmniSearch0B6ResultVWOhTm_3(v44, (void (*)(void))type metadata accessor for SearchResult);
      v37 += v32;
      uint64_t v34 = v121 - 1;
    }
    while (v34);
    swift_release();
    swift_bridgeObjectRelease();
    return v147;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
}

uint64_t ResultHydrator.fetchFullContentForMailResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v0[5] = v1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v0[6] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v0[7] = v3;
  v0[8] = OUTLINED_FUNCTION_50_0();
  v0[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OSSignpostID();
  v0[10] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v0[11] = v5;
  uint64_t v6 = OUTLINED_FUNCTION_50_0();
  v0[13] = OUTLINED_FUNCTION_104_8(v6);
  v0[14] = swift_task_alloc();
  v0[15] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  _WORD *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_29_18();
  OUTLINED_FUNCTION_27_0();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = (void *)OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_9(v3);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_39_13(&dword_257DC6000, v4, v5, v6, "ResultHydrator.fetchFullContentForMailResults", "");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v7 = v0[11];

  uint64_t v8 = OUTLINED_FUNCTION_8_11();
  v9(v8);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v0[17] = OUTLINED_FUNCTION_160();
  v0[18] = *(void *)(v7 + 8);
  v0[19] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v10 = OUTLINED_FUNCTION_74_8();
  v11(v10);
  type metadata accessor for EmailContentManager();
  uint64_t v12 = swift_allocObject();
  v0[20] = v12;
  *(void *)(v12 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B160]), sel_init);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[21] = v13;
  *uint64_t v13 = v0;
  v13[1] = ResultHydrator.fetchFullContentForMailResults(_:);
  OUTLINED_FUNCTION_31_18();
  return EmailContentManager.hydrateEmailResults(_:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  v3[2] = v1;
  v3[3] = v5;
  v3[4] = v0;
  OUTLINED_FUNCTION_96_6();
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v7 = v6;
  v3[22] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

#error "2583E4108: call analysis failed (funcsize=79)"

uint64_t ResultHydrator.fetchFullContentForMailResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_29_7();
  swift_release();
  uint64_t v13 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_68_9();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    OUTLINED_FUNCTION_80_8();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v14 = OUTLINED_FUNCTION_20_1();
    if (v15(v14) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v16();
    }
    uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v17);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v13, v18, v19, "ResultHydrator.fetchFullContentForMailResults");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_44_17();
  uint64_t v20 = OUTLINED_FUNCTION_92_0();
  v12(v20);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_43_16();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

uint64_t ResultHydrator.fetchFullContentForPhotosResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[43] = v2;
  v1[44] = v0;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[45] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[46] = v4;
  v1[47] = OUTLINED_FUNCTION_50_0();
  v1[48] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SearchResultItem(0);
  v1[49] = v5;
  OUTLINED_FUNCTION_81(v5);
  v1[50] = OUTLINED_FUNCTION_49_1();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
  OUTLINED_FUNCTION_81(v6);
  v1[51] = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_81(v7);
  v1[52] = OUTLINED_FUNCTION_49_1();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Photo?);
  OUTLINED_FUNCTION_81(v8);
  v1[53] = OUTLINED_FUNCTION_49_1();
  uint64_t v9 = type metadata accessor for Photo(0);
  v1[54] = v9;
  OUTLINED_FUNCTION_81(v9);
  v1[55] = OUTLINED_FUNCTION_50_0();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for IndexSet();
  v1[58] = v10;
  OUTLINED_FUNCTION_12_0(v10);
  v1[59] = v11;
  v1[60] = OUTLINED_FUNCTION_49_1();
  uint64_t v12 = type metadata accessor for SearchResult(0);
  v1[61] = v12;
  OUTLINED_FUNCTION_12_0(v12);
  v1[62] = v13;
  v1[63] = OUTLINED_FUNCTION_50_0();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for OSSignpostID();
  v1[67] = v14;
  OUTLINED_FUNCTION_12_0(v14);
  v1[68] = v15;
  v1[69] = OUTLINED_FUNCTION_50_0();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v16, v17, v18);
}

{
  void *v0;
  unint64_t v1;
  void *isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  NSObject *v4;
  uint8_t *v5;
  os_signpost_type_t v6;
  os_signpost_id_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Class isa;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSIndexSet *v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  BOOL v63;
  Swift::Int v64;
  Swift::Bool v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  unint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(void);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  char v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t *v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  NSObject *v149;
  unsigned int (*v150)(void);
  const char *v151;
  uint64_t v152;
  void (*v154)(void);
  uint8_t *v155;
  os_signpost_type_t v156;
  os_signpost_id_t v157;
  NSObject *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v162;
  int *v163;
  void *v164;
  void *v165;
  void *v166;
  uint64_t v167;
  char *v168;
  void (*v169)(uint64_t, uint64_t);
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  void *v191;
  void *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  unint64_t *v201;
  unint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  void *v207;

  char isUniquelyReferenced_nonNull_native = v0;
  if (one-time initialization token for searchSignposter != -1) {
    goto LABEL_93;
  }
  while (1)
  {
    uint64_t v3 = type metadata accessor for OSSignposter();
    OUTLINED_FUNCTION_59_10(v3, (uint64_t)static Logging.searchSignposter);
    OSSignposter.logHandle.getter();
    OSSignpostID.init(log:)();
    uint64_t v4 = OSSignposter.logHandle.getter();
    static os_signpost_type_t.begin.getter();
    if (OUTLINED_FUNCTION_60_0())
    {
      uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v5 = 0;
      OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_186();
      _os_signpost_emit_with_name_impl(&dword_257DC6000, v4, v6, v7, "ResultHydrator.fetchFullContentForPhotosResults", "", v5, 2u);
      OUTLINED_FUNCTION_34();
    }
    uint64_t v8 = isUniquelyReferenced_nonNull_native[72];
    uint64_t v9 = isUniquelyReferenced_nonNull_native[71];
    uint64_t v10 = isUniquelyReferenced_nonNull_native[68];
    uint64_t v11 = isUniquelyReferenced_nonNull_native[67];
    uint64_t v12 = isUniquelyReferenced_nonNull_native[43];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v8, v11);
    type metadata accessor for OSSignpostIntervalState();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_160();
    uint64_t v169 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v169(v8, v11);
    uint64_t v13 = *(void *)(v12 + 16);
    os_log_type_t v205 = isUniquelyReferenced_nonNull_native;
    uint64_t v199 = v13;
    if (v13)
    {
      uint64_t v14 = (uint64_t)(isUniquelyReferenced_nonNull_native + 20);
      uint64_t v15 = isUniquelyReferenced_nonNull_native[62];
      uint64_t v16 = isUniquelyReferenced_nonNull_native[43];
      v206 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v17 = v16 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      uint64_t v18 = *(void *)(v15 + 72);
      os_signpost_id_t v19 = v206;
      do
      {
        uint64_t v20 = v205[66];
        _s10OmniSearch0B6ResultVWOcTm_6(v17, v20, (void (*)(void))type metadata accessor for SearchResult);
        SearchResultItem.associatedValue.getter(v14);
        uint64_t v21 = v205[23];
        uint64_t v22 = v205[24];
        uint64_t v23 = (void *)OUTLINED_FUNCTION_125_0();
        __swift_project_boxed_opaque_existential_1(v23, v24);
        uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
        uint64_t v27 = v26;
        __swift_destroy_boxed_opaque_existential_1Tm(v14);
        _s10OmniSearch0B6ResultVWOhTm_3(v20, (void (*)(void))type metadata accessor for SearchResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          os_signpost_id_t v19 = v206;
        }
        uint64_t v28 = *(void *)(v19 + 16);
        uint64_t v1 = v28 + 1;
        if (v28 >= *(void *)(v19 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          os_signpost_id_t v19 = v206;
        }
        *(void *)(v19 + 16) = v1;
        uint64_t v29 = v19 + 16 * v28;
        *(void *)(v29 + 32) = v25;
        *(void *)(v29 + 40) = v27;
        v17 += v18;
        --v13;
      }
      while (v13);
      uint64_t v190 = v19;
      char isUniquelyReferenced_nonNull_native = v205;
    }
    else
    {
      uint64_t v190 = MEMORY[0x263F8EE78];
    }
    uint64_t v30 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F14E18]), sel_init);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_258661700;
    *(void *)(v31 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v31 + 40) = v32;
    outlined bridged method (mbnn) of @objc PHFetchOptions.addFetchPropertySets(_:)(v31, v30);
    uint64_t v33 = self;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v35 = objc_msgSend(v33, sel_fetchAssetsWithLocalIdentifiers_options_, isa, v30);

    uint64_t v36 = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for PHAsset);
    uint64_t v37 = Dictionary.init(dictionaryLiteral:)();
    if (((unint64_t)objc_msgSend(v35, sel_count) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      long long v39 = isUniquelyReferenced_nonNull_native[59];
      uint64_t v38 = isUniquelyReferenced_nonNull_native[60];
      uint64_t v189 = v35;
      uint64_t v40 = isUniquelyReferenced_nonNull_native[58];
      IndexSet.init(integersIn:)();
      IndexSet._bridgeToObjectiveC()(v41);
      uint64_t v43 = v42;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      uint64_t v44 = objc_msgSend(v189, sel_objectsAtIndexes_, v43);

      OUTLINED_FUNCTION_19_0();
      uint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v1 >> 62))
      {
        uint64_t v45 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v168 = v30;
    if (!v45)
    {
      uint64_t v47 = 0;
LABEL_34:
      swift_bridgeObjectRelease();
      uint64_t v195 = *(void *)(v190 + 16);
      if (!v195)
      {
LABEL_73:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v149 = OSSignposter.logHandle.getter();
        OSSignpostIntervalState.signpostID.getter();
        static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          swift_retain();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          OUTLINED_FUNCTION_50_16();
          if (v150() == *MEMORY[0x263F90238])
          {
            uint64_t v151 = "[Error] Interval already ended";
          }
          else
          {
            OUTLINED_FUNCTION_77();
            v154();
            uint64_t v151 = "";
          }
          uint64_t v155 = (uint8_t *)OUTLINED_FUNCTION_55();
          *(_WORD *)uint64_t v155 = 0;
          OSSignpostID.rawValue.getter();
          OUTLINED_FUNCTION_93_0();
          _os_signpost_emit_with_name_impl(&dword_257DC6000, v149, v156, v157, "ResultHydrator.fetchFullContentForPhotosResults", v151, v155, 2u);
          OUTLINED_FUNCTION_34();
        }
        uint64_t v158 = v149;
        uint64_t v159 = isUniquelyReferenced_nonNull_native[70];
        long long v160 = isUniquelyReferenced_nonNull_native[67];
        OUTLINED_FUNCTION_82_7(v158);
        v169(v159, v160);
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_149();
        OUTLINED_FUNCTION_85_9();
        __asm { BRAA            X2, X16 }
      }
      uint64_t v1 = 0;
      uint64_t v166 = isUniquelyReferenced_nonNull_native + 2;
      uint64_t v167 = (uint64_t)(isUniquelyReferenced_nonNull_native + 25);
      uint64_t v188 = (uint64_t)(isUniquelyReferenced_nonNull_native + 30);
      uint64_t v191 = isUniquelyReferenced_nonNull_native + 35;
      uint64_t v204 = isUniquelyReferenced_nonNull_native[62];
      unint64_t v187 = isUniquelyReferenced_nonNull_native[61];
      uint64_t v164 = (void *)isUniquelyReferenced_nonNull_native[55];
      uint64_t v165 = (void *)isUniquelyReferenced_nonNull_native[57];
      uint64_t v163 = (int *)isUniquelyReferenced_nonNull_native[54];
      uint64_t v73 = (unint64_t *)(v190 + 40);
      os_log_t v74 = MEMORY[0x263F8EE78];
      uint64_t v194 = v37;
      while (1)
      {
        if (!*(void *)(v37 + 16)) {
          goto LABEL_47;
        }
        uint64_t v36 = *v73;
        swift_bridgeObjectRetain();
        os_log_type_t v75 = OUTLINED_FUNCTION_19_0();
        uint64_t v77 = specialized __RawDictionaryStorage.find<A>(_:)(v75, v76);
        if ((v78 & 1) == 0) {
          break;
        }
        long long v198 = v74;
        uint64_t v79 = *(id *)(*(void *)(v37 + 56) + 8 * v77);
        swift_bridgeObjectRelease();
        uint64_t v192 = v79;
        uint64_t v80 = (char *)ResultHydrator.ocrOutput(for:)(v79);
        uint64_t v82 = v81;
        uint64_t v196 = v1;
        if (v81)
        {
          if (v1 >= v199) {
            goto LABEL_91;
          }
          uint64_t v30 = v80;
          uint64_t v36 = isUniquelyReferenced_nonNull_native[53];
          os_log_type_t v83 = (*(unsigned __int8 *)(v204 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 80);
          uint64_t v84 = v1;
          uint64_t v85 = *(void *)(v204 + 72);
          unint64_t v86 = isUniquelyReferenced_nonNull_native[43] + v83 + v85 * v84;
          SearchResultItem.associatedValue.getter(v188);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
          OUTLINED_FUNCTION_56_1();
          if (swift_dynamicCast())
          {
            uint64_t v185 = v85;
            uint64_t v186 = v83;
            uint64_t v201 = v73;
            uint64_t v87 = isUniquelyReferenced_nonNull_native[66];
            uint64_t v184 = isUniquelyReferenced_nonNull_native[65];
            os_log_t v88 = (uint64_t *)isUniquelyReferenced_nonNull_native[57];
            uint64_t v183 = isUniquelyReferenced_nonNull_native[56];
            os_log_type_t v89 = (void *)isUniquelyReferenced_nonNull_native[55];
            uint64_t v90 = isUniquelyReferenced_nonNull_native[52];
            uint64_t v91 = isUniquelyReferenced_nonNull_native[51];
            __swift_storeEnumTagSinglePayload(isUniquelyReferenced_nonNull_native[53], 0, 1, isUniquelyReferenced_nonNull_native[54]);
            uint64_t v92 = OUTLINED_FUNCTION_56_1();
            _s10OmniSearch0B6ResultVWObTm_6(v92, v93, v94);
            _s10OmniSearch0B6ResultVWOcTm_6(v86, v87, (void (*)(void))type metadata accessor for SearchResult);
            long long v182 = *(id *)(v87 + *(int *)(v187 + 20));
            _s10OmniSearch0B6ResultVWOhTm_3(v87, (void (*)(void))type metadata accessor for SearchResult);
            char v95 = v165[1];
            uint64_t v176 = v165[2];
            uint64_t v177 = *v88;
            uint64_t v96 = v165[5];
            unint64_t v172 = v165[3];
            uint64_t v173 = v165[4];
            uint64_t v174 = v165[6];
            uint64_t v175 = v165[7];
            uint64_t v171 = v165[8];
            outlined init with copy of SearchResultItem?((uint64_t)v88 + v163[11], v90, &demangling cache variable for type metadata for Date?);
            uint64_t v178 = *(uint64_t *)((char *)v88 + v163[12]);
            uint64_t v179 = *(char **)((char *)v88 + v163[14]);
            uint64_t v180 = *(uint64_t *)((char *)v88 + v163[15]);
            uint64_t v97 = type metadata accessor for PartialExtractedAttributes(0);
            __swift_storeEnumTagSinglePayload(v91, 1, 1, v97);
            uint64_t v170 = (void *)((char *)v89 + v163[16]);
            unint64_t v181 = (uint64_t)v89 + v163[17];
            __swift_storeEnumTagSinglePayload(v181, 1, 1, v97);
            uint64_t v98 = type metadata accessor for PreExtractedCard(0);
            OUTLINED_FUNCTION_25_20(v98);
            uint64_t v99 = type metadata accessor for PreExtractedContact(0);
            OUTLINED_FUNCTION_25_20(v99);
            uint64_t v100 = type metadata accessor for PreExtractedSharedLink(0);
            OUTLINED_FUNCTION_25_20(v100);
            uint64_t v101 = (uint64_t)v89 + v163[21];
            _s10OmniSearch0B7ContextVSgWOi0_(v166);
            outlined init with take of SearchResultItem?((uint64_t)v166, v101, &demangling cache variable for type metadata for PreExtractedBreadcrumb?);
            NSObject *v89 = v177;
            v164[1] = v95;
            v164[2] = v176;
            v164[3] = v172;
            v164[4] = v173;
            v164[5] = v96;
            v164[6] = v174;
            v164[7] = v175;
            v164[8] = v171;
            v164[9] = v30;
            v164[10] = v82;
            outlined init with copy of SearchResultItem?(v90, (uint64_t)v89 + v163[11], &demangling cache variable for type metadata for Date?);
            uint64_t v30 = v179;
            *(void *)((char *)v89 + v163[12]) = v178;
            *(void *)((char *)v89 + v163[13]) = v178;
            *(void *)((char *)v89 + v163[14]) = v179;
            *(void *)((char *)v89 + v163[15]) = v180;
            *uint64_t v170 = 0;
            v170[1] = 0;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_94_9();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            outlined assign with take of SearchResultItem?(v91, v181, &demangling cache variable for type metadata for PartialExtractedAttributes?);
            outlined destroy of SearchResult?(v90, &demangling cache variable for type metadata for Date?);
            _s10OmniSearch0B6ResultVWObTm_6((uint64_t)v89, v183, (void (*)(void))type metadata accessor for Photo);
            _s10OmniSearch0B6ResultVWOcTm_6(v183, v184, (void (*)(void))type metadata accessor for Photo);
            swift_storeEnumTagMultiPayload();
            uint64_t v102 = (void *)(v184 + *(int *)(v187 + 24));
            *uint64_t v102 = 0;
            v102[1] = 0;
            *(void *)(v184 + *(int *)(v187 + 20)) = v182;
            uint64_t v103 = v182;
            os_log_t v74 = v198;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              os_log_t v74 = OUTLINED_FUNCTION_35_17();
            }
            uint64_t v37 = v194;
            unint64_t v105 = *(void *)(v74 + 16);
            uint64_t v104 = *(void *)(v74 + 24);
            uint64_t v36 = v105 + 1;
            char isUniquelyReferenced_nonNull_native = v205;
            if (v105 >= v104 >> 1) {
              os_log_t v74 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v104 > 1, v105 + 1, 1, v74);
            }
            uint64_t v106 = v205[65];
            char v107 = v205[56];
            uint64_t v108 = v205[57];
            *(void *)(v74 + 16) = v36;
            _s10OmniSearch0B6ResultVWObTm_6(v106, v74 + v186 + v105 * v185, (void (*)(void))type metadata accessor for SearchResult);

            _s10OmniSearch0B6ResultVWOhTm_3(v107, (void (*)(void))type metadata accessor for Photo);
            _s10OmniSearch0B6ResultVWOhTm_3(v108, (void (*)(void))type metadata accessor for Photo);
            uint64_t v47 = 0;
            uint64_t v1 = v196;
            uint64_t v73 = v201;
            goto LABEL_72;
          }
          uint64_t v128 = isUniquelyReferenced_nonNull_native[53];
          __swift_storeEnumTagSinglePayload(v128, 1, 1, isUniquelyReferenced_nonNull_native[54]);
          swift_bridgeObjectRelease();
          outlined destroy of SearchResult?(v128, &demangling cache variable for type metadata for Photo?);
          uint64_t v1 = v196;
        }
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v129 = type metadata accessor for Logger();
        long long v130 = __swift_project_value_buffer(v129, (uint64_t)static Logging.search);
        swift_bridgeObjectRetain_n();
        uint64_t v131 = Logger.logObject.getter();
        uint64_t v132 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v131, v132))
        {
          OUTLINED_FUNCTION_14_1();
          uint64_t v133 = OUTLINED_FUNCTION_81_7();
          OUTLINED_FUNCTION_72_7(v133);
          if (v114) {
            goto LABEL_92;
          }
          long long v130 = isUniquelyReferenced_nonNull_native[50];
          uint64_t v134 = OUTLINED_FUNCTION_61_7();
          uint64_t v36 = (unint64_t)type metadata accessor for SearchResultItem;
          _s10OmniSearch0B6ResultVWOcTm_6(v134, v130, (void (*)(void))type metadata accessor for SearchResultItem);
          SearchResultItem.associatedValue.getter(v167);
          uint64_t v135 = isUniquelyReferenced_nonNull_native[28];
          uint64_t v136 = v205[29];
          uint64_t v137 = (void *)OUTLINED_FUNCTION_246();
          __swift_project_boxed_opaque_existential_1(v137, v138);
          uint64_t v139 = *(void (**)(uint64_t, uint64_t))(v136 + 32);
          uint64_t v140 = v136;
          char isUniquelyReferenced_nonNull_native = v205;
          v139(v135, v140);
          __swift_destroy_boxed_opaque_existential_1Tm(v167);
          _s10OmniSearch0B6ResultVWOhTm_3(v130, (void (*)(void))type metadata accessor for SearchResultItem);
          uint64_t v141 = OUTLINED_FUNCTION_102_4();
          *(void *)(v30 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v141, v142, v143);
          uint64_t v1 = v196;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          OUTLINED_FUNCTION_105_8(&dword_257DC6000, v131, v132, "Could not populate ocr string for photo with id: %s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        os_log_t v74 = v198;
        uint64_t v37 = v194;
        if (v1 >= v199) {
          goto LABEL_90;
        }
        uint64_t v144 = OUTLINED_FUNCTION_46_12();
        _s10OmniSearch0B6ResultVWOcTm_6(v144, v145, (void (*)(void))type metadata accessor for SearchResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          os_log_t v74 = OUTLINED_FUNCTION_35_17();
        }
        uint64_t v147 = *(void *)(v74 + 16);
        uint64_t v146 = *(void *)(v74 + 24);
        if (v147 >= v146 >> 1) {
          os_log_t v74 = OUTLINED_FUNCTION_90_6(v146);
        }
        uint64_t v148 = isUniquelyReferenced_nonNull_native[64];
        *(void *)(v74 + 16) = v147 + 1;
        _s10OmniSearch0B6ResultVWObTm_6(v148, v74 + v130 + v147 * v36, (void (*)(void))type metadata accessor for SearchResult);

        uint64_t v47 = 0;
LABEL_72:
        ++v1;
        v73 += 2;
        if (v195 == v1) {
          goto LABEL_73;
        }
      }
      swift_bridgeObjectRelease();
LABEL_47:
      uint64_t v202 = v73;
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v109 = type metadata accessor for Logger();
      uint64_t v110 = __swift_project_value_buffer(v109, (uint64_t)static Logging.search);
      swift_bridgeObjectRetain_n();
      uint64_t v111 = Logger.logObject.getter();
      unint64_t v112 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v111, v112))
      {
        OUTLINED_FUNCTION_14_1();
        uint64_t v113 = OUTLINED_FUNCTION_81_7();
        OUTLINED_FUNCTION_72_7(v113);
        if (v114) {
          goto LABEL_89;
        }
        uint64_t v110 = isUniquelyReferenced_nonNull_native[50];
        uint64_t v115 = OUTLINED_FUNCTION_61_7();
        _s10OmniSearch0B6ResultVWOcTm_6(v115, v110, (void (*)(void))type metadata accessor for SearchResultItem);
        SearchResultItem.associatedValue.getter((uint64_t)v191);
        uint64_t v116 = v205[38];
        uint64_t v117 = v205[39];
        __swift_project_boxed_opaque_existential_1(v191, v116);
        uint64_t v118 = v116;
        char isUniquelyReferenced_nonNull_native = v205;
        (*(void (**)(uint64_t, uint64_t))(v117 + 32))(v118, v117);
        uint64_t v36 = v119;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v191);
        _s10OmniSearch0B6ResultVWOhTm_3(v110, (void (*)(void))type metadata accessor for SearchResultItem);
        uint64_t v120 = OUTLINED_FUNCTION_19_0();
        *(void *)(v30 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v120, v121, v122);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_105_8(&dword_257DC6000, v111, v112, "Could not fetch photo asset with id: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      uint64_t v73 = v202;
      uint64_t v37 = v194;
      if (v1 >= v199) {
        goto LABEL_87;
      }
      uint64_t v123 = OUTLINED_FUNCTION_46_12();
      _s10OmniSearch0B6ResultVWOcTm_6(v123, v124, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v30 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        os_log_t v74 = OUTLINED_FUNCTION_35_17();
      }
      id v126 = *(void *)(v74 + 16);
      uint64_t v125 = *(void *)(v74 + 24);
      if (v126 >= v125 >> 1) {
        os_log_t v74 = OUTLINED_FUNCTION_90_6(v125);
      }
      uint64_t v127 = isUniquelyReferenced_nonNull_native[63];
      *(void *)(v74 + 16) = v126 + 1;
      _s10OmniSearch0B6ResultVWObTm_6(v127, v74 + v110 + v126 * v36, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v47 = v30;
      goto LABEL_72;
    }
    char v46 = 0;
    uint64_t v47 = 0;
    long long v197 = v1 & 0xC000000000000001;
    uint64_t v193 = v45;
LABEL_18:
    uint64_t v48 = v197 ? (id)MEMORY[0x25A2C8550](v46, v1) : *(id *)(v1 + 8 * v46 + 32);
    uint64_t v49 = v48;
    if (!__OFADD__(v46, 1)) {
      break;
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    swift_once();
  }
  uint64_t v203 = v46 + 1;
  uint64_t v50 = objc_msgSend(v48, sel_localIdentifier);
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  isUniquelyReferenced_nonNull_native[40] = v51;
  isUniquelyReferenced_nonNull_native[41] = v53;
  unint64_t v54 = lazy protocol witness table accessor for type String and conformance String();
  unint64_t v55 = MEMORY[0x25A2C83D0](47, 0xE100000000000000, 1, 1, MEMORY[0x263F8D310], v54);
  swift_bridgeObjectRelease();
  os_log_t v56 = (void *)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySsG_SSs5NeverOTg5012_sSsSSIeggo_f4SSs5D153OIegnrzr_TR129_s10OmniSearch14ResultHydratorC32fetchFullContentForPhotosResults33_4DC86B6DF70367122DAA7E88D902EF60LLySayAA0bC0VGAHYaKFSSSshcfu_Tf3nnnpf_nTf1cn_n(v55);
  swift_bridgeObjectRelease();
  if (!v56[2]) {
    goto LABEL_85;
  }
  unint64_t v200 = v47;
  os_log_type_t v57 = v1;
  uint64_t v58 = v56[4];
  uint64_t v59 = v56[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v49;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  uint64_t v207 = (void *)v37;
  uint64_t v60 = specialized __RawDictionaryStorage.find<A>(_:)(v58, v59);
  uint64_t v62 = *(void *)(v37 + 16);
  uint64_t v63 = (v61 & 1) == 0;
  uint64_t v64 = v62 + v63;
  if (__OFADD__(v62, v63)) {
    goto LABEL_86;
  }
  uint64_t v36 = v60;
  uint64_t v1 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, PHAsset>);
  uint64_t v65 = _NativeDictionary.ensureUnique(isUnique:capacity:)((Swift::Bool)isUniquelyReferenced_nonNull_native, v64);
  char isUniquelyReferenced_nonNull_native = v205;
  uint64_t v37 = (uint64_t)v207;
  if (!v65) {
    goto LABEL_27;
  }
  uint64_t v66 = specialized __RawDictionaryStorage.find<A>(_:)(v58, v59);
  if ((v1 & 1) == (v67 & 1))
  {
    uint64_t v36 = v66;
LABEL_27:
    if (v1)
    {
      uint64_t v68 = v207[7];

      *(void *)(v68 + 8 * v36) = v30;
    }
    else
    {
      v207[(v36 >> 6) + 8] |= 1 << v36;
      os_log_type_t v69 = (uint64_t *)(v207[6] + 16 * v36);
      *os_log_type_t v69 = v58;
      v69[1] = v59;
      *(void *)(v207[7] + 8 * v36) = v30;
      uint64_t v70 = v207[2];
      uint64_t v71 = __OFADD__(v70, 1);
      unint64_t v72 = v70 + 1;
      if (v71) {
        goto LABEL_88;
      }
      v207[2] = v72;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    ++v46;
    uint64_t v1 = v57;
    uint64_t v47 = v200;
    if (v203 == v193) {
      goto LABEL_34;
    }
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_85_9();
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t ResultHydrator.fetchFullContentForMessagesResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[49] = v2;
  v1[50] = v0;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[51] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[52] = v4;
  v1[53] = OUTLINED_FUNCTION_49_1();
  uint64_t v5 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v5);
  v1[54] = v6;
  v1[55] = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v1[56] = v7;
  OUTLINED_FUNCTION_12_0(v7);
  v1[57] = v8;
  v1[58] = OUTLINED_FUNCTION_50_0();
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _WORD *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  long long *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  void (*v44)(void);
  void *v45;
  os_log_type_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  os_log_type_t v52 = v0;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 488) = OUTLINED_FUNCTION_59_10(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = (void *)OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_9(v3);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_39_13(&dword_257DC6000, v4, v5, v6, "ResultHydrator.fetchFullContentForMessagesResults", "");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v7 = *(void *)(v0 + 392);

  uint64_t v8 = OUTLINED_FUNCTION_8_11();
  v9(v8);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 496) = OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_84_6();
  *(void *)(v0 + 504) = v10;
  *(void *)(v0 + 512) = v11;
  uint64_t v12 = OUTLINED_FUNCTION_74_8();
  v13(v12);
  uint64_t v14 = *(void *)(v7 + 16);
  if (v14)
  {
    OUTLINED_FUNCTION_108_3();
    uint64_t v17 = v15 + v16;
    uint64_t v49 = *(void *)(v18 + 72);
    swift_bridgeObjectRetain();
    os_signpost_id_t v19 = MEMORY[0x263F8EE78];
    do
    {
      _s10OmniSearch0B6ResultVWOcTm_6(v17, *(void *)(v0 + 440), (void (*)(void))type metadata accessor for SearchResult);
      SearchResultItem.associatedValue.getter(v0 + 96);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchItem);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MessageIdentifier);
      if ((swift_dynamicCast() & 1) == 0)
      {
        *(void *)(v0 + 88) = 0;
        *(_OWORD *)(v0 + 56) = 0u;
        *(_OWORD *)(v0 + 72) = 0u;
      }
      _s10OmniSearch0B6ResultVWOhTm_3(*(void *)(v0 + 440), (void (*)(void))type metadata accessor for SearchResult);
      if (*(void *)(v0 + 80))
      {
        outlined init with take of SageSearchClient((long long *)(v0 + 56), v0 + 16);
        uint64_t v20 = (long long *)OUTLINED_FUNCTION_246();
        outlined init with take of SageSearchClient(v20, v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_86_6();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          os_signpost_id_t v19 = v24;
        }
        uint64_t v23 = *(void *)(v19 + 16);
        uint64_t v22 = *(void *)(v19 + 24);
        if (v23 >= v22 >> 1)
        {
          OUTLINED_FUNCTION_91_7(v22);
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          os_signpost_id_t v19 = v25;
        }
        *(void *)(v19 + 16) = v23 + 1;
        outlined init with take of SageSearchClient((long long *)(v0 + 296), v19 + 40 * v23 + 32);
      }
      else
      {
        outlined destroy of SearchResult?(v0 + 56, &demangling cache variable for type metadata for MessageIdentifier?);
      }
      v17 += v49;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_signpost_id_t v19 = MEMORY[0x263F8EE78];
  }
  *(void *)(v0 + 520) = v19;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_59_10(v26, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v27 = Logger.logObject.getter();
  uint64_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = OUTLINED_FUNCTION_83_2();
    uint64_t v50 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v29 = 136315394;
    *(void *)(v0 + 384) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000026, 0x8000000258681F00, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v30 = *(void *)(v19 + 16);
    uint64_t v31 = MEMORY[0x263F8EE78];
    if (v30)
    {
      uint64_t v47 = v28;
      uint64_t v48 = v27;
      uint64_t v51 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v32 = v19 + 32;
      do
      {
        outlined init with copy of CustomStringConvertible(v32, v0 + 336);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 336), *(void *)(v0 + 360));
        uint64_t v33 = OUTLINED_FUNCTION_246();
        uint64_t v35 = v34(v33);
        uint64_t v37 = v36;
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 336);
        uint64_t v31 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v31 = v51;
        }
        uint64_t v38 = *(void *)(v31 + 16);
        if (v38 >= *(void *)(v31 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v31 = v51;
        }
        *(void *)(v31 + 16) = v38 + 1;
        long long v39 = v31 + 16 * v38;
        *(void *)(v39 + 32) = v35;
        *(void *)(v39 + 40) = v37;
        v32 += 40;
        --v30;
      }
      while (v30);
      uint64_t v27 = v48;
      uint64_t v28 = v47;
    }
    MEMORY[0x25A2C7E60](v31, MEMORY[0x263F8D310]);
    swift_bridgeObjectRelease();
    uint64_t v40 = OUTLINED_FUNCTION_246();
    *(void *)(v0 + 376) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_153();
    _os_log_impl(&dword_257DC6000, v27, v28, "%s Message identifiers: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    OUTLINED_FUNCTION_153();
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ChatMessageRecord);
  *(void *)(v0 + 528) = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_209();
  uint64_t v44 = *(void (**)(void))(v43 + 136);
  *(void *)(v0 + 536) = v44;
  *(void *)(v0 + 544) = (v43 + 136) & 0xFFFFFFFFFFFFLL | 0x27D7000000000000;
  v44();
  uint64_t v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v45;
  *uint64_t v45 = v0;
  v45[1] = ResultHydrator.fetchFullContentForMessagesResults(_:);
  return MessageBodyManager.retrieveMessages(for:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 136;
  OUTLINED_FUNCTION_96_6();
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v7 + 560) = v6;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  outlined destroy of MessageBodyManager(v3);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t ResultHydrator.fetchFullContentForMessagesResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  uint64_t v15 = v14;
  uint64_t v16 = v14[70];
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = v14 + 22;
    uint64_t v19 = (uint64_t)(v14 + 32);
    uint64_t v20 = v16 + 32;
    uint64_t v21 = v14[66];
    a9 = v14;
    uint64_t v67 = v14 + 22;
    while (1)
    {
      uint64_t v22 = OUTLINED_FUNCTION_74_0();
      outlined init with copy of CustomStringConvertible(v22, v23);
      uint64_t v25 = v15[25];
      uint64_t v24 = v15[26];
      __swift_project_boxed_opaque_existential_1(v18, v25);
      uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)(v24 + 16) + 8))(v25);
      if (v27)
      {
        uint64_t v28 = v26;
        uint64_t v29 = v27;
        uint64_t v30 = (long long *)v19;
        outlined init with copy of CustomStringConvertible((uint64_t)v18, v19);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a11 = (void *)v21;
        uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v28, v29);
        uint64_t v34 = *(void *)(v21 + 16);
        BOOL v35 = (v33 & 1) == 0;
        Swift::Int v36 = v34 + v35;
        if (__OFADD__(v34, v35))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        unint64_t v37 = result;
        char v38 = v33;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, ChatMessageRecord>);
        Swift::Bool v39 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v36);
        uint64_t v21 = (uint64_t)a11;
        if (v39)
        {
          unint64_t v40 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v29);
          if ((v38 & 1) != (v41 & 1))
          {
            OUTLINED_FUNCTION_45_0();
            return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          }
          unint64_t v37 = v40;
        }
        if (v38)
        {
          uint64_t v42 = a11[7] + 40 * v37;
          __swift_destroy_boxed_opaque_existential_1Tm(v42);
          uint64_t v19 = (uint64_t)v30;
          outlined init with take of SageSearchClient(v30, v42);
        }
        else
        {
          a11[(v37 >> 6) + 8] |= 1 << v37;
          uint64_t v43 = (uint64_t *)(a11[6] + 16 * v37);
          *uint64_t v43 = v28;
          v43[1] = v29;
          uint64_t v44 = a11[7] + 40 * v37;
          uint64_t v19 = (uint64_t)v30;
          uint64_t result = outlined init with take of SageSearchClient(v30, v44);
          uint64_t v45 = a11[2];
          BOOL v46 = __OFADD__(v45, 1);
          uint64_t v47 = v45 + 1;
          if (v46) {
            goto LABEL_27;
          }
          a11[2] = v47;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = a9;
        uint64_t v18 = v67;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      v20 += 40;
      if (!--v17)
      {
        uint64_t v48 = swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  uint64_t v48 = swift_bridgeObjectRelease();
  uint64_t v21 = v14[66];
LABEL_16:
  uint64_t v49 = v15[49];
  ((void (*)(uint64_t))v15[67])(v48);
  uint64_t v68 = MessageBodyManager.hydrateMessageBody(origMessages:enrichedMessages:)(v49, v21);
  swift_bridgeObjectRelease();
  outlined destroy of MessageBodyManager((uint64_t)(v15 + 27));
  uint64_t v50 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v51 = OUTLINED_FUNCTION_74_0();
    if (v52(v51) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v53();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_20_20(&dword_257DC6000, v50, v54, v55, "ResultHydrator.fetchFullContentForMessagesResults");
    OUTLINED_FUNCTION_34();
  }
  os_log_t v56 = (void (*)(uint64_t))v15[63];

  uint64_t v57 = OUTLINED_FUNCTION_92_0();
  v56(v57);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_45_0();
  return v60(v58, v59, v60, v61, v62, v63, v64, v65, a9, v68, a11, a12, a13, a14);
}

uint64_t ResultHydrator.fetchFullContentForContactsResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[4] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[5] = v4;
  v1[6] = OUTLINED_FUNCTION_49_1();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v1[7] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v1[8] = v6;
  v1[9] = OUTLINED_FUNCTION_50_0();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

#error "2583E695C: call analysis failed (funcsize=161)"

uint64_t ResultHydrator.fetchFullContentForEventsResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v1[4] = v2;
  v1[5] = v0;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[6] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[7] = v4;
  v1[8] = OUTLINED_FUNCTION_49_1();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v1[9] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v1[10] = v6;
  v1[11] = OUTLINED_FUNCTION_50_0();
  uint64_t v7 = swift_task_alloc();
  v1[13] = OUTLINED_FUNCTION_104_8(v7);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  _WORD *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void *v13;
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[14] = OUTLINED_FUNCTION_59_10(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = (void *)OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_9(v3);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_39_13(&dword_257DC6000, v4, v5, v6, "ResultHydrator.fetchFullContentForEventsResults", "");
    OUTLINED_FUNCTION_34();
  }

  uint64_t v7 = OUTLINED_FUNCTION_8_11();
  v8(v7);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v0[15] = OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_84_6();
  v0[16] = v9;
  v0[17] = v10;
  uint64_t v11 = OUTLINED_FUNCTION_74_8();
  v12(v11);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[18] = v13;
  *uint64_t v13 = v0;
  v13[1] = ResultHydrator.fetchFullContentForEventsResults(_:);
  return static EventManager.hydrateWithSourceDocuments(for:itemFetcher:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = v3;
  OUTLINED_FUNCTION_96_6();
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t ResultHydrator.fetchFullContentForEventsResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_29_7();
  uint64_t v13 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_68_9();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    OUTLINED_FUNCTION_80_8();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v14 = OUTLINED_FUNCTION_20_1();
    if (v15(v14) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v16();
    }
    uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v17);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v13, v18, v19, "ResultHydrator.fetchFullContentForEventsResults");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v20 = v13;
  uint64_t v21 = *(void (**)(uint64_t))(v12 + 128);

  uint64_t v22 = OUTLINED_FUNCTION_92_0();
  v21(v22);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_43_16();
  return v25(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t ResultHydrator.fetchFullContentForFileResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v0[5] = v1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v0[6] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v0[7] = v3;
  v0[8] = OUTLINED_FUNCTION_50_0();
  v0[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OSSignpostID();
  v0[10] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v0[11] = v5;
  uint64_t v6 = OUTLINED_FUNCTION_50_0();
  v0[13] = OUTLINED_FUNCTION_104_8(v6);
  v0[14] = swift_task_alloc();
  v0[15] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  _WORD *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_29_18();
  OUTLINED_FUNCTION_27_0();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = (void *)OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_9(v3);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_39_13(&dword_257DC6000, v4, v5, v6, "ResultHydrator.fetchFullContentForFileResults", "");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v7 = v0[11];

  uint64_t v8 = OUTLINED_FUNCTION_8_11();
  v9(v8);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v0[17] = OUTLINED_FUNCTION_160();
  v0[18] = *(void *)(v7 + 8);
  v0[19] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v10 = OUTLINED_FUNCTION_74_8();
  v11(v10);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[20] = v12;
  *uint64_t v12 = v0;
  v12[1] = ResultHydrator.fetchFullContentForFileResults(_:);
  OUTLINED_FUNCTION_31_18();
  return static FileContentManager.hydrateFileContent(from:)(v13);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  OUTLINED_FUNCTION_96_6();
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

#error "2583E727C: call analysis failed (funcsize=79)"

uint64_t ResultHydrator.fetchFullContentForFileResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_29_7();
  uint64_t v13 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_68_9();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    OUTLINED_FUNCTION_80_8();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v14 = OUTLINED_FUNCTION_20_1();
    if (v15(v14) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v16();
    }
    uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v17);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v13, v18, v19, "ResultHydrator.fetchFullContentForFileResults");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_44_17();
  uint64_t v20 = OUTLINED_FUNCTION_92_0();
  v12(v20);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_43_16();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

uint64_t ResultHydrator.fetchFullContentForNotesResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v0[8] = v1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v0[9] = v2;
  OUTLINED_FUNCTION_12_0(v2);
  v0[10] = v3;
  v0[11] = OUTLINED_FUNCTION_50_0();
  uint64_t v4 = swift_task_alloc();
  v0[13] = OUTLINED_FUNCTION_104_8(v4);
  v0[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SearchResult(0);
  v0[15] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v0[16] = v6;
  v0[17] = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v0[18] = v7;
  OUTLINED_FUNCTION_12_0(v7);
  v0[19] = v8;
  v0[20] = OUTLINED_FUNCTION_50_0();
  v0[21] = swift_task_alloc();
  v0[22] = swift_task_alloc();
  v0[23] = swift_task_alloc();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 264) = v5;
  *(void *)(v3 + 272) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  uint64_t v0;
  _DWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t *v15;
  uint64_t *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  unsigned int (*v24)(void);
  void (*v25)(void);
  os_signpost_type_t v26;
  os_signpost_id_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  uint64_t v45 = v0;
  uint64_t v2 = *(void **)(v0 + 264);
  if (!v2)
  {
    uint64_t v13 = Logger.logObject.getter();
    uint64_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      OUTLINED_FUNCTION_14_1();
      uint64_t v44 = OUTLINED_FUNCTION_57_10();
      MEMORY[0] = 136315138;
      *(void *)(v0 + 16) = OUTLINED_FUNCTION_37_18((uint64_t)"fetchFullContentForNotesResults(_:)", v32, v34, v36, v37, v38, v39, v40, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v13, v14, "%s Unable to get notes via LinkServices. It's OK, will just return original notesResults", 0, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v15 = (uint64_t *)(v0 + 168);
    uint64_t v16 = (uint64_t *)(v0 + 64);
    swift_bridgeObjectRetain();
    uint64_t v17 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      os_signpost_type_t v18 = *(void *)(v0 + 96);
      os_signpost_id_t v19 = *(void *)(v0 + 72);
      uint64_t v20 = *(void *)(v0 + 80);
      goto LABEL_13;
    }
LABEL_15:
    char v33 = *v16;
    BOOL v35 = *v15;
    goto LABEL_25;
  }
  uint64_t v3 = static NoteContentManager.parseLNQueryOutput(from:)(*(void **)(v0 + 264));
  if (v3)
  {
    uint64_t v4 = static NoteContentManager.hydrateNoteFullContent(from:with:)(*(void *)(v0 + 64), v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    uint64_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      char v41 = *(void *)(v0 + 120);
      uint64_t v7 = OUTLINED_FUNCTION_83_2();
      uint64_t v8 = OUTLINED_FUNCTION_11_22();
      uint64_t v44 = v8;
      *(_DWORD *)uint64_t v7 = 136315394;
      *(void *)(v0 + 32) = OUTLINED_FUNCTION_37_18((uint64_t)"fetchFullContentForNotesResults(_:)", v32, v34, v36, v37, v38, v39, v41, v8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2080;
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = MEMORY[0x25A2C7E60](v9, v42);
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_153();
      _os_log_impl(&dword_257DC6000, v5, v6, "%s hydratedResults: %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      OUTLINED_FUNCTION_153();
    }

    uint64_t v15 = (uint64_t *)(v0 + 184);
    uint64_t v17 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    char v33 = v4;
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
    {
      BOOL v35 = *v15;
      goto LABEL_25;
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    OUTLINED_FUNCTION_102_4();
    OUTLINED_FUNCTION_50_16();
    if (v24() == *MEMORY[0x263F90238])
    {
      uint64_t v23 = *v15;
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  uint64_t v21 = Logger.logObject.getter();
  uint64_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v44 = OUTLINED_FUNCTION_81_7();
    void *v1 = 136315138;
    *(void *)(v0 + 24) = OUTLINED_FUNCTION_37_18((uint64_t)"fetchFullContentForNotesResults(_:)", v32, v34, v36, v37, v38, v39, v40, v43);
    OUTLINED_FUNCTION_125_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_105_8(&dword_257DC6000, v21, v22, "%s Unable to parse LNQueryOutput. It's OK, will just return original notesResults");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }

  uint64_t v15 = (uint64_t *)(v0 + 176);
  uint64_t v16 = (uint64_t *)(v0 + 64);
  swift_bridgeObjectRetain();
  uint64_t v17 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
    goto LABEL_15;
  }
  os_signpost_type_t v18 = *(void *)(v0 + 104);
  os_signpost_id_t v19 = *(void *)(v0 + 72);
  uint64_t v20 = *(void *)(v0 + 80);
LABEL_13:
  swift_retain();
  checkForErrorAndConsumeState(state:)();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 88))(v18, v19) != *MEMORY[0x263F90238])
  {
    char v33 = *v16;
LABEL_23:
    uint64_t v23 = *v15;
    OUTLINED_FUNCTION_77();
    v25();
    goto LABEL_24;
  }
  uint64_t v23 = *v15;
  char v33 = *v16;
LABEL_24:
  *(_WORD *)OUTLINED_FUNCTION_55() = 0;
  BOOL v35 = v23;
  OSSignpostID.rawValue.getter();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_20_20(&dword_257DC6000, v17, v26, v27, "ResultHydrator.fetchFullContentForNotesResults");
  OUTLINED_FUNCTION_34();
LABEL_25:
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
  uint64_t v29 = *(void *)(v0 + 144);

  v28(v35, v29);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  return v30(v33);
}

{
  void *v0;
  NSObject *v1;
  uint64_t v2;
  unsigned int (*v3)(uint64_t);
  void (*v4)(void);
  _WORD *v5;
  os_signpost_type_t v6;
  os_signpost_id_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  swift_bridgeObjectRelease();
  uint64_t v1 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_68_9();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v2 = OUTLINED_FUNCTION_130();
    if (v3(v2) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v4();
    }
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v5);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v1, v6, v7, "ResultHydrator.fetchFullContentForNotesResults");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[28];
  uint64_t v9 = v0[20];
  uint64_t v10 = v0[18];

  v8(v9, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v11();
}

void ResultHydrator.fetchFullContentForNotesResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_71();
  a21 = v24;
  a22 = v25;
  OUTLINED_FUNCTION_135();
  a20 = v22;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for OSSignposter();
  v22[26] = OUTLINED_FUNCTION_59_10(v26, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v27 = OSSignposter.logHandle.getter();
  os_signpost_type_t v28 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_55();
    os_signpost_id_t v30 = OUTLINED_FUNCTION_67_9(v29);
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v27, v28, v30, "ResultHydrator.fetchFullContentForNotesResults", "", v23, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v31 = v22[8];
  uint64_t v32 = v22[24];
  uint64_t v33 = v22[25];
  uint64_t v35 = v22[18];
  uint64_t v34 = v22[19];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, v33, v35);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v22[27] = OUTLINED_FUNCTION_160();
  Swift::Int v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v22[28] = v36;
  v22[29] = (v34 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v36(v33, v35);
  uint64_t v37 = MEMORY[0x263F8EE78];
  a11 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(v31 + 16);
  if (v38)
  {
    uint64_t v39 = v22[15];
    OUTLINED_FUNCTION_108_3();
    uint64_t v42 = v40 + v41;
    uint64_t v44 = *(void *)(v43 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v45 = v22[17];
      _s10OmniSearch0B6ResultVWOcTm_6(v42, v45, (void (*)(void))type metadata accessor for SearchResult);
      id v46 = *(id *)(v45 + *(int *)(v39 + 20));
      uint64_t v47 = _s10OmniSearch0B6ResultVWOhTm_3(v45, (void (*)(void))type metadata accessor for SearchResult);
      MEMORY[0x25A2C7E10](v47);
      unint64_t v48 = *(void *)((a11 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (*(void *)((a11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v48 >> 1)
      {
        OUTLINED_FUNCTION_92_8(v48);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      OUTLINED_FUNCTION_98_7();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v42 += v44;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    unint64_t v49 = a11;
  }
  else
  {
    unint64_t v49 = MEMORY[0x263F8EE78];
  }
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  os_log_t v74 = v22;
  if (v50)
  {
    a11 = v37;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v50 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v51 = 0;
    uint64_t v52 = a11;
    do
    {
      if ((v49 & 0xC000000000000001) != 0) {
        id v53 = (id)MEMORY[0x25A2C8550](v51, v49);
      }
      else {
        id v53 = *(id *)(v49 + 8 * v51 + 32);
      }
      os_signpost_type_t v54 = v53;
      id v55 = objc_msgSend(v53, sel_uniqueIdentifier);
      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v57;

      a11 = v52;
      unint64_t v60 = *(void *)(v52 + 16);
      unint64_t v59 = *(void *)(v52 + 24);
      if (v60 >= v59 >> 1)
      {
        OUTLINED_FUNCTION_92_8(v59);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v52 = a11;
      }
      ++v51;
      *(void *)(v52 + 16) = v60 + 1;
      uint64_t v61 = v52 + 16 * v60;
      *(void *)(v61 + 32) = v56;
      *(void *)(v61 + 40) = v58;
      uint64_t v22 = v74;
    }
    while (v50 != v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v52 = MEMORY[0x263F8EE78];
  }
  v22[30] = v52;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for Logger();
  v22[31] = OUTLINED_FUNCTION_59_10(v62, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = v22 + 7;
    uint64_t v66 = OUTLINED_FUNCTION_83_2();
    a11 = OUTLINED_FUNCTION_11_22();
    *(_DWORD *)uint64_t v66 = 136315394;
    v22[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000023, 0x8000000258681DF0, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v66 + 12) = 2080;
    uint64_t v67 = swift_bridgeObjectRetain();
    uint64_t v68 = MEMORY[0x25A2C7E60](v67, MEMORY[0x263F8D310]);
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    uint64_t v22 = v74;
    *uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v63, v64, "%s identifiers: %s", (uint8_t *)v66, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v71 = (void *)swift_task_alloc();
  v22[32] = v71;
  *uint64_t v71 = v22;
  v71[1] = ResultHydrator.fetchFullContentForNotesResults(_:);
  OUTLINED_FUNCTION_45_0();
  static NoteContentManager.retrieveNotesViaLinkServices(for:)(v72);
}

id ResultHydrator.ocrOutput(for:)(void *a1)
{
  id result = objc_msgSend(a1, sel_characterRecognitionProperties);
  if (result)
  {
    outlined bridged method (ob) of @objc PHAssetCharacterRecognitionProperties.characterRecognitionData.getter(result);
    if (v3 >> 60 != 15)
    {
      type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
      type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for VNDocumentObservation);
      uint64_t v4 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      if (v1 || (uint64_t v5 = v4) == 0)
      {
        OUTLINED_FUNCTION_109_5();
      }
      else
      {
        id v6 = objc_msgSend(v4, sel_getTranscript);
        if (v6)
        {
          uint64_t v7 = v6;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_109_5();
        }
        else
        {
          OUTLINED_FUNCTION_109_5();
        }
      }
    }
    return (id)OUTLINED_FUNCTION_74_0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ResultHydrator.deinit()
{
  swift_release();
  swift_release();
  outlined destroy of SearchResult?(v0 + 40, &demangling cache variable for type metadata for MessageBodyManager?);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ResultHydrator.__deallocating_deinit()
{
  ResultHydrator.deinit();
  return MEMORY[0x270FA0228](v0, 136, 7);
}

uint64_t protocol witness for ResultHydration.hydratedResultLimit.getter in conformance ResultHydrator()
{
  return ResultHydrator.hydratedResultLimit.getter();
}

uint64_t protocol witness for ResultHydration.fetchFullContent(for:) in conformance ResultHydrator(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 192) + **(int **)(**(void **)v1 + 192));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return v6(a1);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t sub_2583E86F8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async (@guaranteed [SearchResult]) -> (@owned [SearchResult], @error @owned Error)()
{
  OUTLINED_FUNCTION_29_18();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_16_23();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_2_15();
  OUTLINED_FUNCTION_31_18();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #4 in implicit closure #3 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #6 in implicit closure #5 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #8 in implicit closure #7 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #8 in implicit closure #7 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #10 in implicit closure #9 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #10 in implicit closure #9 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #12 in implicit closure #11 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #12 in implicit closure #11 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #14 in implicit closure #13 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #14 in implicit closure #13 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #16 in implicit closure #15 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #16 in implicit closure #15 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for implicit closure #18 in implicit closure #17 in ResultHydrator.hydrationFunctions.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  OUTLINED_FUNCTION_18_26();
  return implicit closure #16 in implicit closure #15 in ResultHydrator.hydrationFunctions.getter();
}

uint64_t partial apply for closure #2 in ResultHydrator.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_29_18();
  OUTLINED_FUNCTION_27_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_31_18();
  return closure #2 in ResultHydrator.fetchFullContent(for:)(v3, v4, v5, v6, v7);
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *specialized _ArrayBuffer._consumeAndCreateNew()()
{
  uint64_t v0 = (char *)OUTLINED_FUNCTION_52_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v0, v1, v2, v3);
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew()()
{
}

{
  OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  uint64_t v0 = OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v0, v1, v2, v3);
}

{
  OUTLINED_FUNCTION_52_13();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t specialized ArraySlice._copyToNewBuffer(oldCount:)(size_t a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  unint64_t v7 = v1[3];
  swift_unknownObjectRetain();
  size_t v8 = specialized _ArrayBufferProtocol._forceCreateUniqueMutableBuffer(countForNewBuffer:minNewCapacity:)(a1, v3, v4, v5, v6, v7);
  swift_unknownObjectRelease();
  size_t v11 = v8;
  uint64_t v9 = specialized default argument 3 of _ArrayBufferProtocol._arrayOutOfPlaceUpdate(_:_:_:_:)();
  specialized _ArrayBufferProtocol._arrayOutOfPlaceUpdate(_:_:_:_:)((uint64_t)&v11, a1, 0, (uint64_t (*)(unint64_t, uint64_t))v9);
  swift_release();
  return swift_release();
}

size_t specialized _ArrayBufferProtocol._forceCreateUniqueMutableBuffer(countForNewBuffer:minNewCapacity:)(size_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_37:
    if (v8 >= v7) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  int64_t v7 = a2;
  int64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_37;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                  - 8);
  uint64_t v13 = *(void *)(v11 + 16);
  if (a4 + *(void *)(v12 + 72) * a5 + *(void *)(v12 + 72) * v8 == v11
                                                                     + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
                                                                     + *(void *)(v12 + 72) * v13)
  {
    unint64_t v15 = *(void *)(v11 + 24);
    id result = swift_release();
    uint64_t v16 = (v15 >> 1) - v13;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = swift_dynamicCastClass();
  uint64_t v18 = v17;
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                    - 8);
    uint64_t v20 = *(void *)(v18 + 16);
    if (a4 + *(void *)(v19 + 72) * a5 + *(void *)(v19 + 72) * v8 == v18
                                                                       + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
                                                                       + *(void *)(v19 + 72) * v20)
    {
      unint64_t v23 = *(void *)(v18 + 24);
      id result = swift_release();
      uint64_t v24 = (v23 >> 1) - v20;
      BOOL v25 = __OFADD__(v8, v24);
      v8 += v24;
      if (v25)
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
    }
    else
    {
      id result = swift_release();
    }
LABEL_18:
    if (v8 + 0x4000000000000000 < 0)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v8 *= 2;
LABEL_21:
    if (v8 <= v7) {
      int64_t v28 = v7;
    }
    else {
      int64_t v28 = v8;
    }
    if (v28 <= v6) {
      int64_t v29 = v6;
    }
    else {
      int64_t v29 = v28;
    }
    if (!v29) {
      return MEMORY[0x263F8EE78];
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SearchResult)>);
    uint64_t v30 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                    - 8);
    uint64_t v31 = *(void *)(v30 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v33 = (void *)swift_allocObject();
    id result = _swift_stdlib_malloc_size(v33);
    if (v31)
    {
      if (result - v32 != 0x8000000000000000 || v31 != -1)
      {
        v33[2] = v6;
        v33[3] = 2 * ((uint64_t)(result - v32) / v31);
        return (size_t)v33;
      }
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_40;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v18 = MEMORY[0x263F8EE78];
  }
  uint64_t v21 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                  - 8);
  uint64_t v22 = *(void *)(v18 + 16);
  if (a4 + *(void *)(v21 + 72) * a5 + *(void *)(v21 + 72) * v8 != v18
                                                                     + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
                                                                     + *(void *)(v21 + 72) * v22)
  {
    swift_release();
    goto LABEL_21;
  }
  unint64_t v26 = *(void *)(v18 + 24);
  id result = swift_release();
  uint64_t v27 = (v26 >> 1) - v22;
  BOOL v25 = __OFADD__(v8, v27);
  v8 += v27;
  if (!v25) {
    goto LABEL_21;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t (*specialized default argument 3 of _ArrayBufferProtocol._arrayOutOfPlaceUpdate(_:_:_:_:)())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t specialized _ArrayBufferProtocol._arrayOutOfPlaceUpdate(_:_:_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(unint64_t, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v6 = v4[2];
  unint64_t v7 = (unint64_t)v4[3] >> 1;
  uint64_t v8 = v7 - v6;
  if (__OFSUB__(v7, v6))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)result;
  uint64_t v11 = *(void *)(*(void *)result + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v15 = v13 - a3;
  if (__OFSUB__(v13, a3))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v16 = v8 - a2;
  if (__OFSUB__(v8, a2))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  BOOL v12 = __OFSUB__(v16, v15);
  uint64_t v17 = v16 - v15;
  if (v12)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v35 = v15;
  uint64_t v38 = v17;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80);
  unint64_t v19 = v10 + v18;
  uint64_t v20 = *(void *)(*(void *)(v40 - 8) + 72);
  unint64_t v21 = v10 + v18 + v20 * a2;
  uint64_t v36 = v8;
  id result = specialized _SliceBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:)(v8);
  uint64_t v37 = v10;
  if (!result)
  {
    uint64_t v27 = v5[2];
    uint64_t v28 = v27 + a2;
    if (!__OFADD__(v27, a2))
    {
      if (v28 >= v27)
      {
        if (!__OFSUB__(v28, v27))
        {
          swift_arrayInitWithCopy();
          id result = a4(v19 + a2 * v20, a3);
          int64_t v29 = v28 + v38;
          if (!__OFADD__(v28, v38))
          {
            int64_t v30 = (unint64_t)v5[3] >> 1;
            if (v30 >= v29)
            {
              if (!__OFSUB__(v30, v29))
              {
                swift_arrayInitWithCopy();
                goto LABEL_24;
              }
              goto LABEL_36;
            }
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!v20)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v22 = result;
  uint64_t v34 = v5[2];
  uint64_t v23 = v5[1] + v34 * v20;
  unint64_t v24 = result + v18;
  if (v23 - v24 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_37;
  }
  swift_arrayDestroy();
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v23, a2);
  swift_arrayDestroy();
  a4(v21, a3);
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v23 + v20 * a2 + v20 * v38, v35);
  id result = v23 + v20 * v36;
  if (v24 + *(void *)(v22 + 16) * v20 - result != 0x8000000000000000 || v20 != -1)
  {
    swift_arrayDestroy();
    *(void *)(v22 + 16) = 0;
    swift_release();
    uint64_t v27 = v34;
LABEL_24:
    swift_retain();
    swift_unknownObjectRelease();
    id result = specialized _SliceBuffer.init(_buffer:shiftedToStartIndex:)(v37, v27);
    *uint64_t v5 = result;
    v5[1] = v31;
    v5[2] = v32;
    v5[3] = v33;
    return result;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t outlined bridged method (ob) of @objc PHAssetCharacterRecognitionProperties.characterRecognitionData.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_characterRecognitionData);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc PHFetchOptions.addFetchPropertySets(_:)(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_addFetchPropertySets_, isa);
}

uint64_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  id v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v3 = result;
    id result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 4;
    while (1)
    {
      int v7 = *(_DWORD *)(v3 + 4 * v5 + 32);
      if (!v4)
      {
        unint64_t v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v9;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: Float)>);
        uint64_t v11 = (void *)swift_allocObject();
        uint64_t v12 = (uint64_t)(_swift_stdlib_malloc_size(v11) - 32) / 16;
        v11[2] = v10;
        v11[3] = 2 * v12;
        unint64_t v13 = (unint64_t)(v11 + 4);
        unint64_t v14 = v2[3];
        unint64_t v15 = v14 >> 1;
        if (v2[2])
        {
          if (v11 != v2 || v13 >= (unint64_t)&v2[2 * v15 + 4]) {
            memmove(v11 + 4, v2 + 4, 16 * v15);
          }
          v2[2] = 0;
        }
        uint64_t v6 = (void *)(v13 + 16 * v15);
        uint64_t v4 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - (v14 >> 1);
        id result = swift_release();
        id v2 = v11;
      }
      BOOL v17 = __OFSUB__(v4--, 1);
      if (v17) {
        break;
      }
      *uint64_t v6 = v5;
      *((_DWORD *)v6 + 2) = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        id result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = 0;
LABEL_21:
  unint64_t v18 = v2[3];
  if (v18 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v17 = __OFSUB__(v19, v4);
  unint64_t v20 = v19 - v4;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_27:
  __break(1u);
  return result;
}

size_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v2 = MEMORY[0x270FA5388](v41);
  id v46 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v45 = (void *)((char *)v39 - v5);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)v39 - v6;
  uint64_t v47 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v44 = v10;
  v39[0] = a1;
  if (v10)
  {
    uint64_t v40 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v40;
    uint64_t v13 = 0;
    uint64_t v10 = 0;
    uint64_t v14 = *(void *)(type metadata accessor for SearchResult(0) - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = *(void *)(v14 + 72);
    uint64_t v42 = v7;
    uint64_t v43 = v16;
    v39[1] = v9 | 7;
    BOOL v17 = v11;
    uint64_t v18 = v41;
    while (1)
    {
      uint64_t v19 = (uint64_t)&v46[*(int *)(v18 + 48)];
      _s10OmniSearch0B6ResultVWOcTm_6(v15, v19, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v20 = (uint64_t)v45;
      uint64_t v21 = (uint64_t)v45 + *(int *)(v18 + 48);
      *uint64_t v45 = v13;
      _s10OmniSearch0B6ResultVWObTm_6(v19, v21, (void (*)(void))type metadata accessor for SearchResult);
      size_t result = outlined init with take of SearchResultItem?(v20, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      if (v10)
      {
        uint64_t v11 = v17;
      }
      else
      {
        unint64_t v23 = v17[3];
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_32;
        }
        int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1) {
          uint64_t v25 = 1;
        }
        else {
          uint64_t v25 = v24;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SearchResult)>);
        uint64_t v26 = *(void *)(v47 + 72);
        uint64_t v27 = v40;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v26) {
          goto LABEL_33;
        }
        int64_t v28 = result - v27;
        if (result - v27 == 0x8000000000000000 && v26 == -1) {
          goto LABEL_34;
        }
        uint64_t v30 = v28 / v26;
        v11[2] = v25;
        v11[3] = 2 * (v28 / v26);
        uint64_t v31 = (char *)v11 + v27;
        unint64_t v32 = v17[3];
        uint64_t v33 = (v32 >> 1) * v26;
        if (v17[2])
        {
          if (v11 < v17 || v31 >= (char *)v17 + v40 + v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v17[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v31[v33];
        uint64_t v10 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - (v32 >> 1);
        size_t result = swift_release();
        uint64_t v18 = v41;
      }
      BOOL v35 = __OFSUB__(v10--, 1);
      if (v35) {
        break;
      }
      ++v13;
      int v7 = v42;
      outlined init with take of SearchResultItem?((uint64_t)v42, v12, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      v12 += *(void *)(v47 + 72);
      v15 += v43;
      BOOL v17 = v11;
      if (v44 == v13) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_27:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v36 = v11[3];
  if (v36 < 2) {
    return (size_t)v11;
  }
  unint64_t v37 = v36 >> 1;
  BOOL v35 = __OFSUB__(v37, v10);
  unint64_t v38 = v37 - v10;
  if (!v35)
  {
    v11[2] = v38;
    return (size_t)v11;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t _sxq_s5Error_pRi_zRi0_zRi__Ri0__r0_lySay10OmniSearch0C6ResultVGAEIsegHnrzo_SgWOe(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2583EACBC()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2583EACF4()
{
  OUTLINED_FUNCTION_209();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_2583EAD38@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_209();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 168))();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of ResultHydration.hydratedResultLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ResultHydration.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 16) + **(int **)(v0 + 16));
  uint64_t v6 = swift_task_alloc();
  int v7 = (void *)OUTLINED_FUNCTION_44_0(v6);
  *int v7 = v8;
  v7[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return v10(v5, v3, v1);
}

uint64_t type metadata accessor for ResultHydrator()
{
  return self;
}

uint64_t method lookup function for ResultHydrator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ResultHydrator);
}

uint64_t dispatch thunk of ResultHydrator.messageBodyManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ResultHydrator.messageBodyManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ResultHydrator.messageBodyManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ResultHydrator.__allocating_init(emailContentManager:contactContentManager:hydratedResultLimit:featureFlagService:itemFetcher:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of ResultHydrator.hydrationFunctions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ResultHydrator.hydrationFunctions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ResultHydrator.hydrationFunctions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ResultHydrator.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_209();
  int v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 192) + **(int **)(v2 + 192));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_44_0(v3);
  *uint64_t v4 = v5;
  v4[1] = dispatch thunk of ResultHydrator.fetchFullContent(for:);
  return v7(v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  return v5(v2);
}

uint64_t dispatch thunk of ResultHydrator.segmentResultsForHydration(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Searchfoundation_CardSection?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (uint64_t)&v45 - v6;
  uint64_t v7 = type metadata accessor for Searchfoundation_CardSection();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_184_0();
  uint64_t v52 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v11 + 32) & ~v11;
  uint64_t v56 = (char *)MEMORY[0x263F8EE78];
  uint64_t v53 = MEMORY[0x263F8EE78] + v12;
  uint64_t v49 = v10 + 16;
  uint64_t v50 = v10;
  uint64_t v51 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  uint64_t v47 = v11 | 7;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  id v55 = 0;
  unint64_t v16 = 0;
  for (i = v12; ; uint64_t v12 = i)
  {
    while (1)
    {
      if (!v15) {
        goto LABEL_5;
      }
      unint64_t v18 = *(void *)(v15 + 16);
      if (v14 == v18) {
        break;
      }
      if (v14 >= v18) {
        goto LABEL_41;
      }
      uint64_t v48 = *(void *)(v50 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v50 + 16))(v1, v15 + v12 + v48 * v14, v7);
      __swift_storeEnumTagSinglePayload(v1, 0, 1, v7);
      uint64_t v22 = v54;
      outlined init with take of SearchResultItem?(v1, v54, &demangling cache variable for type metadata for Searchfoundation_CardSection?);
      if (__swift_getEnumTagSinglePayload(v22, 1, v7) == 1) {
        goto LABEL_36;
      }
      id v46 = *v51;
      uint64_t result = v46(v52, v22, v7);
      unint64_t v23 = v55;
      if (v55)
      {
        int64_t v24 = v56;
        uint64_t v12 = i;
        goto LABEL_33;
      }
      unint64_t v25 = *((void *)v56 + 3);
      if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_44;
      }
      uint64_t v12 = i;
      int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
      if (v26 <= 1) {
        uint64_t v27 = 1;
      }
      else {
        uint64_t v27 = v26;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Searchfoundation_CardSection>);
      uint64_t v28 = v48;
      id v55 = (char *)swift_allocObject();
      uint64_t result = _swift_stdlib_malloc_size(v55);
      if (!v28) {
        goto LABEL_45;
      }
      uint64_t v29 = v28;
      uint64_t v30 = result - i;
      if (result - i == 0x8000000000000000 && v28 == -1) {
        goto LABEL_46;
      }
      uint64_t v32 = v30 / v28;
      uint64_t v34 = v55;
      uint64_t v33 = v56;
      *((void *)v55 + 2) = v27;
      *((void *)v34 + 3) = 2 * (v30 / v29);
      BOOL v35 = &v34[i];
      unint64_t v36 = *((void *)v33 + 3);
      uint64_t v37 = (v36 >> 1) * v29;
      if (*((void *)v33 + 2))
      {
        if (v34 >= v33 && v35 < &v33[i + v37])
        {
          if (v34 != v33)
          {
            OUTLINED_FUNCTION_114_7();
            swift_arrayInitWithTakeBackToFront();
LABEL_30:
            uint64_t v37 = v45;
            BOOL v35 = (char *)v53;
            uint64_t v33 = v56;
          }
          *((void *)v33 + 2) = 0;
          goto LABEL_32;
        }
        OUTLINED_FUNCTION_114_7();
        swift_arrayInitWithTakeFrontToBack();
        goto LABEL_30;
      }
LABEL_32:
      uint64_t v53 = (uint64_t)&v35[v37];
      unint64_t v23 = (char *)((v32 & 0x7FFFFFFFFFFFFFFFLL) - (v36 >> 1));
      uint64_t result = swift_release();
      int64_t v24 = v55;
LABEL_33:
      BOOL v39 = __OFSUB__(v23, 1);
      uint64_t v40 = v23 - 1;
      if (v39) {
        goto LABEL_42;
      }
      id v55 = v40;
      ++v14;
      uint64_t v41 = v53;
      uint64_t result = v46(v53, v52, v7);
      uint64_t v53 = v41 + v48;
      uint64_t v56 = v24;
    }
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v7);
    uint64_t result = outlined destroy of SearchResult?(v1, &demangling cache variable for type metadata for Searchfoundation_CardSection?);
LABEL_5:
    unint64_t v19 = *(void *)(a1 + 16);
    if (v16 == v19) {
      break;
    }
    if (v16 >= v19)
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v20 = v16 + 1;
    uint64_t v21 = *(void *)(a1 + 8 * v16 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v14 = 0;
    uint64_t v15 = v21;
    unint64_t v16 = v20;
  }
  uint64_t v22 = v54;
  __swift_storeEnumTagSinglePayload(v54, 1, 1, v7);
LABEL_36:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of SearchResult?(v22, &demangling cache variable for type metadata for Searchfoundation_CardSection?);
  uint64_t result = (uint64_t)v56;
  unint64_t v42 = *((void *)v56 + 3);
  if (v42 < 2) {
    return result;
  }
  unint64_t v43 = v42 >> 1;
  BOOL v39 = __OFSUB__(v43, v55);
  unint64_t v44 = v43 - (void)v55;
  if (!v39)
  {
    *((void *)v56 + 2) = v44;
    return result;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t specialized _SliceBuffer.init(_buffer:shiftedToStartIndex:)(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
         - 8;
  uint64_t v4 = *(void *)(v3 + 16);
  BOOL v5 = __OFADD__(a2, v4);
  uint64_t v6 = a2 + v4;
  if (v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v6 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) == 0) {
    return v3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t specialized _SliceBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:)(uint64_t a1)
{
  uint64_t result = swift_isUniquelyReferenced_nonNull();
  if (!result) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                  - 8);
  uint64_t v11 = *(void *)(v9 + 16);
  if (v8 + *(void *)(v10 + 72) * v6 + *(void *)(v10 + 72) * v7 != v9
                                                                     + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                                                                     + *(void *)(v10 + 72) * v11)
  {
    swift_release();
LABEL_8:
    uint64_t v12 = v7;
    goto LABEL_10;
  }
  unint64_t v13 = *(void *)(v9 + 24);
  uint64_t result = swift_release();
  uint64_t v14 = (v13 >> 1) - v11;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v12 = v7 + v14;
  if (v15)
  {
    __break(1u);
    goto LABEL_27;
  }
LABEL_10:
  if (v12 < a1) {
    return 0;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  a1 = swift_dynamicCastClass();
  if (!a1)
  {
    swift_unknownObjectRelease();
    a1 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = v16 - 8;
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 + 72);
  if (!v19) {
    goto LABEL_23;
  }
  int64_t v20 = v8
      + v19 * v6
      - (a1
       + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
  if (v19 != -1 || v20 != 0x8000000000000000)
  {
    uint64_t v22 = v20 / v19;
    uint64_t result = v7 + v22;
    if (!__OFADD__(v7, v22))
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (result >= v4) {
        return a1;
      }
LABEL_25:
      specialized _ArrayBufferProtocol.replaceSubrange<A>(_:with:elementsOf:)(result, v4, 0);
      return a1;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_27:
  __break(1u);
  return result;
}

void specialized _ArrayBufferProtocol.replaceSubrange<A>(_:with:elementsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  uint64_t v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = v7 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  swift_arrayDestroy();
  uint64_t v12 = a3 - v10;
  if (__OFSUB__(a3, v10))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!v12) {
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v7 + 16);
  if (__OFSUB__(v13, a2)) {
    goto LABEL_15;
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v11 + v9 * a2, v13 - a2);
  uint64_t v14 = *(void *)(v7 + 16);
  BOOL v15 = __OFADD__(v14, v12);
  uint64_t v16 = v14 + v12;
  if (v15)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  *(void *)(v7 + 16) = v16;
LABEL_7:
  if (a3 >= 1 && v9 * a3 > 0) {
    goto LABEL_17;
  }
}

uint64_t _s10OmniSearch0B6ResultVWObTm_6(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t _s10OmniSearch0B6ResultVWOcTm_6(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t _s10OmniSearch0B6ResultVWOhTm_3(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async (@in_guaranteed [SearchResult]) -> (@out [SearchResult], @error @owned Error)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  uint64_t v3 = OUTLINED_FUNCTION_56_1();
  return v4(v3);
}

uint64_t sub_2583EBB5C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t partial apply for closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 56);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_44_0(v5);
  *uint64_t v6 = v7;
  v6[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v8 = OUTLINED_FUNCTION_118_4();
  return closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(v8, v9, v10, v1, v2, v3, v4);
}

uint64_t sub_2583EBC74()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_44_0(v2);
  *uint64_t v3 = v4;
  v3[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  uint64_t v5 = OUTLINED_FUNCTION_118_4();
  return closure #1 in closure #1 in closure #2 in ResultHydrator.fetchFullContent(for:)(v5, v6, v7, v1);
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  return v0;
}

void OUTLINED_FUNCTION_19_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 16) = v4;
  *(void *)(v5 - 144) = a4;
}

uint64_t OUTLINED_FUNCTION_24_24()
{
  uint64_t v2 = *(void *)(v0 - 144);
  uint64_t v3 = *(void *)(v2 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v3, 1, v2);
}

uint64_t OUTLINED_FUNCTION_33_15@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_35_17()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_37_18@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000023, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void OUTLINED_FUNCTION_38_14()
{
}

void OUTLINED_FUNCTION_39_13(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

uint64_t OUTLINED_FUNCTION_40_13(uint64_t a1)
{
  *(void *)(v7 - 312) = a1;
  *(void *)(v7 - 136) = a1;
  *(void *)(v7 - 128) = v2;
  _DWORD *v1 = *(_OWORD *)(v7 - 288);
  *(void *)(v7 - 120) = v3;
  *(void *)(v7 - 112) = v4;
  *(void *)(v7 - 104) = v5;
  *(void *)(v7 - 96) = v6;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_44_17()
{
}

unint64_t OUTLINED_FUNCTION_46_12()
{
  return *(void *)(v1 + 344)
       + ((*(unsigned __int8 *)(*(void *)(v2 - 112) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 112) + 80))
       + *(void *)(*(void *)(v2 - 112) + 72) * v0;
}

uint64_t OUTLINED_FUNCTION_51_13()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_52_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_55_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t OUTLINED_FUNCTION_57_10()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_59_10(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

unint64_t OUTLINED_FUNCTION_61_7()
{
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v2 - 112) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 112) + 80))
       + *(void *)(*(void *)(v2 - 112) + 72) * v1;
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_66_8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_67_9(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_68_9()
{
  return OSSignpostIntervalState.signpostID.getter();
}

__n128 OUTLINED_FUNCTION_72_7(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  __n128 result = *(__n128 *)(v2 - 192);
  _DWORD *v1 = result.n128_u32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_73_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_77_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_80_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_81_7()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_82_7(void *a1@<X8>)
{
  uint64_t v4 = v1[48];
  *(void *)(v2 - 128) = v1[50];
  *(void *)(v2 - 120) = v4;
  *(void *)(v2 - 112) = v1[47];
}

uint64_t OUTLINED_FUNCTION_86_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_87_8()
{
  uint64_t v2 = *v0;
  return outlined consume of DataDetectorResults?(v2);
}

uint64_t OUTLINED_FUNCTION_88_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_90_6@<X0>(unint64_t a1@<X8>)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v1, 1, v2);
}

BOOL OUTLINED_FUNCTION_91_7@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL OUTLINED_FUNCTION_92_8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_94_9()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_98_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_101_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_102_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_103_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104_8(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_105_8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_106_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_109_5()
{
  return outlined consume of Data?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_111_6()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_112_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_114_7()
{
  uint64_t result = v1;
  *(void *)(v2 - 112) = v1;
  *(void *)(v2 - 176) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_118_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_121_4()
{
  return *(void *)(v0 - 312);
}

uint64_t one-time initialization function for shared()
{
  uint64_t v0 = type metadata accessor for LLMQUModelServer();
  swift_allocObject();
  uint64_t v1 = LLMQUModelServer.init()();
  type metadata accessor for LLMQueryParser();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v5 = v0;
  uint64_t v6 = &protocol witness table for LLMQUModelServer;
  *(void *)&long long v4 = v1;
  uint64_t result = outlined init with take of SageSearchClient(&v4, (uint64_t)v2 + 16);
  static LLMQueryParser.shared = v2;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  long long v7;
  long long v8;
  _UNKNOWN **v9;

  type metadata accessor for MemoryCreationQUNetworkService();
  uint64_t v0 = MemoryCreationQUNetworkService.__allocating_init()();
  uint64_t v1 = type metadata accessor for ECRClient();
  swift_allocObject();
  uint64_t v2 = ECRClient.init()();
  if (v2)
  {
    *((void *)&v8 + 1) = v1;
    uint64_t v9 = &protocol witness table for ECRClient;
    *(void *)&uint64_t v7 = v2;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v7 = 0u;
    uint64_t v8 = 0u;
  }
  type metadata accessor for MemoryCreationQueryParser();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = objc_msgSend(self, sel_spotlightManager, (void)v7);
  type metadata accessor for MemoryCreationQUController();
  long long v4 = swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v5 = specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(v0, (uint64_t)&v7, v3, v4);
  swift_release();
  uint64_t result = swift_release();
  static MemoryCreationQUController.shared = v5;
  return result;
}

{
  uint64_t result;

  type metadata accessor for JSONEncoder();
  swift_allocObject();
  uint64_t result = JSONEncoder.init()();
  static JSONEncoder.shared = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for HallucinationMitigator();
  swift_allocObject();
  uint64_t result = HallucinationMitigator.().init()();
  static HallucinationMitigator.shared = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for MetricsLogger();
  uint64_t result = swift_allocObject();
  static MetricsLogger.shared = result;
  return result;
}

uint64_t LLMQueryParser.__allocating_init(llmQUModelServer:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_1_19();
  MEMORY[0x270FA5388](v2);
  long long v4 = OUTLINED_FUNCTION_3_27(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_12();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t static LLMQueryParser.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t key path setter for LLMQueryParser.llmQUModelServer : LLMQueryParser(uint64_t a1, uint64_t a2)
{
  outlined init with copy of CustomStringConvertible(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 96))(v4);
}

uint64_t LLMQueryParser.llmQUModelServer.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return outlined init with copy of CustomStringConvertible(v1 + 16, a1);
}

uint64_t LLMQueryParser.llmQUModelServer.setter(long long *a1)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  outlined init with take of SageSearchClient(a1, v3);
  return swift_endAccess();
}

uint64_t (*LLMQueryParser.llmQUModelServer.modify())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t LLMQueryParser.init(llmQUModelServer:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_1_19();
  MEMORY[0x270FA5388](v2);
  long long v4 = OUTLINED_FUNCTION_3_27(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_12();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t LLMQueryParser.parse(_:traceId:clientId:)()
{
  OUTLINED_FUNCTION_27();
  v1[117] = v0;
  v1[116] = v2;
  v1[115] = v3;
  v1[114] = v4;
  v1[113] = v5;
  v1[112] = v6;
  v1[111] = v7;
  v1[110] = v8;
  uint64_t v9 = type metadata accessor for Date();
  v1[118] = v9;
  v1[119] = *(void *)(v9 - 8);
  v1[120] = swift_task_alloc();
  return MEMORY[0x270FA2498](LLMQueryParser.parse(_:traceId:clientId:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  Date.init()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v1 = v0[117];
  OUTLINED_FUNCTION_209();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 136))();
  (*(void (**)(uint64_t))(*(void *)v1 + 88))(v3);
  uint64_t v4 = v0[108];
  uint64_t v5 = v0[109];
  __swift_project_boxed_opaque_existential_1(v0 + 105, v4);
  uint64_t v10 = (uint64_t (*)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 16)
                                                                                              + **(int **)(v5 + 16));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[121] = v6;
  *uint64_t v6 = v0;
  v6[1] = LLMQueryParser.parse(_:traceId:clientId:);
  uint64_t v7 = v0[112];
  uint64_t v8 = v0[111];
  return v10(v0 + 2, v8, v7, 0, 1, v4, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 976) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = LLMQueryParser.parse(_:traceId:clientId:);
  }
  else {
    uint64_t v5 = LLMQueryParser.parse(_:traceId:clientId:);
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  char v6;
  int v7;
  char v8;
  int v9;
  char v10;
  int v11;
  char v12;
  int v13;
  char v14;
  int v15;
  char v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *);
  char v19;
  char v20;
  int v21;
  uint64_t (*v22)(void);
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unsigned char __dst[232];
  uint64_t v32;
  uint64_t v33;

  uint64_t v32 = v0;
  uint64_t v1 = *(void *)(v0 + 960);
  uint64_t v2 = *(void *)(v0 + 952);
  uint64_t v29 = *(void *)(v0 + 944);
  uint64_t v28 = *(void *)(v0 + 928);
  int64_t v26 = *(void *)(v0 + 912);
  uint64_t v27 = *(void *)(v0 + 920);
  uint64_t v3 = *(void *)(v0 + 904);
  uint64_t v30 = *(void **)(v0 + 880);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 840);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)static MetricsLogger.shared + 272))(v1);
  *(_DWORD *)(v0 + 200) = v4;
  *(unsigned char *)(v0 + 204) = 0;
  OUTLINED_FUNCTION_6_25((void *)(v0 + 464));
  uint64_t v5 = *(_DWORD *)(v0 + 184);
  uint64_t v6 = *(unsigned char *)(v0 + 188);
  uint64_t v7 = *(_DWORD *)(v0 + 192);
  uint64_t v8 = *(unsigned char *)(v0 + 196);
  uint64_t v9 = *(_DWORD *)(v0 + 208);
  uint64_t v10 = *(unsigned char *)(v0 + 212);
  uint64_t v11 = *(_DWORD *)(v0 + 216);
  uint64_t v12 = *(unsigned char *)(v0 + 220);
  uint64_t v13 = *(_DWORD *)(v0 + 224);
  uint64_t v14 = *(unsigned char *)(v0 + 228);
  BOOL v15 = *(_DWORD *)(v0 + 232);
  uint64_t v16 = *(unsigned char *)(v0 + 236);
  *(_OWORD *)(v0 + 616) = *(_OWORD *)(v0 + 168);
  *(_DWORD *)(v0 + 632) = v5;
  *(unsigned char *)(v0 + 636) = v6;
  *(_DWORD *)(v0 + 640) = v7;
  *(unsigned char *)(v0 + 644) = v8;
  *(_DWORD *)(v0 + 648) = v4;
  *(unsigned char *)(v0 + 652) = 0;
  *(_DWORD *)(v0 + 656) = v9;
  *(unsigned char *)(v0 + 660) = v10;
  *(_DWORD *)(v0 + 664) = v11;
  *(unsigned char *)(v0 + 668) = v12;
  *(_DWORD *)(v0 + 672) = v13;
  *(unsigned char *)(v0 + 676) = v14;
  *(_DWORD *)(v0 + 680) = v15;
  *(unsigned char *)(v0 + 684) = v16;
  memcpy(__dst, (const void *)(v0 + 464), 0xDDuLL);
  OUTLINED_FUNCTION_209();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *))(v17 + 144);
  outlined retain of LLMQUResult(v0 + 464);
  v18(v3, v26, v27, v28, __dst);
  outlined release of LLMQUResult(v0 + 464);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v29);
  OUTLINED_FUNCTION_6_25((void *)(v0 + 688));
  OUTLINED_FUNCTION_6_25(v30);
  LODWORD(v30) = *(_DWORD *)(v0 + 184);
  LOBYTE(v29) = *(unsigned char *)(v0 + 188);
  LODWORD(v18) = *(_DWORD *)(v0 + 192);
  uint64_t v19 = *(unsigned char *)(v0 + 196);
  LODWORD(v3) = *(_DWORD *)(v0 + 200);
  int64_t v20 = *(unsigned char *)(v0 + 204);
  LODWORD(v2) = *(_DWORD *)(v0 + 208);
  LOBYTE(v1) = *(unsigned char *)(v0 + 212);
  uint64_t v21 = *(_DWORD *)(v0 + 216);
  LOBYTE(v28) = *(unsigned char *)(v0 + 220);
  LODWORD(v27) = *(_DWORD *)(v0 + 224);
  LOBYTE(v26) = *(unsigned char *)(v0 + 228);
  int64_t v24 = *(unsigned char *)(v0 + 236);
  unint64_t v25 = *(_DWORD *)(v0 + 232);
  OUTLINED_FUNCTION_6_25((void *)(v0 + 240));
  *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 168);
  *(_DWORD *)(v0 + 408) = v30;
  *(unsigned char *)(v0 + 412) = v29;
  *(_DWORD *)(v0 + 416) = v18;
  *(unsigned char *)(v0 + 420) = v19;
  *(_DWORD *)(v0 + 424) = v3;
  *(unsigned char *)(v0 + 428) = v20;
  *(_DWORD *)(v0 + 432) = v2;
  *(unsigned char *)(v0 + 436) = v1;
  *(_DWORD *)(v0 + 440) = v21;
  *(unsigned char *)(v0 + 444) = v28;
  *(_DWORD *)(v0 + 448) = v27;
  *(unsigned char *)(v0 + 452) = v26;
  *(_DWORD *)(v0 + 456) = v25;
  *(unsigned char *)(v0 + 460) = v24;
  outlined retain of LLMQUModelResponse(v0 + 688);
  outlined release of LLMQUResult(v0 + 240);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v22();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = v0[120];
  uint64_t v2 = v0[119];
  uint64_t v3 = v0[118];
  uint64_t v4 = v0[116];
  uint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  uint64_t v7 = v0[113];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 105));
  OUTLINED_FUNCTION_209();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 152))(v7, v6, v5, v4);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v9();
}

Swift::Void __swiftcall LLMQueryParser.prewarmModel()()
{
  OUTLINED_FUNCTION_209();
  (*(void (**)(void *__return_ptr))(v0 + 88))(v5);
  uint64_t v1 = v6;
  uint64_t v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  id v3 = objc_msgSend(self, sel_processInfo);
  signed int v4 = objc_msgSend(v3, sel_processIdentifier);

  (*(void (**)(void, uint64_t, uint64_t))(v2 + 8))(v4, v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
}

uint64_t LLMQueryParser.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t LLMQueryParser.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t protocol witness for QueryParsing.parse(_:traceId:clientId:) in conformance LLMQueryParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v7 + 120)
                                                                                              + **(int **)(**(void **)v7 + 120));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *uint64_t v16 = v8;
  v16[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t protocol witness for QueryParsing.prewarmModel() in conformance LLMQueryParser()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t specialized LLMQueryParser.init(llmQUModelServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a3);
  outlined init with take of SageSearchClient(&v9, a2 + 16);
  return a2;
}

uint64_t outlined retain of LLMQUResult(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of LLMQUResult(uint64_t a1)
{
  return a1;
}

uint64_t outlined retain of LLMQUModelResponse(uint64_t a1)
{
  return a1;
}

uint64_t sub_2583ED500()
{
  OUTLINED_FUNCTION_209();
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of QueryParsing.parse(_:traceId:clientId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a9 + 8) + **(int **)(a9 + 8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of QueryParsing.prewarmModel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for LLMQueryParser()
{
  return self;
}

uint64_t method lookup function for LLMQueryParser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LLMQueryParser);
}

uint64_t dispatch thunk of LLMQueryParser.llmQUModelServer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of LLMQueryParser.llmQUModelServer.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of LLMQueryParser.llmQUModelServer.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of LLMQueryParser.__allocating_init(llmQUModelServer:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of LLMQueryParser.parse(_:traceId:clientId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  OUTLINED_FUNCTION_209();
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 120)
                                                                                              + **(int **)(v15 + 120));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of LLMQueryParser.prewarmModel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

void *OUTLINED_FUNCTION_6_25(void *a1)
{
  return memcpy(a1, v1, 0x98uLL);
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return specialized LLMQueryParser.init(llmQUModelServer:)(v3, v0, v1, v2);
}

uint64_t LLMQUResult.parse.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  uint64_t v1 = (void *)OUTLINED_FUNCTION_79_0();
  memcpy(v1, v2, 0x98uLL);
  return outlined retain of LLMQUModelResponse((uint64_t)__dst);
}

void *LLMQUResult.parse.setter(const void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  outlined release of LLMQUModelResponse((uint64_t)__dst);
  return memcpy(v1, a1, 0x98uLL);
}

uint64_t outlined release of LLMQUModelResponse(uint64_t a1)
{
  return a1;
}

uint64_t (*LLMQUResult.parse.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUResult.loggingMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  int v3 = *(_DWORD *)(v1 + 168);
  char v4 = *(unsigned char *)(v1 + 172);
  int v5 = *(_DWORD *)(v1 + 176);
  char v6 = *(unsigned char *)(v1 + 180);
  int v7 = *(_DWORD *)(v1 + 184);
  char v8 = *(unsigned char *)(v1 + 188);
  int v9 = *(_DWORD *)(v1 + 192);
  char v10 = *(unsigned char *)(v1 + 196);
  int v11 = *(_DWORD *)(v1 + 200);
  char v12 = *(unsigned char *)(v1 + 204);
  int v13 = *(_DWORD *)(v1 + 208);
  char v14 = *(unsigned char *)(v1 + 212);
  int v15 = *(_DWORD *)(v1 + 216);
  char v16 = *(unsigned char *)(v1 + 220);
  *(void *)a1 = *(void *)(v1 + 152);
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 20) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 36) = v8;
  *(_DWORD *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 44) = v10;
  *(_DWORD *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 52) = v12;
  *(_DWORD *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 60) = v14;
  *(_DWORD *)(a1 + 64) = v15;
  *(unsigned char *)(a1 + 68) = v16;
  return swift_bridgeObjectRetain();
}

uint64_t LLMQUResult.loggingMetrics.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  char v5 = *((unsigned char *)a1 + 20);
  int v6 = *((_DWORD *)a1 + 6);
  char v7 = *((unsigned char *)a1 + 28);
  int v8 = *((_DWORD *)a1 + 8);
  char v9 = *((unsigned char *)a1 + 36);
  int v10 = *((_DWORD *)a1 + 10);
  int v17 = *((_DWORD *)a1 + 12);
  char v18 = *((unsigned char *)a1 + 44);
  int v15 = *((_DWORD *)a1 + 14);
  char v16 = *((unsigned char *)a1 + 52);
  int v13 = *((_DWORD *)a1 + 16);
  char v14 = *((unsigned char *)a1 + 60);
  char v12 = *((unsigned char *)a1 + 68);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 152) = v2;
  *(void *)(v1 + 160) = v3;
  *(_DWORD *)(v1 + 168) = v4;
  *(unsigned char *)(v1 + 172) = v5;
  *(_DWORD *)(v1 + 176) = v6;
  *(unsigned char *)(v1 + 180) = v7;
  *(_DWORD *)(v1 + 184) = v8;
  *(unsigned char *)(v1 + 188) = v9;
  *(_DWORD *)(v1 + 192) = v10;
  *(unsigned char *)(v1 + 196) = v18;
  *(_DWORD *)(v1 + 200) = v17;
  *(unsigned char *)(v1 + 204) = v16;
  *(_DWORD *)(v1 + 208) = v15;
  *(unsigned char *)(v1 + 212) = v14;
  *(_DWORD *)(v1 + 216) = v13;
  *(unsigned char *)(v1 + 220) = v12;
  return result;
}

uint64_t (*LLMQUResult.loggingMetrics.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

__n128 LLMQUResult.init(parse:loggingMetrics:)()
{
  OUTLINED_FUNCTION_59_8();
  memcpy(v3, v2, 0x98uLL);
  unsigned __int32 v4 = v0[1].n128_u32[0];
  unsigned __int8 v5 = v0[1].n128_u8[4];
  unsigned __int32 v6 = v0[1].n128_u32[2];
  unsigned __int8 v7 = v0[1].n128_u8[12];
  unsigned __int32 v8 = v0[2].n128_u32[0];
  unsigned __int8 v9 = v0[2].n128_u8[4];
  unsigned __int32 v10 = v0[2].n128_u32[2];
  unsigned __int8 v11 = v0[2].n128_u8[12];
  unsigned __int32 v12 = v0[3].n128_u32[0];
  unsigned __int8 v13 = v0[3].n128_u8[4];
  unsigned __int32 v14 = v0[3].n128_u32[2];
  unsigned __int8 v15 = v0[3].n128_u8[12];
  unsigned __int32 v16 = v0[4].n128_u32[0];
  unsigned __int8 v17 = v0[4].n128_u8[4];
  __n128 result = *v0;
  *(__n128 *)(v1 + 152) = *v0;
  *(_DWORD *)(v1 + 168) = v4;
  *(unsigned char *)(v1 + 172) = v5;
  *(_DWORD *)(v1 + 176) = v6;
  *(unsigned char *)(v1 + 180) = v7;
  *(_DWORD *)(v1 + 184) = v8;
  *(unsigned char *)(v1 + 188) = v9;
  *(_DWORD *)(v1 + 192) = v10;
  *(unsigned char *)(v1 + 196) = v11;
  *(_DWORD *)(v1 + 200) = v12;
  *(unsigned char *)(v1 + 204) = v13;
  *(_DWORD *)(v1 + 208) = v14;
  *(unsigned char *)(v1 + 212) = v15;
  *(_DWORD *)(v1 + 216) = v16;
  *(unsigned char *)(v1 + 220) = v17;
  return result;
}

uint64_t LLMQULoggingMetrics.modelNumber.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t LLMQULoggingMetrics.modelNumber.setter()
{
  uint64_t result = OUTLINED_FUNCTION_188_0();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LLMQULoggingMetrics.modelNumber.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.requestLength.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 16));
}

uint64_t LLMQULoggingMetrics.requestLength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.requestLength.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.responseLength.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 24));
}

uint64_t LLMQULoggingMetrics.responseLength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.responseLength.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.overallTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 32));
}

uint64_t LLMQULoggingMetrics.overallTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.overallTime.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.promptGenerationTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 40));
}

uint64_t LLMQULoggingMetrics.promptGenerationTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  *(unsigned char *)(v1 + 44) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.promptGenerationTime.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.modelPrewarmTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 48));
}

uint64_t LLMQULoggingMetrics.modelPrewarmTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 52) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.modelPrewarmTime.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.modelInferenceTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 56));
}

uint64_t LLMQULoggingMetrics.modelInferenceTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 60) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.modelInferenceTime.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQULoggingMetrics.postProcessTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 64));
}

uint64_t LLMQULoggingMetrics.postProcessTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 64) = result;
  *(unsigned char *)(v1 + 68) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LLMQULoggingMetrics.postProcessTime.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void LLMQULoggingMetrics.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = 1;
  *(_DWORD *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 36) = 1;
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 44) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 52) = 1;
  *(_DWORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 60) = 1;
  *(_DWORD *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 68) = 1;
}

uint64_t LLMQULoggingMetrics.init(modelNumber:requestLength:responseLength:overallTime:promptGenerationTime:modelPrewarmTime:modelInferenceTime:postProcessTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 28) = BYTE4(a4) & 1;
  *(_DWORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 36) = BYTE4(a5) & 1;
  *(_DWORD *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 44) = BYTE4(a6) & 1;
  *(_DWORD *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 52) = BYTE4(a7) & 1;
  *(_DWORD *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 60) = BYTE4(a8) & 1;
  *(_DWORD *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 68) = a11 & 1;
  return result;
}

uint64_t LLMQUModelResponse.question.getter()
{
  return *v0;
}

uint64_t LLMQUModelResponse.question.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*LLMQUModelResponse.question.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.open.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t LLMQUModelResponse.open.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*LLMQUModelResponse.open.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.singular.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t LLMQUModelResponse.singular.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*LLMQUModelResponse.singular.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void LLMQUModelResponse.event_type.getter(unsigned char *a1@<X8>)
{
}

unsigned char *LLMQUModelResponse.event_type.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*LLMQUModelResponse.event_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void LLMQUModelResponse.sort_order.getter(unsigned char *a1@<X8>)
{
}

unsigned char *LLMQUModelResponse.sort_order.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*LLMQUModelResponse.sort_order.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.app_entity_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.inferred_app_entity_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.inferred_app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void LLMQUModelResponse.app_entity_status.getter(unsigned char *a1@<X8>)
{
}

unsigned char *LLMQUModelResponse.app_entity_status.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*LLMQUModelResponse.app_entity_status.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void LLMQUModelResponse.temporal_reference.getter(unsigned char *a1@<X8>)
{
}

unsigned char *LLMQUModelResponse.temporal_reference.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 25) = *result;
  return result;
}

uint64_t (*LLMQUModelResponse.temporal_reference.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.search_term.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.search_term.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.time.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.time.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.source.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.source.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.attachment_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.attachment_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.tag_name.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.tag_name.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.flag_color.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.flag_color.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.media_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.media_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.file_format.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.file_format.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.person_name.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.person_name.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.person_sender.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.person_sender.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.person_receiver.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.person_receiver.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.person_oneself.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.person_oneself.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.location.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LLMQUModelResponse.location.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.location.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.arrival.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LLMQUModelResponse.arrival.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.arrival.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponse.departure.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LLMQUModelResponse.departure.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 144) = a1;
  return result;
}

uint64_t (*LLMQUModelResponse.departure.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

OmniSearch::LLMQUModelResponse::CodingKeys_optional __swiftcall LLMQUModelResponse.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v1 >= 0x18) {
    return (OmniSearch::LLMQUModelResponse::CodingKeys_optional)24;
  }
  else {
    return (OmniSearch::LLMQUModelResponse::CodingKeys_optional)v1;
  }
}

OmniSearch::LLMQUModelResponse::CodingKeys_optional __swiftcall LLMQUModelResponse.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::LLMQUModelResponse::CodingKeys_optional)24;
}

void LLMQUModelResponse.CodingKeys.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
      OUTLINED_FUNCTION_166_2();
      break;
    case 2:
      OUTLINED_FUNCTION_140_2();
      break;
    case 3:
    case 15:
      OUTLINED_FUNCTION_162_2();
      break;
    case 9:
      OUTLINED_FUNCTION_95_7();
      break;
    case 10:
      OUTLINED_FUNCTION_167_1();
      break;
    case 11:
      OUTLINED_FUNCTION_139_2();
      break;
    case 14:
      OUTLINED_FUNCTION_101_8();
      break;
    case 16:
      OUTLINED_FUNCTION_94_10();
      break;
    case 17:
      OUTLINED_FUNCTION_93_7();
      break;
    case 18:
      OUTLINED_FUNCTION_85_10();
      break;
    case 19:
      OUTLINED_FUNCTION_84_7();
      break;
    case 20:
      OUTLINED_FUNCTION_83_5();
      break;
    case 21:
      OUTLINED_FUNCTION_138_1();
      break;
    case 22:
      OUTLINED_FUNCTION_123_5();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance LLMQUModelResponse.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LLMQUModelResponse.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance LLMQUModelResponse.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LLMQUModelResponse.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::LLMQUModelResponse::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelResponse.CodingKeys@<W0>(Swift::String *a1@<X0>, OmniSearch::LLMQUModelResponse::CodingKeys_optional *a2@<X8>)
{
  result.value = LLMQUModelResponse.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelResponse.CodingKeys(void *a1@<X8>)
{
  LLMQUModelResponse.CodingKeys.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance LLMQUModelResponse.CodingKeys()
{
  return LLMQUModelResponse.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::LLMQUModelResponse::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponse.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::LLMQUModelResponse::CodingKeys_optional *a2@<X8>)
{
  result.value = LLMQUModelResponse.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance LLMQUModelResponse.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t static LLMQUModelResponse.schema.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for schema != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Schema();
  __swift_project_value_buffer(v2, (uint64_t)static LLMQUModelResponse.schema);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 16);
  return v4(a1);
}

void LLMQUModelResponse.init(from:)()
{
}

void LLMQUModelResponse.init(jsonString:query:)()
{
  OUTLINED_FUNCTION_105_0();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = v2;
  uint64_t v223 = v4;
  type metadata accessor for String.Encoding();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_13_12();
  static String.Encoding.utf8.getter();
  uint64_t v6 = String.data(using:allowLossyConversion:)();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30();
  v9();
  if (v8 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    lazy protocol witness table accessor for type NetworkServiceError and conformance NetworkServiceError();
    swift_allocError();
    *unsigned __int32 v10 = 1;
    swift_willThrow();
    goto LABEL_220;
  }
  unint64_t v11 = v8;
  if (one-time initialization token for llmQU != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logging.llmQU);
  unsigned __int8 v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    unsigned __int8 v15 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)unsigned __int8 v15 = 0;
    _os_log_impl(&dword_257DC6000, v13, v14, "LLMQUModelResponse: Attempting piece-meal decoding of response", v15, 2u);
    OUTLINED_FUNCTION_34();
  }

  _s10OmniSearch29LLMQUModelResponseNonEnumArgsVSgWOi0_(v291);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v291, (uint64_t)v275, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  long long v274 = xmmword_258668A50;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseStringEnums and conformance LLMQUModelResponseStringEnums();
  OUTLINED_FUNCTION_90_7();
  uint64_t v228 = v6;
  unint64_t v233 = v11;
  if (v0)
  {
    swift_release();
    id v16 = v0;
    id v17 = v0;
    char v18 = (void *)Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_27_12(v19))
    {
      int64_t v20 = (_DWORD *)OUTLINED_FUNCTION_14_1();
      uint64_t v21 = (void *)swift_slowAlloc();
      *int64_t v20 = 138412290;
      id v22 = v0;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_155_2(v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v21 = v23;

      OUTLINED_FUNCTION_28_5(&dword_257DC6000, v24, v25, "LLMQUModelResponse: error decoding enum values as strings: %@.");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      unint64_t v26 = 1;
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();

      OUTLINED_FUNCTION_185_2();
    }
    else
    {

      OUTLINED_FUNCTION_185_2();
      unint64_t v26 = 1;
    }
  }
  else
  {
    swift_release();
    unint64_t v26 = v273[1];
    uint64_t v216 = v273[2];
    uint64_t v217 = v273[0];
    unint64_t v219 = v273[5];
    unint64_t v220 = v273[3];
    uint64_t v214 = v273[6];
    uint64_t v215 = v273[4];
    unint64_t v218 = v273[7];
  }
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs and conformance LLMQUModelResponseNonEnumArgs();
  OUTLINED_FUNCTION_90_7();
  uint64_t v227 = v26;
  if (v0)
  {
    swift_release();
    id v27 = v0;
    id v28 = v0;
    uint64_t v29 = (void *)Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_27_12(v30))
    {
      uint64_t v31 = (_DWORD *)OUTLINED_FUNCTION_14_1();
      uint64_t v32 = (void *)swift_slowAlloc();
      *uint64_t v31 = 138412290;
      id v33 = v0;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_155_2(v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v32 = v34;

      OUTLINED_FUNCTION_28_5(&dword_257DC6000, v35, v36, "LLMQUModelResponse: error decoding non-enum args: %@. Dropping non-enum args part of response");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
    }
  }
  else
  {
    swift_release();
    memcpy(v270, v273, 0x80uLL);
    destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType(v270);
    OUTLINED_FUNCTION_186_1();
    outlined release of LLMQUModelResponseNonEnumArgs?(v272);
    outlined init with take of PQAVerificationModelProtocol?((uint64_t)v270, (uint64_t)v275, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  }
  OUTLINED_FUNCTION_186_1();
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v272, (uint64_t)v273, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v273);
  if (v37)
  {
    uint64_t v292 = 0;
  }
  else
  {
    uint64_t v292 = v276;
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseEventType and conformance LLMQUModelResponseEventType();
  OUTLINED_FUNCTION_90_7();
  if (!v0)
  {
    swift_release();
    int v210 = LOBYTE(v270[0]);
    goto LABEL_39;
  }
  OUTLINED_FUNCTION_209_1();
  id v38 = v0;
  id v39 = v0;
  uint64_t v40 = (void *)Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_29_13(v41))
  {
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_76_8();
    OUTLINED_FUNCTION_88_8(5.7779e-34);
    uint64_t v42 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_34_17(v42);
    OUTLINED_FUNCTION_133_2();

    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v43, v44, "LLMQUModelResponse: error decoding event type: %@. Dropping event type.");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_111_7();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  if (v26 <= 1)
  {

LABEL_38:
    int v210 = 12;
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  if ((OUTLINED_FUNCTION_208_1(v217, v26, 0x79745F746E657665, 0xEA00000000006570) & 1) == 0)
  {
LABEL_37:

    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v45 = (void *)Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_29_13(v46))
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v47 = OUTLINED_FUNCTION_108_4();
    OUTLINED_FUNCTION_219_0(v47);
    MEMORY[0] = 136315138;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_177_2();
    v269[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v217, v26, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v49, v50, "LLMQUModelResponse: adding hallucinated event_type (\"%s\") to search_term.");
    OUTLINED_FUNCTION_128_4();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v51 = v292;
  if (v292)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_107_8();
      uint64_t v51 = v195;
    }
    OUTLINED_FUNCTION_176_2();
    uint64_t v55 = v51;
    if (v56)
    {
      OUTLINED_FUNCTION_81_8();
      uint64_t v55 = v52;
    }
    OUTLINED_FUNCTION_132_3(v52, v53, v54, v55);
    *(void *)(v57 + 32) = v217;
    *(void *)(v57 + 40) = v26;
    goto LABEL_37;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v116 = OUTLINED_FUNCTION_170_2();
  *(_OWORD *)(v116 + 16) = xmmword_258661700;
  *(void *)(v116 + 32) = v217;
  *(void *)(v116 + 40) = v26;
  uint64_t v292 = v116;

  int v210 = 12;
LABEL_39:
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseSortOrder and conformance LLMQUModelResponseSortOrder();
  OUTLINED_FUNCTION_50_17();
  if (!v0)
  {
    swift_release();
    OUTLINED_FUNCTION_191_1();
    int v208 = v65;
    goto LABEL_54;
  }
  OUTLINED_FUNCTION_209_1();
  id v58 = v0;
  id v59 = v0;
  unint64_t v60 = (void *)Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_29_13(v61))
  {
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_76_8();
    OUTLINED_FUNCTION_88_8(5.7779e-34);
    uint64_t v62 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_34_17(v62);
    OUTLINED_FUNCTION_133_2();

    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v63, v64, "LLMQUModelResponse: error decoding sort order: %@. Dropping sort order.");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_111_7();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  if (v26 == 1)
  {

LABEL_46:
    int v208 = 4;
    goto LABEL_54;
  }
  if (!v220)
  {

LABEL_53:
    int v208 = 4;
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  if ((OUTLINED_FUNCTION_208_1(v216, v220, 0x64726F5F74726F73, 0xEA00000000007265) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v66 = (void *)Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_29_13(v67))
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v68 = OUTLINED_FUNCTION_108_4();
    OUTLINED_FUNCTION_219_0(v68);
    OUTLINED_FUNCTION_75_6(4.8149e-34);
    OUTLINED_FUNCTION_177_2();
    uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v216, v220, v69);
    OUTLINED_FUNCTION_119_5(v70);
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v71, v72, "LLMQUModelResponse: adding hallucinated sort_order (\"%s\") to search_term.");
    OUTLINED_FUNCTION_128_4();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v101 = v292;
  if (v292)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_107_8();
      uint64_t v101 = v196;
    }
    OUTLINED_FUNCTION_176_2();
    uint64_t v105 = v101;
    if (v56)
    {
      OUTLINED_FUNCTION_81_8();
      uint64_t v105 = v102;
    }
    OUTLINED_FUNCTION_132_3(v102, v103, v104, v105);
    *(void *)(v106 + 32) = v216;
    *(void *)(v106 + 40) = v220;

    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v117 = OUTLINED_FUNCTION_170_2();
  *(_OWORD *)(v117 + 16) = xmmword_258661700;
  *(void *)(v117 + 32) = v216;
  *(void *)(v117 + 40) = v220;
  uint64_t v292 = v117;

  int v208 = 4;
LABEL_54:
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus and conformance LLMQUModelResponseAppEntityStatus();
  OUTLINED_FUNCTION_50_17();
  if (!v0)
  {
    swift_release();
    OUTLINED_FUNCTION_191_1();
    int v206 = v80;
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_209_1();
  id v73 = v0;
  id v74 = v0;
  os_log_type_t v75 = (void *)Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_29_13(v76))
  {
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_76_8();
    OUTLINED_FUNCTION_88_8(5.7779e-34);
    uint64_t v77 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_34_17(v77);
    OUTLINED_FUNCTION_133_2();

    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v78, v79, "LLMQUModelResponse: error decoding app entity status: %@. Dropping app entity status.");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_111_7();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  if (v26 == 1)
  {

LABEL_61:
    int v206 = 23;
    goto LABEL_69;
  }
  if (!v219)
  {

LABEL_68:
    int v206 = 23;
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  if ((OUTLINED_FUNCTION_208_1(v215, v219, 0xD000000000000011, 0x800000025867C940) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v81 = (void *)Logger.logObject.getter();
  os_log_type_t v82 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_29_13(v82))
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v83 = OUTLINED_FUNCTION_108_4();
    OUTLINED_FUNCTION_219_0(v83);
    OUTLINED_FUNCTION_75_6(4.8149e-34);
    OUTLINED_FUNCTION_177_2();
    uint64_t v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v215, v219, v84);
    OUTLINED_FUNCTION_119_5(v85);
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v86, v87, "LLMQUModelResponse: adding hallucinated app_entity_status (\"%s\") to search_term.");
    OUTLINED_FUNCTION_128_4();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v107 = v292;
  if (v292)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_107_8();
      uint64_t v107 = v197;
    }
    OUTLINED_FUNCTION_176_2();
    uint64_t v111 = v107;
    if (v56)
    {
      OUTLINED_FUNCTION_81_8();
      uint64_t v111 = v108;
    }
    OUTLINED_FUNCTION_132_3(v108, v109, v110, v111);
    *(void *)(v112 + 32) = v215;
    *(void *)(v112 + 40) = v219;

    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v118 = OUTLINED_FUNCTION_170_2();
  *(_OWORD *)(v118 + 16) = xmmword_258661700;
  *(void *)(v118 + 32) = v215;
  *(void *)(v118 + 40) = v219;
  uint64_t v292 = v118;

  int v206 = 23;
LABEL_69:
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference and conformance LLMQUModelResponseTemporalReference();
  OUTLINED_FUNCTION_50_17();
  if (!v0)
  {
    swift_release();
    OUTLINED_FUNCTION_191_1();
    int v204 = v94;
    goto LABEL_107;
  }
  OUTLINED_FUNCTION_209_1();
  id v88 = v0;
  id v89 = v0;
  uint64_t v90 = (void *)Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_29_13(v91))
  {
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_76_8();
    OUTLINED_FUNCTION_88_8(5.7779e-34);
    v270[0] = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_133_2();

    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v92, v93, "LLMQUModelResponse: error decoding temporal reference: %@. Dropping temporal reference.");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_111_7();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  if (v26 == 1 || !v218) {
    goto LABEL_105;
  }
  swift_bridgeObjectRetain();
  if ((OUTLINED_FUNCTION_208_1(v214, v218, 0xD000000000000012, 0x800000025867C960) & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_106:
    int v204 = 4;
    goto LABEL_107;
  }
  swift_bridgeObjectRetain_n();
  char v95 = (void *)Logger.logObject.getter();
  os_log_type_t v96 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_29_13(v96))
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v97 = OUTLINED_FUNCTION_108_4();
    OUTLINED_FUNCTION_219_0(v97);
    OUTLINED_FUNCTION_75_6(4.8149e-34);
    OUTLINED_FUNCTION_177_2();
    v269[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v214, v218, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_26_20(&dword_257DC6000, v99, v100, "LLMQUModelResponse: adding hallucinated temporal_reference (\"%s\") to search_term.");
    OUTLINED_FUNCTION_128_4();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v113 = v292;
  if (!v292)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v119 = OUTLINED_FUNCTION_170_2();
    *(_OWORD *)(v119 + 16) = xmmword_258661700;
    *(void *)(v119 + 32) = v214;
    *(void *)(v119 + 40) = v218;
    uint64_t v292 = v119;
LABEL_105:

    goto LABEL_106;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_109_0();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v113 = v198;
  }
  unint64_t v114 = *(void *)(v113 + 16);
  if (v114 >= *(void *)(v113 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v113 = v199;
  }
  *(void *)(v113 + 16) = v114 + 1;
  uint64_t v292 = v113;
  uint64_t v115 = v113 + 16 * v114;
  *(void *)(v115 + 32) = v214;
  *(void *)(v115 + 40) = v218;

  swift_bridgeObjectRelease();
  int v204 = 4;
LABEL_107:
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue and conformance LLMQUModelResponseAppEntityType_singleValue();
  OUTLINED_FUNCTION_50_17();
  swift_release();
  if (v0)
  {
    OUTLINED_FUNCTION_32_15();
    JSONDecoder.init()();
    lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue and conformance LLMQUModelResponseUnknownAppEntityType_singleValue();
    OUTLINED_FUNCTION_156_2();

    swift_release();
    char v229 = 0;
    int v120 = 74;
  }
  else
  {
    int v120 = LOBYTE(v270[0]);
    char v229 = 1;
  }
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_arrayValue and conformance LLMQUModelResponseAppEntityType_arrayValue();
  OUTLINED_FUNCTION_90_7();
  if (v0)
  {
    swift_release();
    OUTLINED_FUNCTION_32_15();
    JSONDecoder.init()();
    lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_arrayValue and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue();
    OUTLINED_FUNCTION_156_2();

    swift_release();
    uint64_t v122 = (void *)Logger.logObject.getter();
    os_log_type_t v123 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_63_5(v123))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_217_0(&dword_257DC6000, v124, v125, "LLMQUModelResponse: error decoding app entity type, as single value and array. Dropping app entity status.");
      OUTLINED_FUNCTION_34();
    }

    if ((v229 & 1) == 0)
    {
      id v126 = (void *)Logger.logObject.getter();
      os_log_type_t v127 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_63_5(v127))
      {
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OUTLINED_FUNCTION_217_0(&dword_257DC6000, v128, v129, "LLMQUModelResponse: Failed to decode unknown app_entity_type");
        OUTLINED_FUNCTION_34();
      }
    }
    uint64_t v121 = 1;
  }
  else
  {
    swift_release();
    uint64_t v121 = v270[0];
    outlined consume of LLMQUModelResponseInferredAppEntityType?(1);
  }
  uint64_t v212 = v121;
  if ((v120 - 73) > 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LLMQUModelAppEntityType>);
    uint64_t v130 = swift_allocObject();
    *(_OWORD *)(v130 + 16) = xmmword_258661700;
    uint64_t v200 = v130;
    *(unsigned char *)(v130 + 32) = v120;
  }
  else if (v121 == 1)
  {
    uint64_t v200 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v200 = v121;
  }
  OUTLINED_FUNCTION_32_15();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type LLMQUModelResponseInferredAppEntityType and conformance LLMQUModelResponseInferredAppEntityType();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v131 = MEMORY[0x263F8EE78];
  swift_release();
  uint64_t v132 = v270[0];
  uint64_t v213 = 1;
  outlined consume of LLMQUModelResponseInferredAppEntityType?(1);
  uint64_t v271 = v131;
  if (v132 == 1)
  {
    uint64_t v134 = v3;
    OUTLINED_FUNCTION_32_15();
    JSONDecoder.init()();
    lazy protocol witness table accessor for type LLMQUModelResponseUnknownInferredAppEntityType and conformance LLMQUModelResponseUnknownInferredAppEntityType();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    uint64_t v135 = v270[0];
    outlined consume of LLMQUModelResponseInferredAppEntityType?(1);
    if (v135)
    {
      uint64_t v213 = swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      char v133 = 1;
      OUTLINED_FUNCTION_204_1();
    }
    else
    {
      OUTLINED_FUNCTION_204_1();
      uint64_t v213 = 0;
      char v133 = 1;
    }
  }
  else
  {
    uint64_t v221 = v132;
    char v133 = 0;
    uint64_t v134 = v3;
  }
  swift_beginAccess();
  uint64_t v136 = *((void *)&v274 + 1);
  if (*((void *)&v274 + 1) >= 2uLL)
  {
    uint64_t v155 = v274;
    uint64_t v131 = v271;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_109_0();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v131 = v193;
    }
    unint64_t v156 = *(void *)(v131 + 16);
    if (v156 >= *(void *)(v131 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v131 = v194;
    }
    *(void *)(v131 + 16) = v156 + 1;
    uint64_t v157 = v131 + 16 * v156;
    *(void *)(v157 + 32) = v155;
    *(void *)(v157 + 40) = v136;
    uint64_t v271 = v131;
    if (v3) {
      goto LABEL_131;
    }
  }
  else if (v134)
  {
LABEL_131:
    char v202 = v133;
    uint64_t v137 = v271;
    uint64_t v138 = *(void *)(v271 + 16);
    if (v138)
    {
      swift_bridgeObjectRetain();
      uint64_t v139 = (unint64_t *)(v137 + 40);
      do
      {
        uint64_t v140 = *(v139 - 1);
        unint64_t v141 = *v139;
        String.lowercased()();
        Swift::String v142 = String.lowercased()();
        swift_bridgeObjectRetain();
        __C::_NSRange_optional v293 = String.nsRangeWithCompleteTokenMatch(of:)(v142);
        Swift::Bool is_nil = v293.is_nil;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (is_nil)
        {
          swift_bridgeObjectRetain();
          uint64_t v148 = Logger.logObject.getter();
          os_log_type_t v149 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v148, v149))
          {
            uint64_t v150 = (uint8_t *)OUTLINED_FUNCTION_14_1();
            v270[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v150 = 136315138;
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_177_2();
            v269[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v140, v141, v151);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, v148, v149, "LLMQUModelResponse: Dropping \"%s\". Could not find unknown [inferred_]app_entity_type in query.", v150, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
        }
        else if (v292)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v145 = v292;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_109_0();
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v145 = v153;
          }
          unint64_t v146 = *(void *)(v145 + 16);
          if (v146 >= *(void *)(v145 + 24) >> 1)
          {
            OUTLINED_FUNCTION_81_8();
            uint64_t v145 = v154;
          }
          *(void *)(v145 + 16) = v146 + 1;
          uint64_t v292 = v145;
          uint64_t v147 = v145 + 16 * v146;
          *(void *)(v147 + 32) = v140;
          *(void *)(v147 + 40) = v141;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          uint64_t v152 = OUTLINED_FUNCTION_170_2();
          *(_OWORD *)(v152 + 16) = xmmword_258661700;
          *(void *)(v152 + 32) = v140;
          *(void *)(v152 + 40) = v141;
          uint64_t v292 = v152;
        }
        v139 += 2;
        --v138;
      }
      while (v138);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    char v133 = v202;
    goto LABEL_156;
  }
  uint64_t v158 = Logger.logObject.getter();
  os_log_type_t v159 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_63_5(v159))
  {
    long long v160 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)long long v160 = 0;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v158, (os_log_type_t)v131, "LLMQUModelResponse: No query provided. Dropping unknown [inferred_]app_entity_types.", v160, 2u);
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
LABEL_156:
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v275, (uint64_t)v269, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v269, (uint64_t)v270, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  if (getEnumTag for ResultsDialog.RenderOption((uint64_t)v270) == 1) {
    char v161 = 2;
  }
  else {
    char v161 = v275[0];
  }
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v275, (uint64_t)v267, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v267, (uint64_t)v268, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  int Enum = getEnumTag for ResultsDialog.RenderOption((uint64_t)v268);
  char v163 = v275[1];
  if (Enum == 1) {
    char v163 = 2;
  }
  char v235 = v163;
  uint64_t v164 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v164, (uint64_t)v265, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v265, (uint64_t)v266, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v266);
  if (v37) {
    char v165 = 0;
  }
  else {
    char v165 = 1;
  }
  char v166 = v275[2];
  char v167 = v210;
  if (v210 == 12) {
    char v167 = 11;
  }
  char v168 = v208;
  if (v208 == 4) {
    char v168 = 3;
  }
  char v234 = v167;
  char v232 = v168;
  if (v133) {
    uint64_t v230 = 0;
  }
  else {
    uint64_t v230 = swift_bridgeObjectRetain();
  }
  if (v206 == 23) {
    char v169 = 22;
  }
  else {
    char v169 = v206;
  }
  if (v204 == 4) {
    char v170 = 3;
  }
  else {
    char v170 = v204;
  }
  uint64_t v171 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v171, (uint64_t)v263, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v263, (uint64_t)v264, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v264);
  if (v37)
  {
    uint64_t v231 = 0;
  }
  else
  {
    uint64_t v231 = v277;
    swift_bridgeObjectRetain();
  }
  uint64_t v172 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v172, (uint64_t)v261, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v261, (uint64_t)v262, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v262);
  if (v37)
  {
    uint64_t v226 = 0;
  }
  else
  {
    uint64_t v226 = v278;
    swift_bridgeObjectRetain();
  }
  uint64_t v173 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v173, (uint64_t)v259, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v259, (uint64_t)v260, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v260);
  if (v37)
  {
    uint64_t v225 = 0;
  }
  else
  {
    uint64_t v225 = v279;
    swift_bridgeObjectRetain();
  }
  uint64_t v174 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v174, (uint64_t)v257, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v257, (uint64_t)v258, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v258);
  if (v37)
  {
    uint64_t v224 = 0;
  }
  else
  {
    uint64_t v224 = v280;
    swift_bridgeObjectRetain();
  }
  uint64_t v175 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v175, (uint64_t)v255, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v255, (uint64_t)v256, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v256);
  if (v37)
  {
    uint64_t v222 = 0;
  }
  else
  {
    uint64_t v222 = v281;
    swift_bridgeObjectRetain();
  }
  uint64_t v176 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v176, (uint64_t)v253, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v253, (uint64_t)v254, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v254);
  if (v37)
  {
    uint64_t v211 = 0;
  }
  else
  {
    uint64_t v211 = v282;
    swift_bridgeObjectRetain();
  }
  uint64_t v177 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v177, (uint64_t)v251, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v251, (uint64_t)v252, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v252);
  if (v37)
  {
    uint64_t v209 = 0;
  }
  else
  {
    uint64_t v209 = v283;
    swift_bridgeObjectRetain();
  }
  uint64_t v178 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v178, (uint64_t)v249, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v249, (uint64_t)v250, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v250);
  if (v37)
  {
    uint64_t v207 = 0;
  }
  else
  {
    uint64_t v207 = v284;
    swift_bridgeObjectRetain();
  }
  uint64_t v179 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v179, (uint64_t)v247, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v247, (uint64_t)v248, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v248);
  if (v37)
  {
    uint64_t v205 = 0;
  }
  else
  {
    uint64_t v205 = v285;
    swift_bridgeObjectRetain();
  }
  uint64_t v180 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v180, (uint64_t)v245, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v245, (uint64_t)v246, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v246);
  if (v37)
  {
    uint64_t v203 = 0;
  }
  else
  {
    uint64_t v203 = v286;
    swift_bridgeObjectRetain();
  }
  uint64_t v181 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v181, (uint64_t)v243, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v243, (uint64_t)v244, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v244);
  if (v37)
  {
    uint64_t v201 = 0;
  }
  else
  {
    uint64_t v201 = v287;
    swift_bridgeObjectRetain();
  }
  uint64_t v182 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v182, (uint64_t)v241, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v241, (uint64_t)v242, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  char v183 = v169;
  if (getEnumTag for ResultsDialog.RenderOption((uint64_t)v242) == 1)
  {
    uint64_t v184 = 0;
  }
  else
  {
    uint64_t v184 = v288;
    swift_bridgeObjectRetain();
  }
  uint64_t v185 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v185, (uint64_t)v239, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v239, (uint64_t)v240, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  char v186 = v161;
  if (getEnumTag for ResultsDialog.RenderOption((uint64_t)v240) == 1)
  {
    uint64_t v187 = 0;
  }
  else
  {
    uint64_t v187 = v289;
    swift_bridgeObjectRetain();
  }
  char v188 = v165 & v166;
  uint64_t v189 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v189, (uint64_t)v237, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v237, (uint64_t)v238, &demangling cache variable for type metadata for LLMQUModelResponseNonEnumArgs?);
  OUTLINED_FUNCTION_77_10((uint64_t)v238);
  if (v37)
  {
    uint64_t v190 = 0;
  }
  else
  {
    uint64_t v190 = v290;
    swift_bridgeObjectRetain();
  }
  outlined consume of Data?(v228, v233);
  outlined consume of LLMQUModelResponseStringEnums?(v217, v227);
  outlined consume of LLMQUModelResponseInferredAppEntityType?(v213);
  outlined consume of LLMQUModelResponseInferredAppEntityType?(v221);
  outlined consume of LLMQUModelResponseInferredAppEntityType?(1);
  outlined consume of LLMQUModelResponseUnknownAppEntityType_singleValue?(v274, *((uint64_t *)&v274 + 1));
  outlined consume of LLMQUModelResponseInferredAppEntityType?(v212);
  uint64_t v191 = OUTLINED_FUNCTION_49_13();
  outlined init with take of PQAVerificationModelProtocol?(v191, (uint64_t)v236, v192);
  outlined release of LLMQUModelResponseNonEnumArgs?(v236);
  *(unsigned char *)uint64_t v223 = v186;
  *(unsigned char *)(v223 + 1) = v235;
  *(unsigned char *)(v223 + 2) = v188;
  *(unsigned char *)(v223 + 3) = v234;
  *(unsigned char *)(v223 + 4) = v232;
  *(void *)(v223 + 8) = v200;
  *(void *)(v223 + 16) = v230;
  *(unsigned char *)(v223 + 24) = v183;
  *(unsigned char *)(v223 + 25) = v170;
  *(void *)(v223 + 32) = v292;
  *(void *)(v223 + 40) = v231;
  *(void *)(v223 + 48) = v226;
  *(void *)(v223 + 56) = v225;
  *(void *)(v223 + 64) = v224;
  *(void *)(v223 + 72) = v222;
  *(void *)(v223 + 80) = v211;
  *(void *)(v223 + 88) = v209;
  *(void *)(v223 + 96) = v207;
  *(void *)(v223 + 104) = v205;
  *(void *)(v223 + 112) = v203;
  *(void *)(v223 + 120) = v201;
  *(void *)(v223 + 128) = v184;
  *(void *)(v223 + 136) = v187;
  *(void *)(v223 + 144) = v190;
LABEL_220:
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

uint64_t static LLMQUModelResponse.isValidQueryTerm(term:fieldname:query:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    String.lowercased()();
    Swift::String v10 = String.lowercased()();
    __C::_NSRange_optional v30 = String.nsRangeWithCompleteTokenMatch(of:)(v10);
    Swift::Bool is_nil = v30.is_nil;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!is_nil) {
      return 1;
    }
    if (one-time initialization token for llmQU != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logging.llmQU);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a3, a4, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v14, v26, "LLMQUModelResponse: Dropping \"%s\". Could not find unknown %s in query.", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v28, -1, -1);
      uint64_t v24 = (_DWORD *)v27;
      goto LABEL_12;
    }

    swift_bridgeObjectRelease_n();
LABEL_15:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  if (one-time initialization token for llmQU != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logging.llmQU);
  swift_bridgeObjectRetain_n();
  os_log_type_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v14, v15))
  {

    goto LABEL_15;
  }
  id v16 = (_DWORD *)swift_slowAlloc();
  uint64_t v17 = swift_slowAlloc();
  uint64_t v29 = v17;
  *id v16 = 136315138;
  swift_bridgeObjectRetain();
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a3, a4, &v29);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_215_0();
  _os_log_impl(v18, v19, v20, v21, v22, v23);
  swift_arrayDestroy();
  MEMORY[0x25A2C94B0](v17, -1, -1);
  uint64_t v24 = v16;
LABEL_12:
  MEMORY[0x25A2C94B0](v24, -1, -1);

  return 0;
}

__n128 LLMQUModelResponse.init(question:open:singular:event_type:sort_order:app_entity_type:inferred_app_entity_type:app_entity_status:temporal_reference:search_term:time:source:attachment_type:tag_name:flag_color:media_type:file_format:person_name:person_sender:person_receiver:person_oneself:location:arrival:departure:)@<Q0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, __n128 a17, uint64_t a18)
{
  __n128 result = a17;
  char v19 = *a4;
  char v20 = *a5;
  char v21 = *a8;
  char v22 = *a10;
  *(unsigned char *)a9 = a1;
  *(unsigned char *)(a9 + 1) = a2;
  *(unsigned char *)(a9 + 2) = a3;
  *(unsigned char *)(a9 + 3) = v19;
  *(unsigned char *)(a9 + 4) = v20;
  *(void *)(a9 + 8) = a6;
  *(void *)(a9 + 16) = a7;
  *(unsigned char *)(a9 + 24) = v21;
  *(unsigned char *)(a9 + 25) = v22;
  *(_OWORD *)(a9 + 32) = a11;
  *(_OWORD *)(a9 + 48) = a12;
  *(_OWORD *)(a9 + 64) = a13;
  *(_OWORD *)(a9 + 80) = a14;
  *(_OWORD *)(a9 + 96) = a15;
  *(_OWORD *)(a9 + 112) = a16;
  *(__n128 *)(a9 + 128) = a17;
  *(void *)(a9 + 144) = a18;
  return result;
}

void LLMQUModelResponse.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponse.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_39();
  uint64_t v7 = v3[3];
  unint64_t v8 = v3;
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v8, v7);
  lazy protocol witness table accessor for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v0)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType();
    OUTLINED_FUNCTION_63_7();
    lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder();
    OUTLINED_FUNCTION_63_7();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
    lazy protocol witness table accessor for type [LLMQUModelAppEntityType] and conformance <A> [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityType] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
    OUTLINED_FUNCTION_118_5();
    OUTLINED_FUNCTION_201_0(6);
    OUTLINED_FUNCTION_118_5();
    lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus();
    OUTLINED_FUNCTION_63_7();
    lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference();
    OUTLINED_FUNCTION_63_7();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_118_5();
    OUTLINED_FUNCTION_201_0(10);
    OUTLINED_FUNCTION_118_5();
    OUTLINED_FUNCTION_5_22(11);
    OUTLINED_FUNCTION_5_22(12);
    OUTLINED_FUNCTION_5_22(13);
    OUTLINED_FUNCTION_5_22(14);
    OUTLINED_FUNCTION_5_22(15);
    OUTLINED_FUNCTION_5_22(16);
    OUTLINED_FUNCTION_5_22(17);
    OUTLINED_FUNCTION_5_22(18);
    OUTLINED_FUNCTION_5_22(19);
    OUTLINED_FUNCTION_5_22(20);
    OUTLINED_FUNCTION_5_22(21);
    OUTLINED_FUNCTION_5_22(22);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v10);
  OUTLINED_FUNCTION_120_0();
}

void LLMQUModelResponse.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v13 = v12;
  os_log_type_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponse.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_13_12();
  uint64_t v17 = v13[3];
  uint64_t v18 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v17);
  lazy protocol witness table accessor for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v43 = (uint64_t)v13;
  if (v10)
  {
    OUTLINED_FUNCTION_51_14();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    LOBYTE(v52) = 2;
    BYTE1(v52) = (_BYTE)v15;
    BYTE2(v52) = v11;
    BYTE3(v52) = v17;
    BYTE4(v52) = v18;
    *(_WORD *)((char *)&v52 + 5) = v66;
    HIBYTE(v52) = v67;
    uint64_t v53 = a10;
    uint64_t v54 = v47;
    char v55 = v10;
    char v56 = (char)v13;
    int v57 = v65;
    OUTLINED_FUNCTION_61_8();
    uint64_t v58 = v38;
    uint64_t v59 = v36;
    uint64_t v60 = v34;
    uint64_t v61 = v32;
    uint64_t v62 = v30;
    uint64_t v63 = v28;
    uint64_t v64 = 0;
  }
  else
  {
    LOBYTE(v52) = 0;
    char v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v25 = OUTLINED_FUNCTION_213_1(1);
    unsigned __int8 v24 = OUTLINED_FUNCTION_213_1(2);
    lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType();
    OUTLINED_FUNCTION_80_9();
    lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder();
    OUTLINED_FUNCTION_80_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
    lazy protocol witness table accessor for type [LLMQUModelAppEntityType] and conformance <A> [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityType] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
    OUTLINED_FUNCTION_115_4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v68 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_115_4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v48 = v52;
    lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference();
    OUTLINED_FUNCTION_80_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_115_4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v19 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v20 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v46 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v45 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v44 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v42 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v41 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v40 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v39 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v37 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v35 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    uint64_t v33 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    LOBYTE(v49[0]) = 22;
    uint64_t v31 = v52;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_24();
    char v50 = 23;
    uint64_t v29 = v52;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v21 = OUTLINED_FUNCTION_6_26();
    v22(v21);
    uint64_t v23 = v51;
    uint64_t v27 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v49[0]) = v26;
    BYTE1(v49[0]) = v25;
    WORD1(v49[0]) = v24;
    BYTE4(v49[0]) = 0;
    v49[1] = v68;
    v49[2] = v48;
    LOWORD(v49[3]) = 0;
    v49[4] = v19;
    v49[5] = v20;
    v49[6] = v46;
    v49[7] = v45;
    v49[8] = v44;
    v49[9] = v42;
    v49[10] = v41;
    v49[11] = v40;
    v49[12] = v39;
    v49[13] = v37;
    v49[14] = v35;
    v49[15] = v33;
    v49[16] = v31;
    v49[17] = v29;
    v49[18] = v23;
    outlined retain of LLMQUModelResponse((uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v15, v49, 0x98uLL);
    __swift_destroy_boxed_opaque_existential_1Tm(v43);
    LOBYTE(v52) = v26;
    BYTE1(v52) = v25;
    WORD1(v52) = v24;
    BYTE4(v52) = 0;
    *(_WORD *)((char *)&v52 + 5) = v66;
    HIBYTE(v52) = v67;
    uint64_t v53 = v68;
    uint64_t v54 = v48;
    char v55 = 0;
    char v56 = 0;
    int v57 = v65;
    OUTLINED_FUNCTION_61_8();
    uint64_t v58 = v39;
    uint64_t v59 = v37;
    uint64_t v60 = v35;
    uint64_t v61 = v33;
    uint64_t v62 = v31;
    uint64_t v63 = v29;
    uint64_t v64 = v27;
  }
  outlined release of LLMQUModelResponse((uint64_t)&v52);
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Generable.init(from:) in conformance LLMQUModelResponse()
{
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LLMQUModelResponse.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponse()
{
}

uint64_t LLMQUModelEventType.Streaming.value.getter()
{
  OUTLINED_FUNCTION_27();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>.Iterator);
  OUTLINED_FUNCTION_3_31(v3);
  v1[6] = v4;
  v1[7] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_68_10();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
  MEMORY[0x25A2C8090](v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_96_7(v1);
  *uint64_t v2 = v3;
  v2[1] = LLMQUModelEventType.Streaming.value.getter;
  uint64_t v4 = OUTLINED_FUNCTION_23_16();
  return MEMORY[0x270FA20F8](v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  int v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = OUTLINED_FUNCTION_44_18();
  v2(v1);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 72);
  if (v3 != 11) {
    **(unsigned char **)(v0 + 24) = v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelEventType>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_71_9();
  v5(v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v6();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t LLMQUModelEventType.Streaming.init(objectID:decoder:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_179_1(v1, v2, v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
  OUTLINED_FUNCTION_3_31(v4);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = OUTLINED_FUNCTION_184_2(v6);
  uint64_t v8 = type metadata accessor for LLMQUModelEventType.Streaming(v7);
  OUTLINED_FUNCTION_81(v8);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_60_8();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_196_1(v1);
  lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType();
  OUTLINED_FUNCTION_105_9();
  *uint64_t v0 = v2;
  v0[1] = LLMQUModelEventType.Streaming.init(objectID:decoder:);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_22_20();
  return MEMORY[0x270F2F278]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void *)(v0 + 32);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v2();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

uint64_t LLMQUModelEventType.Streaming.init(objectID:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_30_21();
  uint64_t v13 = v12(v11);
  OUTLINED_FUNCTION_193_1(v13, v14, (void (*)(void))type metadata accessor for LLMQUModelEventType.Streaming);
  OUTLINED_FUNCTION_131_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_139();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t protocol witness for GenerableStreaming.init(objectID:decoder:) in conformance LLMQUModelEventType.Streaming()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return LLMQUModelEventType.Streaming.init(objectID:decoder:)();
}

uint64_t static LLMQUModelEventType.collect(_:)(uint64_t a1)
{
  return static LLMQUModelEventType.collect(_:)(a1, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType.Streaming, Error>.Iterator, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType.Streaming, Error>, (uint64_t)&async function pointer to partial apply for closure #1 in static LLMQUModelEventType.collect(_:), (uint64_t)&type metadata for LLMQUModelEventType);
}

uint64_t closure #1 in static LLMQUModelEventType.collect(_:)(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelEventType>);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LLMQUModelEventType.Streaming?);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for LLMQUModelEventType.Streaming(0);
  v1[11] = swift_task_alloc();
  v1[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType.Streaming, Error>.Iterator);
  v1[13] = swift_projectBox();
  return MEMORY[0x270FA2498](closure #1 in static LLMQUModelEventType.collect(_:), 0, 0);
}

uint64_t closure #1 in static LLMQUModelEventType.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_67_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_27_4(v0);
  void *v1 = v2;
  v1[1] = closure #1 in static LLMQUModelEventType.collect(_:);
  uint64_t v3 = OUTLINED_FUNCTION_104_9();
  return MEMORY[0x270FA2100](v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned char *v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_59_11();
  if (v2)
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for LLMQUModelEventType.Streaming?);
    OUTLINED_FUNCTION_171_2();
    *uint64_t v3 = 11;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v4();
  }
  else
  {
    outlined init with take of LLMQUModelEventType.Streaming(v0, *(void *)(v1 + 88), (void (*)(void))type metadata accessor for LLMQUModelEventType.Streaming);
    uint64_t v6 = swift_task_alloc();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_97_4(v6);
    *uint64_t v7 = v8;
    v7[1] = closure #1 in static LLMQUModelEventType.collect(_:);
    OUTLINED_FUNCTION_103_8();
    return LLMQUModelEventType.Streaming.value.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t (*v13)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = OUTLINED_FUNCTION_42_12();
  v2(v1);
  OUTLINED_FUNCTION_66_9();
  if (v3)
  {
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelEventType.Streaming);
    uint64_t v4 = OUTLINED_FUNCTION_41_17();
    v5(v4);
    OUTLINED_FUNCTION_40_14();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_5();
    v7(v6);
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    uint64_t v8 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_72_8(v8, v9);
    OUTLINED_FUNCTION_102_5(v10, v11);
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v12();
    swift_willThrow();
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelEventType.Streaming);
    OUTLINED_FUNCTION_173_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_113_8();
  }
  return v13();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_49();
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  outlined destroy of LLMQUModelTemporalReference.Streaming(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for LLMQUModelEventType.Streaming);
  OUTLINED_FUNCTION_100_8();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

OmniSearch::LLMQUModelEventType_optional __swiftcall LLMQUModelEventType.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_59_8();
  v3._object = v1;
  unint64_t v4 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of LLMQUModelEventType.init(rawValue:), v3);
  result.value = swift_bridgeObjectRelease();
  char v6 = 11;
  if (v4 < 0xB) {
    char v6 = v4;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static LLMQUModelEventType.allCases.getter()
{
  return &outlined read-only object #0 of static LLMQUModelEventType.allCases.getter;
}

void LLMQUModelEventType.rawValue.getter()
{
  switch(*v0)
  {
    case 5:
      OUTLINED_FUNCTION_162_2();
      break;
    case 9:
      OUTLINED_FUNCTION_93_5();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance LLMQUModelEventType()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LLMQUModelEventType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance LLMQUModelEventType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LLMQUModelEventType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::LLMQUModelEventType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelEventType(Swift::String *a1)
{
  return LLMQUModelEventType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelEventType(void *a1@<X8>)
{
  LLMQUModelEventType.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for Decodable.init(from:) in conformance LLMQUModelEventType()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelEventType()
{
  return RawRepresentable<>.encode(to:)();
}

void protocol witness for static CaseIterable.allCases.getter in conformance LLMQUModelEventType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static LLMQUModelEventType.allCases.getter;
}

uint64_t LLMQUModelSortOrder.Streaming.value.getter()
{
  OUTLINED_FUNCTION_27();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>.Iterator);
  OUTLINED_FUNCTION_3_31(v3);
  v1[6] = v4;
  v1[7] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_68_10();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
  MEMORY[0x25A2C8090](v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_96_7(v1);
  *uint64_t v2 = v3;
  v2[1] = LLMQUModelSortOrder.Streaming.value.getter;
  uint64_t v4 = OUTLINED_FUNCTION_23_16();
  return MEMORY[0x270FA20F8](v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  int v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = OUTLINED_FUNCTION_44_18();
  v2(v1);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 72);
  if (v3 != 3) {
    **(unsigned char **)(v0 + 24) = v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelSortOrder>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_71_9();
  v5(v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v6();
}

uint64_t LLMQUModelSortOrder.Streaming.init(objectID:decoder:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_179_1(v1, v2, v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
  OUTLINED_FUNCTION_3_31(v4);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = OUTLINED_FUNCTION_184_2(v6);
  uint64_t v8 = type metadata accessor for LLMQUModelSortOrder.Streaming(v7);
  OUTLINED_FUNCTION_81(v8);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_60_8();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_196_1(v1);
  lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder();
  OUTLINED_FUNCTION_105_9();
  *uint64_t v0 = v2;
  v0[1] = LLMQUModelSortOrder.Streaming.init(objectID:decoder:);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_22_20();
  return MEMORY[0x270F2F278]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t LLMQUModelSortOrder.Streaming.init(objectID:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_30_21();
  uint64_t v13 = v12(v11);
  OUTLINED_FUNCTION_193_1(v13, v14, (void (*)(void))type metadata accessor for LLMQUModelSortOrder.Streaming);
  OUTLINED_FUNCTION_131_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_139();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t protocol witness for GenerableStreaming.init(objectID:decoder:) in conformance LLMQUModelSortOrder.Streaming()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return LLMQUModelSortOrder.Streaming.init(objectID:decoder:)();
}

uint64_t static LLMQUModelSortOrder.collect(_:)(uint64_t a1)
{
  return static LLMQUModelEventType.collect(_:)(a1, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder.Streaming, Error>.Iterator, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder.Streaming, Error>, (uint64_t)&async function pointer to partial apply for closure #1 in static LLMQUModelSortOrder.collect(_:), (uint64_t)&type metadata for LLMQUModelSortOrder);
}

uint64_t closure #1 in static LLMQUModelSortOrder.collect(_:)(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelSortOrder>);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LLMQUModelSortOrder.Streaming?);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for LLMQUModelSortOrder.Streaming(0);
  v1[11] = swift_task_alloc();
  v1[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder.Streaming, Error>.Iterator);
  v1[13] = swift_projectBox();
  return MEMORY[0x270FA2498](closure #1 in static LLMQUModelSortOrder.collect(_:), 0, 0);
}

uint64_t closure #1 in static LLMQUModelSortOrder.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_67_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_27_4(v0);
  void *v1 = v2;
  v1[1] = closure #1 in static LLMQUModelSortOrder.collect(_:);
  uint64_t v3 = OUTLINED_FUNCTION_104_9();
  return MEMORY[0x270FA2100](v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_59_11();
  if (v2)
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for LLMQUModelSortOrder.Streaming?);
    OUTLINED_FUNCTION_172_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v3();
  }
  else
  {
    outlined init with take of LLMQUModelEventType.Streaming(v0, *(void *)(v1 + 88), (void (*)(void))type metadata accessor for LLMQUModelSortOrder.Streaming);
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_97_4(v5);
    *uint64_t v6 = v7;
    v6[1] = closure #1 in static LLMQUModelSortOrder.collect(_:);
    OUTLINED_FUNCTION_103_8();
    return LLMQUModelSortOrder.Streaming.value.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t (*v13)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = OUTLINED_FUNCTION_42_12();
  v2(v1);
  OUTLINED_FUNCTION_66_9();
  if (v3)
  {
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelSortOrder.Streaming);
    uint64_t v4 = OUTLINED_FUNCTION_41_17();
    v5(v4);
    OUTLINED_FUNCTION_40_14();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_5();
    v7(v6);
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    uint64_t v8 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_72_8(v8, v9);
    OUTLINED_FUNCTION_102_5(v10, v11);
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v12();
    swift_willThrow();
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelSortOrder.Streaming);
    OUTLINED_FUNCTION_173_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_113_8();
  }
  return v13();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  outlined destroy of LLMQUModelTemporalReference.Streaming(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for LLMQUModelSortOrder.Streaming);
  OUTLINED_FUNCTION_100_8();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

OmniSearch::LLMQUModelSortOrder_optional __swiftcall LLMQUModelSortOrder.init(rawValue:)(Swift::String rawValue)
{
  return (OmniSearch::LLMQUModelSortOrder_optional)LLMQUModelSortOrder.init(rawValue:)();
}

void *static LLMQUModelSortOrder.allCases.getter()
{
  return &outlined read-only object #0 of static LLMQUModelSortOrder.allCases.getter;
}

uint64_t LLMQUModelSortOrder.rawValue.getter()
{
  uint64_t v1 = 1954047342;
  if (*v0 != 1) {
    uint64_t v1 = 0x7473726966;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1953718636;
  }
}

OmniSearch::LLMQUModelSortOrder_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelSortOrder(Swift::String *a1)
{
  return LLMQUModelSortOrder.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelSortOrder@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LLMQUModelSortOrder.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance LLMQUModelSortOrder()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelSortOrder()
{
  return RawRepresentable<>.encode(to:)();
}

void protocol witness for static CaseIterable.allCases.getter in conformance LLMQUModelSortOrder(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static LLMQUModelSortOrder.allCases.getter;
}

uint64_t LLMQUModelAppEntityType.Streaming.value.getter()
{
  OUTLINED_FUNCTION_27();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>.Iterator);
  OUTLINED_FUNCTION_3_31(v3);
  v1[6] = v4;
  v1[7] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_68_10();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
  MEMORY[0x25A2C8090](v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_96_7(v1);
  *uint64_t v2 = v3;
  v2[1] = LLMQUModelAppEntityType.Streaming.value.getter;
  uint64_t v4 = OUTLINED_FUNCTION_23_16();
  return MEMORY[0x270FA20F8](v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  int v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = OUTLINED_FUNCTION_44_18();
  v2(v1);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 72);
  if (v3 != 73) {
    **(unsigned char **)(v0 + 24) = v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelAppEntityType>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_71_9();
  v5(v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v6();
}

uint64_t LLMQUModelAppEntityType.Streaming.init(objectID:decoder:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_179_1(v1, v2, v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
  OUTLINED_FUNCTION_3_31(v4);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = OUTLINED_FUNCTION_184_2(v6);
  uint64_t v8 = type metadata accessor for LLMQUModelAppEntityType.Streaming(v7);
  OUTLINED_FUNCTION_81(v8);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_60_8();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_196_1(v1);
  lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType();
  OUTLINED_FUNCTION_105_9();
  *uint64_t v0 = v2;
  v0[1] = LLMQUModelAppEntityType.Streaming.init(objectID:decoder:);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_22_20();
  return MEMORY[0x270F2F278]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t LLMQUModelAppEntityType.Streaming.init(objectID:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_30_21();
  uint64_t v13 = v12(v11);
  OUTLINED_FUNCTION_193_1(v13, v14, (void (*)(void))type metadata accessor for LLMQUModelAppEntityType.Streaming);
  OUTLINED_FUNCTION_131_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_139();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t protocol witness for GenerableStreaming.init(objectID:decoder:) in conformance LLMQUModelAppEntityType.Streaming()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return LLMQUModelAppEntityType.Streaming.init(objectID:decoder:)();
}

uint64_t static LLMQUModelAppEntityType.collect(_:)(uint64_t a1)
{
  return static LLMQUModelEventType.collect(_:)(a1, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType.Streaming, Error>.Iterator, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType.Streaming, Error>, (uint64_t)&async function pointer to partial apply for closure #1 in static LLMQUModelAppEntityType.collect(_:), (uint64_t)&type metadata for LLMQUModelAppEntityType);
}

uint64_t closure #1 in static LLMQUModelAppEntityType.collect(_:)(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelAppEntityType>);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LLMQUModelAppEntityType.Streaming?);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for LLMQUModelAppEntityType.Streaming(0);
  v1[11] = swift_task_alloc();
  v1[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType.Streaming, Error>.Iterator);
  v1[13] = swift_projectBox();
  return MEMORY[0x270FA2498](closure #1 in static LLMQUModelAppEntityType.collect(_:), 0, 0);
}

uint64_t closure #1 in static LLMQUModelAppEntityType.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_67_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_27_4(v0);
  void *v1 = v2;
  v1[1] = closure #1 in static LLMQUModelAppEntityType.collect(_:);
  uint64_t v3 = OUTLINED_FUNCTION_104_9();
  return MEMORY[0x270FA2100](v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned char *v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_59_11();
  if (v2)
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for LLMQUModelAppEntityType.Streaming?);
    OUTLINED_FUNCTION_171_2();
    *uint64_t v3 = 73;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v4();
  }
  else
  {
    outlined init with take of LLMQUModelEventType.Streaming(v0, *(void *)(v1 + 88), (void (*)(void))type metadata accessor for LLMQUModelAppEntityType.Streaming);
    uint64_t v6 = swift_task_alloc();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_97_4(v6);
    *uint64_t v7 = v8;
    v7[1] = closure #1 in static LLMQUModelAppEntityType.collect(_:);
    OUTLINED_FUNCTION_103_8();
    return LLMQUModelAppEntityType.Streaming.value.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t (*v13)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = OUTLINED_FUNCTION_42_12();
  v2(v1);
  OUTLINED_FUNCTION_66_9();
  if (v3)
  {
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelAppEntityType.Streaming);
    uint64_t v4 = OUTLINED_FUNCTION_41_17();
    v5(v4);
    OUTLINED_FUNCTION_40_14();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_5();
    v7(v6);
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    uint64_t v8 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_72_8(v8, v9);
    OUTLINED_FUNCTION_102_5(v10, v11);
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v12();
    swift_willThrow();
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelAppEntityType.Streaming);
    OUTLINED_FUNCTION_173_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_113_8();
  }
  return v13();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  outlined destroy of LLMQUModelTemporalReference.Streaming(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for LLMQUModelAppEntityType.Streaming);
  OUTLINED_FUNCTION_100_8();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

OmniSearch::LLMQUModelAppEntityType_optional __swiftcall LLMQUModelAppEntityType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 55;
  switch(v3)
  {
    case 0:
      goto LABEL_57;
    case 1:
      char v5 = 1;
      goto LABEL_57;
    case 2:
      char v5 = 2;
      goto LABEL_57;
    case 3:
      char v5 = 3;
      goto LABEL_57;
    case 4:
      char v5 = 4;
      goto LABEL_57;
    case 5:
      char v5 = 5;
      goto LABEL_57;
    case 6:
      char v5 = 6;
      goto LABEL_57;
    case 7:
      char v5 = 7;
      goto LABEL_57;
    case 8:
      char v5 = 8;
      goto LABEL_57;
    case 9:
      char v5 = 9;
      goto LABEL_57;
    case 10:
      char v5 = 10;
      goto LABEL_57;
    case 11:
      char v5 = 11;
      goto LABEL_57;
    case 12:
      char v5 = 12;
      goto LABEL_57;
    case 13:
      char v5 = 13;
      goto LABEL_57;
    case 14:
      char v5 = 14;
      goto LABEL_57;
    case 15:
      char v5 = 15;
      goto LABEL_57;
    case 16:
      char v5 = 16;
      goto LABEL_57;
    case 17:
      char v5 = 17;
      goto LABEL_57;
    case 18:
      char v5 = 18;
      goto LABEL_57;
    case 19:
      char v5 = 19;
      goto LABEL_57;
    case 20:
      char v5 = 20;
      goto LABEL_57;
    case 21:
      char v5 = 21;
      goto LABEL_57;
    case 22:
      char v5 = 22;
      goto LABEL_57;
    case 23:
      char v5 = 23;
      goto LABEL_57;
    case 24:
      char v5 = 24;
      goto LABEL_57;
    case 25:
      char v5 = 25;
      goto LABEL_57;
    case 26:
      char v5 = 26;
      goto LABEL_57;
    case 27:
      char v5 = 27;
      goto LABEL_57;
    case 28:
      char v5 = 28;
      goto LABEL_57;
    case 29:
      char v5 = 29;
      goto LABEL_57;
    case 30:
      char v5 = 30;
      goto LABEL_57;
    case 31:
      char v5 = 31;
      goto LABEL_57;
    case 32:
      char v5 = 32;
      goto LABEL_57;
    case 33:
      char v5 = 33;
      goto LABEL_57;
    case 34:
      char v5 = 34;
      goto LABEL_57;
    case 35:
      char v5 = 35;
      goto LABEL_57;
    case 36:
      char v5 = 36;
      goto LABEL_57;
    case 37:
      char v5 = 37;
      goto LABEL_57;
    case 38:
      char v5 = 38;
      goto LABEL_57;
    case 39:
      char v5 = 39;
      goto LABEL_57;
    case 40:
      char v5 = 40;
      goto LABEL_57;
    case 41:
      char v5 = 41;
      goto LABEL_57;
    case 42:
      char v5 = 42;
      goto LABEL_57;
    case 43:
      char v5 = 43;
      goto LABEL_57;
    case 44:
      char v5 = 44;
      goto LABEL_57;
    case 45:
      char v5 = 45;
      goto LABEL_57;
    case 46:
      char v5 = 46;
      goto LABEL_57;
    case 47:
      char v5 = 47;
      goto LABEL_57;
    case 48:
      char v5 = 48;
      goto LABEL_57;
    case 49:
      char v5 = 49;
      goto LABEL_57;
    case 50:
      char v5 = 50;
      goto LABEL_57;
    case 51:
      char v5 = 51;
      goto LABEL_57;
    case 52:
      char v5 = 52;
      goto LABEL_57;
    case 53:
      char v5 = 53;
      goto LABEL_57;
    case 54:
      char v5 = 54;
LABEL_57:
      char v6 = v5;
      break;
    case 55:
      break;
    case 56:
      char v6 = 56;
      break;
    case 57:
      char v6 = 57;
      break;
    case 58:
      char v6 = 58;
      break;
    case 59:
      char v6 = 59;
      break;
    case 60:
      char v6 = 60;
      break;
    case 61:
      char v6 = 61;
      break;
    case 62:
      char v6 = 62;
      break;
    case 63:
      char v6 = 63;
      break;
    case 64:
      char v6 = 64;
      break;
    case 65:
      char v6 = 65;
      break;
    case 66:
      char v6 = 66;
      break;
    case 67:
      char v6 = 67;
      break;
    case 68:
      char v6 = 68;
      break;
    case 69:
      char v6 = 69;
      break;
    case 70:
      char v6 = 70;
      break;
    case 71:
      char v6 = 71;
      break;
    case 72:
      char v6 = 72;
      break;
    default:
      char v6 = 73;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static LLMQUModelAppEntityType.allCases.getter()
{
  return &outlined read-only object #0 of static LLMQUModelAppEntityType.allCases.getter;
}

void LLMQUModelAppEntityType.rawValue.getter()
{
  switch(*v0)
  {
    case 0x19:
      OUTLINED_FUNCTION_162_2();
      break;
    case 0x2B:
      OUTLINED_FUNCTION_93_5();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance LLMQUModelAppEntityType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LLMQUModelAppEntityType()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance LLMQUModelAppEntityType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LLMQUModelAppEntityType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::LLMQUModelAppEntityType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelAppEntityType(Swift::String *a1)
{
  return LLMQUModelAppEntityType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelAppEntityType(void *a1@<X8>)
{
  LLMQUModelAppEntityType.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for Decodable.init(from:) in conformance LLMQUModelAppEntityType()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelAppEntityType()
{
  return RawRepresentable<>.encode(to:)();
}

void protocol witness for static CaseIterable.allCases.getter in conformance LLMQUModelAppEntityType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static LLMQUModelAppEntityType.allCases.getter;
}

uint64_t LLMQUModelAppEntityStatus.Streaming.value.getter()
{
  OUTLINED_FUNCTION_27();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>.Iterator);
  OUTLINED_FUNCTION_3_31(v3);
  v1[6] = v4;
  v1[7] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_68_10();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
  MEMORY[0x25A2C8090](v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_96_7(v1);
  *uint64_t v2 = v3;
  v2[1] = LLMQUModelAppEntityStatus.Streaming.value.getter;
  uint64_t v4 = OUTLINED_FUNCTION_23_16();
  return MEMORY[0x270FA20F8](v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  int v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = OUTLINED_FUNCTION_44_18();
  v2(v1);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 72);
  if (v3 != 22) {
    **(unsigned char **)(v0 + 24) = v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelAppEntityStatus>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_71_9();
  v5(v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v6();
}

uint64_t LLMQUModelAppEntityStatus.Streaming.init(objectID:decoder:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_179_1(v1, v2, v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
  OUTLINED_FUNCTION_3_31(v4);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = OUTLINED_FUNCTION_184_2(v6);
  uint64_t v8 = type metadata accessor for LLMQUModelAppEntityStatus.Streaming(v7);
  OUTLINED_FUNCTION_81(v8);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_60_8();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_196_1(v1);
  lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus();
  OUTLINED_FUNCTION_105_9();
  *uint64_t v0 = v2;
  v0[1] = LLMQUModelAppEntityStatus.Streaming.init(objectID:decoder:);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_22_20();
  return MEMORY[0x270F2F278]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t LLMQUModelAppEntityStatus.Streaming.init(objectID:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_30_21();
  uint64_t v13 = v12(v11);
  OUTLINED_FUNCTION_193_1(v13, v14, (void (*)(void))type metadata accessor for LLMQUModelAppEntityStatus.Streaming);
  OUTLINED_FUNCTION_131_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_139();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t protocol witness for GenerableStreaming.init(objectID:decoder:) in conformance LLMQUModelAppEntityStatus.Streaming()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return LLMQUModelAppEntityStatus.Streaming.init(objectID:decoder:)();
}

uint64_t static LLMQUModelAppEntityStatus.collect(_:)(uint64_t a1)
{
  return static LLMQUModelEventType.collect(_:)(a1, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus.Streaming, Error>.Iterator, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus.Streaming, Error>, (uint64_t)&async function pointer to partial apply for closure #1 in static LLMQUModelAppEntityStatus.collect(_:), (uint64_t)&type metadata for LLMQUModelAppEntityStatus);
}

uint64_t closure #1 in static LLMQUModelAppEntityStatus.collect(_:)(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelAppEntityStatus>);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LLMQUModelAppEntityStatus.Streaming?);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for LLMQUModelAppEntityStatus.Streaming(0);
  v1[11] = swift_task_alloc();
  v1[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus.Streaming, Error>.Iterator);
  v1[13] = swift_projectBox();
  return MEMORY[0x270FA2498](closure #1 in static LLMQUModelAppEntityStatus.collect(_:), 0, 0);
}

uint64_t closure #1 in static LLMQUModelAppEntityStatus.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_67_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_27_4(v0);
  void *v1 = v2;
  v1[1] = closure #1 in static LLMQUModelAppEntityStatus.collect(_:);
  uint64_t v3 = OUTLINED_FUNCTION_104_9();
  return MEMORY[0x270FA2100](v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned char *v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_59_11();
  if (v2)
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for LLMQUModelAppEntityStatus.Streaming?);
    OUTLINED_FUNCTION_171_2();
    *uint64_t v3 = 22;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v4();
  }
  else
  {
    outlined init with take of LLMQUModelEventType.Streaming(v0, *(void *)(v1 + 88), (void (*)(void))type metadata accessor for LLMQUModelAppEntityStatus.Streaming);
    uint64_t v6 = swift_task_alloc();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_97_4(v6);
    *uint64_t v7 = v8;
    v7[1] = closure #1 in static LLMQUModelAppEntityStatus.collect(_:);
    OUTLINED_FUNCTION_103_8();
    return LLMQUModelAppEntityStatus.Streaming.value.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t (*v13)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = OUTLINED_FUNCTION_42_12();
  v2(v1);
  OUTLINED_FUNCTION_66_9();
  if (v3)
  {
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelAppEntityStatus.Streaming);
    uint64_t v4 = OUTLINED_FUNCTION_41_17();
    v5(v4);
    OUTLINED_FUNCTION_40_14();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_5();
    v7(v6);
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    uint64_t v8 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_72_8(v8, v9);
    OUTLINED_FUNCTION_102_5(v10, v11);
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v12();
    swift_willThrow();
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelAppEntityStatus.Streaming);
    OUTLINED_FUNCTION_173_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_113_8();
  }
  return v13();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  outlined destroy of LLMQUModelTemporalReference.Streaming(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for LLMQUModelAppEntityStatus.Streaming);
  OUTLINED_FUNCTION_100_8();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

OmniSearch::LLMQUModelAppEntityStatus_optional __swiftcall LLMQUModelAppEntityStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 4;
  switch(v3)
  {
    case 0:
      goto LABEL_6;
    case 1:
      char v5 = 1;
      goto LABEL_6;
    case 2:
      char v5 = 2;
      goto LABEL_6;
    case 3:
      char v5 = 3;
LABEL_6:
      char v6 = v5;
      break;
    case 4:
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    default:
      char v6 = 22;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static LLMQUModelAppEntityStatus.allCases.getter()
{
  return &outlined read-only object #0 of static LLMQUModelAppEntityStatus.allCases.getter;
}

uint64_t LLMQUModelAppEntityStatus.rawValue.getter()
{
  uint64_t result = 0x6465766968637261;
  switch(*v0)
  {
    case 1:
      return 0x6B72616D6B6F6F62;
    case 2:
      uint64_t v2 = 1634038371;
      goto LABEL_12;
    case 3:
      return 0x7466617264;
    case 4:
      uint64_t v3 = 1953064037;
      goto LABEL_21;
    case 5:
      return 0x657469726F766166;
    case 6:
      unint64_t v4 = 0x656767616C66;
      return v4 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
    case 7:
      return 0x6564726177726F66;
    case 8:
      return 1802401130;
    case 9:
      uint64_t v2 = 1852404336;
LABEL_12:
      unint64_t v4 = v2 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
      return v4 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
    case 0xA:
      return 1684104562;
    case 0xB:
      uint64_t v5 = 0x766965636572;
      goto LABEL_25;
    case 0xC:
      unint64_t v4 = 0x65696C706572;
      return v4 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
    case 0xD:
      return 0x6465766173;
    case 0xE:
      return 1953391987;
    case 0xF:
      uint64_t v3 = 1918986355;
      goto LABEL_21;
    case 0x10:
      uint64_t v3 = 1734828404;
LABEL_21:
      uint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x646500000000;
      break;
    case 0x11:
      uint64_t result = 0x6873617274;
      break;
    case 0x12:
      uint64_t result = 0x646165726E75;
      break;
    case 0x13:
      uint64_t v5 = 0x747065636361;
LABEL_25:
      uint64_t result = v5 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      break;
    case 0x14:
      uint64_t result = 0x656279616DLL;
      break;
    case 0x15:
      uint64_t result = 0x64656E696C636564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance LLMQUModelAppEntityStatus(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LLMQUModelAppEntityStatus()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance LLMQUModelAppEntityStatus(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LLMQUModelAppEntityStatus()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::LLMQUModelAppEntityStatus_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelAppEntityStatus(Swift::String *a1)
{
  return LLMQUModelAppEntityStatus.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelAppEntityStatus@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LLMQUModelAppEntityStatus.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance LLMQUModelAppEntityStatus()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelAppEntityStatus()
{
  return RawRepresentable<>.encode(to:)();
}

void protocol witness for static CaseIterable.allCases.getter in conformance LLMQUModelAppEntityStatus(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static LLMQUModelAppEntityStatus.allCases.getter;
}

uint64_t LLMQUModelTemporalReference.Streaming.value.getter()
{
  OUTLINED_FUNCTION_27();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>.Iterator);
  OUTLINED_FUNCTION_3_31(v3);
  v1[6] = v4;
  v1[7] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_68_10();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
  MEMORY[0x25A2C8090](v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_96_7(v1);
  *uint64_t v2 = v3;
  v2[1] = LLMQUModelTemporalReference.Streaming.value.getter;
  uint64_t v4 = OUTLINED_FUNCTION_23_16();
  return MEMORY[0x270FA20F8](v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  int v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = OUTLINED_FUNCTION_44_18();
  v2(v1);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 72);
  if (v3 != 3) {
    **(unsigned char **)(v0 + 24) = v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelTemporalReference>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_71_9();
  v5(v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v6();
}

uint64_t LLMQUModelTemporalReference.Streaming.init(objectID:decoder:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_179_1(v1, v2, v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
  OUTLINED_FUNCTION_3_31(v4);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = OUTLINED_FUNCTION_184_2(v6);
  uint64_t v8 = type metadata accessor for LLMQUModelTemporalReference.Streaming(v7);
  OUTLINED_FUNCTION_81(v8);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_60_8();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_196_1(v1);
  lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference();
  OUTLINED_FUNCTION_105_9();
  *uint64_t v0 = v2;
  v0[1] = LLMQUModelTemporalReference.Streaming.init(objectID:decoder:);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_22_20();
  return MEMORY[0x270F2F278]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t LLMQUModelTemporalReference.Streaming.init(objectID:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_30_21();
  uint64_t v13 = v12(v11);
  OUTLINED_FUNCTION_193_1(v13, v14, (void (*)(void))type metadata accessor for LLMQUModelTemporalReference.Streaming);
  OUTLINED_FUNCTION_131_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_139();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t protocol witness for GenerableStreaming.init(objectID:decoder:) in conformance LLMQUModelTemporalReference.Streaming()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return LLMQUModelTemporalReference.Streaming.init(objectID:decoder:)();
}

uint64_t static LLMQUModelTemporalReference.collect(_:)(uint64_t a1)
{
  return static LLMQUModelEventType.collect(_:)(a1, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference.Streaming, Error>.Iterator, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference.Streaming, Error>, (uint64_t)&async function pointer to partial apply for closure #1 in static LLMQUModelTemporalReference.collect(_:), (uint64_t)&type metadata for LLMQUModelTemporalReference);
}

uint64_t static LLMQUModelEventType.collect(_:)(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = swift_allocBox();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x25A2C8090](v9);
  return MEMORY[0x270FA2110](a4, v8, a5);
}

uint64_t closure #1 in static LLMQUModelTemporalReference.collect(_:)(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<LLMQUModelTemporalReference>);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LLMQUModelTemporalReference.Streaming?);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for LLMQUModelTemporalReference.Streaming(0);
  v1[11] = swift_task_alloc();
  v1[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference.Streaming, Error>.Iterator);
  v1[13] = swift_projectBox();
  return MEMORY[0x270FA2498](closure #1 in static LLMQUModelTemporalReference.collect(_:), 0, 0);
}

uint64_t closure #1 in static LLMQUModelTemporalReference.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_67_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_27_4(v0);
  void *v1 = v2;
  v1[1] = closure #1 in static LLMQUModelTemporalReference.collect(_:);
  uint64_t v3 = OUTLINED_FUNCTION_104_9();
  return MEMORY[0x270FA2100](v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_59_11();
  if (v2)
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for LLMQUModelTemporalReference.Streaming?);
    OUTLINED_FUNCTION_172_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v3();
  }
  else
  {
    outlined init with take of LLMQUModelEventType.Streaming(v0, *(void *)(v1 + 88), (void (*)(void))type metadata accessor for LLMQUModelTemporalReference.Streaming);
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_97_4(v5);
    *uint64_t v6 = v7;
    v6[1] = closure #1 in static LLMQUModelTemporalReference.collect(_:);
    OUTLINED_FUNCTION_103_8();
    return LLMQUModelTemporalReference.Streaming.value.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t (*v13)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = OUTLINED_FUNCTION_42_12();
  v2(v1);
  OUTLINED_FUNCTION_66_9();
  if (v3)
  {
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelTemporalReference.Streaming);
    uint64_t v4 = OUTLINED_FUNCTION_41_17();
    v5(v4);
    OUTLINED_FUNCTION_40_14();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_5();
    v7(v6);
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    uint64_t v8 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_72_8(v8, v9);
    OUTLINED_FUNCTION_102_5(v10, v11);
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v12();
    swift_willThrow();
    outlined destroy of LLMQUModelTemporalReference.Streaming(v0, (void (*)(void))type metadata accessor for LLMQUModelTemporalReference.Streaming);
    OUTLINED_FUNCTION_173_2();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_113_8();
  }
  return v13();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  outlined destroy of LLMQUModelTemporalReference.Streaming(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for LLMQUModelTemporalReference.Streaming);
  OUTLINED_FUNCTION_100_8();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

OmniSearch::LLMQUModelTemporalReference_optional __swiftcall LLMQUModelTemporalReference.init(rawValue:)(Swift::String rawValue)
{
  return (OmniSearch::LLMQUModelTemporalReference_optional)LLMQUModelSortOrder.init(rawValue:)();
}

uint64_t LLMQUModelSortOrder.init(rawValue:)()
{
  OUTLINED_FUNCTION_59_8();
  v3._rawValue = v2;
  v4._object = v0;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v1 = v7;
  return result;
}

void *static LLMQUModelTemporalReference.allCases.getter()
{
  return &outlined read-only object #0 of static LLMQUModelTemporalReference.allCases.getter;
}

uint64_t LLMQUModelTemporalReference.rawValue.getter()
{
  uint64_t v1 = 1953718640;
  if (*v0 != 1) {
    uint64_t v1 = 0x6669636570736E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657275747566;
  }
}

OmniSearch::LLMQUModelTemporalReference_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelTemporalReference(Swift::String *a1)
{
  return LLMQUModelTemporalReference.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelTemporalReference@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LLMQUModelTemporalReference.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance LLMQUModelTemporalReference()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelTemporalReference()
{
  return RawRepresentable<>.encode(to:)();
}

void protocol witness for static CaseIterable.allCases.getter in conformance LLMQUModelTemporalReference(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static LLMQUModelTemporalReference.allCases.getter;
}

uint64_t LLMQUModelResponseNonEnumArgs.question.getter()
{
  return *v0;
}

uint64_t LLMQUModelResponseNonEnumArgs.question.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.question.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.open.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t LLMQUModelResponseNonEnumArgs.open.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.open.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.singular.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t LLMQUModelResponseNonEnumArgs.singular.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.singular.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.search_term.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.search_term.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.time.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.time.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.source.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LLMQUModelResponseNonEnumArgs.source.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.source.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.attachment_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.attachment_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.tag_name.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.tag_name.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.flag_color.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.flag_color.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.media_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.media_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.file_format.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.file_format.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.person_name.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.person_name.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.person_sender.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.person_sender.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.person_receiver.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.person_receiver.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.person_oneself.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.person_oneself.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.location.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.location.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.arrival.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.arrival.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseNonEnumArgs.departure.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*LLMQUModelResponseNonEnumArgs.departure.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional __swiftcall LLMQUModelResponseNonEnumArgs.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v1 >= 0x12) {
    return (OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional)18;
  }
  else {
    return (OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional)v1;
  }
}

OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional __swiftcall LLMQUModelResponseNonEnumArgs.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional)18;
}

void LLMQUModelResponseNonEnumArgs.CodingKeys.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
      OUTLINED_FUNCTION_166_2();
      break;
    case 2:
      OUTLINED_FUNCTION_140_2();
      break;
    case 3:
      OUTLINED_FUNCTION_95_7();
      break;
    case 4:
      OUTLINED_FUNCTION_167_1();
      break;
    case 5:
      OUTLINED_FUNCTION_139_2();
      break;
    case 8:
      OUTLINED_FUNCTION_101_8();
      break;
    case 9:
      OUTLINED_FUNCTION_162_2();
      break;
    case 10:
      OUTLINED_FUNCTION_94_10();
      break;
    case 11:
      OUTLINED_FUNCTION_93_7();
      break;
    case 12:
      OUTLINED_FUNCTION_85_10();
      break;
    case 13:
      OUTLINED_FUNCTION_84_7();
      break;
    case 14:
      OUTLINED_FUNCTION_83_5();
      break;
    case 15:
      OUTLINED_FUNCTION_138_1();
      break;
    case 16:
      OUTLINED_FUNCTION_123_5();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance LLMQUModelResponseNonEnumArgs.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LLMQUModelResponseNonEnumArgs.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance LLMQUModelResponseNonEnumArgs.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LLMQUModelResponseNonEnumArgs.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LLMQUModelResponseNonEnumArgs.CodingKeys@<W0>(Swift::String *a1@<X0>, OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional *a2@<X8>)
{
  result.value = LLMQUModelResponseNonEnumArgs.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance LLMQUModelResponseNonEnumArgs.CodingKeys(void *a1@<X8>)
{
  LLMQUModelResponseNonEnumArgs.CodingKeys.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance LLMQUModelResponseNonEnumArgs.CodingKeys()
{
  return LLMQUModelResponseNonEnumArgs.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseNonEnumArgs.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::LLMQUModelResponseNonEnumArgs::CodingKeys_optional *a2@<X8>)
{
  result.value = LLMQUModelResponseNonEnumArgs.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance LLMQUModelResponseNonEnumArgs.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseNonEnumArgs.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseNonEnumArgs.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LLMQUModelResponseNonEnumArgs.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseNonEnumArgs.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_126_3();
  if (!v2)
  {
    OUTLINED_FUNCTION_126_3();
    OUTLINED_FUNCTION_126_3();
    outlined init with take of PQAVerificationModelProtocol?(v4 + 8, (uint64_t)v25, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    outlined init with take of PQAVerificationModelProtocol?(v4 + 16, (uint64_t)v24, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v24);
    OUTLINED_FUNCTION_2_16(4);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 24, (uint64_t)v23, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v23);
    OUTLINED_FUNCTION_2_16(5);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 32, (uint64_t)v22, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v22);
    OUTLINED_FUNCTION_2_16(6);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 40, (uint64_t)v21, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v21);
    OUTLINED_FUNCTION_2_16(7);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 48, (uint64_t)v20, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v20);
    OUTLINED_FUNCTION_2_16(8);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 56, (uint64_t)v19, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v19);
    OUTLINED_FUNCTION_2_16(9);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 64, (uint64_t)v18, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v18);
    OUTLINED_FUNCTION_2_16(10);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 72, (uint64_t)v17, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v17);
    OUTLINED_FUNCTION_2_16(11);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 80, (uint64_t)v16, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v16);
    OUTLINED_FUNCTION_2_16(12);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 88, (uint64_t)v15, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v15);
    OUTLINED_FUNCTION_2_16(13);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 96, (uint64_t)v14, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v14);
    OUTLINED_FUNCTION_2_16(14);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 104, (uint64_t)v13, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v13);
    OUTLINED_FUNCTION_2_16(15);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 112, (uint64_t)v12, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v12);
    OUTLINED_FUNCTION_2_16(16);
    outlined init with take of PQAVerificationModelProtocol?(v4 + 120, (uint64_t)v11, &demangling cache variable for type metadata for [String]?);
    OUTLINED_FUNCTION_53_12((uint64_t)v11);
    OUTLINED_FUNCTION_2_16(17);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

double LLMQUModelResponseNonEnumArgs.init()@<D0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 514;
  *(unsigned char *)(a1 + 2) = 2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  return result;
}

void LLMQUModelResponseNonEnumArgs.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseNonEnumArgs.CodingKeys>);
  OUTLINED_FUNCTION_1();
  char v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_15();
  char v10 = v9 - v8;
  uint64_t v11 = v2[3];
  uint64_t v12 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    OUTLINED_FUNCTION_65_8();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    LOBYTE(v39[0]) = 2;
    BYTE1(v39[0]) = v10;
    BYTE2(v39[0]) = v6;
    *(_DWORD *)((char *)v39 + 3) = v47;
    OUTLINED_FUNCTION_57_11();
    uint64_t v40 = v29;
    uint64_t v41 = v0;
    uint64_t v42 = v12;
    uint64_t v43 = v2;
    uint64_t v44 = v11;
    uint64_t v45 = v27;
    uint64_t v46 = 0;
    outlined release of LLMQUModelResponseNonEnumArgs((uint64_t)v39);
  }
  else
  {
    uint64_t v13 = v4;
    LOBYTE(v39[0]) = 0;
    char v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v24 = OUTLINED_FUNCTION_200_0(1);
    char v23 = OUTLINED_FUNCTION_200_0(2);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_28_15();
    uint64_t v48 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_28_15();
    uint64_t v35 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_28_15();
    uint64_t v34 = v39[0];
    uint64_t v14 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_28_15();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_28_15();
    uint64_t v33 = v39[0];
    uint64_t v15 = v39[0];
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v32 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    uint64_t v31 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    uint64_t v30 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    uint64_t v22 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    uint64_t v21 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    uint64_t v20 = (void *)v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    LOBYTE(v36[0]) = 16;
    uint64_t v19 = v39[0];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_21();
    char v37 = 17;
    uint64_t v28 = v39[0];
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v16 = OUTLINED_FUNCTION_15_23();
    v17(v16);
    uint64_t v18 = v38;
    uint64_t v26 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v36[0]) = v25;
    BYTE1(v36[0]) = v24;
    BYTE2(v36[0]) = v23;
    v36[1] = v48;
    v36[2] = v35;
    v36[3] = v34;
    v36[4] = v14;
    v36[5] = v33;
    v36[6] = v15;
    v36[7] = v32;
    v36[8] = v31;
    v36[9] = v30;
    v36[10] = v22;
    v36[11] = v21;
    v36[12] = v20;
    v36[13] = v19;
    v36[14] = v28;
    v36[15] = v18;
    outlined retain of LLMQUModelResponseNonEnumArgs((uint64_t)v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    LOBYTE(v39[0]) = v25;
    BYTE1(v39[0]) = v24;
    BYTE2(v39[0]) = v23;
    *(_DWORD *)((char *)v39 + 3) = v47;
    OUTLINED_FUNCTION_57_11();
    uint64_t v40 = v30;
    uint64_t v41 = v22;
    uint64_t v42 = v21;
    uint64_t v43 = v20;
    uint64_t v44 = v19;
    uint64_t v45 = v28;
    uint64_t v46 = v26;
    outlined release of LLMQUModelResponseNonEnumArgs((uint64_t)v39);
    memcpy(v13, v36, 0x80uLL);
  }
  OUTLINED_FUNCTION_120_0();
}

__n128 LLMQUModelResponseNonEnumArgs.init(question:open:singular:search_term:time:source:attachment_type:tag_name:flag_color:media_type:file_format:person_name:person_sender:person_receiver:person_oneself:location:arrival:departure:)@<Q0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, __n128 a13, uint64_t a14, uint64_t a15)
{
  __n128 result = a13;
  *(unsigned char *)a9 = a1;
  *(unsigned char *)(a9 + 1) = a2;
  *(unsigned char *)(a9 + 2) = a3;
  *(void *)(a9 + 8) = a4;
  *(void *)(a9 + 16) = a5;
  *(void *)(a9 + 24) = a6;
  *(void *)(a9 + 32) = a7;
  *(void *)(a9 + 40) = a8;
  *(_OWORD *)(a9 + 48) = a10;
  *(_OWORD *)(a9 + 64) = a11;
  *(_OWORD *)(a9 + 80) = a12;
  *(__n128 *)(a9 + 96) = a13;
  *(void *)(a9 + 112) = a14;
  *(void *)(a9 + 120) = a15;
  return result;
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseNonEnumArgs(void *a1@<X8>)
{
  LLMQUModelResponseNonEnumArgs.init(from:)();
  if (!v1) {
    memcpy(a1, v3, 0x80uLL);
  }
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseNonEnumArgs(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return LLMQUModelResponseNonEnumArgs.encode(to:)(a1);
}

void LLMQUModelResponseEventType.event_type.getter(unsigned char *a1@<X8>)
{
}

unsigned char *LLMQUModelResponseEventType.event_type.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*LLMQUModelResponseEventType.event_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseEventType.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x79745F746E657665 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t LLMQUModelResponseEventType.CodingKeys.stringValue.getter()
{
  return 0x79745F746E657665;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LLMQUModelResponseEventType.CodingKeys()
{
  return AnswerSynthesisResult.AnswerCodingKeys.hashValue.getter();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseEventType.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseEventType.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseEventType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseEventType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseEventType.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_197_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseEventType.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_35_18();
  lazy protocol witness table accessor for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys();
  OUTLINED_FUNCTION_64_6();
  lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType();
  OUTLINED_FUNCTION_62_9();
  uint64_t v1 = OUTLINED_FUNCTION_27_19();
  v2(v1);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

OmniSearch::LLMQUModelResponseEventType __swiftcall LLMQUModelResponseEventType.init()()
{
  OUTLINED_FUNCTION_74_9(v0);
  return result;
}

OmniSearch::LLMQUModelResponseEventType __swiftcall LLMQUModelResponseEventType.init(event_type:)(OmniSearch::LLMQUModelEventType_optional event_type)
{
  OUTLINED_FUNCTION_74_9(v1);
  return result;
}

void LLMQUModelResponseEventType.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_109_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseEventType.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_58_9();
  lazy protocol witness table accessor for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys();
  OUTLINED_FUNCTION_39_14();
  if (!v1)
  {
    lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType();
    OUTLINED_FUNCTION_36_16();
    uint64_t v3 = OUTLINED_FUNCTION_31_19();
    v4(v3);
    OUTLINED_FUNCTION_158_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseEventType()
{
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseEventType()
{
}

uint64_t (*LLMQUModelResponseSortOrder.sort_order.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseSortOrder.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64726F5F74726F73 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t LLMQUModelResponseSortOrder.CodingKeys.stringValue.getter()
{
  return 0x64726F5F74726F73;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseSortOrder.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseSortOrder.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseSortOrder.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseSortOrder.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseSortOrder.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_197_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseSortOrder.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_35_18();
  lazy protocol witness table accessor for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys();
  OUTLINED_FUNCTION_64_6();
  lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder();
  OUTLINED_FUNCTION_62_9();
  uint64_t v1 = OUTLINED_FUNCTION_27_19();
  v2(v1);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

OmniSearch::LLMQUModelResponseSortOrder __swiftcall LLMQUModelResponseSortOrder.init()()
{
  OUTLINED_FUNCTION_74_9(v0);
  return result;
}

void LLMQUModelResponseSortOrder.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_109_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseSortOrder.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_58_9();
  lazy protocol witness table accessor for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys();
  OUTLINED_FUNCTION_39_14();
  if (!v1)
  {
    lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder();
    OUTLINED_FUNCTION_36_16();
    uint64_t v3 = OUTLINED_FUNCTION_31_19();
    v4(v3);
    OUTLINED_FUNCTION_158_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseSortOrder()
{
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseSortOrder()
{
}

uint64_t (*LLMQUModelResponseAppEntityType_singleValue.app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseAppEntityType_singleValue.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_197_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseAppEntityType_singleValue.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_35_18();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys();
  OUTLINED_FUNCTION_64_6();
  lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType();
  OUTLINED_FUNCTION_62_9();
  uint64_t v1 = OUTLINED_FUNCTION_27_19();
  v2(v1);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

OmniSearch::LLMQUModelResponseAppEntityType_singleValue __swiftcall LLMQUModelResponseAppEntityType_singleValue.init()()
{
  OUTLINED_FUNCTION_74_9(v0);
  return result;
}

void LLMQUModelResponseAppEntityType_singleValue.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_109_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseAppEntityType_singleValue.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_58_9();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys();
  OUTLINED_FUNCTION_39_14();
  if (!v1)
  {
    lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType();
    OUTLINED_FUNCTION_36_16();
    uint64_t v3 = OUTLINED_FUNCTION_31_19();
    v4(v3);
    OUTLINED_FUNCTION_158_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseAppEntityType_singleValue()
{
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseAppEntityType_singleValue()
{
}

uint64_t (*LLMQUModelResponseAppEntityType_arrayValue.app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseAppEntityType_arrayValue.CodingKeys.stringValue.getter()
{
  return 0x69746E655F707061;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseAppEntityType_singleValue.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseAppEntityType_arrayValue.encode(to:)()
{
}

{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  void *v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_105_0();
  unint64_t v2 = v1;
  char v4 = v3;
  char v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_1();
  char v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_8();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
  lazy protocol witness table accessor for type [LLMQUModelAppEntityType] and conformance <A> [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityType] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  OUTLINED_FUNCTION_211_1();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

void LLMQUModelResponseAppEntityType_arrayValue.init(from:)()
{
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(void);

  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_192_1(v3, v4);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v2();
  OUTLINED_FUNCTION_121_5();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
    lazy protocol witness table accessor for type [LLMQUModelAppEntityType] and conformance <A> [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityType] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
    OUTLINED_FUNCTION_135_3();
    OUTLINED_FUNCTION_16_1();
    v6();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v0);
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseAppEntityType_arrayValue(void *a1@<X8>)
{
  LLMQUModelResponseAppEntityType_arrayValue.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseAppEntityType_arrayValue()
{
}

uint64_t LLMQUModelResponseUnknownAppEntityType_singleValue.app_entity_type.getter(uint64_t a1)
{
  return a1;
}

uint64_t LLMQUModelResponseUnknownAppEntityType_singleValue.app_entity_type.setter()
{
  uint64_t result = OUTLINED_FUNCTION_188_0();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LLMQUModelResponseUnknownAppEntityType_singleValue.app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseUnknownAppEntityType_singleValue.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_13_12();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  uint64_t v3 = OUTLINED_FUNCTION_46_13();
  v4(v3);
  OUTLINED_FUNCTION_120_0();
}

OmniSearch::LLMQUModelResponseUnknownAppEntityType_singleValue __swiftcall LLMQUModelResponseUnknownAppEntityType_singleValue.init()()
{
  OUTLINED_FUNCTION_10_8();
  result.app_entity_type.value._object = v1;
  result.app_entity_type.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t LLMQUModelResponseUnknownAppEntityType_singleValue.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_39();
  uint64_t v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v8 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseUnknownAppEntityType_singleValue@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = LLMQUModelResponseUnknownAppEntityType_singleValue.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseUnknownAppEntityType_singleValue()
{
}

uint64_t (*LLMQUModelResponseUnknownAppEntityType_arrayValue.app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseAppEntityType_singleValue.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x69746E655F707061 && a2 == 0xEF657079745F7974)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseUnknownAppEntityType_arrayValue.encode(to:)()
{
}

{
  void (*v0)(void);
  void (*v1)(void);
  void *v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_105_0();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = v10 - v9;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v1();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  OUTLINED_FUNCTION_211_1();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

void LLMQUModelResponseUnknownAppEntityType_arrayValue.init(from:)()
{
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(void);

  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_192_1(v3, v4);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v2();
  OUTLINED_FUNCTION_121_5();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_135_3();
    OUTLINED_FUNCTION_16_1();
    v6();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v0);
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseUnknownAppEntityType_arrayValue(void *a1@<X8>)
{
  LLMQUModelResponseUnknownAppEntityType_arrayValue.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseUnknownAppEntityType_arrayValue()
{
}

uint64_t LLMQUModelResponseInferredAppEntityType.inferred_app_entity_type.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*LLMQUModelResponseInferredAppEntityType.inferred_app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

unint64_t LLMQUModelResponseInferredAppEntityType.CodingKeys.stringValue.getter()
{
  return 0xD000000000000018;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseInferredAppEntityType.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseInferredAppEntityType.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseInferredAppEntityType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseInferredAppEntityType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseInferredAppEntityType.encode(to:)()
{
}

void LLMQUModelResponseInferredAppEntityType.init(from:)()
{
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseInferredAppEntityType(void *a1@<X8>)
{
  LLMQUModelResponseInferredAppEntityType.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseInferredAppEntityType()
{
}

uint64_t (*LLMQUModelResponseUnknownInferredAppEntityType.inferred_app_entity_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseInferredAppEntityType.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000025867C920)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseUnknownInferredAppEntityType.encode(to:)()
{
}

void LLMQUModelResponseUnknownInferredAppEntityType.init(from:)()
{
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseUnknownInferredAppEntityType(void *a1@<X8>)
{
  LLMQUModelResponseUnknownInferredAppEntityType.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseUnknownInferredAppEntityType()
{
}

uint64_t (*LLMQUModelResponseAppEntityStatus.app_entity_status.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseAppEntityStatus.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025867C940)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t LLMQUModelResponseAppEntityStatus.CodingKeys.stringValue.getter()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseAppEntityStatus.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseAppEntityStatus.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseAppEntityStatus.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseAppEntityStatus.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseAppEntityStatus.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_197_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseAppEntityStatus.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_35_18();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys();
  OUTLINED_FUNCTION_64_6();
  lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus();
  OUTLINED_FUNCTION_62_9();
  uint64_t v1 = OUTLINED_FUNCTION_27_19();
  v2(v1);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

OmniSearch::LLMQUModelResponseAppEntityStatus __swiftcall LLMQUModelResponseAppEntityStatus.init()()
{
  OUTLINED_FUNCTION_74_9(v0);
  return result;
}

void LLMQUModelResponseAppEntityStatus.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_109_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseAppEntityStatus.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_58_9();
  lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys();
  OUTLINED_FUNCTION_39_14();
  if (!v1)
  {
    lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus();
    OUTLINED_FUNCTION_36_16();
    uint64_t v3 = OUTLINED_FUNCTION_31_19();
    v4(v3);
    OUTLINED_FUNCTION_158_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseAppEntityStatus()
{
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseAppEntityStatus()
{
}

uint64_t (*LLMQUModelResponseTemporalReference.temporal_reference.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseTemporalReference.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000025867C960)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t LLMQUModelResponseTemporalReference.CodingKeys.stringValue.getter()
{
  return 0xD000000000000012;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseTemporalReference.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseTemporalReference.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseTemporalReference.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseTemporalReference.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LLMQUModelResponseTemporalReference.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_197_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseTemporalReference.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_35_18();
  lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys();
  OUTLINED_FUNCTION_64_6();
  lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference();
  OUTLINED_FUNCTION_62_9();
  uint64_t v1 = OUTLINED_FUNCTION_27_19();
  v2(v1);
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

void LLMQUModelResponseTemporalReference.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_109_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseTemporalReference.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_58_9();
  lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys();
  OUTLINED_FUNCTION_39_14();
  if (!v1)
  {
    lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference();
    OUTLINED_FUNCTION_36_16();
    uint64_t v3 = OUTLINED_FUNCTION_31_19();
    v4(v3);
    OUTLINED_FUNCTION_158_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseTemporalReference()
{
}

void protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseTemporalReference()
{
}

uint64_t LLMQUModelResponseStringEnums.event_type.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t LLMQUModelResponseStringEnums.event_type.setter()
{
  uint64_t result = OUTLINED_FUNCTION_188_0();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LLMQUModelResponseStringEnums.event_type.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseStringEnums.sort_order.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t LLMQUModelResponseStringEnums.sort_order.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*LLMQUModelResponseStringEnums.sort_order.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseStringEnums.app_entity_status.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t LLMQUModelResponseStringEnums.app_entity_status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*LLMQUModelResponseStringEnums.app_entity_status.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseStringEnums.temporal_reference.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t LLMQUModelResponseStringEnums.temporal_reference.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*LLMQUModelResponseStringEnums.temporal_reference.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t LLMQUModelResponseStringEnums.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79745F746E657665 && a2 == 0xEA00000000006570;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64726F5F74726F73 && a2 == 0xEA00000000007265;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000025867C940 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000025867C960)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t LLMQUModelResponseStringEnums.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0x79745F746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64726F5F74726F73;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance LLMQUModelResponseStringEnums.CodingKeys()
{
  return LLMQUModelResponseStringEnums.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LLMQUModelResponseStringEnums.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LLMQUModelResponseStringEnums.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMQUModelResponseStringEnums.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LLMQUModelResponseStringEnums.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LLMQUModelResponseStringEnums.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LLMQUModelResponseStringEnums.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_15();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_124_5();
  if (!v1)
  {
    OUTLINED_FUNCTION_124_5();
    OUTLINED_FUNCTION_124_5();
    OUTLINED_FUNCTION_124_5();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

void __swiftcall LLMQUModelResponseStringEnums.init()(OmniSearch::LLMQUModelResponseStringEnums *__return_ptr retstr)
{
  retstr->app_entity_status = 0u;
  retstr->temporal_reference = 0u;
  retstr->event_os_log_type_t type = 0u;
  retstr->sort_order = 0u;
}

void __swiftcall LLMQUModelResponseStringEnums.init(event_type:sort_order:app_entity_status:temporal_reference:)(OmniSearch::LLMQUModelResponseStringEnums *__return_ptr retstr, Swift::String_optional event_type, Swift::String_optional sort_order, Swift::String_optional app_entity_status, Swift::String_optional temporal_reference)
{
  retstr->event_os_log_type_t type = event_type;
  retstr->sort_order = sort_order;
  retstr->app_entity_status = app_entity_status;
  retstr->temporal_reference = temporal_reference;
}

void LLMQUModelResponseStringEnums.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LLMQUModelResponseStringEnums.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  lazy protocol witness table accessor for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_122_4();
    uint64_t v8 = v7;
    uint64_t v24 = v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = OUTLINED_FUNCTION_122_4();
    uint64_t v11 = v10;
    uint64_t v22 = v9;
    char v23 = v4;
    swift_bridgeObjectRetain();
    uint64_t v12 = OUTLINED_FUNCTION_122_4();
    uint64_t v14 = v13;
    uint64_t v21 = v12;
    swift_bridgeObjectRetain();
    uint64_t v15 = OUTLINED_FUNCTION_122_4();
    uint64_t v17 = v16;
    uint64_t v20 = v15;
    uint64_t v18 = OUTLINED_FUNCTION_91_8();
    v19(v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *char v23 = v24;
    v23[1] = v8;
    v23[2] = v22;
    v23[3] = v11;
    v23[4] = v21;
    void v23[5] = v14;
    v23[6] = v20;
    v23[7] = v17;
  }
  OUTLINED_FUNCTION_120_0();
}

double protocol witness for Decodable.init(from:) in conformance LLMQUModelResponseStringEnums@<D0>(_OWORD *a1@<X8>)
{
  LLMQUModelResponseStringEnums.init(from:)();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LLMQUModelResponseStringEnums(void *a1)
{
  return LLMQUModelResponseStringEnums.encode(to:)(a1);
}

unint64_t LLMQUModelResponse.description.getter()
{
  type metadata accessor for CharacterSet();
  OUTLINED_FUNCTION_1();
  uint64_t v98 = v2;
  uint64_t v99 = v1;
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  os_log_type_t v96 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  char v95 = (char *)&v78 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v97 = (char *)&v78 - v7;
  int v8 = *v0;
  int v9 = v0[1];
  unint64_t v10 = v0[2];
  int v11 = v0[3];
  uint64_t v12 = v0[4];
  uint64_t v14 = *((void *)v0 + 1);
  uint64_t v13 = *((void *)v0 + 2);
  int v78 = v0[24];
  int v79 = v0[25];
  uint64_t v80 = *((void *)v0 + 4);
  uint64_t v81 = *((void *)v0 + 5);
  uint64_t v82 = *((void *)v0 + 6);
  uint64_t v83 = *((void *)v0 + 7);
  uint64_t v84 = *((void *)v0 + 8);
  uint64_t v15 = *((void *)v0 + 10);
  uint64_t v85 = *((void *)v0 + 9);
  uint64_t v86 = v15;
  uint64_t v16 = *((void *)v0 + 12);
  uint64_t v87 = *((void *)v0 + 11);
  uint64_t v88 = v16;
  uint64_t v17 = *((void *)v0 + 14);
  uint64_t v89 = *((void *)v0 + 13);
  uint64_t v90 = v17;
  uint64_t v18 = *((void *)v0 + 16);
  uint64_t v91 = *((void *)v0 + 15);
  uint64_t v92 = v18;
  uint64_t v19 = *((void *)v0 + 18);
  uint64_t v93 = *((void *)v0 + 17);
  uint64_t v94 = v19;
  unint64_t v103 = 0;
  unint64_t v104 = 0xE000000000000000;
  if (v8 != 2)
  {
    unint64_t v101 = 0x6E6F697473657571;
    unint64_t v102 = 0xEA0000000000203ALL;
    if (v8) {
      uint64_t v20 = 1702195828;
    }
    else {
      uint64_t v20 = 0x65736C6166;
    }
    if (v8) {
      unint64_t v21 = 0xE400000000000000;
    }
    else {
      unint64_t v21 = 0xE500000000000000;
    }
    unint64_t v22 = v21;
    String.append(_:)(*(Swift::String *)&v20);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_183_2();
    swift_bridgeObjectRelease();
  }
  if (v9 != 2)
  {
    unint64_t v101 = 0x203A6E65706FLL;
    unint64_t v102 = 0xE600000000000000;
    if (v9) {
      uint64_t v23 = 1702195828;
    }
    else {
      uint64_t v23 = 0x65736C6166;
    }
    if (v9) {
      unint64_t v24 = 0xE400000000000000;
    }
    else {
      unint64_t v24 = 0xE500000000000000;
    }
    unint64_t v25 = v24;
    String.append(_:)(*(Swift::String *)&v23);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_183_2();
    swift_bridgeObjectRelease();
  }
  if (v10 != 2)
  {
    unint64_t v101 = 0x72616C75676E6973;
    OUTLINED_FUNCTION_182_2();
    if (v10) {
      uint64_t v26 = 1702195828;
    }
    else {
      uint64_t v26 = 0x65736C6166;
    }
    if (v10) {
      unint64_t v27 = 0xE400000000000000;
    }
    else {
      unint64_t v27 = 0xE500000000000000;
    }
    unint64_t v28 = v27;
    String.append(_:)(*(Swift::String *)&v26);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_183_2();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_180_2();
  if (v11 != 11)
  {
    OUTLINED_FUNCTION_101_5();
    swift_bridgeObjectRelease();
    unint64_t v101 = 0x79745F746E657665;
    unint64_t v102 = v10;
    unint64_t v29 = 0xE500000000000000;
    unint64_t v30 = 0x6C65746F68;
    switch(v11)
    {
      case 1:
        unint64_t v29 = 0xEA0000000000746ELL;
        unint64_t v30 = 0x6172756174736572;
        break;
      case 2:
        unint64_t v29 = 0xE600000000000000;
        unint64_t v30 = 0x746867696C66;
        break;
      case 3:
        unint64_t v29 = 0xEB00000000776F68;
        unint64_t v30 = 0x735F74656B636974;
        break;
      case 4:
        unint64_t v30 = 0xD000000000000010;
        unint64_t v29 = 0x800000025867CA20;
        break;
      case 5:
        unint64_t v30 = 0x635F6C61746E6572;
        unint64_t v29 = 0xEA00000000007261;
        break;
      case 6:
        unint64_t v30 = 0x7974726170;
        break;
      case 7:
        unint64_t v29 = 0xEB00000000746E65;
        unint64_t v30 = 0x6D746E696F707061;
        break;
      case 8:
        unint64_t v29 = 0xE700000000000000;
        unint64_t v30 = 0x746361746E6F63;
        break;
      case 9:
        unint64_t v29 = 0xE400000000000000;
        unint64_t v30 = 1685217635;
        break;
      case 10:
        unint64_t v29 = 0xE700000000000000;
        unint64_t v30 = 0x636972656E6567;
        break;
      default:
        break;
    }
    unint64_t v31 = v29;
    String.append(_:)(*(Swift::String *)&v30);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v12 != 3)
  {
    OUTLINED_FUNCTION_101_5();
    swift_bridgeObjectRelease();
    unint64_t v101 = 0x64726F5F74726F73;
    unint64_t v102 = v10 + 3317;
    unint64_t v32 = 0xE400000000000000;
    uint64_t v33 = 1954047342;
    if (v12 != 1)
    {
      uint64_t v33 = 0x7473726966;
      unint64_t v32 = 0xE500000000000000;
    }
    if (v12) {
      uint64_t v34 = v33;
    }
    else {
      uint64_t v34 = 1953718636;
    }
    if (v12) {
      unint64_t v35 = v32;
    }
    else {
      unint64_t v35 = 0xE400000000000000;
    }
    unint64_t v36 = v35;
    String.append(_:)(*(Swift::String *)&v34);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v14)
  {
    OUTLINED_FUNCTION_129_3();
    swift_bridgeObjectRelease();
    unint64_t v101 = 0xD000000000000011;
    unint64_t v102 = 0x80000002586820F0;
    uint64_t v37 = *(void *)(v14 + 16);
    uint64_t v38 = MEMORY[0x263F8EE78];
    if (v37)
    {
      OUTLINED_FUNCTION_174_2();
      uint64_t v38 = v100;
      uint64_t v39 = (char *)(v14 + 32);
      unint64_t v40 = *(void *)(v100 + 16);
      unint64_t v10 = 16 * v40;
      do
      {
        char v41 = *v39++;
        OUTLINED_FUNCTION_207_1(v41);
        if (v40 >= v42 >> 1)
        {
          OUTLINED_FUNCTION_159_2();
          uint64_t v38 = v100;
        }
        *(void *)(v38 + 16) = v40 + 1;
        uint64_t v43 = v38 + v10;
        *(void *)(v43 + 32) = v12;
        *(void *)(v43 + 40) = 0x65736C6166;
        v10 += 16;
        ++v40;
        --v37;
      }
      while (v37);
      OUTLINED_FUNCTION_180_2();
    }
    uint64_t v100 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    uint64_t v44 = OUTLINED_FUNCTION_190_1();
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    v47._uint64_t countAndFlagsBits = v44;
    v47._object = v46;
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v13)
  {
    OUTLINED_FUNCTION_79_5();
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    unint64_t v101 = 0xD00000000000001ALL;
    unint64_t v102 = 0x80000002586820D0;
    uint64_t v48 = *(void *)(v13 + 16);
    uint64_t v49 = MEMORY[0x263F8EE78];
    if (v48)
    {
      OUTLINED_FUNCTION_174_2();
      uint64_t v49 = v100;
      char v50 = (char *)(v13 + 32);
      unint64_t v10 = *(void *)(v100 + 16);
      uint64_t v51 = 16 * v10;
      do
      {
        char v52 = *v50++;
        OUTLINED_FUNCTION_207_1(v52);
        if (v10 >= v53 >> 1)
        {
          OUTLINED_FUNCTION_159_2();
          uint64_t v49 = v100;
        }
        *(void *)(v49 + 16) = v10 + 1;
        uint64_t v54 = v49 + v51;
        *(void *)(v54 + 32) = v12;
        *(void *)(v54 + 40) = 0x65736C6166;
        v51 += 16;
        ++v10;
        --v48;
      }
      while (v48);
      OUTLINED_FUNCTION_180_2();
    }
    uint64_t v100 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    uint64_t v55 = OUTLINED_FUNCTION_190_1();
    int v57 = v56;
    swift_bridgeObjectRelease();
    v58._uint64_t countAndFlagsBits = v55;
    v58._object = v57;
    String.append(_:)(v58);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  char v59 = v78;
  if (v78 != 22)
  {
    OUTLINED_FUNCTION_79_5();
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_165_2((uint64_t)"app_entity_status: ");
    LOBYTE(v100) = v59;
    v105._uint64_t countAndFlagsBits = LLMQUModelAppEntityStatus.rawValue.getter();
    OUTLINED_FUNCTION_47_11(v105);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  int v60 = v79;
  uint64_t v61 = v94;
  if (v79 != 3)
  {
    OUTLINED_FUNCTION_79_5();
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_165_2((uint64_t)"temporal_reference: ");
    uint64_t v62 = 1953718640;
    unint64_t v63 = 0xE400000000000000;
    if (v60 != 1)
    {
      uint64_t v62 = 0x6669636570736E75;
      unint64_t v63 = 0xEB00000000646569;
    }
    if (v60) {
      uint64_t v64 = v62;
    }
    else {
      uint64_t v64 = 0x657275747566;
    }
    if (v60) {
      unint64_t v65 = v63;
    }
    else {
      unint64_t v65 = 0xE600000000000000;
    }
    unint64_t v66 = v65;
    String.append(_:)(*(Swift::String *)&v64);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v80)
  {
    OUTLINED_FUNCTION_100_6();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_5(0x745F686372616573);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v106._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v106);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v81)
  {
    unint64_t v101 = 0x203A656D6974;
    unint64_t v102 = 0xE600000000000000;
    uint64_t v100 = v81;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v107._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v107);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v82)
  {
    unint64_t v101 = 0x203A656372756F73;
    unint64_t v102 = 0xE800000000000000;
    uint64_t v100 = v82;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v108._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v108);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v83)
  {
    OUTLINED_FUNCTION_129_3();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_203_1((uint64_t)"attachment_type: ");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v109._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v109);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v84)
  {
    uint64_t v100 = v84;
    unint64_t v101 = 0x656D616E5F676174;
    OUTLINED_FUNCTION_182_2();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v110._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v110);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  uint64_t v67 = v85;
  if (v85)
  {
    OUTLINED_FUNCTION_101_5();
    swift_bridgeObjectRelease();
    unint64_t v101 = 0x6C6F635F67616C66;
    unint64_t v102 = v10 + 3327;
    uint64_t v100 = v67;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v111._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v111);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  uint64_t v68 = v86;
  if (v86)
  {
    OUTLINED_FUNCTION_101_5();
    swift_bridgeObjectRelease();
    unint64_t v101 = 0x79745F616964656DLL;
    unint64_t v102 = v10;
    uint64_t v100 = v68;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v112._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v112);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v87)
  {
    OUTLINED_FUNCTION_100_6();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_5(0x726F665F656C6966);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v113._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v113);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v88)
  {
    OUTLINED_FUNCTION_100_6();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_5(0x6E2E6E6F73726570);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v114._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v114);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  uint64_t v69 = v89;
  if (v89)
  {
    OUTLINED_FUNCTION_79_5();
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    unint64_t v101 = 0x732E6E6F73726570;
    unint64_t v102 = 0xEF203A7265646E65;
    uint64_t v100 = v69;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v115._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v115);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v90)
  {
    OUTLINED_FUNCTION_129_3();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_203_1((uint64_t)"person.receiver: ");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v116._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v116);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  uint64_t v70 = v91;
  if (v91)
  {
    OUTLINED_FUNCTION_79_5();
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_165_2((uint64_t)"person.oneself: ");
    uint64_t v100 = v70;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v117._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v117);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v92)
  {
    uint64_t v100 = v92;
    unint64_t v101 = 0x6E6F697461636F6CLL;
    OUTLINED_FUNCTION_182_2();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v118._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v118);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v93)
  {
    unint64_t v101 = 0x3A6C617669727261;
    unint64_t v102 = 0xE900000000000020;
    uint64_t v100 = v93;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v119._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v119);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  if (v61)
  {
    unint64_t v101 = 0x7275747261706564;
    unint64_t v102 = 0xEB00000000203A65;
    uint64_t v100 = v61;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
    v120._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_47_11(v120);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_11_26();
    swift_bridgeObjectRelease();
  }
  unint64_t v101 = v103;
  unint64_t v102 = v104;
  static CharacterSet.whitespacesAndNewlines.getter();
  CharacterSet.init(charactersIn:)();
  CharacterSet.union(_:)();
  uint64_t v71 = *(void (**)(void))(v98 + 8);
  OUTLINED_FUNCTION_82_0();
  v71();
  OUTLINED_FUNCTION_82_0();
  v71();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v72 = StringProtocol.trimmingCharacters(in:)();
  id v74 = v73;
  OUTLINED_FUNCTION_82_0();
  v71();
  swift_bridgeObjectRelease();
  unint64_t v101 = 60;
  unint64_t v102 = 0xE100000000000000;
  v75._uint64_t countAndFlagsBits = v72;
  v75._object = v74;
  String.append(_:)(v75);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v76._uint64_t countAndFlagsBits = 62;
  v76._object = (void *)0xE100000000000000;
  String.append(_:)(v76);
  swift_bridgeObjectRelease();
  return v101;
}

uint64_t protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(a1, a2, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType);
}

uint64_t protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType);
}

uint64_t protocol witness for static Generable.schema.getter in conformance LLMQUModelSortOrder(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(a1, a2, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
}

uint64_t protocol witness for Generable.init(from:) in conformance LLMQUModelSortOrder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
}

uint64_t protocol witness for static Generable.schema.getter in conformance LLMQUModelAppEntityType(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(a1, a2, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
}

uint64_t protocol witness for Generable.init(from:) in conformance LLMQUModelAppEntityType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
}

uint64_t protocol witness for static Generable.schema.getter in conformance LLMQUModelAppEntityStatus(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(a1, a2, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
}

uint64_t protocol witness for Generable.init(from:) in conformance LLMQUModelAppEntityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
}

uint64_t protocol witness for static Generable.schema.getter in conformance LLMQUModelTemporalReference(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(a1, a2, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference, (uint64_t (*)(void))lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
}

uint64_t protocol witness for static Generable.schema.getter in conformance LLMQUModelEventType(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();
  return MEMORY[0x270F2F558](a1, a2, v7, v8);
}

uint64_t protocol witness for Generable.init(from:) in conformance LLMQUModelTemporalReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference, (void (*)(void))lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
}

uint64_t protocol witness for Generable.init(from:) in conformance LLMQUModelEventType(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return CaseIterable<>.init(from:)();
}

double _s10OmniSearch29LLMQUModelResponseNonEnumArgsVSgWOi0_(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_258668A50;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseStringEnums and conformance LLMQUModelResponseStringEnums()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums and conformance LLMQUModelResponseStringEnums;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums and conformance LLMQUModelResponseStringEnums)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums and conformance LLMQUModelResponseStringEnums);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs and conformance LLMQUModelResponseNonEnumArgs()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs and conformance LLMQUModelResponseNonEnumArgs;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs and conformance LLMQUModelResponseNonEnumArgs)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs and conformance LLMQUModelResponseNonEnumArgs);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseEventType and conformance LLMQUModelResponseEventType()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseEventType and conformance LLMQUModelResponseEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseEventType and conformance LLMQUModelResponseEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseEventType and conformance LLMQUModelResponseEventType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseSortOrder and conformance LLMQUModelResponseSortOrder()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder and conformance LLMQUModelResponseSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder and conformance LLMQUModelResponseSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder and conformance LLMQUModelResponseSortOrder);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus and conformance LLMQUModelResponseAppEntityStatus()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus and conformance LLMQUModelResponseAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus and conformance LLMQUModelResponseAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus and conformance LLMQUModelResponseAppEntityStatus);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference and conformance LLMQUModelResponseTemporalReference()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference and conformance LLMQUModelResponseTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference and conformance LLMQUModelResponseTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference and conformance LLMQUModelResponseTemporalReference);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue and conformance LLMQUModelResponseAppEntityType_singleValue()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue and conformance LLMQUModelResponseAppEntityType_singleValue;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue and conformance LLMQUModelResponseAppEntityType_singleValue)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue and conformance LLMQUModelResponseAppEntityType_singleValue);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue and conformance LLMQUModelResponseUnknownAppEntityType_singleValue()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue and conformance LLMQUModelResponseUnknownAppEntityType_singleValue;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue and conformance LLMQUModelResponseUnknownAppEntityType_singleValue)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue and conformance LLMQUModelResponseUnknownAppEntityType_singleValue);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_arrayValue and conformance LLMQUModelResponseAppEntityType_arrayValue()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue and conformance LLMQUModelResponseAppEntityType_arrayValue;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue and conformance LLMQUModelResponseAppEntityType_arrayValue)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue and conformance LLMQUModelResponseAppEntityType_arrayValue);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_arrayValue and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseInferredAppEntityType and conformance LLMQUModelResponseInferredAppEntityType()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType and conformance LLMQUModelResponseInferredAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType and conformance LLMQUModelResponseInferredAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType and conformance LLMQUModelResponseInferredAppEntityType);
  }
  return result;
}

uint64_t outlined consume of LLMQUModelResponseStringEnums?(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined consume of LLMQUModelResponseInferredAppEntityType?(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined consume of LLMQUModelResponseUnknownAppEntityType_singleValue?(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *outlined release of LLMQUModelResponseNonEnumArgs?(uint64_t *a1)
{
  return a1;
}

uint64_t outlined consume of LLMQUModelResponseNonEnumArgs?(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseUnknownInferredAppEntityType and conformance LLMQUModelResponseUnknownInferredAppEntityType()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType and conformance LLMQUModelResponseUnknownInferredAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType and conformance LLMQUModelResponseUnknownInferredAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType and conformance LLMQUModelResponseUnknownInferredAppEntityType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponse.CodingKeys and conformance LLMQUModelResponse.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType;
  if (!lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelEventType and conformance LLMQUModelEventType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder;
  if (!lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus;
  if (!lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference;
  if (!lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference);
  }
  return result;
}

uint64_t type metadata accessor for LLMQUModelEventType.Streaming(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for LLMQUModelEventType.Streaming);
}

uint64_t partial apply for closure #1 in static LLMQUModelEventType.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_117_4();
  return closure #1 in static LLMQUModelEventType.collect(_:)(v3);
}

uint64_t type metadata accessor for LLMQUModelSortOrder.Streaming(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for LLMQUModelSortOrder.Streaming);
}

uint64_t outlined init with take of LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t partial apply for closure #1 in static LLMQUModelSortOrder.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_117_4();
  return closure #1 in static LLMQUModelSortOrder.collect(_:)(v3);
}

uint64_t type metadata accessor for LLMQUModelAppEntityType.Streaming(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for LLMQUModelAppEntityType.Streaming);
}

uint64_t partial apply for closure #1 in static LLMQUModelAppEntityType.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_117_4();
  return closure #1 in static LLMQUModelAppEntityType.collect(_:)(v3);
}

uint64_t type metadata accessor for LLMQUModelAppEntityStatus.Streaming(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for LLMQUModelAppEntityStatus.Streaming);
}

uint64_t partial apply for closure #1 in static LLMQUModelAppEntityStatus.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_117_4();
  return closure #1 in static LLMQUModelAppEntityStatus.collect(_:)(v3);
}

uint64_t type metadata accessor for LLMQUModelTemporalReference.Streaming(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for LLMQUModelTemporalReference.Streaming);
}

uint64_t partial apply for closure #1 in static LLMQUModelTemporalReference.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_117_4();
  return closure #1 in static LLMQUModelTemporalReference.collect(_:)(v3);
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseNonEnumArgs.CodingKeys and conformance LLMQUModelResponseNonEnumArgs.CodingKeys);
  }
  return result;
}

uint64_t outlined release of LLMQUModelResponseNonEnumArgs(uint64_t a1)
{
  return a1;
}

uint64_t outlined retain of LLMQUModelResponseNonEnumArgs(uint64_t a1)
{
  return a1;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseEventType.CodingKeys and conformance LLMQUModelResponseEventType.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseSortOrder.CodingKeys and conformance LLMQUModelResponseSortOrder.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys and conformance LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseInferredAppEntityType.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys and conformance LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseAppEntityStatus.CodingKeys and conformance LLMQUModelResponseAppEntityStatus.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseTemporalReference.CodingKeys and conformance LLMQUModelResponseTemporalReference.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponseStringEnums.CodingKeys and conformance LLMQUModelResponseStringEnums.CodingKeys);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in LLMQUModelEventType()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [LLMQUModelEventType] and conformance [A], &demangling cache variable for type metadata for [LLMQUModelEventType]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in LLMQUModelSortOrder()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [LLMQUModelSortOrder] and conformance [A], &demangling cache variable for type metadata for [LLMQUModelSortOrder]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in LLMQUModelAppEntityType()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityType] and conformance [A], &demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in LLMQUModelAppEntityStatus()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityStatus] and conformance [A], &demangling cache variable for type metadata for [LLMQUModelAppEntityStatus]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in LLMQUModelTemporalReference()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [LLMQUModelTemporalReference] and conformance [A], &demangling cache variable for type metadata for [LLMQUModelTemporalReference]);
}

uint64_t destroy for LLMQUResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LLMQUResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LLMQUResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v4;
  int v5 = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v5;
  int v6 = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v6;
  int v7 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v7;
  int v8 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v8;
  int v9 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v9;
  int v10 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v10;
  return a1;
}

void *__swift_memcpy221_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xDDuLL);
}

uint64_t assignWithTake for LLMQUResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  int v5 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v5;
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMQUResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 221))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMQUResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 220) = 0;
    *(_DWORD *)(result + 216) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 221) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 221) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LLMQUResult()
{
}

uint64_t initializeWithCopy for LLMQULoggingMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  int v4 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LLMQULoggingMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  int v5 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  int v6 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  int v7 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v7;
  int v8 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v8;
  int v9 = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v9;
  int v10 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v10;
  return a1;
}

void *__swift_memcpy69_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x45uLL);
}

uint64_t assignWithTake for LLMQULoggingMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v5 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMQULoggingMetrics(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 69))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMQULoggingMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 69) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 69) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LLMQULoggingMetrics()
{
}

uint64_t destroy for LLMQUModelResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LLMQUModelResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LLMQUModelResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy152_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t assignWithTake for LLMQUModelResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponse(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 152))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponse()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE9)
  {
    if (a2 + 23 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 23) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 24;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v5 = v6 - 24;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258400680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponse.CodingKeys()
{
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258400780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelEventType()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
}

uint64_t destroy for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2)
{
  return destroy for LLMQUModelEventType.Streaming(a1, a2, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
}

uint64_t initializeWithCopy for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
}

uint64_t assignWithCopy for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
}

uint64_t initializeWithTake for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
}

uint64_t assignWithTake for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
}

uint64_t getEnumTagSinglePayload for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258400810);
}

uint64_t sub_258400810()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_67_1();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258400864);
}

uint64_t sub_258400864()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelEventType, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_70_9();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void type metadata completion function for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void type metadata accessor for LLMQUModelSortOrder()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
}

uint64_t destroy for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2)
{
  return destroy for LLMQUModelEventType.Streaming(a1, a2, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
}

uint64_t initializeWithCopy for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
}

uint64_t assignWithCopy for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
}

uint64_t initializeWithTake for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
}

uint64_t assignWithTake for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
}

uint64_t getEnumTagSinglePayload for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258400928);
}

uint64_t sub_258400928()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_67_1();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25840097C);
}

uint64_t sub_25840097C()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelSortOrder, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_70_9();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void type metadata completion function for LLMQUModelSortOrder.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void type metadata completion function for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  type metadata accessor for AsyncThrowingStream<LLMQUModelEventType, Error>(319, a4);
  if (v4 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for LLMQUModelAppEntityType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xB8)
  {
    if (a2 + 72 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 72) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 73;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x49;
  int v5 = v6 - 73;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelAppEntityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 72 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 72) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xB8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xB7)
  {
    unsigned int v6 = ((a2 - 184) >> 8) + 1;
    *unint64_t result = a2 + 72;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258400BB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 72;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelAppEntityType()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
}

uint64_t destroy for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2)
{
  return destroy for LLMQUModelEventType.Streaming(a1, a2, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
}

uint64_t initializeWithCopy for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
}

uint64_t assignWithCopy for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
}

uint64_t initializeWithTake for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
}

uint64_t assignWithTake for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
}

uint64_t getEnumTagSinglePayload for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258400C48);
}

uint64_t sub_258400C48()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_67_1();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258400C9C);
}

uint64_t sub_258400C9C()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityType, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_70_9();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void type metadata completion function for LLMQUModelAppEntityType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelAppEntityStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258400DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelAppEntityStatus()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
}

uint64_t destroy for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2)
{
  return destroy for LLMQUModelEventType.Streaming(a1, a2, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
}

uint64_t initializeWithCopy for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
}

uint64_t assignWithCopy for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
}

uint64_t initializeWithTake for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
}

uint64_t assignWithTake for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
}

uint64_t getEnumTagSinglePayload for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_258400E4C);
}

uint64_t sub_258400E4C()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_67_1();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258400EA0);
}

uint64_t sub_258400EA0()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelAppEntityStatus, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_70_9();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void type metadata completion function for LLMQUModelAppEntityStatus.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelSortOrder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_218_0(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_218_0(v8);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelSortOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258401044);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelTemporalReference()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
}

uint64_t initializeBufferWithCopyOfBuffer for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_112_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_2();
  int v8 = *v7;
  return v8(v5, v4, v6);
}

uint64_t destroy for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2)
{
  return destroy for LLMQUModelEventType.Streaming(a1, a2, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
}

uint64_t destroy for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_7_2();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  return v6(a1, v4);
}

uint64_t initializeWithCopy for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
}

uint64_t initializeWithCopy for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_112_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = OUTLINED_FUNCTION_136_2();
  v6(v5);
  return v4;
}

uint64_t assignWithCopy for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithCopy for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
}

uint64_t assignWithCopy for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_112_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = OUTLINED_FUNCTION_136_2();
  v6(v5);
  return v4;
}

uint64_t initializeWithTake for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return initializeWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
}

uint64_t initializeWithTake for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_112_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = OUTLINED_FUNCTION_136_2();
  v6(v5);
  return v4;
}

uint64_t assignWithTake for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for LLMQUModelEventType.Streaming(a1, a2, a3, &demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
}

uint64_t assignWithTake for LLMQUModelEventType.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_112_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = OUTLINED_FUNCTION_136_2();
  v6(v5);
  return v4;
}

uint64_t getEnumTagSinglePayload for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2584012A8);
}

uint64_t sub_2584012A8()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_67_1();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2584012FC);
}

uint64_t sub_2584012FC()
{
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<LLMQUModelTemporalReference, Error>);
  uint64_t v0 = OUTLINED_FUNCTION_70_9();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void type metadata completion function for LLMQUModelTemporalReference.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void type metadata accessor for AsyncThrowingStream<LLMQUModelEventType, Error>(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
    unint64_t v3 = type metadata accessor for AsyncThrowingStream();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t destroy for LLMQUModelResponseNonEnumArgs()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LLMQUModelResponseNonEnumArgs(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LLMQUModelResponseNonEnumArgs(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LLMQUModelResponseNonEnumArgs(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseNonEnumArgs(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 128))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelResponseNonEnumArgs(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseNonEnumArgs()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseNonEnumArgs.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEF)
  {
    if (a2 + 17 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 17) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 18;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v5 = v6 - 18;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponseNonEnumArgs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258401A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseNonEnumArgs.CodingKeys()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 11) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 12;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*a1 <= 0xBu) {
    int v6 = 11;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 12;
  if (*a1 < 0xBu) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponseEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258401BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseEventType()
{
}

void type metadata accessor for LLMQUModelResponseSortOrder()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseAppEntityType_singleValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xB7)
  {
    if (a2 + 73 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 73) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 74;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*a1 <= 0x49u) {
    int v6 = 73;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 74;
  if (*a1 < 0x49u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponseAppEntityType_singleValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 73 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 73) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xB7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xB6)
  {
    unsigned int v6 = ((a2 - 183) >> 8) + 1;
    *unint64_t result = a2 + 73;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258401D88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 73;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseAppEntityType_singleValue()
{
}

void type metadata accessor for LLMQUModelResponseAppEntityType_arrayValue()
{
}

void type metadata accessor for LLMQUModelResponseUnknownAppEntityType_singleValue()
{
}

void type metadata accessor for LLMQUModelResponseUnknownAppEntityType_arrayValue()
{
}

void *assignWithCopy for LLMQUModelResponseInferredAppEntityType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LLMQUModelResponseInferredAppEntityType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for LLMQUModelResponseInferredAppEntityType()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseAppEntityType_arrayValue(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
      return OUTLINED_FUNCTION_218_0(*(_DWORD *)a1 + 2147483646);
    }
    uint64_t v3 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v3) = -1;
    }
    int v4 = v3 - 1;
    if (v4 < 0) {
      return OUTLINED_FUNCTION_218_0(-1);
    }
  }
  else
  {
    int v4 = -1;
  }
  return OUTLINED_FUNCTION_218_0(v4);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelResponseAppEntityType_arrayValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseUnknownInferredAppEntityType()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseAppEntityStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEA)
  {
    if (a2 + 22 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 22) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 23;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*a1 <= 0x16u) {
    int v6 = 22;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 23;
  if (*a1 < 0x16u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponseAppEntityStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258402074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseAppEntityStatus()
{
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseSortOrder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_218_0(-1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    return OUTLINED_FUNCTION_218_0((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  if (*a1 <= 3u) {
    int v6 = 3;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 4;
  if (*a1 >= 3u) {
    return OUTLINED_FUNCTION_218_0(v7);
  }
  return OUTLINED_FUNCTION_218_0(-1);
}

void type metadata accessor for LLMQUModelResponseTemporalReference()
{
}

uint64_t destroy for LLMQUModelResponseStringEnums()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LLMQUModelResponseStringEnums(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LLMQUModelResponseStringEnums(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for LLMQUModelResponseStringEnums(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMQUModelResponseStringEnums(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMQUModelResponseStringEnums(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LLMQUModelResponseStringEnums()
{
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponseSortOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2584024B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for LLMQUModelResponseStringEnums.CodingKeys()
{
  return &unk_2706AD660;
}

void *type metadata accessor for LLMQUModelResponseTemporalReference.CodingKeys()
{
  return &unk_2706AD6F0;
}

void *type metadata accessor for LLMQUModelResponseAppEntityStatus.CodingKeys()
{
  return &unk_2706AD780;
}

void *type metadata accessor for LLMQUModelResponseUnknownInferredAppEntityType.CodingKeys()
{
  return &unk_2706AD810;
}

void *type metadata accessor for LLMQUModelResponseInferredAppEntityType.CodingKeys()
{
  return &unk_2706AD8A0;
}

void *type metadata accessor for LLMQUModelResponseUnknownAppEntityType_arrayValue.CodingKeys()
{
  return &unk_2706AD930;
}

void *type metadata accessor for LLMQUModelResponseUnknownAppEntityType_singleValue.CodingKeys()
{
  return &unk_2706AD9C0;
}

void *type metadata accessor for LLMQUModelResponseAppEntityType_arrayValue.CodingKeys()
{
  return &unk_2706ADA50;
}

void *type metadata accessor for LLMQUModelResponseAppEntityType_singleValue.CodingKeys()
{
  return &unk_2706ADAE0;
}

void *type metadata accessor for LLMQUModelResponseSortOrder.CodingKeys()
{
  return &unk_2706ADB70;
}

unsigned char *storeEnumTagSinglePayload for LLMQUModelResponseTemporalReference.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x258402624);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for LLMQUModelResponseEventType.CodingKeys()
{
  return &unk_2706ADC00;
}

uint64_t outlined destroy of LLMQUModelTemporalReference.Streaming(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t lazy protocol witness table accessor for type [LLMQUModelAppEntityType] and conformance <A> [A](unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_16@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 193) = a1;
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_3_31(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_4_24()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_5_22@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_26()
{
  return BidirectionalCollection<>.joined(separator:)();
}

void OUTLINED_FUNCTION_11_26()
{
  uint64_t v2 = *(void *)(v0 - 120);
  uint64_t v3 = *(void *)(v0 - 112);
  String.append(_:)(*(Swift::String *)&v2);
}

uint64_t OUTLINED_FUNCTION_14_21()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_15_23()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_21_21@<X0>(uint64_t a1@<X8>)
{
  return a1 | ((unint64_t)v1 << 32);
}

uint64_t OUTLINED_FUNCTION_23_16()
{
  return v0;
}

void OUTLINED_FUNCTION_26_20(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_27_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_15()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_29_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_15()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_34_17(uint64_t a1)
{
  *(void *)(v1 + 4688) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void *OUTLINED_FUNCTION_35_18()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_36_16()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

void OUTLINED_FUNCTION_37_19()
{
  v0[6] = 0;
  v0[7] = 0;
  v0[8] = 0;
  v0[9] = 0;
  v0[10] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[13] = 0;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[21] = 0;
  *(void *)(v1 - 72) = 0;
}

uint64_t OUTLINED_FUNCTION_39_14()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_40_14()
{
  **(unsigned char **)(v1 + 40) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_41_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_12()
{
  return *(void *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_43_17()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_44_18()
{
  return *(void *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_46_13()
{
  return v0;
}

void OUTLINED_FUNCTION_47_11(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_48_10(uint64_t a1)
{
  *(void *)(v1 + 4688) = a1;
  return v1 + 4688;
}

uint64_t OUTLINED_FUNCTION_49_13()
{
  return v0 + 5120;
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

void OUTLINED_FUNCTION_51_14()
{
  v0[6] = 0;
  v0[7] = 0;
  v0[8] = 0;
  v0[9] = 0;
  v0[10] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[13] = 0;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[21] = 0;
  *(void *)(v1 - 72) = 0;
}

uint64_t OUTLINED_FUNCTION_53_12(uint64_t a1)
{
  return outlined init with take of PQAVerificationModelProtocol?(a1, v2 - 192, v1);
}

void OUTLINED_FUNCTION_57_11()
{
  *(unsigned char *)(v1 - 217) = *(unsigned char *)(v1 - 89);
  uint64_t v2 = v0[19];
  *(void *)(v1 - 216) = *(void *)(v1 - 72);
  *(void *)(v1 - 208) = v2;
  uint64_t v3 = v0[11];
  *(void *)(v1 - 200) = v0[17];
  *(void *)(v1 - 192) = v3;
  uint64_t v4 = v0[9];
  *(void *)(v1 - 184) = v0[16];
  *(void *)(v1 - 176) = v4;
  uint64_t v5 = v0[14];
  *(void *)(v1 - 168) = v0[15];
  *(void *)(v1 - 160) = v5;
}

void *OUTLINED_FUNCTION_58_9()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_59_11()
{
  return __swift_getEnumTagSinglePayload(*(void *)(v0 + 72), 1, *(void *)(v0 + 80));
}

void *OUTLINED_FUNCTION_60_8()
{
  return __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 32), *(void *)(*(void *)(v0 + 32) + 24));
}

void OUTLINED_FUNCTION_61_8()
{
  *(_WORD *)(v1 - 226) = *(_WORD *)(v1 - 94);
  uint64_t v2 = v0[7];
  *(void *)(v1 - 224) = v0[9];
  *(void *)(v1 - 216) = v2;
  uint64_t v3 = v0[19];
  *(void *)(v1 - 208) = v0[20];
  *(void *)(v1 - 200) = v3;
  uint64_t v4 = v0[16];
  *(void *)(v1 - 192) = v0[18];
  *(void *)(v1 - 184) = v4;
  uint64_t v5 = v0[14];
  *(void *)(v1 - 176) = v0[15];
  *(void *)(v1 - 168) = v5;
}

uint64_t OUTLINED_FUNCTION_62_9()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_63_7()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_64_6()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

void OUTLINED_FUNCTION_65_8()
{
  v0[9] = 0;
  v0[10] = 0;
  v0[13] = 0;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
  v0[11] = 0;
  v0[17] = 0;
  v0[19] = 0;
  *(void *)(v1 - 72) = 0;
}

uint64_t OUTLINED_FUNCTION_67_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_69_9()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_70_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_74_9(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_75_6(float a1)
{
  *uint64_t v2 = a1;
  *(void *)(v1 + 216) = v2 + 1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_76_8()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_77_10(uint64_t a1)
{
  return getEnumTag for ResultsDialog.RenderOption(a1);
}

void OUTLINED_FUNCTION_78_9()
{
  v0[10] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[13] = 0;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
}

void OUTLINED_FUNCTION_79_8()
{
  v0[6] = 0;
  v0[8] = 0;
  v0[10] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[13] = 0;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
}

uint64_t OUTLINED_FUNCTION_80_9()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

void OUTLINED_FUNCTION_81_8()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_83_5()
{
  return 0x6F2E6E6F73726570;
}

uint64_t OUTLINED_FUNCTION_84_7()
{
  return 0x722E6E6F73726570;
}

uint64_t OUTLINED_FUNCTION_85_10()
{
  return 0x732E6E6F73726570;
}

id OUTLINED_FUNCTION_88_8(float a1)
{
  float *v1 = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_90_7()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t OUTLINED_FUNCTION_91_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_93_7()
{
  return 0x6E2E6E6F73726570;
}

uint64_t OUTLINED_FUNCTION_94_10()
{
  return 0x726F665F656C6966;
}

uint64_t OUTLINED_FUNCTION_95_7()
{
  return 0x745F686372616573;
}

uint64_t OUTLINED_FUNCTION_96_7(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_97_4(uint64_t result)
{
  *(void *)(v1 + 128) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_100_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_101_8()
{
  return 0x6C6F635F67616C66;
}

void OUTLINED_FUNCTION_102_5(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_103_8()
{
  return *(void *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_104_9()
{
  return *(void *)(v0 + 72);
}

void OUTLINED_FUNCTION_107_8()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_108_4()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_111_7()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_112_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return __swift_instantiateConcreteTypeFromMangledName(a4);
}

uint64_t OUTLINED_FUNCTION_113_8()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_114_8()
{
  *(void *)(v0 + 80) = 0;
}

uint64_t OUTLINED_FUNCTION_115_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_117_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_118_5()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_119_5(uint64_t a1)
{
  *(void *)(v1 + 4560) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_121_5()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_122_4()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_123_5()
{
  return 0x6C617669727261;
}

uint64_t OUTLINED_FUNCTION_124_5()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

void OUTLINED_FUNCTION_125_5(uint64_t a1@<X8>)
{
  *(void *)(v3 - 120) = a1;
  *(void *)(v3 - 112) = v1 | 0xED00002000000000;
  *(void *)(v3 - 128) = v2;
}

uint64_t OUTLINED_FUNCTION_126_3()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_128_4()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_129_3()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
}

uint64_t OUTLINED_FUNCTION_131_3()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_132_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 16) = v4;
  *(void *)(v5 - 72) = a4;
}

void OUTLINED_FUNCTION_133_2()
{
  *uint64_t v2 = v0;
}

uint64_t OUTLINED_FUNCTION_135_3()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_136_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t OUTLINED_FUNCTION_139_2()
{
  return 0x656372756F73;
}

uint64_t OUTLINED_FUNCTION_140_2()
{
  return 0x72616C75676E6973;
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_142_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_143_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_144_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_146_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_147_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_150_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_151_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_152_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_153_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_154_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_155_2(uint64_t a1)
{
  *(void *)(v1 + 4976) = a1;
  return v1 + 4976;
}

uint64_t OUTLINED_FUNCTION_156_2()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

void OUTLINED_FUNCTION_158_2()
{
  *uint64_t v0 = *(unsigned char *)(v1 - 65);
}

void OUTLINED_FUNCTION_159_2()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_161_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_165_2(uint64_t a1@<X8>)
{
  *(void *)(v2 - 120) = v1;
  *(void *)(v2 - 112) = (a1 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_166_2()
{
  return 1852141679;
}

uint64_t OUTLINED_FUNCTION_167_1()
{
  return 1701669236;
}

uint64_t OUTLINED_FUNCTION_168_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_170_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_171_2()
{
  return *(void *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_172_2()
{
  **(unsigned char **)(v0 + 40) = 3;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_173_2()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_174_2()
{
  *(void *)(v1 - 128) = v0;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_179_1(uint64_t result, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_181_2()
{
  return *(void *)(v0 + 56);
}

void OUTLINED_FUNCTION_182_2()
{
  *(void *)(v0 - 112) = 0xEA0000000000203ALL;
}

void OUTLINED_FUNCTION_183_2()
{
  uint64_t v2 = *(void *)(v0 - 120);
  uint64_t v3 = *(void *)(v0 - 112);
  String.append(_:)(*(Swift::String *)&v2);
}

uint64_t OUTLINED_FUNCTION_184_2(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return 0;
}

void OUTLINED_FUNCTION_185_2()
{
  v0[12] = 0;
  v0[13] = 0;
  v0[15] = 0;
  v0[16] = 0;
  v0[10] = 0;
  v0[11] = 0;
  v0[14] = 0;
}

uint64_t OUTLINED_FUNCTION_186_1()
{
  return outlined init with take of PQAVerificationModelProtocol?(v0 + 5120, v0 + 4848, v1);
}

uint64_t OUTLINED_FUNCTION_188_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_190_1()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t OUTLINED_FUNCTION_192_1(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_193_1(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return outlined init with take of LLMQUModelEventType.Streaming(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_196_1(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_199_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_200_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 224) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_201_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return v1 - 96;
}

void OUTLINED_FUNCTION_203_1(uint64_t a1@<X8>)
{
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = (a1 - 32) | 0x8000000000000000;
  *(void *)(v3 - 128) = v1;
}

void OUTLINED_FUNCTION_204_1()
{
  *(void *)(v0 + 136) = 1;
}

uint64_t OUTLINED_FUNCTION_206_0()
{
  return *(void *)(v0 + 5112);
}

void OUTLINED_FUNCTION_207_1(char a1@<W8>)
{
  *(unsigned char *)(v2 - 129) = a1;
  LLMQUModelAppEntityType.rawValue.getter();
  *(void *)(v2 - 128) = v1;
}

uint64_t OUTLINED_FUNCTION_208_1(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = *(void *)(v4 + 280);
  uint64_t v7 = *(void *)(v4 + 256);
  return static LLMQUModelResponse.isValidQueryTerm(term:fieldname:query:)(a1, a2, a3, a4, v6, v7);
}

uint64_t OUTLINED_FUNCTION_209_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_210_1()
{
  v0[6] = 0;
  v0[8] = 0;
  v0[10] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[13] = 0;
}

uint64_t OUTLINED_FUNCTION_211_1()
{
  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_213_1@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 256) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

void OUTLINED_FUNCTION_217_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_218_0@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_219_0(uint64_t result)
{
  *(void *)(v1 + 4688) = result;
  return result;
}

uint64_t LLMQUModelServer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  LLMQUModelServer.init()();
  return v0;
}

uint64_t LLMQUModelServer.modelID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LLMQUModelServer.samplingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_samplingParameters;
  type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_7_2();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t LLMQUModelServer.model.getter()
{
  return swift_retain();
}

uint64_t LLMQUModelServer.model.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_25_21();
  void *v1 = a1;
  return swift_release();
}

uint64_t (*LLMQUModelServer.model.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t LLMQUModelServer.modelOnBehalfOfPID.getter()
{
  OUTLINED_FUNCTION_24_25();
  return *(void *)v0;
}

uint64_t LLMQUModelServer.modelOnBehalfOfPID.setter(uint64_t a1, char a2)
{
  uint64_t result = OUTLINED_FUNCTION_25_21();
  *(void *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*LLMQUModelServer.modelOnBehalfOfPID.modify())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t LLMQUModelServer.modelVersionNumber.getter()
{
  return OUTLINED_FUNCTION_19_0();
}

uint64_t LLMQUModelServer.modelVersionNumber.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_25_21();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*LLMQUModelServer.modelVersionNumber.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

unint64_t LLMQUModelServer.modelPrewarmTimeinMS.getter()
{
  OUTLINED_FUNCTION_24_25();
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t LLMQUModelServer.modelPrewarmTimeinMS.setter(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_25_21();
  *(_DWORD *)uint64_t v1 = a1;
  *(unsigned char *)(v1 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*LLMQUModelServer.modelPrewarmTimeinMS.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

const char *LLMQUModelServer.userPromptKey.unsafeMutableAddressor()
{
  return "userPrompt";
}

uint64_t static LLMQUModelServer.userPromptKey.getter()
{
  return 0x6D6F725072657375;
}

void *LLMQUModelServer.promptTemplateID.unsafeMutableAddressor()
{
  return &static LLMQUModelServer.promptTemplateID;
}

unint64_t static LLMQUModelServer.promptTemplateID.getter()
{
  return 0xD00000000000002DLL;
}

char **LLMQUModelServer.fallbackPromptTemplate.unsafeMutableAddressor()
{
  return &static LLMQUModelServer.fallbackPromptTemplate;
}

const char *static LLMQUModelServer.fallbackPromptTemplate.getter()
{
  return "{{ specialToken.chat.role.system }}You are a helpful assistant that returns a JSON structure with key informati"
         "on in response to the query.{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.user }}{{ userPr"
         "ompt }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.assistant }}";
}

uint64_t LLMQUModelServer.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  uint64_t v2 = OUTLINED_FUNCTION_81(v1);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v24[-1] - v6;
  uint64_t v8 = type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_15();
  uint64_t v14 = v13 - v12;
  *(void *)(v0 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_model) = 0;
  uint64_t v15 = v0 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelOnBehalfOfPID;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = (void *)(v0 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelVersionNumber);
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = v0 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelPrewarmTimeinMS;
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingServer()();
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  *(void *)(v0 + 16) = dispatch thunk of CatalogResource.id.getter();
  *(void *)(v0 + 24) = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  static SamplingStrategy.topK(_:)();
  uint64_t v19 = type metadata accessor for SamplingStrategy();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v19);
  outlined init with copy of SamplingStrategy?((uint64_t)v7, (uint64_t)v5);
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  uint64_t v20 = OUTLINED_FUNCTION_105_10();
  outlined destroy of PQAVerificationModelProtocol?(v20, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v0 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_samplingParameters, v14, v8);
  return v0;
}

uint64_t LLMQUModelServer.prewarm(originatorPID:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v73 = a1;
  void v65[3] = type metadata accessor for AssetVersion();
  OUTLINED_FUNCTION_1();
  v65[2] = v3;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  v65[1] = v5;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogAsset<ServerConfigurationAssetMetadata, ServerConfigurationAssetContents>);
  OUTLINED_FUNCTION_1();
  v65[0] = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v71 = v8;
  uint64_t v9 = type metadata accessor for CachePolicy();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = type metadata accessor for GenerativeModelSessionConfiguration();
  uint64_t v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_15();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_5_8();
  uint64_t v15 = type metadata accessor for Date();
  OUTLINED_FUNCTION_1();
  uint64_t v17 = v16;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v65 - v22;
  unint64_t v24 = &v2[OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelOnBehalfOfPID];
  OUTLINED_FUNCTION_2_2();
  if ((v24[8] & 1) != 0
    || *(void *)v24 != v73
    || (unint64_t v25 = v23,
        uint64_t v26 = (uint64_t *)&v2[OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_model],
        swift_beginAccess(),
        uint64_t v27 = *v26,
        uint64_t v23 = v25,
        !v27))
  {
    uint64_t v67 = v21;
    uint64_t v68 = v17;
    uint64_t v69 = v15;
    uint64_t v70 = v23;
    Date.init()();
    if (one-time initialization token for llmQU != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)static Logging.llmQU);
    unint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = v2;
      uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      *(_DWORD *)uint64_t v38 = 134217984;
      OUTLINED_FUNCTION_74_10();
      _os_log_impl(&dword_257DC6000, v35, v36, "Prewarming model for PID %ld", v38, 0xCu);
      uint64_t v2 = v37;
      OUTLINED_FUNCTION_34();
    }
    uint64_t v72 = v2;

    *(void *)unint64_t v24 = v73;
    unsigned char v24[8] = 0;
    type metadata accessor for TokenGenerator();
    type metadata accessor for LLMBundle();
    lazy protocol witness table accessor for type LLMBundle and conformance LLMBundle(&lazy protocol witness table cache variable for type LLMBundle and conformance LLMBundle, MEMORY[0x263F561C0]);
    swift_bridgeObjectRetain();
    uint64_t v39 = v72;
    ResourceBundleIdentifier.init(stringLiteral:)();
    static CachePolicy.inMemory.getter();
    GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
    uint64_t v28 = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:)();
    TokenGenerator.prewarm()();
    unint64_t v40 = (uint64_t *)&v39[OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_model];
    OUTLINED_FUNCTION_2_2();
    *unint64_t v40 = v28;
    swift_retain();
    swift_release();
    static Catalog.Resource.LLM.ServerConfiguration.SearchQueryUnderstandingServer()();
    __swift_project_boxed_opaque_existential_1(v77, v77[3]);
    dispatch thunk of AssetBackedResource.fetchAsset()();
    char v41 = (uint8_t *)v66;
    CatalogAsset.version.getter();
    uint64_t v42 = AssetVersion.number.getter();
    uint64_t v44 = v43;
    OUTLINED_FUNCTION_16_1();
    v46(v45);
    Swift::String v47 = (uint64_t *)&v39[OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelVersionNumber];
    OUTLINED_FUNCTION_2_2();
    *Swift::String v47 = v42;
    v47[1] = v44;
    swift_bridgeObjectRelease();
    swift_retain_n();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.info.getter();
    uint64_t v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      char v41 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      uint64_t v51 = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)char v41 = 136315138;
      uint64_t v76 = v51;
      uint64_t v39 = v41 + 4;
      uint64_t v52 = v47[1];
      uint64_t v74 = *v47;
      uint64_t v75 = v52;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v53 = String.init<A>(describing:)();
      uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v76);
      OUTLINED_FUNCTION_109_7();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_257DC6000, v48, (os_log_type_t)v50, "LLM QU asset version number: %s", v41, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_release_n();

      OUTLINED_FUNCTION_105_10();
    }
    OUTLINED_FUNCTION_16_1();
    v56(v55);
    OUTLINED_FUNCTION_82_9();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v58 = v57;
    char v59 = *(void (**)(NSObject *, uint8_t *))(v50 + 8);
    v59(v48, v41);
    uint64_t v60 = OUTLINED_FUNCTION_105_10();
    ((void (*)(uint64_t))v59)(v60);
    double v61 = v58 * 1000.0;
    if ((~COERCE__INT64(v58 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v61 > -1.0)
      {
        if (v61 < 4294967300.0)
        {
          unsigned int v62 = v61;
          unint64_t v63 = &v39[OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelPrewarmTimeinMS];
          OUTLINED_FUNCTION_2_2();
          *(_DWORD *)unint64_t v63 = v62;
          v63[4] = 0;
          return v28;
        }
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v28 = v27;
  uint64_t v29 = one-time initialization token for llmQU;
  swift_retain();
  if (v29 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logging.llmQU);
  unint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    *(_DWORD *)uint64_t v33 = 134217984;
    OUTLINED_FUNCTION_74_10();
    _os_log_impl(&dword_257DC6000, v31, v32, "Model for PID %ld already prewarmed, no need to prewarm again", v33, 0xCu);
    OUTLINED_FUNCTION_34();
  }

  return v28;
}

uint64_t LLMQUModelServer.parse(_:originatorPID:)()
{
  OUTLINED_FUNCTION_27();
  *(void *)(v1 + 752) = v0;
  *(unsigned char *)(v1 + 1217) = v2;
  *(void *)(v1 + 744) = v3;
  *(void *)(v1 + 736) = v4;
  *(void *)(v1 + 728) = v5;
  *(void *)(v1 + 720) = v6;
  uint64_t v7 = type metadata accessor for OSSignpostError();
  *(void *)(v1 + 760) = v7;
  OUTLINED_FUNCTION_12_0(v7);
  *(void *)(v1 + 768) = v8;
  *(void *)(v1 + 776) = OUTLINED_FUNCTION_50_0();
  *(void *)(v1 + 784) = swift_task_alloc();
  *(void *)(v1 + 792) = swift_task_alloc();
  *(void *)(v1 + 800) = swift_task_alloc();
  *(void *)(v1 + 808) = swift_task_alloc();
  *(void *)(v1 + 816) = swift_task_alloc();
  *(void *)(v1 + 824) = swift_task_alloc();
  *(void *)(v1 + 832) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Prompt?);
  OUTLINED_FUNCTION_81(v9);
  *(void *)(v1 + 840) = OUTLINED_FUNCTION_49_1();
  uint64_t v10 = type metadata accessor for Prompt();
  *(void *)(v1 + 848) = v10;
  OUTLINED_FUNCTION_12_0(v10);
  *(void *)(v1 + 856) = v11;
  *(void *)(v1 + 864) = OUTLINED_FUNCTION_49_1();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  OUTLINED_FUNCTION_81(v12);
  *(void *)(v1 + 872) = OUTLINED_FUNCTION_49_1();
  uint64_t v13 = type metadata accessor for PromptTemplate();
  *(void *)(v1 + 880) = v13;
  OUTLINED_FUNCTION_12_0(v13);
  *(void *)(v1 + 888) = v14;
  *(void *)(v1 + 896) = OUTLINED_FUNCTION_49_1();
  uint64_t v15 = type metadata accessor for Date();
  *(void *)(v1 + 904) = v15;
  OUTLINED_FUNCTION_12_0(v15);
  *(void *)(v1 + 912) = v16;
  *(void *)(v1 + 920) = OUTLINED_FUNCTION_50_0();
  *(void *)(v1 + 928) = swift_task_alloc();
  *(void *)(v1 + 936) = swift_task_alloc();
  *(void *)(v1 + 944) = swift_task_alloc();
  uint64_t v17 = type metadata accessor for OSSignpostID();
  *(void *)(v1 + 952) = v17;
  OUTLINED_FUNCTION_12_0(v17);
  *(void *)(v1 + 960) = v18;
  *(void *)(v1 + 968) = OUTLINED_FUNCTION_50_0();
  *(void *)(v1 + 976) = swift_task_alloc();
  *(void *)(v1 + 984) = swift_task_alloc();
  *(void *)(v1 + 992) = swift_task_alloc();
  *(void *)(v1 + 1000) = swift_task_alloc();
  *(void *)(v1 + 1008) = swift_task_alloc();
  *(void *)(v1 + 1016) = swift_task_alloc();
  *(void *)(v1 + 1024) = swift_task_alloc();
  *(void *)(v1 + 1032) = swift_task_alloc();
  *(void *)(v1 + 1040) = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v19, v20, v21);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  v7[142] = v6;
  v7[143] = v8;
  v7[144] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  *(void *)(v3 + 1168) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void (*v11)(void);
  uint64_t v12;
  void (*v13)(uint64_t);
  char v14;
  char v15;
  char v16;
  NSObject *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t);
  void (*v20)(void);
  _WORD *v21;
  os_signpost_type_t v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unsigned char __dst[152];
  uint64_t v35;
  uint64_t v36;

  unint64_t v35 = v0;
  memcpy((void *)(v0 + 168), (const void *)(v0 + 320), 0x98uLL);
  outlined retain of LLMQUModelResponse(v0 + 168);
  outlined retain of LLMQUModelResponse(v0 + 168);
  uint64_t v1 = Logger.logObject.getter();
  char v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    uint64_t v33 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v3 = 136315138;
    memcpy(__dst, (const void *)(v0 + 168), sizeof(__dst));
    uint64_t v4 = LLMQUModelResponse.description.getter();
    *(void *)(v0 + 712) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined release of LLMQUModelResponse(v0 + 168);
    outlined release of LLMQUModelResponse(v0 + 168);
    _os_log_impl(&dword_257DC6000, v1, v2, "Got response from LLM QU with constrained decoding: %s", v3, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    outlined release of LLMQUModelResponse(v0 + 168);
    outlined release of LLMQUModelResponse(v0 + 168);
  }

  unint64_t v31 = *(_DWORD *)(v0 + 1212);
  os_log_type_t v32 = *(_DWORD *)(v0 + 1208);
  uint64_t v29 = *(void *)(v0 + 1088);
  uint64_t v30 = *(void *)(v0 + 1120);
  uint64_t v28 = *(void *)(v0 + 1080);
  uint64_t v6 = *(void *)(v0 + 936);
  uint64_t v7 = *(void *)(v0 + 912);
  uint64_t v8 = *(void *)(v0 + 720);
  OUTLINED_FUNCTION_209();
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v9 + 272))(v6);
  swift_release();
  uint64_t v11 = *(void (**)(void))(v7 + 8);
  OUTLINED_FUNCTION_45_8();
  v11();
  uint64_t v12 = OUTLINED_FUNCTION_23_17();
  v13(v12);
  OUTLINED_FUNCTION_45_8();
  v11();
  LOBYTE(v7) = *(unsigned char *)(v0 + 1236);
  uint64_t v14 = *(unsigned char *)(v0 + 1216);
  uint64_t v15 = *(unsigned char *)(v0 + 1220);
  uint64_t v16 = *(unsigned char *)(v0 + 1228);
  LOBYTE(v11) = *(unsigned char *)(v0 + 1232);
  memcpy((void *)v8, (const void *)(v0 + 168), 0x98uLL);
  *(void *)(v8 + 152) = v28;
  *(void *)(v8 + 160) = v29;
  *(_DWORD *)(v8 + 168) = v30;
  *(unsigned char *)(v8 + 172) = v7;
  *(_DWORD *)(v8 + 176) = 0;
  *(unsigned char *)(v8 + 180) = v14;
  *(_DWORD *)(v8 + 184) = 0;
  *(unsigned char *)(v8 + 188) = v15;
  *(_DWORD *)(v8 + 192) = v31;
  *(unsigned char *)(v8 + 196) = v16;
  *(_DWORD *)(v8 + 200) = v32;
  *(unsigned char *)(v8 + 204) = (_BYTE)v11;
  *(_DWORD *)(v8 + 208) = v10;
  *(unsigned char *)(v8 + 212) = 0;
  *(_DWORD *)(v8 + 216) = 0;
  *(unsigned char *)(v8 + 220) = 0;
  uint64_t v17 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v8 = *(void *)(v0 + 768);
    OUTLINED_FUNCTION_84_8();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v18 = OUTLINED_FUNCTION_20_1();
    if (v19(v18) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v20();
    }
    uint64_t v21 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v21);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v17, v22, v23, "SearchTool.LLMQU");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_91_9();
  unint64_t v24 = *(void *)(v0 + 1000);
  unint64_t v25 = *(void *)(v0 + 952);

  ((void (*)(uint64_t, uint64_t))v8)(v24, v25);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v26();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  v7[148] = v6;
  v7[149] = v8;
  v7[150] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

void LLMQUModelServer.parse(_:originatorPID:)()
{
  if (one-time initialization token for searchComponentSignposter != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 1048) = __swift_project_value_buffer(v2, (uint64_t)static Logging.searchComponentSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v3 = OSSignposter.logHandle.getter();
  os_signpost_type_t v4 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_55();
    os_signpost_id_t v6 = OUTLINED_FUNCTION_41_1(v5);
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v3, v4, v6, "SearchTool.LLMQU", "", v1, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v7 = *(void *)(v0 + 1040);
  uint64_t v8 = *(void *)(v0 + 1032);
  uint64_t v9 = *(void *)(v0 + 960);
  uint64_t v10 = *(void *)(v0 + 952);
  uint64_t v11 = *(void *)(v0 + 752);
  char v12 = *(unsigned char *)(v0 + 1217);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v0 + 1056) = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v0 + 1064) = v13;
  *(void *)(v0 + 1072) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v7, v10);
  *(unsigned char *)(v0 + 1236) = 1;
  *(unsigned char *)(v0 + 1216) = 1;
  *(unsigned char *)(v0 + 1220) = 1;
  *(unsigned char *)(v0 + 1228) = 1;
  *(unsigned char *)(v0 + 1232) = 1;
  *(unsigned char *)(v0 + 1224) = 1;
  uint64_t v14 = (void *)(v11 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelVersionNumber);
  OUTLINED_FUNCTION_19_0();
  swift_beginAccess();
  *(void *)(v0 + 1080) = *v14;
  *(void *)(v0 + 1088) = v14[1];
  if (v12)
  {
    uint64_t v16 = self;
    swift_bridgeObjectRetain();
    id v17 = objc_msgSend(v16, sel_processInfo);
    LODWORD(v15) = objc_msgSend(v17, sel_processIdentifier);

    uint64_t v15 = (int)v15;
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 744);
    swift_bridgeObjectRetain();
  }
  if (one-time initialization token for llmQU != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  *(void *)(v0 + 1096) = __swift_project_value_buffer(v18, (uint64_t)static Logging.llmQU);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    *(_DWORD *)uint64_t v21 = 134217984;
    *(void *)(v0 + 672) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v19, v20, "Calling LLM QU GMS parse on behalf of PID: %ld", v21, 0xCu);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v22 = *(void *)(v0 + 752);
  uint64_t v23 = *(void *)(v0 + 736);
  uint64_t v24 = *(void *)(v0 + 728);

  *(void *)(v0 + 1104) = LLMQUModelServer.prewarm(originatorPID:)(v15);
  uint64_t v25 = v22 + OBJC_IVAR____TtC10OmniSearch16LLMQUModelServer_modelPrewarmTimeinMS;
  swift_beginAccess();
  *(_DWORD *)(v0 + 1208) = *(_DWORD *)v25;
  *(unsigned char *)(v0 + 1232) = *(unsigned char *)(v25 + 4);
  Date.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_258661700;
  *(void *)(v26 + 32) = 0x6D6F725072657375;
  *(void *)(v26 + 40) = 0xEA00000000007470;
  *(void *)(v26 + 48) = v24;
  *(void *)(v26 + 56) = v23;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 1112) = Dictionary.init(dictionaryLiteral:)();
  static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingServerID.getter();
  Dictionary.init(dictionaryLiteral:)();
  PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_209();
  *(_DWORD *)(v0 + 1212) = (*(uint64_t (**)(void))(v27 + 272))();
  *(unsigned char *)(v0 + 1228) = 0;
  unint64_t v28 = String.count.getter();
  *(void *)(v0 + 1120) = v28;
  if ((v28 & 0x8000000000000000) != 0 || HIDWORD(v28))
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_75_7();
    OUTLINED_FUNCTION_36_1();
    return;
  }
  uint64_t v29 = *(void *)(v0 + 848);
  uint64_t v30 = *(void *)(v0 + 840);
  *(unsigned char *)(v0 + 1236) = 0;
  Date.init()();
  LLMQUModelServer.createOverridePrompt()(v30);
  if (__swift_getEnumTagSinglePayload(v30, 1, v29) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?(*(void *)(v0 + 840), &demangling cache variable for type metadata for Prompt?);
    type metadata accessor for NSUserDefaults();
    if (static NSUserDefaults.llmQUModelType.getter() == 0x4443736D67 && v31 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
        uint64_t v34 = (void *)swift_task_alloc();
        *(void *)(v0 + 1176) = v34;
        *uint64_t v34 = v0;
        v34[1] = LLMQUModelServer.parse(_:originatorPID:);
        OUTLINED_FUNCTION_87_9(*(void *)(v0 + 896));
        OUTLINED_FUNCTION_36_1();
        closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)(v35, v36, v37, v38);
        return;
      }
    }
    uint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v0 + 1160) = v46;
    *uint64_t v46 = v0;
    v46[1] = LLMQUModelServer.parse(_:originatorPID:);
    OUTLINED_FUNCTION_36_1();
    closure #2 in LLMQUModelServer.parseUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(v47, v48, v49, v50, v51);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 856) + 32))(*(void *)(v0 + 864), *(void *)(v0 + 840), *(void *)(v0 + 848));
    unint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 1128) = v40;
    *unint64_t v40 = v0;
    v40[1] = LLMQUModelServer.parse(_:originatorPID:);
    OUTLINED_FUNCTION_87_9(*(void *)(v0 + 864));
    OUTLINED_FUNCTION_36_1();
    closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)(v41, v42, v43, v44);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned char *v2;
  NSObject *v3;
  os_log_type_t v4;
  unint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  NSObject *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  int v35;
  uint64_t v36;
  const char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  void (*v51)(uint64_t, uint64_t);
  char v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t);
  void (*v64)(void);
  uint8_t *v65;
  os_signpost_type_t v66;
  os_signpost_id_t v67;
  void (*v68)(uint64_t, uint64_t);
  id v69;
  void (*v70)(void);
  _WORD *v71;
  os_signpost_type_t v72;
  os_signpost_id_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  int v125;
  void *__src;
  void *__srca;
  char v128;
  uint64_t v129;
  uint64_t v130[21];
  uint64_t v131;

  uint64_t v131 = v0;
  uint64_t v1 = v0 + 688;
  uint64_t v2 = (unsigned char *)(v0 + 1224);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_signpost_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    __src = (void *)(v0 + 680);
    uint64_t v5 = *(void *)(v0 + 1144);
    os_signpost_id_t v6 = *(void *)(v0 + 1136);
    uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_14_1();
    v130[0] = OUTLINED_FUNCTION_13_1();
    *uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v8 = v6;
    uint64_t v1 = v0 + 688;
    *(void *)(v0 + 680) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v5, v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v2 = (unsigned char *)(v0 + 1224);
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_110_7(&dword_257DC6000, v9, v10, "Got response from LLM QU with promptOverride: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  OUTLINED_FUNCTION_209();
  char v12 = (*(uint64_t (**)(void))(v11 + 272))();
  *uint64_t v2 = 0;
  OUTLINED_FUNCTION_105_10();
  uint64_t v13 = String.count.getter();
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = v13;
    if (!HIDWORD(v13))
    {
      uint64_t v15 = *(void *)(v0 + 1152);
      *(unsigned char *)(v0 + 1216) = 0;
      Date.init()();
      swift_bridgeObjectRetain();
      LLMQUModelResponse.init(jsonString:query:)();
      if (v15)
      {
        OUTLINED_FUNCTION_83_6();
        uint64_t v24 = *(void *)(v0 + 912);
        Swift::String v119 = *(void *)(v0 + 896);
        uint64_t v25 = *(void *)(v0 + 888);
        Swift::String v116 = *(void *)(v0 + 880);
        uint64_t v26 = *(void *)(v0 + 864);
        uint64_t v27 = *(void *)(v0 + 856);
        unint64_t v28 = *(void *)(v0 + 848);
        swift_release();
        uint64_t v29 = *(void (**)(void))(v24 + 8);
        OUTLINED_FUNCTION_95_8();
        v29();
        uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        uint64_t v30 = v27 + 8;
        v31(v26, v28);
        OUTLINED_FUNCTION_95_8();
        v29();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v119, v116);
        OUTLINED_FUNCTION_95_8();
        v29();
        swift_bridgeObjectRelease();
        os_log_type_t v32 = OSSignposter.logHandle.getter();
        OSSignpostIntervalState.signpostID.getter();
        static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          OUTLINED_FUNCTION_84_8();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          char v33 = OUTLINED_FUNCTION_130();
          uint64_t v35 = v34(v33);
          uint64_t v36 = *(void *)(v0 + 976);
          if (v35 == *MEMORY[0x263F90238])
          {
            uint64_t v37 = "[Error] Interval already ended";
          }
          else
          {
            OUTLINED_FUNCTION_77();
            v64();
            uint64_t v37 = "";
          }
          unint64_t v65 = (uint8_t *)OUTLINED_FUNCTION_55();
          *(_WORD *)unint64_t v65 = 0;
          OSSignpostID.rawValue.getter();
          OUTLINED_FUNCTION_186();
          _os_signpost_emit_with_name_impl(&dword_257DC6000, v32, v66, v67, "SearchTool.LLMQU", v37, v65, 2u);
          OUTLINED_FUNCTION_34();
        }
        else
        {
          uint64_t v36 = *(void *)(v0 + 976);
        }
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 1064);
        OUTLINED_FUNCTION_81_9();
        OUTLINED_FUNCTION_51_15();

        v68(v36, v30);
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
      }
      else
      {
        OUTLINED_FUNCTION_103_9(v16, v17, v18, v19, v20, v21, v22, v23, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96, v98,
          v100,
          v102,
          v104,
          v106,
          v109,
          v111,
          v113,
          v115,
          v118,
          v121,
          v122,
          v14,
          v124,
          (uint64_t)__src,
          v1,
          v128);
        outlined retain of LLMQUModelResponse(v0 + 16);
        __srca = (void *)(v0 + 16);
        outlined retain of LLMQUModelResponse(v0 + 16);
        uint64_t v38 = Logger.logObject.getter();
        uint64_t v39 = static os_log_type_t.info.getter();
        uint64_t v125 = v12;
        if (os_log_type_enabled(v38, v39))
        {
          unint64_t v40 = (uint8_t *)OUTLINED_FUNCTION_14_1();
          uint64_t v129 = OUTLINED_FUNCTION_13_1();
          *(_DWORD *)unint64_t v40 = 136315138;
          memcpy(v130, __srca, 0x98uLL);
          uint64_t v41 = LLMQUModelResponse.description.getter();
          *(void *)(v0 + 688) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v129);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of LLMQUModelResponse((uint64_t)__srca);
          outlined release of LLMQUModelResponse((uint64_t)__srca);
          _os_log_impl(&dword_257DC6000, v38, v39, "Decoded response: %s", v40, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
          outlined release of LLMQUModelResponse((uint64_t)__srca);
          outlined release of LLMQUModelResponse((uint64_t)__srca);
        }

        Swift::String v117 = *(_DWORD *)(v0 + 1212);
        Swift::String v120 = *(_DWORD *)(v0 + 1208);
        Swift::String v112 = *(void *)(v0 + 1088);
        Swift::String v114 = *(void *)(v0 + 1120);
        Swift::String v110 = *(void *)(v0 + 1080);
        uint64_t v97 = *(void *)(v0 + 1104);
        uint64_t v99 = *(void *)(v0 + 936);
        uint64_t v43 = *(void *)(v0 + 928);
        uint64_t v44 = *(void *)(v0 + 912);
        unint64_t v103 = *(void *)(v0 + 896);
        Swift::String v105 = *(void *)(v0 + 944);
        uint64_t v45 = *(void *)(v0 + 888);
        unint64_t v101 = *(void *)(v0 + 880);
        char v95 = *(void *)(v0 + 864);
        uint64_t v46 = *(void *)(v0 + 856);
        uint64_t v47 = *(void *)(v0 + 848);
        uint64_t v48 = *(void *)(v0 + 720);
        OUTLINED_FUNCTION_209();
        LODWORD(v107) = (*(uint64_t (**)(uint64_t))(v49 + 272))(v43);
        swift_release();
        uint64_t v50 = *(void (**)(void))(v44 + 8);
        OUTLINED_FUNCTION_65();
        v50();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v95, v47);
        OUTLINED_FUNCTION_65();
        v50();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v103, v101);
        OUTLINED_FUNCTION_65();
        v50();
        LOBYTE(v50) = *(unsigned char *)(v0 + 1236);
        LOBYTE(v45) = *(unsigned char *)(v0 + 1216);
        LOBYTE(v44) = *(unsigned char *)(v0 + 1220);
        LOBYTE(v46) = *(unsigned char *)(v0 + 1228);
        uint64_t v51 = (void (*)(uint64_t, uint64_t))*(unsigned __int8 *)(v0 + 1232);
        uint64_t v52 = *(unsigned char *)(v0 + 1224);
        uint64_t v53 = memcpy((void *)v48, __srca, 0x98uLL);
        OUTLINED_FUNCTION_97_5((uint64_t)v53, v54, v55, v56, v57, v58, v59, v60, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97, v99,
          v101,
          v103,
          v105,
          v107,
          v110,
          v112,
          v114);
        *(unsigned char *)(v48 + 172) = (_BYTE)v50;
        *(_DWORD *)(v48 + 176) = v123;
        *(unsigned char *)(v48 + 180) = v45;
        *(_DWORD *)(v48 + 184) = 0;
        *(unsigned char *)(v48 + 188) = v44;
        *(_DWORD *)(v48 + 192) = v117;
        *(unsigned char *)(v48 + 196) = v46;
        *(_DWORD *)(v48 + 200) = v120;
        *(unsigned char *)(v48 + 204) = (_BYTE)v51;
        *(_DWORD *)(v48 + 208) = v125;
        *(unsigned char *)(v48 + 212) = v52;
        *(_DWORD *)(v48 + 216) = v108;
        *(unsigned char *)(v48 + 220) = 0;
        double v61 = OSSignposter.logHandle.getter();
        OSSignpostIntervalState.signpostID.getter();
        static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 768);
          OUTLINED_FUNCTION_84_8();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          unsigned int v62 = OUTLINED_FUNCTION_20_1();
          if (v63(v62) != *MEMORY[0x263F90238])
          {
            OUTLINED_FUNCTION_77();
            v70();
          }
          uint64_t v71 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_1(v71);
          OUTLINED_FUNCTION_186();
          OUTLINED_FUNCTION_129(&dword_257DC6000, v61, v72, v73, "SearchTool.LLMQU");
          OUTLINED_FUNCTION_34();
        }
        OUTLINED_FUNCTION_91_9();
        uint64_t v74 = *(void *)(v0 + 1016);
        uint64_t v75 = *(void *)(v0 + 952);

        v51(v74, v75);
        swift_release();
        OUTLINED_FUNCTION_3_32();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_86();
      }
      OUTLINED_FUNCTION_43_16();
      __asm { BRAA            X1, X16 }
    }
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_75_7();
  OUTLINED_FUNCTION_43_16();
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  void (*v24)(void);
  NSObject *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  int v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void (*v41)(void);
  char v42;
  void (*v43)(uint64_t, uint64_t);
  char v44;
  char v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t);
  void (*v57)(void);
  os_signpost_type_t v58;
  os_signpost_id_t v59;
  void (*v60)(uint64_t, uint64_t);
  id v61;
  void (*v62)(void);
  _WORD *v63;
  os_signpost_type_t v64;
  os_signpost_id_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *__src;
  uint64_t v114;
  int v115;
  int v116;
  char v117;
  uint64_t v118;
  uint64_t v119[21];
  uint64_t v120;

  Swift::String v120 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 1192);
    os_signpost_type_t v4 = *(void *)(v0 + 1184);
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_14_1();
    v119[0] = OUTLINED_FUNCTION_13_1();
    *uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 704) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_110_7(&dword_257DC6000, v6, v7, "Got response from LLM QU: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = String.count.getter();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v8;
    if (!HIDWORD(v8))
    {
      uint64_t v10 = *(void *)(v0 + 1200);
      *(unsigned char *)(v0 + 1216) = 0;
      OUTLINED_FUNCTION_209();
      char v12 = (*(uint64_t (**)(void))(v11 + 272))();
      *(unsigned char *)(v0 + 1224) = 0;
      Date.init()();
      swift_bridgeObjectRetain();
      LLMQUModelResponse.init(jsonString:query:)();
      if (v10)
      {
        OUTLINED_FUNCTION_83_6();
        uint64_t v21 = *(void *)(v0 + 912);
        uint64_t v22 = *(void *)(v0 + 896);
        swift_release();
        uint64_t v23 = *(void (**)(void))(v21 + 8);
        OUTLINED_FUNCTION_65();
        v23();
        OUTLINED_FUNCTION_65();
        v23();
        OUTLINED_FUNCTION_45_8();
        v24();
        OUTLINED_FUNCTION_65();
        v23();
        swift_bridgeObjectRelease();
        uint64_t v25 = OSSignposter.logHandle.getter();
        OSSignpostIntervalState.signpostID.getter();
        static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          OUTLINED_FUNCTION_84_8();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v26 = OUTLINED_FUNCTION_130();
          unint64_t v28 = v27(v26);
          uint64_t v29 = *(void *)(v0 + 968);
          if (v28 != *MEMORY[0x263F90238])
          {
            OUTLINED_FUNCTION_77();
            v57();
          }
          *(_WORD *)OUTLINED_FUNCTION_55() = 0;
          OSSignpostID.rawValue.getter();
          OUTLINED_FUNCTION_186();
          OUTLINED_FUNCTION_129(&dword_257DC6000, v25, v58, v59, "SearchTool.LLMQU");
          OUTLINED_FUNCTION_34();
        }
        else
        {
          uint64_t v29 = *(void *)(v0 + 968);
        }
        uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v0 + 1064);
        OUTLINED_FUNCTION_81_9();
        OUTLINED_FUNCTION_51_15();

        v60(v29, v22);
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
      }
      else
      {
        LODWORD(v114) = v12;
        OUTLINED_FUNCTION_103_9(v13, v14, v15, v16, v17, v18, v19, v20, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90,
          v92,
          v94,
          v96,
          v98,
          v100,
          v102,
          v104,
          v106,
          v108,
          v110,
          v111,
          v112,
          (uint64_t)__src,
          v114,
          v9,
          v117);
        outlined retain of LLMQUModelResponse(v0 + 472);
        outlined retain of LLMQUModelResponse(v0 + 472);
        uint64_t v30 = Logger.logObject.getter();
        uint64_t v31 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v30, v31))
        {
          os_log_type_t v32 = (uint8_t *)OUTLINED_FUNCTION_14_1();
          Swift::String v118 = OUTLINED_FUNCTION_13_1();
          *(_DWORD *)os_log_type_t v32 = 136315138;
          memcpy(v119, (const void *)(v0 + 472), 0x98uLL);
          char v33 = LLMQUModelResponse.description.getter();
          *(void *)(v0 + 696) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &v118);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of LLMQUModelResponse(v0 + 472);
          outlined release of LLMQUModelResponse(v0 + 472);
          _os_log_impl(&dword_257DC6000, v30, v31, "Decoded response: %s", v32, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
          outlined release of LLMQUModelResponse(v0 + 472);
          outlined release of LLMQUModelResponse(v0 + 472);
        }

        Swift::String v107 = *(_DWORD *)(v0 + 1212);
        Swift::String v109 = *(_DWORD *)(v0 + 1208);
        unint64_t v103 = *(void *)(v0 + 1088);
        Swift::String v105 = *(void *)(v0 + 1120);
        uint64_t v99 = *(void *)(v0 + 944);
        unint64_t v101 = *(void *)(v0 + 1080);
        uint64_t v35 = *(void *)(v0 + 920);
        uint64_t v36 = *(void *)(v0 + 912);
        uint64_t v37 = *(void *)(v0 + 888);
        char v95 = *(void *)(v0 + 880);
        uint64_t v97 = *(void *)(v0 + 896);
        uint64_t v38 = *(void *)(v0 + 720);
        OUTLINED_FUNCTION_209();
        unint64_t v40 = (*(uint64_t (**)(uint64_t))(v39 + 272))(v35);
        swift_release();
        uint64_t v41 = *(void (**)(void))(v36 + 8);
        OUTLINED_FUNCTION_48_11();
        v41();
        OUTLINED_FUNCTION_48_11();
        v41();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v97, v95);
        OUTLINED_FUNCTION_48_11();
        v41();
        LOBYTE(v36) = *(unsigned char *)(v0 + 1236);
        LOBYTE(v41) = *(unsigned char *)(v0 + 1216);
        uint64_t v42 = *(unsigned char *)(v0 + 1220);
        uint64_t v43 = (void (*)(uint64_t, uint64_t))*(unsigned __int8 *)(v0 + 1228);
        uint64_t v44 = *(unsigned char *)(v0 + 1232);
        uint64_t v45 = *(unsigned char *)(v0 + 1224);
        uint64_t v46 = memcpy((void *)v38, (const void *)(v0 + 472), 0x98uLL);
        OUTLINED_FUNCTION_97_5((uint64_t)v46, v47, v48, v49, v50, v51, v52, v53, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91,
          v93,
          v95,
          v97,
          v99,
          v101,
          v103,
          v105);
        *(unsigned char *)(v38 + 172) = v36;
        *(_DWORD *)(v38 + 176) = v116;
        *(unsigned char *)(v38 + 180) = (_BYTE)v41;
        *(_DWORD *)(v38 + 184) = 0;
        *(unsigned char *)(v38 + 188) = v42;
        *(_DWORD *)(v38 + 192) = v107;
        *(unsigned char *)(v38 + 196) = (_BYTE)v43;
        *(_DWORD *)(v38 + 200) = v109;
        *(unsigned char *)(v38 + 204) = v44;
        *(_DWORD *)(v38 + 208) = v115;
        *(unsigned char *)(v38 + 212) = v45;
        *(_DWORD *)(v38 + 216) = v40;
        *(unsigned char *)(v38 + 220) = 0;
        unint64_t v54 = OSSignposter.logHandle.getter();
        OSSignpostIntervalState.signpostID.getter();
        static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 768);
          OUTLINED_FUNCTION_84_8();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v55 = OUTLINED_FUNCTION_20_1();
          if (v56(v55) != *MEMORY[0x263F90238])
          {
            OUTLINED_FUNCTION_77();
            v62();
          }
          unint64_t v63 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_1(v63);
          OUTLINED_FUNCTION_186();
          OUTLINED_FUNCTION_129(&dword_257DC6000, v54, v64, v65, "SearchTool.LLMQU");
          OUTLINED_FUNCTION_34();
        }
        OUTLINED_FUNCTION_91_9();
        uint64_t v66 = *(void *)(v0 + 984);
        uint64_t v67 = *(void *)(v0 + 952);

        v43(v66, v67);
        swift_release();
        OUTLINED_FUNCTION_3_32();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_86();
      }
      OUTLINED_FUNCTION_43_16();
      __asm { BRAA            X1, X16 }
    }
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_75_7();
  OUTLINED_FUNCTION_43_16();
}

uint64_t LLMQUModelServer.parse(_:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  OUTLINED_FUNCTION_86_7();
  uint64_t v37 = v36[114];
  uint64_t v38 = v36[112];
  uint64_t v39 = v36[111];
  uint64_t v40 = v36[110];
  uint64_t v41 = v36[108];
  uint64_t v42 = v36[107];
  uint64_t v43 = v36[106];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  uint64_t v44 = *(void (**)(void))(v37 + 8);
  OUTLINED_FUNCTION_48_11();
  v44();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  OUTLINED_FUNCTION_48_11();
  v44();
  swift_bridgeObjectRelease();
  uint64_t v45 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v46 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v47 = OUTLINED_FUNCTION_55_1();
    int v49 = v48(v47);
    uint64_t v50 = v36[144];
    uint64_t v51 = v36[128];
    if (v49 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v54();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    uint64_t v68 = v50;
    os_signpost_id_t v55 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_104_10(&dword_257DC6000, v56, v46, v55, "SearchTool.LLMQU");
    OUTLINED_FUNCTION_34();
    uint64_t v52 = (void *)v45;
    uint64_t v53 = v51;
  }
  else
  {
    uint64_t v68 = v36[144];
    uint64_t v52 = (void *)v45;
    uint64_t v53 = v36[128];
  }
  double v57 = (void (*)(uint64_t, uint64_t))v36[133];
  uint64_t v69 = v36[126];
  uint64_t v70 = v36[125];
  uint64_t v71 = v36[124];
  uint64_t v72 = v36[123];
  uint64_t v73 = v36[122];
  uint64_t v74 = v36[121];
  uint64_t v58 = v36[119];
  uint64_t v75 = v36[118];
  uint64_t v76 = v36[117];
  uint64_t v77 = v36[116];
  uint64_t v78 = v36[115];
  uint64_t v79 = v36[112];
  uint64_t v80 = v36[109];
  uint64_t v81 = v36[108];
  uint64_t v82 = v36[105];
  uint64_t v83 = v36[104];
  uint64_t v84 = v36[103];
  uint64_t v85 = v36[102];
  uint64_t v86 = v36[101];
  uint64_t v87 = v36[100];
  uint64_t v88 = v36[99];
  uint64_t v89 = v36[98];
  uint64_t v90 = v36[97];

  v57(v53, v58);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_89_4();
  return v60(v59, v60, v61, v62, v63, v64, v65, v66, a9, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
           v78,
           v79,
           v80,
           v81,
           v82,
           v83,
           v84,
           v85,
           v86,
           v87,
           v88,
           v89,
           v90,
           a33,
           a34,
           a35,
           a36);
}

{
  uint64_t v36;
  void *v37;
  void (*v38)(void);
  void (*v39)(void);
  os_signpost_type_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  os_signpost_id_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_86_7();
  OUTLINED_FUNCTION_101_9();
  OUTLINED_FUNCTION_57_12(v37[126]);
  uint64_t v38 = *(void (**)(void))(v36 + 8);
  OUTLINED_FUNCTION_45_8();
  v38();
  OUTLINED_FUNCTION_65();
  v39();
  OUTLINED_FUNCTION_45_8();
  v38();
  swift_bridgeObjectRelease();
  OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v40 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v41 = OUTLINED_FUNCTION_55_1();
    uint64_t v43 = v42(v41);
    uint64_t v44 = v37[146];
    uint64_t v45 = v37[126];
    if (v43 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v47();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    uint64_t v63 = v44;
    uint64_t v48 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_104_10(&dword_257DC6000, v49, v40, v48, "SearchTool.LLMQU");
    OUTLINED_FUNCTION_34();
    uint64_t v62 = v37[126];
    os_signpost_type_t v46 = v45;
  }
  else
  {
    os_signpost_type_t v46 = v37[126];
    uint64_t v62 = v46;
    uint64_t v63 = v37[146];
  }
  uint64_t v50 = (void (*)(uint64_t, uint64_t))v37[133];
  OUTLINED_FUNCTION_93_8();
  uint64_t v51 = v37[119];
  OUTLINED_FUNCTION_7_27(v52);
  v50(v46, v51);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_89_4();
  return v54(v53, v54, v55, v56, v57, v58, v59, v60, a9, v62, v63, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

{
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void (*v39)(void);
  void (*v40)(void);
  NSObject *v41;
  os_signpost_type_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  os_signpost_id_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_86_7();
  OUTLINED_FUNCTION_101_9();
  OUTLINED_FUNCTION_57_12(v37[124]);
  uint64_t v39 = *(void (**)(void))(v36 + 8);
  OUTLINED_FUNCTION_45_8();
  v39();
  OUTLINED_FUNCTION_65();
  v40();
  OUTLINED_FUNCTION_45_8();
  v39();
  swift_bridgeObjectRelease();
  uint64_t v41 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v42 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v43 = v37[100];
    uint64_t v44 = v37[96];
    OUTLINED_FUNCTION_84_8();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v43, v38);
    os_signpost_type_t v46 = v37[150];
    uint64_t v47 = v37[124];
    if (v45 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v48();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    uint64_t v63 = v46;
    int v49 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v41, v42, v49, "SearchTool.LLMQU");
    OUTLINED_FUNCTION_34();
    uint64_t v62 = v37[124];
  }
  else
  {
    uint64_t v47 = v37[124];
    uint64_t v62 = v47;
    uint64_t v63 = v37[150];
  }
  uint64_t v50 = (void (*)(uint64_t, uint64_t))v37[133];
  OUTLINED_FUNCTION_93_8();
  uint64_t v51 = v37[119];
  OUTLINED_FUNCTION_7_27(v52);
  v50(v47, v51);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_89_4();
  return v54(v53, v54, v55, v56, v57, v58, v59, v60, a9, v62, v63, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t LLMQUModelServer.createOverridePrompt()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  if (AFIsInternalInstall())
  {
    type metadata accessor for NSUserDefaults();
    uint64_t v4 = static NSUserDefaults.llmQUPromptTemplateOverride.getter();
    if (v5)
    {
      uint64_t v6 = v4;
      unint64_t v7 = v5;
      id v8 = static NSUserDefaults.makeModelCatalogAjaxUserDefaults()();
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = (void *)MEMORY[0x25A2C7AB0](*(void *)(v2 + 16), *(void *)(v2 + 24));
        id v11 = objc_msgSend(v9, sel_objectForKey_, v10);

        if (v11)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v26, 0, sizeof(v26));
        }
        outlined init with take of Any?((uint64_t)v26, (uint64_t)&v27);
        if (*((void *)&v28 + 1))
        {
          outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v27, (uint64_t *)&demangling cache variable for type metadata for Any?);
          if (one-time initialization token for llmQU != -1) {
            swift_once();
          }
          uint64_t v14 = type metadata accessor for Logger();
          __swift_project_value_buffer(v14, (uint64_t)static Logging.llmQU);
          swift_bridgeObjectRetain_n();
          uint64_t v15 = Logger.logObject.getter();
          os_log_type_t v16 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v15, v16))
          {
            id v17 = (uint8_t *)swift_slowAlloc();
            uint64_t v18 = swift_slowAlloc();
            *(void *)&long long v27 = v18;
            *(_DWORD *)id v17 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)&v26[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, (uint64_t *)&v27);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, v15, v16, "Using override prompt template for LLM QU: %s", v17, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25A2C94B0](v18, -1, -1);
            MEMORY[0x25A2C94B0](v17, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          Prompt.init(template:)();
          uint64_t v23 = type metadata accessor for Prompt();
          uint64_t v24 = a1;
          uint64_t v25 = 0;
          return __swift_storeEnumTagSinglePayload(v24, v25, 1, v23);
        }
      }
      else
      {
        long long v27 = 0u;
        long long v28 = 0u;
      }
      swift_bridgeObjectRelease();
      outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v27, (uint64_t *)&demangling cache variable for type metadata for Any?);
      if (one-time initialization token for llmQU != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      __swift_project_value_buffer(v19, (uint64_t)static Logging.llmQU);
      os_log_type_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_257DC6000, v20, v21, "Ignoring overridden LLM QU prompt template since ajax override is not set", v22, 2u);
        MEMORY[0x25A2C94B0](v22, -1, -1);
      }

      uint64_t v23 = type metadata accessor for Prompt();
      uint64_t v24 = a1;
      uint64_t v25 = 1;
      return __swift_storeEnumTagSinglePayload(v24, v25, 1, v23);
    }
  }
  uint64_t v12 = type metadata accessor for Prompt();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v12);
}

uint64_t closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v4[32] = swift_task_alloc();
  v4[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v4[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v4[38] = v7;
  v4[39] = *(void *)(v7 - 8);
  unsigned char v4[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v4[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v4[42] = v8;
  v4[43] = *(void *)(v8 - 8);
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v4[46] = v9;
  v4[47] = *(void *)(v9 - 8);
  v4[48] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CompletionPrompt();
  v4[49] = v10;
  v4[50] = *(void *)(v10 - 8);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:), 0, 0);
}

#error "258408CFC: call analysis failed (funcsize=122)"

uint64_t closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  *(void *)(v6 + 552) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27_20();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  v5[71] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5[72] = v0;
    v5[73] = v3;
  }
  OUTLINED_FUNCTION_77();
  v7();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

#error "258408EF4: call analysis failed (funcsize=238)"

uint64_t closure #2 in LLMQUModelServer.parseUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[27] = a4;
  v5[28] = a5;
  v5[25] = a2;
  v5[26] = a3;
  v5[24] = a1;
  v5[29] = *a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v5[30] = v6;
  v5[31] = *(void *)(v6 - 8);
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[33] = swift_task_alloc();
  v5[34] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[35] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[36] = v7;
  v5[37] = *(void *)(v7 - 8);
  v5[38] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[39] = v8;
  v5[40] = *(void *)(v8 - 8);
  v5[41] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[42] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FunctionIdentifier();
  v5[43] = v9;
  v5[44] = *(void *)(v9 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[47] = v10;
  v5[48] = *(void *)(v10 - 8);
  v5[49] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CompletionPrompt();
  v5[50] = v11;
  v5[51] = *(void *)(v11 - 8);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in LLMQUModelServer.parseUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:), 0, 0);
}

#error "2584098E0: call analysis failed (funcsize=145)"

uint64_t closure #2 in LLMQUModelServer.parseUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  *(void *)(v6 + 560) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 576) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_77();
  v4();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[67];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[50];
  OUTLINED_FUNCTION_28();
  v4();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v5();
}

#error "258409B74: call analysis failed (funcsize=321)"

uint64_t closure #2 in LLMQUModelServer.parseUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v19 = *(void (**)(uint64_t))(v18 + 536);
  OUTLINED_FUNCTION_77();
  v20();
  uint64_t v21 = OUTLINED_FUNCTION_19_0();
  v19(v21);
  OUTLINED_FUNCTION_21_22();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_73_7();
  OUTLINED_FUNCTION_140();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

{
  uint64_t v18;
  void (*v19)(uint64_t);
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v19 = *(void (**)(uint64_t))(v18 + 536);
  OUTLINED_FUNCTION_77();
  v20();
  uint64_t v21 = OUTLINED_FUNCTION_19_0();
  v19(v21);
  OUTLINED_FUNCTION_21_22();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_73_7();
  OUTLINED_FUNCTION_140();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t closure #1 in closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)()
{
  uint64_t v1 = type metadata accessor for Prompt();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_5_8();
  v9[3] = type metadata accessor for PromptTemplate();
  v9[4] = lazy protocol witness table accessor for type LLMBundle and conformance LLMBundle(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
  __swift_allocate_boxed_opaque_existential_1Tm(v9);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v3();
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v6 + v5, v0, v1);
  MEMORY[0x25A2C7790](v6, v1, v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
  return v7();
}

uint64_t closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v4[32] = swift_task_alloc();
  v4[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v4[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v4[38] = v7;
  v4[39] = *(void *)(v7 - 8);
  unsigned char v4[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v4[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v4[42] = v8;
  v4[43] = *(void *)(v8 - 8);
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v4[46] = v9;
  v4[47] = *(void *)(v9 - 8);
  v4[48] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CompletionPrompt();
  v4[49] = v10;
  v4[50] = *(void *)(v10 - 8);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:), 0, 0);
}

#error "25840AACC: call analysis failed (funcsize=122)"

uint64_t closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  *(void *)(v6 + 552) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27_20();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  v5[71] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5[72] = v0;
    v5[73] = v3;
  }
  OUTLINED_FUNCTION_77();
  v7();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[66];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[49];
  OUTLINED_FUNCTION_28();
  v4();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v6 = v0[73];
  uint64_t v7 = v0[72];
  return v5(v6, v7);
}

#error "25840ACDC: call analysis failed (funcsize=240)"

uint64_t closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v19 = *(void (**)(uint64_t))(v18 + 528);
  OUTLINED_FUNCTION_77();
  v20();
  uint64_t v21 = OUTLINED_FUNCTION_19_0();
  v19(v21);
  OUTLINED_FUNCTION_18_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_73_7();
  OUTLINED_FUNCTION_140();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

{
  uint64_t v18;
  void (*v19)(uint64_t);
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v19 = *(void (**)(uint64_t))(v18 + 528);
  OUTLINED_FUNCTION_77();
  v20();
  uint64_t v21 = OUTLINED_FUNCTION_19_0();
  v19(v21);
  OUTLINED_FUNCTION_18_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_73_7();
  OUTLINED_FUNCTION_140();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t closure #1 in closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)()
{
  uint64_t v0 = type metadata accessor for Prompt();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x25A2C7790](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t LLMQUModelServer.deinit()
{
  swift_bridgeObjectRelease();
  type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v1();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LLMQUModelServer.__deallocating_deinit()
{
  LLMQUModelServer.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t protocol witness for LLMQUModelServerProtocol.prewarm(originatorPID:) in conformance LLMQUModelServer(uint64_t a1)
{
  return LLMQUModelServer.prewarm(originatorPID:)(a1);
}

uint64_t protocol witness for LLMQUModelServerProtocol.parse(_:originatorPID:) in conformance LLMQUModelServer()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for LLMQUModelServerProtocol.parse(_:originatorPID:) in conformance LLMQUModelServer;
  return LLMQUModelServer.parse(_:originatorPID:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t dispatch thunk of LLMQUModelServerProtocol.prewarm(originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LLMQUModelServerProtocol.parse(_:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  id v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  uint64_t v14 = a5 & 1;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = protocol witness for LLMQUModelServerProtocol.parse(_:originatorPID:) in conformance LLMQUModelServer;
  return v17(a1, a2, a3, a4, v14, a6, a7);
}

uint64_t ObjC metadata update function for LLMQUModelServer()
{
  return type metadata accessor for LLMQUModelServer();
}

uint64_t type metadata accessor for LLMQUModelServer()
{
  uint64_t result = type metadata singleton initialization cache for LLMQUModelServer;
  if (!type metadata singleton initialization cache for LLMQUModelServer) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for LLMQUModelServer()
{
  uint64_t result = type metadata accessor for SamplingParameters();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for LLMQUModelServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LLMQUModelServer);
}

uint64_t dispatch thunk of LLMQUModelServer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t partial apply for closure #1 in closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)()
{
  return closure #1 in closure #2 in LLMQUModelServer.parseUsingOverride(overridePrompt:bindings:quModel:)();
}

unint64_t lazy protocol witness table accessor for type LLMQUModelResponse and conformance LLMQUModelResponse()
{
  unint64_t result = lazy protocol witness table cache variable for type LLMQUModelResponse and conformance LLMQUModelResponse;
  if (!lazy protocol witness table cache variable for type LLMQUModelResponse and conformance LLMQUModelResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMQUModelResponse and conformance LLMQUModelResponse);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type LLMBundle and conformance LLMBundle(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)()
{
  return closure #1 in closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)();
}

uint64_t partial apply for closure #1 in closure #2 in LLMQUModelServer.parseUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
  return partial apply for closure #1 in closure #2 in LLMQUModelServer.parseUsingTemplate(promptTemplate:bindings:quModel:)();
}

void OUTLINED_FUNCTION_1_20()
{
  *(void *)(v1 - 104) = v0[67];
  *(void *)(v1 - 112) = v0[66];
  uint64_t v2 = v0[65];
  *(void *)(v1 - 168) = v0[64];
  *(void *)(v1 - 160) = v2;
  uint64_t v3 = v0[56];
  *(void *)(v1 - 144) = v0[53];
  *(void *)(v1 - 136) = v3;
  uint64_t v4 = v0[50];
  *(void *)(v1 - 128) = v0[49];
  *(void *)(v1 - 120) = v4;
  uint64_t v5 = v0[39];
  *(void *)(v1 - 96) = v0[40];
  *(void *)(v1 - 152) = v5;
}

uint64_t OUTLINED_FUNCTION_3_32()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_7_27(void *a1@<X8>)
{
  uint64_t v4 = v1[101];
  *(void *)(v2 - 128) = v1[102];
  *(void *)(v2 - 120) = v4;
  uint64_t v5 = v1[99];
  *(void *)(v2 - 112) = v1[100];
  *(void *)(v2 - 104) = v5;
  uint64_t v6 = v1[97];
  *(void *)(v2 - 96) = v1[98];
  *(void *)(v2 - 88) = v6;
}

uint64_t OUTLINED_FUNCTION_13_27@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = (v14 - 32) | 0x8000000000000000;
  return a14;
}

uint64_t OUTLINED_FUNCTION_14_22()
{
  return static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
}

uint64_t OUTLINED_FUNCTION_16_24()
{
  uint64_t v3 = v0[40];
  *(void *)(v1 - 136) = v0[41];
  *(void *)(v1 - 128) = v3;
  uint64_t v4 = v0[34];
  *(void *)(v1 - 120) = v0[37];
  *(void *)(v1 - 112) = v4;
  uint64_t v5 = v0[31];
  *(void *)(v1 - 104) = v0[32];
  *(void *)(v1 - 96) = v5;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_21()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_18_27()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_19_23(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  strcpy((char *)&a1[2], "promptTemplate");
  a1[2].n128_u8[15] = -18;
  return type metadata accessor for PromptTemplate();
}

uint64_t OUTLINED_FUNCTION_20_22()
{
  return FunctionIdentifier.init(identifier:resourceInformation:)();
}

uint64_t OUTLINED_FUNCTION_21_22()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_22_21()
{
  *(void *)(v0 + 184) = v1;
  return GenerativeConfigurationProtocol.with<A>(model:)();
}

uint64_t OUTLINED_FUNCTION_23_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_25()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_25_21()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_26_21()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_28_16(uint64_t a1, int a2)
{
  *(_DWORD *)(v3 + 592) = a2;
  *(void *)(v3 + 488) = *(void *)(v2 + 104);
  *(void *)(v3 + 496) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  return v4;
}

uint64_t OUTLINED_FUNCTION_31_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_36_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

__n128 OUTLINED_FUNCTION_38_15(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15)
{
  __n128 result = a15;
  a1[1] = a15;
  return result;
}

uint64_t OUTLINED_FUNCTION_39_15()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_45_10()
{
  return GenerativeConfigurationProtocol.bindVariables(_:)();
}

uint64_t OUTLINED_FUNCTION_46_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return __swift_storeEnumTagSinglePayload(a13, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_18()
{
  return GenerativeConfigurationProtocol.functionIdentifier(_:)();
}

uint64_t OUTLINED_FUNCTION_54_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57_12@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = v1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  return *(void *)(v0 + 408);
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  return *(void *)(v0 + 408);
}

uint64_t OUTLINED_FUNCTION_63_8(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_67_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_11()
{
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

uint64_t OUTLINED_FUNCTION_73_7()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_74_10()
{
  *(void *)(v0 - 192) = *(void *)(v0 - 280);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_75_7()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_83_6()
{
  return *(void *)(v0 + 1104);
}

uint64_t OUTLINED_FUNCTION_84_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_87_9@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_90_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_96_8()
{
  return _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
}

void OUTLINED_FUNCTION_97_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  *(void *)(v26 + 152) = a24;
  *(void *)(v26 + 160) = a25;
  *(_DWORD *)(v26 + 168) = a26;
}

uint64_t OUTLINED_FUNCTION_99_7()
{
  return CompletionPrompt.init(_:)();
}

uint64_t OUTLINED_FUNCTION_101_9()
{
  uint64_t result = *(void *)(v0 + 1104);
  *(void *)(v1 - 104) = *(void *)(v0 + 1048);
  return result;
}

void *OUTLINED_FUNCTION_103_9(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char __src)
{
  return memcpy(v35, &__src, 0x98uLL);
}

void OUTLINED_FUNCTION_104_10(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v7, a3, a4, a5, v5, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_105_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_109_7()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_110_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 0xCu);
}

uint64_t key path setter for TokenArgumentCollector.tokenArguments : TokenArgumentCollector(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 104);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t TokenArgumentCollector.tokenArguments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TokenArgumentCollector.tokenArguments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*TokenArgumentCollector.tokenArguments.modify())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t TokenArgumentCollector.query.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void *TokenArgumentCollector.__allocating_init(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = MEMORY[0x263F8EE78];
  result[3] = a1;
  result[4] = a2;
  return result;
}

void *TokenArgumentCollector.init(for:)(uint64_t a1, uint64_t a2)
{
  v2[2] = MEMORY[0x263F8EE78];
  v2[3] = a1;
  v2[4] = a2;
  return v2;
}

uint64_t TokenArgumentCollector.addArguments(_:argLabel:findRange:)(uint64_t result, uint64_t a2, char a3)
{
  if (result)
  {
    uint64_t v4 = v3;
    uint64_t v5 = result;
    uint64_t v6 = *(void *)(result + 16);
    if (v6)
    {
      id v31 = self;
      swift_bridgeObjectRetain();
      for (uint64_t i = (void **)(v5 + 40); ; i += 2)
      {
        uint64_t v8 = (uint64_t)*(i - 1);
        uint64_t v9 = *i;
        swift_bridgeObjectRetain();
        id v10 = objc_msgSend(v31, sel_valueWithRange_, -1, 0);
        if (a3)
        {
          v11._uint64_t countAndFlagsBits = v8;
          v11._object = v9;
          __C::_NSRange_optional v33 = String.nsRangeWithCompleteTokenMatch(of:)(v11);
          if (!v33.is_nil)
          {
            id v12 = objc_msgSend(v31, sel_valueWithRange_, v33.value.location, v33.value.length);

            id v10 = v12;
          }
        }
        id v13 = (id)llmIntentArgLabel();
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;

        id v17 = objc_allocWithZone(MEMORY[0x263F78D90]);
        swift_bridgeObjectRetain();
        id v18 = v10;
        id v19 = @nonobjc SPQUParseTokenArgument.init(label:token:tokenRange:)(v14, v16, v8, (uint64_t)v9, v10);
        if (v19) {
          break;
        }
        if (one-time initialization token for llmQU != -1) {
          swift_once();
        }
        uint64_t v26 = type metadata accessor for Logger();
        __swift_project_value_buffer(v26, (uint64_t)static Logging.llmQU);
        swift_bridgeObjectRetain();
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v27, v28))
        {

          swift_bridgeObjectRelease_n();
LABEL_16:

          goto LABEL_17;
        }
        uint64_t v29 = swift_slowAlloc();
        v32[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v29 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, (unint64_t)v9, v32);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_257DC6000, v27, v28, "LLMQUParseConverter: Could not create token argument for token: %s", (uint8_t *)v29, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();

LABEL_17:
        if (!--v6) {
          return swift_bridgeObjectRelease();
        }
      }
      os_log_type_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(uint64_t (**)(uint64_t *))(*(void *)v4 + 112);
      id v22 = v20;
      uint64_t v23 = (void (*)(uint64_t *, void))v21(v32);
      uint64_t v25 = v24;
      MEMORY[0x25A2C7E10]();
      if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v23(v32, 0);

      goto LABEL_16;
    }
  }
  return result;
}

uint64_t TokenArgumentCollector.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TokenArgumentCollector.__deallocating_deinit()
{
  TokenArgumentCollector.deinit();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

void *LLMQUParseConverter.meString.unsafeMutableAddressor()
{
  return &static LLMQUParseConverter.meString;
}

uint64_t static LLMQUParseConverter.meString.getter()
{
  return 25965;
}

void one-time initialization function for meStrings()
{
  specialized Set.init(_nonEmptyArrayLiteral:)();
  static LLMQUParseConverter.meStrings = v0;
}

uint64_t *LLMQUParseConverter.meStrings.unsafeMutableAddressor()
{
  if (one-time initialization token for meStrings != -1) {
    swift_once();
  }
  return &static LLMQUParseConverter.meStrings;
}

uint64_t static LLMQUParseConverter.meStrings.getter()
{
  if (one-time initialization token for meStrings != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

id static LLMQUParseConverter.spQUParse(for:query:)(uint64_t a1, uint64_t a2, uint8_t *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v151 = *(void *)(v6 - 8);
  uint64_t v152 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v150 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(a1 + 2);
  int v9 = *(unsigned __int8 *)(a1 + 3);
  *(void *)&long long v158 = *(unsigned __int8 *)(a1 + 4);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v144 = *(void *)(a1 + 8);
  uint64_t v145 = v10;
  uint64_t v154 = *(unsigned __int8 *)(a1 + 24);
  int v147 = *(unsigned __int8 *)(a1 + 25);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v134 = *(void *)(a1 + 40);
  uint64_t v135 = v12;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v136 = *(void *)(a1 + 56);
  uint64_t v137 = v13;
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v138 = *(void *)(a1 + 72);
  uint64_t v139 = v14;
  uint64_t v15 = *(void *)(a1 + 96);
  uint64_t v140 = *(void *)(a1 + 88);
  uint64_t v141 = v15;
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v142 = *(void *)(a1 + 104);
  uint64_t v143 = v16;
  uint64_t v149 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a1 + 136);
  uint64_t v146 = *(void *)(a1 + 128);
  uint64_t v18 = *(void *)(a1 + 144);
  type metadata accessor for TokenArgumentCollector();
  id v19 = (void *)swift_allocObject();
  uint64_t v20 = MEMORY[0x263F8EE78];
  v19[2] = MEMORY[0x263F8EE78];
  uint64_t v148 = v19 + 2;
  uint64_t v155 = a2;
  unint64_t v156 = a3;
  v19[3] = a2;
  v19[4] = a3;
  if (v11) {
    uint64_t v21 = v11;
  }
  else {
    uint64_t v21 = v20;
  }
  uint64_t v157 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = (id)llmIntentLabel();
  uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  if (v9 == 11)
  {
    uint64_t v25 = v17;
    uint64_t v26 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v17;
    switch(v9)
    {
      case 1:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(1);
        *(void *)(inited + 32) = v31;
        uint64_t v30 = 17;
        break;
      case 2:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        LOBYTE(v161) = 2;
        LLMQUModelEventType.rawValue.getter();
        *(void *)(inited + 32) = v32;
        uint64_t v30 = 15;
        break;
      case 3:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        LOBYTE(v161) = 3;
        LLMQUModelEventType.rawValue.getter();
        *(void *)(inited + 32) = v33;
        uint64_t v30 = 79;
        break;
      case 4:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(4);
        OUTLINED_FUNCTION_5_23(v34);
        uint64_t v30 = 82;
        break;
      case 5:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(5);
        *(void *)(inited + 32) = v35;
        uint64_t v30 = 83;
        break;
      case 6:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(6);
        OUTLINED_FUNCTION_5_23(v36);
        uint64_t v30 = 81;
        break;
      case 7:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(7);
        OUTLINED_FUNCTION_5_23(v37);
        uint64_t v30 = 80;
        break;
      case 8:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(8);
        *(void *)(inited + 32) = v38;
        uint64_t v30 = 35;
        break;
      case 9:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(9);
        *(void *)(inited + 32) = v39;
        uint64_t v30 = 74;
        break;
      case 10:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        OUTLINED_FUNCTION_0_14(10);
        OUTLINED_FUNCTION_5_23(v40);
        uint64_t v30 = 14;
        break;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_258661700;
        LOBYTE(v161) = 0;
        LLMQUModelEventType.rawValue.getter();
        *(void *)(inited + 32) = v29;
        uint64_t v30 = 16;
        break;
    }
    uint64_t v26 = v18;
    *(void *)(inited + 40) = v28;
    OUTLINED_FUNCTION_1_21(inited, v30);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    id v41 = (id)llmIntentLabel();
    uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v42;
  }
  if (v8 != 2)
  {
    BOOL v43 = (v8 & 1) == 0;
    if (v8) {
      uint64_t v44 = 0x72616C75676E6973;
    }
    else {
      uint64_t v44 = 0x6C6172756C70;
    }
    if (v8) {
      unint64_t v45 = 0xE800000000000000;
    }
    else {
      unint64_t v45 = 0xE600000000000000;
    }
    if (v43) {
      uint64_t v46 = 97;
    }
    else {
      uint64_t v46 = 96;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v47 = swift_initStackObject();
    *(_OWORD *)(v47 + 16) = xmmword_258661700;
    *(void *)(v47 + 32) = v44;
    *(void *)(v47 + 40) = v45;
    OUTLINED_FUNCTION_1_21(v47, v46);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
  }
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v134, 8, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v135, 71, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v136, 67, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v137, 68, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v138, 69, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v139, 70, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v140, 72, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v141, 64, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v142, 65, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v143, 66, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v146, 5, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v25, 7, 1);
  TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v26, 6, 1);
  uint64_t v48 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000014, 0x8000000258682320);
  uint64_t EnumValueFromIntentArgString = getEnumValueFromIntentArgString();

  uint64_t v146 = v24;
  uint64_t v50 = objc_retain_x10;
  if (EnumValueFromIntentArgString)
  {
    uint64_t v51 = v158;
    if (v149)
    {
      uint64_t v52 = *(void *)(v149 + 16);
      if (v52)
      {
        uint64_t v143 = EnumValueFromIntentArgString;
        uint64_t v53 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        uint64_t v54 = MEMORY[0x263F8EE78];
        os_signpost_id_t v55 = &one-time initialization token for title;
        do
        {
          uint64_t v56 = *(v53 - 1);
          uint64_t v57 = *v53;
          uint64_t v58 = v55[63];
          swift_bridgeObjectRetain();
          if (v58 != -1) {
            swift_once();
          }
          uint64_t v59 = static LLMQUParseConverter.meStrings;
          Swift::String v60 = String.lowercased()();
          specialized Set.contains(_:)(v60._countAndFlagsBits, (uint64_t)v60._object, v59);
          LOBYTE(v59) = v61;
          swift_bridgeObjectRelease();
          if (v59)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v161 = v54;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v54 = v161;
            }
            unint64_t v63 = *(void *)(v54 + 16);
            if (v63 >= *(void *)(v54 + 24) >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v54 = v161;
            }
            *(void *)(v54 + 16) = v63 + 1;
            uint64_t v64 = v54 + 16 * v63;
            *(void *)(v64 + 32) = v56;
            *(void *)(v64 + 40) = v57;
            os_signpost_id_t v55 = &one-time initialization token for title;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v53 += 2;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease();
        uint64_t v50 = objc_retain_x10;
        uint64_t v51 = v158;
        uint64_t EnumValueFromIntentArgString = v143;
      }
      else
      {
        uint64_t v54 = MEMORY[0x263F8EE78];
      }
      TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v54, EnumValueFromIntentArgString, 1);
      swift_release();
    }
  }
  else
  {
    uint64_t v51 = v158;
    if (v149)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v65 = swift_initStackObject();
      *(_OWORD *)(v65 + 16) = xmmword_258661700;
      *(void *)(v65 + 32) = 25965;
      *(void *)(v65 + 40) = 0xE200000000000000;
      OUTLINED_FUNCTION_1_21(v65, 64);
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
    }
  }
  uint64_t v66 = 63;
  switch(v51)
  {
    case 1:
      uint64_t v66 = 61;
      goto LABEL_52;
    case 2:
      goto LABEL_52;
    case 3:
      goto LABEL_58;
    default:
      uint64_t v66 = 62;
LABEL_52:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v67 = swift_initStackObject();
      *(_OWORD *)(v67 + 16) = *((_OWORD *)v50 + 112);
      if (v51)
      {
        if (v51 == 1)
        {
          unint64_t v68 = 0xE400000000000000;
          uint64_t v69 = 1954047342;
        }
        else
        {
          unint64_t v68 = 0xE500000000000000;
          uint64_t v69 = 0x7473726966;
        }
      }
      else
      {
        unint64_t v68 = 0xE400000000000000;
        uint64_t v69 = 1953718636;
      }
      *(void *)(v67 + 32) = v69;
      *(void *)(v67 + 40) = v68;
      OUTLINED_FUNCTION_1_21(v67, v66);
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
LABEL_58:
      if (v144) {
        uint64_t v70 = v144;
      }
      else {
        uint64_t v70 = MEMORY[0x263F8EE78];
      }
      uint64_t v71 = *(void *)(v70 + 16);
      if (v71)
      {
        uint64_t v72 = (char *)(v70 + 32);
        swift_bridgeObjectRetain();
        long long v158 = xmmword_258661700;
        do
        {
          uint64_t v73 = *v72++;
          uint64_t v74 = qword_258670178[v73];
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          uint64_t v75 = swift_initStackObject();
          *(_OWORD *)(v75 + 16) = v158;
          LOBYTE(v161) = v73;
          LLMQUModelAppEntityType.rawValue.getter();
          *(void *)(v75 + 32) = v76;
          *(void *)(v75 + 40) = v77;
          OUTLINED_FUNCTION_1_21(v75, v74);
          swift_setDeallocating();
          specialized _ContiguousArrayStorage.__deallocating_deinit();
          --v71;
        }
        while (v71);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      uint64_t v78 = MEMORY[0x263F8EE78];
      if (v145) {
        uint64_t v78 = v145;
      }
      uint64_t v79 = *(void *)(v78 + 16);
      *(void *)&long long v158 = v78;
      if (v79)
      {
        uint64_t v80 = (unsigned __int8 *)(v78 + 32);
        swift_bridgeObjectRetain();
        uint64_t v81 = v150;
        uint64_t v82 = objc_retain_x10;
        while (2)
        {
          int v84 = *v80++;
          char v83 = v84;
          uint64_t v85 = 0;
          uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_LINK";
          switch(v84)
          {
            case 1:
            case 2:
              unint64_t v87 = 0xD000000000000030;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_CALENDAR_EVENT";
              goto LABEL_96;
            case 3:
            case 4:
              unint64_t v87 = OUTLINED_FUNCTION_2_17();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_PHOTO";
              goto LABEL_96;
            case 5:
            case 6:
              unint64_t v87 = OUTLINED_FUNCTION_3_33();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_PHOTO_ALBUM";
              goto LABEL_96;
            case 7:
            case 8:
              OUTLINED_FUNCTION_6_27();
              unint64_t v87 = v88 - 1;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_MEMORY";
              goto LABEL_96;
            case 9:
            case 10:
              OUTLINED_FUNCTION_6_27();
              unint64_t v87 = v89 - 3;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_NOTE";
              goto LABEL_96;
            case 11:
            case 12:
              unint64_t v87 = OUTLINED_FUNCTION_3_33();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_NOTE_FOLDER";
              goto LABEL_96;
            case 13:
            case 14:
              uint64_t v90 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_MESSAGE";
              goto LABEL_92;
            case 15:
            case 16:
              OUTLINED_FUNCTION_6_27();
              unint64_t v87 = v91 + 5;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_CONVERSATION";
              goto LABEL_96;
            case 17:
            case 18:
              unint64_t v87 = 0xD00000000000002ALL;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_REMINDER";
              goto LABEL_96;
            case 19:
            case 20:
              OUTLINED_FUNCTION_6_27();
              unint64_t v87 = v92 + 6;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_REMINDER_LIST";
              goto LABEL_96;
            case 21:
            case 22:
              unint64_t v87 = 0xD00000000000002ALL;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_DOCUMENT";
              goto LABEL_96;
            case 23:
            case 24:
              uint64_t v90 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_KEYNOTE";
              goto LABEL_92;
            case 25:
            case 26:
              unint64_t v87 = OUTLINED_FUNCTION_2_17();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_PAGES";
              goto LABEL_96;
            case 27:
            case 28:
              uint64_t v90 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_NUMBERS";
              goto LABEL_92;
            case 29:
            case 30:
              unint64_t v87 = 0xD00000000000002CLL;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_VOICE_MAIL";
              goto LABEL_96;
            case 31:
            case 32:
              unint64_t v87 = 0xD00000000000002CLL;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_PHONE_CALL";
              goto LABEL_96;
            case 33:
            case 34:
              uint64_t v90 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_JOURNAL";
              goto LABEL_92;
            case 35:
            case 36:
              unint64_t v87 = OUTLINED_FUNCTION_3_33();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_VOICE_MEMOS";
              goto LABEL_96;
            case 37:
            case 38:
            case 72:
              unint64_t v87 = 0xD000000000000026;
              goto LABEL_96;
            case 39:
            case 40:
              unint64_t v87 = 0xD000000000000030;
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_FREEFORM_BOARD";
              goto LABEL_96;
            case 41:
            case 42:
              uint64_t v90 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_CONTACT";
LABEL_92:
              unint64_t v93 = (unint64_t)(v90 - 32) | 0x8000000000000000;
              unint64_t v87 = 0xD000000000000029;
              goto LABEL_97;
            case 43:
            case 44:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
              goto LABEL_98;
            case 45:
            case 46:
              unint64_t v87 = OUTLINED_FUNCTION_3_33();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_WALLET_PASS";
              goto LABEL_96;
            case 70:
            case 71:
              unint64_t v87 = OUTLINED_FUNCTION_2_17();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_VIDEO";
              goto LABEL_96;
            default:
              unint64_t v87 = OUTLINED_FUNCTION_2_17();
              uint64_t v86 = "QUPP_ARG_INFERRED_APP_ENTITY_TYPE_EMAIL";
LABEL_96:
              unint64_t v93 = (unint64_t)(v86 - 32) | 0x8000000000000000;
LABEL_97:
              uint64_t v94 = (void *)MEMORY[0x25A2C7AB0](v87, v93);
              uint64_t v85 = getEnumValueFromIntentArgString();

LABEL_98:
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
              uint64_t v95 = swift_initStackObject();
              *(_OWORD *)(v95 + 16) = *((_OWORD *)v82 + 112);
              LOBYTE(v161) = v83;
              LLMQUModelAppEntityType.rawValue.getter();
              *(void *)(v95 + 32) = v96;
              *(void *)(v95 + 40) = v97;
              OUTLINED_FUNCTION_1_21(v95, v85);
              swift_setDeallocating();
              specialized _ContiguousArrayStorage.__deallocating_deinit();
              LOBYTE(v161) = v83;
              LLMQUModelAppEntityType.rawValue.getter();
              uint64_t v100 = v99;
              if (v85
                || (uint64_t v101 = v98, v162 = String.nsRangeWithCompleteTokenMatch(of:)(*(Swift::String *)&v98), v162.is_nil))
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                  uint64_t v157 = v105;
                }
                unint64_t v102 = *(void *)(v157 + 16);
                if (v102 >= *(void *)(v157 + 24) >> 1)
                {
                  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                  uint64_t v157 = v106;
                }
                uint64_t v103 = v157;
                *(void *)(v157 + 16) = v102 + 1;
                uint64_t v104 = v103 + 16 * v102;
                *(void *)(v104 + 32) = v101;
                *(void *)(v104 + 40) = v100;
                uint64_t v82 = objc_retain_x10;
              }
              if (!--v79) {
                goto LABEL_109;
              }
              continue;
          }
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v81 = v150;
      uint64_t v82 = objc_retain_x10;
LABEL_109:
      swift_bridgeObjectRelease();
      uint64_t v107 = 56;
      Swift::String v108 = v81;
      switch(v154)
      {
        case 1:
          uint64_t v107 = 37;
          goto LABEL_130;
        case 2:
          uint64_t v107 = 38;
          goto LABEL_130;
        case 3:
          uint64_t v107 = 39;
          goto LABEL_130;
        case 4:
          uint64_t v107 = 40;
          goto LABEL_130;
        case 5:
          uint64_t v107 = 41;
          goto LABEL_130;
        case 6:
          uint64_t v107 = 43;
          goto LABEL_130;
        case 7:
          uint64_t v107 = 44;
          goto LABEL_130;
        case 8:
          uint64_t v107 = 45;
          goto LABEL_130;
        case 9:
          uint64_t v107 = 46;
          goto LABEL_130;
        case 10:
          uint64_t v107 = 47;
          goto LABEL_130;
        case 11:
          uint64_t v107 = 48;
          goto LABEL_130;
        case 12:
        case 13:
          uint64_t v107 = 49;
          goto LABEL_130;
        case 14:
          uint64_t v107 = 51;
          goto LABEL_130;
        case 15:
          uint64_t v107 = 52;
          goto LABEL_130;
        case 16:
          uint64_t v107 = 53;
          goto LABEL_130;
        case 17:
          uint64_t v107 = 54;
          goto LABEL_130;
        case 18:
          uint64_t v107 = 55;
          goto LABEL_130;
        case 19:
          goto LABEL_130;
        case 20:
          uint64_t v107 = 58;
          goto LABEL_130;
        case 21:
          uint64_t v107 = 57;
          goto LABEL_130;
        case 22:
          goto LABEL_131;
        default:
          uint64_t v107 = 36;
LABEL_130:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          uint64_t v109 = swift_initStackObject();
          *(_OWORD *)(v109 + 16) = *((_OWORD *)v82 + 112);
          LOBYTE(v161) = v154;
          *(void *)(v109 + 32) = LLMQUModelAppEntityStatus.rawValue.getter();
          *(void *)(v109 + 40) = v110;
          OUTLINED_FUNCTION_1_21(v109, v107);
          swift_setDeallocating();
          specialized _ContiguousArrayStorage.__deallocating_deinit();
LABEL_131:
          int v111 = v147;
          uint64_t v112 = v151;
          if ((v147 - 2) >= 2)
          {
            if (v147) {
              uint64_t v113 = 95;
            }
            else {
              uint64_t v113 = 94;
            }
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
            uint64_t v114 = swift_initStackObject();
            *(_OWORD *)(v114 + 16) = *((_OWORD *)v82 + 112);
            uint64_t v115 = 1953718640;
            if (!v111) {
              uint64_t v115 = 0x657275747566;
            }
            unint64_t v116 = 0xE400000000000000;
            if (!v111) {
              unint64_t v116 = 0xE600000000000000;
            }
            *(void *)(v114 + 32) = v115;
            *(void *)(v114 + 40) = v116;
            OUTLINED_FUNCTION_1_21(v114, v113);
            swift_setDeallocating();
            specialized _ContiguousArrayStorage.__deallocating_deinit();
          }
          TokenArgumentCollector.addArguments(_:argLabel:findRange:)(v157, 1, 1);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v117 = v19[2];
          objc_allocWithZone(MEMORY[0x263F78D88]);
          swift_bridgeObjectRetain();
          id v118 = @nonobjc SPQUParse.init(intentLabel:tokenArguments:)(v153, v146, v117);
          if (v118)
          {
            uint64_t v119 = v152;
            if (one-time initialization token for llmQU != -1) {
              swift_once();
            }
            uint64_t v120 = __swift_project_value_buffer(v119, (uint64_t)static Logging.llmQU);
            (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v108, v120, v119);
            uint64_t v121 = v112;
            id v122 = v118;
            os_log_type_t v123 = Logger.logObject.getter();
            os_log_type_t v124 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v123, v124))
            {
              *(void *)&long long v158 = v118;
              uint64_t v125 = (uint8_t *)swift_slowAlloc();
              uint64_t v160 = swift_slowAlloc();
              *(_DWORD *)uint64_t v125 = 136315138;
              if (!outlined bridged method (pb) of @objc SPQUParse.getEncodedData()(v122))
              {

                __break(1u);
                JUMPOUT(0x25840DE34);
              }
              unint64_t v156 = v125 + 4;
              uint64_t v157 = MEMORY[0x263F8EE58] + 8;
              uint64_t v126 = Dictionary.description.getter();
              unint64_t v128 = v127;
              swift_bridgeObjectRelease();
              uint64_t v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v128, &v160);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_257DC6000, v123, v124, "LLMQUParseConverter: Converted llmqu resonse to SPQUParse: %s", v125, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_34();
              OUTLINED_FUNCTION_34();

              swift_release();
              (*(void (**)(char *, uint64_t))(v151 + 8))(v150, v152);
              return (id)v158;
            }
            else
            {

              swift_release();
              (*(void (**)(char *, uint64_t))(v121 + 8))(v108, v119);
            }
          }
          else
          {
            uint64_t v129 = v152;
            if (one-time initialization token for llmQU != -1) {
              swift_once();
            }
            __swift_project_value_buffer(v129, (uint64_t)static Logging.llmQU);
            uint64_t v130 = Logger.logObject.getter();
            os_log_type_t v131 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v130, v131))
            {
              uint64_t v132 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v132 = 0;
              _os_log_impl(&dword_257DC6000, v130, v131, "LLMQUParseConverter: Could not convert LLMQUModelResponse to SPQUParse", v132, 2u);
              OUTLINED_FUNCTION_34();
            }

            swift_release();
          }
          return v118;
      }
  }
}

id @nonobjc SPQUParseTokenArgument.init(label:token:tokenRange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a2)
  {
    int v9 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  int v9 = (void *)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v10 = (void *)MEMORY[0x25A2C7AB0](a3, a4);
  swift_bridgeObjectRelease();
LABEL_6:
  id v11 = objc_msgSend(v5, sel_initWithLabel_token_tokenRange_, v9, v10, a5);

  return v11;
}

id @nonobjc SPQUParse.init(intentLabel:tokenArguments:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v5 = 0;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    v6.super.Class isa = 0;
    goto LABEL_6;
  }
  uint64_t v5 = (void *)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  type metadata accessor for SPQUParseTokenArgument();
  v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_6:
  id v7 = objc_msgSend(v3, sel_initWithIntentLabel_tokenArguments_, v5, v6.super.isa);

  return v7;
}

uint64_t type metadata accessor for TokenArgumentCollector()
{
  return self;
}

uint64_t outlined bridged method (pb) of @objc SPQUParse.getEncodedData()(void *a1)
{
  id v1 = objc_msgSend(a1, sel_getEncodedData);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_25840E1CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t method lookup function for TokenArgumentCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TokenArgumentCollector);
}

uint64_t dispatch thunk of TokenArgumentCollector.tokenArguments.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of TokenArgumentCollector.tokenArguments.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of TokenArgumentCollector.tokenArguments.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of TokenArgumentCollector.__allocating_init(for:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TokenArgumentCollector.addArguments(_:argLabel:findRange:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

ValueMetadata *type metadata accessor for LLMQUParseConverter()
{
  return &type metadata for LLMQUParseConverter;
}

unint64_t type metadata accessor for SPQUParseTokenArgument()
{
  unint64_t result = lazy cache variable for type metadata for SPQUParseTokenArgument;
  if (!lazy cache variable for type metadata for SPQUParseTokenArgument)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SPQUParseTokenArgument);
  }
  return result;
}

void OUTLINED_FUNCTION_0_14(char a1@<W8>)
{
  *(unsigned char *)(v1 - 208) = a1;
  LLMQUModelEventType.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_1_21(uint64_t a1, uint64_t a2)
{
  return TokenArgumentCollector.addArguments(_:argLabel:findRange:)(a1, a2, 0);
}

unint64_t OUTLINED_FUNCTION_2_17()
{
  return 0xD000000000000027;
}

unint64_t OUTLINED_FUNCTION_3_33()
{
  return 0xD00000000000002DLL;
}

uint64_t OUTLINED_FUNCTION_5_23(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t *MemoryCreationQUController.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MemoryCreationQUController.shared;
}

id LLMQUParse.attributedParse.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC10OmniSearch10LLMQUParse_attributedParse);
}

uint64_t LLMQUParse.isTrip.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isTrip);
}

uint64_t LLMQUParse.isOpenEndedTimeRange.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isOpenEndedTimeRange);
}

uint64_t LLMQUParse.parseV2.getter()
{
  return OUTLINED_FUNCTION_41_18();
}

uint64_t LLMQUParse.performanceMetrics.getter()
{
  return OUTLINED_FUNCTION_41_18();
}

id LLMQUParse.__allocating_init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:performanceMetrics:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:performanceMetrics:)(a1, a2, a3, a4, a5);
}

id LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:performanceMetrics:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  *(void *)&v5[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_attributedParse] = a1;
  v5[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isTrip] = a3;
  v5[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isOpenEndedTimeRange] = a4;
  *(void *)&v5[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_parseV2] = a2;
  *(void *)&v5[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_performanceMetrics] = a5;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for LLMQUParse();
  return objc_msgSendSuper2(&v7, sel_init);
}

id LLMQUParse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void LLMQUParse.init()()
{
}

id LLMQUParse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LLMQUParse();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for LLMQUParse()
{
  return self;
}

#error "25840E7B8: call analysis failed (funcsize=79)"

uint64_t static MemoryCreationQUController.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t key path setter for MemoryCreationQUController.llmQUNetworkService : MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  outlined init with copy of CustomStringConvertible(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 112))(v4);
}

uint64_t MemoryCreationQUController.llmQUNetworkService.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_30_23();
  return outlined init with copy of CustomStringConvertible(v1 + 16, a1);
}

uint64_t MemoryCreationQUController.llmQUNetworkService.setter(long long *a1)
{
  uint64_t v3 = v1 + 16;
  OUTLINED_FUNCTION_29_20();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  outlined init with take of SageSearchClient(a1, v3);
  return swift_endAccess();
}

uint64_t (*MemoryCreationQUController.llmQUNetworkService.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t key path setter for MemoryCreationQUController.ecrClient : MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  outlined init with copy of ECRClientProtocol?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ECRClientProtocol?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 136))(v4);
}

uint64_t MemoryCreationQUController.ecrClient.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_30_23();
  return outlined init with copy of ECRClientProtocol?(v1 + 56, a1, &demangling cache variable for type metadata for ECRClientProtocol?);
}

uint64_t MemoryCreationQUController.ecrClient.setter()
{
  OUTLINED_FUNCTION_29_20();
  uint64_t v0 = OUTLINED_FUNCTION_79_0();
  outlined assign with take of ECRClientProtocol?(v0, v1);
  return swift_endAccess();
}

uint64_t (*MemoryCreationQUController.ecrClient.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t key path setter for MemoryCreationQUController.queryParser : MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  outlined init with copy of CustomStringConvertible(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 160))(v4);
}

uint64_t MemoryCreationQUController.queryParser.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_30_23();
  return outlined init with copy of CustomStringConvertible(v1 + 96, a1);
}

uint64_t MemoryCreationQUController.queryParser.setter(long long *a1)
{
  uint64_t v3 = v1 + 96;
  OUTLINED_FUNCTION_29_20();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  outlined init with take of SageSearchClient(a1, v3);
  return swift_endAccess();
}

uint64_t (*MemoryCreationQUController.queryParser.modify())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

#error "25840ECB4: call analysis failed (funcsize=73)"

Swift::Void __swiftcall MemoryCreationQUController.prewarm(originatorPID:)(Swift::Int originatorPID)
{
  OUTLINED_FUNCTION_209();
  (*(void (**)(void *__return_ptr))(v3 + 104))(v9);
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(Swift::Int, uint64_t, uint64_t))(v5 + 8))(originatorPID, v4, v5);
  uint64_t v6 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v1 + 152))(v9, v6);
  uint64_t v7 = v10;
  uint64_t v8 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
}

uint64_t MemoryCreationQUController.parse(_:personNames:petNames:locations:currentTime:originatorPID:)()
{
  OUTLINED_FUNCTION_27();
  *(void *)(v1 + 296) = v2;
  *(void *)(v1 + 304) = v0;
  *(unsigned char *)(v1 + 185) = v17;
  *(void *)(v1 + 280) = v3;
  *(void *)(v1 + 288) = v4;
  *(void *)(v1 + 264) = v5;
  *(void *)(v1 + 272) = v6;
  *(void *)(v1 + 248) = v7;
  *(void *)(v1 + 256) = v8;
  *(void *)(v1 + 240) = v9;
  uint64_t v10 = type metadata accessor for Date();
  *(void *)(v1 + 312) = v10;
  OUTLINED_FUNCTION_12_0(v10);
  *(void *)(v1 + 320) = v11;
  *(void *)(v1 + 328) = swift_task_alloc();
  *(void *)(v1 + 336) = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 360) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_78();
  uint64_t v1 = v0[38];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 15));
  Date.init()();
  Date.timeIntervalSince(_:)();
  dispatch thunk of MemoryCreationQUPerformanceMetrics.llmQUModelLatency.setter();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 208) + **(int **)(*(void *)v1 + 208));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[46] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = MemoryCreationQUController.parse(_:personNames:petNames:locations:currentTime:originatorPID:);
  uint64_t v3 = OUTLINED_FUNCTION_43_18(v0[30]);
  return v5(v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 376) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 384) = v3;
  }
  outlined release of MemoryCreationQUModelResponse(v5 + 16);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = *(void *)(v0 + 320);
  swift_release();
  uint64_t v2 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_17_22();
  v2();
  OUTLINED_FUNCTION_17_22();
  v2();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  uint64_t v4 = *(void *)(v0 + 384);
  return v3(v4);
}

{
  uint64_t v0;
  void (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  swift_release();
  OUTLINED_FUNCTION_17_22();
  v1();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v2();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = *(void *)(v0 + 320);
  swift_release();
  uint64_t v2 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_17_22();
  v2();
  OUTLINED_FUNCTION_17_22();
  v2();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

void MemoryCreationQUController.parse(_:personNames:petNames:locations:currentTime:originatorPID:)()
{
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  int v4 = v3;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = *(void *)(v0 + 240);
    char v35 = *(unsigned char *)(v0 + 185);
    uint64_t v34 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 288);
    uint64_t v32 = *(void *)(v0 + 280);
    uint64_t v36 = v2;
    unint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136316418;
    int v42 = v4;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 224) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x263F8D310];
    uint64_t v10 = MEMORY[0x25A2C7E60](v8, MEMORY[0x263F8D310]);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 208) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 22) = 2080;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x25A2C7E60](v13, v9);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 192) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 32) = 2080;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x25A2C7E60](v17, MEMORY[0x263F8D310]);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 42) = 2080;
    *(void *)(v0 + 160) = v32;
    *(void *)(v0 + 168) = v33;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v0 + 216) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 52) = 2080;
    *(void *)(v0 + 176) = v34;
    *(unsigned char *)(v0 + 184) = v35 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int?);
    uint64_t v23 = String.init<A>(describing:)();
    *(void *)(v0 + 232) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v36, (os_log_type_t)v42, "Calling LLM QU to parse query: %s, personNames: %s, petNames: %s, locations: %s, currentTime: %s, originatorPID: %s", (uint8_t *)v7, 0x3Eu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v25 = *(void *)(v0 + 304);
  char v26 = *(unsigned char *)(v0 + 185);
  type metadata accessor for MemoryCreationQUPerformanceMetrics();
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 344) = MemoryCreationQUPerformanceMetrics.init()();
  uint64_t v27 = Date.init()();
  (*(void (**)(uint64_t))(*(void *)v25 + 104))(v27);
  uint64_t v28 = *(void *)(v0 + 144);
  uint64_t v29 = *(void *)(v0 + 152);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 120), v28);
  uint64_t v37 = *(void *)(v29 + 16) + **(int **)(v29 + 16);
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v30;
  *uint64_t v30 = v0;
  v30[1] = MemoryCreationQUController.parse(_:personNames:petNames:locations:currentTime:originatorPID:);
  uint64_t v31 = *(void *)(v0 + 296);
  uint64_t v43 = v28;
  uint64_t v44 = v29;
  char v41 = v26 & 1;
  uint64_t v40 = v31;
  __asm { BRAA            X9, X16 }
}

uint64_t MemoryCreationQUController.parse(_:quResponseJSONString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return OUTLINED_FUNCTION_66((uint64_t)MemoryCreationQUController.parse(_:quResponseJSONString:));
}

uint64_t MemoryCreationQUController.parse(_:quResponseJSONString:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void **)(v0 + 144);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v2;
  v3._object = v1;
  MemoryCreationQUModelResponse.init(jsonString:)((OmniSearch::MemoryCreationQUModelResponse *)(v0 + 16), v3);
  if (v4)
  {
    OUTLINED_FUNCTION_13();
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 152);
    type metadata accessor for MemoryCreationQUPerformanceMetrics();
    OUTLINED_FUNCTION_12();
    *(void *)(v0 + 160) = MemoryCreationQUPerformanceMetrics.init()();
    uint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v7 + 208) + **(int **)(*(void *)v7 + 208));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v8;
    *uint64_t v8 = v0;
    v8[1] = MemoryCreationQUController.parse(_:quResponseJSONString:);
    uint64_t v9 = OUTLINED_FUNCTION_43_18(*(void *)(v0 + 120));
    return v10(v9);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_49();
  Swift::String v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *unint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    outlined release of MemoryCreationQUModelResponse(v5 + 16);
    swift_release();
    OUTLINED_FUNCTION_149();
    return v12(v3);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  swift_release();
  outlined release of MemoryCreationQUModelResponse(v0 + 16);
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t MemoryCreationQUController.parse(_:quResponse:performanceMetrics:)()
{
  OUTLINED_FUNCTION_78();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[2] = v5;
  v1[7] = *v0;
  uint64_t v6 = type metadata accessor for MemoryCreationQUParseSortOrder();
  v1[8] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v1[9] = v7;
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  OUTLINED_FUNCTION_209();
  unint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(v8 + 248) + **(int **)(v8 + 248));
  uint64_t v9 = (void *)swift_task_alloc();
  v1[12] = v9;
  *uint64_t v9 = v1;
  v9[1] = MemoryCreationQUController.parse(_:quResponse:performanceMetrics:);
  uint64_t v10 = OUTLINED_FUNCTION_105_10();
  return v12(v10);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 104) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

void MemoryCreationQUController.parse(_:quResponse:performanceMetrics:)()
{
  uint64_t v1 = (void *)v0[4];
  if (v1[9] == 7562617 && v1[10] == 0xE300000000000000)
  {
    char v21 = 1;
  }
  else
  {
    char v21 = OUTLINED_FUNCTION_67_12();
    uint64_t v1 = (void *)v0[4];
  }
  if (v1[11] == 7562617 && v1[12] == 0xE300000000000000)
  {
    char v20 = 1;
  }
  else
  {
    char v20 = OUTLINED_FUNCTION_67_12();
    uint64_t v1 = (void *)v0[4];
  }
  uint64_t v4 = v0[7];
  OUTLINED_FUNCTION_209();
  (*(void (**)(void *))(v5 + 240))(v1);
  uint64_t v6 = OUTLINED_FUNCTION_68_12();
  v7(v6);
  type metadata accessor for MemoryCreationQUParse();
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRetain();
  uint64_t v8 = MemoryCreationQUParse.init(query:attributes:isTrip:isOpenEndedTimeRange:sortOrder:)();
  if ((*(uint64_t (**)(uint64_t, void *))(v4 + 216))(v8, v1))
  {
    type metadata accessor for MemoryCreationQUError();
    lazy protocol witness table accessor for type MemoryCreationQUError and conformance MemoryCreationQUError(&lazy protocol witness table cache variable for type MemoryCreationQUError and conformance MemoryCreationQUError, MEMORY[0x263F5B848]);
    swift_allocError();
    OUTLINED_FUNCTION_168_0();
    v9();
    swift_willThrow();
    swift_release();
    uint64_t v10 = OUTLINED_FUNCTION_57_13();
    v11(v10);
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_36_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v14 = v0[5];
  Class v15 = MemoryCreationQUController.attributedStringFromParse(_:)();
  objc_allocWithZone((Class)type metadata accessor for LLMQUParse());
  swift_retain();
  LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:performanceMetrics:)((uint64_t)v15, v8, v21 & 1, v20 & 1, v14);
  uint64_t v16 = OUTLINED_FUNCTION_57_13();
  v17(v16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_1();
  __asm { BRAA            X2, X16 }
}

#error "2584102AC: call analysis failed (funcsize=16)"

void static MemoryCreationQUController.isParseEmpty(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_104_0();
  a19 = v20;
  a20 = v21;
  type metadata accessor for MemoryCreationQUParseSortOrder();
  OUTLINED_FUNCTION_0_10();
  uint64_t v23 = v22;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&a9 - v28;
  unint64_t v30 = MemoryCreationQUParse.attributes.getter();
  if (v30 >> 62) {
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v31 <= 0
    && (MemoryCreationQUParse.isTrip.getter() & 1) == 0
    && (MemoryCreationQUParse.isOpenEndedTimeRange.getter() & 1) == 0)
  {
    MemoryCreationQUParse.sortOrder.getter();
    uint64_t v32 = *(void (**)(uint64_t))(v23 + 104);
    uint64_t v33 = OUTLINED_FUNCTION_71_11();
    v32(v33);
    char v34 = specialized == infix<A>(_:_:)((uint64_t)v29, (uint64_t)v27);
    char v35 = *(void (**)(void))(v23 + 8);
    OUTLINED_FUNCTION_28_17();
    v35();
    OUTLINED_FUNCTION_28_17();
    v35();
    if ((v34 & 1) == 0)
    {
      MemoryCreationQUParse.sortOrder.getter();
      uint64_t v36 = OUTLINED_FUNCTION_71_11();
      v32(v36);
      specialized == infix<A>(_:_:)((uint64_t)v29, (uint64_t)v27);
      OUTLINED_FUNCTION_28_17();
      v35();
      OUTLINED_FUNCTION_28_17();
      v35();
    }
  }
  OUTLINED_FUNCTION_119_0();
}

BOOL static MemoryCreationQUController.isQUModelResponseEmpty(_:)(void *a1)
{
  return !*(void *)(*a1 + 16)
      && !*(void *)(a1[1] + 16)
      && !*(void *)(a1[2] + 16)
      && !*(void *)(a1[3] + 16)
      && !*(void *)(a1[5] + 16)
      && !*(void *)(a1[4] + 16)
      && !*(void *)(a1[6] + 16)
      && !*(void *)(a1[7] + 16)
      && !*(void *)(a1[8] + 16);
}

void MemoryCreationQUController.sortOrder(prediction:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  uint64_t v41 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MemoryCreationQUParseSortOrder?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v40 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for MemoryCreationQUParseSortOrder();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_185_0();
  uint64_t v47 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v39 - v10;
  uint64_t v11 = *(void *)(v1 + 64) + 64;
  OUTLINED_FUNCTION_12_27();
  uint64_t v14 = v13 & v12;
  int64_t v16 = (unint64_t)(v15 + 63) >> 6;
  int v44 = *MEMORY[0x263F5B858];
  unint64_t v45 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v46 = v6 + 104;
  int v42 = *MEMORY[0x263F5B868];
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v18 = MEMORY[0x263F8EE78];
  while (v14)
  {
    v14 &= v14 - 1;
LABEL_18:
    Swift::String v23 = String.lowercased()();
    BOOL v24 = v23._countAndFlagsBits == 0x7473726966 && v23._object == (void *)0xE500000000000000;
    if (v24 || (OUTLINED_FUNCTION_32_17() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_168_0();
      v29();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = OUTLINED_FUNCTION_49_14();
      }
      unint64_t v31 = *(void *)(v18 + 16);
      unint64_t v30 = *(void *)(v18 + 24);
      unint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1) {
        uint64_t v18 = OUTLINED_FUNCTION_47_13(v30);
      }
      uint64_t v33 = v43;
LABEL_51:
      *(void *)(v18 + 16) = v32;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v31, v33, v48);
    }
    else
    {
      BOOL v25 = v23._countAndFlagsBits == 1953718636 && v23._object == (void *)0xE400000000000000;
      if (v25
        || (OUTLINED_FUNCTION_32_17() & 1) != 0
        || (v23._countAndFlagsBits == 0x746E65636572 ? (BOOL v26 = v23._object == (void *)0xE600000000000000) : (BOOL v26 = 0),
            v26
         || (OUTLINED_FUNCTION_32_17() & 1) != 0
         || (*(void *)aLatest == v23._countAndFlagsBits ? (BOOL v27 = (void *)unk_2706A4E48 == v23._object) : (BOOL v27 = 0), v27)))
      {
        swift_bridgeObjectRelease();
LABEL_46:
        OUTLINED_FUNCTION_168_0();
        v34();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = OUTLINED_FUNCTION_49_14();
        }
        unint64_t v31 = *(void *)(v18 + 16);
        unint64_t v35 = *(void *)(v18 + 24);
        unint64_t v32 = v31 + 1;
        if (v31 >= v35 >> 1) {
          uint64_t v18 = OUTLINED_FUNCTION_47_13(v35);
        }
        uint64_t v33 = v47;
        goto LABEL_51;
      }
      char v28 = OUTLINED_FUNCTION_32_17();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_46;
      }
    }
  }
  int64_t v19 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v19 >= v16) {
      goto LABEL_52;
    }
    ++v17;
    if (!*(void *)(v11 + 8 * v19))
    {
      int64_t v17 = v19 + 1;
      if (v19 + 1 >= v16) {
        goto LABEL_52;
      }
      if (!*(void *)(v11 + 8 * v17))
      {
        int64_t v17 = v19 + 2;
        if (v19 + 2 >= v16) {
          goto LABEL_52;
        }
        if (!*(void *)(v11 + 8 * v17))
        {
          int64_t v20 = v19 + 3;
          if (v20 >= v16)
          {
LABEL_52:
            swift_release();
            if (*(void *)(v18 + 16) == 1)
            {
              uint64_t v36 = v40;
              specialized Collection.first.getter(v18, v40);
              swift_bridgeObjectRelease();
              uint64_t v37 = v48;
              if (__swift_getEnumTagSinglePayload(v36, 1, v48) == 1)
              {
                outlined destroy of SearchResult?(v36, &demangling cache variable for type metadata for MemoryCreationQUParseSortOrder?);
                goto LABEL_56;
              }
              (*v45)(v41, v36, v37);
            }
            else
            {
              swift_bridgeObjectRelease();
LABEL_56:
              OUTLINED_FUNCTION_168_0();
              v38();
            }
            OUTLINED_FUNCTION_119_0();
            return;
          }
          if (!*(void *)(v11 + 8 * v20))
          {
            while (1)
            {
              int64_t v17 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_60;
              }
              if (v17 >= v16) {
                goto LABEL_52;
              }
              ++v20;
              if (*(void *)(v11 + 8 * v17)) {
                goto LABEL_17;
              }
            }
          }
          int64_t v17 = v20;
        }
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_35_20();
    uint64_t v14 = v22 & v21;
    goto LABEL_18;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

uint64_t MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  void v4[3] = a1;
  void v4[4] = a2;
  return OUTLINED_FUNCTION_66((uint64_t)MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:));
}

uint64_t MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:)()
{
  OUTLINED_FUNCTION_49();
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.memoryCreationQU);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_257DC6000, v2, v3, "Converting LLMQUResponse into MemoryCreationQUParseAttributes", v4, 2u);
    OUTLINED_FUNCTION_34();
  }

  v0[2] = MEMORY[0x263F8EE78];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:);
  uint64_t v6 = OUTLINED_FUNCTION_43_18(v0[3]);
  return MemoryCreationQUController.attributesFromWho(query:who:)(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 64) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_27_0();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v0 = OUTLINED_FUNCTION_105_10();
  MemoryCreationQUController.attributesFromWhat(query:what:)(v0, v1, v2);
  specialized Array.append<A>(contentsOf:)();
  os_log_type_t v3 = OUTLINED_FUNCTION_105_10();
  v4(v3);
  specialized Array.append<A>(contentsOf:)();
  uint64_t v5 = OUTLINED_FUNCTION_105_10();
  MemoryCreationQUController.attributesFromWhere(query:where_:)(v5, v6, v7);
  specialized Array.append<A>(contentsOf:)();
  uint64_t v8 = OUTLINED_FUNCTION_105_10();
  MemoryCreationQUController.attributesFromMusic(query:music:)(v8, v9, v10, v11, v12);
  specialized Array.append<A>(contentsOf:)();
  uint64_t v13 = OUTLINED_FUNCTION_105_10();
  MemoryCreationQUController.attributesFromMood(query:mood:)(v13, v14, v15);
  specialized Array.append<A>(contentsOf:)();
  OUTLINED_FUNCTION_149();
  return v16();
}

uint64_t MemoryCreationQUController.attributesFromWho(query:who:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  void v4[4] = a1;
  v4[5] = a2;
  return OUTLINED_FUNCTION_66((uint64_t)MemoryCreationQUController.attributesFromWho(query:who:));
}

uint64_t MemoryCreationQUController.attributesFromWho(query:who:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  *(void *)(v14 + 16) = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)(v14 + 48);
  char v16 = *(unsigned char *)(v15 + 32);
  *(unsigned char *)(v14 + 184) = v16;
  uint64_t v17 = 1 << v16;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  uint64_t v19 = v18 & *(void *)(v15 + 64);
  uint64_t v20 = *MEMORY[0x263F01BF8];
  *(void *)(v14 + 64) = *MEMORY[0x263F01BE0];
  *(void *)(v14 + 72) = v20;
  *(void *)(v14 + 80) = *MEMORY[0x263F01C00];
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  if (!v19) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v23 = OUTLINED_FUNCTION_39_16();
  while (1)
  {
    *(void *)(v14 + 88) = v19;
    *(void *)(v14 + 96) = v22;
    *(void *)(v14 + 104) = *(void *)(*(void *)(v23 + 48) + 16 * v24 + 8);
    swift_bridgeObjectRetain();
    v31._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_105_10();
    __C::_NSRange_optional v56 = String.nsRangeWithCompleteTokenMatch(of:)(v31);
    if (!v56.is_nil)
    {
      *(void *)(v14 + 112) = v56.value.length;
      *(void *)(v14 + 120) = v56.value.location;
      Range<>.init(_:in:)();
      if ((v32 & 1) == 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    OUTLINED_FUNCTION_55_14();
    if (v25 == v26) {
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_54_12();
    if (!v27)
    {
      OUTLINED_FUNCTION_53_13();
      if (v25 == v26) {
        goto LABEL_30;
      }
      if (!*(void *)(v21 + 8 * v22))
      {
        uint64_t v22 = v29 + 2;
        if (v29 + 2 >= v28) {
          goto LABEL_30;
        }
        if (!*(void *)(v21 + 8 * v22))
        {
          uint64_t v22 = v29 + 3;
          if (v29 + 3 >= v28) {
            goto LABEL_30;
          }
          if (!*(void *)(v21 + 8 * v22))
          {
            uint64_t v22 = v29 + 4;
            if (v29 + 4 >= v28) {
              goto LABEL_30;
            }
            if (!*(void *)(v21 + 8 * v22))
            {
              uint64_t v30 = v29 + 5;
              if (v30 >= v28)
              {
LABEL_30:
                swift_release();
                OUTLINED_FUNCTION_149();
                OUTLINED_FUNCTION_45_0();
                return v35(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12, a13, a14);
              }
              if (!*(void *)(v21 + 8 * v30))
              {
                while (1)
                {
                  uint64_t v22 = v30 + 1;
                  if (__OFADD__(v30, 1)) {
                    break;
                  }
                  if (v22 >= v28) {
                    goto LABEL_30;
                  }
                  ++v30;
                  if (*(void *)(v21 + 8 * v22)) {
                    goto LABEL_25;
                  }
                }
LABEL_42:
                __break(1u);
LABEL_43:
                OUTLINED_FUNCTION_46_15(v21);
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_36:
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                swift_release();
                goto LABEL_38;
              }
              uint64_t v22 = v30;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_51_16();
  }
  uint64_t v42 = *(void *)(v14 + 48);
  uint64_t v43 = String.subscript.getter();
  uint64_t v44 = MEMORY[0x25A2C7B70](v43);
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  *(void *)(v14 + 128) = v44;
  *(void *)(v14 + 136) = v46;
  swift_bridgeObjectRetain();
  uint64_t v47 = OUTLINED_FUNCTION_105_10();
  uint64_t v49 = specialized Dictionary.subscript.getter(v47, v48, v42);
  swift_bridgeObjectRelease();
  if (!v49) {
    goto LABEL_38;
  }
  if (*(void *)(v49 + 16))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    type metadata accessor for MemoryCreationQUParseAttributes();
    OUTLINED_FUNCTION_12();
    swift_bridgeObjectRetain();
    MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
    uint64_t v50 = swift_retain();
    MEMORY[0x25A2C7E10](v50);
    OUTLINED_FUNCTION_13_28();
    if (v51) {
      goto LABEL_43;
    }
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
LABEL_38:
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v14 + 144) = v52;
  *uint64_t v52 = v14;
  v52[1] = MemoryCreationQUController.attributesFromWho(query:who:);
  OUTLINED_FUNCTION_105_10();
  OUTLINED_FUNCTION_45_0();
  return MemoryCreationQUController.groundPerson(person:)(v53, v54);
}

{
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  uint64_t v15 = v14[19];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;
  if (v15 != 1) {
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = v14[14];
  __C::_NSRange_optional v56 = type metadata accessor for MemoryCreationQUParseAttributes();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v19 = MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
  uint64_t v20 = swift_retain();
  MEMORY[0x25A2C7E10](v20);
  OUTLINED_FUNCTION_63_9();
  if (!v21) {
    goto LABEL_4;
  }
LABEL_50:
  OUTLINED_FUNCTION_4_21();
LABEL_4:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v15 == 1) {
    goto LABEL_9;
  }
  uint64_t v22 = v14[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_9;
  }
  uint64_t v17 = v14[17];
  if (!*(void *)(v14[20] + 16))
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_12();
  uint64_t v17 = MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
  uint64_t v23 = swift_retain();
  MEMORY[0x25A2C7E10](v23);
  OUTLINED_FUNCTION_13_28();
  if (v21)
  {
LABEL_52:
    OUTLINED_FUNCTION_46_15(v24);
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();
LABEL_10:
  swift_release();
  uint64_t v15 = v14[11];
  char v25 = v14[12];
  if (v15)
  {
LABEL_11:
    OUTLINED_FUNCTION_72_9();
    uint64_t v27 = v26 | (v25 << 6);
    uint64_t v28 = v14[6];
    goto LABEL_32;
  }
  while (1)
  {
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_55_14();
    if (v29 == v30) {
      goto LABEL_36;
    }
    OUTLINED_FUNCTION_54_12();
    if (!v31)
    {
      OUTLINED_FUNCTION_53_13();
      if (v29 == v30) {
        goto LABEL_36;
      }
      Swift::String v31 = *(void *)(v24 + 8 * v25);
      if (!v31)
      {
        char v25 = v33 + 2;
        if (v33 + 2 >= v32) {
          goto LABEL_36;
        }
        Swift::String v31 = *(void *)(v24 + 8 * v25);
        if (!v31)
        {
          char v25 = v33 + 3;
          if (v33 + 3 >= v32) {
            goto LABEL_36;
          }
          Swift::String v31 = *(void *)(v24 + 8 * v25);
          if (!v31)
          {
            char v25 = v33 + 4;
            if (v33 + 4 >= v32) {
              goto LABEL_36;
            }
            Swift::String v31 = *(void *)(v24 + 8 * v25);
            if (!v31)
            {
              uint64_t v34 = v33 + 5;
              if (v34 >= v32)
              {
LABEL_36:
                swift_release();
                OUTLINED_FUNCTION_149();
                OUTLINED_FUNCTION_45_0();
                return v41(v39, v40, v41, v42, v43, v44, v45, v46, a9, v56, v14 + 2, a12, a13, a14);
              }
              Swift::String v31 = *(void *)(v24 + 8 * v34);
              if (!v31)
              {
                while (1)
                {
                  char v25 = v34 + 1;
                  if (__OFADD__(v34, 1)) {
                    break;
                  }
                  if (v25 >= v32) {
                    goto LABEL_36;
                  }
                  Swift::String v31 = *(void *)(v24 + 8 * v25);
                  ++v34;
                  if (v31) {
                    goto LABEL_31;
                  }
                }
                __break(1u);
                goto LABEL_52;
              }
              char v25 = v34;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v15 = (v31 - 1) & v31;
    uint64_t v27 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_32:
    v14[11] = v15;
    v14[12] = v25;
    OUTLINED_FUNCTION_38_16(v28, v27);
    unint64_t v35 = OUTLINED_FUNCTION_73_8();
    if ((v37 & 1) == 0)
    {
      OUTLINED_FUNCTION_74_11(v35, v36);
      if ((v38 & 1) == 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_11;
    }
  }
  uint64_t v48 = v14[6];
  uint64_t v49 = String.subscript.getter();
  MEMORY[0x25A2C7B70](v49);
  OUTLINED_FUNCTION_59_13();
  v14[16] = v25;
  v14[17] = v18;
  swift_bridgeObjectRetain();
  uint64_t v50 = specialized Dictionary.subscript.getter(v17, v19, v48);
  swift_bridgeObjectRelease();
  if (v50)
  {
    if (*(void *)(v50 + 16))
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_12();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_36_18();
      char v51 = swift_retain();
      MEMORY[0x25A2C7E10](v51);
      OUTLINED_FUNCTION_13_28();
      if (v21) {
        OUTLINED_FUNCTION_4_21();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v52 = (void *)swift_task_alloc();
  v14[18] = v52;
  *uint64_t v52 = v14;
  v52[1] = MemoryCreationQUController.attributesFromWho(query:who:);
  OUTLINED_FUNCTION_23_18();
  OUTLINED_FUNCTION_45_0();
  return MemoryCreationQUController.groundPerson(person:)(v53, v54);
}

uint64_t MemoryCreationQUController.attributesFromWho(query:who:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  v8[19] = v6;
  v8[20] = v7;
  v8[21] = v9;
  v8[22] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t MemoryCreationQUController.attributesFromWho(query:who:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  if (one-time initialization token for memoryCreationQU == -1) {
    goto LABEL_2;
  }
LABEL_45:
  swift_once();
LABEL_2:
  uint64_t v15 = (void *)v14[22];
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logging.memoryCreationQU);
  id v17 = v15;
  id v18 = v15;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = (void *)v14[22];
  if (v21)
  {
    a10 = v14 + 4;
    a11 = v14 + 3;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    id v25 = v22;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    v14[3] = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v26;

    _os_log_impl(&dword_257DC6000, v19, v20, "Error calling ECR: %@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  uint64_t v27 = v14[15];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  type metadata accessor for MemoryCreationQUParseAttributes();
  OUTLINED_FUNCTION_12();
  uint64_t v28 = OUTLINED_FUNCTION_66_11();
  uint64_t v29 = swift_retain();
  MEMORY[0x25A2C7E10](v29);
  OUTLINED_FUNCTION_63_9();
  if (v31)
  {
    OUTLINED_FUNCTION_46_15(v30);
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  char v32 = (void *)v14[22];
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  swift_release();
  uint64_t v34 = v14[11];
  uint64_t v33 = v14[12];
  if (v34)
  {
LABEL_8:
    uint64_t v35 = OUTLINED_FUNCTION_39_16();
    goto LABEL_29;
  }
  while (1)
  {
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    OUTLINED_FUNCTION_55_14();
    if (v37 == v38) {
      goto LABEL_33;
    }
    OUTLINED_FUNCTION_54_12();
    if (!v39)
    {
      OUTLINED_FUNCTION_53_13();
      if (v37 == v38) {
        goto LABEL_33;
      }
      if (!*(void *)(v40 + 8 * v33))
      {
        uint64_t v33 = v42 + 2;
        if (v42 + 2 >= v41) {
          goto LABEL_33;
        }
        if (!*(void *)(v40 + 8 * v33))
        {
          uint64_t v33 = v42 + 3;
          if (v42 + 3 >= v41) {
            goto LABEL_33;
          }
          if (!*(void *)(v40 + 8 * v33))
          {
            uint64_t v33 = v42 + 4;
            if (v42 + 4 >= v41) {
              goto LABEL_33;
            }
            if (!*(void *)(v40 + 8 * v33))
            {
              uint64_t v43 = v42 + 5;
              if (v43 >= v41)
              {
LABEL_33:
                swift_release();
                OUTLINED_FUNCTION_149();
                OUTLINED_FUNCTION_45_0();
                return v50(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14);
              }
              if (!*(void *)(v40 + 8 * v43))
              {
                while (1)
                {
                  uint64_t v33 = v43 + 1;
                  if (__OFADD__(v43, 1)) {
                    break;
                  }
                  if (v33 >= v41) {
                    goto LABEL_33;
                  }
                  ++v43;
                  if (*(void *)(v40 + 8 * v33)) {
                    goto LABEL_28;
                  }
                }
                __break(1u);
LABEL_47:
                OUTLINED_FUNCTION_4_21();
LABEL_39:
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                swift_release();
                goto LABEL_41;
              }
              uint64_t v33 = v43;
            }
          }
        }
      }
    }
LABEL_28:
    OUTLINED_FUNCTION_51_16();
LABEL_29:
    v14[11] = v34;
    v14[12] = v33;
    OUTLINED_FUNCTION_38_16(v35, v36);
    unint64_t v44 = OUTLINED_FUNCTION_73_8();
    if ((v46 & 1) == 0)
    {
      OUTLINED_FUNCTION_74_11(v44, v45);
      if ((v47 & 1) == 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_8;
    }
  }
  uint64_t v57 = v14[6];
  uint64_t v58 = String.subscript.getter();
  MEMORY[0x25A2C7B70](v58);
  OUTLINED_FUNCTION_59_13();
  v14[16] = v33;
  v14[17] = v34;
  swift_bridgeObjectRetain();
  uint64_t v59 = specialized Dictionary.subscript.getter(v27, v28, v57);
  swift_bridgeObjectRelease();
  if (!v59) {
    goto LABEL_41;
  }
  if (*(void *)(v59 + 16))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_allocObject();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_36_18();
    uint64_t v60 = swift_retain();
    MEMORY[0x25A2C7E10](v60);
    OUTLINED_FUNCTION_13_28();
    if (v31) {
      goto LABEL_47;
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
LABEL_41:
  char v61 = (void *)swift_task_alloc();
  v14[18] = v61;
  *char v61 = v14;
  v61[1] = MemoryCreationQUController.attributesFromWho(query:who:);
  OUTLINED_FUNCTION_23_18();
  OUTLINED_FUNCTION_45_0();
  return MemoryCreationQUController.groundPerson(person:)(v62, v63);
}

void MemoryCreationQUController.attributesFromWhat(query:what:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  __C::_NSRange_optional v31;

  uint64_t v3 = a3;
  uint64_t v4 = a3 + 64;
  OUTLINED_FUNCTION_12_27();
  uint64_t v7 = v6 & v5;
  unint64_t v30 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v29 = v3;
  uint64_t v28 = v4;
  while (1)
  {
    if (v7)
    {
      OUTLINED_FUNCTION_72_9();
      goto LABEL_27;
    }
    uint64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v30) {
      goto LABEL_33;
    }
    ++v9;
    if (!*(void *)(v4 + 8 * v10))
    {
      uint64_t v9 = v10 + 1;
      OUTLINED_FUNCTION_42_13();
      if (v12 == v13) {
        goto LABEL_33;
      }
      if (!*(void *)(v4 + 8 * v9))
      {
        uint64_t v9 = v11 + 2;
        OUTLINED_FUNCTION_42_13();
        if (v12 == v13) {
          goto LABEL_33;
        }
        if (!*(void *)(v4 + 8 * v9))
        {
          uint64_t v9 = v14 + 3;
          OUTLINED_FUNCTION_42_13();
          if (v12 == v13) {
            goto LABEL_33;
          }
          if (!*(void *)(v4 + 8 * v9))
          {
            uint64_t v9 = v15 + 4;
            OUTLINED_FUNCTION_42_13();
            if (v12 == v13) {
              goto LABEL_33;
            }
            if (!*(void *)(v4 + 8 * v9)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    OUTLINED_FUNCTION_35_20();
    uint64_t v7 = v20 & v19;
LABEL_27:
    swift_bridgeObjectRetain();
    v21._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_68_12();
    char v31 = String.nsRangeWithCompleteTokenMatch(of:)(v21);
    if (v31.is_nil || (Range<>.init(_:in:)(), (v22 & 1) != 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = String.subscript.getter();
      MEMORY[0x25A2C7B70](v23);
      swift_bridgeObjectRelease();
      uint64_t v24 = OUTLINED_FUNCTION_68_12();
      specialized Dictionary.subscript.getter(v24, v25, v3);
      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      type metadata accessor for MemoryCreationQUParseAttributes();
      OUTLINED_FUNCTION_12();
      MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
      uint64_t v26 = swift_retain();
      MEMORY[0x25A2C7E10](v26);
      OUTLINED_FUNCTION_62_10();
      if (v27) {
        OUTLINED_FUNCTION_14_23();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
      uint64_t v3 = v29;
      uint64_t v4 = v28;
    }
  }
  id v17 = v16 + 5;
  if (v17 >= v30)
  {
LABEL_33:
    swift_release();
    return;
  }
  if (*(void *)(v4 + 8 * v17))
  {
    uint64_t v9 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    OUTLINED_FUNCTION_42_13();
    if (v12 == v13) {
      goto LABEL_33;
    }
    id v17 = v18 + 1;
    if (*(void *)(v4 + 8 * v9)) {
      goto LABEL_26;
    }
  }
LABEL_35:
  __break(1u);
}

void MemoryCreationQUController.attributesFromWhen(query:when:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v67 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_185_0();
  uint64_t v65 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v62 - v12;
  uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  uint64_t v16 = v2 + 64;
  uint64_t v15 = *(void *)(v2 + 64);
  uint64_t v96 = MEMORY[0x263F8EE78];
  uint64_t v17 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v15;
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v64 = v11 + 16;
  uint64_t v63 = v10 + 7;
  v62[1] = v11 + 32;
  uint64_t v76 = *MEMORY[0x263F01BB0];
  uint64_t v66 = v11;
  uint64_t v75 = (void (**)(char *, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  unint64_t v74 = 0x8000000258682840;
  uint64_t v73 = 0x8000000258682860;
  uint64_t v80 = v4;
  uint64_t v79 = v6;
  unint64_t v87 = v13;
  uint64_t v68 = v2;
  uint64_t v78 = v2 + 64;
  int64_t v77 = v20;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      uint64_t v90 = v21;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_23;
    }
    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v24 >= v20) {
      goto LABEL_40;
    }
    if (!*(void *)(v16 + 8 * v24))
    {
      if (v21 + 2 >= v20) {
        goto LABEL_40;
      }
      if (!*(void *)(v16 + 8 * (v21 + 2)))
      {
        if (v21 + 3 >= v20) {
          goto LABEL_40;
        }
        if (!*(void *)(v16 + 8 * (v21 + 3)))
        {
          if (v21 + 4 >= v20) {
            goto LABEL_40;
          }
          if (!*(void *)(v16 + 8 * (v21 + 4)))
          {
            if (v21 + 5 >= v20) {
              goto LABEL_40;
            }
            if (!*(void *)(v16 + 8 * (v21 + 5)))
            {
              uint64_t v25 = v21 + 6;
              if (v21 + 6 >= v20)
              {
LABEL_40:
                swift_release();
                OUTLINED_FUNCTION_119_0();
                return;
              }
              if (!*(void *)(v16 + 8 * v25)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_35_20();
    unint64_t v19 = v28 & v27;
    uint64_t v90 = v29;
    unint64_t v23 = v30 + (v29 << 6);
LABEL_23:
    char v31 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v23);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    swift_bridgeObjectRetain();
    v34._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_75_8();
    __C::_NSRange_optional v97 = String.nsRangeWithCompleteTokenMatch(of:)(v34);
    if (v97.is_nil || (Swift::Int length = v97.value.length, location = v97.value.location, Range<>.init(_:in:)(), (v35 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v90;
    }
    else
    {
      uint64_t v36 = String.subscript.getter();
      uint64_t v37 = MEMORY[0x25A2C7B70](v36);
      uint64_t v83 = v38;
      uint64_t v84 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v39 = OUTLINED_FUNCTION_75_8();
      uint64_t v41 = (void *)specialized Dictionary.subscript.getter(v39, v40, v2);
      swift_bridgeObjectRelease();
      uint64_t v42 = swift_allocObject();
      uint64_t v86 = v42;
      *(void *)(v42 + 16) = v14;
      uint64_t v43 = (uint64_t *)(v42 + 16);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Substring, Substring));
      Regex.init(_regexString:version:)();
      id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
      outlined bridged method (mbnn) of @objc NSDateFormatter.dateFormat.setter(0xD000000000000015, v73, v85);
      OUTLINED_FUNCTION_75_8();
      Swift::String v91 = String.lowercased()();
      uint64_t v94 = 7300961;
      unint64_t v95 = 0xE300000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      char v44 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v44)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v32;
        uint64_t v46 = v33;
        uint64_t v82 = v14;
      }
      else
      {
        uint64_t v82 = v41;
        if (v41 && v41[2])
        {
          uint64_t v45 = v41[5];
          uint64_t v46 = v41[4];
        }
        else
        {
          uint64_t v45 = v32;
          uint64_t v46 = v33;
        }
      }
      swift_bridgeObjectRetain();
      type metadata accessor for MemoryCreationQUDateGroundingHeuristics();
      swift_allocObject();
      uint64_t v47 = MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:)(v46, v45, v33, v32);
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *uint64_t v43 = v47;
      swift_bridgeObjectRelease();
      if ((unint64_t)*v43 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v48)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
      }
      else if (*(void *)((*v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_34;
      }
      OUTLINED_FUNCTION_209();
      (*(void (**)(Swift::String *__return_ptr))(v49 + 152))(&v91);
      uint64_t v72 = v92;
      uint64_t v70 = v93;
      uint64_t v71 = __swift_project_boxed_opaque_existential_1(&v91, v92);
      uint64_t v50 = v66;
      uint64_t v51 = *(void (**)(uint64_t, char *, uint64_t))(v66 + 16);
      uint64_t v52 = v65;
      uint64_t v69 = v46;
      v51(v65, v87, v81);
      unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      unint64_t v54 = (v63 + v53) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v46;
      *(void *)(v55 + 24) = v45;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v50 + 32))(v55 + v53, v52, v81);
      uint64_t v57 = v85;
      uint64_t v56 = v86;
      *(void *)(v55 + v54) = v85;
      *(void *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8)) = v56;
      uint64_t v58 = v70;
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t))(v70 + 8);
      swift_bridgeObjectRetain();
      id v60 = v57;
      swift_retain();
      v59(v69, v45, partial apply for closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:), v55, v72, v58);
      uint64_t v2 = v68;
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v91);
LABEL_37:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      type metadata accessor for MemoryCreationQUParseAttributes();
      OUTLINED_FUNCTION_12();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_79_0();
      MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
      uint64_t v61 = swift_retain();
      MEMORY[0x25A2C7E10](v61);
      if (*(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        OUTLINED_FUNCTION_4_21();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();

      (*v75)(v87, v81);
      swift_release();
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = v78;
      int64_t v20 = v77;
      uint64_t v21 = v90;
    }
  }
  while (1)
  {
    int64_t v26 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v26 >= v20) {
      goto LABEL_40;
    }
    ++v25;
    if (*(void *)(v16 + 8 * v26)) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
}

void closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  if (!a1)
  {
    if (one-time initialization token for memoryCreationQU != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)static Logging.memoryCreationQU);
    swift_bridgeObjectRetain_n();
    uint64_t isEscapingClosureAtFileLocation = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled((os_log_t)isEscapingClosureAtFileLocation, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      aBlock[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      void aBlock[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, (os_log_t)isEscapingClosureAtFileLocation, v29, "No QP parse for date string: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v31, -1, -1);
      MEMORY[0x25A2C94B0](v30, -1, -1);

      return;
    }
    goto LABEL_13;
  }
  uint64_t v47 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v15;
  uint64_t v50 = a5;
  uint64_t v45 = a4;
  uint64_t v46 = a6 + 16;
  uint64_t v16 = one-time initialization token for memoryCreationQU;
  id v17 = a1;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logging.memoryCreationQU);
  id v19 = v17;
  int64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.info.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  id v49 = v19;
  if (v22)
  {
    v44[1] = a2;
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    v44[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v23 = 138412290;
    aBlock[0] = (uint64_t)v19;
    id v24 = v19;
    v44[2] = a3;
    id v25 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v26 = v44[0];
    *(void *)v44[0] = a1;

    _os_log_impl(&dword_257DC6000, v20, v21, "QP parse: %@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v26, -1, -1);
    MEMORY[0x25A2C94B0](v23, -1, -1);
  }
  else
  {
  }
  uint64_t v32 = v45;
  uint64_t v33 = String.count.getter();
  char v35 = v47;
  uint64_t v34 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v47, v32, v48);
  unint64_t v36 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v37 = (v14 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v38 + v36, v35, v34);
  uint64_t v39 = v50;
  *(void *)(v38 + v37) = v50;
  *(void *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = partial apply for closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:);
  *(void *)(v40 + 24) = v38;
  aBlock[4] = (uint64_t)partial apply for thunk for @callee_guaranteed (@guaranteed [NSAttributedStringKey : Any], @unowned _NSRange, @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed [NSAttributedStringKey : Any], @unowned _NSRange, @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_8;
  uint64_t v41 = _Block_copy(aBlock);
  id v42 = v39;
  swift_retain();
  swift_release();
  id v43 = v49;
  objc_msgSend(v49, sel_enumerateAttributesInRange_options_usingBlock_, 0, v33, 0, v41);

  _Block_release(v41);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_13:

    swift_bridgeObjectRelease_n();
  }
}

void closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v100 = a6;
  uint64_t v106 = a5;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v104 = *(void *)(v9 - 8);
  uint64_t v105 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  __C::_NSRange_optional v97 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v103 = (char *)&v90 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unint64_t v102 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v101 = (char *)&v90 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v99 = (char *)&v90 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  BOOL v22 = (char *)&v90 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v98 = (char *)&v90 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v90 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v90 - v31;
  uint64_t v33 = (void *)MEMORY[0x25A2C7AB0](0x536574614450516BLL, 0xEC00000074726174);
  specialized Dictionary.subscript.getter((uint64_t)v33, a1, &v109);

  if (v110)
  {
    int v34 = swift_dynamicCast();
    if (v34) {
      uint64_t v35 = v107;
    }
    else {
      uint64_t v35 = 0;
    }
    if (v34) {
      uint64_t v36 = v108;
    }
    else {
      uint64_t v36 = 0;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)&v109, (uint64_t *)&demangling cache variable for type metadata for Any?);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  unint64_t v37 = (void *)MEMORY[0x25A2C7AB0](0x456574614450516BLL, 0xEA0000000000646ELL);
  specialized Dictionary.subscript.getter((uint64_t)v37, a1, &v109);

  if (!v110)
  {
    outlined destroy of SearchResult?((uint64_t)&v109, (uint64_t *)&demangling cache variable for type metadata for Any?);
LABEL_21:
    swift_bridgeObjectRelease();
    if (one-time initialization token for memoryCreationQU != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static Logging.memoryCreationQU);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v45, v46)) {
      goto LABEL_37;
    }
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    uint64_t v48 = "No start and end dates in attributed parse from QP";
    goto LABEL_36;
  }
  unint64_t v95 = a7;
  uint64_t v96 = v26;
  int v38 = swift_dynamicCast();
  if (v38) {
    uint64_t v39 = v107;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v38) {
    uint64_t v40 = v108;
  }
  else {
    uint64_t v40 = 0;
  }
  if (!v36 || !v40) {
    goto LABEL_21;
  }
  uint64_t v93 = v22;
  *(void *)&long long v109 = v35;
  *((void *)&v109 + 1) = v36;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Substring, Substring));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type Regex<(Substring, Substring)> and conformance Regex<A>();
  uint64_t v94 = v41;
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  swift_bridgeObjectRelease();
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match);
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v42) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v32, &demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
    unint64_t v92 = 0;
    unint64_t v91 = 0;
    uint64_t v90 = 0;
    uint64_t v43 = 0;
  }
  else
  {
    Regex.Match.output.getter();
    swift_bridgeObjectRelease();
    unint64_t v92 = v111;
    unint64_t v91 = v112;
    uint64_t v43 = v114;
    uint64_t v90 = v113;
    (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v32, v42);
  }
  *(void *)&long long v109 = v39;
  *((void *)&v109 + 1) = v40;
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v42) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v30, &demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
    goto LABEL_32;
  }
  Regex.Match.output.getter();
  swift_bridgeObjectRelease();
  unint64_t v49 = v111;
  unint64_t v50 = v112;
  uint64_t v52 = v113;
  uint64_t v51 = v114;
  (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v30, v42);
  if (!v43 || !v51)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    if (one-time initialization token for memoryCreationQU != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    __swift_project_value_buffer(v60, (uint64_t)static Logging.memoryCreationQU);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v45, v46)) {
      goto LABEL_37;
    }
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    uint64_t v48 = "Start and end dates not able to be extracted from QP output";
LABEL_36:
    _os_log_impl(&dword_257DC6000, v45, v46, v48, v47, 2u);
    MEMORY[0x25A2C94B0](v47, -1, -1);
LABEL_37:

    return;
  }
  unint64_t v53 = v92;
  unint64_t v54 = v91;
  uint64_t v55 = v90;
  if (specialized static StringProtocol.== infix<A>(_:_:)(v92, v91, v90, v43, 48, 0xE100000000000000))
  {
    swift_bridgeObjectRelease();
    uint64_t v56 = (uint64_t)v96;
    static Date.distantPast.getter();
    uint64_t v57 = v105;
    __swift_storeEnumTagSinglePayload(v56, 0, 1, v105);
    uint64_t v58 = (uint64_t)v93;
    uint64_t v59 = (uint64_t)v102;
  }
  else
  {
    uint64_t v61 = MEMORY[0x25A2C7B70](v53, v54, v55, v43);
    uint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v64 = (void *)MEMORY[0x25A2C7AB0](v61, v63);
    swift_bridgeObjectRelease();
    id v65 = objc_msgSend(v100, sel_dateFromString_, v64);

    uint64_t v58 = (uint64_t)v93;
    uint64_t v56 = (uint64_t)v96;
    uint64_t v57 = v105;
    uint64_t v59 = (uint64_t)v102;
    if (v65)
    {
      uint64_t v66 = (uint64_t)v98;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v67 = 0;
    }
    else
    {
      uint64_t v67 = 1;
      uint64_t v66 = (uint64_t)v98;
    }
    __swift_storeEnumTagSinglePayload(v66, v67, 1, v57);
    outlined init with take of Date?(v66, v56);
  }
  if (specialized static StringProtocol.== infix<A>(_:_:)(v49, v50, v52, v51, 0x3633383437343132, 0xEA00000000003734))
  {
    swift_bridgeObjectRelease();
    static Date.distantFuture.getter();
    __swift_storeEnumTagSinglePayload(v58, 0, 1, v57);
    uint64_t v69 = v103;
    uint64_t v68 = v104;
    uint64_t v70 = (uint64_t)v101;
  }
  else
  {
    uint64_t v71 = MEMORY[0x25A2C7B70](v49, v50, v52, v51);
    uint64_t v73 = v72;
    swift_bridgeObjectRelease();
    unint64_t v74 = (void *)MEMORY[0x25A2C7AB0](v71, v73);
    swift_bridgeObjectRelease();
    id v75 = objc_msgSend(v100, sel_dateFromString_, v74);

    if (v75)
    {
      uint64_t v76 = (uint64_t)v99;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v77 = 0;
      uint64_t v69 = v103;
      uint64_t v68 = v104;
      uint64_t v70 = (uint64_t)v101;
    }
    else
    {
      uint64_t v77 = 1;
      uint64_t v69 = v103;
      uint64_t v68 = v104;
      uint64_t v70 = (uint64_t)v101;
      uint64_t v76 = (uint64_t)v99;
    }
    __swift_storeEnumTagSinglePayload(v76, v77, 1, v57);
    outlined init with take of Date?(v76, v58);
  }
  outlined init with copy of ECRClientProtocol?(v56, v70, &demangling cache variable for type metadata for Date?);
  if (__swift_getEnumTagSinglePayload(v70, 1, v57) == 1)
  {
    uint64_t v59 = v70;
  }
  else
  {
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
    v78(v69, v70, v57);
    outlined init with copy of ECRClientProtocol?(v58, v59, &demangling cache variable for type metadata for Date?);
    if (__swift_getEnumTagSinglePayload(v59, 1, v57) != 1)
    {
      uint64_t v83 = v97;
      v78(v97, v59, v57);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      Class v85 = Date._bridgeToObjectiveC()().super.isa;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = xmmword_2586703C0;
      *(void *)(v86 + 32) = isa;
      *(void *)(v86 + 40) = v85;
      *(void *)&long long v109 = v86;
      specialized Array._endMutation()();
      uint64_t v87 = v109;
      uint64_t v88 = *(void (**)(char *, uint64_t))(v68 + 8);
      v88(v83, v57);
      v88(v69, v57);
      outlined destroy of SearchResult?(v58, &demangling cache variable for type metadata for Date?);
      outlined destroy of SearchResult?(v56, &demangling cache variable for type metadata for Date?);
      uint64_t v89 = v95;
      swift_beginAccess();
      void *v89 = v87;
      swift_bridgeObjectRelease();
      return;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v57);
  }
  outlined destroy of SearchResult?(v59, &demangling cache variable for type metadata for Date?);
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  __swift_project_value_buffer(v79, (uint64_t)static Logging.memoryCreationQU);
  uint64_t v80 = Logger.logObject.getter();
  os_log_type_t v81 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v82 = 0;
    _os_log_impl(&dword_257DC6000, v80, v81, "Unable to create start and end dates from QP", v82, 2u);
    MEMORY[0x25A2C94B0](v82, -1, -1);
  }

  outlined destroy of SearchResult?(v58, &demangling cache variable for type metadata for Date?);
  outlined destroy of SearchResult?(v56, &demangling cache variable for type metadata for Date?);
}

void MemoryCreationQUController.attributesFromWhere(query:where_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void MemoryCreationQUController.attributesFromMusic(query:music:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5;
  uint64_t v71 = MEMORY[0x263F8EE78];
  uint64_t v7 = a5 + 64;
  OUTLINED_FUNCTION_19_24();
  int64_t v67 = v8 >> 6;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v64 = v7;
  uint64_t v65 = v6;
  while (1)
  {
    if (v5)
    {
      OUTLINED_FUNCTION_48_12();
      goto LABEL_27;
    }
    uint64_t v11 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    if (v11 >= v67) {
      goto LABEL_32;
    }
    ++v9;
    if (*(void *)(v7 + 8 * v11)) {
      goto LABEL_26;
    }
    uint64_t v9 = v11 + 1;
    OUTLINED_FUNCTION_45_11();
    if (v13 == v14) {
      goto LABEL_32;
    }
    if (*(void *)(v7 + 8 * v9)) {
      goto LABEL_26;
    }
    uint64_t v9 = v12 + 2;
    OUTLINED_FUNCTION_45_11();
    if (v13 == v14) {
      goto LABEL_32;
    }
    if (*(void *)(v7 + 8 * v9)) {
      goto LABEL_26;
    }
    uint64_t v9 = v15 + 3;
    OUTLINED_FUNCTION_45_11();
    if (v13 == v14) {
      goto LABEL_32;
    }
    if (*(void *)(v7 + 8 * v9)) {
      goto LABEL_26;
    }
    uint64_t v9 = v16 + 4;
    OUTLINED_FUNCTION_45_11();
    if (v13 == v14) {
      goto LABEL_32;
    }
    if (*(void *)(v7 + 8 * v9)) {
      goto LABEL_26;
    }
    uint64_t v18 = v17 + 5;
    if (v18 >= v67)
    {
LABEL_32:
      swift_release();
      uint64_t v28 = a3 + 64;
      OUTLINED_FUNCTION_19_24();
      int64_t v30 = v29 >> 6;
      swift_bridgeObjectRetain();
      uint64_t v31 = 0;
      uint64_t v66 = v30;
      while (1)
      {
        uint64_t v32 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_83;
        }
        if (v32 >= v30) {
          goto LABEL_55;
        }
        ++v31;
        if (!*(void *)(v28 + 8 * v32))
        {
          uint64_t v31 = v32 + 1;
          if (v32 + 1 >= v30) {
            goto LABEL_55;
          }
          if (!*(void *)(v28 + 8 * v31))
          {
            uint64_t v31 = v32 + 2;
            if (v32 + 2 >= v30) {
              goto LABEL_55;
            }
            if (!*(void *)(v28 + 8 * v31))
            {
              uint64_t v31 = v32 + 3;
              if (v32 + 3 >= v30) {
                goto LABEL_55;
              }
              if (!*(void *)(v28 + 8 * v31))
              {
                uint64_t v31 = v32 + 4;
                if (v32 + 4 >= v30) {
                  goto LABEL_55;
                }
                if (!*(void *)(v28 + 8 * v31))
                {
                  uint64_t v33 = v32 + 5;
                  if (v33 >= v30)
                  {
LABEL_55:
                    swift_release();
                    uint64_t v42 = a4 + 64;
                    OUTLINED_FUNCTION_12_27();
                    unint64_t v45 = v44 & v43;
                    int64_t v47 = (unint64_t)(v46 + 63) >> 6;
                    swift_bridgeObjectRetain();
                    int64_t v48 = 0;
                    int64_t v68 = v47;
                    while (1)
                    {
                      if (v45)
                      {
                        unint64_t v49 = __clz(__rbit64(v45));
                        v45 &= v45 - 1;
                        unint64_t v50 = v49 | (v48 << 6);
                      }
                      else
                      {
                        int64_t v51 = v48 + 1;
                        if (__OFADD__(v48, 1)) {
                          goto LABEL_84;
                        }
                        if (v51 >= v47)
                        {
LABEL_81:
                          swift_release();
                          return;
                        }
                        ++v48;
                        if (!*(void *)(v42 + 8 * v51))
                        {
                          int64_t v48 = v51 + 1;
                          if (v51 + 1 >= v47) {
                            goto LABEL_81;
                          }
                          if (!*(void *)(v42 + 8 * v48))
                          {
                            int64_t v48 = v51 + 2;
                            if (v51 + 2 >= v47) {
                              goto LABEL_81;
                            }
                            if (!*(void *)(v42 + 8 * v48))
                            {
                              int64_t v48 = v51 + 3;
                              if (v51 + 3 >= v47) {
                                goto LABEL_81;
                              }
                              if (!*(void *)(v42 + 8 * v48))
                              {
                                int64_t v48 = v51 + 4;
                                if (v51 + 4 >= v47) {
                                  goto LABEL_81;
                                }
                                if (!*(void *)(v42 + 8 * v48))
                                {
                                  int64_t v52 = v51 + 5;
                                  if (v52 >= v47) {
                                    goto LABEL_81;
                                  }
                                  if (!*(void *)(v42 + 8 * v52))
                                  {
                                    while (1)
                                    {
                                      int64_t v48 = v52 + 1;
                                      if (__OFADD__(v52, 1)) {
                                        goto LABEL_87;
                                      }
                                      if (v48 >= v47) {
                                        goto LABEL_81;
                                      }
                                      ++v52;
                                      if (*(void *)(v42 + 8 * v48)) {
                                        goto LABEL_75;
                                      }
                                    }
                                  }
                                  int64_t v48 = v52;
                                }
                              }
                            }
                          }
                        }
LABEL_75:
                        OUTLINED_FUNCTION_35_20();
                        unint64_t v45 = v54 & v53;
                        unint64_t v50 = v55 + (v48 << 6);
                      }
                      uint64_t v56 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v50);
                      uint64_t v57 = *v56;
                      uint64_t v58 = (void *)v56[1];
                      swift_bridgeObjectRetain();
                      v59._uint64_t countAndFlagsBits = v57;
                      v59._object = v58;
                      __C::_NSRange_optional v74 = String.nsRangeWithCompleteTokenMatch(of:)(v59);
                      LOBYTE(v57) = v74.is_nil;
                      swift_bridgeObjectRelease();
                      if ((v57 & 1) == 0)
                      {
                        Range<>.init(_:in:)();
                        if ((v60 & 1) == 0)
                        {
                          uint64_t v61 = String.subscript.getter();
                          MEMORY[0x25A2C7B70](v61);
                          OUTLINED_FUNCTION_59_13();
                          static String._unconditionallyBridgeFromObjectiveC(_:)();
                          type metadata accessor for MemoryCreationQUParseAttributes();
                          OUTLINED_FUNCTION_12();
                          OUTLINED_FUNCTION_66_11();
                          uint64_t v62 = swift_retain();
                          MEMORY[0x25A2C7E10](v62);
                          OUTLINED_FUNCTION_62_10();
                          if (v63) {
                            OUTLINED_FUNCTION_14_23();
                          }
                          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                          specialized Array._endMutation()();
                          swift_release();
                          uint64_t v42 = a4 + 64;
                          int64_t v47 = v68;
                        }
                      }
                    }
                  }
                  if (!*(void *)(v28 + 8 * v33))
                  {
                    while (1)
                    {
                      uint64_t v31 = v33 + 1;
                      if (__OFADD__(v33, 1)) {
                        goto LABEL_86;
                      }
                      if (v31 >= v30) {
                        goto LABEL_55;
                      }
                      ++v33;
                      if (*(void *)(v28 + 8 * v31)) {
                        goto LABEL_50;
                      }
                    }
                  }
                  uint64_t v31 = v33;
                }
              }
            }
          }
        }
LABEL_50:
        OUTLINED_FUNCTION_58_10();
        uint64_t v35 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v34);
        uint64_t v36 = *v35;
        unint64_t v37 = (void *)v35[1];
        swift_bridgeObjectRetain();
        v38._uint64_t countAndFlagsBits = v36;
        v38._object = v37;
        __C::_NSRange_optional v73 = String.nsRangeWithCompleteTokenMatch(of:)(v38);
        LOBYTE(v36) = v73.is_nil;
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0)
        {
          Range<>.init(_:in:)();
          if ((v39 & 1) == 0)
          {
            uint64_t v40 = String.subscript.getter();
            MEMORY[0x25A2C7B70](v40);
            swift_bridgeObjectRelease();
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            type metadata accessor for MemoryCreationQUParseAttributes();
            OUTLINED_FUNCTION_12();
            OUTLINED_FUNCTION_66_11();
            uint64_t v41 = swift_retain();
            MEMORY[0x25A2C7E10](v41);
            if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              OUTLINED_FUNCTION_14_23();
            }
            OUTLINED_FUNCTION_68_12();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_release();
            int64_t v30 = v66;
            uint64_t v28 = a3 + 64;
          }
        }
      }
    }
    if (!*(void *)(v7 + 8 * v18)) {
      break;
    }
    uint64_t v9 = v18;
LABEL_26:
    OUTLINED_FUNCTION_58_10();
LABEL_27:
    uint64_t v20 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v10);
    uint64_t v21 = *v20;
    BOOL v22 = (void *)v20[1];
    swift_bridgeObjectRetain();
    v23._uint64_t countAndFlagsBits = v21;
    v23._object = v22;
    __C::_NSRange_optional v72 = String.nsRangeWithCompleteTokenMatch(of:)(v23);
    Swift::Bool is_nil = v72.is_nil;
    swift_bridgeObjectRelease();
    if (!is_nil)
    {
      Range<>.init(_:in:)();
      if ((v25 & 1) == 0)
      {
        uint64_t v26 = String.subscript.getter();
        MEMORY[0x25A2C7B70](v26);
        swift_bridgeObjectRelease();
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        type metadata accessor for MemoryCreationQUParseAttributes();
        OUTLINED_FUNCTION_12();
        OUTLINED_FUNCTION_75_8();
        OUTLINED_FUNCTION_66_11();
        uint64_t v27 = swift_retain();
        MEMORY[0x25A2C7E10](v27);
        if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          OUTLINED_FUNCTION_14_23();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
        uint64_t v7 = v64;
        uint64_t v6 = v65;
      }
    }
  }
  while (1)
  {
    uint64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    OUTLINED_FUNCTION_45_11();
    if (v13 == v14) {
      goto LABEL_32;
    }
    uint64_t v18 = v19 + 1;
    if (*(void *)(v7 + 8 * v9)) {
      goto LABEL_26;
    }
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
}

void MemoryCreationQUController.attributesFromMood(query:mood:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

Class MemoryCreationQUController.attributedStringFromParse(_:)()
{
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSMutableAttributedString);
  v0._uint64_t countAndFlagsBits = MemoryCreationQUParse.query.getter();
  Class isa = NSMutableAttributedString.__allocating_init(string:)(v0).super.super.isa;
  if (MemoryCreationQUParse.isTrip.getter())
  {
    id v1 = (id)*MEMORY[0x263F01BE8];
    Class v2 = Bool._bridgeToObjectiveC()().super.super.isa;
    MemoryCreationQUParse.query.getter();
    uint64_t v3 = String.count.getter();
    swift_bridgeObjectRelease();
    -[objc_class addAttribute:value:range:](isa, sel_addAttribute_value_range_, v1, v2, 0, v3);
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258662FD0;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v9;
  uint64_t v59 = v8;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v11;
  uint64_t v57 = v10;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v13;
  *(void *)(inited + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 120) = v15;
  uint64_t v55 = (void *)inited;
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_258661D70;
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v18;
  uint64_t v53 = v17;
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v18;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v20;
  uint64_t v51 = v19;
  *(void *)(v16 + 48) = v19;
  *(void *)(v16 + 56) = v20;
  *(void *)(v16 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v16 + 72) = v21;
  uint64_t v54 = v16;
  unint64_t v22 = MemoryCreationQUParse.attributes.getter();
  unint64_t v23 = v22;
  if (v22 >> 62) {
    goto LABEL_75;
  }
  for (uint64_t i = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v25 = 0;
    while (1)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        MEMORY[0x25A2C8550](v25, v23);
      }
      else
      {
        if (v25 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_74;
        }
        swift_retain();
      }
      unint64_t v26 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        break;
      }
      uint64_t v28 = MemoryCreationQUParse.query.getter();
      unint64_t v29 = v27;
      BOOL v30 = v4 == v28 && v6 == v27;
      if (v30 || (OUTLINED_FUNCTION_4_25() & 1) != 0)
      {
        uint64_t v31 = (void *)MEMORY[0x25A2C7AB0](v28, v29);
        swift_bridgeObjectRelease();
        MemoryCreationQUParseAttributes.expansionDateValues.getter();
        type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDate);
LABEL_48:
        v38.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
      BOOL v32 = v59 == v28 && v58 == v29;
      if (v32
        || (OUTLINED_FUNCTION_4_25() & 1) != 0
        || (v57 == v28 ? (BOOL v33 = v56 == v29) : (BOOL v33 = 0),
            v33
         || (OUTLINED_FUNCTION_4_25() & 1) != 0
         || (v55[8] == v28 ? (BOOL v34 = v55[9] == v29) : (BOOL v34 = 0),
             v34
          || (OUTLINED_FUNCTION_4_25() & 1) != 0
          || (v55[10] == v28 ? (BOOL v35 = v55[11] == v29) : (BOOL v35 = 0),
              v35
           || (OUTLINED_FUNCTION_4_25() & 1) != 0
           || (v55[12] == v28 ? (BOOL v36 = v55[13] == v29) : (BOOL v36 = 0),
               v36
            || (OUTLINED_FUNCTION_4_25() & 1) != 0
            || (v55[14] == v28 ? (BOOL v37 = v55[15] == v29) : (BOOL v37 = 0), v37 || (OUTLINED_FUNCTION_4_25() & 1) != 0))))))
      {
        uint64_t v31 = (void *)MEMORY[0x25A2C7AB0](v28, v29);
        swift_bridgeObjectRelease();
        MemoryCreationQUParseAttributes.expansionStringValues.getter();
        goto LABEL_48;
      }
      BOOL v41 = v53 == v28 && v52 == v29;
      if (!v41 && (OUTLINED_FUNCTION_4_25() & 1) == 0)
      {
        BOOL v42 = v51 == v28 && v50 == v29;
        if (!v42 && (OUTLINED_FUNCTION_4_25() & 1) == 0)
        {
          BOOL v43 = *(void *)(v54 + 64) == v28 && *(void *)(v54 + 72) == v29;
          if (!v43 && (OUTLINED_FUNCTION_4_25() & 1) == 0)
          {
            if (one-time initialization token for memoryCreationQU != -1) {
              swift_once();
            }
            uint64_t v44 = type metadata accessor for Logger();
            __swift_project_value_buffer(v44, (uint64_t)static Logging.memoryCreationQU);
            swift_bridgeObjectRetain();
            unint64_t v45 = Logger.logObject.getter();
            os_log_t log = v45;
            os_log_type_t type = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v45, type))
            {
              uint64_t v46 = swift_slowAlloc();
              uint64_t v61 = swift_slowAlloc();
              *(_DWORD *)uint64_t v46 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)(v46 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v61);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_257DC6000, log, type, "Unhandled attribute key while converting to attributedString: %s", (uint8_t *)v46, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_34();
              OUTLINED_FUNCTION_34();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            goto LABEL_50;
          }
        }
      }
      uint64_t v31 = (void *)MEMORY[0x25A2C7AB0](v28, v29);
      swift_bridgeObjectRelease();
      v38.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
LABEL_49:
      uint64_t v39 = MemoryCreationQUParseAttributes.range.getter();
      -[objc_class addAttribute:value:range:](isa, sel_addAttribute_value_range_, v31, v38.super.isa, v39, v40);

LABEL_50:
      swift_release();
      ++v25;
      if (v26 == i) {
        goto LABEL_76;
      }
    }
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    ;
  }
LABEL_76:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return isa;
}

NSMutableAttributedString __swiftcall NSMutableAttributedString.__allocating_init(string:)(Swift::String string)
{
  object = string._object;
  uint64_t countAndFlagsBits = string._countAndFlagsBits;
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v4 = (void *)MEMORY[0x25A2C7AB0](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithString_, v4);

  return (NSMutableAttributedString)v5;
}

uint64_t MemoryCreationQUController.groundPerson(person:)(uint64_t a1, uint64_t a2)
{
  v3[27] = a2;
  v3[28] = v2;
  v3[26] = a1;
  return OUTLINED_FUNCTION_66((uint64_t)MemoryCreationQUController.groundPerson(person:));
}

uint64_t MemoryCreationQUController.groundPerson(person:)()
{
  uint64_t v1 = v0[28];
  OUTLINED_FUNCTION_209();
  id v3 = *(void (**)(void))(v2 + 128);
  v0[29] = v3;
  v0[30] = (v2 + 128) & 0xFFFFFFFFFFFFLL | 0x63CB000000000000;
  v3();
  if (v0[5])
  {
    uint64_t v4 = OUTLINED_FUNCTION_79_0();
    outlined init with copy of CustomStringConvertible(v4, v5);
    outlined destroy of SearchResult?((uint64_t)(v0 + 2), &demangling cache variable for type metadata for ECRClientProtocol?);
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[21];
    __swift_project_boxed_opaque_existential_1(v0 + 17, v6);
    BOOL v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8)
                                                                                       + **(int **)(v7 + 8));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[31] = v8;
    *uint64_t v8 = v0;
    v8[1] = MemoryCreationQUController.groundPerson(person:);
    uint64_t v9 = v0[27];
    uint64_t v10 = v0[26];
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = v6;
    uint64_t v14 = v7;
LABEL_3:
    return v30(v10, v9, v11, v12, v13, v14);
  }
  outlined destroy of SearchResult?((uint64_t)(v0 + 2), &demangling cache variable for type metadata for ECRClientProtocol?);
  Swift::String v16 = String.lowercased()();
  OUTLINED_FUNCTION_65_9(v16._countAndFlagsBits, (uint64_t)v16._object);
  *(void *)(v1 + 16) = v17;
  *(void *)(v1 + 24) = 0xE300000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type String and conformance String();
  char v18 = BidirectionalCollection<>.starts<A>(with:)();
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v19 = (void (*)(uint64_t))v0[29];
    unint64_t v20 = v0[27];
    uint64_t v21 = v0[26];
    OUTLINED_FUNCTION_26();
    outlined consume of ECRClientPersonResult?(v22);
    swift_bridgeObjectRetain();
    unint64_t v23 = specialized Collection.dropFirst(_:)(3uLL, v21, v20);
    MEMORY[0x25A2C7B70](v23);
    uint64_t v25 = v24;
    uint64_t v26 = swift_bridgeObjectRelease();
    v0[36] = v25;
    v19(v26);
    if (v0[10])
    {
      outlined init with copy of CustomStringConvertible((uint64_t)(v0 + 7), (uint64_t)(v0 + 12));
      outlined destroy of SearchResult?((uint64_t)(v0 + 7), &demangling cache variable for type metadata for ECRClientProtocol?);
      OUTLINED_FUNCTION_61_9();
      BOOL v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v27 + *v27);
      uint64_t v28 = (void *)swift_task_alloc();
      v0[37] = v28;
      *uint64_t v28 = v0;
      v28[1] = MemoryCreationQUController.groundPerson(person:);
      uint64_t v10 = OUTLINED_FUNCTION_24_26();
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    outlined destroy of SearchResult?((uint64_t)(v0 + 7), &demangling cache variable for type metadata for ECRClientProtocol?);
  }
  OUTLINED_FUNCTION_26();
  return v29();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  OUTLINED_FUNCTION_27_0();
  id v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_10();
  *uint64_t v10 = v9;
  uint64_t v11 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v12 = v11;
  v9[32] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v9[33] = v3;
    v9[34] = v5;
    v9[35] = v7;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v13, v14, v15);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  char v6;
  void (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(uint64_t);
  uint64_t v21;

  uint64_t v1 = v0[35];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
  if (v1 == 1)
  {
    id v3 = v0[33];
    uint64_t v2 = v0[34];
    uint64_t v4 = String.lowercased()();
    OUTLINED_FUNCTION_65_9(v4._countAndFlagsBits, (uint64_t)v4._object);
    MEMORY[0x11] = v5;
    MEMORY[0x19] = 0xE300000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v6 = BidirectionalCollection<>.starts<A>(with:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v7 = (void (*)(uint64_t))v0[29];
      uint64_t v8 = v0[27];
      uint64_t v9 = v0[26];
      outlined consume of ECRClientPersonResult?(1);
      swift_bridgeObjectRetain();
      uint64_t v10 = specialized Collection.dropFirst(_:)(3uLL, v9, v8);
      MEMORY[0x25A2C7B70](v10);
      uint64_t v12 = v11;
      uint64_t v13 = swift_bridgeObjectRelease();
      v0[36] = v12;
      v7(v13);
      if (v0[10])
      {
        outlined init with copy of CustomStringConvertible((uint64_t)(v0 + 7), (uint64_t)(v0 + 12));
        outlined destroy of SearchResult?((uint64_t)(v0 + 7), &demangling cache variable for type metadata for ECRClientProtocol?);
        OUTLINED_FUNCTION_61_9();
        unint64_t v20 = (uint64_t (*)(uint64_t))((char *)v14 + *v14);
        uint64_t v15 = (void *)swift_task_alloc();
        v0[37] = v15;
        void *v15 = v0;
        v15[1] = MemoryCreationQUController.groundPerson(person:);
        Swift::String v16 = OUTLINED_FUNCTION_24_26();
        return v20(v16);
      }
      swift_bridgeObjectRelease();
      outlined destroy of SearchResult?((uint64_t)(v0 + 7), &demangling cache variable for type metadata for ECRClientProtocol?);
      uint64_t v2 = 0;
      id v3 = 0;
    }
    char v18 = 1;
  }
  else
  {
    uint64_t v2 = v0[34];
    char v18 = v0[35];
    id v3 = v0[33];
  }
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v19(v18, v2, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  OUTLINED_FUNCTION_78();
  id v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_10();
  *uint64_t v10 = v9;
  uint64_t v11 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v12 = v11;
  v9[38] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    v9[39] = v3;
    v9[40] = v5;
    v9[41] = v7;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v13, v14, v15);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 12));
  uint64_t v2 = v0[40];
  uint64_t v1 = v0[41];
  id v3 = v0[39];
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v4(v1, v2, v3);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  OUTLINED_FUNCTION_13();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t MemoryCreationQUController.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  outlined destroy of SearchResult?(v0 + 56, &demangling cache variable for type metadata for ECRClientProtocol?);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return v0;
}

uint64_t MemoryCreationQUController.__deallocating_deinit()
{
  MemoryCreationQUController.deinit();
  return MEMORY[0x270FA0228](v0, 136, 7);
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.llmQUNetworkService.getter in conformance MemoryCreationQUController()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.prewarm(originatorPID:) in conformance MemoryCreationQUController()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.parse(_:personNames:petNames:locations:currentTime:originatorPID:) in conformance MemoryCreationQUController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v8 + 192) + **(int **)(**(void **)v8 + 192));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = protocol witness for AnswerResolvable.extractInfo(query:results:assistantLocale:) in conformance AnswerResolver;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:) in conformance MemoryCreationQUController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 200)
                                                                   + **(int **)(**(void **)v4 + 200));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return v12(a1, a2, a3, a4);
}

uint64_t specialized _NativeDictionary.makeIterator()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t specialized static StringProtocol.== infix<A>(_:_:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v7 = a3 == a5 && a4 == a6;
  if (v7 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
  }
}

void outlined bridged method (mbnn) of @objc NSDateFormatter.dateFormat.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);
}

uint64_t specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = type metadata accessor for MemoryCreationQUNetworkService();
  uint64_t v14 = &protocol witness table for MemoryCreationQUNetworkService;
  *(void *)&long long v12 = a1;
  uint64_t Parser = type metadata accessor for MemoryCreationQueryParser();
  uint64_t v11 = &protocol witness table for MemoryCreationQueryParser;
  *(void *)&long long v9 = a3;
  *(_OWORD *)(a4 + 72) = 0u;
  *(void *)(a4 + 88) = 0;
  *(_OWORD *)(a4 + 56) = 0u;
  outlined init with take of SageSearchClient(&v12, a4 + 16);
  swift_beginAccess();
  outlined assign with take of ECRClientProtocol?(a2, a4 + 56);
  swift_endAccess();
  outlined init with take of SageSearchClient(&v9, a4 + 96);
  return a4;
}

uint64_t specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a5;
  uint64_t v23 = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a5);
  uint64_t v19 = a6;
  uint64_t v20 = a8;
  Swift::String v16 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v16, a3, a6);
  *(_OWORD *)(a4 + 72) = 0u;
  *(void *)(a4 + 88) = 0;
  *(_OWORD *)(a4 + 56) = 0u;
  outlined init with take of SageSearchClient(&v21, a4 + 16);
  swift_beginAccess();
  outlined assign with take of ECRClientProtocol?(a2, a4 + 56);
  swift_endAccess();
  outlined init with take of SageSearchClient(&v18, a4 + 96);
  return a4;
}

uint64_t outlined assign with take of ECRClientProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ECRClientProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined release of MemoryCreationQUModelResponse(uint64_t a1)
{
  return a1;
}

uint64_t sub_2584154A4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2584154DC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_0_10();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  swift_release();
  return MEMORY[0x270FA0238](v0, ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v8);
}

void partial apply for closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_50_19();
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v6 = *(void *)(v1 + 24);
  uint64_t v8 = *(void **)(v1 + v7);
  uint64_t v10 = *(void *)(v1 + v9);
  closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(a1, v5, v6, v1 + v4, v8, v10);
}

uint64_t sub_258415630()
{
  OUTLINED_FUNCTION_209();
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_258415674()
{
  OUTLINED_FUNCTION_209();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_2584156B8()
{
  OUTLINED_FUNCTION_209();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for LLMQUParse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LLMQUParse);
}

uint64_t dispatch thunk of LLMQUParse.__allocating_init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:performanceMetrics:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.llmQUNetworkService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.prewarm(originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:personNames:petNames:locations:currentTime:originatorPID:)()
{
  OUTLINED_FUNCTION_85_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:);
  OUTLINED_FUNCTION_22_22();
  OUTLINED_FUNCTION_36_1();
  __asm { BRAA            X9, X16 }
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  Swift::String v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32)
                                                                                     + **(int **)(a6 + 32));
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_44_0(v12);
  *uint64_t v13 = v14;
  v13[1] = dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:);
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for MemoryCreationQUController()
{
  return self;
}

uint64_t method lookup function for MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MemoryCreationQUController);
}

uint64_t dispatch thunk of MemoryCreationQUController.llmQUNetworkService.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MemoryCreationQUController.llmQUNetworkService.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MemoryCreationQUController.llmQUNetworkService.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MemoryCreationQUController.ecrClient.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MemoryCreationQUController.ecrClient.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MemoryCreationQUController.ecrClient.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MemoryCreationQUController.queryParser.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MemoryCreationQUController.queryParser.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MemoryCreationQUController.queryParser.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MemoryCreationQUController.__allocating_init(llmQUNetworkService:ecrClient:queryParser:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MemoryCreationQUController.prewarm(originatorPID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:personNames:petNames:locations:currentTime:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  uint64_t v32 = v14;
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_209();
  uint64_t v31 = v15 + 192;
  uint64_t v30 = *(void *)(v15 + 192) + **(int **)(v15 + 192);
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_44_0(v16);
  *uint64_t v17 = v18;
  v17[1] = dispatch thunk of AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:);
  OUTLINED_FUNCTION_22_22();
  OUTLINED_FUNCTION_45_0();
  return v27(v19, v20, v21, v22, v23, v24, v25, v26, v30, v31, v32, a12, a13, a14);
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:quResponseJSONString:)()
{
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_70_10();
  OUTLINED_FUNCTION_209();
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 200) + **(int **)(v0 + 200));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_44_0(v1);
  *uint64_t v2 = v3;
  v2[1] = dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:);
  uint64_t v4 = OUTLINED_FUNCTION_23_18();
  return v6(v4);
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:quResponse:performanceMetrics:)()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_70_10();
  long long v11 = *(_OWORD *)(v2 + 80);
  long long v12 = *(_OWORD *)(v2 + 64);
  uint64_t v3 = *(void *)(v2 + 96);
  OUTLINED_FUNCTION_209();
  uint64_t v13 = (uint64_t (*)(uint64_t))(*(void *)(v4 + 208) + **(int **)(v4 + 208));
  uint64_t v5 = (void *)swift_task_alloc();
  long long v6 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  long long v7 = v0[2];
  long long v8 = v0[3];
  *(_OWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 48) = v7;
  *(_OWORD *)(v1 + 64) = v8;
  *(_OWORD *)(v1 + 80) = v12;
  *(_OWORD *)(v1 + 96) = v11;
  *(void *)(v1 + 112) = v3;
  *(void *)(v1 + 120) = v5;
  *uint64_t v5 = v1;
  v5[1] = dispatch thunk of MemoryCreationQUController.parse(_:quResponse:performanceMetrics:);
  uint64_t v9 = OUTLINED_FUNCTION_23_18();
  return v13(v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of static MemoryCreationQUController.isParseEmptyDueToHallucination(parse:quResponse:)(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, _OWORD *))(v2 + 216);
  uint64_t v6 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v8;
  v10[4] = v3;
  v10[5] = v4;
  uint64_t v11 = v6;
  return v5(a1, v10) & 1;
}

uint64_t dispatch thunk of MemoryCreationQUController.sortOrder(prediction:)()
{
  OUTLINED_FUNCTION_209();
  uint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 240);
  long long v3 = v2[1];
  v9[0] = *v2;
  v9[1] = v3;
  long long v4 = v2[3];
  v9[2] = v2[2];
  void v9[3] = v4;
  v9[4] = v5;
  uint64_t v9[5] = v6;
  uint64_t v10 = v7;
  return v1(v9);
}

uint64_t dispatch thunk of MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:)()
{
  OUTLINED_FUNCTION_135();
  uint64_t v2 = (_OWORD *)v1;
  long long v11 = *(_OWORD *)(v1 + 80);
  long long v12 = *(_OWORD *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 96);
  OUTLINED_FUNCTION_209();
  uint64_t v13 = (uint64_t (*)(uint64_t))(*(void *)(v4 + 248) + **(int **)(v4 + 248));
  long long v5 = (void *)swift_task_alloc();
  long long v6 = v2[1];
  *(_OWORD *)(v0 + 16) = *v2;
  long long v7 = v2[2];
  long long v8 = v2[3];
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v12;
  *(_OWORD *)(v0 + 96) = v11;
  *(void *)(v0 + 112) = v3;
  *(void *)(v0 + 120) = v5;
  *long long v5 = v0;
  v5[1] = dispatch thunk of MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:);
  uint64_t v9 = OUTLINED_FUNCTION_105_10();
  return v13(v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  long long v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of MemoryCreationQUController.attributesFromWhen(query:when:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t outlined consume of ECRClientPersonResult?(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2584162E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x270FA0238](v0, ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v4);
}

void partial apply for closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_12_0(v9);
  OUTLINED_FUNCTION_50_19();
  long long v12 = *(void **)(v4 + v11);
  uint64_t v14 = *(void **)(v4 + v13);
  closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(a1, a2, a3, a4, v4 + v10, v12, v14);
}

uint64_t sub_258416430()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t lazy protocol witness table accessor for type MemoryCreationQUError and conformance MemoryCreationQUError(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Regex<(Substring, Substring)> and conformance Regex<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>;
  if (!lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>);
  }
  return result;
}

uint64_t outlined init with take of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ECRClientProtocol?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_79_0();
  v5(v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_25()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_14_23()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

char *OUTLINED_FUNCTION_16_25@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_30_23()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_32_17()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

char *OUTLINED_FUNCTION_34_19@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_36_18()
{
  return MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
}

uint64_t OUTLINED_FUNCTION_38_16@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 104) = *(void *)(*(void *)(a1 + 48) + 16 * a2 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_39_16()
{
  return *(void *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_41_18()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_43_18@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

BOOL OUTLINED_FUNCTION_46_15@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_47_13@<X0>(unint64_t a1@<X8>)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_49_14()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_55_14()
{
  return *(void *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_57_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_59_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_61_9()
{
  uint64_t v2 = *(void *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 120));
  return v2 + 8;
}

uint64_t OUTLINED_FUNCTION_65_9(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 176) = result;
  *(void *)(v2 + 184) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_66_11()
{
  return MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
}

uint64_t OUTLINED_FUNCTION_67_12()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_68_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_11()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_73_8()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  return (unint64_t)String.nsRangeWithCompleteTokenMatch(of:)(*(Swift::String *)&v3);
}

uint64_t OUTLINED_FUNCTION_74_11(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a2;
  *(void *)(v2 + 120) = a1;
  return Range<>.init(_:in:)();
}

uint64_t OUTLINED_FUNCTION_75_8()
{
  return v0;
}

uint64_t MemoryCreationQUDateGroundingHeuristics.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Date();
  OUTLINED_FUNCTION_1();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_15();
  uint64_t v15 = v14 - v13;
  Date.init()();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v4 + 88))(a1, a2, a3, a4, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
  return v16;
}

void MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:currentDate:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_21_7();
  static Locale.current.getter();
  uint64_t v5 = Locale.identifier.getter();
  uint64_t v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  if (v5 == 0x53555F6E65 && v7 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_15;
    }
  }
  OUTLINED_FUNCTION_31_21();
  MemoryCreationQUDateGroundingHeuristics.groundSeasonsHeuristic(_:currentDate:)();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v11 <= 0)
  {
    swift_bridgeObjectRelease();
    MemoryCreationQUDateGroundingHeuristics.groundYearInReviewHeuristic(_:currentDate:)();
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v13 <= 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_21();
      MemoryCreationQUDateGroundingHeuristics.groundCOVIDHeuristic(_:currentDate:)();
    }
  }
LABEL_15:
  OUTLINED_FUNCTION_42_14();
  OUTLINED_FUNCTION_119_0();
}

void MemoryCreationQUDateGroundingHeuristics.groundSeasonsHeuristic(_:currentDate:)()
{
  OUTLINED_FUNCTION_104_0();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>.Match?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>.Match);
  OUTLINED_FUNCTION_1();
  uint64_t v63 = v10;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  uint64_t v64 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_21_7();
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v65 = v8;
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  uint64_t v67 = v9;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v68._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v1, &v68._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v15, v16, "Attempting to run groundSeasonsHeuristic on dateString: %s", v17, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  Swift::String v18 = String.lowercased()();
  uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Substring, season: Substring, Substring?, year: Substring));
  Regex.init(_regexString:version:)();
  swift_bridgeObjectRetain();
  int v20 = specialized Dictionary.subscript.getter(v18._countAndFlagsBits, (uint64_t)v18._object, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20 != 4)
  {
    swift_bridgeObjectRelease();
    MemoryCreationQUDateGroundingHeuristics.datesForSeason(_:year:currentDate:)();
    goto LABEL_58;
  }
  Swift::String v68 = v18;
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>();
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53_2(v65, 1, v67);
  if (v42)
  {
    outlined destroy of CustomStringConvertible?(v65, &demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>.Match?);
    uint64_t v21 = (void *)Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_51_1(v22))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_33_17(&dword_257DC6000, v23, v24, "Date string not related to season heuristics, unable to ground date");
      OUTLINED_FUNCTION_34();
    }

    goto LABEL_58;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v64, v65, v67);
  Regex.Match.output.getter();
  swift_bridgeObjectRelease();
  uint64_t v25 = v69;
  uint64_t v26 = v70;
  uint64_t v27 = v71;
  uint64_t v28 = v72;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = MEMORY[0x25A2C7B70](v25, v26, v27, v28);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  Regex.Match.output.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x25A2C7B70](v73, v74, v75, v76);
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = HIBYTE(v33) & 0xF;
  uint64_t v35 = v31 & 0xFFFFFFFFFFFFLL;
  if ((v33 & 0x2000000000000000) != 0) {
    uint64_t v36 = HIBYTE(v33) & 0xF;
  }
  else {
    uint64_t v36 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (!v36)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    BOOL v42 = v66 == 1819042150 && v30 == 0xE400000000000000;
    if (v42
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || (v66 == 0x6E6D75747561 ? (BOOL v43 = v30 == 0xE600000000000000) : (BOOL v43 = 0),
          v43
       || (OUTLINED_FUNCTION_6_28() & 1) != 0
       || (v66 == 0x676E69727073 ? (BOOL v48 = v30 == 0xE600000000000000) : (BOOL v48 = 0),
           v48
        || (OUTLINED_FUNCTION_6_28() & 1) != 0
        || (v66 == 0x72656D6D7573 ? (BOOL v54 = v30 == 0xE600000000000000) : (BOOL v54 = 0),
            v54
         || (OUTLINED_FUNCTION_6_28() & 1) != 0
         || (v66 == 0x7265746E6977 ? (BOOL v55 = v30 == 0xE600000000000000) : (BOOL v55 = 0), v55)))))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v56 = OUTLINED_FUNCTION_6_28();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0)
      {
        uint64_t v57 = (void *)Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.info.getter();
        if (OUTLINED_FUNCTION_51_1(v58))
        {
          *(_WORD *)OUTLINED_FUNCTION_55() = 0;
          OUTLINED_FUNCTION_33_17(&dword_257DC6000, v59, v60, "Date string not related to season heuristics, unable to ground date");
          OUTLINED_FUNCTION_34();
        }

        uint64_t v61 = OUTLINED_FUNCTION_21_23();
        v62(v61);
        goto LABEL_58;
      }
    }
    MemoryCreationQUDateGroundingHeuristics.datesForSeason(_:year:currentDate:)();
    uint64_t v44 = OUTLINED_FUNCTION_21_23();
    v45(v44);
LABEL_58:
    uint64_t v46 = OUTLINED_FUNCTION_29_21();
    v47(v46);
    OUTLINED_FUNCTION_42_14();
    OUTLINED_FUNCTION_119_0();
    return;
  }
  if ((v33 & 0x1000000000000000) != 0)
  {
    specialized _parseInteger<A, B>(ascii:radix:)(v31, v33, 10);
    goto LABEL_46;
  }
  if ((v33 & 0x2000000000000000) == 0)
  {
    if ((v31 & 0x1000000000000000) != 0) {
      BOOL v37 = (unsigned __int8 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      BOOL v37 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v37, v35, 10);
    goto LABEL_46;
  }
  v68._uint64_t countAndFlagsBits = v31;
  v68._object = (void *)(v33 & 0xFFFFFFFFFFFFFFLL);
  if (v31 == 43)
  {
    if (v34)
    {
      if (v34 != 1 && (BYTE1(v31) - 48) <= 9u && v34 != 2 && (BYTE2(v31) - 48) <= 9u)
      {
        OUTLINED_FUNCTION_35_21();
        if (v38 != 3)
        {
          do
          {
            OUTLINED_FUNCTION_85_2();
            if (!v42 & v39) {
              break;
            }
            OUTLINED_FUNCTION_59_5();
            if (!v42) {
              break;
            }
            if (__OFADD__(v41, v40)) {
              break;
            }
            OUTLINED_FUNCTION_20_23();
          }
          while (!v42);
        }
      }
      goto LABEL_46;
    }
  }
  else
  {
    if (v31 != 45)
    {
      if (v34)
      {
        if ((v31 - 48) <= 9u && v34 != 1 && (BYTE1(v31) - 48) <= 9u)
        {
          OUTLINED_FUNCTION_35_21();
          if (v49 != 2)
          {
            do
            {
              OUTLINED_FUNCTION_85_2();
              if (!v42 & v39) {
                break;
              }
              OUTLINED_FUNCTION_59_5();
              if (!v42) {
                break;
              }
              if (__OFADD__(v51, v50)) {
                break;
              }
              OUTLINED_FUNCTION_20_23();
            }
            while (!v42);
          }
        }
      }
      goto LABEL_46;
    }
    if (v34)
    {
      if (v34 != 1
        && (BYTE1(v31) - 48) <= 9u
        && v34 != 2
        && (BYTE2(v31) - 48) <= 9u
        && v34 != 3)
      {
        do
        {
          OUTLINED_FUNCTION_85_2();
          if (!v42 & v39) {
            break;
          }
          OUTLINED_FUNCTION_59_5();
          if (!v42) {
            break;
          }
          if (__OFSUB__(v53, v52)) {
            break;
          }
          OUTLINED_FUNCTION_20_23();
        }
        while (!v42);
      }
      goto LABEL_46;
    }
    __break(1u);
  }
  __break(1u);
}

void MemoryCreationQUDateGroundingHeuristics.datesForSeason(_:year:currentDate:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v109 = v1;
  LODWORD(v108) = v2;
  uint64_t v107 = v3;
  uint64_t v104 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_185_0();
  uint64_t v95 = v7;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v8);
  uint64_t v96 = (char *)&v95 - v9;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v10);
  uint64_t v103 = (char *)&v95 - v11;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v12);
  uint64_t v105 = (objc_class *)((char *)&v95 - v13);
  type metadata accessor for Calendar.Component();
  OUTLINED_FUNCTION_1();
  uint64_t v99 = v15;
  uint64_t v100 = v14;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_184_0();
  uint64_t v98 = v16;
  uint64_t v17 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_1();
  Class isa = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_97_1();
  uint64_t v20 = type metadata accessor for Date();
  OUTLINED_FUNCTION_1();
  uint64_t v110 = v21;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_185_0();
  uint64_t v97 = v23;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v95 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v28 = OUTLINED_FUNCTION_81(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_14_10();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v30 = OUTLINED_FUNCTION_81(v29);
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_15();
  type metadata accessor for DateComponents();
  OUTLINED_FUNCTION_1();
  uint64_t v101 = v32;
  uint64_t v102 = v31;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  BOOL v37 = (char *)&v95 - v36;
  uint64_t v38 = OUTLINED_FUNCTION_3_9();
  __swift_storeEnumTagSinglePayload(v38, v39, v40, v17);
  type metadata accessor for TimeZone();
  uint64_t v41 = OUTLINED_FUNCTION_34_20();
  __swift_storeEnumTagSinglePayload(v41, v42, v43, v44);
  OUTLINED_FUNCTION_3_34();
  LOBYTE(v96) = 1;
  uint64_t v95 = 0;
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_15_25();
  uint64_t v106 = v37;
  DateComponents.day.setter();
  uint64_t v45 = OUTLINED_FUNCTION_3_9();
  uint64_t v112 = v17;
  __swift_storeEnumTagSinglePayload(v45, v46, v47, v17);
  uint64_t v48 = OUTLINED_FUNCTION_34_20();
  uint64_t v49 = v20;
  __swift_storeEnumTagSinglePayload(v48, v50, v51, v52);
  OUTLINED_FUNCTION_3_34();
  LOBYTE(v96) = 1;
  os_log_type_t v53 = v35;
  uint64_t v95 = 0;
  uint64_t v54 = (uint64_t)v107;
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_15_25();
  DateComponents.day.setter();
  BOOL v55 = v110;
  (*((void (**)(char *, uint64_t, uint64_t))v110 + 2))(v26, v109, v49);
  if (v108)
  {
    static Calendar.current.getter();
    uint64_t v57 = v98;
    uint64_t v56 = v99;
    uint64_t v58 = v100;
    (*(void (**)(uint64_t, void, uint64_t))(v99 + 104))(v98, *MEMORY[0x263F078A0], v100);
    uint64_t v54 = Calendar.component(_:from:)();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v58);
    (*((void (**)(uint64_t, uint64_t))isa + 1))(v0, v112);
  }
  uint64_t v59 = (objc_class *)((char *)v55 + 8);
  uint64_t v107 = (void (*)(void))*((void *)v55 + 1);
  ((void (*)(char *, uint64_t))v107)(v26, v49);
  DateComponents.year.setter();
  DateComponents.year.setter();
  uint64_t v60 = v105;
  switch((char)v104)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_32_18();
      DateComponents.month.setter();
      goto LABEL_7;
    default:
      OUTLINED_FUNCTION_32_18();
      os_log_type_t v61 = v53;
      DateComponents.month.setter();
      if (!__OFADD__(v54, 1))
      {
        DateComponents.year.setter();
LABEL_7:
        static Calendar.current.getter();
        Calendar.date(from:)();
        uint64_t v62 = (void (*)(void))*((void *)isa + 1);
        OUTLINED_FUNCTION_28();
        v62();
        OUTLINED_FUNCTION_53_2((uint64_t)v60, 1, v49);
        if (v89)
        {
          outlined destroy of CustomStringConvertible?((uint64_t)v60, &demangling cache variable for type metadata for Date?);
          Class isa = 0;
        }
        else
        {
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          uint64_t v63 = OUTLINED_FUNCTION_36_19();
          v64(v63);
        }
        static Calendar.current.getter();
        uint64_t v65 = (uint64_t)v103;
        Calendar.date(from:)();
        OUTLINED_FUNCTION_11_19();
        v62();
        OUTLINED_FUNCTION_53_2(v65, 1, v49);
        if (v89)
        {
          outlined destroy of CustomStringConvertible?(v65, &demangling cache variable for type metadata for Date?);
          v67.super.Class isa = 0;
          Class v66 = isa;
        }
        else
        {
          v67.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
          uint64_t v68 = OUTLINED_FUNCTION_36_19();
          v69(v68);
          Class v66 = isa;
          if (isa && v67.super.isa)
          {
            uint64_t v110 = v59;
            uint64_t v70 = v67.super.isa;
            uint64_t v60 = v70;
            if ((v108 & 1) == 0)
            {
              Class v71 = v66;
              Class v72 = v60;
LABEL_31:
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
              uint64_t v85 = OUTLINED_FUNCTION_170_2();
              *(_OWORD *)(v85 + 16) = xmmword_2586703C0;
              *(void *)(v85 + 32) = v71;
              *(void *)(v85 + 40) = v72;
              uint64_t v113 = v85;
              specialized Array._endMutation()();

              goto LABEL_18;
            }
            uint64_t v74 = v70;
            uint64_t v104 = v66;
            Class v75 = Date._bridgeToObjectiveC()().super.isa;
            id v76 = [(objc_class *)v74 earlierDate:v75];
            uint64_t v108 = v49;
            id v77 = v76;
            uint64_t v105 = v74;

            static Date._unconditionallyBridgeFromObjectiveC(_:)();
            LOBYTE(v75) = static Date.== infix(_:_:)();
            uint64_t v78 = v107;
            OUTLINED_FUNCTION_28();
            v78();
            if ((v75 & 1) == 0)
            {
              Class v71 = v104;
              Class v72 = v105;
LABEL_30:
              Class v66 = isa;
              goto LABEL_31;
            }
            uint64_t v79 = DateComponents.year.getter();
            uint64_t v80 = (uint64_t)v96;
            if ((v81 & 1) == 0)
            {
              if (__OFSUB__(v79, 1))
              {
                __break(1u);
                goto LABEL_42;
              }
              DateComponents.year.setter();
            }
            uint64_t v82 = DateComponents.year.getter();
            if (v83) {
              goto LABEL_26;
            }
            if (!__OFSUB__(v82, 1))
            {
              DateComponents.year.setter();
LABEL_26:
              static Calendar.current.getter();
              os_log_type_t v61 = v0;
              Calendar.date(from:)();
              OUTLINED_FUNCTION_11_19();
              v62();
              uint64_t v84 = v108;
              OUTLINED_FUNCTION_53_2(v80, 1, v108);
              if (v89)
              {
                uint64_t v88 = v80;
              }
              else
              {
                Class v71 = Date._bridgeToObjectiveC()().super.isa;
                OUTLINED_FUNCTION_28();
                v78();
                static Calendar.current.getter();
                uint64_t v86 = v84;
                uint64_t v87 = v95;
                os_log_type_t v61 = v0;
                Calendar.date(from:)();
                OUTLINED_FUNCTION_11_19();
                v62();
                uint64_t v88 = v87;
                OUTLINED_FUNCTION_53_2(v87, 1, v86);
                if (!v89)
                {
                  Class v72 = Date._bridgeToObjectiveC()().super.isa;

                  OUTLINED_FUNCTION_28();
                  v94();
                  goto LABEL_30;
                }
              }
              uint64_t v59 = v104;
              uint64_t v60 = v105;
              outlined destroy of CustomStringConvertible?(v88, &demangling cache variable for type metadata for Date?);
              if (one-time initialization token for memoryCreationQU == -1) {
                goto LABEL_36;
              }
              goto LABEL_40;
            }
LABEL_42:
            __break(1u);
            JUMPOUT(0x258417F70);
          }
        }

        uint64_t v60 = v66;
        goto LABEL_18;
      }
      __break(1u);
LABEL_40:
      swift_once();
LABEL_36:
      uint64_t v90 = type metadata accessor for Logger();
      unint64_t v91 = OUTLINED_FUNCTION_43_1(v90, (uint64_t)static Logging.memoryCreationQU);
      os_log_type_t v92 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_24_13(v92))
      {
        uint64_t v93 = (uint8_t *)OUTLINED_FUNCTION_55();
        *(_WORD *)uint64_t v93 = 0;
        _os_log_impl(&dword_257DC6000, v91, v61, "Unable to create start and end dates", v93, 2u);
        OUTLINED_FUNCTION_34();
      }

LABEL_18:
      uint64_t v73 = *(void (**)(void))(v101 + 8);
      OUTLINED_FUNCTION_112_4();
      v73();
      OUTLINED_FUNCTION_112_4();
      v73();
      OUTLINED_FUNCTION_42_14();
      OUTLINED_FUNCTION_119_0();
      return;
  }
}

uint64_t MemoryCreationQUDateGroundingHeuristics.groundCOVIDHeuristic(_:currentDate:)()
{
  Swift::String v0 = String.lowercased()();
  BOOL v1 = v0._countAndFlagsBits == 0x6320676E69727564 && v0._object == (void *)0xEC0000006469766FLL;
  if (v1 || (os_log_type_t countAndFlagsBits = v0._countAndFlagsBits, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for memoryCreationQU != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    uint64_t v4 = (void *)OUTLINED_FUNCTION_43_1(v3, (uint64_t)static Logging.memoryCreationQU);
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_24_13(v5))
    {
      uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_130_0(v6);
      OUTLINED_FUNCTION_99_3(&dword_257DC6000, v7, v8, "COVID grounding heuristic: grounding date to 2020-2023");
      OUTLINED_FUNCTION_34();
    }

    MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter();
    if (!v9) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v10 = v9;
    MemoryCreationQUDateGroundingHeuristics.covidEndDate.getter();
    if (v11)
    {
      uint64_t v12 = v11;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v13 = OUTLINED_FUNCTION_170_2();
      *(_OWORD *)(v13 + 16) = xmmword_2586703C0;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v12;
LABEL_30:
      uint64_t v28 = v13;
      specialized Array._endMutation()();
      return v28;
    }
    goto LABEL_22;
  }
  if (v0._countAndFlagsBits == 0x6F632065636E6973 && v0._object == (void *)0xEB00000000646976)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t countAndFlagsBits = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((countAndFlagsBits & 1) == 0)
    {
      if (one-time initialization token for memoryCreationQU != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      uint64_t v10 = (void *)OUTLINED_FUNCTION_43_1(v15, (uint64_t)static Logging.memoryCreationQU);
      os_log_type_t v16 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_24_13(v16))
      {
        uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_130_0(v17);
        OUTLINED_FUNCTION_99_3(&dword_257DC6000, v18, v19, "Date string not related to COVID heuristics, unable to ground date");
        OUTLINED_FUNCTION_34();
      }
LABEL_22:

      return MEMORY[0x263F8EE78];
    }
  }
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = OUTLINED_FUNCTION_43_1(v20, (uint64_t)static Logging.memoryCreationQU);
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_51_1(v22))
  {
    uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_257DC6000, v21, countAndFlagsBits, "COVID grounding heuristic: grounding date to 2020-present", v23, 2u);
    OUTLINED_FUNCTION_34();
  }

  MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter();
  if (v24)
  {
    uint64_t v25 = v24;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v13 = OUTLINED_FUNCTION_170_2();
    *(_OWORD *)(v13 + 16) = xmmword_2586703C0;
    *(void *)(v13 + 32) = v25;
    *(void *)(v13 + 40) = isa;
    goto LABEL_30;
  }
  return MEMORY[0x263F8EE78];
}

void MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  void (*v16)(void);
  uint64_t v17;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_104_0();
  int v2 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  os_log_type_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_97_1();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_21_7();
  type metadata accessor for DateComponents();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_14_10();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  uint64_t v14 = type metadata accessor for TimeZone();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v14);
  OUTLINED_FUNCTION_18_15();
  DateComponents.day.setter();
  DateComponents.month.setter();
  DateComponents.year.setter();
  static Calendar.current.getter();
  Calendar.date(from:)();
  OUTLINED_FUNCTION_112_4();
  v15();
  OUTLINED_FUNCTION_11_19();
  v16();
  uint64_t v17 = type metadata accessor for Date();
  OUTLINED_FUNCTION_53_2(v8, 1, v17);
  if (v18)
  {
    outlined destroy of CustomStringConvertible?(v8, &demangling cache variable for type metadata for Date?);
  }
  else
  {
    Date._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v8, v17);
  }
  OUTLINED_FUNCTION_42_14();
  OUTLINED_FUNCTION_119_0();
}

void MemoryCreationQUDateGroundingHeuristics.covidEndDate.getter()
{
}

void MemoryCreationQUDateGroundingHeuristics.groundYearInReviewHeuristic(_:currentDate:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v86 = v0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v2 = OUTLINED_FUNCTION_81(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_185_0();
  uint64_t v78 = v3;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v4);
  id v77 = (char *)&v74 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v84 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_184_0();
  uint64_t v83 = v11;
  uint64_t v12 = type metadata accessor for DateComponents();
  OUTLINED_FUNCTION_1();
  uint64_t v80 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_185_0();
  uint64_t v85 = v15;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (char *)&v74 - v17;
  type metadata accessor for Calendar.Component();
  OUTLINED_FUNCTION_1();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_15();
  uint64_t v21 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_1();
  uint64_t v23 = v22;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v74 - v26;
  Swift::String v28 = String.lowercased()();
  BOOL v29 = v28._countAndFlagsBits == 0x206E692072616579 && v28._object == (void *)0xEE00776569766572;
  if (v29)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      if (one-time initialization token for memoryCreationQU != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      uint64_t v32 = (void *)OUTLINED_FUNCTION_43_1(v31, (uint64_t)static Logging.memoryCreationQU);
      os_log_type_t v33 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_24_13(v33))
      {
        uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_130_0(v34);
        OUTLINED_FUNCTION_99_3(&dword_257DC6000, v35, v36, "Date string not related to year in review heuristic, unable to ground date");
        OUTLINED_FUNCTION_34();
      }

      goto LABEL_25;
    }
  }
  uint64_t v76 = v12;
  uint64_t v81 = v21;
  Class isa = v23;
  static Calendar.current.getter();
  BOOL v37 = *(void (**)(uint64_t))(v19 + 104);
  uint64_t v38 = OUTLINED_FUNCTION_30_24();
  v37(v38);
  uint64_t v39 = v27;
  uint64_t v40 = Calendar.component(_:from:)();
  uint64_t v43 = *(void (**)(void))(v19 + 8);
  uint64_t v41 = (char *)(v19 + 8);
  uint64_t v42 = v43;
  OUTLINED_FUNCTION_11_19();
  v43();
  if (v40 != 1)
  {
    uint64_t v41 = v39;
    if (one-time initialization token for memoryCreationQU == -1)
    {
LABEL_18:
      uint64_t v55 = type metadata accessor for Logger();
      uint64_t v56 = (void *)OUTLINED_FUNCTION_43_1(v55, (uint64_t)static Logging.memoryCreationQU);
      os_log_type_t v57 = static os_log_type_t.info.getter();
      BOOL v58 = OUTLINED_FUNCTION_24_13(v57);
      uint64_t v59 = v81;
      Class v60 = isa;
      if (v58)
      {
        os_log_type_t v61 = (_WORD *)OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_130_0(v61);
        OUTLINED_FUNCTION_99_3(&dword_257DC6000, v62, v63, "Current month is not January, not applying year in review heuristic");
        OUTLINED_FUNCTION_34();
      }

      (*((void (**)(char *, uint64_t))v60 + 1))(v41, v59);
      goto LABEL_25;
    }
LABEL_30:
    swift_once();
    goto LABEL_18;
  }
  uint64_t v44 = OUTLINED_FUNCTION_30_24();
  v37(v44);
  uint64_t v45 = Calendar.component(_:from:)();
  OUTLINED_FUNCTION_11_19();
  v42();
  if (__OFSUB__(v45, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v86 = v45;
  uint64_t v46 = v81;
  __swift_storeEnumTagSinglePayload(v83, 1, 1, v81);
  uint64_t v47 = type metadata accessor for TimeZone();
  uint64_t v48 = OUTLINED_FUNCTION_3_9();
  __swift_storeEnumTagSinglePayload(v48, v49, v50, v47);
  OUTLINED_FUNCTION_28_8();
  uint64_t v51 = v79;
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_15_25();
  DateComponents.day.setter();
  DateComponents.month.setter();
  DateComponents.year.setter();
  static Calendar.current.getter();
  uint64_t v52 = (uint64_t)v77;
  Calendar.date(from:)();
  os_log_type_t v53 = (void (*)(void))*((void *)isa + 1);
  OUTLINED_FUNCTION_11_19();
  v53();
  uint64_t v54 = type metadata accessor for Date();
  OUTLINED_FUNCTION_53_2(v52, 1, v54);
  Class v75 = v39;
  if (v29)
  {
    outlined destroy of CustomStringConvertible?(v52, &demangling cache variable for type metadata for Date?);
    Class isa = 0;
  }
  else
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v54);
  }
  __swift_storeEnumTagSinglePayload(v83, 1, 1, v46);
  __swift_storeEnumTagSinglePayload(v84, 1, 1, v47);
  OUTLINED_FUNCTION_28_8();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_15_25();
  DateComponents.day.setter();
  DateComponents.month.setter();
  DateComponents.year.setter();
  static Calendar.current.getter();
  uint64_t v65 = v78;
  Calendar.date(from:)();
  OUTLINED_FUNCTION_11_19();
  v53();
  OUTLINED_FUNCTION_53_2(v65, 1, v54);
  if (v29)
  {
    outlined destroy of CustomStringConvertible?(v65, &demangling cache variable for type metadata for Date?);
    v69.super.Class isa = 0;
    Class v66 = isa;
  }
  else
  {
    v69.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v54);
    Class v66 = isa;
    if (isa && v69.super.isa)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v72 = OUTLINED_FUNCTION_170_2();
      *(_OWORD *)(v72 + 16) = xmmword_2586703C0;
      *(void *)(v72 + 32) = v66;
      *(NSDate *)(v72 + 40) = v69;
      uint64_t v87 = v72;
      specialized Array._endMutation()();
      uint64_t v73 = *(void (**)(void))(v80 + 8);
      OUTLINED_FUNCTION_112_4();
      v73();
      OUTLINED_FUNCTION_112_4();
      v73();
      OUTLINED_FUNCTION_11_19();
      v53();
      goto LABEL_25;
    }
  }

  NSDate v67 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
  uint64_t v68 = v76;
  v67(v85, v76);
  v67((uint64_t)v51, v68);
  ((void (*)(char *, uint64_t))v53)(v75, v46);
LABEL_25:
  OUTLINED_FUNCTION_119_0();
}

uint64_t MemoryCreationQUDateGroundingHeuristics.deinit()
{
  return v0;
}

uint64_t MemoryCreationQUDateGroundingHeuristics.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t MemoryCreationQUDateGroundingHeuristics.init()()
{
  return v0;
}

uint64_t type metadata accessor for MemoryCreationQUDateGroundingHeuristics()
{
  return self;
}

uint64_t method lookup function for MemoryCreationQUDateGroundingHeuristics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MemoryCreationQUDateGroundingHeuristics);
}

uint64_t dispatch thunk of MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:currentDate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of MemoryCreationQUDateGroundingHeuristics.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unint64_t lazy protocol witness table accessor for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>;
  if (!lazy protocol witness table cache variable for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MemoryCreationQUDateGroundingHeuristics.Season(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258418F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for MemoryCreationQUDateGroundingHeuristics.Season()
{
  return &unk_2706ADDB8;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season()
{
  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_28()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_15_25()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_21_23()
{
  return *(void *)(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_29_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_18()
{
  return DateComponents.month.setter();
}

void OUTLINED_FUNCTION_33_17(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_34_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_14()
{
  return v0;
}

void specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, PromptComponentValueConvertible>);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v39 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v38 = (unint64_t)(63 - v3) >> 6;
  os_log_type_t v6 = (long long *)v42;
  uint64_t v7 = (long long *)&v44;
  swift_bridgeObjectRetain();
  int64_t v40 = 0;
  uint64_t v8 = MEMORY[0x263F8D310];
  uint64_t v9 = MEMORY[0x263F62188];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v41 = (v5 - 1) & v5;
        unint64_t v10 = __clz(__rbit64(v5)) | (v40 << 6);
      }
      else
      {
        int64_t v11 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_38;
        }
        if (v11 >= v38)
        {
LABEL_35:
          outlined consume of [String : String].Iterator._Variant();
          return;
        }
        unint64_t v12 = *(void *)(v39 + 8 * v11);
        int64_t v13 = v40 + 1;
        if (!v12)
        {
          OUTLINED_FUNCTION_0_15();
          if (v14 == v15) {
            goto LABEL_35;
          }
          OUTLINED_FUNCTION_1_22();
          if (!v12)
          {
            OUTLINED_FUNCTION_0_15();
            if (v14 == v15) {
              goto LABEL_35;
            }
            OUTLINED_FUNCTION_1_22();
            if (!v12)
            {
              OUTLINED_FUNCTION_0_15();
              if (v14 == v15) {
                goto LABEL_35;
              }
              OUTLINED_FUNCTION_1_22();
              if (!v12)
              {
                int64_t v17 = v16 + 4;
                if (v17 >= v38) {
                  goto LABEL_35;
                }
                unint64_t v12 = *(void *)(v39 + 8 * v17);
                if (!v12)
                {
                  while (!__OFADD__(v17, 1))
                  {
                    OUTLINED_FUNCTION_0_15();
                    if (v14 == v15) {
                      goto LABEL_35;
                    }
                    OUTLINED_FUNCTION_1_22();
                    int64_t v17 = v18 + 1;
                    if (v12) {
                      goto LABEL_29;
                    }
                  }
                  goto LABEL_39;
                }
                int64_t v13 = v17;
              }
            }
          }
        }
LABEL_29:
        int64_t v40 = v13;
        uint64_t v41 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v10);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      os_log_type_t v22 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v10);
      uint64_t v23 = *v22;
      uint64_t v24 = v22[1];
      v42[3] = v8;
      v42[4] = v9;
      v42[0] = v23;
      v42[1] = v24;
      outlined init with take of SageSearchClient(v6, (uint64_t)v7);
      outlined init with take of SageSearchClient(v7, (uint64_t)v45);
      outlined init with take of SageSearchClient(v45, (uint64_t)&v43);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v25 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v20);
      unint64_t v26 = v25;
      if ((v27 & 1) == 0) {
        break;
      }
      Swift::String v28 = v7;
      uint64_t v29 = v1;
      uint64_t v30 = v9;
      uint64_t v31 = v8;
      uint64_t v32 = v6;
      os_log_type_t v33 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *os_log_type_t v33 = v21;
      v33[1] = v20;
      os_log_type_t v6 = v32;
      uint64_t v8 = v31;
      uint64_t v9 = v30;
      uint64_t v1 = v29;
      uint64_t v7 = v28;
      uint64_t v34 = v2[7] + 40 * v26;
      __swift_destroy_boxed_opaque_existential_1Tm(v34);
      outlined init with take of SageSearchClient(&v43, v34);
      unint64_t v5 = v41;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    uint64_t v35 = (uint64_t *)(v2[6] + 16 * v25);
    *uint64_t v35 = v21;
    v35[1] = v20;
    outlined init with take of SageSearchClient(&v43, v2[7] + 40 * v25);
    uint64_t v36 = v2[2];
    BOOL v15 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v15) {
      goto LABEL_37;
    }
    v2[2] = v37;
    unint64_t v5 = v41;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    BOOL v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v40);
    *(void *)&long long v39 = v17;
    *((void *)&v39 + 1) = v16;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v17;
    *((void *)&v37[0] + 1) = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    outlined init with take of Any(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    outlined init with take of Any(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    outlined init with take of Any(v36, v37);
    outlined init with take of Any(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v6 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v6 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = *(void *)(v2 + 48) + 40 * v21;
    *(_OWORD *)uint64_t v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    *(void *)(v26 + 32) = v31;
    uint64_t result = (uint64_t)outlined init with take of Any(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v21));
    ++*(void *)(v2 + 16);
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_38;
    }
    if (v11 >= v27) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_36;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_36:
    swift_release();
    outlined consume of [String : String].Iterator._Variant();
    return v2;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t MemoryCreationQueryParser.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(self, sel_spotlightManager);
  return v0;
}

id MemoryCreationQueryParser.parser.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t MemoryCreationQueryParser.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(self, sel_spotlightManager);
  return v0;
}

Swift::Void __swiftcall MemoryCreationQueryParser.prewarm()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_preheat);
}

void MemoryCreationQueryParser.enumerateParseResults(for:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258661C80;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x8000000258682A10;
  *(void *)(inited + 48) = 0xD000000000000010;
  *(void *)(inited + 56) = 0x8000000258682A30;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x8000000258682A50;
  *(void *)(inited + 96) = 0xD000000000000010;
  *(void *)(inited + 104) = 0x8000000258682A30;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = 0xD000000000000011;
  *(void *)(inited + 136) = 0x8000000258682A70;
  uint64_t v11 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 144) = 1;
  *(void *)(inited + 168) = v11;
  *(void *)(inited + 176) = 0xD00000000000001ALL;
  *(void *)(inited + 184) = 0x8000000258682A90;
  *(unsigned char *)(inited + 192) = 1;
  *(void *)(inited + 216) = v11;
  *(void *)(inited + 224) = 0x4C726F4674696177;
  *(void *)(inited + 232) = 0xEB0000000064616FLL;
  *(void *)(inited + 264) = v11;
  *(unsigned char *)(inited + 240) = 0;
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  int64_t v13 = *(void **)(v4 + 16);
  if (a2) {
    a2 = (void *)MEMORY[0x25A2C7AB0](a1, a2);
  }
  uint64_t v14 = specialized _dictionaryUpCast<A, B, C, D>(_:)(v12);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  v17[4] = partial apply for closure #1 in MemoryCreationQueryParser.enumerateParseResults(for:completion:);
  v17[5] = v15;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  v17[2] = thunk for @escaping @callee_guaranteed (@guaranteed [AnyHashable : Any], @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  v17[3] = &block_descriptor_9;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  outlined bridged method (mnbnnn) of @objc QPQueryParserManager.enumerateSpotlightResults(for:options:with:)((uint64_t)a2, v14, (uint64_t)v16, v13);
  _Block_release(v16);
}

void closure #1 in MemoryCreationQueryParser.enumerateParseResults(for:completion:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v15 = a3;
    int64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v17[0] = v9;
    *(_DWORD *)int64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v10 = Dictionary.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = v10;
    a3 = v15;
    *(void *)&long long v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v6, v7, "QP parse dict: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v9, -1, -1);
    MEMORY[0x25A2C94B0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  long long v18 = static MemoryCreationQueryParser.qpAttributedParseKey;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter((uint64_t)v17, a1, &v18);
  outlined destroy of AnyHashable((uint64_t)v17);
  if (v19)
  {
    type metadata accessor for NSAttributedString();
    if (swift_dynamicCast()) {
      uint64_t v14 = v16;
    }
    else {
      uint64_t v14 = 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v18);
    uint64_t v14 = 0;
  }
  a3(v14);
}

uint64_t sub_258419D6C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void partial apply for closure #1 in MemoryCreationQueryParser.enumerateParseResults(for:completion:)(uint64_t a1, uint64_t a2)
{
  closure #1 in MemoryCreationQueryParser.enumerateParseResults(for:completion:)(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t MemoryCreationQueryParser.deinit()
{
  return v0;
}

uint64_t MemoryCreationQueryParser.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t protocol witness for MemoryCreationQueryParserProtocol.enumerateParseResults(for:completion:) in conformance MemoryCreationQueryParser()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t protocol witness for MemoryCreationQueryParserProtocol.prewarm() in conformance MemoryCreationQueryParser()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

void outlined bridged method (mnbnnn) of @objc QPQueryParserManager.enumerateSpotlightResults(for:options:with:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_enumerateSpotlightResultsForString_options_withBlock_, a1, isa, a3);
}

uint64_t dispatch thunk of MemoryCreationQueryParserProtocol.enumerateParseResults(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of MemoryCreationQueryParserProtocol.prewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for MemoryCreationQueryParser()
{
  return self;
}

uint64_t method lookup function for MemoryCreationQueryParser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MemoryCreationQueryParser);
}

uint64_t dispatch thunk of MemoryCreationQueryParser.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MemoryCreationQueryParser.prewarm()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of MemoryCreationQueryParser.enumerateParseResults(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t outlined destroy of Any?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t type metadata accessor for NSAttributedString()
{
  unint64_t result = lazy cache variable for type metadata for NSAttributedString;
  if (!lazy cache variable for type metadata for NSAttributedString)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  }
  return result;
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MemoryCreationQUModelResponse.init(jsonString:)(OmniSearch::MemoryCreationQUModelResponse *__return_ptr retstr, Swift::String jsonString)
{
  object = jsonString._object;
  uint64_t countAndFlagsBits = jsonString._countAndFlagsBits;
  uint64_t v5 = type metadata accessor for String.Encoding();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = v10 - v9;
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v29 = v5;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    long long v30 = retstr;
    uint64_t v16 = swift_slowAlloc();
    *(void *)&v32[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, (uint64_t *)v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v13, v14, "Attempting to decode json string for Memory Creation QU: %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    retstr = v30;
    MEMORY[0x25A2C94B0](v17, -1, -1);
    long long v18 = v15;
    uint64_t v5 = v29;
    MEMORY[0x25A2C94B0](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  static String.Encoding.utf8.getter();
  uint64_t v19 = String.data(using:allowLossyConversion:)();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  if (v21 >> 60 == 15)
  {
    lazy protocol witness table accessor for type NetworkServiceError and conformance NetworkServiceError();
    swift_allocError();
    *char v22 = 1;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    lazy protocol witness table accessor for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    outlined consume of Data?(v19, v21);
    swift_release();
    if (!v31)
    {
      long long v23 = v32[4];
      long long v24 = v32[5];
      uint64_t v25 = v33;
      long long v26 = v32[1];
      long long v27 = v32[2];
      long long v28 = v32[3];
      *(_OWORD *)&retstr->who._rawValue = v32[0];
      *(_OWORD *)&retstr->when._rawValue = v26;
      *(_OWORD *)&retstr->music.artist._rawValue = v27;
      *(_OWORD *)&retstr->music.song._rawValue = v28;
      *(_OWORD *)&retstr->sort_order._rawValue = v23;
      *(_OWORD *)&retstr->trip._object = v24;
      retstr->all_time._object = v25;
    }
  }
}

uint64_t MemoryCreationQUModelResponse.who.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponse.who.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.who.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.what.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponse.what.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.what.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.when.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponse.when.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.when.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.where.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponse.where.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.where.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.music.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MemoryCreationQUModelResponse.music.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v3[4] = a1;
  v3[5] = a2;
  v3[6] = a3;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.music.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.mood.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponse.mood.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.mood.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.sort_order.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponse.sort_order.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.sort_order.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.trip.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MemoryCreationQUModelResponse.trip.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.trip.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponse.all_time.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MemoryCreationQUModelResponse.all_time.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.all_time.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

OmniSearch::MemoryCreationQUModelResponseMusic __swiftcall MemoryCreationQUModelResponseMusic.init(artist:genre:song:)(Swift::OpaquePointer artist, Swift::OpaquePointer genre, Swift::OpaquePointer song)
{
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logging.memoryCreationQU);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_257DC6000, v7, v8, "MemoryCreationQUModelResponseMusic.init() should only be used for testing", v9, 2u);
    MEMORY[0x25A2C94B0](v9, -1, -1);
  }

  rawValue = artist._rawValue;
  uint64_t v11 = genre._rawValue;
  uint64_t v12 = song._rawValue;
  result.song._rawValue = v12;
  result.genre._rawValue = v11;
  result.artist._rawValue = rawValue;
  return result;
}

void __swiftcall MemoryCreationQUModelResponse.init(who:what:when:where:music:mood:sort_order:trip:all_time:)(OmniSearch::MemoryCreationQUModelResponse *__return_ptr retstr, Swift::OpaquePointer who, Swift::OpaquePointer what, Swift::OpaquePointer when, Swift::OpaquePointer where, OmniSearch::MemoryCreationQUModelResponseMusic music, Swift::OpaquePointer mood, Swift::OpaquePointer sort_order, Swift::String trip, Swift::String all_time)
{
  rawValue = music.song._rawValue;
  uint64_t v12 = music.genre._rawValue;
  uint64_t v13 = music.artist._rawValue;
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logging.memoryCreationQU);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v29 = what._rawValue;
    unint64_t v21 = when._rawValue;
    char v22 = where._rawValue;
    long long v23 = v13;
    long long v24 = v12;
    uint64_t v25 = rawValue;
    long long v26 = mood._rawValue;
    long long v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v27 = 0;
    _os_log_impl(&dword_257DC6000, v19, v20, "MemoryCreationQUModelResponse.init() should only be used for testing", v27, 2u);
    long long v28 = v27;
    mood._rawValue = v26;
    rawValue = v25;
    uint64_t v12 = v24;
    uint64_t v13 = v23;
    where._rawValue = v22;
    when._rawValue = v21;
    what._rawValue = v29;
    MEMORY[0x25A2C94B0](v28, -1, -1);
  }

  retstr->who = who;
  retstr->what = what;
  retstr->when = when;
  retstr->where = where;
  retstr->music.artist._rawValue = v13;
  retstr->music.genre._rawValue = v12;
  retstr->music.song._rawValue = rawValue;
  retstr->mood = mood;
  retstr->sort_order = sort_order;
  retstr->trip = trip;
  retstr->all_time = all_time;
}

uint64_t MemoryCreationQUModelResponse.init(from:)@<X0>(int a1@<W0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  int v5 = lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  OUTLINED_FUNCTION_6_29();
  if (v2)
  {
    type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_0_16();
    uint64_t v6 = OUTLINED_FUNCTION_3_35();
    return v7(v6);
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_29();
  swift_bridgeObjectRetain();
  GeneratedValues.extract<A>(field:)();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_29();
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic();
  swift_bridgeObjectRetain();
  GeneratedValues.extract<A>(field:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_29();
  if (!v15)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_29();
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_0_16();
    uint64_t v11 = OUTLINED_FUNCTION_3_35();
    v12(v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    *a2 = v14;
    a2[1] = v14;
    a2[2] = v14;
    a2[3] = v14;
    a2[4] = v14;
    a2[5] = 0;
    a2[6] = v16;
    a2[7] = v14;
    a2[8] = v14;
    a2[9] = v14;
    a2[10] = 0;
    a2[11] = v14;
    a2[12] = 0;
    return result;
  }
  type metadata accessor for GeneratedValues();
  OUTLINED_FUNCTION_0_16();
  uint64_t v9 = OUTLINED_FUNCTION_3_35();
  v10(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    swift_bridgeObjectRelease();
  }
  if (v14)
  {
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_10;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v5) {
    goto LABEL_16;
  }
LABEL_10:
  uint64_t result = v13;
  if (a2) {
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MemoryCreationQUModelResponse.schema.unsafeMutableAddressor()
{
  return MemoryCreationQUModelResponse.schema.unsafeMutableAddressor(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponse.schema);
}

uint64_t static MemoryCreationQUModelResponse.schema.getter@<X0>(uint64_t a1@<X8>)
{
  return static MemoryCreationQUModelResponse.schema.getter(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponse.schema, a1);
}

uint64_t MemoryCreationQUModelResponse.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7301239 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1952540791 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1852139639 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6572656877 && a2 == 0xE500000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x636973756DLL && a2 == 0xE500000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 1685024621 && a2 == 0xE400000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x64726F5F74726F73 && a2 == 0xEA00000000007265;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 1885958772 && a2 == 0xE400000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x656D69745F6C6C61 && a2 == 0xE800000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v14) {
                    return 8;
                  }
                  else {
                    return 9;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t MemoryCreationQUModelResponse.CodingKeys.init(intValue:)()
{
  return 9;
}

uint64_t MemoryCreationQUModelResponse.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 7301239;
  switch(a1)
  {
    case 1:
      uint64_t result = 1952540791;
      break;
    case 2:
      uint64_t result = 1852139639;
      break;
    case 3:
      uint64_t result = 0x6572656877;
      break;
    case 4:
      uint64_t result = 0x636973756DLL;
      break;
    case 5:
      uint64_t result = 1685024621;
      break;
    case 6:
      uint64_t result = 0x64726F5F74726F73;
      break;
    case 7:
      uint64_t result = 1885958772;
      break;
    case 8:
      uint64_t result = 0x656D69745F6C6C61;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MemoryCreationQUModelResponse.CodingKeys()
{
  return AnswerSynthesisModelResult.AnswerResponse.CodingKeys.hashValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MemoryCreationQUModelResponse.CodingKeys()
{
  return MemoryCreationQUModelResponse.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MemoryCreationQUModelResponse.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = MemoryCreationQUModelResponse.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance MemoryCreationQUModelResponse.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MemoryCreationQUModelResponse.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MemoryCreationQUModelResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MemoryCreationQUModelResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MemoryCreationQUModelResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MemoryCreationQUModelResponse.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v17;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
    lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
    OUTLINED_FUNCTION_1_23();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_23();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_23();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_23();
    lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_23();
    if (v19)
    {
      uint64_t v7 = OUTLINED_FUNCTION_2_18();
      v8(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_1_23();
      swift_bridgeObjectRetain();
      uint64_t v16 = OUTLINED_FUNCTION_14_24();
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      uint64_t v15 = OUTLINED_FUNCTION_14_24();
      uint64_t v12 = v11;
      uint64_t v13 = OUTLINED_FUNCTION_2_18();
      v14(v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v18;
      a2[1] = v18;
      a2[2] = v18;
      a2[3] = v18;
      a2[4] = v18;
      a2[5] = 0;
      a2[6] = v20;
      a2[7] = v18;
      a2[8] = v18;
      a2[9] = v16;
      a2[10] = v10;
      a2[11] = v15;
      a2[12] = v12;
    }
  }
  return result;
}

void *protocol witness for Decodable.init(from:) in conformance MemoryCreationQUModelResponse@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)MemoryCreationQUModelResponse.init(from:)(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x68uLL);
  }
  return result;
}

uint64_t MemoryCreationQUModelResponseMusic.artist.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponseMusic.artist.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponseMusic.genre.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponseMusic.genre.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponseMusic.genre.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponseMusic.song.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MemoryCreationQUModelResponseMusic.song.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MemoryCreationQUModelResponseMusic.song.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t MemoryCreationQUModelResponseMusic.init(from:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  OUTLINED_FUNCTION_11_27();
  if (v0)
  {
    type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_0_16();
    uint64_t v2 = OUTLINED_FUNCTION_3_35();
    v3(v2);
  }
  else
  {
    uint64_t v1 = v7;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_27();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_27();
    type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_0_16();
    uint64_t v5 = OUTLINED_FUNCTION_3_35();
    v6(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t MemoryCreationQUModelResponseMusic.schema.unsafeMutableAddressor()
{
  return MemoryCreationQUModelResponse.schema.unsafeMutableAddressor(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponseMusic.schema);
}

uint64_t MemoryCreationQUModelResponse.schema.unsafeMutableAddressor(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Schema();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static MemoryCreationQUModelResponseMusic.schema.getter@<X0>(uint64_t a1@<X8>)
{
  return static MemoryCreationQUModelResponse.schema.getter(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponseMusic.schema, a1);
}

uint64_t static MemoryCreationQUModelResponse.schema.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Schema();
  __swift_project_value_buffer(v5, a2);
  OUTLINED_FUNCTION_13_29();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 16);
  return v7(a3);
}

uint64_t MemoryCreationQUModelResponseMusic.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x747369747261 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65726E6567 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1735290739 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t MemoryCreationQUModelResponseMusic.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x747369747261;
  }
  if (a1 == 1) {
    return 0x65726E6567;
  }
  return 1735290739;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MemoryCreationQUModelResponseMusic.CodingKeys()
{
  return MemoryCreationQUModelResponseMusic.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MemoryCreationQUModelResponseMusic.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = MemoryCreationQUModelResponseMusic.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MemoryCreationQUModelResponseMusic.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MemoryCreationQUModelResponseMusic.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *MemoryCreationQUModelResponseMusic.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MemoryCreationQUModelResponseMusic.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
    lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
    OUTLINED_FUNCTION_7_28();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_7_28();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v5 = OUTLINED_FUNCTION_12_28();
    v6(v5);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v7;
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *protocol witness for Decodable.init(from:) in conformance MemoryCreationQUModelResponseMusic@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = MemoryCreationQUModelResponseMusic.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponse.schema, a1);
}

void *protocol witness for Generable.init(from:) in conformance MemoryCreationQUModelResponse@<X0>(int a1@<W0>, void *a2@<X8>)
{
  uint64_t result = (void *)MemoryCreationQUModelResponse.init(from:)(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x68uLL);
  }
  return result;
}

uint64_t protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponseMusic@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponseMusic.schema, a1);
}

uint64_t protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Schema();
  __swift_project_value_buffer(v5, a2);
  OUTLINED_FUNCTION_13_29();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 16);
  return v7(a3);
}

uint64_t protocol witness for Generable.init(from:) in conformance MemoryCreationQUModelResponseMusic@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MemoryCreationQUModelResponseMusic.init(from:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse()
{
  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic()
{
  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

uint64_t destroy for MemoryCreationQUModelResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MemoryCreationQUModelResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MemoryCreationQUModelResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MemoryCreationQUModelResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MemoryCreationQUModelResponse()
{
  return &type metadata for MemoryCreationQUModelResponse;
}

uint64_t destroy for MemoryCreationQUModelResponseMusic()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for MemoryCreationQUModelResponseMusic(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MemoryCreationQUModelResponseMusic(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MemoryCreationQUModelResponseMusic(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MemoryCreationQUModelResponseMusic()
{
  return &type metadata for MemoryCreationQUModelResponseMusic;
}

unsigned char *storeEnumTagSinglePayload for MemoryCreationQUModelResponseMusic.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25841D4ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for MemoryCreationQUModelResponseMusic.CodingKeys()
{
  return &unk_2706ADFD8;
}

uint64_t getEnumTagSinglePayload for MemoryCreationQUModelResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for MemoryCreationQUModelResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25841D678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

void *type metadata accessor for MemoryCreationQUModelResponse.CodingKeys()
{
  return &unk_2706AE068;
}

uint64_t OUTLINED_FUNCTION_1_23()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_29()
{
  return GeneratedValues.extract<A>(field:)();
}

uint64_t OUTLINED_FUNCTION_7_28()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_11_27()
{
  return GeneratedValues.extract<A>(field:)();
}

uint64_t OUTLINED_FUNCTION_12_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_24()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t MemoryCreationQUNetworkService.__allocating_init()()
{
  int v2 = self;
  id v3 = objc_msgSend(v2, sel_standardUserDefaults);
  unsigned int v4 = (void *)MEMORY[0x25A2C7AB0](0x6361426D6C6C4E50, 0xEC000000646E656BLL);
  id v5 = objc_msgSend(v3, sel_stringForKey_, v4);

  if (v5)
  {
    OUTLINED_FUNCTION_77_11();
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    if (v6 == v1 && v8 == v0)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      char v11 = 0;
      goto LABEL_15;
    }
    char v10 = OUTLINED_FUNCTION_58_11();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if (v10) {
      goto LABEL_15;
    }
  }
  id v12 = objc_msgSend(v2, sel_standardUserDefaults);
  uint64_t v13 = (void *)MEMORY[0x25A2C7AB0](0x6B636142434D4E50, 0xEB00000000646E65);
  id v14 = objc_msgSend(v12, sel_stringForKey_, v13);

  if (v14)
  {
    OUTLINED_FUNCTION_77_11();
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    if (v15 != v1 || v17 != v0)
    {
      char v19 = OUTLINED_FUNCTION_58_11();
      swift_bridgeObjectRelease();
      char v11 = v19 ^ 1;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  char v11 = 1;
LABEL_15:
  id v20 = objc_msgSend(v2, sel_standardUserDefaults);
  OUTLINED_FUNCTION_177_0();
  unint64_t v21 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000011);
  id v22 = objc_msgSend(v20, sel_stringForKey_, v21);

  if (!v22)
  {
LABEL_22:
    char v27 = 1;
    goto LABEL_23;
  }
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  if (v23 == 49 && v25 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
LABEL_23:
  type metadata accessor for FeatureFlagService();
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = swift_allocObject();
  MemoryCreationQUNetworkService.init(useThimble:useTemplate:featureFlagService:)(v11 & 1, v27 & 1, v28);
  return v29;
}

uint64_t MemoryCreationQUNetworkService.useThimble.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MemoryCreationQUNetworkService.useTemplate.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MemoryCreationQUNetworkService.modelID.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t MemoryCreationQUNetworkService.modelID.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MemoryCreationQUNetworkService.modelID.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t MemoryCreationQUNetworkService.promptTemplateID.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t MemoryCreationQUNetworkService.promptTemplateID.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MemoryCreationQUNetworkService.promptTemplateID.modify())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t MemoryCreationQUNetworkService.samplingParameters.getter()
{
  type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_79_0();
  return v1(v0);
}

uint64_t MemoryCreationQUNetworkService.featureFlagService.getter()
{
  return swift_retain();
}

uint64_t MemoryCreationQUNetworkService.model.getter()
{
  return swift_retain();
}

uint64_t MemoryCreationQUNetworkService.model.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_25_21();
  void *v1 = a1;
  return swift_release();
}

uint64_t (*MemoryCreationQUNetworkService.model.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t MemoryCreationQUNetworkService.modelOnBehalfOfPID.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  OUTLINED_FUNCTION_0_1();
  return *(void *)v1;
}

uint64_t MemoryCreationQUNetworkService.modelOnBehalfOfPID.setter(uint64_t a1, char a2)
{
  uint64_t result = OUTLINED_FUNCTION_25_21();
  *(void *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*MemoryCreationQUNetworkService.modelOnBehalfOfPID.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

const char *MemoryCreationQUNetworkService.userPromptKey.unsafeMutableAddressor()
{
  return "userPrompt";
}

uint64_t static MemoryCreationQUNetworkService.userPromptKey.getter()
{
  return 0x6D6F725072657375;
}

const char *MemoryCreationQUNetworkService.namesPromptKey.unsafeMutableAddressor()
{
  return "names";
}

uint64_t static MemoryCreationQUNetworkService.namesPromptKey.getter()
{
  return 0x73656D616ELL;
}

const char *MemoryCreationQUNetworkService.currentTimePromptKey.unsafeMutableAddressor()
{
  return "currentTime";
}

uint64_t static MemoryCreationQUNetworkService.currentTimePromptKey.getter()
{
  return 0x54746E6572727563;
}

const char *MemoryCreationQUNetworkService.locationsPromptKey.unsafeMutableAddressor()
{
  return "locations";
}

uint64_t static MemoryCreationQUNetworkService.locationsPromptKey.getter()
{
  return 0x6E6F697461636F6CLL;
}

char **MemoryCreationQUNetworkService.fallbackPromptTemplateV3.unsafeMutableAddressor()
{
  return &static MemoryCreationQUNetworkService.fallbackPromptTemplateV3;
}

const char *static MemoryCreationQUNetworkService.fallbackPromptTemplateV3.getter()
{
  return "{{ specialToken.chat.role.system }}You are an expert in query understanding for a photo library. Your task is t"
         "o transform the given natural language prompt into a structured JSON format. You must follow the instructions b"
         "elow:<n> - Ensure music artist names are specifically marked as a music artist, not simply as a \"who\".<n> - I"
         "dentify named locations like landmarks, business addresses, cities, and countries, and tag them as a \"where\" "
         "rather than a \"what\".<n> - Annotate any mention of a holiday or festival name immediately followed by a year "
         "as a \"when\".<n> - Restrict \"what\" categories to only the following options: Anniversary, Birthday, Breakfas"
         "t, Concert, Dinner, Diving, Hiking, Holiday Event, Lunch, Wedding.<n> - Please treat all queries as case-insens"
         "itive and provide the same response if the meaning of the queries is the same.<n> - The photo library contains "
         "a list of names for reference: [{{ names }}]. The query may include names that are not in this list.{{ specialT"
         "oken.chat.component.turnEnd }}{{ specialToken.chat.role.user }}{{ userPrompt }}{{ specialToken.chat.component.t"
         "urnEnd }}{{ specialToken.chat.role.assistant }}";
}

uint64_t one-time initialization function for responseSanitizer()
{
  uint64_t v0 = type metadata accessor for StringResponseSanitizer.DefaultableGuardrails();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StringResponseSanitizer.DefaultableOverrides();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StringResponseSanitizer();
  __swift_allocate_value_buffer(v8, static MemoryCreationQUNetworkService.responseSanitizer);
  __swift_project_value_buffer(v8, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  uint64_t v9 = type metadata accessor for StringResponseSanitizer.Overrides();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v9);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F413F8], v4);
  uint64_t v10 = type metadata accessor for StringResponseSanitizer.Guardrails();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v10);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F41400], v0);
  return StringResponseSanitizer.init(overrides:guardrails:)();
}

uint64_t MemoryCreationQUNetworkService.responseSanitizer.unsafeMutableAddressor()
{
  return MemoryCreationQUNetworkService.responseSanitizer.unsafeMutableAddressor(&one-time initialization token for responseSanitizer, MEMORY[0x263F41418], (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
}

uint64_t static MemoryCreationQUNetworkService.responseSanitizer.getter@<X0>(uint64_t a1@<X8>)
{
  return static MemoryCreationQUNetworkService.responseSanitizer.getter(&one-time initialization token for responseSanitizer, MEMORY[0x263F41418], (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer, a1);
}

uint64_t one-time initialization function for renderedPromptSanitizer()
{
  uint64_t v0 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableGuardrails();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableOverrides();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_allocate_value_buffer(v8, static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  __swift_project_value_buffer(v8, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  uint64_t v9 = type metadata accessor for StringRenderedPromptSanitizer.Overrides();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v9);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F41440], v4);
  uint64_t v10 = type metadata accessor for StringRenderedPromptSanitizer.Guardrails();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v10);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F41448], v0);
  return StringRenderedPromptSanitizer.init(overrides:guardrails:)();
}

uint64_t MemoryCreationQUNetworkService.renderedPromptSanitizer.unsafeMutableAddressor()
{
  return MemoryCreationQUNetworkService.responseSanitizer.unsafeMutableAddressor(&one-time initialization token for renderedPromptSanitizer, MEMORY[0x263F41460], (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
}

uint64_t MemoryCreationQUNetworkService.responseSanitizer.unsafeMutableAddressor(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);
  return __swift_project_value_buffer(v5, a3);
}

uint64_t static MemoryCreationQUNetworkService.renderedPromptSanitizer.getter@<X0>(uint64_t a1@<X8>)
{
  return static MemoryCreationQUNetworkService.responseSanitizer.getter(&one-time initialization token for renderedPromptSanitizer, MEMORY[0x263F41460], (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer, a1);
}

uint64_t static MemoryCreationQUNetworkService.responseSanitizer.getter@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  __swift_project_value_buffer(v7, a3);
  OUTLINED_FUNCTION_1_0();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v8 + 16);
  return v9(a4);
}

uint64_t MemoryCreationQUNetworkService.__allocating_init(useThimble:useTemplate:featureFlagService:)(char a1, int a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  MemoryCreationQUNetworkService.init(useThimble:useTemplate:featureFlagService:)(a1, a2, a3);
  return v6;
}

void *MemoryCreationQUNetworkService.init(useThimble:useTemplate:featureFlagService:)(char a1, int a2, uint64_t a3)
{
  uint64_t v4 = (void *)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v47 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v46 = type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_15();
  uint64_t v18 = v17 - v16;
  *(void *)(v3 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model) = 0;
  uint64_t v19 = v3 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  *(unsigned char *)(v3 + 16) = a1;
  int v45 = a2;
  *(unsigned char *)(v3 + 17) = a2;
  *(void *)(v3 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_featureFlagService) = a3;
  swift_retain();
  if (a1)
  {
    static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV3()();
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    uint64_t v20 = dispatch thunk of CatalogResource.id.getter();
    unint64_t v22 = v21;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
  }
  else
  {
    unint64_t v22 = 0x8000000258682FB0;
    uint64_t v20 = 0xD00000000000001DLL;
  }
  void v4[3] = v20;
  void v4[4] = v22;
  v4[5] = 0xD000000000000035;
  v4[6] = 0x8000000258682FD0;
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logging.memoryCreationQU);
  swift_retain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_51_1(v25))
  {
    uint64_t v26 = OUTLINED_FUNCTION_13_1();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v49 = v41;
    *(_DWORD *)uint64_t v26 = 136315650;
    if (a1) {
      uint64_t v27 = 1702195828;
    }
    else {
      uint64_t v27 = 0x65736C6166;
    }
    uint64_t v42 = v18;
    uint64_t v43 = (uint64_t)v12;
    if (a1) {
      unint64_t v28 = 0xE400000000000000;
    }
    else {
      unint64_t v28 = 0xE500000000000000;
    }
    v48[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v49);
    uint64_t v44 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    if (v45) {
      uint64_t v29 = 1702195828;
    }
    else {
      uint64_t v29 = 0x65736C6166;
    }
    if (v45) {
      unint64_t v30 = 0xE400000000000000;
    }
    else {
      unint64_t v30 = 0xE500000000000000;
    }
    v48[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    OUTLINED_FUNCTION_0_1();
    uint64_t v31 = v4[3];
    unint64_t v32 = v4[4];
    swift_bridgeObjectRetain();
    uint64_t v33 = v31;
    uint64_t v12 = (char *)v43;
    v48[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v32, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v18 = v42;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v24, (os_log_type_t)v20, "LLM QU: useTbl: %s useTemplate: %s modelID: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    if ((a1 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_22:
    static SamplingStrategy.topK(_:)();
    uint64_t v37 = type metadata accessor for SamplingStrategy();
    OUTLINED_FUNCTION_105_11(v37, v38, v39, v37);
    OUTLINED_FUNCTION_120_7();
    LOBYTE(v44) = 1;
    uint64_t v42 = MEMORY[0x263F8EE88];
    uint64_t v43 = 0;
    LOBYTE(v41) = 0;
    goto LABEL_23;
  }

  swift_release_n();
  if (a1) {
    goto LABEL_22;
  }
LABEL_20:
  static SamplingStrategy.topK(_:)();
  uint64_t v34 = type metadata accessor for SamplingStrategy();
  OUTLINED_FUNCTION_105_11(v34, v35, v36, v34);
  OUTLINED_FUNCTION_120_7();
  LOBYTE(v44) = 0;
  uint64_t v42 = MEMORY[0x263F8EE88];
  uint64_t v43 = 1;
  LOBYTE(v41) = 0;
LABEL_23:
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  outlined destroy of EagerResolutionService?((uint64_t)v12, &demangling cache variable for type metadata for SamplingStrategy?);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))((uint64_t)v4 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters, v18, v46);
  return v4;
}

Swift::Void __swiftcall MemoryCreationQUNetworkService.prewarm(originatorPID:)(Swift::Int originatorPID)
{
  MemoryCreationQUNetworkService.prewarmReturningModel(originatorPID:)(originatorPID);
  swift_release();
}

uint64_t MemoryCreationQUNetworkService.prewarmReturningModel(originatorPID:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  OUTLINED_FUNCTION_0_1();
  if ((*(unsigned char *)(v4 + 8) & 1) == 0
    && *(void *)v4 == a1
    && (uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model),
        OUTLINED_FUNCTION_0_1(),
        (uint64_t v6 = *v5) != 0))
  {
    uint64_t v7 = one-time initialization token for memoryCreationQU;
    swift_retain();
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logging.memoryCreationQU);
    uint64_t v9 = (void *)Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_51_1(v10))
    {
      uint64_t v11 = (float *)OUTLINED_FUNCTION_14_1();
      OUTLINED_FUNCTION_51_17(v11, 3.852e-34);
      OUTLINED_FUNCTION_71_8(&dword_257DC6000, v12, v13, "Model for PID %ld already prewarmed, no need to prewarm again");
      OUTLINED_FUNCTION_34();
    }
  }
  else
  {
    if (one-time initialization token for memoryCreationQU != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logging.memoryCreationQU);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (float *)OUTLINED_FUNCTION_14_1();
      OUTLINED_FUNCTION_51_17(v17, 3.852e-34);
      _os_log_impl(&dword_257DC6000, v15, v16, "Prewarming model for PID %ld", (uint8_t *)v17, 0xCu);
      OUTLINED_FUNCTION_34();
    }

    uint64_t v6 = MemoryCreationQUNetworkService.createAndCacheModel(onBehalfOfPID:)(a1);
    TokenGenerator.prewarm()();
  }
  return v6;
}

uint64_t MemoryCreationQUNetworkService.createAndCacheModel(onBehalfOfPID:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CachePolicy();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  MEMORY[0x270FA5388](v6 - 8);
  type metadata accessor for TokenGenerator();
  swift_beginAccess();
  type metadata accessor for LLMBundle();
  _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type LLMBundle and conformance LLMBundle, MEMORY[0x263F561C0]);
  swift_bridgeObjectRetain();
  ResourceBundleIdentifier.init(stringLiteral:)();
  static CachePolicy.inMemory.getter();
  GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
  uint64_t v7 = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:)();
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model);
  swift_beginAccess();
  *uint64_t v8 = v7;
  swift_retain();
  swift_release();
  uint64_t v9 = v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  swift_beginAccess();
  *(void *)uint64_t v9 = a1;
  *(unsigned char *)(v9 + 8) = 0;
  return v7;
}

uint64_t MemoryCreationQUNetworkService.parse(_:personNames:petNames:locations:currentTime:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v9 + 240) = v15;
  *(void *)(v9 + 192) = v14;
  *(void *)(v9 + 200) = v8;
  *(void *)(v9 + 176) = a7;
  *(void *)(v9 + 184) = a8;
  *(void *)(v9 + 160) = a5;
  *(void *)(v9 + 168) = a6;
  *(void *)(v9 + 144) = a3;
  *(void *)(v9 + 152) = a4;
  *(void *)(v9 + 128) = a1;
  *(void *)(v9 + 136) = a2;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t MemoryCreationQUNetworkService.parse(_:personNames:petNames:locations:currentTime:originatorPID:)()
{
  if (*(unsigned char *)(v1 + 240))
  {
    id v3 = objc_msgSend(self, sel_processInfo);
    signed int v4 = objc_msgSend(v3, sel_processIdentifier);

    uint64_t v2 = v4;
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 192);
  }
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logging.memoryCreationQU);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_51_1(v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    *(_DWORD *)uint64_t v8 = 134217984;
    *(void *)(v1 + 120) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v6, v0, "Calling LLM QU parse on behalf of PID: %ld", v8, 0xCu);
    OUTLINED_FUNCTION_34();
  }

  uint64_t v10 = *(void *)(v1 + 176);
  uint64_t v9 = *(void *)(v1 + 184);
  uint64_t v11 = v2;
  uint64_t v13 = *(void **)(v1 + 160);
  uint64_t v12 = *(void *)(v1 + 168);
  uint64_t v15 = *(void *)(v1 + 144);
  uint64_t v14 = *(void **)(v1 + 152);
  uint64_t v16 = *(void *)(v1 + 136);
  *(void *)(v1 + 208) = MemoryCreationQUNetworkService.prewarmReturningModel(originatorPID:)(v11);
  v17._rawValue = v14;
  v18._rawValue = v13;
  *(void *)(v1 + 216) = MemoryCreationQUNetworkService.generatePromptBindings(query:personNames:petNames:locations:currentTime:)(v16, v15, v17, v18, v12, v10, v9);
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v1 + 224) = v19;
  *uint64_t v19 = v20;
  v19[1] = MemoryCreationQUNetworkService.parse(_:personNames:petNames:locations:currentTime:originatorPID:);
  return MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *id v3 = v2;
  signed int v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_release();
  memcpy(v1, (const void *)(v0 + 16), 0x68uLL);
  OUTLINED_FUNCTION_86();
  return v2();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_13();
  return v0();
}

uint64_t MemoryCreationQUNetworkService.generatePromptBindings(query:personNames:petNames:locations:currentTime:)(uint64_t a1, uint64_t a2, Swift::OpaquePointer personNames, Swift::OpaquePointer petNames, uint64_t a5, uint64_t a6, uint64_t a7)
{
  Swift::String v12 = MemoryCreationQUNetworkService.formatNames(personNames:petNames:)(personNames, petNames);
  uint64_t v28 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v13 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v15 = v14;
  if (a7)
  {
    uint64_t v16 = a7;
  }
  else
  {
    a6 = static MemoryCreationQUNetworkService.getCurrentDate()();
    uint64_t v16 = v17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258663010;
  *(void *)(inited + 32) = 0x6D6F725072657375;
  *(void *)(inited + 40) = 0xEA00000000007470;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = 0x73656D616ELL;
  *(void *)(inited + 72) = 0xE500000000000000;
  *(Swift::String *)(inited + 80) = v12;
  *(void *)(inited + 96) = 0x54746E6572727563;
  *(void *)(inited + 104) = 0xEB00000000656D69;
  *(void *)(inited + 112) = a6;
  *(void *)(inited + 120) = v16;
  *(void *)(inited + 128) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 136) = 0xE900000000000073;
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    uint64_t v28 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v24 = Dictionary.description.getter();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v21, v22, "Memory Creation QU prompt bindings: %s", v23, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v19;
}

uint64_t MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:)()
{
  OUTLINED_FUNCTION_27();
  v1[103] = v0;
  v1[102] = v2;
  v1[101] = v3;
  v1[100] = v4;
  v1[99] = v5;
  v1[98] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  v1[104] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PromptTemplate();
  v1[105] = v7;
  v1[106] = *(void *)(v7 - 8);
  v1[107] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

{
  Swift::OpaquePointer *v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  BOOL v4;
  void *rawValue;
  _DWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *object;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  Swift::OpaquePointer *v54;

  uint64_t v54 = v0;
  if (one-time initialization token for memoryCreationQU != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[108]._rawValue = (void *)__swift_project_value_buffer(v1, (uint64_t)static Logging.memoryCreationQU);
  swift_retain();
  uint64_t v2 = (void *)Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = OUTLINED_FUNCTION_51_1(v3);
  rawValue = v0[103]._rawValue;
  if (v4)
  {
    uint64_t v6 = (_DWORD *)OUTLINED_FUNCTION_14_1();
    os_log_type_t v53 = OUTLINED_FUNCTION_13_1();
    *uint64_t v6 = 136315138;
    OUTLINED_FUNCTION_0_1();
    uint64_t v8 = rawValue[3];
    uint64_t v7 = rawValue[4];
    swift_bridgeObjectRetain();
    v0[97]._rawValue = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v7, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_71_8(&dword_257DC6000, v9, v10, "Calling LLM QU parse with model ID %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_release();
  }

  uint64_t v11 = v0[103]._rawValue;
  if (v11[16] == 1)
  {
    if (v11[17] == 1)
    {
      uint64_t v12 = Logger.logObject.getter();
      uint64_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_257DC6000, v12, v13, "Calling LLM QU parse with template", v14, 2u);
        OUTLINED_FUNCTION_34();
      }
      uint64_t v15 = v0[103]._rawValue;

      static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingID.getter();
      OUTLINED_FUNCTION_0_1();
      uint64_t v16 = v15[5];
      uint64_t v17 = v15[6];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, StaticString)>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_258661700;
      *(void *)(inited + 32) = v16;
      *(void *)(inited + 40) = v17;
      *(void *)(inited + 48) = "{{ specialToken.chat.role.system }}You are an expert in query understanding for a photo"
                                 " library. Your task is to transform the given natural language prompt into a structured"
                                 " JSON format. You must follow the instructions below:<n> - Ensure music artist names ar"
                                 "e specifically marked as a music artist, not simply as a \"who\".<n> - Identify named l"
                                 "ocations like landmarks, business addresses, cities, and countries, and tag them as a \""
                                 "where\" rather than a \"what\".<n> - Annotate any mention of a holiday or festival name"
                                 " immediately followed by a year as a \"when\".<n> - Restrict \"what\" categories to onl"
                                 "y the following options: Anniversary, Birthday, Breakfast, Concert, Dinner, Diving, Hik"
                                 "ing, Holiday Event, Lunch, Wedding.<n> - Please treat all queries as case-insensitive a"
                                 "nd provide the same response if the meaning of the queries is the same.<n> - The photo "
                                 "library contains a list of names for reference: [{{ names }}]. The query may include na"
                                 "mes that are not in this list.{{ specialToken.chat.component.turnEnd }}{{ specialToken."
                                 "chat.role.user }}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialTok"
                                 "en.chat.role.assistant }}";
      *(void *)(inited + 56) = 1147;
      *(unsigned char *)(inited + 64) = 2;
      swift_bridgeObjectRetain_n();
      Dictionary.init(dictionaryLiteral:)();
      PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
      if (((*(uint64_t (**)(uint64_t))(**(void **)((char *)v15
                                                             + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_featureFlagService)
                                               + 80))(5) & 1) != 0)
      {
        swift_task_alloc();
        OUTLINED_FUNCTION_54_1();
        v0[109]._rawValue = v19;
        *uint64_t v19 = v20;
        v19[1] = MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:);
        OUTLINED_FUNCTION_45_0();
        return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(v21, v22, v23, v24, v25);
      }
      else
      {
        uint64_t v47 = (void *)swift_task_alloc();
        v0[111]._rawValue = v47;
        *uint64_t v47 = v0;
        v47[1] = MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:);
        OUTLINED_FUNCTION_45_0();
        return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(v48, v49, v50, v51);
      }
    }
    object = MemoryCreationQUNetworkService.generatePrompt(promptBindings:)(v0[808])._object;
  }
  else
  {
    object = v0[100]._rawValue;
    swift_bridgeObjectRetain();
  }
  v0[115]._rawValue = object;
  uint64_t v29 = Logger.logObject.getter();
  unint64_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_257DC6000, v29, v30, "Calling LLM QU parse without template", v31, 2u);
    OUTLINED_FUNCTION_34();
  }
  unint64_t v32 = (char *)v0[103]._rawValue;

  if (((*(uint64_t (**)(uint64_t))(**(void **)&v32[OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_featureFlagService]
                                           + 80))(5) & 1) != 0)
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_54_1();
    v0[116]._rawValue = v33;
    *uint64_t v33 = v34;
    v33[1] = MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:);
    OUTLINED_FUNCTION_45_0();
    return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(v35, v36, v37, v38, v39);
  }
  else
  {
    uint64_t v41 = (void *)swift_task_alloc();
    v0[118]._rawValue = v41;
    *uint64_t v41 = v0;
    v41[1] = MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:);
    OUTLINED_FUNCTION_45_0();
    return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(v42, v43, v44, v45);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 880) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_77();
  v0();
  OUTLINED_FUNCTION_130_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_10();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v10 = v9;
  v7[112] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[113] = v3;
    v7[114] = v5;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  uint64_t v0;
  Swift::String v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  uint64_t v19;

  OUTLINED_FUNCTION_66_10();
  v1._uint64_t countAndFlagsBits = *(void *)(v0 + 912);
  v1._object = *(void **)(v0 + 904);
  MemoryCreationQUModelResponse.init(jsonString:)((OmniSearch::MemoryCreationQUModelResponse *)(v0 + 224), v1);
  OUTLINED_FUNCTION_77();
  v2();
  OUTLINED_FUNCTION_129_4();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_15();
  }
  else
  {
    uint64_t v17 = *(_OWORD *)(v0 + 224);
    Swift::OpaquePointer v18 = *(_OWORD *)(v0 + 288);
    uint64_t v15 = *(_OWORD *)(v0 + 256);
    uint64_t v16 = *(_OWORD *)(v0 + 240);
    uint64_t v14 = *(_OWORD *)(v0 + 272);
    swift_task_dealloc();
    uint64_t v5 = swift_task_dealloc();
    OUTLINED_FUNCTION_25_22(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15, v16, v17, v18);
  }
  return v4();
}

{
  void (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_77();
  v0();
  OUTLINED_FUNCTION_130_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 936) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_10();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v10 = v9;
  v7[119] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    v7[120] = v3;
    v7[121] = v5;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  long long v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  uint64_t v18;

  OUTLINED_FUNCTION_66_10();
  v1._uint64_t countAndFlagsBits = *(void *)(v0 + 968);
  v1._object = *(void **)(v0 + 960);
  MemoryCreationQUModelResponse.init(jsonString:)((OmniSearch::MemoryCreationQUModelResponse *)(v0 + 16), v1);
  OUTLINED_FUNCTION_129_4();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_15();
  }
  else
  {
    uint64_t v16 = *(_OWORD *)(v0 + 16);
    uint64_t v17 = *(_OWORD *)(v0 + 80);
    uint64_t v14 = *(_OWORD *)(v0 + 48);
    uint64_t v15 = *(_OWORD *)(v0 + 32);
    uint64_t v13 = *(_OWORD *)(v0 + 64);
    swift_task_dealloc();
    uint64_t v4 = swift_task_dealloc();
    OUTLINED_FUNCTION_25_22(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  }
  return v3();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

uint64_t MemoryCreationQUNetworkService.parseHelper(_:promptBindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  OUTLINED_FUNCTION_44();
  a31 = v33;
  a32 = v34;
  OUTLINED_FUNCTION_78_10();
  a30 = v32;
  outlined retain of MemoryCreationQUModelResponse(v32 + 328);
  outlined retain of MemoryCreationQUModelResponse(v32 + 328);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    a21 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v37 = 136315138;
    memcpy((void *)(v32 + 536), (const void *)(v32 + 328), 0x68uLL);
    outlined retain of MemoryCreationQUModelResponse(v32 + 328);
    uint64_t v38 = String.init<A>(describing:)();
    *(void *)(v32 + 768) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &a21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined release of MemoryCreationQUModelResponse(v32 + 328);
    outlined release of MemoryCreationQUModelResponse(v32 + 328);
    _os_log_impl(&dword_257DC6000, v35, v36, "Got response from LLM QU with constrained decoding: %s", v37, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    OUTLINED_FUNCTION_111_0();
    v40();
  }
  else
  {
    uint64_t v41 = *(void *)(v32 + 856);
    uint64_t v42 = *(void *)(v32 + 848);
    uint64_t v43 = *(void *)(v32 + 840);

    outlined release of MemoryCreationQUModelResponse(v32 + 328);
    outlined release of MemoryCreationQUModelResponse(v32 + 328);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  }
  OUTLINED_FUNCTION_129_4();
  uint64_t v44 = *(void *)(v32 + 784);
  uint64_t v45 = *(void *)(v32 + 424);
  long long v59 = *(_OWORD *)(v32 + 392);
  long long v60 = *(_OWORD *)(v32 + 408);
  long long v57 = *(_OWORD *)(v32 + 344);
  long long v58 = *(_OWORD *)(v32 + 328);
  long long v55 = *(_OWORD *)(v32 + 376);
  long long v56 = *(_OWORD *)(v32 + 360);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v44 = v58;
  *(_OWORD *)(v44 + 16) = v57;
  *(_OWORD *)(v44 + 32) = v56;
  *(_OWORD *)(v44 + 48) = v55;
  *(_OWORD *)(v44 + 64) = v59;
  *(_OWORD *)(v44 + 80) = v60;
  *(void *)(v44 + 96) = v45;
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_35_0();
  return v47(v46, v47, v48, v49, v50, v51, v52, v53, v55, *((void *)&v55 + 1), v56, *((void *)&v56 + 1), v57, *((void *)&v57 + 1), v58, *((void *)&v58 + 1), v59, *((void *)&v59 + 1), v60,
           *((void *)&v60 + 1),
           a21,
           a22,
           a23,
           a24);
}

{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  long long v55;
  long long v56;

  OUTLINED_FUNCTION_44();
  a31 = v33;
  a32 = v34;
  OUTLINED_FUNCTION_78_10();
  a30 = v32;
  outlined retain of MemoryCreationQUModelResponse(v32 + 120);
  outlined retain of MemoryCreationQUModelResponse(v32 + 120);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    a21 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v37 = 136315138;
    memcpy((void *)(v32 + 432), (const void *)(v32 + 120), 0x68uLL);
    outlined retain of MemoryCreationQUModelResponse(v32 + 120);
    uint64_t v38 = String.init<A>(describing:)();
    *(void *)(v32 + 760) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &a21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined release of MemoryCreationQUModelResponse(v32 + 120);
    outlined release of MemoryCreationQUModelResponse(v32 + 120);
    _os_log_impl(&dword_257DC6000, v35, v36, "Got response from LLM QU with constrained decoding: %s", v37, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    outlined release of MemoryCreationQUModelResponse(v32 + 120);
    outlined release of MemoryCreationQUModelResponse(v32 + 120);
  }

  OUTLINED_FUNCTION_129_4();
  int64_t v40 = *(void *)(v32 + 784);
  uint64_t v41 = *(void *)(v32 + 216);
  long long v55 = *(_OWORD *)(v32 + 184);
  long long v56 = *(_OWORD *)(v32 + 200);
  uint64_t v53 = *(_OWORD *)(v32 + 136);
  uint64_t v54 = *(_OWORD *)(v32 + 120);
  uint64_t v51 = *(_OWORD *)(v32 + 168);
  uint64_t v52 = *(_OWORD *)(v32 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)int64_t v40 = v54;
  *(_OWORD *)(v40 + 16) = v53;
  *(_OWORD *)(v40 + 32) = v52;
  *(_OWORD *)(v40 + 48) = v51;
  *(_OWORD *)(v40 + 64) = v55;
  *(_OWORD *)(v40 + 80) = v56;
  *(void *)(v40 + 96) = v41;
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_35_0();
  return v43(v42, v43, v44, v45, v46, v47, v48, v49, v51, *((void *)&v51 + 1), v52, *((void *)&v52 + 1), v53, *((void *)&v53 + 1), v54, *((void *)&v54 + 1), v55, *((void *)&v55 + 1), v56,
           *((void *)&v56 + 1),
           a21,
           a22,
           a23,
           a24);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_89_5(v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 128) = v7;
  *uint64_t v7 = v3;
  v7[1] = MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(v5, v4, v1, v2, v0);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(v7, v0, v5, v3);
}

Swift::String __swiftcall MemoryCreationQUNetworkService.generatePrompt(promptBindings:)(Swift::OpaquePointer promptBindings)
{
  uint64_t v2 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v3 = StaticString.description.getter();
  uint64_t v5 = MemoryCreationQUNetworkService.render(prompt:with:)(v3, v4, v2);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MemoryCreationQUNetworkService.render(prompt:with:)(v5, v7, (uint64_t)promptBindings._rawValue);
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_79_0();
  result._object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_89_5(v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 128) = v7;
  *uint64_t v7 = v3;
  v7[1] = MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(v5, v4, v2, v1, v0);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (!v0) {
    memcpy(*(void **)(v3 + 120), (const void *)(v3 + 16), 0x68uLL);
  }
  OUTLINED_FUNCTION_13();
  return v7();
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(v7, v5, v0, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v7 = v6;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v0)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v3;
  }
  return v10(v8, v9);
}

uint64_t static MemoryCreationQUNetworkService.getCurrentDate()()
{
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_15();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  outlined bridged method (mbnn) of @objc NSDateFormatter.dateFormat.setter(0x2D4D4D2D79797979, 0xEA00000000006464, v1);
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v3 = OUTLINED_FUNCTION_19_0();
  v4(v3);
  id v5 = objc_msgSend(v1, sel_stringFromDate_, isa);

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v6;
}

Swift::String __swiftcall MemoryCreationQUNetworkService.formatNames(personNames:petNames:)(Swift::OpaquePointer personNames, Swift::OpaquePointer petNames)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  OUTLINED_FUNCTION_121_6();
  uint64_t v2 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

Swift::String __swiftcall MemoryCreationQUNetworkService.formatLocations(locations:)(Swift::OpaquePointer locations)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  OUTLINED_FUNCTION_121_6();
  uint64_t v1 = BidirectionalCollection<>.joined(separator:)();
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t MemoryCreationQUNetworkService.render(prompt:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v21 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = (void *)v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = 8224032;
    v19._object = (void *)0xE300000000000000;
    String.append(_:)(v19);
    lazy protocol witness table accessor for type String and conformance String();
    a1 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v12 >= v21) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v21) {
        goto LABEL_21;
      }
      unint64_t v13 = *(void *)(v20 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v21) {
          goto LABEL_21;
        }
        unint64_t v13 = *(void *)(v20 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v21)
  {
LABEL_21:
    swift_release();
    return a1;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v21) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

void MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  void (*v29)(void);
  uint64_t v30;
  void (*v31)(void);
  void (*v32)(void);
  void (*v33)(void);
  uint64_t v34;
  void (*v35)(void);
  void (*v36)(void);
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_105_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_79_9(v2, v40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_5_8();
  type metadata accessor for CompletionPrompt();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_24_19();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_38_10();
  unint64_t v10 = MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_116_6(v10, v11, v12, v13, v14, v15, v16, v17, v41);
  Swift::String v19 = MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_47_14(v19, v20, v21, v22, v23, v24, v25, v26, v42);
  CompletionPrompt.init(_:)();
  OUTLINED_FUNCTION_118_6();
  BindableConfiguration.init(name:)();
  uint64_t v27 = _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  OUTLINED_FUNCTION_94_11(v27);
  OUTLINED_FUNCTION_111_0();
  v28();
  uint64_t v29 = *(void (**)(void))(v6 + 8);
  OUTLINED_FUNCTION_75_4();
  v29();
  if (one-time initialization token for responseSanitizer != -1) {
    swift_once();
  }
  unint64_t v30 = type metadata accessor for StringResponseSanitizer();
  __swift_project_value_buffer(v30, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v31();
  OUTLINED_FUNCTION_13_30();
  v32();
  OUTLINED_FUNCTION_95_9();
  OUTLINED_FUNCTION_26_2();
  v33();
  OUTLINED_FUNCTION_75_4();
  v29();
  if (one-time initialization token for renderedPromptSanitizer != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_project_value_buffer(v34, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v35();
  OUTLINED_FUNCTION_13_30();
  v36();
  OUTLINED_FUNCTION_69_10();
  uint64_t v37 = OUTLINED_FUNCTION_90_9();
  v38(v37);
  OUTLINED_FUNCTION_75_4();
  v29();
  OUTLINED_FUNCTION_104_11();
  static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (v0)
  {
    OUTLINED_FUNCTION_75_4();
    v29();
  }
  else
  {
    unint64_t v39 = OUTLINED_FUNCTION_54_13();
    ((void (*)(uint64_t))v29)(v39);
  }
  OUTLINED_FUNCTION_72_10();
  OUTLINED_FUNCTION_120_0();
}

uint64_t closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()()
{
  return closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v7[5];

  uint64_t v1 = type metadata accessor for Prompt();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_5_8();
  v7[3] = type metadata accessor for BindableVariable();
  v7[4] = MEMORY[0x263F62138];
  __swift_allocate_boxed_opaque_existential_1Tm(v7);
  BindableVariable.init(name:)();
  uint64_t v3 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_258661700;
  OUTLINED_FUNCTION_35_22();
  v5();
  MEMORY[0x25A2C7790](v4, v1, v3);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v4[32] = swift_task_alloc();
  v4[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v4[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v4[38] = v7;
  v4[39] = *(void *)(v7 - 8);
  unsigned char v4[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v4[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v4[42] = v8;
  v4[43] = *(void *)(v8 - 8);
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v4[46] = v9;
  v4[47] = *(void *)(v9 - 8);
  v4[48] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v4[49] = v10;
  v4[50] = *(void *)(v10 - 8);
  v4[51] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v4[52] = v11;
  v4[53] = *(void *)(v11 - 8);
  v4[54] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for CompletionPrompt();
  v4[55] = v12;
  v4[56] = *(void *)(v12 - 8);
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:), 0, 0);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  CompletionPrompt.init(_:)();
  swift_task_dealloc();
  *(void *)(v0 + 504) = OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters;
  *(void *)(v0 + 512) = type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1_0();
  *(void *)(v0 + 520) = *(void *)(v6 + 16);
  *(void *)(v0 + 528) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  OUTLINED_FUNCTION_51_2();
  v7();
  *(_DWORD *)(v0 + 640) = *MEMORY[0x263F413E0];
  *(void *)(v0 + 536) = *(void *)(v2 + 104);
  OUTLINED_FUNCTION_131_4();
  *(void *)(v0 + 544) = v8;
  OUTLINED_FUNCTION_13_30();
  v9();
  uint64_t v10 = _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  *(void *)(v0 + 552) = v10;
  OUTLINED_FUNCTION_128_5();
  *(void *)(v0 + 560) = *(void *)(v2 + 8);
  *(void *)(v0 + 568) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_111_0();
  v11();
  *(void *)(v0 + 576) = *(void *)(v1 + 8);
  *(void *)(v0 + 584) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_45_8();
  v12();
  if (one-time initialization token for responseSanitizer != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for StringResponseSanitizer();
  __swift_project_value_buffer(v13, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v14();
  OUTLINED_FUNCTION_13_30();
  v15();
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_111_0();
  v16();
  OUTLINED_FUNCTION_45_8();
  v17();
  if (one-time initialization token for renderedPromptSanitizer != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_project_value_buffer(v18, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v19();
  OUTLINED_FUNCTION_13_30();
  uint64_t v21 = v20();
  OUTLINED_FUNCTION_85_12(v21, v22, v23, v24, v25, v26, v27, v28, v10);
  OUTLINED_FUNCTION_45_8();
  v29();
  OUTLINED_FUNCTION_16_1();
  v30();
  uint64_t v31 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  OUTLINED_FUNCTION_29_22(v31);
  OUTLINED_FUNCTION_33_18();
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v0 + 592) = v32;
  *uint64_t v32 = v33;
  v32[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:);
  OUTLINED_FUNCTION_64_7();
  return MEMORY[0x270F2FC98](v34, v35, v36);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 600) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_27_20();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  v5[77] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5[78] = v0;
    v5[79] = v3;
  }
  OUTLINED_FUNCTION_77();
  v7();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[72];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[55];
  OUTLINED_FUNCTION_28();
  v4();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v6 = v0[79];
  uint64_t v7 = v0[78];
  return v5(v6, v7);
}

#error "258421EE4: call analysis failed (funcsize=329)"

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_123_6();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 576);
  OUTLINED_FUNCTION_77();
  v22();
  uint64_t v23 = OUTLINED_FUNCTION_19_0();
  v21(v23);
  OUTLINED_FUNCTION_12_29();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_45_12();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

{
  uint64_t v20;
  void (*v21)(uint64_t);
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_123_6();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 576);
  OUTLINED_FUNCTION_77();
  v22();
  uint64_t v23 = OUTLINED_FUNCTION_19_0();
  v21(v23);
  OUTLINED_FUNCTION_12_29();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_45_12();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding_generateGenerativeFunctionOverride()()
{
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[40] = a4;
  v5[41] = a5;
  v5[38] = a2;
  v5[39] = a3;
  v5[37] = a1;
  v5[42] = *a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v5[43] = v6;
  v5[44] = *(void *)(v6 - 8);
  v5[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[46] = swift_task_alloc();
  v5[47] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[48] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[49] = v7;
  v5[50] = *(void *)(v7 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[52] = v8;
  v5[53] = *(void *)(v8 - 8);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[55] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FunctionIdentifier();
  v5[56] = v9;
  v5[57] = *(void *)(v9 - 8);
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v5[60] = v10;
  v5[61] = *(void *)(v10 - 8);
  v5[62] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v5[63] = v11;
  v5[64] = *(void *)(v11 - 8);
  v5[65] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[66] = v12;
  v5[67] = *(void *)(v12 - 8);
  v5[68] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for CompletionPrompt();
  v5[69] = v13;
  v5[70] = *(void *)(v13 - 8);
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v5[75] = swift_task_alloc();
  v5[76] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:), 0, 0);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)()
{
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  CompletionPrompt.init(_:)();
  swift_task_dealloc();
  *(void *)(v0 + 616) = OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters;
  *(void *)(v0 + 624) = type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1_0();
  *(void *)(v0 + 632) = *(void *)(v6 + 16);
  *(void *)(v0 + 640) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  OUTLINED_FUNCTION_51_2();
  v7();
  *(_DWORD *)(v0 + 736) = *MEMORY[0x263F413E0];
  *(void *)(v0 + 648) = *(void *)(v2 + 104);
  OUTLINED_FUNCTION_131_4();
  *(void *)(v0 + 656) = v8;
  OUTLINED_FUNCTION_13_30();
  v9();
  uint64_t v10 = _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  *(void *)(v0 + 664) = v10;
  OUTLINED_FUNCTION_128_5();
  *(void *)(v0 + 672) = *(void *)(v2 + 8);
  *(void *)(v0 + 680) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_111_0();
  v11();
  *(void *)(v0 + 688) = *(void *)(v1 + 8);
  *(void *)(v0 + 696) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_45_8();
  v12();
  if (one-time initialization token for responseSanitizer != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for StringResponseSanitizer();
  __swift_project_value_buffer(v13, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v14();
  OUTLINED_FUNCTION_13_30();
  v15();
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_111_0();
  v16();
  OUTLINED_FUNCTION_45_8();
  v17();
  if (one-time initialization token for renderedPromptSanitizer != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_project_value_buffer(v18, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v19();
  OUTLINED_FUNCTION_13_30();
  uint64_t v21 = v20();
  OUTLINED_FUNCTION_85_12(v21, v22, v23, v24, v25, v26, v27, v28, v10);
  OUTLINED_FUNCTION_45_8();
  v29();
  OUTLINED_FUNCTION_16_1();
  v30();
  uint64_t v31 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  OUTLINED_FUNCTION_29_22(v31);
  OUTLINED_FUNCTION_33_18();
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v0 + 704) = v32;
  *uint64_t v32 = v33;
  v32[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:);
  OUTLINED_FUNCTION_64_7();
  return MEMORY[0x270F2FC98](v34, v35, v36);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 712) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 728) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_77();
  v4();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t (*v7)(void);
  long long v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  long long v14;
  uint64_t v15;

  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 608);
  uint64_t v3 = *(void *)(v0 + 552);
  OUTLINED_FUNCTION_100_9();
  uint64_t v4 = *(void *)(v0 + 296);
  OUTLINED_FUNCTION_28();
  v5();
  v1(v2, v3);
  uint64_t v14 = *(_OWORD *)(v0 + 80);
  uint64_t v13 = *(_OWORD *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v11 = *(_OWORD *)(v0 + 32);
  uint64_t v12 = *(_OWORD *)(v0 + 16);
  uint64_t v9 = *(_OWORD *)(v0 + 64);
  uint64_t v10 = *(_OWORD *)(v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v4 = v12;
  *(_OWORD *)(v4 + 16) = v11;
  *(_OWORD *)(v4 + 32) = v10;
  *(_OWORD *)(v4 + 48) = v9;
  *(_OWORD *)(v4 + 64) = v14;
  *(_OWORD *)(v4 + 80) = v13;
  *(void *)(v4 + 96) = v6;
  OUTLINED_FUNCTION_86();
  return v7();
}

#error "25842379C: call analysis failed (funcsize=349)"

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_123_6();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 688);
  OUTLINED_FUNCTION_77();
  v22();
  uint64_t v23 = OUTLINED_FUNCTION_19_0();
  v21(v23);
  OUTLINED_FUNCTION_9_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_45_12();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

{
  uint64_t v20;
  void (*v21)(uint64_t);
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_123_6();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 688);
  OUTLINED_FUNCTION_77();
  v22();
  uint64_t v23 = OUTLINED_FUNCTION_19_0();
  v21(v23);
  OUTLINED_FUNCTION_9_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_45_12();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for Prompt();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_18_8();
  void v9[3] = MEMORY[0x263F8D310];
  v9[4] = MEMORY[0x263F62188];
  v9[0] = v3;
  v9[1] = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  OUTLINED_FUNCTION_35_22();
  v7();
  MEMORY[0x25A2C7790](v6, v4, v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
  v8();
  OUTLINED_FUNCTION_120_0();
}

void MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate_generateGenerativeFunctionOverride()()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  void (*v29)(void);
  uint64_t v30;
  void (*v31)(void);
  void (*v32)(void);
  void (*v33)(void);
  uint64_t v34;
  void (*v35)(void);
  void (*v36)(void);
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_105_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_79_9(v2, v40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_5_8();
  type metadata accessor for ChatMessagesPrompt();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_24_19();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_38_10();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_116_6(v10, v11, v12, v13, v14, v15, v16, v17, v41);
  Swift::String v19 = MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_47_14(v19, v20, v21, v22, v23, v24, v25, v26, v42);
  ChatMessagesPrompt.init(_:)();
  OUTLINED_FUNCTION_118_6();
  BindableConfiguration.init(name:)();
  uint64_t v27 = _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type ChatMessagesPrompt and conformance ChatMessagesPrompt, MEMORY[0x263F61FA8]);
  OUTLINED_FUNCTION_94_11(v27);
  OUTLINED_FUNCTION_111_0();
  v28();
  uint64_t v29 = *(void (**)(void))(v6 + 8);
  OUTLINED_FUNCTION_75_4();
  v29();
  if (one-time initialization token for responseSanitizer != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for StringResponseSanitizer();
  __swift_project_value_buffer(v30, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v31();
  OUTLINED_FUNCTION_13_30();
  v32();
  OUTLINED_FUNCTION_95_9();
  OUTLINED_FUNCTION_26_2();
  v33();
  OUTLINED_FUNCTION_75_4();
  v29();
  if (one-time initialization token for renderedPromptSanitizer != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_project_value_buffer(v34, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v35();
  OUTLINED_FUNCTION_13_30();
  v36();
  OUTLINED_FUNCTION_69_10();
  uint64_t v37 = OUTLINED_FUNCTION_90_9();
  v38(v37);
  OUTLINED_FUNCTION_75_4();
  v29();
  OUTLINED_FUNCTION_104_11();
  static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (v0)
  {
    OUTLINED_FUNCTION_75_4();
    v29();
  }
  else
  {
    unint64_t v39 = OUTLINED_FUNCTION_54_13();
    ((void (*)(uint64_t))v29)(v39);
  }
  OUTLINED_FUNCTION_72_10();
  OUTLINED_FUNCTION_120_0();
}

void closure #1 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate_generateGenerativeFunctionOverride()()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  unint64_t v5;
  uint64_t v6;
  void (*v7)(void);

  OUTLINED_FUNCTION_105_0();
  type metadata accessor for BindableChatMessagesPrompt();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_15();
  uint64_t v2 = type metadata accessor for ChatMessagesPrompt();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_18_8();
  BindableChatMessagesPrompt.init(name:)();
  static ChatMessagesPromptBuilder.buildExpression<A>(_:)();
  OUTLINED_FUNCTION_26_2();
  v4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ChatMessagesPrompt>);
  uint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v6 + v5, v0, v2);
  MEMORY[0x25A2C7750](v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
  v7();
  OUTLINED_FUNCTION_120_0();
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<ChatMessagesPrompt, TokenGenerator, ChatMessagesPrompt>);
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (chatMessagesPrompt: _GenerativeFunctionOverridableInternals_ChatMessagesPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v4[32] = swift_task_alloc();
  v4[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_ChatMessagesPrompt, _GenerativeFunctionInternals_Metadata));
  v4[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_ChatMessagesPrompt();
  v4[38] = v7;
  v4[39] = *(void *)(v7 - 8);
  unsigned char v4[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v4[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v4[42] = v8;
  v4[43] = *(void *)(v8 - 8);
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v4[46] = v9;
  v4[47] = *(void *)(v9 - 8);
  v4[48] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v4[49] = v10;
  v4[50] = *(void *)(v10 - 8);
  v4[51] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v4[52] = v11;
  v4[53] = *(void *)(v11 - 8);
  v4[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  v4[55] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ChatMessagesPrompt();
  v4[56] = v12;
  v4[57] = *(void *)(v12 - 8);
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  v4[65] = swift_task_alloc();
  v4[66] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:), 0, 0);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v19 = *(void *)(v18 + 456);
  uint64_t v21 = *(void *)(v18 + 432);
  uint64_t v20 = *(void *)(v18 + 440);
  uint64_t v22 = *(void *)(v18 + 424);
  uint64_t v61 = *(void *)(v18 + 208);
  uint64_t v62 = *(void *)(v18 + 512);
  uint64_t v23 = *(void *)(v18 + 192);
  uint64_t v58 = *(void *)(v18 + 200);
  uint64_t v59 = *(void *)(v18 + 496);
  *(void *)(swift_task_alloc() + 16) = v23;
  ChatMessagesPrompt.init(_:)();
  swift_task_dealloc();
  static Locale.current.getter();
  uint64_t v24 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_102_6(v24);
  outlined destroy of EagerResolutionService?(v20, &demangling cache variable for type metadata for Locale?);
  uint64_t v25 = *(void (**)(uint64_t))(v19 + 8);
  *(void *)(v18 + 536) = v25;
  *(void *)(v18 + 544) = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v26 = OUTLINED_FUNCTION_32_19();
  v25(v26);
  *(void *)(v18 + 552) = OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters;
  *(void *)(v18 + 560) = type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1_0();
  *(void *)(v18 + 568) = *(void *)(v27 + 16);
  *(void *)(v18 + 576) = (v27 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  OUTLINED_FUNCTION_51_2();
  v28();
  *(_DWORD *)(v18 + 672) = *MEMORY[0x263F413E0];
  *(void *)(v18 + 584) = *(void *)(v22 + 104);
  OUTLINED_FUNCTION_131_4();
  *(void *)(v18 + 592) = v29;
  OUTLINED_FUNCTION_13_30();
  v30();
  *(void *)(v18 + 600) = _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type ChatMessagesPrompt and conformance ChatMessagesPrompt, MEMORY[0x263F61FA8]);
  OUTLINED_FUNCTION_66_12();
  *(void *)(v18 + 608) = *(void *)(v22 + 8);
  *(void *)(v18 + 616) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v31 = OUTLINED_FUNCTION_103_10();
  v32(v31);
  uint64_t v33 = OUTLINED_FUNCTION_32_19();
  v25(v33);
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v61);
  OUTLINED_FUNCTION_112_7();
  swift_bridgeObjectRelease();
  uint64_t v34 = OUTLINED_FUNCTION_106_9();
  v25(v34);
  if (one-time initialization token for responseSanitizer != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for StringResponseSanitizer();
  __swift_project_value_buffer(v35, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v36();
  LODWORD(v61) = *MEMORY[0x263F413E8];
  OUTLINED_FUNCTION_13_30();
  v37();
  OUTLINED_FUNCTION_84_9();
  OUTLINED_FUNCTION_111_0();
  v38();
  OUTLINED_FUNCTION_26_2();
  v39();
  if (one-time initialization token for renderedPromptSanitizer != -1) {
    swift_once();
  }
  uint64_t v60 = *(void *)(v18 + 360);
  uint64_t v40 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_project_value_buffer(v40, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v41();
  OUTLINED_FUNCTION_13_30();
  v42();
  OUTLINED_FUNCTION_86_8();
  uint64_t v43 = OUTLINED_FUNCTION_113_9();
  v44(v43);
  OUTLINED_FUNCTION_16_1();
  v45();
  uint64_t v46 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  OUTLINED_FUNCTION_29_22(v46);
  OUTLINED_FUNCTION_33_18();
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v18 + 624) = v47;
  *uint64_t v47 = v48;
  v47[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:);
  OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_140();
  return MEMORY[0x270F2FCA0](v49, v50, v51, v52, v53, v54, v55, v56, v58, v59, v21, v60, v61, v62, a15, a16, a17, a18);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 632) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_27_20();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  v5[81] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5[82] = v0;
    v5[83] = v3;
  }
  OUTLINED_FUNCTION_77();
  v7();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[67];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[56];
  OUTLINED_FUNCTION_28();
  v4();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v6 = v0[83];
  uint64_t v7 = v0[82];
  return v5(v6, v7);
}

#error "258424D30: call analysis failed (funcsize=359)"

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_78_10();
  uint64_t v25 = *(void (**)(uint64_t))(v24 + 536);
  OUTLINED_FUNCTION_77();
  v26();
  uint64_t v27 = OUTLINED_FUNCTION_19_0();
  v25(v27);
  OUTLINED_FUNCTION_7_29(*(void *)(v24 + 632));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
  OUTLINED_FUNCTION_35_0();
  return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

{
  uint64_t v24;
  void (*v25)(uint64_t);
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_78_10();
  uint64_t v25 = *(void (**)(uint64_t))(v24 + 536);
  OUTLINED_FUNCTION_77();
  v26();
  uint64_t v27 = OUTLINED_FUNCTION_19_0();
  v25(v27);
  OUTLINED_FUNCTION_7_29(*(void *)(v24 + 648));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
  OUTLINED_FUNCTION_35_0();
  return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

void MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding_generateGenerativeFunctionOverride()()
{
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[40] = a4;
  v5[41] = a5;
  v5[38] = a2;
  v5[39] = a3;
  v5[37] = a1;
  v5[42] = *a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<ChatMessagesPrompt, TokenGenerator, ChatMessagesPrompt>);
  v5[43] = v6;
  v5[44] = *(void *)(v6 - 8);
  v5[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (chatMessagesPrompt: _GenerativeFunctionOverridableInternals_ChatMessagesPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[46] = swift_task_alloc();
  v5[47] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_ChatMessagesPrompt, _GenerativeFunctionInternals_Metadata));
  v5[48] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[49] = v7;
  v5[50] = *(void *)(v7 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for _GenerativeFunctionOverridableInternals_ChatMessagesPrompt();
  v5[52] = v8;
  v5[53] = *(void *)(v8 - 8);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[55] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FunctionIdentifier();
  v5[56] = v9;
  v5[57] = *(void *)(v9 - 8);
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v5[60] = v10;
  v5[61] = *(void *)(v10 - 8);
  v5[62] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v5[63] = v11;
  v5[64] = *(void *)(v11 - 8);
  v5[65] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[66] = v12;
  v5[67] = *(void *)(v12 - 8);
  v5[68] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  v5[69] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for ChatMessagesPrompt();
  v5[70] = v13;
  v5[71] = *(void *)(v13 - 8);
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v5[75] = swift_task_alloc();
  v5[76] = swift_task_alloc();
  v5[77] = swift_task_alloc();
  v5[78] = swift_task_alloc();
  v5[79] = swift_task_alloc();
  v5[80] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:), 0, 0);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v19 = *(void *)(v18 + 568);
  uint64_t v20 = *(void *)(v18 + 552);
  uint64_t v21 = *(void *)(v18 + 544);
  uint64_t v22 = *(void *)(v18 + 536);
  uint64_t v61 = *(void *)(v18 + 320);
  uint64_t v62 = *(void *)(v18 + 624);
  uint64_t v23 = *(void *)(v18 + 304);
  uint64_t v58 = *(void *)(v18 + 312);
  uint64_t v59 = *(void *)(v18 + 608);
  *(void *)(swift_task_alloc() + 16) = v23;
  ChatMessagesPrompt.init(_:)();
  swift_task_dealloc();
  static Locale.current.getter();
  uint64_t v24 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_102_6(v24);
  outlined destroy of EagerResolutionService?(v20, &demangling cache variable for type metadata for Locale?);
  uint64_t v25 = *(void (**)(uint64_t))(v19 + 8);
  *(void *)(v18 + 648) = v25;
  *(void *)(v18 + 656) = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v26 = OUTLINED_FUNCTION_32_19();
  v25(v26);
  *(void *)(v18 + 664) = OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters;
  *(void *)(v18 + 672) = type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1_0();
  *(void *)(v18 + 680) = *(void *)(v27 + 16);
  *(void *)(v18 + 688) = (v27 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  OUTLINED_FUNCTION_51_2();
  v28();
  *(_DWORD *)(v18 + 768) = *MEMORY[0x263F413E0];
  *(void *)(v18 + 696) = *(void *)(v22 + 104);
  OUTLINED_FUNCTION_131_4();
  *(void *)(v18 + 704) = v29;
  OUTLINED_FUNCTION_13_30();
  v30();
  *(void *)(v18 + 712) = _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type ChatMessagesPrompt and conformance ChatMessagesPrompt, MEMORY[0x263F61FA8]);
  OUTLINED_FUNCTION_66_12();
  *(void *)(v18 + 720) = *(void *)(v22 + 8);
  *(void *)(v18 + 728) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v31 = OUTLINED_FUNCTION_103_10();
  v32(v31);
  uint64_t v33 = OUTLINED_FUNCTION_32_19();
  v25(v33);
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v61);
  OUTLINED_FUNCTION_112_7();
  swift_bridgeObjectRelease();
  uint64_t v34 = OUTLINED_FUNCTION_106_9();
  v25(v34);
  if (one-time initialization token for responseSanitizer != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for StringResponseSanitizer();
  __swift_project_value_buffer(v35, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v36();
  LODWORD(v61) = *MEMORY[0x263F413E8];
  OUTLINED_FUNCTION_13_30();
  v37();
  OUTLINED_FUNCTION_84_9();
  OUTLINED_FUNCTION_111_0();
  v38();
  OUTLINED_FUNCTION_26_2();
  v39();
  if (one-time initialization token for renderedPromptSanitizer != -1) {
    swift_once();
  }
  uint64_t v60 = *(void *)(v18 + 472);
  uint64_t v40 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_project_value_buffer(v40, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_51_2();
  v41();
  OUTLINED_FUNCTION_13_30();
  v42();
  OUTLINED_FUNCTION_86_8();
  uint64_t v43 = OUTLINED_FUNCTION_113_9();
  v44(v43);
  OUTLINED_FUNCTION_16_1();
  v45();
  uint64_t v46 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  OUTLINED_FUNCTION_29_22(v46);
  OUTLINED_FUNCTION_33_18();
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v18 + 736) = v47;
  *uint64_t v47 = v48;
  v47[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:);
  OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_140();
  return MEMORY[0x270F2FCA0](v49, v50, v51, v52, v53, v54, v55, v56, v58, v59, v21, v60, v61, v62, a15, a16, a17, a18);
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 744) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 760) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_77();
  v4();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t (*v7)(void);
  long long v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  long long v14;
  uint64_t v15;

  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 640);
  uint64_t v3 = *(void *)(v0 + 560);
  OUTLINED_FUNCTION_100_9();
  uint64_t v4 = *(void *)(v0 + 296);
  OUTLINED_FUNCTION_28();
  v5();
  v1(v2, v3);
  uint64_t v13 = *(_OWORD *)(v0 + 96);
  uint64_t v14 = *(_OWORD *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v11 = *(_OWORD *)(v0 + 32);
  uint64_t v12 = *(_OWORD *)(v0 + 16);
  uint64_t v9 = *(_OWORD *)(v0 + 64);
  uint64_t v10 = *(_OWORD *)(v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v4 = v12;
  *(_OWORD *)(v4 + 16) = v11;
  *(_OWORD *)(v4 + 32) = v10;
  *(_OWORD *)(v4 + 48) = v9;
  *(_OWORD *)(v4 + 64) = v14;
  *(_OWORD *)(v4 + 80) = v13;
  *(void *)(v4 + 96) = v6;
  OUTLINED_FUNCTION_86();
  return v7();
}

#error "258426794: call analysis failed (funcsize=378)"

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_78_10();
  uint64_t v25 = *(void (**)(uint64_t))(v24 + 648);
  OUTLINED_FUNCTION_77();
  v26();
  uint64_t v27 = OUTLINED_FUNCTION_19_0();
  v25(v27);
  OUTLINED_FUNCTION_3_36(*(void *)(v24 + 744));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
  OUTLINED_FUNCTION_35_0();
  return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

{
  uint64_t v24;
  void (*v25)(uint64_t);
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_78_10();
  uint64_t v25 = *(void (**)(uint64_t))(v24 + 648);
  OUTLINED_FUNCTION_77();
  v26();
  uint64_t v27 = OUTLINED_FUNCTION_19_0();
  v25(v27);
  OUTLINED_FUNCTION_3_36(*(void *)(v24 + 760));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
  OUTLINED_FUNCTION_35_0();
  return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

void closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v0 = type metadata accessor for ChatMessagesPrompt();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_5_8();
  type metadata accessor for PromptTemplate();
  _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
  static ChatMessagesPromptBuilder.buildExpression<A>(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ChatMessagesPrompt>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_258661700;
  OUTLINED_FUNCTION_35_22();
  v2();
  MEMORY[0x25A2C7750](v1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
  v3();
  OUTLINED_FUNCTION_120_0();
}

uint64_t MemoryCreationQUNetworkService.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for SamplingParameters();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_16_1();
  v1();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MemoryCreationQUNetworkService.__deallocating_deinit()
{
  MemoryCreationQUNetworkService.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

void protocol witness for MemoryCreationQUNetworkServiceProtocol.prewarm(originatorPID:) in conformance MemoryCreationQUNetworkService(Swift::Int a1)
{
}

uint64_t protocol witness for MemoryCreationQUNetworkServiceProtocol.parse(_:personNames:petNames:locations:currentTime:originatorPID:) in conformance MemoryCreationQUNetworkService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 120) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 128) = v14;
  *uint64_t v14 = v8;
  v14[1] = MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:);
  return MemoryCreationQUNetworkService.parse(_:personNames:petNames:locations:currentTime:originatorPID:)(v8 + 16, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t outlined retain of MemoryCreationQUModelResponse(uint64_t a1)
{
  return a1;
}

uint64_t dispatch thunk of MemoryCreationQUNetworkServiceProtocol.prewarm(originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MemoryCreationQUNetworkServiceProtocol.parse(_:personNames:petNames:locations:currentTime:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_66_10();
  uint64_t v51 = v32;
  uint64_t v49 = v33;
  uint64_t v50 = v34;
  uint64_t v48 = *(void *)(a30 + 16) + **(int **)(a30 + 16);
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v31 + 16) = v35;
  *uint64_t v35 = v36;
  v35[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  OUTLINED_FUNCTION_140();
  return v45(v37, v38, v39, v40, v41, v42, v43, v44, a9, v48, a30 + 16, v49, v50, v51, v30, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t ObjC metadata update function for MemoryCreationQUNetworkService()
{
  return type metadata accessor for MemoryCreationQUNetworkService();
}

uint64_t type metadata accessor for MemoryCreationQUNetworkService()
{
  uint64_t result = type metadata singleton initialization cache for MemoryCreationQUNetworkService;
  if (!type metadata singleton initialization cache for MemoryCreationQUNetworkService) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for MemoryCreationQUNetworkService()
{
  uint64_t result = type metadata accessor for SamplingParameters();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MemoryCreationQUNetworkService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MemoryCreationQUNetworkService);
}

uint64_t dispatch thunk of MemoryCreationQUNetworkService.__allocating_init(useThimble:useTemplate:featureFlagService:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
}

uint64_t _s9PromptKit010CompletionA0VAcA31GenerativeConfigurationProtocolAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)()
{
}

uint64_t OUTLINED_FUNCTION_3_36@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 80) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_7_29@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 80) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_19()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_20_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  *(_OWORD *)(a1 + 16) = a17;
  strcpy((char *)(a1 + 32), "promptTemplate");
  *(unsigned char *)(a1 + 47) = -18;
  return type metadata accessor for PromptTemplate();
}

uint64_t OUTLINED_FUNCTION_25_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13)
{
  *(_OWORD *)uint64_t v13 = a12;
  *(_OWORD *)(v13 + 16) = a11;
  *(_OWORD *)(v13 + 32) = a10;
  *(_OWORD *)(v13 + 48) = a9;
  long long v17 = *(_OWORD *)(v16 - 48);
  *(_OWORD *)(v13 + 64) = a13;
  *(_OWORD *)(v13 + 80) = v17;
  *(void *)(v13 + 96) = v14;
  return v15 + 8;
}

uint64_t OUTLINED_FUNCTION_29_22(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_32_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_18()
{
  return FunctionIdentifier.init(identifier:resourceInformation:)();
}

uint64_t OUTLINED_FUNCTION_37_20(uint64_t a1)
{
  uint64_t v6 = *(void *)(v3 - 144);
  uint64_t v7 = *(void *)(v3 - 96);
  return MEMORY[0x270F2EE18](v6, v7, a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_42_15@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = (v14 - 32) | 0x8000000000000000;
  return a14;
}

uint64_t OUTLINED_FUNCTION_43_19@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = (v10 - 32) | 0x8000000000000000;
  return a10;
}

uint64_t OUTLINED_FUNCTION_46_16()
{
  return static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
}

uint64_t OUTLINED_FUNCTION_47_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v11 - 128) = (char *)&a9 - v9;
  return v10;
}

__n128 *OUTLINED_FUNCTION_50_20(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x74706D6F7270;
  result[2].n128_u64[1] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_51_17(float *a1, float a2)
{
  *a1 = a2;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_54_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_15()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_56_10()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_57_14()
{
  return GenerativeConfigurationProtocol.functionIdentifier(_:)();
}

uint64_t OUTLINED_FUNCTION_58_11()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_60_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_63_10()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_64_8()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_66_12()
{
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

uint64_t OUTLINED_FUNCTION_69_10()
{
  uint64_t v4 = *(void *)(v2 - 88);
  return MEMORY[0x270F2FBC0](v1, v0, v4);
}

__n128 OUTLINED_FUNCTION_71_12(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17)
{
  __n128 result = a17;
  a1[1] = a17;
  return result;
}

uint64_t OUTLINED_FUNCTION_72_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_74_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

void OUTLINED_FUNCTION_79_9(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_80_10()
{
  return type metadata accessor for BindableConfiguration();
}

uint64_t OUTLINED_FUNCTION_82_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_83_7()
{
  return MEMORY[0x270F2FBC8](v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_84_9()
{
  return MEMORY[0x270F2FBC8](v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_85_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return MEMORY[0x270F2FBC0](v10, v9, a9);
}

uint64_t OUTLINED_FUNCTION_86_8()
{
  return MEMORY[0x270F2FBC0](v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_89_5(uint64_t result)
{
  *(void *)(v1 + 120) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_90_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_91_10@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a1[9] = v11;
  a1[10] = a2;
  a1[6] = a9;
  *(void *)(v10 + 56) = a10;
  return swift_bridgeObjectRetain();
}

__n128 *OUTLINED_FUNCTION_92_10(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_94_11(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

uint64_t OUTLINED_FUNCTION_95_9()
{
  uint64_t v4 = *(void *)(v2 - 88);
  return MEMORY[0x270F2FBC8](v0, v1, v4);
}

uint64_t OUTLINED_FUNCTION_96_9()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_99_8()
{
  return *(void *)(v0 - 96);
}

void OUTLINED_FUNCTION_100_9()
{
  uint64_t v2 = v0[46];
  *(void *)(v1 - 104) = v0[48];
  *(void *)(v1 - 96) = v2;
  *(void *)(v1 - 88) = v0[45];
}

uint64_t OUTLINED_FUNCTION_102_6(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return MEMORY[0x270F580E0](v1);
}

uint64_t OUTLINED_FUNCTION_103_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_105_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(v4, 0, 1, a4);
  uint64_t v6 = *(void *)(v5 - 144);
  return outlined init with copy of SamplingStrategy?(v4, v6);
}

uint64_t OUTLINED_FUNCTION_106_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_108_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_111_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_112_7()
{
  return GenerativeConfigurationProtocol.bindVariables(_:)();
}

uint64_t OUTLINED_FUNCTION_113_9()
{
  return v0;
}

void OUTLINED_FUNCTION_116_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 72) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_117_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

unint64_t OUTLINED_FUNCTION_118_6()
{
  *(void *)(v1 - 152) = v0;
  return 0xD00000000000004DLL;
}

uint64_t OUTLINED_FUNCTION_121_6()
{
  return 44;
}

uint64_t OUTLINED_FUNCTION_122_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_125_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_128_5()
{
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

uint64_t OUTLINED_FUNCTION_129_4()
{
  return *(void *)(v0 + 856);
}

uint64_t OUTLINED_FUNCTION_130_3()
{
  return swift_task_dealloc();
}

void static SearchOverrides.read()()
{
  if (one-time initialization token for defaults != -1) {
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v1 = (void *)static SearchOverrides.defaults;
    OUTLINED_FUNCTION_15_26();
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v1, sel_valueForKey_, v2);

    if (v4)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
    }
    else
    {
      memset(v38, 0, sizeof(v38));
      outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
      if (one-time initialization token for utilities != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)static Logging.utilities);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_257DC6000, v6, v7, "Registering default overrides from Plist", v8, 2u);
        OUTLINED_FUNCTION_34();
      }

      uint64_t v9 = (void *)static SearchOverrides.defaults;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_258661700;
      *(void *)(inited + 32) = 0x764F686372616553;
      *(void *)(inited + 40) = 0xEF73656469727265;
      uint64_t v11 = static SearchOverrides.loadPlistDefaults()();
      *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSDictionary]);
      *(void *)(inited + 48) = v11;
      Dictionary.init(dictionaryLiteral:)();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_registerDefaults_, isa);
    }
    uint64_t v13 = (void *)static SearchOverrides.defaults;
    OUTLINED_FUNCTION_15_26();
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v13, sel_arrayForKey_, v14);

    if (!v16
      || (uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
          v16,
          unint64_t v18 = specialized _arrayConditionalCast<A, B>(_:)(v17, &lazy cache variable for type metadata for NSDictionary), swift_bridgeObjectRelease(), !v18))
    {
      lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_34_21();
      static SearchOverrideError.invalidPayload(_:)(0xD000000000000050, v36, v35);
      swift_willThrow();
      return;
    }
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v19)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v19) {
        goto LABEL_23;
      }
    }
    uint64_t v39 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v19 < 0) {
      break;
    }
    uint64_t v20 = 0;
    uint64_t v21 = v39;
    while (v19 != v20)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x25A2C8550](v20, v18);
      }
      else {
        id v22 = *(id *)(v18 + 8 * v20 + 32);
      }
      id v23 = v22;
      SearchOverride.init(defaultsRepresentation:)((uint64_t)v23, v24, v25, v26, v27, v28, v29, v30, v37, *((unint64_t *)&v37 + 1));
      if (v0)
      {
        swift_bridgeObjectRelease();
        swift_release();

        return;
      }

      uint64_t v31 = *(void *)&v38[0];
      long long v32 = *(_OWORD *)((char *)v38 + 8);
      uint64_t v39 = v21;
      unint64_t v33 = *(void *)(v21 + 16);
      if (v33 >= *(void *)(v21 + 24) >> 1)
      {
        long long v37 = *(_OWORD *)((char *)v38 + 8);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        long long v32 = v37;
        uint64_t v21 = v39;
      }
      ++v20;
      *(void *)(v21 + 16) = v33 + 1;
      uint64_t v34 = v21 + 24 * v33;
      *(void *)(v34 + 32) = v31;
      *(_OWORD *)(v34 + 40) = v32;
      if (v19 == v20) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_27:
    swift_once();
  }
  __break(1u);
}

Swift::Bool __swiftcall SearchOverride.matches(rewrittenQuery:)(Swift::String rewrittenQuery)
{
  if (*(void *)v1 == rewrittenQuery._countAndFlagsBits && *(void **)(v1 + 8) == rewrittenQuery._object) {
    return 1;
  }
  else {
    return OUTLINED_FUNCTION_44_19();
  }
}

void SearchOverrideOutputEntity.makeResultEntity()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_105_0();
  a19 = v23;
  a20 = v24;
  uint64_t v109 = v21;
  uint64_t v108 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  uint64_t v28 = OUTLINED_FUNCTION_81(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v29);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v31 = OUTLINED_FUNCTION_81(v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v33);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v35 = OUTLINED_FUNCTION_81(v34);
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v37);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v39 = OUTLINED_FUNCTION_81(v38);
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v43 = OUTLINED_FUNCTION_81(v42);
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_22_13((uint64_t)v97 - v45);
  uint64_t v46 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  uint64_t v106 = v47;
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v49);
  a10 = (uint64_t)v97 - v50;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_75_9();
  uint64_t v52 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v54 = v53;
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_12_7();
  SearchEntity.init()();
  UUID.init()();
  uint64_t v56 = UUID.uuidString.getter();
  uint64_t v58 = v57;
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v20, v52);
  type metadata accessor for SearchEntity(0);
  *(void *)uint64_t v115 = v56;
  *(void *)&v115[8] = v58;
  EntityProperty.wrappedValue.setter();
  uint64_t v59 = v106;
  uint64_t v60 = *(void (**)(void))(v106 + 16);
  OUTLINED_FUNCTION_70_11();
  v60();
  OUTLINED_FUNCTION_70_11();
  v60();
  EntityProperty.wrappedValue.setter();
  uint64_t v61 = v59 + 8;
  uint64_t v62 = v22;
  uint64_t v63 = v107;
  uint64_t v64 = v26;
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v65(v62, v46);
  a10 = v64;
  strcpy(v115, "overrides");
  *(_WORD *)&v115[10] = 0;
  *(_DWORD *)&v115[12] = -385875968;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_70_11();
  v60();
  uint64_t v66 = v46;
  int v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 88))(v63, v46);
  if (v67 == *MEMORY[0x263F5B7B0])
  {
    uint64_t v68 = type metadata accessor for SearchOverrideOutputEntity();
    OUTLINED_FUNCTION_69_11(v68);
    uint64_t v61 = v105;
    uint64_t v69 = v109;
    SearchAppEntity.init(overridePayload:)();
    if (!v69)
    {
      uint64_t v70 = type metadata accessor for SearchAppEntity(0);
      OUTLINED_FUNCTION_18_28(v70);
      uint64_t v71 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
      uint64_t v72 = v61;
      uint64_t v73 = &a12;
LABEL_16:
      outlined init with copy of PQAVerificationModelProtocol?(v72, *(v73 - 32), v71);
      EntityProperty.wrappedValue.setter();
      outlined destroy of SearchResult?(v61, v71);
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  uint64_t v74 = v109;
  if (v67 == *MEMORY[0x263F5B7A0])
  {
    uint64_t v75 = type metadata accessor for SearchOverrideOutputEntity();
    OUTLINED_FUNCTION_69_11(v75);
    OUTLINED_FUNCTION_68_13();
    SearchGlobalEntity.init(overridePayload:)();
    if (!v21)
    {
      uint64_t v76 = type metadata accessor for SearchGlobalEntity();
      OUTLINED_FUNCTION_18_28(v76);
      uint64_t v71 = &demangling cache variable for type metadata for SearchGlobalEntity?;
      uint64_t v72 = v59 + 8;
      uint64_t v73 = &a10;
      goto LABEL_16;
    }
LABEL_18:
    _s10OmniSearch0B6EntityVWOhTm_0(a10, (void (*)(void))type metadata accessor for SearchEntity);
    goto LABEL_19;
  }
  if (v67 == *MEMORY[0x263F5B7B8])
  {
    uint64_t v77 = type metadata accessor for SearchOverrideOutputEntity();
    OUTLINED_FUNCTION_69_11(v77);
    OUTLINED_FUNCTION_68_13();
    SearchSpotlightEntity.init(overridePayload:)();
    if (!v21)
    {
      uint64_t v78 = type metadata accessor for SearchSpotlightEntity(0);
      OUTLINED_FUNCTION_18_28(v78);
      uint64_t v71 = (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?;
      uint64_t v72 = v59 + 8;
      uint64_t v73 = &a9;
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  if (v67 == *MEMORY[0x263F5B790])
  {
    uint64_t v79 = type metadata accessor for SearchOverrideOutputEntity();
    id v80 = OUTLINED_FUNCTION_69_11(v79);
    EventEntity.init(overridePayload:)((uint64_t)v80, v81, v82, v83, v84, v85, v86, v87, v97[0], v97[1], v98, v99, v100, v101, v102, v103, v104, v105, v106,
      v107);
    if (v74) {
      goto LABEL_18;
    }
    long long v110 = *(_OWORD *)v115;
    long long v111 = *(_OWORD *)&v115[16];
    long long v112 = v116;
    long long v113 = v117;
    long long v114 = v118;
  }
  else
  {
    if (v67 == *MEMORY[0x263F5B7A8])
    {
      uint64_t v88 = type metadata accessor for SearchOverrideOutputEntity();
      OUTLINED_FUNCTION_69_11(v88);
      OUTLINED_FUNCTION_68_13();
      IdCardEntity.init(overridePayload:)();
      if (!v21)
      {
        uint64_t v89 = type metadata accessor for IdCardEntity();
        OUTLINED_FUNCTION_18_28(v89);
        uint64_t v71 = &demangling cache variable for type metadata for IdCardEntity?;
        uint64_t v72 = v59 + 8;
        uint64_t v73 = (uint64_t *)&v118 + 1;
        goto LABEL_16;
      }
      goto LABEL_18;
    }
    if (v67 != *MEMORY[0x263F5B798])
    {
      *(void *)uint64_t v115 = 0;
      *(void *)&v115[8] = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      OUTLINED_FUNCTION_177_0();
      v93._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v93);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v94 = *(void *)v115;
      uint64_t v95 = *(void *)&v115[8];
      lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
      OUTLINED_FUNCTION_42();
      *uint64_t v96 = v94;
      v96[1] = v95;
      swift_willThrow();
      _s10OmniSearch0B6EntityVWOhTm_0(a10, (void (*)(void))type metadata accessor for SearchEntity);
      v65(v63, v66);
      goto LABEL_19;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
    uint64_t v91 = v98;
    LocalizedStringResource.init(stringLiteral:)();
    uint64_t v92 = MEMORY[0x25A2C4900](v91);
    strcpy(v115, "Override123");
    *(_DWORD *)&v115[12] = -352321536;
    swift_retain_n();
    outlined copy of Data?(0, 0xF000000000000000);
    EntityProperty.wrappedValue.setter();
    swift_release();
    outlined consume of Data?(0, 0xF000000000000000);
    swift_release();
    outlined consume of Data?(0, 0xF000000000000000);
    swift_retain();
    outlined copy of Data?(0, 0xF000000000000000);
    swift_release();
    *(void *)uint64_t v115 = v92;
    *(_OWORD *)&v115[8] = xmmword_258665BD0;
  }
  EntityProperty.wrappedValue.setter();
LABEL_17:
  SearchEntity.validateParameters()();
  if (v90) {
    goto LABEL_18;
  }
LABEL_19:
  OUTLINED_FUNCTION_120_0();
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  while (1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v2) {
      break;
    }
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return v9;
    }
LABEL_6:
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v2 = i - 4;
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2C8550](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v6 = v5;
      uint64_t v7 = i - 3;
      if (__OFADD__(v2, 1)) {
        break;
      }
      if (!swift_dynamicCastObjCProtocolConditional())
      {

        swift_release();
        return 0;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v7 == v3) {
        return v9;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_6;
  }
  return v9;
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1)
{
  return specialized _arrayConditionalCast<A, B>(_:)(a1, (unint64_t *)&lazy cache variable for type metadata for IMSPIMessage);
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1, unint64_t *a2)
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v4) {
    return v8;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    outlined init with copy of Any(i, (uint64_t)v7);
    type metadata accessor for NSUserDefaults(0, a2);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v4) {
      return v8;
    }
  }
  swift_release();

  return 0;
}

uint64_t SearchOverrideError.message.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

void static SearchOverrideError.invalidPayload(_:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
}

OmniSearch::SearchOverrideError __swiftcall SearchOverrideError.init(message:)(OmniSearch::SearchOverrideError message)
{
  OmniSearch::SearchOverrideError *v1 = message;
  return message;
}

void static SearchOverrideError.nilResult()(void *a1@<X8>)
{
  *a1 = 0xD000000000000045;
  a1[1] = 0x80000002586831F0;
}

void static SearchOverrideError.unsupported(_:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
}

void static SearchOverrideError.invalidPayload(_:)(uint64_t a1@<X0>, void *a2@<X1>, Swift::Int a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  _StringGuts.grow(_:)(a3);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = a1;
  v11._object = a2;
  String.append(_:)(v11);
  *a6 = a4;
  a6[1] = a5;
}

id one-time initialization function for defaults()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  id result = @nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000014, 0x80000002586834E0);
  if (result) {
    static SearchOverrides.defaults = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t static SearchOverrides.loadPlistDefaults()()
{
  type metadata accessor for OmniSearchService();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  OUTLINED_FUNCTION_177_0();
  outlined bridged method (mbbnb) of @objc NSBundle.path(forResource:ofType:)(0xD000000000000010, v2, 0x7473696C70, 0xE500000000000000, v1);
  uint64_t v4 = v3;

  if (v4)
  {
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSArray);
    v5._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_79_0();
    unint64_t v6 = (unint64_t)NSArray.__allocating_init(contentsOfFile:)(v5);
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
      static Array._conditionallyBridgeFromObjectiveC(_:result:)();
    }
  }
  if (one-time initialization token for utilities != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logging.utilities);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    Swift::String v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v11 = 0;
    _os_log_impl(&dword_257DC6000, v9, v10, "Failed to load DefaultOverrides.plist", v11, 2u);
    MEMORY[0x25A2C94B0](v11, -1, -1);
  }

  return MEMORY[0x263F8EE78];
}

void SearchOverride.init(defaultsRepresentation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for SearchOverrideOutputEntity();
  unint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16 - 8);
  OUTLINED_FUNCTION_39();
  unint64_t v18 = (void *)MEMORY[0x25A2C7AB0](0x74614D7475706E69, 0xEA00000000006863);
  id v19 = objc_msgSend(v13, sel_objectForKey_, v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)();
    uint64_t v20 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v20, v21, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!v43[3])
  {
    outlined destroy of SearchResult?((uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for Any?);
    goto LABEL_13;
  }
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
  if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
  {
LABEL_13:
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_34_21();
    static SearchOverrideError.invalidPayload(_:)(0xD00000000000003FLL, v29, v28);
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v40 = v15;
  uint64_t v22 = (void *)MEMORY[0x25A2C7AB0](0x6E4574757074756FLL, 0xEE00736569746974);
  id v23 = objc_msgSend(v13, sel_objectForKey_, v22);

  if (v23)
  {
    _bridgeAnyObjectToAny(_:)();
    uint64_t v24 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v24, v25, (uint64_t *)&demangling cache variable for type metadata for Any?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSDictionary]);
  if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
  {

    goto LABEL_13;
  }
  unint64_t v26 = a10;
  id v27 = (id)a10;
  SearchOverride.InputMatch.init(defaultsRepresentation:)(v27, v43);
  if (v10)
  {
    swift_bridgeObjectRelease();

LABEL_14:
    goto LABEL_15;
  }
  uint64_t v30 = v43[1];
  uint64_t v39 = v43[0];
  if (a10 >> 62) {
    goto LABEL_33;
  }
  uint64_t v31 = *(void *)((a10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v32 = v40;
    if (!v31) {
      break;
    }
    unint64_t v41 = v17;
    uint64_t v37 = v30;
    uint64_t v38 = v27;
    v43[0] = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v31 < 0)
    {
      __break(1u);
      return;
    }
    id v27 = 0;
    uint64_t v30 = v43[0];
    unint64_t v42 = v26 & 0xC000000000000001;
    while ((id)v31 != v27)
    {
      if (v42) {
        id v33 = (id)MEMORY[0x25A2C8550](v27, v26);
      }
      else {
        id v33 = *(id *)(v26 + 8 * (void)v27 + 32);
      }
      id v34 = v33;
      SearchOverrideOutputEntity.init(defaultsRepresentation:)();
      unint64_t v17 = v26;

      v43[0] = v30;
      unint64_t v35 = *(void *)(v30 + 16);
      if (v35 >= *(void *)(v30 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v30 = v43[0];
      }
      id v27 = (char *)v27 + 1;
      *(void *)(v30 + 16) = v35 + 1;
      outlined init with take of SearchOverrideOutputEntity(v11, v30+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v35);
      unint64_t v26 = v17;
      if ((id)v31 == v27)
      {
        uint64_t v36 = v37;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v32 = v40;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v36 = v30;
  uint64_t v30 = MEMORY[0x263F8EE78];
LABEL_31:
  *uint64_t v32 = v39;
  v32[1] = v36;
  _OWORD v32[2] = v30;
LABEL_15:
  OUTLINED_FUNCTION_120_0();
}

NSArray_optional __swiftcall NSArray.__allocating_init(contentsOfFile:)(Swift::String contentsOfFile)
{
  object = contentsOfFile._object;
  uint64_t countAndFlagsBits = contentsOfFile._countAndFlagsBits;
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v4 = (void *)MEMORY[0x25A2C7AB0](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  Swift::String v5 = (objc_class *)objc_msgSend(v3, sel_initWithContentsOfFile_, v4);

  uint64_t v7 = v5;
  result.value.super.Class isa = v7;
  result.Swift::Bool is_nil = v6;
  return result;
}

void static SearchOverrides.add(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  static SearchOverrides.read()();
  if (!v1)
  {
    uint64_t v6 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = OUTLINED_FUNCTION_79_0();
    unint64_t v9 = specialized Collection.firstIndex(where:)(v7, v8, v3);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()();
        uint64_t v6 = v18;
      }
      unint64_t v12 = *(void *)(v6 + 16);
      if (v9 >= v12)
      {
        __break(1u);
        return;
      }
      unint64_t v13 = v12 - 1;
      specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v6 + 24 * v9 + 56), v12 - 1 - v9, (char *)(v6 + 24 * v9 + 32));
      *(void *)(v6 + 16) = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v6 = v16;
    }
    unint64_t v14 = *(void *)(v6 + 16);
    if (v14 >= *(void *)(v6 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v6 = v17;
    }
    *(void *)(v6 + 16) = v14 + 1;
    uint64_t v15 = (void *)(v6 + 24 * v14);
    v15[4] = v2;
    v15[5] = v3;
    v15[6] = v4;
    static SearchOverrides.write(_:)(v6);
    swift_bridgeObjectRelease();
  }
}

uint64_t static SearchOverride.InputMatch.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return OUTLINED_FUNCTION_44_19();
  }
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)(a1 + 40);
    while (1)
    {
      BOOL v8 = *(v7 - 1) == a2 && *v7 == a3;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      v7 += 3;
      if (v4 == ++v6) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void static SearchOverrides.write(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = a1 + 48;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      SearchOverride.defaultsRepresentation()();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4) {
        break;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v3 += 24;
      if (!--v1) {
        goto LABEL_5;
      }
    }
    swift_release();
  }
  else
  {
LABEL_5:
    if (one-time initialization token for defaults != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)static SearchOverrides.defaults;
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)MEMORY[0x25A2C7AB0](0x764F686372616553, 0xEF73656469727265);
    objc_msgSend(v5, sel_setObject_forKey_, isa, v7);
  }
}

void static SearchOverrides.reset()()
{
  if (one-time initialization token for defaults != -1) {
    swift_once();
  }
  id v0 = (void *)static SearchOverrides.defaults;
  OUTLINED_FUNCTION_15_26();
  uint64_t v2 = v1;
  objc_msgSend(v0, sel_setValue_forKey_, 0, v1);
}

NSDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverride.defaultsRepresentation()()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v2 = type metadata accessor for SearchOverrideOutputEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v27 = v3;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_39();
  uint64_t v25 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)>);
  uint64_t v5 = OUTLINED_FUNCTION_93_9();
  *(void *)(v5 + 32) = 0x74614D7475706E69;
  uint64_t v6 = MEMORY[0x263F8D310];
  *(_OWORD *)(v5 + 16) = xmmword_258661D60;
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 40) = 0xEA00000000006863;
  v7.super.Class isa = SearchOverride.InputMatch.defaultsRepresentation()().super.isa;
  if (v8)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v5 + 32);
    *(void *)(v5 + 16) = 0;
    swift_release();
  }
  else
  {
    Class isa = v7.super.isa;
    uint64_t v10 = v2;
    uint64_t v11 = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
    *(void *)(v5 + 64) = isa;
    uint64_t v12 = MEMORY[0x263F8D310];
    *(void *)(v5 + 120) = MEMORY[0x263F8D310];
    *(void *)(v5 + 88) = v11;
    strcpy((char *)(v5 + 96), "outputEntities");
    *(unsigned char *)(v5 + 111) = -18;
    uint64_t v13 = *(void *)(v25 + 16);
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (v13)
    {
      uint64_t v24 = v5;
      uint64_t v26 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v15 = v25 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
      uint64_t v28 = *(void *)(v27 + 72);
      do
      {
        outlined init with copy of SearchOverrideOutputEntity(v15, v1);
        uint64_t v16 = OUTLINED_FUNCTION_93_9();
        *(_OWORD *)(v16 + 16) = xmmword_258661D60;
        *(void *)(v16 + 56) = v12;
        OUTLINED_FUNCTION_90_10();
        *(void *)(v17 + 32) = v18;
        *(void *)(v17 + 40) = 0xEA00000000006570;
        *(void *)(v16 + 64) = SearchResultType.rawValue.getter();
        *(void *)(v16 + 72) = v19;
        *(void *)(v16 + 120) = v12;
        OUTLINED_FUNCTION_86_9();
        *(void *)(v16 + 88) = v12;
        *(void *)(v16 + 96) = v20;
        *(void *)(v16 + 104) = 0xE700000000000000;
        uint64_t v21 = *(void **)(v1 + *(int *)(v10 + 20));
        *(void *)(v16 + 152) = v11;
        *(void *)(v16 + 128) = v21;
        id v22 = v21;
        NSDictionary.init(dictionaryLiteral:)();
        _s10OmniSearch0B6EntityVWOhTm_0(v1, (void (*)(void))type metadata accessor for SearchOverrideOutputEntity);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v15 += v28;
        --v13;
      }
      while (v13);
      uint64_t v14 = v26;
      swift_bridgeObjectRelease();
      uint64_t v5 = v24;
    }
    *(void *)(v5 + 152) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSDictionary]);
    *(void *)(v5 + 128) = v14;
    NSDictionary.init(dictionaryLiteral:)();
  }
  OUTLINED_FUNCTION_120_0();
  return result;
}

void SearchOverride.InputMatch.init(defaultsRepresentation:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)MEMORY[0x25A2C7AB0](1684957547, 0xE400000000000000);
  id v5 = objc_msgSend(a1, sel_valueForKey_, v4);

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)&v14, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!v17)
  {
    outlined destroy of SearchResult?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for Any?);
    goto LABEL_10;
  }
  if ((OUTLINED_FUNCTION_79_10() & 1) == 0) {
    goto LABEL_10;
  }
  if (v12 == 0xD000000000000013 && v13 == 0x80000002586832F0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
LABEL_10:
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_42();
    uint64_t v7 = 0xD000000000000026;
    uint64_t v8 = "Override kind is missing or unexpected";
LABEL_11:
    OUTLINED_FUNCTION_57_15(v7, (void *)((unint64_t)(v8 - 32) | 0x8000000000000000), v6);

    return;
  }
LABEL_13:
  uint64_t v10 = (void *)MEMORY[0x25A2C7AB0](0x7972657571, 0xE500000000000000);
  id v11 = objc_msgSend(a1, sel_valueForKey_, v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)&v14, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!v17)
  {
    outlined destroy of SearchResult?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for Any?);
    goto LABEL_20;
  }
  if ((OUTLINED_FUNCTION_79_10() & 1) == 0)
  {
LABEL_20:
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_42();
    uint64_t v7 = 0xD000000000000019;
    uint64_t v8 = "Override query is missing";
    goto LABEL_11;
  }

  *a2 = v12;
  a2[1] = v13;
}

NSDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverride.InputMatch.defaultsRepresentation()()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)>);
  uint64_t v3 = OUTLINED_FUNCTION_93_9();
  *(_OWORD *)(v3 + 16) = xmmword_258661D60;
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(v3 + 32) = 1684957547;
  *(void *)(v3 + 40) = 0xE400000000000000;
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = 0xD000000000000013;
  *(void *)(v3 + 72) = 0x80000002586832F0;
  *(void *)(v3 + 88) = v4;
  *(void *)(v3 + 96) = 0x7972657571;
  *(void *)(v3 + 104) = 0xE500000000000000;
  *(void *)(v3 + 152) = v4;
  *(void *)(v3 + 120) = v4;
  *(void *)(v3 + 128) = v2;
  *(void *)(v3 + 136) = v1;
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
  swift_bridgeObjectRetain();
  return (NSDictionary)NSDictionary.init(dictionaryLiteral:)();
}

uint64_t SearchOverride.inputMatch.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchOverride.inputMatch.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*SearchOverride.inputMatch.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchOverride.outputEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchOverride.outputEntities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SearchOverride.outputEntities.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void *SearchOverride.init(inputMatch:outputEntities:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = a2;
  return result;
}

void SearchOverrideOutputEntity.init(defaultsRepresentation:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v3 = v2;
  uint64_t v26 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_22_15();
  uint64_t v7 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_39();
  id v11 = (void *)MEMORY[0x25A2C7AB0](0x7954797469746E65, 0xEA00000000006570);
  id v12 = objc_msgSend(v3, sel_valueForKey_, v11);

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)();
    uint64_t v13 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v13, v14, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!v25[3])
  {
    long long v15 = (uint64_t *)&demangling cache variable for type metadata for Any?;
    uint64_t v16 = v25;
    goto LABEL_9;
  }
  if (OUTLINED_FUNCTION_12_30())
  {
    SearchResultType.init(rawValue:)();
    if (__swift_getEnumTagSinglePayload(v1, 1, v7) == 1)
    {
      long long v15 = &demangling cache variable for type metadata for SearchResultType?;
      uint64_t v16 = (void *)v1;
LABEL_9:
      outlined destroy of SearchResult?((uint64_t)v16, v15);
      goto LABEL_10;
    }
    id v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v23(v0, v1, v7);
    uint64_t v19 = (void *)MEMORY[0x25A2C7AB0](0x64616F6C796170, 0xE700000000000000);
    id v20 = objc_msgSend(v3, sel_valueForKey_, v19);

    if (v20)
    {
      _bridgeAnyObjectToAny(_:)();
      uint64_t v21 = swift_unknownObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_23_19();
    }
    OUTLINED_FUNCTION_22_23(v21, v22, (uint64_t *)&demangling cache variable for type metadata for Any?);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
    if (OUTLINED_FUNCTION_12_30())
    {

      v23(v26, v0, v7);
      *(void *)(v26 + *(int *)(type metadata accessor for SearchOverrideOutputEntity() + 20)) = v24;
      goto LABEL_11;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  }
LABEL_10:
  lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_34_21();
  OUTLINED_FUNCTION_57_15(0xD00000000000004BLL, v18, v17);

LABEL_11:
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

NSDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverrideOutputEntity.defaultsRepresentation()()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)>);
  uint64_t v1 = OUTLINED_FUNCTION_93_9();
  uint64_t v2 = MEMORY[0x263F8D310];
  *(_OWORD *)(v1 + 16) = xmmword_258661D60;
  *(void *)(v1 + 56) = v2;
  OUTLINED_FUNCTION_90_10();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = 0xEA00000000006570;
  *(void *)(v1 + 64) = SearchResultType.rawValue.getter();
  *(void *)(v1 + 72) = v5;
  *(void *)(v1 + 120) = v2;
  OUTLINED_FUNCTION_86_9();
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v6;
  *(void *)(v1 + 104) = 0xE700000000000000;
  uint64_t v7 = *(void **)(v0 + *(int *)(type metadata accessor for SearchOverrideOutputEntity() + 20));
  *(void *)(v1 + 152) = type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for NSDictionary);
  *(void *)(v1 + 128) = v7;
  id v8 = v7;
  return (NSDictionary)NSDictionary.init(dictionaryLiteral:)();
}

uint64_t SearchOverrideOutputEntity.entityType.getter()
{
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_7_2();
  uint64_t v0 = OUTLINED_FUNCTION_79_0();
  return v1(v0);
}

uint64_t SearchOverrideOutputEntity.entityType.setter(uint64_t a1)
{
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*SearchOverrideOutputEntity.entityType.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

id SearchOverrideOutputEntity.payload.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SearchOverrideOutputEntity() + 20));
  return v1;
}

void SearchOverrideOutputEntity.payload.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SearchOverrideOutputEntity() + 20);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*SearchOverrideOutputEntity.payload.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void SearchAppEntity.init(overridePayload:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_22_15();
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_15();
  uint64_t v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  *uint64_t v4 = MEMORY[0x25A2C4900](v13);
  LocalizedStringResource.init(stringLiteral:)();
  v4[1] = MEMORY[0x25A2C4900](v13);
  LocalizedStringResource.init(stringLiteral:)();
  _OWORD v4[2] = MEMORY[0x25A2C4900](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  void v4[3] = MEMORY[0x25A2C4900](v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  LocalizedStringResource.init(stringLiteral:)();
  void v4[4] = MEMORY[0x25A2C4910](v13);
  uint64_t v14 = type metadata accessor for SearchAppEntity(0);
  v4[5] = 0;
  v4[6] = 0;
  uint64_t v15 = (uint64_t)v4 + *(int *)(v14 + 40);
  uint64_t v16 = type metadata accessor for SearchResult(0);
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  *(_OWORD *)((char *)v4 + *(int *)(v14 + 44)) = xmmword_258665BD0;
  UUID.init()();
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v5);
  v38[0] = v17;
  v38[1] = v19;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_66_13();
  uint64_t v21 = v20;
  id v22 = OUTLINED_FUNCTION_63_11();

  if (v22)
  {
    OUTLINED_FUNCTION_36_20();
    uint64_t v23 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v23, v24, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v39)
  {
    if (OUTLINED_FUNCTION_12_30())
    {
      uint64_t v25 = v37;
      goto LABEL_9;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_47_15();
LABEL_9:
  OUTLINED_FUNCTION_87_10(v25);
  uint64_t v26 = (void *)MEMORY[0x25A2C7AB0](0x644965707974, 0xE600000000000000);
  id v27 = OUTLINED_FUNCTION_63_11();

  if (v27)
  {
    OUTLINED_FUNCTION_36_20();
    uint64_t v28 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v28, v29, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v39)
  {
    if (OUTLINED_FUNCTION_12_30())
    {
      uint64_t v30 = v37;
      goto LABEL_17;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_47_15();
LABEL_17:
  OUTLINED_FUNCTION_87_10(v30);
  uint64_t v31 = (void *)MEMORY[0x25A2C7AB0](0x6C6F636F746F7270, 0xEA00000000006449);
  id v32 = OUTLINED_FUNCTION_63_11();

  if (v32)
  {
    OUTLINED_FUNCTION_36_20();
    uint64_t v33 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v33, v34, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v39)
  {
    if (OUTLINED_FUNCTION_12_30())
    {
      uint64_t v35 = v37;
      goto LABEL_25;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_47_15();
LABEL_25:
  OUTLINED_FUNCTION_87_10(v35);
  SearchAppEntity.validateParameters()();

  if (v36) {
    _s10OmniSearch0B6EntityVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for SearchAppEntity);
  }
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

void SearchGlobalEntity.init(overridePayload:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_15();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_12_7();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v15 = OUTLINED_FUNCTION_81(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_95_1();
  uint64_t v18 = v16 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v36 - v20;
  v36[4] = v2;
  SearchGlobalEntity.init(_:)();
  outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v21, v18, &demangling cache variable for type metadata for SearchGlobalEntity?);
  if (__swift_getEnumTagSinglePayload(v18, 1, v10) == 1)
  {
    outlined destroy of SearchResult?(v18, &demangling cache variable for type metadata for SearchGlobalEntity?);
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_42();
    static SearchOverrideError.invalidPayload(_:)(0xD000000000000022, (void *)0x8000000258683380, v22);
    swift_willThrow();

    uint64_t v23 = (uint64_t)v21;
  }
  else
  {
    v36[0] = v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v4, v18, v10);
    v36[1] = v4;
    OUTLINED_FUNCTION_64_0();
    v24();
    OUTLINED_FUNCTION_177_0();
    uint64_t v25 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000021);
    id v26 = objc_msgSend(v2, sel_valueForKey_, v25);

    if (v26)
    {
      _bridgeAnyObjectToAny(_:)();
      uint64_t v27 = swift_unknownObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_23_19();
    }
    OUTLINED_FUNCTION_22_23(v27, v28, (uint64_t *)&demangling cache variable for type metadata for Any?);
    if (v39)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
      OUTLINED_FUNCTION_12_30();
    }
    else
    {
      outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
    }
    SearchGlobalEntity.supportedTypeIdentifiersForExport.setter();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
    OUTLINED_FUNCTION_46_17();
    uint64_t v30 = v29;
    id v31 = objc_msgSend(v2, sel_valueForKey_, v29);

    if (v31)
    {
      OUTLINED_FUNCTION_36_20();
      uint64_t v32 = swift_unknownObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_23_19();
    }
    uint64_t v34 = v36[0];
    OUTLINED_FUNCTION_22_23(v32, v33, (uint64_t *)&demangling cache variable for type metadata for Any?);
    if (v39)
    {
      if (OUTLINED_FUNCTION_12_30())
      {
        uint64_t v35 = (void *)OverrideExperience.init(rawValue:)(v37);
        OverrideExperience.mockExperienceFile.getter(v35, v34);
        SearchGlobalEntity.experienceFile.setter();
      }
    }
    else
    {

      outlined destroy of SearchResult?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
    }
    uint64_t v23 = (uint64_t)v21;
  }
  outlined destroy of SearchResult?(v23, &demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_120_0();
}

void SearchSpotlightEntity.init(overridePayload:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v69 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_185_0();
  uint64_t v66 = v9;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (uint64_t)&v62 - v11;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_75_9();
  uint64_t v68 = type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_1();
  uint64_t v64 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_184_0();
  uint64_t v63 = v15;
  uint64_t v16 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_59_0();
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v21 = OUTLINED_FUNCTION_81(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_97_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_16_14();
  *(void *)uint64_t v6 = MEMORY[0x25A2C4900](v2);
  *(_OWORD *)(v6 + 8) = xmmword_258665BD0;
  OUTLINED_FUNCTION_62_11();
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)(v6 + 24) = MEMORY[0x25A2C4900](v2);
  OUTLINED_FUNCTION_61_10();
  *(void *)(v6 + 32) = MEMORY[0x25A2C4900](v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_31_22();
  *(void *)(v6 + 40) = MEMORY[0x25A2C48A0](v2);
  OUTLINED_FUNCTION_16_14();
  *(void *)(v6 + 48) = MEMORY[0x25A2C48A0](v2);
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)(v6 + 56) = MEMORY[0x25A2C48A0](v2);
  uint64_t v22 = type metadata accessor for SearchSpotlightEntity(0);
  uint64_t v23 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_18_10(v23);
  uint64_t v24 = *(int *)(v22 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_16_14();
  uint64_t v25 = MEMORY[0x25A2C4900](v2);
  uint64_t v65 = v24;
  *(void *)(v6 + v24) = v25;
  UUID.init()();
  uint64_t v26 = UUID.uuidString.getter();
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v16);
  uint64_t v29 = v69;
  uint64_t v30 = (uint64_t *)(v6 + *(int *)(v22 + 52));
  *uint64_t v30 = v26;
  v30[1] = v28;
  OUTLINED_FUNCTION_177_0();
  id v31 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000012);
  id v32 = OUTLINED_FUNCTION_55_16();

  if (v32)
  {
    OUTLINED_FUNCTION_36_20();
    uint64_t v33 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  uint64_t v35 = v68;
  OUTLINED_FUNCTION_22_23(v33, v34, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (!v72)
  {
    outlined destroy of SearchResult?((uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Any?);
    __swift_storeEnumTagSinglePayload(v3, 1, 1, v35);
    goto LABEL_9;
  }
  int v36 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v3, v36 ^ 1u, 1, v35);
  if (__swift_getEnumTagSinglePayload(v3, 1, v35) == 1)
  {
LABEL_9:
    outlined destroy of SearchResult?(v3, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    *(void *)(v6 + 64) = 0;
    *(void *)(v6 + 72) = 0;
    uint64_t v43 = v67;
    __swift_storeEnumTagSinglePayload(v67, 1, 1, v35);
    outlined init with copy of PQAVerificationModelProtocol?(v43, v66, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    EntityProperty.wrappedValue.setter();
    outlined destroy of SearchResult?(v43, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v63, v3, v35);
  uint64_t v37 = IntentFile.data.getter();
  unint64_t v39 = v38;
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
  uint64_t v40 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
  if (v0)
  {

    outlined consume of Data._Representation(v37, v39);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v44 = (void *)v40;
    outlined consume of Data._Representation(v37, v39);
    if (v44)
    {
      id v45 = objc_msgSend(v44, sel_attributeSet);

      uint64_t v41 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.identifier.getter(v45);
    }
    else
    {
      uint64_t v41 = 0;
      uint64_t v42 = 0;
    }
  }
  *(void *)(v6 + 64) = v41;
  *(void *)(v6 + 72) = v42;
  uint64_t v47 = v63;
  uint64_t v46 = v64;
  uint64_t v48 = v67;
  OUTLINED_FUNCTION_64_0();
  v49();
  __swift_storeEnumTagSinglePayload(v48, 0, 1, v35);
  outlined init with copy of PQAVerificationModelProtocol?(v48, v66, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?(v48, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v35);
LABEL_14:
  uint64_t v50 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000021, 0x80000002586801A0);
  id v51 = OUTLINED_FUNCTION_55_16();

  if (v51)
  {
    OUTLINED_FUNCTION_36_20();
    uint64_t v52 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v52, v53, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v72)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    if (OUTLINED_FUNCTION_12_30())
    {
      uint64_t v54 = v70;
      goto LABEL_22;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  uint64_t v54 = MEMORY[0x263F8EE78];
LABEL_22:
  v71[0] = v54;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_66_13();
  uint64_t v56 = v55;
  id v57 = OUTLINED_FUNCTION_55_16();

  if (v57)
  {
    OUTLINED_FUNCTION_36_20();
    uint64_t v58 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_19();
  }
  OUTLINED_FUNCTION_22_23(v58, v59, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v72)
  {
    if (OUTLINED_FUNCTION_12_30())
    {
      uint64_t v60 = v70;
      goto LABEL_30;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_47_15();
LABEL_30:
  OUTLINED_FUNCTION_87_10(v60);
  SearchSpotlightEntity.validateParameters()();

  if (v61) {
    _s10OmniSearch0B6EntityVWOhTm_0(v6, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  }
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

void EventEntity.init(overridePayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_105_0();
  a19 = v21;
  a20 = v22;
  id v248 = v20;
  id v24 = v23;
  uint64_t v243 = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
  uint64_t v27 = OUTLINED_FUNCTION_81(v26);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_184_0();
  uint64_t v29 = OUTLINED_FUNCTION_22_13(v28);
  uint64_t v229 = type metadata accessor for Trip(v29);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v32);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
  uint64_t v34 = OUTLINED_FUNCTION_81(v33);
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_184_0();
  uint64_t v36 = OUTLINED_FUNCTION_22_13(v35);
  uint64_t v232 = type metadata accessor for Party(v36);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v39);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
  uint64_t v41 = OUTLINED_FUNCTION_81(v40);
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_184_0();
  uint64_t v43 = OUTLINED_FUNCTION_22_13(v42);
  uint64_t v234 = type metadata accessor for Appointment(v43);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v46);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
  uint64_t v48 = OUTLINED_FUNCTION_81(v47);
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_184_0();
  uint64_t v50 = OUTLINED_FUNCTION_22_13(v49);
  uint64_t v236 = type metadata accessor for TicketedShow(v50);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v53);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
  uint64_t v55 = OUTLINED_FUNCTION_81(v54);
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_184_0();
  uint64_t v57 = OUTLINED_FUNCTION_22_13(v56);
  uint64_t v237 = type metadata accessor for TicketedTransportation(v57);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v59);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v60);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
  uint64_t v62 = OUTLINED_FUNCTION_81(v61);
  MEMORY[0x270FA5388](v62);
  OUTLINED_FUNCTION_184_0();
  uint64_t v64 = OUTLINED_FUNCTION_22_13(v63);
  uint64_t v238 = type metadata accessor for RentalCarReservation(v64);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v65);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v67);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
  uint64_t v69 = OUTLINED_FUNCTION_81(v68);
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_184_0();
  uint64_t v71 = OUTLINED_FUNCTION_22_13(v70);
  uint64_t v239 = type metadata accessor for RestaurantReservation(v71);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v72);
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v73);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v74);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
  uint64_t v76 = OUTLINED_FUNCTION_81(v75);
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_184_0();
  uint64_t v78 = OUTLINED_FUNCTION_22_13(v77);
  uint64_t v241 = type metadata accessor for HotelReservation(v78);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v79);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v80);
  OUTLINED_FUNCTION_194_0((uint64_t)&v219 - v81);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
  uint64_t v83 = OUTLINED_FUNCTION_81(v82);
  MEMORY[0x270FA5388](v83);
  OUTLINED_FUNCTION_184_0();
  uint64_t v245 = v84;
  uint64_t v244 = type metadata accessor for FlightReservation(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v85);
  OUTLINED_FUNCTION_185_0();
  uint64_t v246 = v86;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v87);
  OUTLINED_FUNCTION_27_10();
  os_log_type_t v247 = v88;
  uint64_t v89 = type metadata accessor for LocalizedStringResource();
  uint64_t v90 = OUTLINED_FUNCTION_81(v89);
  MEMORY[0x270FA5388](v90);
  uint64_t v92 = (char *)&v219 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  unint64_t v93 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  a10 = MEMORY[0x25A2C4880](v92, v93);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v95 = v94;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_10_14();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v97 = v96;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v99 = v98;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v101 = v100;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v103 = v102;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v105 = v104;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_10_14();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v107 = v106;
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
  id v108 = v248;
  static CSSearchableItem.makeFrom(overridePayload:)();
  if (!v108)
  {
    uint64_t v225 = v107;
    uint64_t v226 = v105;
    uint64_t v220 = v103;
    uint64_t v222 = v101;
    uint64_t v223 = v99;
    uint64_t v219 = 0;
    uint64_t v224 = v97;
    uint64_t v221 = v95;
    uint64_t v109 = OUTLINED_FUNCTION_48_13();
    long long v111 = v110;
    outlined bridged method (mbnn) of @objc CSSearchableItem.bundleID.setter(v109, v112, v110);
    *(void *)&long long v256 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *((void *)&v256 + 1) = v113;
    swift_bridgeObjectRetain();
    uint64_t v114 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    id v248 = v24;
    id v115 = objc_msgSend(v24, sel___swift_objectForKeyedSubscript_, v114);
    swift_unknownObjectRelease();
    if (v115)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v256 = 0u;
      long long v257 = 0u;
    }
    outlined init with take of PQAVerificationModelProtocol?((uint64_t)&v256, (uint64_t)&v249, (uint64_t *)&demangling cache variable for type metadata for Any?);
    id v24 = v248;
    if (*((void *)&v250 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v117 = v254;
        uint64_t v116 = v255;
        swift_bridgeObjectRelease();
        BOOL v119 = static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v118 == v116;
        if (v119)
        {
          swift_bridgeObjectRelease();
          id v122 = v246;
          uint64_t v121 = (uint64_t)v247;
        }
        else
        {
          char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          id v122 = v246;
          uint64_t v121 = (uint64_t)v247;
          if ((v120 & 1) == 0)
          {
            if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v123 == (void *)v116)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_71_13();
            }
            else
            {
              uint64_t v125 = v123;
              char v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_71_13();
              if ((v126 & 1) == 0)
              {
                if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v127 == v125)
                {
                  swift_bridgeObjectRelease();
                }
                else
                {
                  OUTLINED_FUNCTION_37_21();
                  OUTLINED_FUNCTION_38_18();
                  if ((v116 & 1) == 0)
                  {
                    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v129 == v125)
                    {
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      OUTLINED_FUNCTION_37_21();
                      OUTLINED_FUNCTION_38_18();
                      if ((v116 & 1) == 0)
                      {
                        if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v131 == v125)
                        {
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          OUTLINED_FUNCTION_37_21();
                          OUTLINED_FUNCTION_38_18();
                          if ((v116 & 1) == 0)
                          {
                            if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v133 == v125)
                            {
                              swift_bridgeObjectRelease();
                            }
                            else
                            {
                              OUTLINED_FUNCTION_37_21();
                              OUTLINED_FUNCTION_38_18();
                              if ((v116 & 1) == 0)
                              {
                                if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117 && v135 == v125)
                                {
                                  swift_bridgeObjectRelease();
                                }
                                else
                                {
                                  OUTLINED_FUNCTION_39_17();
                                  OUTLINED_FUNCTION_38_18();
                                  if ((v116 & 1) == 0)
                                  {
                                    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117
                                      && v137 == v125)
                                    {
                                      swift_bridgeObjectRelease();
                                    }
                                    else
                                    {
                                      OUTLINED_FUNCTION_39_17();
                                      OUTLINED_FUNCTION_38_18();
                                      if ((v116 & 1) == 0)
                                      {
                                        if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v117
                                          && v139 == v125)
                                        {
                                          swift_bridgeObjectRelease();
                                        }
                                        else
                                        {
                                          OUTLINED_FUNCTION_39_17();
                                          OUTLINED_FUNCTION_38_18();
                                          if ((v116 & 1) == 0)
                                          {
                                            if (one-time initialization token for search != -1) {
                                              swift_once();
                                            }
                                            uint64_t v141 = type metadata accessor for Logger();
                                            __swift_project_value_buffer(v141, (uint64_t)static Logging.search);
                                            swift_bridgeObjectRetain_n();
                                            uint64_t v142 = Logger.logObject.getter();
                                            os_log_type_t v143 = static os_log_type_t.error.getter();
                                            if (os_log_type_enabled(v142, v143))
                                            {
                                              uint64_t v144 = (uint8_t *)swift_slowAlloc();
                                              *(void *)&long long v249 = swift_slowAlloc();
                                              *(_DWORD *)uint64_t v144 = 136315138;
                                              os_log_type_t v247 = v144 + 4;
                                              swift_bridgeObjectRetain();
                                              *(void *)&long long v256 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v117, (unint64_t)v125, (uint64_t *)&v249);
                                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                                              swift_bridgeObjectRelease_n();
                                              _os_log_impl(&dword_257DC6000, v142, v143, "Unknown event type: %s", v144, 0xCu);
                                              swift_arrayDestroy();
                                              OUTLINED_FUNCTION_34();
                                              OUTLINED_FUNCTION_34();
                                            }
                                            else
                                            {

                                              swift_bridgeObjectRelease_n();
                                            }
                                            *(void *)&long long v249 = 0;
                                            *((void *)&v249 + 1) = 0xE000000000000000;
                                            _StringGuts.grow(_:)(21);
                                            swift_bridgeObjectRelease();
                                            OUTLINED_FUNCTION_58_12();
                                            *(void *)&long long v249 = v215 - 1;
                                            *((void *)&v249 + 1) = 0x80000002586833F0;
                                            v216._uint64_t countAndFlagsBits = v117;
                                            v216._object = v125;
                                            String.append(_:)(v216);
                                            swift_bridgeObjectRelease();
                                            long long v217 = v249;
                                            lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                                            OUTLINED_FUNCTION_42();
                                            static SearchOverrideError.invalidPayload(_:)(v217, *((void **)&v217 + 1), v218);
                                            swift_bridgeObjectRelease();
                                            swift_willThrow();
                                            OUTLINED_FUNCTION_64_9();
                                            OUTLINED_FUNCTION_65_10();
                                            OUTLINED_FUNCTION_26_22();
                                            swift_release();
                                            OUTLINED_FUNCTION_85_13();
                                            OUTLINED_FUNCTION_84_10();
                                            OUTLINED_FUNCTION_45_13();
                                            swift_release();

                                            goto LABEL_68;
                                          }
                                        }
                                        swift_bridgeObjectRelease();
                                        id v146 = v111;
                                        OUTLINED_FUNCTION_40_15();
                                        Trip.init(item:)(v212);
                                        uint64_t v213 = OUTLINED_FUNCTION_33_19();
                                        OUTLINED_FUNCTION_39_11(v213, v214, (uint64_t)&v245);
                                        if (!v119)
                                        {
                                          OUTLINED_FUNCTION_41_20(v231, (uint64_t)&v244);
                                          OUTLINED_FUNCTION_94_12(v116, (uint64_t)&v243);
                                          OUTLINED_FUNCTION_74_13();
                                          EventEntity.init(trip:)();

                                          int v204 = type metadata accessor for Trip;
                                          goto LABEL_110;
                                        }
                                        outlined destroy of SearchResult?(v231, (uint64_t *)&demangling cache variable for type metadata for Trip?);
                                        lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                                        OUTLINED_FUNCTION_42();
                                        unint64_t v202 = OUTLINED_FUNCTION_19_25() | 0x7069727400000000;
                                        goto LABEL_100;
                                      }
                                    }
                                    swift_bridgeObjectRelease();
                                    id v146 = v111;
                                    OUTLINED_FUNCTION_40_15();
                                    Party.init(item:)(v208);
                                    uint64_t v209 = OUTLINED_FUNCTION_33_19();
                                    OUTLINED_FUNCTION_39_11(v209, v210, (uint64_t)&v249);
                                    if (!v119)
                                    {
                                      OUTLINED_FUNCTION_41_20(v233, (uint64_t)&v247);
                                      OUTLINED_FUNCTION_94_12(v116, (uint64_t)&v246);
                                      OUTLINED_FUNCTION_74_13();
                                      EventEntity.init(party:)();

                                      int v204 = type metadata accessor for Party;
                                      goto LABEL_110;
                                    }
                                    outlined destroy of SearchResult?(v233, &demangling cache variable for type metadata for Party?);
                                    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                                    OUTLINED_FUNCTION_42();
                                    unint64_t v201 = 0xEE006D6574692079;
                                    uint64_t v200 = v211;
                                    unint64_t v202 = 0x7472617020646162;
LABEL_95:
                                    uint64_t v203 = (void *)v201;
LABEL_101:
                                    OUTLINED_FUNCTION_57_15(v202, v203, v200);
                                    OUTLINED_FUNCTION_64_9();
                                    OUTLINED_FUNCTION_65_10();
                                    OUTLINED_FUNCTION_26_22();
LABEL_66:
                                    swift_release();
                                    OUTLINED_FUNCTION_85_13();
LABEL_67:
                                    swift_release();
                                    OUTLINED_FUNCTION_45_13();
                                    swift_release();

LABEL_68:
                                    id v24 = v248;
                                    goto LABEL_60;
                                  }
                                }
                                swift_bridgeObjectRelease();
                                id v146 = v111;
                                OUTLINED_FUNCTION_40_15();
                                Appointment.init(item:)(v205);
                                uint64_t v206 = OUTLINED_FUNCTION_33_19();
                                OUTLINED_FUNCTION_39_11(v206, v207, (uint64_t)&v251);
                                if (v119)
                                {
                                  outlined destroy of SearchResult?(v235, (uint64_t *)&demangling cache variable for type metadata for Appointment?);
                                  lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                                  OUTLINED_FUNCTION_42();
                                  unint64_t v202 = OUTLINED_FUNCTION_19_25() | 0x7470706100000000;
LABEL_100:
                                  uint64_t v203 = (void *)0xED00006D65746920;
                                  goto LABEL_101;
                                }
                                OUTLINED_FUNCTION_41_20(v235, (uint64_t)&v250 + 8);
                                OUTLINED_FUNCTION_94_12(v116, (uint64_t)&v250);
                                OUTLINED_FUNCTION_74_13();
                                EventEntity.init(appointment:)();

                                int v204 = type metadata accessor for Appointment;
                                goto LABEL_110;
                              }
                            }
                            swift_bridgeObjectRelease();
                            id v146 = v111;
                            OUTLINED_FUNCTION_40_15();
                            TicketedShow.init(item:)(v197);
                            uint64_t v198 = OUTLINED_FUNCTION_33_19();
                            OUTLINED_FUNCTION_39_11(v198, v199, (uint64_t)&v253);
                            if (v119)
                            {
                              outlined destroy of SearchResult?(v116, &demangling cache variable for type metadata for TicketedShow?);
                              lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                              OUTLINED_FUNCTION_42();
                              OUTLINED_FUNCTION_34_21();
                              unint64_t v202 = 0xD000000000000014;
                              goto LABEL_95;
                            }
                            OUTLINED_FUNCTION_41_20(v116, (uint64_t)&v252);
                            OUTLINED_FUNCTION_94_12(v116, (uint64_t)&v251 + 8);
                            OUTLINED_FUNCTION_74_13();
                            EventEntity.init(reservation:)();

                            int v204 = type metadata accessor for TicketedShow;
LABEL_110:
                            _s10OmniSearch0B6EntityVWOhTm_0(v116, (void (*)(void))v204);
                            OUTLINED_FUNCTION_64_9();
                            OUTLINED_FUNCTION_65_10();
                            OUTLINED_FUNCTION_26_22();
                            goto LABEL_69;
                          }
                        }
                        swift_bridgeObjectRelease();
                        id v146 = v111;
                        OUTLINED_FUNCTION_40_15();
                        TicketedTransportation.init(item:)(v185);
                        uint64_t v186 = OUTLINED_FUNCTION_33_19();
                        OUTLINED_FUNCTION_39_11(v186, v187, (uint64_t)&v256);
                        if (!v119)
                        {
                          OUTLINED_FUNCTION_41_20(v116, (uint64_t)&v255);
                          OUTLINED_FUNCTION_89_6(v116, (uint64_t)&v254);
                          uint64_t v189 = OUTLINED_FUNCTION_73_10();
                          EventEntity.init(reservation:)(v189, v190, v191, v192, v193, v194, v195, v196, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229,
                            v230);

                          uint64_t v181 = type metadata accessor for TicketedTransportation;
                          goto LABEL_88;
                        }
                        outlined destroy of SearchResult?(v116, (uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
                        lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                        OUTLINED_FUNCTION_42();
                        OUTLINED_FUNCTION_58_12();
                        uint64_t v168 = v188 + 4;
                        char v169 = "bad tranport ticket item";
                        goto LABEL_78;
                      }
                    }
                    swift_bridgeObjectRelease();
                    id v146 = v111;
                    OUTLINED_FUNCTION_40_15();
                    RentalCarReservation.init(item:)(v182);
                    uint64_t v183 = OUTLINED_FUNCTION_33_19();
                    OUTLINED_FUNCTION_39_11(v183, v184, (uint64_t)&v258);
                    if (v119)
                    {
                      outlined destroy of SearchResult?(v116, &demangling cache variable for type metadata for RentalCarReservation?);
                      lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                      OUTLINED_FUNCTION_42();
                      uint64_t v168 = OUTLINED_FUNCTION_19_25() | 0x2072616300000000;
                      uint64_t v172 = (void *)0xEC0000006D657469;
                      goto LABEL_79;
                    }
                    OUTLINED_FUNCTION_41_20(v116, (uint64_t)&v257 + 8);
                    OUTLINED_FUNCTION_89_6(v116, (uint64_t)&v257);
                    OUTLINED_FUNCTION_73_10();
                    EventEntity.init(reservation:)();

                    uint64_t v181 = type metadata accessor for RentalCarReservation;
                    goto LABEL_88;
                  }
                }
                swift_bridgeObjectRelease();
                id v146 = v111;
                OUTLINED_FUNCTION_40_15();
                RestaurantReservation.init(item:)(v163);
                uint64_t v164 = OUTLINED_FUNCTION_33_19();
                OUTLINED_FUNCTION_39_11(v164, v165, (uint64_t)&a11);
                if (v119)
                {
                  outlined destroy of SearchResult?(v116, (uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
                  lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
                  OUTLINED_FUNCTION_42();
                  OUTLINED_FUNCTION_58_12();
                  uint64_t v168 = v167 - 1;
                  char v169 = "bad restaurant item";
LABEL_78:
                  unint64_t v170 = (unint64_t)(v169 - 32) | 0x8000000000000000;
                  uint64_t v171 = v166;
                  uint64_t v172 = (void *)v170;
LABEL_79:
                  OUTLINED_FUNCTION_57_15(v168, v172, v171);
                  OUTLINED_FUNCTION_64_9();
                  OUTLINED_FUNCTION_65_10();
                  OUTLINED_FUNCTION_26_22();
                  swift_release();
                  swift_release();
                  goto LABEL_67;
                }
                OUTLINED_FUNCTION_41_20(v116, (uint64_t)&a10);
                OUTLINED_FUNCTION_89_6(v116, (uint64_t)&a9);
                uint64_t v173 = OUTLINED_FUNCTION_73_10();
                EventEntity.init(reservation:)(v173, v174, v175, v176, v177, v178, v179, v180, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229,
                  v230);

                uint64_t v181 = type metadata accessor for RestaurantReservation;
LABEL_88:
                _s10OmniSearch0B6EntityVWOhTm_0(v116, (void (*)(void))v181);
                OUTLINED_FUNCTION_64_9();
                OUTLINED_FUNCTION_65_10();
                OUTLINED_FUNCTION_26_22();
                swift_release();
                swift_release();
                goto LABEL_89;
              }
            }
            swift_bridgeObjectRelease();
            id v157 = v111;
            uint64_t v158 = v242;
            HotelReservation.init(item:)((uint64_t)v157);
            OUTLINED_FUNCTION_39_11(v158, 1, (uint64_t)&a15);
            if (v119)
            {
              outlined destroy of SearchResult?(v158, &demangling cache variable for type metadata for HotelReservation?);
              lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
              OUTLINED_FUNCTION_42();
              unsigned int v159 = OUTLINED_FUNCTION_19_25();
              OUTLINED_FUNCTION_57_15(v159 | 0x65746F6800000000, (void *)0xEE006D657469206CLL, v160);
              swift_release();
              swift_release();
              OUTLINED_FUNCTION_26_22();
              swift_release();
              swift_release();
              OUTLINED_FUNCTION_84_10();
              OUTLINED_FUNCTION_45_13();
              swift_release();

              goto LABEL_68;
            }
            uint64_t v161 = v158;
            uint64_t v162 = v240;
            outlined init with take of SearchOverrideOutputEntity(v161, v240);
            OUTLINED_FUNCTION_89_6(v162, (uint64_t)&a13);
            OUTLINED_FUNCTION_73_10();
            EventEntity.init(reservation:)();

            _s10OmniSearch0B6EntityVWOhTm_0(v162, (void (*)(void))type metadata accessor for HotelReservation);
            swift_release();
            swift_release();
            OUTLINED_FUNCTION_26_22();
            swift_release();
            swift_release();
LABEL_89:
            swift_release();
            OUTLINED_FUNCTION_45_13();
            swift_release();
            outlined consume of Data?(0, 0xF000000000000000);
            long long v152 = v249;
            long long v153 = v250;
            long long v154 = v251;
            long long v155 = v252;
            long long v156 = v253;
            goto LABEL_90;
          }
        }
        swift_bridgeObjectRelease();
        id v146 = v111;
        uint64_t v147 = v245;
        FlightReservation.init(item:)(v146, v245);
        uint64_t v148 = OUTLINED_FUNCTION_33_19();
        OUTLINED_FUNCTION_39_11(v148, v149, (uint64_t)&a18);
        if (!v119)
        {
          outlined init with take of SearchOverrideOutputEntity(v147, v121);
          outlined init with copy of SearchOverrideOutputEntity(v121, (uint64_t)v122);
          EventEntity.init(reservation:)();

          _s10OmniSearch0B6EntityVWOhTm_0(v121, (void (*)(void))type metadata accessor for FlightReservation);
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_26_22();
LABEL_69:
          swift_release();
          OUTLINED_FUNCTION_85_13();
          OUTLINED_FUNCTION_84_10();
          OUTLINED_FUNCTION_45_13();
          swift_release();
          outlined consume of Data?(0, 0xF000000000000000);
          long long v152 = v249;
          long long v153 = v250;
          long long v154 = v251;
          long long v155 = v252;
          long long v156 = v253;
          id v122 = v243;
LABEL_90:
          *id v122 = v152;
          v122[1] = v153;
          v122[2] = v154;
          v122[3] = v155;
          v122[4] = v156;
          goto LABEL_61;
        }
        outlined destroy of SearchResult?(v147, (uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
        lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
        OUTLINED_FUNCTION_42();
        unsigned int v150 = OUTLINED_FUNCTION_19_25();
        OUTLINED_FUNCTION_57_15(v150 | 0x67696C6600000000, (void *)0xEF6D657469207468, v151);
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_26_22();
        goto LABEL_66;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      outlined destroy of SearchResult?((uint64_t)&v249, (uint64_t *)&demangling cache variable for type metadata for Any?);
    }
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_57_15(0xD000000000000012, (void *)0x80000002586833D0, v145);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_26_22();
    swift_release();
    OUTLINED_FUNCTION_85_13();
    OUTLINED_FUNCTION_84_10();
    OUTLINED_FUNCTION_45_13();
    swift_release();

    goto LABEL_60;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
LABEL_60:

  outlined consume of Data?(0, 0xF000000000000000);
LABEL_61:
  OUTLINED_FUNCTION_120_6();
  OUTLINED_FUNCTION_120_0();
}

void IdCardEntity.init(overridePayload:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v63 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_184_0();
  uint64_t v62 = v11;
  uint64_t v12 = type metadata accessor for IdCardEntity();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_184_0();
  uint64_t v61 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
  uint64_t v16 = OUTLINED_FUNCTION_81(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_15();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for PreExtractedCard(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_95_1();
  uint64_t v24 = v22 - v23;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)v59 - v26;
  uint64_t v28 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = OUTLINED_FUNCTION_81(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_39();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<CardSubType>);
  OUTLINED_FUNCTION_11_12();
  unint64_t v30 = lazy protocol witness table accessor for type CardSubType and conformance CardSubType();
  *(void *)uint64_t v5 = MEMORY[0x25A2C4880](v1, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<PersonalCardEntity?>);
  LocalizedStringResource.init(stringLiteral:)();
  unint64_t v31 = lazy protocol witness table accessor for type PersonalCardEntity and conformance PersonalCardEntity();
  *(void *)(v5 + 8) = MEMORY[0x25A2C4890](v1, v31);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<BusinessCardEntity?>);
  OUTLINED_FUNCTION_58_12();
  LocalizedStringResource.init(stringLiteral:)();
  unint64_t v32 = lazy protocol witness table accessor for type BusinessCardEntity and conformance BusinessCardEntity();
  *(void *)(v5 + 16) = MEMORY[0x25A2C4890](v1, v32);
  *(_OWORD *)(v5 + 24) = xmmword_258665BD0;
  uint64_t v33 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_18_10(v33);
  type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
  id v34 = static CSSearchableItem.makeFrom(overridePayload:)();
  if (v0) {
    goto LABEL_4;
  }
  uint64_t v35 = v34;
  uint64_t v66 = v24;
  uint64_t v60 = v12;
  uint64_t v36 = v62;
  uint64_t v37 = OUTLINED_FUNCTION_48_13();
  outlined bridged method (mbnn) of @objc CSSearchableItem.bundleID.setter(v37, v38, v35);
  id v39 = v35;
  PreExtractedCard.init(item:)((uint64_t)v39, v19);
  if (__swift_getEnumTagSinglePayload(v19, 1, v20) == 1)
  {
    outlined destroy of SearchResult?(v19, &demangling cache variable for type metadata for PreExtractedCard?);
    uint64_t v64 = 0;
    unint64_t v65 = 0xE000000000000000;
    _StringGuts.grow(_:)(49);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_58_12();
    uint64_t v64 = v40 + 27;
    unint64_t v65 = 0x8000000258683470;
    id v41 = objc_msgSend(v39, sel_description);
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    v45._uint64_t countAndFlagsBits = v42;
    v45._object = v44;
    String.append(_:)(v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v64;
    unint64_t v47 = v65;
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_42();
    *uint64_t v48 = v46;
    v48[1] = v47;
    swift_willThrow();

LABEL_4:
    goto LABEL_5;
  }
  v59[1] = v20;
  outlined init with take of SearchOverrideOutputEntity(v19, (uint64_t)v27);
  outlined init with copy of SearchOverrideOutputEntity((uint64_t)v27, v66);
  uint64_t v49 = v39;
  CSSearchableItem.asIntentFile()();
  uint64_t v50 = v36;
  uint64_t v51 = type metadata accessor for IntentFile();
  __swift_storeEnumTagSinglePayload(v63, 0, 1, v51);
  IdCardEntity.init(preExtractedCard:card:encodedSearchableItem:)();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v36, 1, v60);
  uint64_t v53 = (uint64_t)v27;
  if (EnumTagSinglePayload != 1)
  {

    _s10OmniSearch0B6EntityVWOhTm_0((uint64_t)v27, (void (*)(void))type metadata accessor for PreExtractedCard);
    _s10OmniSearch0B6EntityVWOhTm_0(v5, (void (*)(void))type metadata accessor for IdCardEntity);
    uint64_t v58 = v61;
    outlined init with take of SearchOverrideOutputEntity(v50, v61);
    outlined init with take of SearchOverrideOutputEntity(v58, v5);
    goto LABEL_6;
  }
  outlined destroy of SearchResult?(v50, &demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v64 = 0;
  unint64_t v65 = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  OUTLINED_FUNCTION_177_0();
  String.append(_:)(v54);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v55 = v64;
  unint64_t v56 = v65;
  lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
  OUTLINED_FUNCTION_42();
  *uint64_t v57 = v55;
  v57[1] = v56;
  swift_willThrow();

  _s10OmniSearch0B6EntityVWOhTm_0(v53, (void (*)(void))type metadata accessor for PreExtractedCard);
LABEL_5:
  _s10OmniSearch0B6EntityVWOhTm_0(v5, (void (*)(void))type metadata accessor for IdCardEntity);
LABEL_6:
  OUTLINED_FUNCTION_120_0();
}

id static CSSearchableItem.makeFrom(overridePayload:)()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02AE8]), sel_init);
  NSDictionary.makeIterator()();
  swift_retain();
  NSDictionary.Iterator.next()();
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v19, (uint64_t)&v20, (uint64_t *)&demangling cache variable for type metadata for (key: Any, value: Any)?);
  while (v21)
  {
    outlined init with take of Any(&v22, v19);
    outlined init with take of Any(&v20, v17);
    if (swift_dynamicCast())
    {
      long long v1 = v16[0];
      static CSSearchableItem.coerceValue(_:)((uint64_t)v19, v17);
      __swift_project_boxed_opaque_existential_1(v17, v18);
      uint64_t v2 = _bridgeAnythingToObjectiveC<A>(_:)();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      uint64_t v3 = (void *)MEMORY[0x25A2C7AB0](v1, *((void *)&v1 + 1));
      objc_msgSend(v0, sel_setAttribute_forKey_, v2, v3);
      swift_unknownObjectRelease();

      uint64_t v4 = (void *)MEMORY[0x25A2C7AB0](v1, *((void *)&v1 + 1));
      id v5 = objc_msgSend(v0, sel_attributeForKey_, v4);

      if (v5)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        outlined init with take of Any(v16, v17);
        if (one-time initialization token for utilities != -1) {
          swift_once();
        }
        uint64_t v6 = type metadata accessor for Logger();
        __swift_project_value_buffer(v6, (uint64_t)static Logging.utilities);
        outlined init with copy of Any((uint64_t)v17, (uint64_t)v16);
        swift_bridgeObjectRetain();
        uint64_t v7 = Logger.logObject.getter();
        os_log_type_t v8 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          *(_DWORD *)uint64_t v9 = 136315394;
          swift_bridgeObjectRetain();
          *(void *)(v9 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v1, *((unint64_t *)&v1 + 1), &v23);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v9 + 12) = 2080;
          outlined init with copy of Any((uint64_t)v16, (uint64_t)v15);
          uint64_t v10 = String.init<A>(describing:)();
          *(void *)(v9 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v23);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
          _os_log_impl(&dword_257DC6000, v7, v8, "Set custom override attribute: %s=%s", (uint8_t *)v9, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
          swift_bridgeObjectRelease_n();
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    NSDictionary.Iterator.next()();
    outlined init with take of PQAVerificationModelProtocol?((uint64_t)v19, (uint64_t)&v20, (uint64_t *)&demangling cache variable for type metadata for (key: Any, value: Any)?);
  }
  swift_release_n();
  id v12 = objc_allocWithZone(MEMORY[0x263F02AE0]);
  uint64_t v13 = OUTLINED_FUNCTION_49_16();
  return @nonobjc CSSearchableItem.init(uniqueIdentifier:domainIdentifier:attributeSet:)(v13, 0, 0, 0, v0);
}

uint64_t static CSSearchableItem.coerceValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v38 - v12;
  outlined init with copy of Any(a1, (uint64_t)v43);
  if (!swift_dynamicCast())
  {
    if (one-time initialization token for utilities != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)static Logging.utilities);
    outlined init with copy of Any(a1, (uint64_t)v43);
    outlined init with copy of Any(a1, (uint64_t)v42);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v41 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      __swift_project_boxed_opaque_existential_1(v43, v43[3]);
      swift_getDynamicType();
      uint64_t v32 = _typeName(_:qualified:)();
      v40[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
      *(_WORD *)(v30 + 12) = 2080;
      outlined init with copy of Any((uint64_t)v42, (uint64_t)v40);
      uint64_t v34 = String.init<A>(describing:)();
      v40[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
      _os_log_impl(&dword_257DC6000, v28, v29, "Using provided type %s for value: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v31, -1, -1);
      MEMORY[0x25A2C94B0](v30, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    }

    return outlined init with copy of Any(a1, (uint64_t)a2);
  }
  uint64_t v15 = v42[0];
  uint64_t v14 = v42[1];
  if (one-time initialization token for dateFormatter != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)static LocalSearchService.dateFormatter;
  uint64_t v17 = (void *)MEMORY[0x25A2C7AB0](v15, v14);
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_dateFromString_, v17);

  if (!v18)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
    goto LABEL_17;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v6, v11, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
LABEL_17:
    outlined destroy of SearchResult?((uint64_t)v6, &demangling cache variable for type metadata for Date?);
    return outlined init with copy of Any(a1, (uint64_t)a2);
  }
  v19(v13, v6, v7);
  if (one-time initialization token for utilities != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logging.utilities);
  outlined init with copy of Any(a1, (uint64_t)v43);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v40[0] = v39;
    *(_DWORD *)uint64_t v23 = 136315138;
    v38[0] = v23 + 4;
    outlined init with copy of Any((uint64_t)v43, (uint64_t)v42);
    v38[1] = MEMORY[0x263F8EE58] + 8;
    uint64_t v24 = String.init<A>(describing:)();
    v42[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    _os_log_impl(&dword_257DC6000, v21, v22, "Converting: %s to Date type", v23, 0xCu);
    uint64_t v26 = v39;
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v26, -1, -1);
    MEMORY[0x25A2C94B0](v23, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
  }

  a2[3] = v7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a2);
  return ((uint64_t (*)(uint64_t *, char *, uint64_t))v19)(boxed_opaque_existential_1Tm, v13, v7);
}

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance SearchAppEntity()
{
}

void AnswerMetadata.init(overridePayload:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v2 = v1;
  uint64_t v57 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_185_0();
  uint64_t v56 = v6;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_27_10();
  uint64_t v55 = v8;
  uint64_t v58 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_15();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = OUTLINED_FUNCTION_81(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_97_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v59 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_62_11();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v17 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  uint64_t v60 = v17;
  swift_retain();
  OUTLINED_FUNCTION_61_10();
  uint64_t v64 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v18 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[SourceDocument]>);
  uint64_t v63 = v18;
  swift_retain();
  OUTLINED_FUNCTION_16_14();
  unint64_t v19 = lazy protocol witness table accessor for type SourceDocument and conformance SourceDocument();
  uint64_t v20 = MEMORY[0x25A2C4890](v0, v19);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  uint64_t v62 = v20;
  swift_retain();
  OUTLINED_FUNCTION_31_22();
  uint64_t v65 = MEMORY[0x25A2C48A0](v0);
  swift_retain();
  OUTLINED_FUNCTION_16_14();
  uint64_t v67 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_31_22();
  uint64_t v21 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  uint64_t v66 = v21;
  swift_retain();
  OUTLINED_FUNCTION_16_14();
  uint64_t v83 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  UUID.init()();
  uint64_t v61 = UUID.uuidString.getter();
  uint64_t v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v58);
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)MEMORY[0x25A2C7AB0](0x617461646174656DLL, 0xE800000000000000);
  unint64_t v25 = v2;
  id v26 = objc_msgSend(v2, sel_valueForKey_, v24);

  if (v26)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v81, 0, 32);
  }
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v81, (uint64_t)v82, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (*((void *)&v82[1] + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    uint64_t v27 = v60;
    if (swift_dynamicCast())
    {
      uint64_t v28 = v69;
      goto LABEL_9;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v82, (uint64_t *)&demangling cache variable for type metadata for Any?);
    uint64_t v27 = v60;
  }
  uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
LABEL_9:
  *(void *)&v82[0] = v59;
  *((void *)&v82[0] + 1) = v27;
  *(void *)&v82[1] = v64;
  *((void *)&v82[1] + 1) = v63;
  *(void *)&v82[2] = v62;
  *((void *)&v82[2] + 1) = v28;
  *(void *)&v82[3] = v65;
  *((void *)&v82[3] + 1) = v67;
  *(void *)&v82[4] = v66;
  *((void *)&v82[4] + 1) = MEMORY[0x263F8EE78];
  v82[5] = xmmword_258665BD0;
  LOBYTE(v82[6]) = 0;
  *((void *)&v82[6] + 1) = v61;
  *(void *)&v82[7] = v23;
  *((void *)&v82[7] + 1) = v83;
  v81[0] = &outlined read-only object #0 of AnswerMetadata.init(overridePayload:);
  swift_bridgeObjectRetain();
  outlined retain of AnswerMetadata((uint64_t)v82);
  EntityProperty.wrappedValue.setter();
  outlined release of AnswerMetadata((uint64_t)v82);
  outlined retain of AnswerMetadata((uint64_t)v82);
  os_log_type_t v29 = (void *)MEMORY[0x25A2C7AB0](0x726577736E61, 0xE600000000000000);
  id v30 = OUTLINED_FUNCTION_88_9((uint64_t)v29, sel_valueForKey_);

  if (v30)
  {
    OUTLINED_FUNCTION_76_9();
    uint64_t v31 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_92_11();
  }
  OUTLINED_FUNCTION_77_12(v31, v32, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v81[3])
  {
    if (OUTLINED_FUNCTION_27_21())
    {
      object = v68._object;
      uint64_t countAndFlagsBits = v68._countAndFlagsBits;
      goto LABEL_17;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_47_15();
LABEL_17:
  v81[0] = countAndFlagsBits;
  v81[1] = object;
  EntityProperty.wrappedValue.setter();
  outlined release of AnswerMetadata((uint64_t)v82);
  outlined retain of AnswerMetadata((uint64_t)v82);
  unint64_t v35 = (void *)MEMORY[0x25A2C7AB0](0x746E656D75636F64, 0xEE00656372756F53);
  id v36 = OUTLINED_FUNCTION_88_9((uint64_t)v35, sel_valueForKey_);

  if (v36)
  {
    OUTLINED_FUNCTION_76_9();
    uint64_t v37 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_92_11();
  }
  OUTLINED_FUNCTION_77_12(v37, v38, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v81[3])
  {
    if (OUTLINED_FUNCTION_27_21())
    {
      uint64_t v40 = v68._object;
      uint64_t v39 = v68._countAndFlagsBits;
      goto LABEL_25;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_47_15();
LABEL_25:
  v81[0] = v39;
  v81[1] = v40;
  EntityProperty.wrappedValue.setter();
  outlined release of AnswerMetadata((uint64_t)v82);
  outlined retain of AnswerMetadata((uint64_t)v82);
  uint64_t v41 = (void *)MEMORY[0x25A2C7AB0](0xD000000000000021, 0x80000002586801A0);
  id v42 = OUTLINED_FUNCTION_88_9((uint64_t)v41, sel_valueForKey_);

  if (v42)
  {
    OUTLINED_FUNCTION_76_9();
    uint64_t v43 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_92_11();
  }
  OUTLINED_FUNCTION_77_12(v43, v44, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v81[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    if (OUTLINED_FUNCTION_27_21())
    {
      uint64_t v45 = v68._countAndFlagsBits;
      goto LABEL_33;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  uint64_t v45 = MEMORY[0x263F8EE78];
LABEL_33:
  v81[0] = v45;
  EntityProperty.wrappedValue.setter();
  outlined release of AnswerMetadata((uint64_t)v82);
  OUTLINED_FUNCTION_46_17();
  unint64_t v47 = (void *)v46;
  id v48 = OUTLINED_FUNCTION_88_9(v46, sel_valueForKey_);

  if (v48)
  {
    OUTLINED_FUNCTION_76_9();
    uint64_t v49 = swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_92_11();
  }
  OUTLINED_FUNCTION_77_12(v49, v50, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v81[3])
  {
    if (OUTLINED_FUNCTION_27_21())
    {
      outlined retain of AnswerMetadata((uint64_t)v82);
      uint64_t v51 = (void *)OverrideExperience.init(rawValue:)(v68);
      OverrideExperience.mockExperienceFile.getter(v51, v55);
      outlined init with copy of PQAVerificationModelProtocol?(v55, v56, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
      EntityProperty.wrappedValue.setter();
      outlined destroy of SearchResult?(v55, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
      outlined release of AnswerMetadata((uint64_t)v82);
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  memcpy(v81, v82, 0x80uLL);
  outlined retain of AnswerMetadata((uint64_t)v82);
  AnswerMetadata.validateParameters()();
  if (v52)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    outlined release of AnswerMetadata((uint64_t)v82);
    uint64_t v69 = v59;
    uint64_t v70 = v60;
    uint64_t v71 = v64;
    uint64_t v72 = v63;
    uint64_t v73 = v62;
    uint64_t v74 = v28;
    uint64_t v75 = v65;
    uint64_t v76 = v67;
    uint64_t v77 = v66;
    OUTLINED_FUNCTION_24_27(MEMORY[0x263F8EE78]);
    uint64_t v78 = v53;
    uint64_t v79 = v23;
    uint64_t v80 = v83;
    outlined release of AnswerMetadata((uint64_t)&v69);
  }
  else
  {

    outlined release of AnswerMetadata((uint64_t)v82);
    uint64_t v69 = v59;
    uint64_t v70 = v27;
    uint64_t v71 = v64;
    uint64_t v72 = v63;
    uint64_t v73 = v62;
    uint64_t v74 = v28;
    uint64_t v75 = v65;
    uint64_t v76 = v67;
    uint64_t v77 = v66;
    OUTLINED_FUNCTION_24_27(MEMORY[0x263F8EE78]);
    uint64_t v78 = v54;
    uint64_t v79 = v23;
    uint64_t v80 = v83;
    outlined release of AnswerMetadata((uint64_t)&v69);
    outlined retain of AnswerMetadata((uint64_t)v82);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    memcpy(v57, v82, 0x80uLL);
  }
  OUTLINED_FUNCTION_120_0();
}

OmniSearch::OverrideExperience __swiftcall OverrideExperience.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v2 = qword_2706A5318;
  if (!qword_2706A5318) {
    goto LABEL_12;
  }
  uint64_t v3 = &byte_2706A5328;
  while (1)
  {
    unsigned int v5 = *v3++;
    unsigned int v4 = v5;
    Swift::String v6 = String.lowercased()();
    swift_bridgeObjectRelease();
    Swift::String v7 = String.lowercased()();
    if (v6._countAndFlagsBits == v7._countAndFlagsBits && v6._object == v7._object) {
      break;
    }
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_11;
    }
    if (!--v2) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_11:
  if (v4 < 2)
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    unint64_t v10 = (unint64_t)object;
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return (char)v4;
    }
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    LOBYTE(v4) = 2;
    unint64_t v10 = (unint64_t)object;
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, v10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v16 = MEMORY[0x25A2C7E60](&outlined read-only object #0 of static OverrideExperience.allCases.getter, &type metadata for OverrideExperience);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v12, v13, "OverrideExperience: Unrecognized experience request %s, only %s are supported. Using GenericExperience", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v15, -1, -1);
    MEMORY[0x25A2C94B0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (char)v4;
}

uint64_t OverrideExperience.mockExperienceFile.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258662D10;
  if ((_BYTE)a1)
  {
    type metadata accessor for GenericExperience();
    static GenericExperience.empty.getter();
  }
  else
  {
    type metadata accessor for AudioExperience();
    static AudioExperience.empty.getter();
  }
  OUTLINED_FUNCTION_49_16();
  type metadata accessor for DialogExperience();
  swift_allocObject();
  *(void *)(inited + 32) = DialogExperience.init(_:card:)(a1, 0);
  specialized Array._endMutation()();
  return IntentFile.init(experiences:)(inited, a2);
}

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance AnswerMetadata()
{
}

uint64_t closure #1 in SearchGlobalEntity.init(overridePayload:)(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  Swift::String v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  SearchGlobalEntity.Builder.id.setter();
  Swift::String v7 = (void *)MEMORY[0x25A2C7AB0](0x6E69616D6F64, 0xE600000000000000);
  id v8 = objc_msgSend(a2, sel_valueForKey_, v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)&v13, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v16) {
    swift_dynamicCast();
  }
  else {
    outlined destroy of SearchResult?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  SearchGlobalEntity.Builder.domain.setter();
  char v9 = (void *)MEMORY[0x25A2C7AB0](0x6449686372616573, 0xE800000000000000);
  id v10 = objc_msgSend(a2, sel_valueForKey_, v9);

  if (v10)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)&v13, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Any?);
  if (v16) {
    swift_dynamicCast();
  }
  else {
    outlined destroy of SearchResult?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Any?);
  }
  return SearchGlobalEntity.Builder.searchID.setter();
}

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance SearchSpotlightEntity()
{
}

#error "25842F228: call analysis failed (funcsize=6)"

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance IdCardEntity()
{
}

void *static OverrideExperience.allCases.getter()
{
  return &outlined read-only object #0 of static OverrideExperience.allCases.getter;
}

uint64_t OverrideExperience.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6F69647541;
  }
  if (a1 == 1) {
    return 1936744781;
  }
  return 0x6E776F6E6B6E75;
}

uint64_t OverrideExperience.mockExperience.getter(char a1)
{
  if (a1)
  {
    type metadata accessor for GenericExperience();
    return static GenericExperience.empty.getter();
  }
  else
  {
    type metadata accessor for AudioExperience();
    return static AudioExperience.empty.getter();
  }
}

uint64_t static AudioExperience.empty.getter()
{
  uint64_t v0 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_95_1();
  MEMORY[0x270FA5388](v4);
  Swift::String v6 = (char *)&v10 - v5;
  Apple_Parsec_Siri_V2alpha_AudioClientComponent.init()();
  type metadata accessor for AudioExperience();
  OUTLINED_FUNCTION_64_0();
  v7();
  uint64_t v8 = AudioExperience.__allocating_init(pluginId:audioClientComponent:queryConfidenceScore:usoGraphData:isGlideEligible:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v0);
  return v8;
}

uint64_t static GenericExperience.empty.getter()
{
  uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v2 = OUTLINED_FUNCTION_81(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_15();
  uint64_t v3 = type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  Apple_Parsec_Siri_V2alpha_ExperienceComponent.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_ExperienceComponent>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_258661700;
  OUTLINED_FUNCTION_64_0();
  v5();
  Siri_Nlu_External_UserDialogAct.init()();
  type metadata accessor for PommesRenderOptions();
  MEMORY[0x25A2C6B60]();
  OUTLINED_FUNCTION_49_16();
  id v6 = objc_allocWithZone((Class)type metadata accessor for GenericExperience());
  uint64_t v7 = GenericExperience.init(components:queryConfidenceScore:userDialogAct:renderOptions:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  return v7;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OverrideExperience(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OverrideExperience()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OverrideExperience(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OverrideExperience()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance OverrideExperience@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = OverrideExperience.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OverrideExperience@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OverrideExperience.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance OverrideExperience(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static OverrideExperience.allCases.getter;
}

unint64_t lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchOverrideError and conformance SearchOverrideError;
  if (!lazy protocol witness table cache variable for type SearchOverrideError and conformance SearchOverrideError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchOverrideError and conformance SearchOverrideError);
  }
  return result;
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[160 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    unint64_t result = (char *)OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

void specialized UnsafeMutablePointer.moveInitialize(from:count:)(uint64_t a1, uint64_t a2)
{
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_56_11();
    if (v6
      && (__swift_instantiateConcreteTypeFromMangledName(v5),
          OUTLINED_FUNCTION_7_2(),
          v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        OUTLINED_FUNCTION_28_18();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v5);
      OUTLINED_FUNCTION_28_18();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void (*v5)(void);
  char v6;
  uint64_t v7;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_37();
    OUTLINED_FUNCTION_2_19();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_56_11();
    if (v6 && (v5(0), OUTLINED_FUNCTION_7_2(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        OUTLINED_FUNCTION_28_18();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      v5(0);
      OUTLINED_FUNCTION_28_18();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

uint64_t type metadata accessor for SearchOverrideOutputEntity()
{
  uint64_t result = type metadata singleton initialization cache for SearchOverrideOutputEntity;
  if (!type metadata singleton initialization cache for SearchOverrideOutputEntity) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined bridged method (mbbnb) of @objc NSBundle.path(forResource:ofType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (void *)MEMORY[0x25A2C7AB0]();
  swift_bridgeObjectRelease();
  char v9 = (void *)MEMORY[0x25A2C7AB0](a3, a4);
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a5, sel_pathForResource_ofType_, v8, v9);

  if (!v10) {
    return 0;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v11;
}

uint64_t partial apply for closure #1 in SearchGlobalEntity.init(overridePayload:)(uint64_t a1)
{
  return closure #1 in SearchGlobalEntity.init(overridePayload:)(a1, *(void **)(v1 + 16));
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.identifier.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_identifier);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined init with copy of SearchOverrideOutputEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_49_16();
  v4(v3);
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = OUTLINED_FUNCTION_210();
  v6(v5);
  return a2;
}

uint64_t _s10OmniSearch0B6EntityVWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t outlined init with take of SearchOverrideOutputEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_49_16();
  v4(v3);
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = OUTLINED_FUNCTION_211();
  v6(v5);
  return a2;
}

unint64_t lazy protocol witness table accessor for type OverrideExperience and conformance OverrideExperience()
{
  unint64_t result = lazy protocol witness table cache variable for type OverrideExperience and conformance OverrideExperience;
  if (!lazy protocol witness table cache variable for type OverrideExperience and conformance OverrideExperience)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OverrideExperience and conformance OverrideExperience);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [OverrideExperience] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [OverrideExperience] and conformance [A];
  if (!lazy protocol witness table cache variable for type [OverrideExperience] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [OverrideExperience]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [OverrideExperience] and conformance [A]);
  }
  return result;
}

void type metadata accessor for SearchOverrideError()
{
}

void type metadata accessor for SearchOverrides()
{
}

uint64_t destroy for SearchOverride()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for SearchOverride(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SearchOverride(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchOverride(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchOverride(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchOverride(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SearchOverride()
{
}

void type metadata accessor for SearchOverride.InputMatch()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchOverrideOutputEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SearchResultType();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void destroy for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SearchResultType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SearchResultType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t initializeWithTake for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SearchResultType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SearchResultType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2584305D8);
}

uint64_t sub_2584305D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_258430678);
}

void sub_258430678(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_49_16();
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_29_3();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata completion function for SearchOverrideOutputEntity()
{
  uint64_t result = type metadata accessor for SearchResultType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of SearchOverrideable.init(overridePayload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unsigned char *storeEnumTagSinglePayload for OverrideExperience(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258430888);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for OverrideExperience()
{
}

void *OUTLINED_FUNCTION_0_17@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_12_30()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_15_26()
{
  JUMPOUT(0x25A2C7AB0);
}

uint64_t OUTLINED_FUNCTION_18_28(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
}

uint64_t OUTLINED_FUNCTION_19_25()
{
  return 543449442;
}

uint64_t OUTLINED_FUNCTION_22_23(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with take of PQAVerificationModelProtocol?(v3 - 144, v3 - 112, a3);
}

double OUTLINED_FUNCTION_23_19()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

__n128 OUTLINED_FUNCTION_24_27@<Q0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 232) = a1;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(v1 + 240) = result;
  *(unsigned char *)(v1 + 256) = 0;
  *(_DWORD *)(v1 + 257) = *(_DWORD *)(v2 - 103);
  *(_DWORD *)(v1 + 260) = *(_DWORD *)(v2 - 100);
  return result;
}

uint64_t OUTLINED_FUNCTION_26_22()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_27_21()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_28_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_22()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_33_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_20()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t OUTLINED_FUNCTION_37_21()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_38_18()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_41_20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return outlined init with take of SearchOverrideOutputEntity(a1, v3);
}

uint64_t OUTLINED_FUNCTION_44_19()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_45_13()
{
  return swift_release();
}

void OUTLINED_FUNCTION_46_17()
{
  JUMPOUT(0x25A2C7AB0);
}

uint64_t OUTLINED_FUNCTION_48_13()
{
  return 0x656469727265766FLL;
}

uint64_t OUTLINED_FUNCTION_49_16()
{
  return 0;
}

void OUTLINED_FUNCTION_50_21(uint64_t a1@<X0>, void *a2@<X1>, Swift::Int a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
}

id OUTLINED_FUNCTION_55_16()
{
  return objc_msgSend(v1, (SEL)(v2 + 1688), v0);
}

uint64_t OUTLINED_FUNCTION_57_15@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  static SearchOverrideError.invalidPayload(_:)(a1, a2, a3);
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_62_11()
{
  return 0x746E656D75636F44;
}

id OUTLINED_FUNCTION_63_11()
{
  return objc_msgSend(v0, (SEL)(v2 + 1688), v1);
}

uint64_t OUTLINED_FUNCTION_64_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_65_10()
{
  return swift_release();
}

void OUTLINED_FUNCTION_66_13()
{
  JUMPOUT(0x25A2C7AB0);
}

id OUTLINED_FUNCTION_69_11(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + *(int *)(a1 + 20));
  return v3;
}

uint64_t OUTLINED_FUNCTION_73_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_74_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_76_9()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t OUTLINED_FUNCTION_77_12(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with take of PQAVerificationModelProtocol?(v3 + 160, v3 + 288, a3);
}

uint64_t OUTLINED_FUNCTION_79_10()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_83_8()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_84_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_85_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_87_10@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 104) = v1;
  return EntityProperty.wrappedValue.setter();
}

id OUTLINED_FUNCTION_88_9(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_89_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return outlined init with copy of SearchOverrideOutputEntity(a1, v3);
}

double OUTLINED_FUNCTION_92_11()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_93_9()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_94_12@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return outlined init with copy of SearchOverrideOutputEntity(a1, v3);
}

uint64_t specialized Array.count.getter(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t specialized Encodable.oms_jsonPrettyPrinted()()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_17_1();
  if (one-time initialization token for iso8601PrettyPrinted != -1) {
    swift_once();
  }
  lazy protocol witness table accessor for type FileDocument and conformance FileDocument();
  uint64_t v2 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v4 = v3;
  static String.Encoding.utf8.getter();
  String.init(data:encoding:)();
  if (v5) {
    OUTLINED_FUNCTION_17_23();
  }
  else {
    outlined consume of Data._Representation(v2, v4);
  }
  return OUTLINED_FUNCTION_79_0();
}

{
  return OUTLINED_FUNCTION_6_30((void (*)(uint64_t))type metadata accessor for WalletTransaction, &lazy protocol witness table cache variable for type WalletTransaction and conformance WalletTransaction);
}

{
  return OUTLINED_FUNCTION_6_30((void (*)(uint64_t))type metadata accessor for WalletPass, &lazy protocol witness table cache variable for type WalletPass and conformance WalletPass);
}

uint64_t specialized Encodable.oms_jsonPrettyPrinted()(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for String.Encoding();
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_17_1();
  if (one-time initialization token for iso8601PrettyPrinted != -1) {
    swift_once();
  }
  a1(0);
  lazy protocol witness table accessor for type WalletTransaction and conformance WalletTransaction(a2, a3);
  uint64_t v8 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v10 = v9;
  static String.Encoding.utf8.getter();
  String.init(data:encoding:)();
  if (v11) {
    OUTLINED_FUNCTION_17_23();
  }
  else {
    outlined consume of Data._Representation(v8, v10);
  }
  return OUTLINED_FUNCTION_79_0();
}

void *AppEntityIndexClient.iCloudFilesBundleId.unsafeMutableAddressor()
{
  return &static AppEntityIndexClient.iCloudFilesBundleId;
}

unint64_t static AppEntityIndexClient.iCloudFilesBundleId.getter()
{
  return 0xD00000000000002BLL;
}

void *AppEntityIndexClient.localFilesBundleId.unsafeMutableAddressor()
{
  return &static AppEntityIndexClient.localFilesBundleId;
}

unint64_t static AppEntityIndexClient.localFilesBundleId.getter()
{
  return 0xD000000000000023;
}

uint64_t one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(uint64_t a1)
{
  return one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(a1, MEMORY[0x263EFB850], &static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier, algn_26A0993E8);
}

uint64_t *AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.unsafeMutableAddressor()
{
  if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1) {
    swift_once();
  }
  return &static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier;
}

uint64_t static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter()
{
  return static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(&one-time initialization token for keyAttributeItemAppEntityTypeIdentifier, &static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier);
}

uint64_t one-time initialization function for keyAItemAppEntityInstanceIdentifier(uint64_t a1)
{
  return one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(a1, MEMORY[0x263EFB858], &static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier, algn_26A0993F8);
}

uint64_t *AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier.unsafeMutableAddressor()
{
  if (one-time initialization token for keyAItemAppEntityInstanceIdentifier != -1) {
    swift_once();
  }
  return &static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier;
}

uint64_t static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier.getter()
{
  return static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(&one-time initialization token for keyAItemAppEntityInstanceIdentifier, &static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier);
}

uint64_t one-time initialization function for kMDItemAppEntityTitle(uint64_t a1)
{
  return one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(a1, MEMORY[0x263EFB868], &static AppEntityIndexClient.kMDItemAppEntityTitle, algn_26A099408);
}

uint64_t *AppEntityIndexClient.kMDItemAppEntityTitle.unsafeMutableAddressor()
{
  if (one-time initialization token for kMDItemAppEntityTitle != -1) {
    swift_once();
  }
  return &static AppEntityIndexClient.kMDItemAppEntityTitle;
}

uint64_t static AppEntityIndexClient.kMDItemAppEntityTitle.getter()
{
  return static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(&one-time initialization token for kMDItemAppEntityTitle, &static AppEntityIndexClient.kMDItemAppEntityTitle);
}

uint64_t one-time initialization function for kMDItemAppEntityTypeDisplayRepresentationName(uint64_t a1)
{
  return one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(a1, MEMORY[0x263EFB860], &static AppEntityIndexClient.kMDItemAppEntityTypeDisplayRepresentationName, algn_26A099418);
}

uint64_t one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(uint64_t a1, unsigned int *a2, uint64_t *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for SpotlightKeys();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *a2, v7);
  uint64_t v13 = SpotlightKeys.description.getter();
  uint64_t v15 = v14;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  *a3 = v13;
  *a4 = v15;
  return result;
}

uint64_t *AppEntityIndexClient.kMDItemAppEntityTypeDisplayRepresentationName.unsafeMutableAddressor()
{
  if (one-time initialization token for kMDItemAppEntityTypeDisplayRepresentationName != -1) {
    swift_once();
  }
  return &static AppEntityIndexClient.kMDItemAppEntityTypeDisplayRepresentationName;
}

uint64_t static AppEntityIndexClient.kMDItemAppEntityTypeDisplayRepresentationName.getter()
{
  return static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(&one-time initialization token for kMDItemAppEntityTypeDisplayRepresentationName, &static AppEntityIndexClient.kMDItemAppEntityTypeDisplayRepresentationName);
}

uint64_t static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t *AppEntityIndexClient.__allocating_init(searchAgent:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = OUTLINED_FUNCTION_3_27(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_11_21();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t *AppEntityIndexClient.init(searchAgent:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = OUTLINED_FUNCTION_3_27(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_11_21();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

Swift::Void __swiftcall AppEntityIndexClient.prewarm()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t one-time initialization function for fetchAttributes()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_258670CF0;
  *(void *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 88) = v4;
  if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_26A0993E8;
  *(void *)(v0 + 96) = static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier;
  *(void *)(v0 + 104) = v5;
  uint64_t v6 = one-time initialization token for keyAItemAppEntityInstanceIdentifier;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_26A0993F8;
  *(void *)(v0 + 112) = static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier;
  *(void *)(v0 + 120) = v7;
  uint64_t v8 = one-time initialization token for kMDItemAppEntityTitle;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_26A099408;
  *(void *)(v0 + 128) = static AppEntityIndexClient.kMDItemAppEntityTitle;
  *(void *)(v0 + 136) = v9;
  uint64_t v10 = one-time initialization token for kMDItemAppEntityTypeDisplayRepresentationName;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_26A099418;
  *(void *)(v0 + 144) = static AppEntityIndexClient.kMDItemAppEntityTypeDisplayRepresentationName;
  *(void *)(v0 + 152) = v11;
  *(void *)(v0 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 168) = v12;
  *(void *)(v0 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 184) = v13;
  *(void *)(v0 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 200) = v14;
  *(void *)(v0 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 216) = v15;
  *(void *)(v0 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 232) = v16;
  *(void *)(v0 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 248) = v17;
  *(void *)(v0 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 264) = v18;
  *(void *)(v0 + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 280) = v19;
  *(void *)(v0 + 288) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 296) = v20;
  *(void *)(v0 + 304) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 312) = v21;
  static AppEntityIndexClient.fetchAttributes = v0;
  return swift_bridgeObjectRetain();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2586720A0;
  *(void *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 152) = v8;
  *(void *)(v0 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 168) = v9;
  *(void *)(v0 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 184) = v10;
  *(void *)(v0 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 200) = v11;
  *(void *)(v0 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 216) = v12;
  *(void *)(v0 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 232) = v13;
  *(void *)(v0 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 248) = v14;
  *(void *)(v0 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 264) = v15;
  *(void *)(v0 + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 280) = v16;
  *(void *)(v0 + 288) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 296) = v17;
  *(void *)(v0 + 304) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 312) = v18;
  *(void *)(v0 + 320) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 328) = v19;
  *(void *)(v0 + 336) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 344) = v20;
  *(void *)(v0 + 352) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 360) = v21;
  *(void *)(v0 + 368) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 376) = v22;
  *(void *)(v0 + 384) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 392) = v23;
  *(void *)(v0 + 400) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 408) = v24;
  *(void *)(v0 + 416) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 424) = v25;
  *(void *)(v0 + 432) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 440) = v26;
  *(void *)(v0 + 448) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 456) = v27;
  *(void *)(v0 + 464) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 472) = v28;
  *(void *)(v0 + 480) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 488) = v29;
  *(void *)(v0 + 496) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 504) = v30;
  *(void *)(v0 + 512) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 520) = v31;
  *(void *)(v0 + 528) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 536) = v32;
  *(void *)(v0 + 544) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 552) = v33;
  *(void *)(v0 + 560) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 568) = v34;
  *(void *)(v0 + 576) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 584) = v35;
  *(void *)(v0 + 592) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 600) = v36;
  *(void *)(v0 + 608) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 616) = v37;
  *(void *)(v0 + 624) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 632) = v38;
  *(void *)(v0 + 640) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 648) = v39;
  *(void *)(v0 + 656) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 664) = v40;
  *(void *)(v0 + 672) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 680) = v41;
  *(void *)(v0 + 688) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 696) = v42;
  *(void *)(v0 + 704) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 712) = v43;
  *(void *)(v0 + 720) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 728) = v44;
  *(void *)(v0 + 736) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 744) = v45;
  *(void *)(v0 + 752) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 760) = v46;
  *(void *)(v0 + 768) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 776) = v47;
  *(void *)(v0 + 784) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 792) = v48;
  *(void *)(v0 + 800) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 808) = v49;
  *(void *)(v0 + 816) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 824) = v50;
  *(void *)(v0 + 832) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 840) = v51;
  *(void *)(v0 + 848) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 856) = v52;
  *(void *)(v0 + 864) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 872) = v53;
  *(void *)(v0 + 880) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 888) = v54;
  *(void *)(v0 + 896) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 904) = v55;
  *(void *)(v0 + 912) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 920) = v56;
  *(void *)(v0 + 928) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 936) = v57;
  *(void *)(v0 + 944) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 952) = v58;
  *(void *)(v0 + 960) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 968) = v59;
  *(void *)(v0 + 976) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 984) = v60;
  *(void *)(v0 + 992) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1000) = v61;
  *(void *)(v0 + 1008) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1016) = v62;
  *(void *)(v0 + 1024) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1032) = v63;
  *(void *)(v0 + 1040) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1048) = v64;
  *(void *)(v0 + 1056) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1064) = v65;
  *(void *)(v0 + 1072) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1080) = v66;
  *(void *)(v0 + 1088) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1096) = v67;
  *(void *)(v0 + 1104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1112) = v68;
  *(void *)(v0 + 1120) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1128) = v69;
  *(void *)(v0 + 1136) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1144) = v70;
  *(void *)(v0 + 1152) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1160) = v71;
  *(void *)(v0 + 1168) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1176) = v72;
  *(void *)(v0 + 1184) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1192) = v73;
  *(void *)(v0 + 1200) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1208) = v74;
  *(void *)(v0 + 1216) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1224) = v75;
  *(void *)(v0 + 1232) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1240) = v76;
  *(void *)(v0 + 1248) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1256) = v77;
  *(void *)(v0 + 1264) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1272) = v78;
  *(void *)(v0 + 1280) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1288) = v79;
  *(void *)(v0 + 1296) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1304) = v80;
  *(void *)(v0 + 1312) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1320) = v81;
  *(void *)(v0 + 1328) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1336) = v82;
  *(void *)(v0 + 1344) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1352) = v83;
  *(void *)(v0 + 1360) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1368) = v84;
  *(void *)(v0 + 1376) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1384) = v85;
  *(void *)(v0 + 1392) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1400) = v86;
  *(void *)(v0 + 1408) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1416) = v87;
  *(void *)(v0 + 1424) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1432) = v88;
  *(void *)(v0 + 1440) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1448) = v89;
  *(void *)(v0 + 1456) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1464) = v90;
  *(void *)(v0 + 1472) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1480) = v91;
  *(void *)(v0 + 1488) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1496) = v92;
  *(void *)(v0 + 1504) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1512) = v93;
  *(void *)(v0 + 1520) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1528) = v94;
  *(void *)(v0 + 1536) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1544) = v95;
  *(void *)(v0 + 1552) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1560) = v96;
  *(void *)(v0 + 1568) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1576) = v97;
  *(void *)(v0 + 1584) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1592) = v98;
  *(void *)(v0 + 1600) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1608) = v99;
  *(void *)(v0 + 1616) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1624) = v100;
  *(void *)(v0 + 1632) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1640) = v101;
  *(void *)(v0 + 1648) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1656) = v102;
  *(void *)(v0 + 1664) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1672) = v103;
  *(void *)(v0 + 1680) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1688) = v104;
  *(void *)(v0 + 1696) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1704) = v105;
  *(void *)(v0 + 1712) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1720) = v106;
  *(void *)(v0 + 1728) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1736) = v107;
  *(void *)(v0 + 1744) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1752) = v108;
  *(void *)(v0 + 1760) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1768) = v109;
  *(void *)(v0 + 1776) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1784) = v110;
  *(void *)(v0 + 1792) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1800) = v111;
  *(void *)(v0 + 1808) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1816) = v112;
  *(void *)(v0 + 1824) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1832) = v113;
  *(void *)(v0 + 1840) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1848) = v114;
  *(void *)(v0 + 1856) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1864) = v115;
  *(void *)(v0 + 1872) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1880) = v116;
  *(void *)(v0 + 1888) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1896) = v117;
  *(void *)(v0 + 1904) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1912) = v118;
  *(void *)(v0 + 1920) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1928) = v119;
  *(void *)(v0 + 1936) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1944) = v120;
  *(void *)(v0 + 1952) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1960) = v121;
  *(void *)(v0 + 1968) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1976) = v122;
  *(void *)(v0 + 1984) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 1992) = v123;
  *(void *)(v0 + 2000) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2008) = v124;
  *(void *)(v0 + 2016) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2024) = v125;
  *(void *)(v0 + 2032) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2040) = v126;
  *(void *)(v0 + 2048) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2056) = v127;
  *(void *)(v0 + 2064) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2072) = v128;
  *(void *)(v0 + 2080) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2088) = v129;
  *(void *)(v0 + 2096) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2104) = v130;
  *(void *)(v0 + 2112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2120) = v131;
  *(void *)(v0 + 2128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2136) = v132;
  *(void *)(v0 + 2144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2152) = v133;
  *(void *)(v0 + 2160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2168) = v134;
  *(void *)(v0 + 2176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2184) = v135;
  *(void *)(v0 + 2192) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2200) = v136;
  *(void *)(v0 + 2208) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2216) = v137;
  *(void *)(v0 + 2224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2232) = v138;
  *(void *)(v0 + 2240) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2248) = v139;
  *(void *)(v0 + 2256) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2264) = v140;
  *(void *)(v0 + 2272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2280) = v141;
  *(void *)(v0 + 2288) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2296) = v142;
  *(void *)(v0 + 2304) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2312) = v143;
  *(void *)(v0 + 2320) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2328) = v144;
  *(void *)(v0 + 2336) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2344) = v145;
  *(void *)(v0 + 2352) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2360) = v146;
  *(void *)(v0 + 2368) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2376) = v147;
  *(void *)(v0 + 2384) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2392) = v148;
  *(void *)(v0 + 2400) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2408) = v149;
  *(void *)(v0 + 2416) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2424) = v150;
  *(void *)(v0 + 2432) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2440) = v151;
  *(void *)(v0 + 2448) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2456) = v152;
  *(void *)(v0 + 2464) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2472) = v153;
  *(void *)(v0 + 2480) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2488) = v154;
  *(void *)(v0 + 2496) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2504) = v155;
  *(void *)(v0 + 2512) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2520) = v156;
  *(void *)(v0 + 2528) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2536) = v157;
  *(void *)(v0 + 2544) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2552) = v158;
  *(void *)(v0 + 2560) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2568) = v159;
  *(void *)(v0 + 2576) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2584) = v160;
  *(void *)(v0 + 2592) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2600) = v161;
  *(void *)(v0 + 2608) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2616) = v162;
  *(void *)(v0 + 2624) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2632) = v163;
  *(void *)(v0 + 2640) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2648) = v164;
  *(void *)(v0 + 2656) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2664) = v165;
  *(void *)(v0 + 2672) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2680) = v166;
  *(void *)(v0 + 2688) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2696) = v167;
  *(void *)(v0 + 2704) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2712) = v168;
  *(void *)(v0 + 2720) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2728) = v169;
  *(void *)(v0 + 2736) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2744) = v170;
  *(void *)(v0 + 2752) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2760) = v171;
  *(void *)(v0 + 2768) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2776) = v172;
  *(void *)(v0 + 2784) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2792) = v173;
  *(void *)(v0 + 2800) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2808) = v174;
  *(void *)(v0 + 2816) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2824) = v175;
  *(void *)(v0 + 2832) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2840) = v176;
  *(void *)(v0 + 2848) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2856) = v177;
  *(void *)(v0 + 2864) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2872) = v178;
  *(void *)(v0 + 2880) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2888) = v179;
  *(void *)(v0 + 2896) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2904) = v180;
  *(void *)(v0 + 2912) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2920) = v181;
  *(void *)(v0 + 2928) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2936) = v182;
  *(void *)(v0 + 2944) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2952) = v183;
  *(void *)(v0 + 2960) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2968) = v184;
  *(void *)(v0 + 2976) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 2984) = v185;
  *(void *)(v0 + 2992) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3000) = v186;
  *(void *)(v0 + 3008) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3016) = v187;
  *(void *)(v0 + 3024) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3032) = v188;
  *(void *)(v0 + 3040) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3048) = v189;
  *(void *)(v0 + 3056) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3064) = v190;
  *(void *)(v0 + 3072) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3080) = v191;
  *(void *)(v0 + 3088) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3096) = v192;
  *(void *)(v0 + 3104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3112) = v193;
  *(void *)(v0 + 3120) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3128) = v194;
  *(void *)(v0 + 3136) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3144) = v195;
  *(void *)(v0 + 3152) = 0xD000000000000020;
  OUTLINED_FUNCTION_115_5();
  *(void *)(v0 + 3160) = v196;
  *(void *)(v0 + 3168) = 0xD00000000000001BLL;
  OUTLINED_FUNCTION_115_5();
  *(void *)(v0 + 3176) = v197;
  if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1) {
    swift_once();
  }
  uint64_t v198 = unk_26A099440;
  *(void *)(v0 + 3184) = static LocalIndexClient.keyAttributeItemAppEntityTypeIdentifier;
  *(void *)(v0 + 3192) = v198;
  uint64_t v199 = one-time initialization token for keyAItemAppEntityInstanceIdentifier;
  swift_bridgeObjectRetain();
  if (v199 != -1) {
    swift_once();
  }
  uint64_t v200 = unk_26A099450;
  *(void *)(v0 + 3200) = static LocalIndexClient.keyAItemAppEntityInstanceIdentifier;
  *(void *)(v0 + 3208) = v200;
  *(void *)(v0 + 3216) = 0xD000000000000029;
  OUTLINED_FUNCTION_115_5();
  *(void *)(v0 + 3224) = v201;
  *(void *)(v0 + 3232) = 0xD00000000000001ELL;
  OUTLINED_FUNCTION_115_5();
  *(void *)(v0 + 3240) = v202;
  *(void *)(v0 + 3248) = 0xD000000000000020;
  OUTLINED_FUNCTION_115_5();
  *(void *)(v0 + 3256) = v203;
  *(void *)(v0 + 3264) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3272) = v204;
  *(void *)(v0 + 3280) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3288) = v205;
  *(void *)(v0 + 3296) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3304) = v206;
  *(void *)(v0 + 3312) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3320) = v207;
  *(void *)(v0 + 3328) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3336) = v208;
  *(void *)(v0 + 3344) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3352) = v209;
  *(void *)(v0 + 3360) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3368) = v210;
  *(void *)(v0 + 3376) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3384) = v211;
  *(void *)(v0 + 3392) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3400) = v212;
  *(void *)(v0 + 3408) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3416) = v213;
  *(void *)(v0 + 3424) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3432) = v214;
  *(void *)(v0 + 3440) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3448) = v215;
  *(void *)(v0 + 3456) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3464) = v216;
  *(void *)(v0 + 3472) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3480) = v217;
  *(void *)(v0 + 3488) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 3496) = v218;
  static LocalIndexClient.fetchAttributes = (_UNKNOWN *)v0;
  return swift_bridgeObjectRetain();
}

uint64_t *AppEntityIndexClient.fetchAttributes.unsafeMutableAddressor()
{
  if (one-time initialization token for fetchAttributes != -1) {
    swift_once();
  }
  return &static AppEntityIndexClient.fetchAttributes;
}

uint64_t static AppEntityIndexClient.fetchAttributes.getter()
{
  if (one-time initialization token for fetchAttributes != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t AppEntityIndexClient.search(request:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](AppEntityIndexClient.search(request:), 0, 0);
}

{
  uint64_t (*v2)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  return v2(a1);
}

uint64_t AppEntityIndexClient.search(request:)()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = (uint64_t)v1 + *(int *)(type metadata accessor for AppEntityIndexRequest() + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v6;
  *uint64_t v6 = v0;
  v6[1] = AppEntityIndexClient.search(request:);
  return AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:)(v3, v2, v4, v5);
}

uint64_t AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[50] = a4;
  v5[51] = v4;
  v5[48] = a2;
  v5[49] = a3;
  v5[47] = a1;
  v5[52] = *v4;
  uint64_t v6 = type metadata accessor for SearchResult(0);
  v5[53] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v5[54] = v7;
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v5[57] = v8;
  OUTLINED_FUNCTION_12_0(v8);
  v5[58] = v9;
  v5[59] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_81(v10);
  v5[60] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
  OUTLINED_FUNCTION_81(v11);
  v5[61] = swift_task_alloc();
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  v5[62] = Entity;
  OUTLINED_FUNCTION_81(Entity);
  v5[63] = swift_task_alloc();
  v5[64] = swift_task_alloc();
  return MEMORY[0x270FA2498](AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:), 0, 0);
}

uint64_t AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:)()
{
  uint64_t v56 = v0;
  uint64_t v1 = *(void *)(v0[49] + 16);
  if (v1)
  {
    uint64_t v2 = v0[61];
    uint64_t v4 = v0[50];
    uint64_t v3 = (void *)v0[51];
    uint64_t v6 = v0[47];
    uint64_t v5 = v0[48];
    uint64_t v7 = v3[6];
    uint64_t v51 = v3;
    id v53 = (id)v0[62];
    uint64_t v50 = v3 + 2;
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    uint64_t v8 = OUTLINED_FUNCTION_248();
    v9(v8, v7);
    id v10 = objc_allocWithZone(MEMORY[0x263F78DB0]);
    swift_bridgeObjectRetain();
    id v11 = @nonobjc SPSearchQueryContext.init(search:)(v6, v5);
    v0[65] = v11;
    outlined init with copy of StructuredQueryEntity?(v4, v2);
    if (__swift_getEnumTagSinglePayload(v2, 1, (uint64_t)v53) == 1)
    {
      outlined destroy of Any?(v0[61], &demangling cache variable for type metadata for StructuredQueryEntity?);
    }
    else
    {
      uint64_t v21 = v0[63];
      uint64_t v20 = v0[64];
      uint64_t v23 = v0[47];
      uint64_t v22 = v0[48];
      _s10OmniSearch0B6ResultVWObTm_7(v0[61], v20, (void (*)(void))type metadata accessor for StructuredQueryEntity);
      type metadata accessor for SPQUParse();
      outlined init with copy of StructuredQueryEntity(v20, v21);
      swift_bridgeObjectRetain();
      id v24 = SPQUParse.init(from:query:)(v21, v23, v22);
      uint64_t v25 = v0[64];
      if (v24)
      {
        id v26 = v24;
        objc_msgSend(v11, sel_setSpQUParse_, v24);
      }
      outlined destroy of StructuredQueryEntity(v25);
    }
    uint64_t v27 = v0[49];
    objc_msgSend(v11, sel_setWhyQuery_, 23);
    objc_msgSend(v11, sel_setFetchL2Signals_, 1);
    objc_msgSend(v11, sel_setQueryKind_, 11);
    objc_msgSend(v11, sel_setCurrentTime_, CFAbsoluteTimeGetCurrent());
    objc_msgSend(v11, sel_setAllowInternet_, 0);
    objc_msgSend(v11, sel_setRetainBackendData_, 1);
    objc_msgSend(v11, sel_setEnablePersonalAnswers_, 0);
    id v54 = v11;
    objc_msgSend(v11, sel_setIsAppEntitySearch_, 1);
    uint64_t v55 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v28 = v55;
    uint64_t v29 = v27 + 40;
    do
    {
      swift_retain();
      swift_retain();
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      uint64_t v30 = v0[32];
      uint64_t v31 = v0[33];
      uint64_t v55 = v28;
      unint64_t v33 = *(void *)(v28 + 16);
      unint64_t v32 = *(void *)(v28 + 24);
      if (v33 >= v32 >> 1)
      {
        OUTLINED_FUNCTION_51_5(v32);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v28 = v55;
      }
      *(void *)(v28 + 16) = v33 + 1;
      uint64_t v34 = v28 + 16 * v33;
      *(void *)(v34 + 32) = v30;
      *(void *)(v34 + 40) = v31;
      v29 += 16;
      --v1;
    }
    while (v1);
    uint64_t v35 = v0[49];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    id v37 = v54;
    objc_msgSend(v54, sel_setBundleIDs_, isa);

    uint64_t v38 = static AppEntityIndexClient.filterQueries(for:)(v35);
    unint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_258661700;
    *(void *)(v41 + 32) = v38;
    *(void *)(v41 + 40) = v40;
    swift_bridgeObjectRetain();
    Class v42 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v54, sel_setFilterQueries_, v42);

    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    v0[66] = __swift_project_value_buffer(v43, (uint64_t)static Logging.search);
    swift_bridgeObjectRetain();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      id v37 = v54;
      swift_bridgeObjectRetain();
      v0[46] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v44, v45, "Searching with filter: %s", v46, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v47 = v51[5];
    uint64_t v48 = v51[6];
    __swift_project_boxed_opaque_existential_1(v50, v47);
    uint64_t v52 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(v48 + 24) + **(int **)(v48 + 24));
    uint64_t v49 = (void *)swift_task_alloc();
    v0[67] = v49;
    *uint64_t v49 = v0;
    v49[1] = AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:);
    return v52(v37, v47, v48);
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logging.search);
    uint64_t v13 = (void *)Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_24_2(v14))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_50_11(&dword_257DC6000, v15, v16, "allowedTypes is empty. Returning no results.");
      OUTLINED_FUNCTION_34();
    }

    OUTLINED_FUNCTION_5_25();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_149();
    uint64_t v18 = MEMORY[0x263F8EE78];
    return v17(v18);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v5;

  OUTLINED_FUNCTION_2();
  *(void *)(v2 + 544) = v1;
  *(void *)(v2 + 552) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:);
  }
  else {
    uint64_t v3 = AppEntityIndexClient.matches(for:allowedTypes:structuredQuery:maxItemCount:fetchFullEmailContent:);
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  unint64_t v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  const char *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  void *v138;
  uint64_t v139;
  void (**v140)(uint64_t, uint64_t, uint64_t);
  _OWORD *v141;
  _OWORD *v142;
  uint64_t v143;
  os_log_type_t v144;
  NSObject *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  void *v153;
  uint64_t v154[2];
  uint64_t v155;
  uint64_t v156;

  long long v155 = v0;
  uint64_t v1 = *(void *)(v0 + 544);
  if (v1 >> 62)
  {
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    type metadata accessor for LocalIndexClient();
    uint64_t v3 = OUTLINED_FUNCTION_248();
    static LocalIndexClient.results(for:)(v3);
    swift_bridgeObjectRelease();
    static LocalIndexClient.searchableItems(for:)();
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v6 = Logger.logObject.getter();
    uint64_t v7 = static os_log_type_t.debug.getter();
    uint64_t v8 = v5 >> 62;
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      *(_DWORD *)uint64_t v9 = 134217984;
      if (v8)
      {
        swift_bridgeObjectRetain();
        id v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(void *)(v0 + 360) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_257DC6000, v6, v7, "AppEntitySearchClient.matches found %ld items", v9, 0xCu);
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17)
      {
LABEL_14:
        uint64_t v18 = 0;
        uint64_t v147 = v0 + 56;
        uint64_t v148 = v0 + 16;
        uint64_t v141 = (_OWORD *)(v0 + 160);
        uint64_t v142 = (_OWORD *)(v0 + 96);
        uint64_t v134 = (uint64_t *)(v0 + 336);
        uint64_t v136 = *(void *)(v0 + 448);
        uint64_t v139 = *(void *)(v0 + 424);
        long long v152 = v5 & 0xC000000000000001;
        uint64_t v140 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 464) + 32);
        uint64_t v137 = (void *)(*(void *)(v0 + 440) + 48);
        uint64_t v138 = *(void **)(v0 + 440);
        os_log_type_t v143 = MEMORY[0x263F8EE78];
        os_log_type_t v131 = "ocs.iCloudDriveFileProvider";
        uint64_t v132 = 0x800000025867FF40;
        char v133 = "com.apple.journal";
        uint64_t v135 = 0x800000025867FF10;
        uint64_t v149 = v17;
        unsigned int v150 = v5;
        while (1)
        {
          if (v152) {
            uint64_t v19 = (id)MEMORY[0x25A2C8550](v18, v5);
          }
          else {
            uint64_t v19 = *(id *)(v5 + 8 * v18 + 32);
          }
          uint64_t v20 = v19;
          uint64_t v21 = v18 + 1;
          if (__OFADD__(v18, 1))
          {
            __break(1u);
            goto LABEL_82;
          }
          uint64_t v22 = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v19);
          if (!v23)
          {
            uint64_t v29 = v20;
            uint64_t v30 = Logger.logObject.getter();
            uint64_t v31 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v30, v31))
            {
              unint64_t v32 = OUTLINED_FUNCTION_14_1();
              v154[0] = swift_slowAlloc();
              *(_DWORD *)unint64_t v32 = 136315138;
              unint64_t v33 = objc_msgSend(v29, sel_uniqueIdentifier);
              uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              id v36 = v35;

              *(void *)(v32 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, v154);
              uint64_t v5 = v150;
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_257DC6000, v30, v31, "Skipping item with missing bundleID: %s", (uint8_t *)v32, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_34();
              uint64_t v17 = v149;
              OUTLINED_FUNCTION_34();
            }
            else
            {
            }
            goto LABEL_77;
          }
          id v24 = v22;
          uint64_t v25 = v23;
          id v26 = objc_msgSend(v20, sel_attributeSet);
          uint64_t v27 = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v20);
          uint64_t v151 = v24;
          if (!v28) {
            break;
          }
          if (v27 == 0xD000000000000013 && v28 == 0x800000025867FE10)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            id v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v37 & 1) == 0) {
              break;
            }
          }
          uint64_t v38 = outlined bridged method (pb) of @objc CSSearchableItemAttributeSet.identifier.getter(v26);
          if (v39)
          {
            unint64_t v40 = v38;
            uint64_t v41 = v39;
          }
          else
          {
            uint64_t v41 = 0xE300000000000000;
            unint64_t v40 = 7104878;
          }
LABEL_32:
          uint64_t v44 = v26;
          swift_bridgeObjectRetain_n();
          os_log_type_t v45 = v44;
          swift_bridgeObjectRetain();
          uint64_t v46 = Logger.logObject.getter();
          uint64_t v47 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v144 = v47;
            uint64_t v145 = v46;
            uint64_t v48 = v45;
            uint64_t v49 = swift_slowAlloc();
            v154[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 134219010;
            *(void *)(v0 + 344) = v18;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 304) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v49 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 320) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v151, v25, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v49 + 32) = 2080;
            uint64_t v50 = objc_msgSend(v48, sel_attributeDictionary);
            uint64_t v51 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            *(void *)(v0 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
            *(void *)(v0 + 232) = v52;
            swift_bridgeObjectRetain();
            id v53 = MEMORY[0x263F8D310];
            AnyHashable.init<A>(_:)();
            specialized Dictionary.subscript.getter(v147, v51, v141);
            swift_bridgeObjectRelease();
            if (*(void *)(v0 + 184))
            {
              outlined init with take of Any(v141, (_OWORD *)(v0 + 192));
            }
            else
            {
              *(void *)(v0 + 216) = v53;
              *(void *)(v0 + 192) = 7104878;
              *(void *)(v0 + 200) = 0xE300000000000000;
              outlined destroy of Any?((uint64_t)v141, (uint64_t *)&demangling cache variable for type metadata for Any?);
            }
            outlined destroy of AnyHashable(v147);
            swift_bridgeObjectRelease();
            id v54 = String.init<A>(describing:)();
            *(void *)(v0 + 312) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            *(_WORD *)(v49 + 42) = 2080;
            uint64_t v56 = objc_msgSend(v48, sel_attributeDictionary);
            uint64_t v57 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            *(void *)(v0 + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
            *(void *)(v0 + 280) = v58;
            swift_bridgeObjectRetain();
            AnyHashable.init<A>(_:)();
            specialized Dictionary.subscript.getter(v148, v57, v142);
            swift_bridgeObjectRelease();
            if (*(void *)(v0 + 120))
            {
              outlined init with take of Any(v142, (_OWORD *)(v0 + 128));
            }
            else
            {
              *(void *)(v0 + 152) = v53;
              *(void *)(v0 + 128) = 7104878;
              *(void *)(v0 + 136) = 0xE300000000000000;
              outlined destroy of Any?((uint64_t)v142, (uint64_t *)&demangling cache variable for type metadata for Any?);
            }
            outlined destroy of AnyHashable(v148);
            swift_bridgeObjectRelease();
            uint64_t v59 = String.init<A>(describing:)();
            *(void *)(v0 + 352) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_257DC6000, v145, v144, "(AppEntitySearchClient) Result Rank %ld: id:%s, bundle:%s, L2:%s, L1:%s", (uint8_t *)v49, 0x34u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            os_log_type_t v45 = v48;
            OUTLINED_FUNCTION_34();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v61 = objc_msgSend(v20, sel_uniqueIdentifier);
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v64 = v63;

          *(void *)(v0 + 240) = v62;
          *(void *)(v0 + 248) = v64;
          *(void *)(v0 + 288) = 1096110926;
          *(void *)(v0 + 296) = 0xE400000000000000;
          lazy protocol witness table accessor for type String and conformance String();
          lazy protocol witness table accessor for type String and conformance String();
          LOBYTE(v61) = BidirectionalCollection<>.starts<A>(with:)();
          swift_bridgeObjectRelease();
          uint64_t v5 = v150;
          uint64_t v21 = v18 + 1;
          if (v61)
          {

            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
          uint64_t v65 = objc_msgSend(v20, sel_attributeSet);
          uint64_t v66 = objc_msgSend(v65, sel_contentURL);

          uint64_t v67 = *(void *)(v0 + 480);
          if (v66)
          {
            Swift::String v68 = *(void *)(v0 + 472);
            long long v153 = v45;
            uint64_t v69 = *(void *)(v0 + 456);
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            (*v140)(v67, v68, v69);
            __swift_storeEnumTagSinglePayload(v67, 0, 1, v69);
            uint64_t v70 = v69;
            os_log_type_t v45 = v153;
            if (__swift_getEnumTagSinglePayload(v67, 1, v70) != 1)
            {
              outlined destroy of Any?(*(void *)(v0 + 480), &demangling cache variable for type metadata for URL?);
              uint64_t v71 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(objc_msgSend(v20, sel_attributeSet));
              if (v72)
              {
                if (v71 == 0xD00000000000002BLL && v72 == v135)
                {
LABEL_53:
                  swift_bridgeObjectRelease();
LABEL_54:
                  swift_bridgeObjectRelease();
                  uint64_t v75 = objc_msgSend(v20, sel_uniqueIdentifier);
                  id v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v77 = v76;

                  swift_bridgeObjectRetain_n();
                  uint64_t v78 = v20;
                  uint64_t v79 = Logger.logObject.getter();
                  uint64_t v80 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v79, v80))
                  {
                    uint64_t v81 = (uint8_t *)OUTLINED_FUNCTION_14_1();
                    v154[0] = swift_slowAlloc();
                    *(_DWORD *)uint64_t v81 = 136315138;
                    uint64_t v82 = specialized Encodable.oms_jsonPrettyPrinted()();
                    *uint64_t v134 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v83, v154);
                    uint64_t v21 = v18 + 1;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();

                    _os_log_impl(&dword_257DC6000, v79, v80, "File SearchResult found: %s", v81, 0xCu);
                    swift_arrayDestroy();
                    uint64_t v5 = v150;
                    OUTLINED_FUNCTION_34();
                    OUTLINED_FUNCTION_34();
                  }
                  else
                  {
                    swift_bridgeObjectRelease_n();
                  }
                  id v108 = v143;
                  uint64_t v109 = *(uint64_t **)(v0 + 448);
                  *uint64_t v109 = v146;
                  *(void *)(v136 + 8) = v77;
                  *(void *)(v136 + 16) = v78;
                  type metadata accessor for SearchResultItem(0);
                  long long v110 = swift_storeEnumTagMultiPayload();
                  OUTLINED_FUNCTION_11_28(v110, v111, v112, v113, v114, v115, v116, v117, v130, (uint64_t)v131, v132, (uint64_t)v133, (uint64_t)v134, v135, v136, (uint64_t)v137, (uint64_t)v138, v139);
                  *(uint64_t *)((char *)v109 + v118) = (uint64_t)v78;
                  swift_bridgeObjectRetain();
                  BOOL v119 = v78;
                  OUTLINED_FUNCTION_248();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    id v108 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v143 + 16) + 1, 1, v143);
                  }
                  uint64_t v121 = *(void *)(v108 + 16);
                  char v120 = *(void *)(v108 + 24);
                  os_log_type_t v143 = v108;
                  if (v121 >= v120 >> 1)
                  {
                    char v126 = OUTLINED_FUNCTION_51_5(v120);
                    os_log_type_t v143 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v126, v121 + 1, 1, v108);
                  }
                  *(void *)(v143 + 16) = v121 + 1;
                  OUTLINED_FUNCTION_7_30();
                  _s10OmniSearch0B6ResultVWObTm_7(v124, v122 + v123 * v121, (void (*)(void))type metadata accessor for SearchResult);

                  swift_bridgeObjectRelease();
                  goto LABEL_76;
                }
                LOBYTE(v66) = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v66) {
                  goto LABEL_54;
                }
              }
              uint64_t v73 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(objc_msgSend(v20, sel_attributeSet));
              if (v74)
              {
                if (v73 == 0xD000000000000023 && v74 == v132) {
                  goto LABEL_53;
                }
                LOBYTE(v66) = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v66) {
                  goto LABEL_54;
                }
              }
              goto LABEL_58;
            }
          }
          else
          {
            __swift_storeEnumTagSinglePayload(*(void *)(v0 + 480), 1, 1, *(void *)(v0 + 456));
          }
          outlined destroy of Any?(*(void *)(v0 + 480), &demangling cache variable for type metadata for URL?);
LABEL_58:
          uint64_t v84 = CSSearchableItem.associatedAppEntityId.getter();
          if (v85)
          {
            uint64_t v86 = v84;
            uint64_t v66 = v85;
            uint64_t v87 = CSSearchableItem.associatedAppEntityTypeId.getter();
            if (v88)
            {
              uint64_t v89 = *(uint64_t **)(v0 + 440);
              void *v89 = v86;
              v138[1] = v66;
              v138[2] = v151;
              v138[3] = v25;
              v138[4] = v87;
              v138[5] = v88;
              type metadata accessor for SearchResultItem(0);
              *uint64_t v137 = 0;
              v137[1] = 0;
              uint64_t v90 = swift_storeEnumTagMultiPayload();
              OUTLINED_FUNCTION_11_28(v90, v91, v92, v93, v94, v95, v96, v97, v130, (uint64_t)v131, v132, (uint64_t)v133, (uint64_t)v134, v135, v136, (uint64_t)v137, (uint64_t)v138, v139);
              *(uint64_t *)((char *)v89 + v98) = (uint64_t)v20;
              uint64_t v99 = v20;
              uint64_t v100 = v143;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v100 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v143 + 16) + 1, 1, v143);
              }
              uint64_t v102 = *(void *)(v100 + 16);
              uint64_t v101 = *(void *)(v100 + 24);
              os_log_type_t v143 = v100;
              if (v102 >= v101 >> 1)
              {
                uint64_t v125 = OUTLINED_FUNCTION_51_5(v101);
                os_log_type_t v143 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v125, v102 + 1, 1, v100);
              }
              *(void *)(v143 + 16) = v102 + 1;
              OUTLINED_FUNCTION_7_30();
              _s10OmniSearch0B6ResultVWObTm_7(v105, v103 + v104 * v102, (void (*)(void))type metadata accessor for SearchResult);

              goto LABEL_69;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v99 = Logger.logObject.getter();
          uint64_t v106 = static os_log_type_t.error.getter();
          if (!OUTLINED_FUNCTION_24_2(v106))
          {

LABEL_69:
            goto LABEL_76;
          }
          uint64_t v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v107 = 0;
          _os_log_impl(&dword_257DC6000, v99, (os_log_type_t)v66, "Item found, but missing required fields for associated AppEntity or FileDocument", v107, 2u);
          OUTLINED_FUNCTION_34();

LABEL_43:
LABEL_76:
          uint64_t v17 = v149;
LABEL_77:
          ++v18;
          if (v21 == v17)
          {
            os_log_type_t v14 = *(void **)(v0 + 520);
            swift_bridgeObjectRelease();
            unint64_t v127 = v143;
            goto LABEL_86;
          }
        }
        Class v42 = objc_msgSend(v20, sel_uniqueIdentifier);
        unint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v41 = v43;

        goto LABEL_32;
      }
    }
    os_log_type_t v14 = *(void **)(v0 + 520);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v11 = (void *)Logger.logObject.getter();
    uint64_t v12 = static os_log_type_t.error.getter();
    uint64_t v13 = OUTLINED_FUNCTION_24_2(v12);
    os_log_type_t v14 = *(void **)(v0 + 520);
    if (v13)
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_50_11(&dword_257DC6000, v15, v16, "AppEntitySearchClient.findMatches - Returning early. No sections found!");
      OUTLINED_FUNCTION_34();
    }
  }
  unint64_t v127 = MEMORY[0x263F8EE78];
LABEL_86:

  OUTLINED_FUNCTION_5_25();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  return v128(v127);
}

{
  void *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v17;

  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = v1;
  uint64_t v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  uint64_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[69];
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    uint64_t v9 = v6;
    id v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[41] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_257DC6000, v4, v5, "AppEntitySearchClient: Call to Spotlight failed with error: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    id v11 = (void *)v0[69];
  }
  uint64_t v12 = (void *)v0[69];
  uint64_t v13 = (void *)v0[65];

  OUTLINED_FUNCTION_5_25();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  uint64_t v15 = MEMORY[0x263F8EE78];
  return v14(v15);
}

id SPSearchQueryContext.__allocating_init(search:)(uint64_t a1, uint64_t a2)
{
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v4 = OUTLINED_FUNCTION_248();
  return @nonobjc SPSearchQueryContext.init(search:)(v4, a2);
}

uint64_t static AppEntityIndexClient.filterQueries(for:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v13;
    uint64_t v4 = a1 + 32;
    do
    {
      closure #1 in static AppEntityIndexClient.filterQueries(for:)(v12);
      uint64_t v5 = v12[0];
      uint64_t v6 = v12[1];
      uint64_t v13 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        OUTLINED_FUNCTION_51_5(v7);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v2 = v13;
      }
      *(void *)(v2 + 16) = v8 + 1;
      uint64_t v9 = v2 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  v12[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v10 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v10;
}

void closure #1 in static AppEntityIndexClient.filterQueries(for:)(void *a1@<X8>)
{
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  if (v13._object)
  {
    _StringGuts.grow(_:)(18);
    swift_bridgeObjectRelease();
    v2._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    String.append(_:)(v2);
    swift_bridgeObjectRelease();
    v3._uint64_t countAndFlagsBits = 15677;
    v3._object = (void *)0xE200000000000000;
    String.append(_:)(v3);
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v4._uint64_t countAndFlagsBits = 539371040;
    v4._object = (void *)0xE400000000000000;
    String.append(_:)(v4);
    if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1) {
      swift_once();
    }
    uint64_t v5 = static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier;
    uint64_t v6 = *(void **)algn_26A0993E8;
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = v5;
    v7._object = v6;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = 15677;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    String.append(_:)(v13);
  }
  else
  {
    v9._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._uint64_t countAndFlagsBits = 15677;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    String.append(_:)(v12);
  }
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 41;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  *a1 = 40;
  a1[1] = 0xE100000000000000;
}

uint64_t AppEntityIndexClient.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t AppEntityIndexClient.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

id @nonobjc SPSearchQueryContext.init(search:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    Swift::String v3 = (void *)MEMORY[0x25A2C7AB0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::String v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSearchString_, v3);

  return v4;
}

uint64_t outlined bridged method (pb) of @objc CSSearchableItemAttributeSet.identifier.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_identifier);
  if (v1)
  {
    Swift::String v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_79_0();
}

uint64_t outlined init with copy of StructuredQueryEntity?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s10OmniSearch0B6ResultVWObTm_7(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  uint64_t v4 = OUTLINED_FUNCTION_79_0();
  v5(v4);
  return a2;
}

unint64_t type metadata accessor for SPQUParse()
{
  unint64_t result = lazy cache variable for type metadata for SPQUParse;
  if (!lazy cache variable for type metadata for SPQUParse)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SPQUParse);
  }
  return result;
}

uint64_t outlined init with copy of StructuredQueryEntity(uint64_t a1, uint64_t a2)
{
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Entity - 8) + 16))(a2, a1, Entity);
  return a2;
}

uint64_t outlined destroy of StructuredQueryEntity(uint64_t a1)
{
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Entity - 8) + 8))(a1, Entity);
  return a1;
}

uint64_t type metadata accessor for AppEntityIndexClient()
{
  return self;
}

uint64_t method lookup function for AppEntityIndexClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AppEntityIndexClient);
}

uint64_t dispatch thunk of AppEntityIndexClient.__allocating_init(searchAgent:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t lazy protocol witness table accessor for type WalletTransaction and conformance WalletTransaction(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type FileDocument and conformance FileDocument()
{
  unint64_t result = lazy protocol witness table cache variable for type FileDocument and conformance FileDocument;
  if (!lazy protocol witness table cache variable for type FileDocument and conformance FileDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument and conformance FileDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FileDocument and conformance FileDocument;
  if (!lazy protocol witness table cache variable for type FileDocument and conformance FileDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument and conformance FileDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FileDocument and conformance FileDocument;
  if (!lazy protocol witness table cache variable for type FileDocument and conformance FileDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument and conformance FileDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type FileDocument and conformance FileDocument;
  if (!lazy protocol witness table cache variable for type FileDocument and conformance FileDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FileDocument and conformance FileDocument);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_25()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_6_30(void (*a1)(uint64_t), unint64_t *a2)
{
  return specialized Encodable.oms_jsonPrettyPrinted()(a1, a2, a1);
}

void OUTLINED_FUNCTION_11_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19 = (void *)(v18 + *(int *)(a18 + 24));
  *uint64_t v19 = 0;
  v19[1] = 0;
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  return outlined consume of Data._Representation(v1, v0);
}

uint64_t AppEntityIndexRequest.userQuery.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppEntityIndexRequest.allowedTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppEntityIndexRequest.structuredQuery.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppEntityIndexRequest() + 24);
  return outlined init with copy of StructuredQueryEntity?(v3, a1);
}

uint64_t type metadata accessor for AppEntityIndexRequest()
{
  uint64_t result = type metadata singleton initialization cache for AppEntityIndexRequest;
  if (!type metadata singleton initialization cache for AppEntityIndexRequest) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppEntityIndexRequest.structuredQuery.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_0_18() + 24);
  return outlined assign with take of StructuredQueryEntity?(v0, v2);
}

uint64_t outlined assign with take of StructuredQueryEntity?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AppEntityIndexRequest.structuredQuery.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AppEntityIndexRequest.targetMatches.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AppEntityIndexRequest() + 28));
}

uint64_t AppEntityIndexRequest.targetMatches.setter()
{
  uint64_t result = OUTLINED_FUNCTION_0_18();
  *(void *)(v1 + *(int *)(result + 28)) = v0;
  return result;
}

uint64_t (*AppEntityIndexRequest.targetMatches.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AppEntityIndexRequest.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  MEMORY[0x270FA5388](Entity);
  Swift::String v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppEntityIndexRequest();
  outlined init with copy of StructuredQueryEntity?((uint64_t)v1 + *(int *)(v8 + 24), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, Entity) == 1)
  {
    outlined destroy of StructuredQueryEntity?((uint64_t)v4);
    Swift::String v9 = (void *)0xE300000000000000;
    uint64_t v10 = 7104878;
  }
  else
  {
    outlined init with take of StructuredQueryEntity((uint64_t)v4, (uint64_t)v7);
    StructuredQueryEntity.description.getter();
    uint64_t v10 = v11;
    Swift::String v9 = v12;
    outlined destroy of StructuredQueryEntity((uint64_t)v7);
  }
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v13._uint64_t countAndFlagsBits = 0x6575512072657355;
  v13._object = (void *)0xED000022203A7972;
  String.append(_:)(v13);
  uint64_t v14 = *v1;
  uint64_t v15 = (void *)v1[1];
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._object = (void *)0x8000000258683540;
  v17._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v17);
  uint64_t v18 = swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = MEMORY[0x25A2C7E60](v18, &type metadata for SearchEntityTypeIdentifier);
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0xD000000000000014;
  v20._object = (void *)0x8000000258683560;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = v10;
  v21._object = v9;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._object = (void *)0x8000000258683580;
  v22._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v22);
  v25[1] = *(uint64_t *)((char *)v1 + *(int *)(v8 + 28));
  v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t outlined destroy of StructuredQueryEntity?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t default argument 3 of AppEntityIndexRequest.init(userQuery:allowedTypes:structuredQuery:targetMatches:)()
{
  return 20;
}

uint64_t AppEntityIndexRequest.init(userQuery:allowedTypes:structuredQuery:targetMatches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  uint64_t v9 = type metadata accessor for AppEntityIndexRequest();
  uint64_t result = outlined init with take of StructuredQueryEntity?(a4, (uint64_t)a6 + *(int *)(v9 + 24));
  *(void *)((char *)a6 + *(int *)(v9 + 28)) = a5;
  return result;
}

uint64_t outlined init with take of StructuredQueryEntity(uint64_t a1, uint64_t a2)
{
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Entity - 8) + 32))(a2, a1, Entity);
  return a2;
}

uint64_t outlined init with take of StructuredQueryEntity?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppEntityIndexRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t Entity = (int *)type metadata accessor for StructuredQueryEntity(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)Entity))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for DisplayRepresentation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
      *(void *)&v9[Entity[5]] = *(void *)&v10[Entity[5]];
      *(void *)&v9[Entity[6]] = *(void *)&v10[Entity[6]];
      *(void *)&v9[Entity[7]] = *(void *)&v10[Entity[7]];
      *(void *)&v9[Entity[8]] = *(void *)&v10[Entity[8]];
      *(void *)&v9[Entity[9]] = *(void *)&v10[Entity[9]];
      *(void *)&v9[Entity[10]] = *(void *)&v10[Entity[10]];
      *(void *)&v9[Entity[11]] = *(void *)&v10[Entity[11]];
      *(void *)&v9[Entity[12]] = *(void *)&v10[Entity[12]];
      *(void *)&v9[Entity[13]] = *(void *)&v10[Entity[13]];
      *(void *)&v9[Entity[14]] = *(void *)&v10[Entity[14]];
      *(void *)&v9[Entity[15]] = *(void *)&v10[Entity[15]];
      *(void *)&v9[Entity[16]] = *(void *)&v10[Entity[16]];
      *(void *)&v9[Entity[17]] = *(void *)&v10[Entity[17]];
      *(void *)&v9[Entity[18]] = *(void *)&v10[Entity[18]];
      *(void *)&v9[Entity[19]] = *(void *)&v10[Entity[19]];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)Entity);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for AppEntityIndexRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, Entity);
  if (!result)
  {
    uint64_t v7 = type metadata accessor for DisplayRepresentation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AppEntityIndexRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t Entity = (int *)type metadata accessor for StructuredQueryEntity(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)Entity))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for DisplayRepresentation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
    *(void *)&v8[Entity[5]] = *(void *)&v9[Entity[5]];
    *(void *)&v8[Entity[6]] = *(void *)&v9[Entity[6]];
    *(void *)&v8[Entity[7]] = *(void *)&v9[Entity[7]];
    *(void *)&v8[Entity[8]] = *(void *)&v9[Entity[8]];
    *(void *)&v8[Entity[9]] = *(void *)&v9[Entity[9]];
    *(void *)&v8[Entity[10]] = *(void *)&v9[Entity[10]];
    *(void *)&v8[Entity[11]] = *(void *)&v9[Entity[11]];
    *(void *)&v8[Entity[12]] = *(void *)&v9[Entity[12]];
    *(void *)&v8[Entity[13]] = *(void *)&v9[Entity[13]];
    *(void *)&v8[Entity[14]] = *(void *)&v9[Entity[14]];
    *(void *)&v8[Entity[15]] = *(void *)&v9[Entity[15]];
    *(void *)&v8[Entity[16]] = *(void *)&v9[Entity[16]];
    *(void *)&v8[Entity[17]] = *(void *)&v9[Entity[17]];
    *(void *)&v8[Entity[18]] = *(void *)&v9[Entity[18]];
    *(void *)&v8[Entity[19]] = *(void *)&v9[Entity[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)Entity);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithCopy for AppEntityIndexRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t Entity = (int *)type metadata accessor for StructuredQueryEntity(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)Entity);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)Entity);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for DisplayRepresentation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v7, v8, v15);
      *(void *)&v7[Entity[5]] = *(void *)&v8[Entity[5]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[6]] = *(void *)&v8[Entity[6]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[7]] = *(void *)&v8[Entity[7]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[8]] = *(void *)&v8[Entity[8]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[9]] = *(void *)&v8[Entity[9]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[10]] = *(void *)&v8[Entity[10]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[11]] = *(void *)&v8[Entity[11]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[12]] = *(void *)&v8[Entity[12]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[13]] = *(void *)&v8[Entity[13]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[14]] = *(void *)&v8[Entity[14]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[15]] = *(void *)&v8[Entity[15]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[16]] = *(void *)&v8[Entity[16]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[17]] = *(void *)&v8[Entity[17]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[18]] = *(void *)&v8[Entity[18]];
      swift_retain();
      swift_release();
      *(void *)&v7[Entity[19]] = *(void *)&v8[Entity[19]];
      swift_retain();
      swift_release();
      goto LABEL_7;
    }
    outlined destroy of StructuredQueryEntity((uint64_t)v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
  *(void *)&v7[Entity[5]] = *(void *)&v8[Entity[5]];
  *(void *)&v7[Entity[6]] = *(void *)&v8[Entity[6]];
  *(void *)&v7[Entity[7]] = *(void *)&v8[Entity[7]];
  *(void *)&v7[Entity[8]] = *(void *)&v8[Entity[8]];
  *(void *)&v7[Entity[9]] = *(void *)&v8[Entity[9]];
  *(void *)&v7[Entity[10]] = *(void *)&v8[Entity[10]];
  *(void *)&v7[Entity[11]] = *(void *)&v8[Entity[11]];
  *(void *)&v7[Entity[12]] = *(void *)&v8[Entity[12]];
  *(void *)&v7[Entity[13]] = *(void *)&v8[Entity[13]];
  *(void *)&v7[Entity[14]] = *(void *)&v8[Entity[14]];
  *(void *)&v7[Entity[15]] = *(void *)&v8[Entity[15]];
  *(void *)&v7[Entity[16]] = *(void *)&v8[Entity[16]];
  *(void *)&v7[Entity[17]] = *(void *)&v8[Entity[17]];
  *(void *)&v7[Entity[18]] = *(void *)&v8[Entity[18]];
  *(void *)&v7[Entity[19]] = *(void *)&v8[Entity[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)Entity);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for AppEntityIndexRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t Entity = (int *)type metadata accessor for StructuredQueryEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)Entity))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for DisplayRepresentation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    *(void *)&v7[Entity[5]] = *(void *)&v8[Entity[5]];
    *(void *)&v7[Entity[6]] = *(void *)&v8[Entity[6]];
    *(void *)&v7[Entity[7]] = *(void *)&v8[Entity[7]];
    *(void *)&v7[Entity[8]] = *(void *)&v8[Entity[8]];
    *(void *)&v7[Entity[9]] = *(void *)&v8[Entity[9]];
    *(void *)&v7[Entity[10]] = *(void *)&v8[Entity[10]];
    *(void *)&v7[Entity[11]] = *(void *)&v8[Entity[11]];
    *(void *)&v7[Entity[12]] = *(void *)&v8[Entity[12]];
    *(void *)&v7[Entity[13]] = *(void *)&v8[Entity[13]];
    *(void *)&v7[Entity[14]] = *(void *)&v8[Entity[14]];
    *(void *)&v7[Entity[15]] = *(void *)&v8[Entity[15]];
    *(void *)&v7[Entity[16]] = *(void *)&v8[Entity[16]];
    *(void *)&v7[Entity[17]] = *(void *)&v8[Entity[17]];
    *(void *)&v7[Entity[18]] = *(void *)&v8[Entity[18]];
    *(void *)&v7[Entity[19]] = *(void *)&v8[Entity[19]];
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)Entity);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for AppEntityIndexRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t Entity = (int *)type metadata accessor for StructuredQueryEntity(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)Entity);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)Entity);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      uint64_t v16 = type metadata accessor for DisplayRepresentation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v8, v9, v16);
      *(void *)&v8[Entity[5]] = *(void *)&v9[Entity[5]];
      swift_release();
      *(void *)&v8[Entity[6]] = *(void *)&v9[Entity[6]];
      swift_release();
      *(void *)&v8[Entity[7]] = *(void *)&v9[Entity[7]];
      swift_release();
      *(void *)&v8[Entity[8]] = *(void *)&v9[Entity[8]];
      swift_release();
      *(void *)&v8[Entity[9]] = *(void *)&v9[Entity[9]];
      swift_release();
      *(void *)&v8[Entity[10]] = *(void *)&v9[Entity[10]];
      swift_release();
      *(void *)&v8[Entity[11]] = *(void *)&v9[Entity[11]];
      swift_release();
      *(void *)&v8[Entity[12]] = *(void *)&v9[Entity[12]];
      swift_release();
      *(void *)&v8[Entity[13]] = *(void *)&v9[Entity[13]];
      swift_release();
      *(void *)&v8[Entity[14]] = *(void *)&v9[Entity[14]];
      swift_release();
      *(void *)&v8[Entity[15]] = *(void *)&v9[Entity[15]];
      swift_release();
      *(void *)&v8[Entity[16]] = *(void *)&v9[Entity[16]];
      swift_release();
      *(void *)&v8[Entity[17]] = *(void *)&v9[Entity[17]];
      swift_release();
      *(void *)&v8[Entity[18]] = *(void *)&v9[Entity[18]];
      swift_release();
      *(void *)&v8[Entity[19]] = *(void *)&v9[Entity[19]];
      swift_release();
      goto LABEL_7;
    }
    outlined destroy of StructuredQueryEntity((uint64_t)v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v13 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
  *(void *)&v8[Entity[5]] = *(void *)&v9[Entity[5]];
  *(void *)&v8[Entity[6]] = *(void *)&v9[Entity[6]];
  *(void *)&v8[Entity[7]] = *(void *)&v9[Entity[7]];
  *(void *)&v8[Entity[8]] = *(void *)&v9[Entity[8]];
  *(void *)&v8[Entity[9]] = *(void *)&v9[Entity[9]];
  *(void *)&v8[Entity[10]] = *(void *)&v9[Entity[10]];
  *(void *)&v8[Entity[11]] = *(void *)&v9[Entity[11]];
  *(void *)&v8[Entity[12]] = *(void *)&v9[Entity[12]];
  *(void *)&v8[Entity[13]] = *(void *)&v9[Entity[13]];
  *(void *)&v8[Entity[14]] = *(void *)&v9[Entity[14]];
  *(void *)&v8[Entity[15]] = *(void *)&v9[Entity[15]];
  *(void *)&v8[Entity[16]] = *(void *)&v9[Entity[16]];
  *(void *)&v8[Entity[17]] = *(void *)&v9[Entity[17]];
  *(void *)&v8[Entity[18]] = *(void *)&v9[Entity[18]];
  *(void *)&v8[Entity[19]] = *(void *)&v9[Entity[19]];
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)Entity);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEntityIndexRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2584356CC);
}

uint64_t sub_2584356CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppEntityIndexRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25843576C);
}

uint64_t sub_25843576C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StructuredQueryEntity?);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for AppEntityIndexRequest()
{
  type metadata accessor for StructuredQueryEntity?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for StructuredQueryEntity?()
{
  if (!lazy cache variable for type metadata for StructuredQueryEntity?)
  {
    type metadata accessor for StructuredQueryEntity(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for StructuredQueryEntity?);
    }
  }
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return type metadata accessor for AppEntityIndexRequest();
}

void __swiftcall AppEntityItem.init(id:bundleId:typeId:protocolId:)(OmniSearch::AppEntityItem *__return_ptr retstr, Swift::String id, Swift::String bundleId, Swift::String typeId, Swift::String_optional protocolId)
{
  retstr->id = id;
  retstr->bundleId = bundleId;
  retstr->typeId = typeId;
  retstr->protocolId = protocolId;
}

uint64_t AppEntityItem.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AppEntityItem.bundleId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AppEntityItem.typeId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AppEntityItem.protocolId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AppEntityItem.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x644965707974 && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEA00000000006449)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t AppEntityItem.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6449656C646E7562;
      break;
    case 2:
      uint64_t result = 0x644965707974;
      break;
    case 3:
      uint64_t result = 0x6C6F636F746F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppEntityItem.CodingKeys()
{
  return AppEntityItem.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppEntityItem.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = AppEntityItem.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppEntityItem.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppEntityItem.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppEntityItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppEntityItem.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[2];
  v14[5] = v1[3];
  uint64_t v14[6] = v9;
  uint64_t v10 = v1[4];
  v14[3] = v1[5];
  v14[4] = v10;
  uint64_t v11 = v1[6];
  v14[1] = v1[7];
  uint64_t v14[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v18 = 0;
  uint64_t v12 = v14[7];
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v12)
  {
    char v17 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v16 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v15 = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

uint64_t AppEntityItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppEntityItem.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v8 = v7;
  uint64_t v22 = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v23 = v10;
  uint64_t v21 = v9;
  swift_bridgeObjectRetain();
  uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v11;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v15 = v14;
  uint64_t v18 = v12;
  uint64_t v16 = OUTLINED_FUNCTION_1_24();
  v17(v16);
  swift_bridgeObjectRetain();
  *a2 = v22;
  a2[1] = v8;
  a2[2] = v21;
  a2[3] = v23;
  a2[4] = v19;
  a2[5] = v20;
  a2[6] = v18;
  a2[7] = v15;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t instantiation function for generic protocol witness table for AppEntityItem(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type AppEntityItem and conformance AppEntityItem();
  a1[2] = lazy protocol witness table accessor for type AppEntityItem and conformance AppEntityItem();
  unint64_t result = lazy protocol witness table accessor for type AppEntityItem and conformance AppEntityItem();
  a1[3] = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type AppEntityItem and conformance AppEntityItem()
{
  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem;
  if (!lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem;
  if (!lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem;
  if (!lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem;
  if (!lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppEntityItem@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppEntityItem.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppEntityItem(void *a1)
{
  return AppEntityItem.encode(to:)(a1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AppEntityItem(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  id v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v7[4] = *a2;
  v7[5] = v4;
  long long v5 = a2[3];
  v7[6] = a2[2];
  v7[7] = v5;
  return specialized static SearchItem.== infix(_:_:)((uint64_t)v7) & 1;
}

uint64_t getEnumTagSinglePayload for AppEntityItem(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEntityItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppEntityItem()
{
  return &type metadata for AppEntityItem;
}

unsigned char *storeEnumTagSinglePayload for AppEntityItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258436484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for AppEntityItem.CodingKeys()
{
  return &unk_2706AE4A8;
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return v0;
}

uint64_t AppEntitySearchService.type.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t AppEntitySearchService.indexClient.getter()
{
  return swift_retain();
}

uint64_t AppEntitySearchService.maxItemCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t AppEntitySearchService.init(maxItemCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v4 = static LocalSearchManager.shared;
  type metadata accessor for AppEntityIndexClient();
  uint64_t v5 = (void *)swift_allocObject();
  v5[5] = type metadata accessor for LocalSearchManager();
  v5[6] = &protocol witness table for LocalSearchManager;
  v5[2] = v4;
  *(void *)a2 = 4;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = a1;
  return swift_retain();
}

uint64_t AppEntitySearchService.search(entityRequest:)(uint64_t a1)
{
  v2[3] = a1;
  type metadata accessor for AppEntityIndexRequest();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *(void *)(v1 + 16);
  v2[4] = v3;
  v2[5] = v4;
  return MEMORY[0x270FA2498](AppEntitySearchService.search(entityRequest:), 0, 0);
}

uint64_t AppEntitySearchService.search(entityRequest:)()
{
  uint64_t v15 = v0;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
  outlined init with copy of AppEntityIndexRequest(v2, v1);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[4];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = AppEntityIndexRequest.description.getter();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AppEntityIndexRequest(v7);
    _os_log_impl(&dword_257DC6000, v4, v5, "Start AppEntity search with request: %s", v8, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    outlined destroy of AppEntityIndexRequest(v0[4]);
  }

  uint64_t v11 = (void *)swift_task_alloc();
  v0[6] = v11;
  *uint64_t v11 = v0;
  v11[1] = AppEntitySearchService.search(entityRequest:);
  uint64_t v12 = v0[3];
  return AppEntityIndexClient.search(request:)(v12);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  os_log_type_t v5 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(v2);
}

uint64_t AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_27();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 48) = v4;
  uint64_t v5 = type metadata accessor for OSSignpostError();
  *(void *)(v1 + 72) = v5;
  OUTLINED_FUNCTION_12_0(v5);
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 96) = swift_task_alloc();
  *(void *)(v1 + 104) = type metadata accessor for AppEntityIndexRequest();
  *(void *)(v1 + 112) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OSSignpostID();
  *(void *)(v1 + 120) = v7;
  OUTLINED_FUNCTION_12_0(v7);
  *(void *)(v1 + 128) = v8;
  *(void *)(v1 + 136) = swift_task_alloc();
  *(void *)(v1 + 144) = swift_task_alloc();
  *(void *)(v1 + 152) = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *v0;
  *(void *)(v1 + 160) = v9;
  *(void *)(v1 + 168) = v10;
  *(unsigned char *)(v1 + 272) = *((unsigned char *)v0 + 8);
  uint64_t v11 = v0[3];
  *(void *)(v1 + 176) = v0[2];
  *(void *)(v1 + 184) = v11;
  return MEMORY[0x270FA2498](AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  os_signpost_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint8_t *v41;
  os_signpost_id_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = OSSignposter.logHandle.getter();
  uint64_t v3 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v2, v3, v5, "AppEntitySearchService.search", "", v4, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v0 + 200) = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v0 + 208) = v10;
  *(void *)(v0 + 216) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v7, v8);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v13 = static MetricsLogger.shared;
  uint64_t v14 = type metadata accessor for OmniSearchOptions();
  uint64_t v15 = (void *)(v11 + *(int *)(v14 + 28));
  uint64_t v16 = *v15;
  *(void *)(v0 + 224) = *v15;
  *(void *)(v0 + 232) = v15[1];
  char v17 = (void *)(v11 + *(int *)(v14 + 32));
  *(void *)(v0 + 240) = *v17;
  *(void *)(v0 + 248) = v17[1];
  (*(void (**)(uint64_t))(*(void *)v13 + 160))(v16);
  if (v12 && (uint64_t v18 = *(void *)(v0 + 56), *(void *)(v18 + 16)))
  {
    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v20 = *(unsigned char *)(v0 + 272);
    uint64_t v47 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 168);
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v22 = *(void **)(v0 + 112);
    id v24 = *(void *)(v0 + 48);
    uint64_t v26 = *(void *)(v24 + 16);
    uint64_t v25 = *(void *)(v24 + 24);
    unint64_t v27 = type metadata accessor for UserQuery();
    outlined init with copy of StructuredQueryEntity?(v24 + *(int *)(v27 + 24), (uint64_t)v22 + *(int *)(v23 + 24));
    *uint64_t v22 = v26;
    v22[1] = v25;
    v22[2] = v18;
    *(void *)((char *)v22 + *(int *)(v23 + 28)) = v19;
    *(void *)(v0 + 16) = v21;
    *(unsigned char *)(v0 + 24) = v20;
    *(void *)(v0 + 32) = v47;
    *(void *)(v0 + 40) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v28;
    *uint64_t v28 = v0;
    v28[1] = AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:);
    uint64_t v29 = *(void *)(v0 + 112);
    return AppEntitySearchService.search(entityRequest:)(v29);
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static Logging.search);
    unint64_t v32 = Logger.logObject.getter();
    unint64_t v33 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_257DC6000, v32, v33, "Allowed types is nil or empty. Returning empty [SearchResult].", v34, 2u);
      OUTLINED_FUNCTION_34();
    }

    (*(void (**)(void, void, void, void))(*(void *)static MetricsLogger.shared + 168))(*v15, v15[1], *v17, v17[1]);
    uint64_t v35 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    id v36 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v38 = *(void *)(v0 + 80);
      id v37 = *(void *)(v0 + 88);
      unint64_t v39 = *(void *)(v0 + 72);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v38 + 88))(v37, v39) == *MEMORY[0x263F90238])
      {
        unint64_t v40 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
        unint64_t v40 = "";
      }
      uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v41 = 0;
      Class v42 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl(&dword_257DC6000, v35, v36, v42, "AppEntitySearchService.search", v40, v41, 2u);
      OUTLINED_FUNCTION_34();
    }
    uint64_t v43 = *(void *)(v0 + 136);
    uint64_t v44 = *(void *)(v0 + 120);

    v10(v43, v44);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v45 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v46 = MEMORY[0x263F8EE78];
    return v45(v46);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 264) = v0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint8_t *v11;
  os_signpost_id_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;

  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v3 = v0[29];
  outlined destroy of AppEntityIndexRequest(v0[14]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)static MetricsLogger.shared + 168))(v4, v3, v1, v2);
  uint64_t v5 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v6 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v7 = v0[12];
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[10];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8) == *MEMORY[0x263F90238])
    {
      uint64_t v10 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(v0[10] + 8))(v0[12], v0[9]);
      uint64_t v10 = "";
    }
    uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v11 = 0;
    uint64_t v12 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v5, v6, v12, "AppEntitySearchService.search", v10, v11, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[26];
  uint64_t v14 = v0[18];
  uint64_t v15 = v0[15];

  v13(v14, v15);
  swift_release();
  uint64_t v16 = v0[33];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v16);
}

Swift::String __swiftcall AppEntitySearchService.toString(documents:)(Swift::OpaquePointer documents)
{
  uint64_t v1 = type metadata accessor for String.Encoding();
  MEMORY[0x270FA5388](v1 - 8);
  if (one-time initialization token for iso8601PrettyPrinted != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
  lazy protocol witness table accessor for type [SearchResult] and conformance <A> [A]();
  uint64_t v2 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v4 = v3;
  static String.Encoding.utf8.getter();
  uint64_t v5 = String.init(data:encoding:)();
  if (v6)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    outlined consume of Data._Representation(v2, v4);
  }
  else
  {
    outlined consume of Data._Representation(v2, v4);
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v9 = v7;
  uint64_t v10 = (void *)v8;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t protocol witness for SearchService.type.getter in conformance AppEntitySearchService()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance AppEntitySearchService()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance AppEntitySearchService;
  return AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v7 = *v1;
  unint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v0) {
    unint64_t v4 = v3;
  }
  return v5(v4);
}

uint64_t outlined destroy of AppEntityIndexRequest(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppEntityIndexRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for AppEntitySearchService()
{
  return swift_release();
}

uint64_t initializeWithCopy for AppEntitySearchService(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppEntitySearchService(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AppEntitySearchService(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEntitySearchService(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEntitySearchService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)Swift::String result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppEntitySearchService()
{
  return &type metadata for AppEntitySearchService;
}

uint64_t outlined init with copy of AppEntityIndexRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppEntityIndexRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_5_26(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t SearchEntityTypeIdentifier.bundleId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchEntityTypeIdentifier.typeName.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchEntityTypeIdentifier.bundleId : SearchEntityTypeIdentifier@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchEntityTypeIdentifier.bundleId.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for SearchEntityTypeIdentifier.bundleId : SearchEntityTypeIdentifier()
{
  return SearchEntityTypeIdentifier.bundleId.setter();
}

uint64_t SearchEntityTypeIdentifier.bundleId.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntityTypeIdentifier.bundleId.modify(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntityTypeIdentifier.$bundleId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t key path getter for SearchEntityTypeIdentifier.typeName : SearchEntityTypeIdentifier@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchEntityTypeIdentifier.typeName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for SearchEntityTypeIdentifier.typeName : SearchEntityTypeIdentifier()
{
  return SearchEntityTypeIdentifier.typeName.setter();
}

uint64_t SearchEntityTypeIdentifier.typeName.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntityTypeIdentifier.typeName.modify(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntityTypeIdentifier.$typeName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntityTypeIdentifier.description.getter()
{
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  if (v6._object) {
    uint64_t countAndFlagsBits = v6._countAndFlagsBits;
  }
  else {
    uint64_t countAndFlagsBits = 7104878;
  }
  if (v6._object) {
    object = v6._object;
  }
  else {
    object = (void *)0xE300000000000000;
  }
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x4E65707974207C20;
  v2._object = (void *)0xED0000203A656D61;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = countAndFlagsBits;
  v3._object = object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 62;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0x49656C646E75623CLL;
}

double SearchEntityTypeIdentifier.init()@<D0>(_OWORD *a1@<X8>)
{
  SearchEntityTypeIdentifier.init(bundleId:typeName:)((uint64_t *)&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t SearchEntityTypeIdentifier.init(bundleId:typeName:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v7 = MEMORY[0x25A2C4900](v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v8 = MEMORY[0x25A2C4900](v6);
  swift_retain_n();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release_n();
  uint64_t result = swift_release_n();
  *a1 = v7;
  a1[1] = v8;
  return result;
}

uint64_t static SearchEntityTypeIdentifier.make(identifier:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TypeIdentifier.PrimitiveTypeIdentifier();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = type metadata accessor for TypeIdentifier();
  OUTLINED_FUNCTION_1();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_15();
  uint64_t v17 = v16 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16 - v15, a1, v11);
  int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v17, v11);
  if (v18 != *MEMORY[0x263F80760])
  {
    if (v18 == *MEMORY[0x263F80740])
    {
      uint64_t v27 = OUTLINED_FUNCTION_3_38();
      v28(v27);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchEntityTypeIdentifier>);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_258661700;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      SearchEntityTypeIdentifier.init(bundleId:typeName:)((uint64_t *)(v26 + 32));
      goto LABEL_6;
    }
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_38();
  v20(v19);
  uint64_t v21 = swift_projectBox();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v22(v10, v21, v2);
  v22(v8, (uint64_t)v10, v2);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v8, v2);
  int v24 = *MEMORY[0x263F80700];
  uint64_t v25 = *(void (**)(void))(v4 + 8);
  OUTLINED_FUNCTION_28_17();
  v25();
  if (v23 != v24)
  {
    OUTLINED_FUNCTION_28_17();
    v25();
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchEntityTypeIdentifier>);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_258661D60;
  SearchEntityTypeIdentifier.init(bundleId:typeName:)((uint64_t *)(v26 + 32));
  SearchEntityTypeIdentifier.init(bundleId:typeName:)((uint64_t *)(v26 + 48));
  OUTLINED_FUNCTION_28_17();
  v25();
LABEL_6:
  swift_release();
  return v26;
}

uint64_t SearchEntityTypeIdentifier.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E65707974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t SearchEntityTypeIdentifier.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x656D614E65707974;
  }
  else {
    return 0x6449656C646E7562;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchEntityTypeIdentifier.CodingKeys()
{
  return SearchEntityTypeIdentifier.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchEntityTypeIdentifier.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = SearchEntityTypeIdentifier.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchEntityTypeIdentifier.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchEntityTypeIdentifier.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchEntityTypeIdentifier.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchEntityTypeIdentifier.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  _s10AppIntents14EntityPropertyCySSGACyxGSEAASeRzSERzrlWlTm_1((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>);
  OUTLINED_FUNCTION_2_20();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>);
    OUTLINED_FUNCTION_2_20();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t SearchEntityTypeIdentifier.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchEntityTypeIdentifier.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_15();
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_15();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  MEMORY[0x25A2C4900](v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  MEMORY[0x25A2C4900](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    _s10AppIntents14EntityPropertyCySSGACyxGSEAASeRzSERzrlWlTm_1((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_retain();
    swift_release();
    lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = OUTLINED_FUNCTION_4_26();
    v11(v10);
    swift_retain();
    swift_release();
    *a2 = v14;
    a2[1] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_release();
  return swift_release();
}

uint64_t protocol witness for Decodable.init(from:) in conformance SearchEntityTypeIdentifier@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SearchEntityTypeIdentifier.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchEntityTypeIdentifier(void *a1)
{
  return SearchEntityTypeIdentifier.encode(to:)(a1);
}

uint64_t static SearchEntityTypeIdentifier.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchEntityTypeIdentifier.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SearchEntityTypeIdentifier.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchEntityTypeIdentifier.typeDisplayRepresentation);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static SearchEntityTypeIdentifier.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchEntityTypeIdentifier.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t SearchEntityTypeIdentifier.displayRepresentation.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_59_0();
  uint64_t v9 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_1();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v25 - v18;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  long long v25 = *v0;
  v21._uint64_t countAndFlagsBits = SearchEntityTypeIdentifier.description.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  LocalizedStringResource.init(stringInterpolation:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v19, v11);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v11);
  uint64_t v23 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v23);
  DisplayRepresentation.init(title:subtitle:image:)();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v11);
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance SearchEntityTypeIdentifier(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchEntityTypeIdentifier()
{
  lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier();
  return UUID.init()();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchEntityTypeIdentifier(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchEntityTypeIdentifier(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier();
  return MEMORY[0x270EE1D98](a1, v2);
}

unint64_t lazy protocol witness table accessor for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntityTypeIdentifier.CodingKeys and conformance SearchEntityTypeIdentifier.CodingKeys);
  }
  return result;
}

unint64_t _s10AppIntents14EntityPropertyCySSGACyxGSEAASeRzSERzrlWlTm_1(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EntityProperty<String>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in SearchEntityTypeIdentifier()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<SearchEntityTypeIdentifier> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchEntityTypeIdentifier()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchEntityTypeIdentifier> and conformance EmptyResolverSpecification<A>);
}

ValueMetadata *type metadata accessor for SearchEntityTypeIdentifier()
{
  return &type metadata for SearchEntityTypeIdentifier;
}

unsigned char *storeEnumTagSinglePayload for SearchEntityTypeIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25843951CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SearchEntityTypeIdentifier.CodingKeys()
{
  return &unk_2706AE670;
}

uint64_t OUTLINED_FUNCTION_2_20()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_3_38()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  return v0;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDyS2SG_SSs5NeverOTg5031_sS3SIgggo_SS3key_SS5valuetSSs5D80OIegnrzr_TR57_s10OmniSearch11GeoLocationV11descriptionSSvgS2S_SStXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = specialized Dictionary.startIndex.getter(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v6 = a1 + 64;
        while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v18 = v1;
          int v19 = v4;
          uint64_t v7 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v8 = *v7;
          uint64_t v9 = v7[1];
          uint64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
          uint64_t v11 = *v10;
          uint64_t v12 = (void *)v10[1];
          uint64_t v20 = v8;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v13._uint64_t countAndFlagsBits = 8250;
          v13._object = (void *)0xE200000000000000;
          String.append(_:)(v13);
          v14._uint64_t countAndFlagsBits = v11;
          v14._object = v12;
          String.append(_:)(v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v15 = *(void *)(v21 + 16);
          if (v15 >= *(void *)(v21 + 24) >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          *(void *)(v21 + 16) = v15 + 1;
          uint64_t v16 = v21 + 16 * v15;
          *(void *)(v16 + 32) = v20;
          *(void *)(v16 + 40) = v9;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v6 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v19 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v17 = _HashTable.occupiedBucket(after:)();
          uint64_t v1 = v18 - 1;
          if (v18 == 1) {
            return;
          }
          unint64_t v5 = v17;
          if ((v17 & 0x8000000000000000) == 0)
          {
            int v4 = *(_DWORD *)(a1 + 36);
            if (v17 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t GeoLocation.metadata.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v32 = *(void *)(v0 + 56);
  unint64_t v33 = *(void **)(v0 + 96);
  uint64_t v34 = *(void *)(v0 + 88);
  uint64_t v35 = *(void *)(v0 + 112);
  id v36 = *(void **)(v0 + 120);
  uint64_t v37 = *(void *)(v0 + 128);
  uint64_t v38 = *(void **)(v0 + 136);
  char v39 = *(unsigned char *)(v0 + 148);
  char v31 = *(unsigned char *)(v0 + 156);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2586713C0;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = 0x73736572646461;
  *(void *)(inited + 72) = 0xE700000000000000;
  *(void *)(inited + 80) = v3;
  *(void *)(inited + 88) = v4;
  strcpy((char *)(inited + 96), "thoroughfare");
  *(unsigned char *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(void *)(inited + 112) = v5;
  *(void *)(inited + 120) = v6;
  *(void *)(inited + 128) = 0x647261437370616DLL;
  *(void *)(inited + 136) = 0xEB000000006C7255;
  *(void *)(inited + 144) = v32;
  *(void *)(inited + 152) = v7;
  *(void *)(inited + 160) = 0x656475746974616CLL;
  *(void *)(inited + 168) = 0xE800000000000000;
  unint64_t v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Float.write<A>(to:)();
  *(void *)(inited + 176) = 0;
  *(void *)(inited + 184) = 0xE000000000000000;
  *(void *)(inited + 192) = 0x64757469676E6F6CLL;
  *(void *)(inited + 200) = 0xE900000000000065;
  Float.write<A>(to:)();
  *(void *)(inited + 208) = 0;
  *(void *)(inited + 216) = 0xE000000000000000;
  *(void *)(inited + 224) = 0x6E6F6870656C6574;
  *(void *)(inited + 232) = 0xE900000000000065;
  if (v8) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = MEMORY[0x25A2C7E60](v11, MEMORY[0x263F8D310]);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(inited + 240) = 0;
  *(void *)(inited + 248) = 0xE000000000000000;
  *(void *)(inited + 256) = 0x65746973626577;
  *(void *)(inited + 264) = 0xE700000000000000;
  if (v33) {
    uint64_t v13 = v34;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v33) {
    Swift::String v14 = v33;
  }
  else {
    Swift::String v14 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  *(void *)(inited + 272) = 0;
  *(void *)(inited + 280) = 0xE000000000000000;
  *(void *)(inited + 288) = 0x6F746F68506D756ELL;
  *(void *)(inited + 296) = 0xE900000000000073;
  v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  *(void *)(inited + 304) = 0;
  *(void *)(inited + 312) = 0xE000000000000000;
  *(void *)(inited + 320) = 0x79726F6765746163;
  *(void *)(inited + 328) = 0xE800000000000000;
  if (v36) {
    uint64_t v17 = v35;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v36) {
    uint64_t v18 = v36;
  }
  else {
    uint64_t v18 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  *(void *)(inited + 336) = 0;
  *(void *)(inited + 344) = 0xE000000000000000;
  *(void *)(inited + 352) = 0x6765746163627573;
  *(void *)(inited + 360) = 0xEB0000000079726FLL;
  if (v38) {
    uint64_t v20 = v37;
  }
  else {
    uint64_t v20 = 0;
  }
  if (v38) {
    uint64_t v21 = v38;
  }
  else {
    uint64_t v21 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = v20;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  *(void *)(inited + 368) = 0;
  *(void *)(inited + 376) = 0xE000000000000000;
  *(void *)(inited + 384) = 0x656D69546E65706FLL;
  *(void *)(inited + 392) = 0xE800000000000000;
  if (v39)
  {
    uint64_t v23 = 0;
  }
  else
  {
    lazy protocol witness table accessor for type UInt32 and conformance UInt32();
    uint64_t v23 = BinaryInteger.description.getter();
    unint64_t v10 = v24;
  }
  unint64_t v25 = v10;
  String.append(_:)(*(Swift::String *)&v23);
  swift_bridgeObjectRelease();
  *(void *)(inited + 400) = 0;
  *(void *)(inited + 408) = 0xE000000000000000;
  *(void *)(inited + 416) = 0x6D695465736F6C63;
  *(void *)(inited + 424) = 0xE900000000000065;
  unint64_t v26 = 0xE000000000000000;
  if (v31)
  {
    uint64_t v27 = 0;
  }
  else
  {
    lazy protocol witness table accessor for type UInt32 and conformance UInt32();
    uint64_t v27 = BinaryInteger.description.getter();
    unint64_t v26 = v28;
  }
  unint64_t v29 = v26;
  String.append(_:)(*(Swift::String *)&v27);
  swift_bridgeObjectRelease();
  *(void *)(inited + 432) = 0;
  *(void *)(inited + 440) = 0xE000000000000000;
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t GeoLocation.uid.getter()
{
  return *(void *)v0;
}

uint64_t GeoLocation.name.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GeoLocation.address.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GeoLocation.thoroughfare.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GeoLocation.mapsCardUrl.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

float GeoLocation.latitude.getter()
{
  return *(float *)(v0 + 72);
}

float GeoLocation.longitude.getter()
{
  return *(float *)(v0 + 76);
}

uint64_t GeoLocation.telephone.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeoLocation.website.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GeoLocation.photos.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeoLocation.category.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GeoLocation.subcategory.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

unint64_t GeoLocation.openTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 144));
}

unint64_t GeoLocation.closeTime.getter()
{
  return OUTLINED_FUNCTION_21_21(*(unsigned int *)(v0 + 152));
}

uint64_t GeoLocation.openNow.getter()
{
  uint64_t v1 = 0x616C696176616E75;
  uint64_t v2 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for Date();
  OUTLINED_FUNCTION_1();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  Swift::String v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  if (*(unsigned char *)(v0 + 148) & 1) != 0 || (*(unsigned char *)(v0 + 156)) {
    return v1;
  }
  unsigned int v18 = *(_DWORD *)(v0 + 144);
  unsigned int v19 = *(_DWORD *)(v0 + 152);
  static Date.now.getter();
  static Calendar.current.getter();
  Calendar.startOfDay(for:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  uint64_t result = Date.timeIntervalSince(_:)();
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v21 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v21 < 4294967300.0)
  {
    BOOL v22 = v18 <= v21;
    BOOL v23 = v19 > v21;
    unint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
    v24(v15, v9);
    v24(v17, v9);
    if (v22 && v23) {
      return 1852141679;
    }
    else {
      return 0x6465736F6C63;
    }
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t GeoLocation.init(uid:name:address:thoroughfare:mapsCardUrl:latitude:longitude:telephone:website:photos:category:subcategory:openTime:closeTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12, long long a13, long long a14, long long a15, uint64_t a16, uint64_t a17, int a18, char a19, int a20,char a21)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a12;
  *(float *)(a9 + 72) = a10;
  *(float *)(a9 + 76) = a11;
  *(_OWORD *)(a9 + 80) = a13;
  *(_OWORD *)(a9 + 96) = a14;
  *(_OWORD *)(a9 + 112) = a15;
  *(void *)(a9 + 128) = a16;
  *(void *)(a9 + 136) = a17;
  *(_DWORD *)(a9 + 144) = a18;
  *(unsigned char *)(a9 + 148) = a19 & 1;
  *(_DWORD *)(a9 + 152) = a20;
  *(unsigned char *)(a9 + 156) = a21 & 1;
  return result;
}

unint64_t GeoLocation.description.getter()
{
  memcpy(v10, (const void *)(v0 + 8), 0x95uLL);
  uint64_t v1 = GeoLocation.metadata.getter();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDyS2SG_SSs5NeverOTg5031_sS3SIgggo_SS3key_SS5valuetSSs5D80OIegnrzr_TR57_s10OmniSearch11GeoLocationV11descriptionSSvgS2S_SStXEfU_Tf3nnnpf_nTf1cn_n(v1);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v2 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v10[0] = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  v10[0] = 0x8000000258683630;
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x202020200A2CLL;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = v2;
  v7._object = v4;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 32010;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  return 0xD000000000000018;
}

uint64_t GeoLocation.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6580597 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6867756F726F6874 && a2 == 0xEC00000065726166;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x647261437370616DLL && a2 == 0xEB000000006C7255;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6E6F6870656C6574 && a2 == 0xE900000000000065;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x65746973626577 && a2 == 0xE700000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x736F746F6870 && a2 == 0xE600000000000000;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
                      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x6765746163627573 && a2 == 0xEB0000000079726FLL;
                        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x656D69546E65706FLL && a2 == 0xE800000000000000;
                          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else if (a1 == 0x6D695465736F6C63 && a2 == 0xE900000000000065)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
                            swift_bridgeObjectRelease();
                            if (v19) {
                              return 13;
                            }
                            else {
                              return 14;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t GeoLocation.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 6580597;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x73736572646461;
      break;
    case 3:
      uint64_t result = 0x6867756F726F6874;
      break;
    case 4:
      uint64_t result = 0x647261437370616DLL;
      break;
    case 5:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 6:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 7:
      uint64_t result = 0x6E6F6870656C6574;
      break;
    case 8:
      uint64_t result = 0x65746973626577;
      break;
    case 9:
      uint64_t result = 0x736F746F6870;
      break;
    case 10:
      uint64_t result = 0x79726F6765746163;
      break;
    case 11:
      uint64_t result = 0x6765746163627573;
      break;
    case 12:
      uint64_t result = 0x656D69546E65706FLL;
      break;
    case 13:
      uint64_t result = 0x6D695465736F6C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance GeoLocation.CodingKeys()
{
  return GeoLocation.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance GeoLocation.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = GeoLocation.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance GeoLocation.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance GeoLocation.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GeoLocation.id.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t GeoLocation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<GeoLocation.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_15();
  unsigned __int8 v14 = *(unsigned char *)(v1 + 148);
  unsigned __int8 v7 = *(unsigned char *)(v1 + 156);
  uint64_t v8 = a1[3];
  BOOL v9 = a1;
  uint64_t v12 = v11 - v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v15)
  {
    OUTLINED_FUNCTION_4_27(1);
    OUTLINED_FUNCTION_8_14();
    OUTLINED_FUNCTION_4_27(2);
    OUTLINED_FUNCTION_8_14();
    OUTLINED_FUNCTION_4_27(3);
    OUTLINED_FUNCTION_8_14();
    OUTLINED_FUNCTION_4_27(4);
    OUTLINED_FUNCTION_8_14();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_4_27(8);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_4_27(10);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_4_27(11);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_10_26(v14);
    OUTLINED_FUNCTION_10_26(v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v12, v3);
}

uint64_t GeoLocation.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<GeoLocation.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = a1[3];
  uint64_t v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v6);
  lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v75);
  }
  Class v42 = a2;
  OUTLINED_FUNCTION_12_31();
  uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v41 = OUTLINED_FUNCTION_3_39();
  uint64_t v9 = v8;
  swift_bridgeObjectRetain();
  uint64_t v48 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_3_39();
  uint64_t v12 = v11;
  uint64_t v40 = v10;
  swift_bridgeObjectRetain();
  uint64_t v47 = v12;
  uint64_t v39 = OUTLINED_FUNCTION_3_39();
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v46 = v14;
  uint64_t v15 = OUTLINED_FUNCTION_3_39();
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13_31();
  uint64_t v45 = v17;
  unsigned int v19 = v18;
  uint64_t v38 = v15;
  LOBYTE(v53[0]) = 6;
  OUTLINED_FUNCTION_13_31();
  unsigned int v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v22 = v53[0];
  LOBYTE(v53[0]) = 8;
  uint64_t v44 = v22;
  swift_bridgeObjectRetain();
  uint64_t v37 = OUTLINED_FUNCTION_7_31();
  uint64_t v43 = v23;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v51 = v53[0];
  swift_bridgeObjectRetain();
  uint64_t v24 = OUTLINED_FUNCTION_7_31();
  uint64_t v50 = v25;
  uint64_t v26 = v24;
  swift_bridgeObjectRetain();
  uint64_t v27 = OUTLINED_FUNCTION_7_31();
  uint64_t v49 = v28;
  uint64_t v29 = v27;
  LOBYTE(v53[0]) = 12;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_12_31();
  unint64_t v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int v31 = v30;
  uint64_t v36 = HIDWORD(v30) & 1;
  char v74 = BYTE4(v30) & 1;
  char v70 = 13;
  uint64_t v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v32 = OUTLINED_FUNCTION_1_25();
  v33(v32);
  char v71 = BYTE4(v35) & 1;
  v52[0] = v7;
  v52[1] = v41;
  v52[2] = v48;
  v52[3] = v40;
  v52[4] = v47;
  v52[5] = v39;
  v52[6] = v46;
  v52[7] = v38;
  v52[8] = v45;
  v52[9] = __PAIR64__(v21, v19);
  v52[10] = v44;
  v52[11] = v37;
  v52[12] = v43;
  v52[13] = v51;
  v52[14] = v26;
  v52[15] = v50;
  v52[16] = v29;
  v52[17] = v49;
  LODWORD(v52[18]) = v31;
  BYTE4(v52[18]) = v36;
  LODWORD(v52[19]) = v35;
  BYTE4(v52[19]) = BYTE4(v35) & 1;
  outlined retain of GeoLocation((uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v42, v52, 0x9DuLL);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v75);
  v53[0] = v7;
  v53[1] = v41;
  v53[2] = v48;
  v53[3] = v40;
  v53[4] = v47;
  v53[5] = v39;
  v53[6] = v46;
  v53[7] = v38;
  v53[8] = v45;
  unsigned int v54 = v19;
  unsigned int v55 = v21;
  uint64_t v56 = v44;
  uint64_t v57 = v37;
  uint64_t v58 = v43;
  uint64_t v59 = v51;
  uint64_t v60 = v26;
  uint64_t v61 = v50;
  uint64_t v62 = v29;
  uint64_t v63 = v49;
  int v64 = v31;
  char v65 = v74;
  __int16 v66 = v72;
  char v67 = v73;
  int v68 = v35;
  char v69 = v71;
  return outlined release of GeoLocation((uint64_t)v53);
}

uint64_t protocol witness for Decodable.init(from:) in conformance GeoLocation@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return GeoLocation.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance GeoLocation(void *a1)
{
  return GeoLocation.encode(to:)(a1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance GeoLocation(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x9DuLL);
  memcpy(__dst, a2, 0x9DuLL);
  return specialized static SearchItem.== infix(_:_:)(v4, __dst) & 1;
}

unint64_t lazy protocol witness table accessor for type UInt32 and conformance UInt32()
{
  unint64_t result = lazy protocol witness table cache variable for type UInt32 and conformance UInt32;
  if (!lazy protocol witness table cache variable for type UInt32 and conformance UInt32)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UInt32 and conformance UInt32);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for GeoLocation(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  a1[2] = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  unint64_t result = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  a1[3] = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation()
{
  unint64_t result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

uint64_t destroy for GeoLocation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GeoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  LODWORD(v6) = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GeoLocation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v4;
  int v5 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v5;
  return a1;
}

void *__swift_memcpy157_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x9DuLL);
}

uint64_t assignWithTake for GeoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoLocation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 157))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 156) = 0;
    *(_DWORD *)(result + 152) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 157) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 157) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoLocation()
{
  return &type metadata for GeoLocation;
}

unsigned char *storeEnumTagSinglePayload for GeoLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25843BF64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

void *type metadata accessor for GeoLocation.CodingKeys()
{
  return &unk_2706AE7E8;
}

uint64_t OUTLINED_FUNCTION_1_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_39()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

void OUTLINED_FUNCTION_4_27(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
}

uint64_t OUTLINED_FUNCTION_6_31()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_7_31()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_10_26@<X0>(uint64_t a1@<X8>)
{
  return MEMORY[0x270F9F410](v1 | (a1 << 32), v3 - 72, v2);
}

uint64_t OUTLINED_FUNCTION_12_31()
{
  return v0 + 336;
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  return MEMORY[0x270F9F300](v0 + 336, v1);
}

uint64_t GlobalItem.getParsecEntity()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BinaryDecodingOptions();
  MEMORY[0x270FA5388](v3 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GlobalItem() + 32));
  unint64_t v5 = v4[1];
  if (v5 >> 60 == 15)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logging.search);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_257DC6000, v7, v8, "SageExperience data is nil", v9, 2u);
      OUTLINED_FUNCTION_34();
    }

    uint64_t v10 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v10);
  }
  else
  {
    uint64_t v12 = *v4;
    uint64_t v13 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
    outlined copy of Data._Representation(v12, v5);
    outlined copy of Data._Representation(v12, v5);
    BinaryDecodingOptions.init()();
    lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity, MEMORY[0x263F5CCA8]);
    Message.init(serializedData:extensions:partial:options:)();
    outlined consume of Data?(v12, v5);
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v13);
  }
}

uint64_t type metadata accessor for GlobalItem()
{
  uint64_t result = type metadata singleton initialization cache for GlobalItem;
  if (!type metadata singleton initialization cache for GlobalItem) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t GlobalItem.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GlobalItem.id.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*GlobalItem.id.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t GlobalItem.text.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GlobalItem.text.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*GlobalItem.text.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t GlobalItem.domain.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GlobalItem.domain.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*GlobalItem.domain.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t GlobalItem.dialog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GlobalItem();
  return outlined init with copy of GlobalDialog?(v1 + *(int *)(v3 + 28), a1, &demangling cache variable for type metadata for GlobalDialog?);
}

uint64_t GlobalItem.dialog.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_10_27() + 28);
  return outlined assign with take of GlobalDialog?(v0, v2);
}

uint64_t (*GlobalItem.dialog.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t GlobalItem.parsecEntityData.getter()
{
  type metadata accessor for GlobalItem();
  uint64_t v0 = OUTLINED_FUNCTION_79_0();
  outlined copy of Data?(v0, v1);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t GlobalItem.parsecEntityData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GlobalItem() + 32);
  uint64_t result = outlined consume of Data?(*(void *)v3, *(void *)(v3 + 8));
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = v0;
  return result;
}

uint64_t (*GlobalItem.parsecEntityData.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t GlobalItem.lowConfidenceKnowledge.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for GlobalItem() + 36));
}

uint64_t GlobalItem.lowConfidenceKnowledge.setter(char a1)
{
  uint64_t result = type metadata accessor for GlobalItem();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*GlobalItem.lowConfidenceKnowledge.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t GlobalItem.description.getter()
{
  _StringGuts.grow(_:)(45);
  uint64_t v1 = v0[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2._object = (void *)0x8000000258683650;
  v2._uint64_t countAndFlagsBits = 0xD000000000000029;
  String.append(_:)(v2);
  if (v0[3])
  {
    uint64_t v3 = v0[2];
    uint64_t v4 = (void *)v0[3];
  }
  else
  {
    uint64_t v4 = (void *)0xE300000000000000;
    uint64_t v3 = 7104878;
  }
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t GlobalItem.init(id:domain:dialog:text:parsecEntity:lowConfidenceKnowledge:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10)
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  MEMORY[0x270FA5388](v15 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v39 = v20;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_15();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = (int *)type metadata accessor for GlobalItem();
  uint64_t v26 = (uint64_t)a9 + v25[7];
  uint64_t v27 = type metadata accessor for GlobalDialog();
  __swift_storeEnumTagSinglePayload(v26, 1, 1, v27);
  uint64_t v40 = (char *)a9 + v25[8];
  *(_OWORD *)uint64_t v40 = xmmword_258665BD0;
  uint64_t v28 = v25[9];
  *((unsigned char *)a9 + v28) = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a6;
  a9[3] = a7;
  a9[4] = a3;
  a9[5] = a4;
  outlined assign with copy of GlobalDialog?(a5, v26);
  *((unsigned char *)a9 + v28) = a10;
  outlined init with copy of GlobalDialog?(a8, v18, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  if (__swift_getEnumTagSinglePayload(v18, 1, v19) == 1)
  {
    outlined destroy of Any?(v18, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)static Logging.search);
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_257DC6000, v30, v31, "No Parsec AppEntity attached with this item", v32, 2u);
      OUTLINED_FUNCTION_34();
    }

    outlined destroy of Any?(a8, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
    outlined destroy of Any?(a5, &demangling cache variable for type metadata for GlobalDialog?);
    uint64_t v36 = 0;
    unint64_t v37 = 0xF000000000000000;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v24, v18, v19);
    lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity, MEMORY[0x263F5CCA8]);
    uint64_t v36 = Message.serializedData(partial:)();
    unint64_t v37 = v33;
    outlined destroy of Any?(a8, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
    outlined destroy of Any?(a5, &demangling cache variable for type metadata for GlobalDialog?);
    uint64_t v34 = OUTLINED_FUNCTION_9_20();
    v35(v34);
  }
  uint64_t result = outlined consume of Data?(*(void *)v40, *((void *)v40 + 1));
  *(void *)uint64_t v40 = v36;
  *((void *)v40 + 1) = v37;
  return result;
}

uint64_t GlobalItem.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x676F6C616964 && a2 == 0xE600000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000258683680 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000258680270)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

uint64_t GlobalItem.CodingKeys.init(intValue:)()
{
  return 6;
}

unint64_t GlobalItem.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1954047348;
      break;
    case 2:
      unint64_t result = 0x6E69616D6F64;
      break;
    case 3:
      unint64_t result = 0x676F6C616964;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance GlobalItem.CodingKeys()
{
  return GlobalItem.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance GlobalItem.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = GlobalItem.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance GlobalItem.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = GlobalItem.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance GlobalItem.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance GlobalItem.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GlobalItem.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<GlobalItem.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    OUTLINED_FUNCTION_5_27(1);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_5_27(2);
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for GlobalItem();
    type metadata accessor for GlobalDialog();
    lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type GlobalDialog and conformance GlobalDialog, MEMORY[0x263F5B828]);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    lazy protocol witness table accessor for type Data and conformance Data();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t GlobalItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<GlobalItem.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v24 = v9;
  uint64_t v25 = v8;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_15();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for GlobalItem();
  uint64_t v14 = (int *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_59_0();
  v2[2] = 0;
  v2[3] = 0;
  uint64_t v15 = (uint64_t)v2 + v14[9];
  uint64_t v16 = type metadata accessor for GlobalDialog();
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  uint64_t v26 = (char *)v2 + v14[10];
  *(_OWORD *)uint64_t v26 = xmmword_258665BD0;
  uint64_t v17 = v14[11];
  *((unsigned char *)v2 + v17) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v27)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    outlined destroy of Any?(v15, &demangling cache variable for type metadata for GlobalDialog?);
    return outlined consume of Data?(*(void *)v26, *((void *)v26 + 1));
  }
  else
  {
    *uint64_t v2 = KeyedDecodingContainer.decode(_:forKey:)();
    v2[1] = v18;
    OUTLINED_FUNCTION_7_32(1);
    v2[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v2[3] = v19;
    OUTLINED_FUNCTION_7_32(2);
    v2[4] = KeyedDecodingContainer.decode(_:forKey:)();
    v2[5] = v20;
    LOBYTE(v28) = 3;
    lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type GlobalDialog and conformance GlobalDialog, MEMORY[0x263F5B828]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined assign with take of GlobalDialog?(v7, v15);
    lazy protocol witness table accessor for type Data and conformance Data();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined consume of Data?(*(void *)v26, *((void *)v26 + 1));
    *(void *)uint64_t v26 = v28;
    *((void *)v26 + 1) = v29;
    char v21 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v25);
    *((unsigned char *)v2 + v17) = v21 & 1;
    outlined init with copy of GlobalItem((uint64_t)v2, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return outlined destroy of GlobalItem((uint64_t)v2);
  }
}

uint64_t protocol witness for Decodable.init(from:) in conformance GlobalItem@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GlobalItem.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance GlobalItem(void *a1)
{
  return GlobalItem.encode(to:)(a1);
}

uint64_t outlined assign with take of GlobalDialog?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with copy of GlobalDialog?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of GlobalDialog?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v4 = OUTLINED_FUNCTION_79_0();
  v5(v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalItem.CodingKeys and conformance GlobalItem.CodingKeys);
  }
  return result;
}

uint64_t outlined init with copy of GlobalItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GlobalItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of GlobalItem(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GlobalItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for GlobalItem(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type GlobalItem and conformance GlobalItem, (void (*)(uint64_t))type metadata accessor for GlobalItem);
  a1[2] = lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type GlobalItem and conformance GlobalItem, (void (*)(uint64_t))type metadata accessor for GlobalItem);
  uint64_t result = lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(&lazy protocol witness table cache variable for type GlobalItem and conformance GlobalItem, (void (*)(uint64_t))type metadata accessor for GlobalItem);
  a1[3] = result;
  return result;
}

uint64_t lazy protocol witness table accessor for type Apple_Parsec_Siri_V2alpha_AppEntity and conformance Apple_Parsec_Siri_V2alpha_AppEntity(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GlobalItem(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for GlobalDialog();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    unint64_t v19 = *((void *)v18 + 1);
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    else
    {
      uint64_t v20 = *(void *)v18;
      outlined copy of Data._Representation(*(void *)v18, *((void *)v18 + 1));
      *(void *)uint64_t v17 = v20;
      *((void *)v17 + 1) = v19;
    }
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t destroy for GlobalItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for GlobalDialog();
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15)
  {
    uint64_t v9 = *v7;
    return outlined consume of Data._Representation(v9, v8);
  }
  return result;
}

void *initializeWithCopy for GlobalItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for GlobalDialog();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  unint64_t v17 = *((void *)v16 + 1);
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v18 = *(void *)v16;
    outlined copy of Data._Representation(*(void *)v16, *((void *)v16 + 1));
    *(void *)uint64_t v15 = v18;
    *((void *)v15 + 1) = v17;
  }
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *assignWithCopy for GlobalItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for GlobalDialog();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  unint64_t v17 = *(void *)((char *)a2 + v14 + 8);
  if (*(void *)((char *)a1 + v14 + 8) >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v19 = *v16;
      outlined copy of Data._Representation(v19, v17);
      uint64_t v20 = *v15;
      unint64_t v21 = v15[1];
      uint64_t *v15 = v19;
      v15[1] = v17;
      outlined consume of Data._Representation(v20, v21);
      goto LABEL_14;
    }
    outlined destroy of Data((uint64_t)v15);
    goto LABEL_12;
  }
  if (v17 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_14;
  }
  uint64_t v18 = *v16;
  outlined copy of Data._Representation(v18, v17);
  uint64_t *v15 = v18;
  v15[1] = v17;
LABEL_14:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for GlobalItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for GlobalDialog();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *assignWithTake for GlobalItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for GlobalDialog();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  unint64_t v20 = *(void *)((char *)a1 + v17 + 8);
  if (v20 >> 60 != 15)
  {
    unint64_t v21 = v19[1];
    if (v21 >> 60 != 15)
    {
      uint64_t v22 = *v18;
      uint64_t *v18 = *v19;
      v18[1] = v21;
      outlined consume of Data._Representation(v22, v20);
      goto LABEL_12;
    }
    outlined destroy of Data((uint64_t)v18);
  }
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
LABEL_12:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25843E618);
}

uint64_t sub_25843E618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for GlobalItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25843E6B8);
}

uint64_t sub_25843E6B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for GlobalItem()
{
  type metadata accessor for GlobalDialog?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for GlobalDialog?()
{
  if (!lazy cache variable for type metadata for GlobalDialog?)
  {
    type metadata accessor for GlobalDialog();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for GlobalDialog?);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for GlobalItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25843E918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void *type metadata accessor for GlobalItem.CodingKeys()
{
  return &unk_2706AE8B0;
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  return v0;
}

void OUTLINED_FUNCTION_5_27(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
}

uint64_t OUTLINED_FUNCTION_7_32@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_9_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_27()
{
  return type metadata accessor for GlobalItem();
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch0E6ResultVG_AHs5NeverOTg504_s10d108Search06GlobalB6ClientC14handleResponse33_CBFB0104A61350AC63CE0898BEF4DA38LL_15associatedQuery7sourcesSayAA0kF59VG015SiriInformationB006PommesF0C_SSAA0B7SourcesVtFA2IXEfU_SSTf1cn_n(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v18 = type metadata accessor for SearchResult(0);
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    v17[1] = v3;
    uint64_t v20 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v10 = v20;
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    do
    {
      outlined init with copy of OmniSearchOptions(v12, (uint64_t)v8, (void (*)(void))type metadata accessor for SearchResult);
      int v14 = &v8[*(int *)(v18 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)int v14 = v19;
      *((void *)v14 + 1) = a3;
      uint64_t v20 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      if (v15 >= *(void *)(v10 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v10 = v20;
      }
      *(void *)(v10 + 16) = v15 + 1;
      _s10OmniSearch0B6ResultVWObTm_8((uint64_t)v8, v10 + v11 + v15 * v13, (void (*)(void))type metadata accessor for SearchResult);
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t GlobalSearchClient.__allocating_init(client:session:featureFlagService:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_6_32();
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = OUTLINED_FUNCTION_13_32(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_30_25();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t *GlobalSearchClient.webDomains.unsafeMutableAddressor()
{
  if (one-time initialization token for webDomains != -1) {
    swift_once();
  }
  return &static GlobalSearchClient.webDomains;
}

uint64_t protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((int)*MEMORY[0x263F6D8A8] + MEMORY[0x263F6D8A8]);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return v11(a1, a2, a3, a4);
}

const char *GlobalSearchClient.kWebIndexDomain.unsafeMutableAddressor()
{
  return "web_index";
}

uint64_t static GlobalSearchClient.kWebIndexDomain.getter()
{
  return 0x65646E695F626577;
}

const char *GlobalSearchClient.kWebIndexDomainV2.unsafeMutableAddressor()
{
  return "v2_web_index";
}

uint64_t static GlobalSearchClient.kWebIndexDomainV2.getter()
{
  return 0x695F6265775F3276;
}

void one-time initialization function for webDomains()
{
  specialized Set.init(_nonEmptyArrayLiteral:)();
  static GlobalSearchClient.webDomains = v0;
}

uint64_t static GlobalSearchClient.webDomains.getter()
{
  if (one-time initialization token for webDomains != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void GlobalSearchClient.supportedSearchSources.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t GlobalSearchClient.type.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t GlobalSearchClient.init(client:session:featureFlagService:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_6_32();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = OUTLINED_FUNCTION_13_32(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_30_25();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v3 = v2;
  v1[61] = v4;
  v1[62] = v0;
  v1[60] = v5;
  uint64_t v6 = type metadata accessor for OSSignpostError();
  v1[63] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v1[64] = v7;
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UserQuery();
  OUTLINED_FUNCTION_81(v8);
  v1[69] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OmniSearchOptions();
  v1[70] = v9;
  OUTLINED_FUNCTION_81(v9);
  v1[71] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for OSSignpostID();
  v1[72] = v10;
  OUTLINED_FUNCTION_12_0(v10);
  v1[73] = v11;
  v1[74] = swift_task_alloc();
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  v1[78] = swift_task_alloc();
  v1[79] = swift_task_alloc();
  v1[80] = *v3;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void *v27;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v56;

  OUTLINED_FUNCTION_29_7();
  if (one-time initialization token for searchComponentSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 648) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchComponentSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = OSSignposter.logHandle.getter();
  uint64_t v3 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v2, v3, v5, "SearchTool.PegasusSearch", "", v4, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v6 = *(void *)(v0 + 632);
  uint64_t v7 = *(void *)(v0 + 624);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 576);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v0 + 656) = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  *(void *)(v0 + 664) = v10;
  *(void *)(v0 + 672) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v6, v9);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 560);
  uint64_t v12 = *(void *)(v0 + 488);
  *(_DWORD *)(v0 + 736) = *(_DWORD *)(v11 + 28);
  *(_DWORD *)(v0 + 740) = *(_DWORD *)(v11 + 32);
  OUTLINED_FUNCTION_209();
  (*(void (**)(void))(v13 + 200))();
  uint64_t v14 = swift_allocObject();
  *(void *)(v0 + 680) = v14;
  *(void *)(v14 + 16) = 0;
  outlined init with take of SearchContext?(v12, v0 + 160);
  outlined init with take of SearchContext?(v0 + 160, v0 + 16);
  if (getEnumTag for DataFilter.FilterResult((uint64_t *)(v0 + 16)) != 1)
  {
    outlined init with take of SearchContext?(v0 + 160, v0 + 304);
    outlined retain of SearchContext(v0 + 304);
    EntityProperty.wrappedValue.getter();
    outlined release of SearchContext?((uint64_t *)(v0 + 160));
    unint64_t v15 = *(double *)(v0 + 464);
    outlined retain of SearchContext(v0 + 304);
    EntityProperty.wrappedValue.getter();
    outlined release of SearchContext?((uint64_t *)(v0 + 160));
    uint64_t v16 = *(double *)(v0 + 472);
    if (v15 != 0.0 || v16 != 0.0)
    {
      uint64_t v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v15, v16);
      uint64_t v18 = *(void **)(v14 + 16);
      *(void *)(v14 + 16) = v17;
    }
  }
  uint64_t v19 = *(void *)(v0 + 568);
  uint64_t v20 = *(void *)(v0 + 488);
  OUTLINED_FUNCTION_209();
  uint64_t v22 = (*(uint64_t (**)(void))(v21 + 80))(0);
  outlined init with copy of OmniSearchOptions(v20, v19, (void (*)(void))type metadata accessor for OmniSearchOptions);
  uint64_t v23 = *(void *)(v0 + 568);
  if ((v22 & 1) == 0)
  {
    uint64_t v39 = *(void *)(v0 + 552);
    uint64_t v40 = *(void *)(v0 + 480);
    outlined destroy of OmniSearchOptions(v23, (void (*)(void))type metadata accessor for OmniSearchOptions);
    outlined init with copy of OmniSearchOptions(v40, v39, (void (*)(void))type metadata accessor for UserQuery);
    goto LABEL_26;
  }
  uint64_t v24 = *(void *)(v0 + 552);
  uint64_t v25 = *(void *)(v0 + 480);
  uint64_t v26 = *(unsigned __int8 *)(v23 + *(int *)(*(void *)(v0 + 560) + 36));
  outlined destroy of OmniSearchOptions(v23, (void (*)(void))type metadata accessor for OmniSearchOptions);
  outlined init with copy of OmniSearchOptions(v25, v24, (void (*)(void))type metadata accessor for UserQuery);
  if (v26 != 1)
  {
LABEL_26:
    uint64_t v27 = *(void **)(v0 + 552);
LABEL_27:
    outlined destroy of OmniSearchOptions((uint64_t)v27, (void (*)(void))type metadata accessor for UserQuery);
    goto LABEL_28;
  }
  uint64_t v27 = *(void **)(v0 + 552);
  if (*v27 == v27[2] && v27[1] == v27[3]) {
    goto LABEL_27;
  }
  uint64_t v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  outlined destroy of OmniSearchOptions((uint64_t)v27, (void (*)(void))type metadata accessor for UserQuery);
  if ((v29 & 1) == 0)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    unint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logging.search);
    os_log_type_t v31 = Logger.logObject.getter();
    uint64_t v32 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_51_1(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_43_20(&dword_257DC6000, v31, v33, "GlobalSearch: federating two calls");
      OUTLINED_FUNCTION_34();
    }
    uint64_t v34 = *(void *)(v0 + 640);
    uint64_t v35 = *(void *)(v0 + 496);
    uint64_t v36 = *(void *)(v0 + 480);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalSearchClient.QueryType, Result<[SearchResult], Error>));
    unint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 688) = v37;
    v37[2] = v35;
    _OWORD v37[3] = v36;
    v37[4] = v34;
    v37[5] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [GlobalSearchClient.QueryType : Result<[SearchResult], Error>]);
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v38;
    *uint64_t v38 = v0;
    v38[1] = GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
    return MEMORY[0x270FA2158](v0 + 448);
  }
LABEL_28:
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  __swift_project_value_buffer(v41, (uint64_t)static Logging.search);
  Class v42 = Logger.logObject.getter();
  uint64_t v43 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_51_1(v43))
  {
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OUTLINED_FUNCTION_43_20(&dword_257DC6000, v42, v44, "GlobalSearch: no federation - searching with rewritten query");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v45 = *(void *)(v0 + 640);
  uint64_t v46 = *(void *)(v0 + 496);
  uint64_t v47 = *(void *)(v0 + 480);

  uint64_t v49 = *(void *)(v47 + 16);
  uint64_t v48 = *(void *)(v47 + 24);
  *(void *)(v0 + 456) = v45;
  uint64_t v50 = *(void **)(v14 + 16);
  *(void *)(v0 + 704) = v50;
  unsigned int v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)(*(void *)v46 + 144)
                                                                           + **(int **)(*(void *)v46 + 144));
  uint64_t v51 = v50;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 712) = v52;
  *uint64_t v52 = v0;
  v52[1] = GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  id v53 = MEMORY[0x263F8EE78];
  return v55(v49, v48, v53, v0 + 456, v50);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  char v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  int v15;
  uint64_t v16;
  void (*v17)(void);
  os_signpost_type_t v18;
  os_signpost_id_t v19;
  NSObject *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t (*v23)(void *);
  uint64_t v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  int v30;
  uint64_t v31;
  void (*v32)(void);
  os_signpost_type_t v33;
  os_signpost_id_t v34;
  NSObject *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;

  uint64_t v1 = v0[56];
  specialized Dictionary.subscript.getter(0, v1);
  OUTLINED_FUNCTION_34_22();
  if (v4) {
    goto LABEL_7;
  }
  uint64_t v5 = v2;
  uint64_t v6 = v3;
  if ((v3 & 1) == 0 || (specialized Dictionary.subscript.getter(1, v1), OUTLINED_FUNCTION_34_22(), v4))
  {
LABEL_6:
    outlined consume of Result<[SearchResult], Error>?(v5, v6);
LABEL_7:
    uint64_t v10 = GlobalSearchClient.rankGlobalResponses(_:)(v1);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_209();
    (*(void (**)(void))(v11 + 208))();
    swift_release();
    uint64_t v12 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v13 = OUTLINED_FUNCTION_24_21();
      unint64_t v15 = v14(v13);
      uint64_t v16 = v0[76];
      if (v15 != *MEMORY[0x263F90238])
      {
        OUTLINED_FUNCTION_12_32();
        v17();
      }
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_93_0();
      OUTLINED_FUNCTION_20_20(&dword_257DC6000, v12, v18, v19, "SearchTool.PegasusSearch");
      OUTLINED_FUNCTION_34();
    }
    else
    {
      uint64_t v16 = v0[76];
    }
    uint64_t v20 = v12;
    unint64_t v21 = (void (*)(uint64_t, uint64_t))v0[83];
    uint64_t v22 = v0[72];
    OUTLINED_FUNCTION_16_26(v20);
    v21(v16, v22);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_149();
    return v23(v10);
  }
  uint64_t v9 = v7;
  if ((v8 & 1) == 0)
  {
    outlined consume of Result<[SearchResult], Error>?(v7, v8);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_209();
  (*(void (**)(void))(v25 + 216))();
  lazy protocol witness table accessor for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError();
  swift_allocError();
  *uint64_t v26 = v5;
  v26[1] = v9;
  swift_willThrow();
  swift_release();
  uint64_t v27 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v28 = OUTLINED_FUNCTION_24_21();
    unint64_t v30 = v29(v28);
    os_log_type_t v31 = v0[77];
    if (v30 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_12_32();
      v32();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_20_20(&dword_257DC6000, v27, v33, v34, "SearchTool.PegasusSearch");
    OUTLINED_FUNCTION_34();
  }
  else
  {
    os_log_type_t v31 = v0[77];
  }
  uint64_t v35 = v27;
  uint64_t v36 = (void (*)(uint64_t, uint64_t))v0[83];
  unint64_t v37 = v0[72];
  OUTLINED_FUNCTION_16_26(v35);
  v36(v31, v37);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v38();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 720) = v5;
  *(void *)(v3 + 728) = v0;
  swift_task_dealloc();

  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  void *v0;
  const char *v1;
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  int v7;
  uint64_t v8;
  void (*v9)(void);
  _WORD *v10;
  os_signpost_type_t v11;
  os_signpost_id_t v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;
  uint64_t v17;

  uint64_t v1 = (const char *)v0[75];
  OUTLINED_FUNCTION_209();
  (*(void (**)(void))(v2 + 208))();
  swift_release();
  uint64_t v3 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  uint64_t v4 = v3;
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = v0[82];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v5 = OUTLINED_FUNCTION_47_16();
    uint64_t v7 = v6(v5);
    uint64_t v8 = v0[75];
    if (v7 == *MEMORY[0x263F90238])
    {
      uint64_t v1 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_12_32();
      v9();
      uint64_t v1 = "";
    }
    uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_54_14(v10);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_20_20(&dword_257DC6000, v3, v11, v12, "SearchTool.PegasusSearch");
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v8 = v0[75];
    uint64_t v16 = v0[90];
  }
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_9_21(v13);
  ((void (*)(uint64_t, NSObject *))v1)(v8, v4);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  return v14(v16);
}

{
  uint64_t v0;
  const char *v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  int v6;
  uint64_t v7;
  void (*v8)(void);
  _WORD *v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  void *v12;
  uint64_t (*v13)(void);
  uint64_t v15;

  swift_release();
  uint64_t v2 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  uint64_t v3 = v2;
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v3 = *(NSObject **)(v0 + 656);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v4 = OUTLINED_FUNCTION_47_16();
    uint64_t v6 = v5(v4);
    uint64_t v7 = *(void *)(v0 + 592);
    if (v6 == *MEMORY[0x263F90238])
    {
      uint64_t v1 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_12_32();
      v8();
      uint64_t v1 = "";
    }
    uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_54_14(v9);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_20_20(&dword_257DC6000, v2, v10, v11, "SearchTool.PegasusSearch");
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 592);
  }
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_9_21(v12);
  ((void (*)(uint64_t, NSObject *))v1)(v7, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v13();
}

uint64_t closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v6[16] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>, (GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>);
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>, (GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v6[20] = v8;
  v6[21] = *(void *)(v8 - 8);
  v6[22] = swift_task_alloc();
  uint64_t v9 = *(void *)(type metadata accessor for UserQuery() - 8);
  v6[23] = v9;
  v6[24] = *(void *)(v9 + 64);
  v6[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v6[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), 0, 0);
}

uint64_t closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v20 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v17 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[13];
  uint64_t v18 = v7;
  unint64_t v21 = (void *)v0[11];
  uint64_t v19 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v19);
  outlined init with copy of OmniSearchOptions(v7, v1, (void (*)(void))type metadata accessor for UserQuery);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v9 = (v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v6;
  _s10OmniSearch0B6ResultVWObTm_8(v1, (uint64_t)v11 + v8, (void (*)(void))type metadata accessor for UserQuery);
  *(void *)((char *)v11 + v9) = v5;
  *(void *)((char *)v11 + v10) = v17;
  swift_retain();
  swift_retain();
  _sScG7addTask8priority9operationyScPSg_xyYaYAcntF10OmniSearch06GlobalF6ClientC9QueryTypeO_s6ResultOySayAE0fK0VGs5Error_pGt_Tg5(v2, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), (uint64_t)v11);
  outlined destroy of PQAVerificationModelProtocol?(v2, &demangling cache variable for type metadata for TaskPriority?);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v19);
  outlined init with copy of OmniSearchOptions(v18, v1, (void (*)(void))type metadata accessor for UserQuery);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  v12[3] = 0;
  v12[4] = v6;
  _s10OmniSearch0B6ResultVWObTm_8(v1, (uint64_t)v12 + v8, (void (*)(void))type metadata accessor for UserQuery);
  *(void *)((char *)v12 + v9) = v5;
  *(void *)((char *)v12 + v10) = v17;
  swift_retain();
  swift_retain();
  _sScG7addTask8priority9operationyScPSg_xyYaYAcntF10OmniSearch06GlobalF6ClientC9QueryTypeO_s6ResultOySayAE0fK0VGs5Error_pGt_Tg5(v2, (uint64_t)&async function pointer to partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), (uint64_t)v12);
  outlined destroy of PQAVerificationModelProtocol?(v2, &demangling cache variable for type metadata for TaskPriority?);
  v0[7] = *v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalSearchClient.QueryType, Result<[SearchResult], Error>));
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)> and conformance TaskGroup<A>, &demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>);
  AsyncCompactMapSequence.init(_:transform:)();
  MEMORY[0x25A2C89A0](v20);
  TaskGroup.makeAsyncIterator()();
  MEMORY[0x25A2C89E0](v20);
  OUTLINED_FUNCTION_16_1();
  v13();
  AsyncCompactMapSequence.Iterator.init(_:transform:)();
  v0[27] = MEMORY[0x263F8EE80];
  uint64_t v22 = (uint64_t (*)(uint64_t))((char *)&_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5Tu
                                        + _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5Tu);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[28] = v14;
  *uint64_t v14 = v0;
  v14[1] = closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  uint64_t v15 = OUTLINED_FUNCTION_55_17();
  return v22(v15);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *(void *)(v2 + 48) = v0;
  *(unsigned char *)(v2 + 40) = v4;
  *(void *)(v2 + 24) = v5;
  *(void *)(v2 + 32) = v6;
  *(void *)(v2 + 16) = v1;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 232) = v5;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_29_7();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 232);
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 216);
    uint64_t v3 = *(void **)(v0 + 80);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    *uint64_t v3 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_40_16();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 216);
  char v8 = *(unsigned char *)(v0 + 40) & 1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, v8, v1 & 1, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 216) = v7;
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v10;
  *unint64_t v10 = v0;
  v10[1] = closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  OUTLINED_FUNCTION_55_17();
  OUTLINED_FUNCTION_40_16();
  __asm { BR              X3 }
}

uint64_t closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  _OWORD v7[8] = a4;
  v7[9] = a5;
  v7[7] = a1;
  return MEMORY[0x270FA2498](closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), 0, 0);
}

uint64_t closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_52_14();
  OUTLINED_FUNCTION_51_18(v2);
  OUTLINED_FUNCTION_50_22();
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  uint64_t v5 = OUTLINED_FUNCTION_32_20();
  return v6(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  id v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v8 = *(void **)(v7 + 96);
  unint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_0();
  *unint64_t v10 = v9;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();

  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v1 = *(void *)(v0 + 120);
  **(unsigned char **)(v0 + 56) = 0;
  return OUTLINED_FUNCTION_10_28(v1);
}

uint64_t closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_29_7();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v14 = *(void **)(v12 + 112);
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logging.search);
  id v16 = v14;
  id v17 = v14;
  uint64_t v18 = (void *)Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  BOOL v20 = OUTLINED_FUNCTION_51_1(v19);
  unint64_t v21 = *(void **)(v12 + 112);
  if (v20)
  {
    OUTLINED_FUNCTION_46_18();
    uint64_t v22 = (void *)OUTLINED_FUNCTION_42_16();
    OUTLINED_FUNCTION_26_23(5.7779e-34);
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_31_23(v23);
    *uint64_t v22 = v13;

    OUTLINED_FUNCTION_173_0(&dword_257DC6000, v24, v25, "GlobalSearch: Encountered an error when federating with the raw query: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_39_18();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  OUTLINED_FUNCTION_56_12();
  *(unsigned char *)uint64_t v26 = 0;
  *(void *)(v26 + 8) = v27;
  *(unsigned char *)(v26 + 16) = v28;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_43_16();
  return v30(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12);
}

uint64_t _sScG7addTask8priority9operationyScPSg_xyYaYAcntF10OmniSearch06GlobalF6ClientC9QueryTypeO_s6ResultOySayAE0fK0VGs5Error_pGt_Tg5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of TaskPriority?(a1, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v10, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v14 = v13;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v15 = *v4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalSearchClient.QueryType, Result<[SearchResult], Error>));
  id v17 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v20[0] = 0;
    v20[1] = 0;
    id v17 = v20;
    v20[2] = v12;
    void v20[3] = v14;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  _OWORD v7[8] = a4;
  v7[9] = a5;
  v7[7] = a1;
  return MEMORY[0x270FA2498](closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), 0, 0);
}

uint64_t closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_52_14();
  OUTLINED_FUNCTION_51_18(v2);
  OUTLINED_FUNCTION_50_22();
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  uint64_t v5 = OUTLINED_FUNCTION_32_20();
  return v6(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  id v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v8 = *(void **)(v7 + 96);
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_0();
  *unint64_t v10 = v9;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();

  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v1 = *(void *)(v0 + 120);
  **(unsigned char **)(v0 + 56) = 1;
  return OUTLINED_FUNCTION_10_28(v1);
}

uint64_t closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_29_7();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v14 = *(void **)(v12 + 112);
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logging.search);
  id v16 = v14;
  id v17 = v14;
  uint64_t v18 = (void *)Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  BOOL v20 = OUTLINED_FUNCTION_51_1(v19);
  unint64_t v21 = *(void **)(v12 + 112);
  if (v20)
  {
    OUTLINED_FUNCTION_46_18();
    uint64_t v22 = (void *)OUTLINED_FUNCTION_42_16();
    OUTLINED_FUNCTION_26_23(5.7779e-34);
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_31_23(v23);
    *uint64_t v22 = v13;

    OUTLINED_FUNCTION_173_0(&dword_257DC6000, v24, v25, "GlobalSearch: Encountered an error when federating with the rewritten query: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_39_18();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  OUTLINED_FUNCTION_56_12();
  *(unsigned char *)uint64_t v26 = 1;
  *(void *)(v26 + 8) = v27;
  *(unsigned char *)(v26 + 16) = v28;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_43_16();
  return v30(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12);
}

uint64_t closure #3 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 32) = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 33) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](closure #3 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), 0, 0);
}

uint64_t closure #3 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_27();
  char v1 = *(unsigned char *)(v0 + 33);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  *(void *)uint64_t v3 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v3 + 8) = v2;
  *(unsigned char *)(v3 + 16) = v1;
  outlined copy of Result<[SearchResult], Error>(v2, v1);
  OUTLINED_FUNCTION_13();
  return v4();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>, (GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v3[21] = v6;
  v3[22] = v8;
  return MEMORY[0x270FA2498](_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY0_, v6, v8);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY0_()
{
  OUTLINED_FUNCTION_49();
  *(void *)(v0 + 184) = AsyncCompactMapSequence.Iterator.baseIterator.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator and conformance TaskGroup<A>.Iterator, &demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  void *v1 = v0;
  v1[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ1_;
  uint64_t v2 = OUTLINED_FUNCTION_38_19();
  return MEMORY[0x270FA1E88](v2);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ1_()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 168);
    uint64_t v8 = *(void *)(v3 + 176);
    uint64_t v9 = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY3_;
  }
  else
  {
    (*(void (**)(void))(v3 + 184))();
    uint64_t v7 = *(void *)(v3 + 168);
    uint64_t v8 = *(void *)(v3 + 176);
    uint64_t v9 = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY2_;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY2_()
{
  OUTLINED_FUNCTION_29_7();
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 88);
  if (v2 != 2)
  {
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 144);
    *(unsigned char *)(v0 + 48) = v2 & 1;
    *(void *)(v0 + 56) = v1;
    *(unsigned char *)(v0 + 64) = v3 & 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v8, v9);
    MEMORY[0x25A2C89C0](v9);
    *(void *)(v0 + 200) = v10;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v9);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v11;
    *uint64_t v11 = v0;
    v11[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ4_;
    OUTLINED_FUNCTION_40_16();
    __asm { BRAA            X2, X16 }
  }
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v4(v2, v1, v3);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY3_()
{
  OUTLINED_FUNCTION_27();
  (*(void (**)(void))(v0 + 184))();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ4_()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_15_27();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  swift_task_dealloc();
  swift_release();
  outlined consume of Result<[SearchResult], Error>(*(id *)(v0 + 56), *(unsigned char *)(v3 + 64));
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 168);
  return MEMORY[0x270FA2498](_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY5_, v6, v5);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY5_()
{
  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1 == 2)
  {
    *(void *)(v0 + 184) = AsyncCompactMapSequence.Iterator.baseIterator.modify();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
    lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator and conformance TaskGroup<A>.Iterator, &demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    *uint64_t v2 = v0;
    v2[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ1_;
    uint64_t v3 = OUTLINED_FUNCTION_38_19();
    return MEMORY[0x270FA1E88](v3);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = *(unsigned __int8 *)(v0 + 112);
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
    return v6(v1, v4, v5);
  }
}

uint64_t GlobalSearchClient.search(content:entities:sources:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  v6[5] = a3;
  v6[6] = a5;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = *a4;
  v6[7] = v5;
  v6[8] = v7;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t GlobalSearchClient.search(content:entities:sources:location:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                     + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = GlobalSearchClient.search(content:entities:sources:location:);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[3];
  uint64_t v7 = v0[4];
  return v10(v8, v7, v5, v6, v2, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 88) = v3;
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_49();
  uint64_t v9 = v0;
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v8 = v0[8];
  uint64_t v4 = v1;
  uint64_t v5 = GlobalSearchClient.handleResponse(_:associatedQuery:sources:)(v4, v2, v3, &v8);

  OUTLINED_FUNCTION_149();
  return v6(v5);
}

uint64_t GlobalSearchClient.search(content:entities:sources:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_29_7();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v13 = *(void **)(v12 + 80);
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
  id v15 = v13;
  id v16 = v13;
  id v17 = (void *)Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  BOOL v19 = OUTLINED_FUNCTION_51_1(v18);
  BOOL v20 = *(void **)(v12 + 80);
  if (v19)
  {
    OUTLINED_FUNCTION_46_18();
    unint64_t v21 = (void *)OUTLINED_FUNCTION_42_16();
    OUTLINED_FUNCTION_26_23(5.7779e-34);
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v12 + 16) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v21 = v22;

    OUTLINED_FUNCTION_173_0(&dword_257DC6000, v23, v24, "GlobalSearch encountered an error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_39_18();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  swift_willThrow();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_43_16();
  return v26(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12);
}

uint64_t GlobalSearchClient.handleResponse(_:associatedQuery:sources:)(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v64[1] = *MEMORY[0x263EF8340];
  uint64_t v7 = *a4;
  uint64_t v8 = PommesResponse.metadataDomainName.getter();
  unint64_t v10 = v9;
  if ((v7 & 8) == 0)
  {
    if (one-time initialization token for webDomains != -1) {
      swift_once();
    }
    specialized Set.contains(_:)(v8, v10, static GlobalSearchClient.webDomains);
    if (v11)
    {
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      __swift_project_value_buffer(v12, (uint64_t)static Logging.search);
      swift_bridgeObjectRetain();
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v13, v14))
      {
        id v15 = (uint8_t *)swift_slowAlloc();
        v64[0] = swift_slowAlloc();
        *(_DWORD *)id v15 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, v64);
        OUTLINED_FUNCTION_37_22(v16, v17, v18, v19, v20, v21, v22, v23, v61, v62, v63, v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_257DC6000, v13, v14, "GlobalSearch: Filtering out web index domain: %s", v15, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x263F8EE78];
    }
  }
  unint64_t v24 = dispatch thunk of PommesResponse.experiences.getter();
  unint64_t v25 = v24;
  if (!(v24 >> 62))
  {
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v27 = 0;
    goto LABEL_22;
  }
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_21;
  }
LABEL_11:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v25 & 0xC000000000000001) == 0, v25);
  if ((v25 & 0xC000000000000001) != 0) {
    id v26 = (id)MEMORY[0x25A2C8550](0, v25);
  }
  else {
    id v26 = *(id *)(v25 + 32);
  }
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  type metadata accessor for GenericExperience();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for AudioExperience();
    if (swift_dynamicCastClass())
    {
      id v30 = v27;
      static GlobalSearchResponseProcessor.makeAudioItem(experience:domain:)();
      goto LABEL_17;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logging.search);
    id v34 = v27;
    id v35 = a1;
    id v36 = v34;
    id v37 = v35;
    uint64_t v38 = Logger.logObject.getter();
    int v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, (os_log_type_t)v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v64[0] = v42;
      *(_DWORD *)uint64_t v40 = 138412546;
      if (v27)
      {
        HIDWORD(v61) = v39;
        id v50 = v36;
      }
      else
      {
        OUTLINED_FUNCTION_37_22(v42, v43, v44, v45, v46, v47, v48, v49, v61, v62, v63, 0);
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v41 = v27;

      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v51 = PommesResponse.metadataDomainName.getter();
      uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, v64);
      OUTLINED_FUNCTION_37_22(v53, v54, v55, v40 + 22, v56, v57, v58, v59, v61, v62, v63, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_257DC6000, v38, (os_log_type_t)v39, "GlobalSearch: unhandled experience %@ for domain %s", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
    }
    return MEMORY[0x263F8EE78];
  }
  id v28 = v27;
  PommesResponse.isLowConfidenceKnowledgeResult.getter();
  static GlobalSearchResponseProcessor.makeGenericItem(experience:domain:lowConfidenceKnowledge:)();
LABEL_17:
  uint64_t v31 = v29;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  uint64_t v32 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch0E6ResultVG_AHs5NeverOTg504_s10d108Search06GlobalB6ClientC14handleResponse33_CBFB0104A61350AC63CE0898BEF4DA38LL_15associatedQuery7sourcesSayAA0kF59VG015SiriInformationB006PommesF0C_SSAA0B7SourcesVtFA2IXEfU_SSTf1cn_n(v31, a2, a3);
  swift_bridgeObjectRelease();

  return v32;
}

void *GlobalSearchClient.rankGlobalResponses(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_95_1();
  uint64_t v6 = v4 - v5;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v68 - v8;
  type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_95_1();
  uint64_t v13 = v11 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v17 = type metadata accessor for GlobalItem();
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_95_1();
  uint64_t v21 = v19 - v20;
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v68 - v23;
  specialized Dictionary.subscript.getter(0, a1);
  OUTLINED_FUNCTION_34_22();
  if (v27) {
    goto LABEL_6;
  }
  id v28 = (void *)v25;
  unsigned __int8 v29 = v26;
  if (v26) {
    goto LABEL_5;
  }
  char v69 = v24;
  specialized Collection.first.getter(v25, (uint64_t)v9);
  uint64_t v30 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v30) != 1)
  {
    outlined init with copy of OmniSearchOptions((uint64_t)v9, (uint64_t)v16, (void (*)(void))type metadata accessor for SearchResultItem);
    outlined destroy of OmniSearchOptions((uint64_t)v9, (void (*)(void))type metadata accessor for SearchResult);
    if (swift_getEnumCaseMultiPayload() != 24)
    {
      outlined consume of Result<[SearchResult], Error>?(v28, v29);
      outlined destroy of OmniSearchOptions((uint64_t)v16, (void (*)(void))type metadata accessor for SearchResultItem);
      goto LABEL_6;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWObTm_8((uint64_t)v16, (uint64_t)v69, (void (*)(void))type metadata accessor for GlobalItem);
    specialized Dictionary.subscript.getter(1, a1);
    OUTLINED_FUNCTION_34_22();
    if (!v27)
    {
      id v37 = (void *)v47;
      unsigned __int8 v49 = v48;
      if ((v48 & 1) == 0)
      {
        specialized Collection.first.getter(v47, v6);
        if (__swift_getEnumTagSinglePayload(v6, 1, v30) == 1)
        {
          outlined destroy of PQAVerificationModelProtocol?(v6, &demangling cache variable for type metadata for SearchResult?);
        }
        else
        {
          outlined init with copy of OmniSearchOptions(v6, v13, (void (*)(void))type metadata accessor for SearchResultItem);
          outlined destroy of OmniSearchOptions(v6, (void (*)(void))type metadata accessor for SearchResult);
          if (swift_getEnumCaseMultiPayload() != 24)
          {
            outlined consume of Result<[SearchResult], Error>?(v37, v49);
            outlined destroy of OmniSearchOptions(v13, (void (*)(void))type metadata accessor for SearchResultItem);
            goto LABEL_33;
          }
          swift_bridgeObjectRelease();
          _s10OmniSearch0B6ResultVWObTm_8(v13, v21, (void (*)(void))type metadata accessor for GlobalItem);
          if (one-time initialization token for webDomains != -1) {
            swift_once();
          }
          uint64_t v50 = static GlobalSearchClient.webDomains;
          uint64_t v51 = *((void *)v69 + 4);
          uint64_t v52 = *((void *)v69 + 5);
          swift_bridgeObjectRetain();
          specialized Set.contains(_:)(v51, v52, v50);
          LOBYTE(v50) = v53;
          swift_bridgeObjectRelease();
          if (v50)
          {
            uint64_t v54 = static GlobalSearchClient.webDomains;
            uint64_t v55 = *(void *)(v21 + 32);
            uint64_t v56 = *(void *)(v21 + 40);
            swift_bridgeObjectRetain();
            specialized Set.contains(_:)(v55, v56, v54);
            LOBYTE(v54) = v57;
            swift_bridgeObjectRelease();
            if ((v54 & 1) == 0)
            {
              outlined consume of Result<[SearchResult], Error>?(v28, v29);
              if (one-time initialization token for search != -1) {
                swift_once();
              }
              uint64_t v63 = type metadata accessor for Logger();
              __swift_project_value_buffer(v63, (uint64_t)static Logging.search);
              int v64 = (void *)Logger.logObject.getter();
              os_log_type_t v65 = static os_log_type_t.info.getter();
              if (OUTLINED_FUNCTION_24_13(v65))
              {
                *(_WORD *)OUTLINED_FUNCTION_55() = 0;
                OUTLINED_FUNCTION_99_3(&dword_257DC6000, v66, v67, "GlobalSearch: received a web search result using the raw query, falling back to rewritten query's response");
                OUTLINED_FUNCTION_34();
              }

              outlined destroy of OmniSearchOptions(v21, (void (*)(void))type metadata accessor for GlobalItem);
              outlined destroy of OmniSearchOptions((uint64_t)v69, (void (*)(void))type metadata accessor for GlobalItem);
              return v37;
            }
          }
          outlined destroy of OmniSearchOptions(v21, (void (*)(void))type metadata accessor for GlobalItem);
        }
      }
      outlined consume of Result<[SearchResult], Error>?(v37, v49);
    }
LABEL_33:
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    os_log_type_t v59 = __swift_project_value_buffer(v58, (uint64_t)static Logging.search);
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_24_13(v61))
    {
      uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_257DC6000, v60, v59, "GlobalSearch: returning raw query's response", v62, 2u);
      OUTLINED_FUNCTION_34();
    }

    outlined destroy of OmniSearchOptions((uint64_t)v69, (void (*)(void))type metadata accessor for GlobalItem);
    return v28;
  }
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v9, &demangling cache variable for type metadata for SearchResult?);
LABEL_5:
  outlined consume of Result<[SearchResult], Error>?(v28, v29);
LABEL_6:
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)static Logging.search);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v32, v33))
  {
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OUTLINED_FUNCTION_43_20(&dword_257DC6000, v32, v34, "GlobalSearch: no global search result found using the raw query");
    OUTLINED_FUNCTION_34();
  }

  specialized Dictionary.subscript.getter(1, a1);
  OUTLINED_FUNCTION_34_22();
  if (!v27)
  {
    id v37 = v35;
    if ((v36 & 1) == 0)
    {
      uint64_t v38 = (void *)Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_24_13(v39))
      {
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OUTLINED_FUNCTION_99_3(&dword_257DC6000, v40, v41, "GlobalSearch: global result found using the rewritten query");
        OUTLINED_FUNCTION_34();
      }

      return v37;
    }
    outlined consume of Result<[SearchResult], Error>?(v35, v36);
  }
  uint64_t v42 = (void *)Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_24_13(v43))
  {
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OUTLINED_FUNCTION_99_3(&dword_257DC6000, v44, v45, "GlobalSearch: no global result found using either raw or rewritten query");
    OUTLINED_FUNCTION_34();
  }

  return (void *)MEMORY[0x263F8EE78];
}

uint64_t GlobalSearchClient.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);

  swift_release();
  return v0;
}

uint64_t GlobalSearchClient.__deallocating_deinit()
{
  GlobalSearchClient.deinit();
  return MEMORY[0x270FA0228](v0, 88, 7);
}

uint64_t protocol witness for SearchService.type.getter in conformance GlobalSearchClient()
{
  return *(unsigned __int8 *)(*(void *)v0 + 24);
}

void protocol witness for SearchService.supportedSearchSources.getter in conformance GlobalSearchClient(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

uint64_t protocol witness for SearchService.prewarm() in conformance GlobalSearchClient()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance GlobalSearchClient(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 136)
                                                                   + **(int **)(**(void **)v4 + 136));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = protocol witness for AnswerResolvable.extractInfo(query:results:assistantLocale:) in conformance AnswerResolver;
  return v12(a1, a2, a3, a4);
}

BOOL static GlobalSearchClient.QueryType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void GlobalSearchClient.QueryType.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int GlobalSearchClient.QueryType.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance GlobalSearchClient.QueryType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static GlobalSearchClient.QueryType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance GlobalSearchClient.QueryType()
{
  return GlobalSearchClient.QueryType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance GlobalSearchClient.QueryType(uint64_t a1)
{
  GlobalSearchClient.QueryType.hash(into:)(a1, *v1);
}

uint64_t specialized GlobalSearchClient.init(client:session:featureFlagService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = a5;
  uint64_t v16 = a6;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a5);
  uint64_t v12 = unk_2706A4B08;
  if ((unk_2706A4B08 & ~qword_2706A4B00) == 0) {
    uint64_t v12 = 0;
  }
  *(void *)(a4 + 16) = v12 | qword_2706A4B00;
  *(unsigned char *)(a4 + 24) = 2;
  outlined init with take of SageSearchClient(&v14, a4 + 32);
  *(void *)(a4 + 72) = a2;
  *(void *)(a4 + 80) = a3;
  return a4;
}

uint64_t sub_258443204()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_44_0(v9);
  *uint64_t v10 = v11;
  v10[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(v4, v2, v5, v6, v8, v7);
}

void outlined consume of Result<[SearchResult], Error>?(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    outlined consume of Result<[SearchResult], Error>(a1, a2 & 1);
  }
}

unint64_t lazy protocol witness table accessor for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError()
{
  unint64_t result = lazy protocol witness table cache variable for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError;
  if (!lazy protocol witness table cache variable for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError);
  }
  return result;
}

uint64_t outlined retain of SearchContext(uint64_t a1)
{
  return a1;
}

uint64_t *outlined release of SearchContext?(uint64_t *a1)
{
  return a1;
}

unint64_t lazy protocol witness table accessor for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType()
{
  unint64_t result = lazy protocol witness table cache variable for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType;
  if (!lazy protocol witness table cache variable for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType);
  }
  return result;
}

void dispatch thunk of SageSearchClient.search(query:clientEntities:location:)()
{
  OUTLINED_FUNCTION_29_7();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = dispatch thunk of ResultHydrator.fetchFullContent(for:);
  OUTLINED_FUNCTION_40_16();
  __asm { BRAA            X7, X16 }
}

uint64_t type metadata accessor for GlobalSearchClient()
{
  return self;
}

uint64_t method lookup function for GlobalSearchClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GlobalSearchClient);
}

uint64_t dispatch thunk of GlobalSearchClient.__allocating_init(client:session:featureFlagService:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of GlobalSearchClient.prewarm()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_209();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 136) + **(int **)(v8 + 136));
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_44_0(v9);
  *uint64_t v10 = v11;
  v10[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return v13(v7, v5, v3, v1);
}

uint64_t dispatch thunk of GlobalSearchClient.search(content:entities:sources:location:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_209();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 144)
                                                                            + **(int **)(v10 + 144));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_44_0(v11);
  *uint64_t v12 = v13;
  v12[1] = partial apply for implicit closure #2 in implicit closure #1 in ResultHydrator.hydrationFunctions.getter;
  return v15(v9, v7, v5, v3, v1);
}

unsigned char *storeEnumTagSinglePayload for GlobalSearchClient.QueryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2584439BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlobalSearchClient.QueryType()
{
  return &type metadata for GlobalSearchClient.QueryType;
}

void destroy for GlobalSearchClient.GlobalSearchError(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void *initializeBufferWithCopyOfBuffer for GlobalSearchClient.GlobalSearchError(void *a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  *a1 = v4;
  unsigned int v6 = *(void **)(a2 + 8);
  id v7 = v6;
  a1[1] = v6;
  return a1;
}

uint64_t assignWithCopy for GlobalSearchClient.GlobalSearchError(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  unsigned int v6 = *(void **)a1;
  *(void *)a1 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = v7;
  uint64_t v9 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;

  return a1;
}

uint64_t assignWithTake for GlobalSearchClient.GlobalSearchError(uint64_t a1, _OWORD *a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for GlobalSearchClient.GlobalSearchError()
{
  return &type metadata for GlobalSearchClient.GlobalSearchError;
}

uint64_t outlined init with copy of OmniSearchOptions(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t outlined destroy of OmniSearchOptions(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t _s10OmniSearch0B6ResultVWObTm_8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v0 = type metadata accessor for UserQuery();
  OUTLINED_FUNCTION_12_0(v0);
  OUTLINED_FUNCTION_11_29();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_44_0(v1);
  *uint64_t v2 = v3;
  v2[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v4 = OUTLINED_FUNCTION_34_1();
  return closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v1 = type metadata accessor for UserQuery();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t Entity = type metadata accessor for StructuredQueryEntity(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, Entity))
  {
    type metadata accessor for DisplayRepresentation();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    v7();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  if (*(void *)(v0 + v3 + *(int *)(v1 + 28) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v0 = type metadata accessor for UserQuery();
  OUTLINED_FUNCTION_12_0(v0);
  OUTLINED_FUNCTION_11_29();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_44_0(v1);
  *uint64_t v2 = v3;
  v2[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  uint64_t v4 = OUTLINED_FUNCTION_34_1();
  return closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t outlined init with copy of TaskPriority?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5(uint64_t a1, int *a2)
{
  *(void *)(v2 + 40) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v3;
  *uint64_t v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TQ0_;
  return v5(v2 + 16);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TQ0_()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_15_27();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *v1;
  *uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v0 + 24);
  char v8 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)uint64_t v5 = *(unsigned char *)(v3 + 16);
  *(void *)(v5 + 8) = v7;
  *(unsigned char *)(v5 + 16) = v8;
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_2584442E8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TA()
{
  OUTLINED_FUNCTION_49();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_44_0(v4);
  *uint64_t v5 = v6;
  v5[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5Tu);
  return v7(v2, v3);
}

void OUTLINED_FUNCTION_9_21(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_10_28@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 8) = a1;
  *(unsigned char *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v3 + 8))();
}

char *OUTLINED_FUNCTION_13_32@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_16_26(void *a1@<X8>)
{
}

id OUTLINED_FUNCTION_26_23(float a1)
{
  float *v1 = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_30_25()
{
  return specialized GlobalSearchClient.init(client:session:featureFlagService:)(v5, v2, v0, v1, v3, v4);
}

uint64_t OUTLINED_FUNCTION_31_23(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_32_20()
{
  return v0;
}

char *OUTLINED_FUNCTION_37_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_38_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_18()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_42_16()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_43_20(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_46_18()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_47_16()
{
  return v0;
}

void OUTLINED_FUNCTION_50_22()
{
  *(void *)(v1 + 96) = *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_51_18@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 40) = a1;
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_52_14()
{
  return *(void *)(v0 + 88) + 16;
}

uint64_t OUTLINED_FUNCTION_54_14(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_55_17()
{
  return 0;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch10GlobalItemVG_AF0E6ResultVs5NeverOTg504_s10d8Search06f89B17ResponseProcessorO15makeGenericItem10experience6domain22lowConfidenceKnowledgeSayAA0B6H58VG015SiriInformationB00G10ExperienceC_SSSbtFZAiA0cH0VXEfU_0xyE00P10ExperienceCSo6SFCardCSgTf1cn_n(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = type metadata accessor for SearchResult(0);
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    id v34 = a2;
    id v35 = a3;
    v29[1] = v3;
    uint64_t v39 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v11 = v39;
    uint64_t v12 = *(void *)(type metadata accessor for GlobalItem() - 8);
    uint64_t v13 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
    uint64_t v33 = *(void *)(v12 + 72);
    long long v32 = xmmword_258662D10;
    do
    {
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      uint64_t v16 = v13[4];
      uint64_t v17 = v13[5];
      id v18 = objc_allocWithZone(MEMORY[0x263F02AE8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = objc_msgSend(v18, sel_init);
      id v20 = objc_allocWithZone(MEMORY[0x263F02AE0]);
      id v21 = @nonobjc CSSearchableItem.init(uniqueIdentifier:domainIdentifier:attributeSet:)(v14, v15, v16, v17, v19);
      uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
                   + 48);
      outlined init with copy of GlobalItem((uint64_t)v13, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v32;
      type metadata accessor for DialogExperience();
      swift_allocObject();
      id v24 = v35;
      id v31 = v35;
      id v30 = v34;
      *(void *)(v23 + 32) = DialogExperience.init(_:card:)(v30, v24);
      uint64_t v38 = v23;
      specialized Array._endMutation()();
      *(void *)&v9[v22] = v38;
      type metadata accessor for SearchResultItem(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v25 = v37;
      unsigned __int8 v26 = &v9[*(int *)(v37 + 24)];
      *(void *)unsigned __int8 v26 = 0;
      *((void *)v26 + 1) = 0;
      *(void *)&v9[*(int *)(v25 + 20)] = v21;
      uint64_t v39 = v11;
      unint64_t v27 = *(void *)(v11 + 16);
      if (v27 >= *(void *)(v11 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v11 = v39;
      }
      *(void *)(v11 + 16) = v27 + 1;
      outlined init with take of SearchResultItem((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v27, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v13 = (uint64_t *)((char *)v13 + v33);
      --v10;
    }
    while (v10);

    a3 = v31;
  }
  else
  {

    uint64_t v11 = MEMORY[0x263F8EE78];
  }

  return v11;
}

void static GlobalSearchResponseProcessor.makeGeoLocations(experience:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v79 = type metadata accessor for Mapspb_LocalSearchBusiness();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_185_0();
  uint64_t v78 = v4;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_27_10();
  uint64_t v77 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_GeoObjectComponent?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_12_7();
  type metadata accessor for Apple_Parsec_Siri_V2alpha_GeoObjectComponent();
  OUTLINED_FUNCTION_1();
  v69[5] = v10;
  uint64_t v70 = v9;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_184_0();
  v69[4] = v11;
  uint64_t v12 = type metadata accessor for Searchfoundation_Card();
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_184_0();
  uint64_t v73 = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
  OUTLINED_FUNCTION_1();
  uint64_t v72 = v21;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_184_0();
  uint64_t v71 = v23;
  uint64_t v24 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  uint64_t v26 = MEMORY[0x263F8EE78];
  if (v24)
  {
    uint64_t v27 = v24;
    uint64_t v28 = v25;
    swift_bridgeObjectRetain();
    if (!*(void *)(v28 + 16))
    {
      outlined consume of GlobalSearchResponseProcessor.PegasusComponents?(v27);
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    specialized Collection.first.getter(v27, (uint64_t)v20);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53_2((uint64_t)v20, 1, v74);
    if (v29)
    {
      swift_bridgeObjectRelease();
      outlined destroy of PQAVerificationModelProtocol?((uint64_t)v20, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      id v31 = (void *)OUTLINED_FUNCTION_43_1(v30, (uint64_t)static Logging.search);
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_51_1(v32))
      {
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OUTLINED_FUNCTION_56(&dword_257DC6000, v33, v34, "Layout snippet missing in the knowledge experience components");
        OUTLINED_FUNCTION_34();
      }
    }
    else
    {
      OUTLINED_FUNCTION_58_1();
      v35();
      static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
      uint64_t v83 = v26;
      uint64_t v36 = *(void *)(v28 + 16);
      v69[3] = v14;
      if (v36)
      {
        uint64_t v37 = *(void *)(type metadata accessor for Apple_Parsec_Siri_V2alpha_DomainObjectComponent() - 8);
        uint64_t v38 = v28 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        uint64_t v39 = *(void *)(v37 + 72);
        swift_bridgeObjectRetain();
        do
        {
          closure #1 in static GlobalSearchResponseProcessor.makeGeoLocations(experience:)(v38, (char *)&v83);
          v38 += v39;
          --v36;
        }
        while (v36);
        swift_bridgeObjectRelease_n();
        uint64_t v40 = v83;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = MEMORY[0x263F8EE78];
      }
      specialized Collection.first.getter(v40, v0);
      uint64_t v41 = OUTLINED_FUNCTION_33_19();
      OUTLINED_FUNCTION_53_2(v41, v42, v70);
      if (!v29)
      {
        OUTLINED_FUNCTION_58_1();
        v50();
        uint64_t v51 = Apple_Parsec_Siri_V2alpha_GeoObjectComponent.geoObject.getter();
        int64_t v52 = *(void *)(v51 + 16);
        if (v52)
        {
          v69[2] = v12;
          uint64_t v82 = v26;
          uint64_t v53 = v51;
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v52, 0);
          uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
          uint64_t v55 = v2 + 16;
          uint64_t v54 = v56;
          OUTLINED_FUNCTION_137();
          v69[1] = v53;
          uint64_t v58 = v53 + v57;
          uint64_t v75 = *(void *)(v55 + 56);
          uint64_t v76 = v55;
          for (int64_t i = v52 - 1; ; --i)
          {
            uint64_t v60 = v77;
            uint64_t v61 = v79;
            v54(v77, v58, v79);
            v54(v78, v60, v61);
            GeoLocation.init(geoObject:)((uint64_t)v80);
            OUTLINED_FUNCTION_111_0();
            v62();
            memcpy(v81, v80, sizeof(v81));
            uint64_t v63 = v82;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v63 + 16) + 1, 1);
              uint64_t v63 = v82;
            }
            unint64_t v65 = *(void *)(v63 + 16);
            unint64_t v64 = *(void *)(v63 + 24);
            if (v65 >= v64 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v64 > 1), v65 + 1, 1);
              uint64_t v63 = v82;
            }
            *(void *)(v63 + 16) = v65 + 1;
            memcpy((void *)(v63 + 160 * v65 + 32), v81, 0x9DuLL);
            if (!i) {
              break;
            }
            v58 += v75;
          }
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_16_1();
        v66();
        OUTLINED_FUNCTION_30();
        v67();
        OUTLINED_FUNCTION_16_1();
        v68();
        goto LABEL_32;
      }
      outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_GeoObjectComponent?);
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      uint64_t v44 = (void *)OUTLINED_FUNCTION_43_1(v43, (uint64_t)static Logging.search);
      os_log_type_t v45 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_51_1(v45))
      {
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OUTLINED_FUNCTION_56(&dword_257DC6000, v46, v47, "Geo response DomainObjectComponent missing GeoObject");
        OUTLINED_FUNCTION_34();
      }

      OUTLINED_FUNCTION_30();
      v48();
      OUTLINED_FUNCTION_16_1();
      v49();
      swift_bridgeObjectRelease();
    }
  }
LABEL_33:
  OUTLINED_FUNCTION_119_0();
}

void static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v46 = v4;
  uint64_t v5 = type metadata accessor for Searchfoundation_Card();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_185_0();
  uint64_t v54 = v9;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_27_10();
  uint64_t v50 = v11;
  OUTLINED_FUNCTION_26_8();
  uint64_t v12 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails();
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_18_8();
  uint64_t v16 = type metadata accessor for Apple_Parsec_Siri_V2alpha_CasinoSnippet();
  OUTLINED_FUNCTION_1();
  uint64_t v45 = v17;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_184_0();
  uint64_t v43 = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Searchfoundation_Card?);
  uint64_t v21 = OUTLINED_FUNCTION_81(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_36_21();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_27_10();
  uint64_t v44 = v23;
  uint64_t v24 = *(void *)(MEMORY[0x25A2C5D40]() + 16);
  if (v24)
  {
    v42[2] = v16;
    v42[3] = v3;
    OUTLINED_FUNCTION_137();
    uint64_t v27 = v25 + v26;
    uint64_t v51 = v7;
    uint64_t v28 = (void (**)(void))(v7 + 32);
    uint64_t v52 = *(void *)(v14 + 72);
    uint64_t v53 = v29;
    v42[1] = v25;
    swift_bridgeObjectRetain();
    uint64_t v55 = MEMORY[0x263F8EE78];
    uint64_t v48 = v12;
    uint64_t v49 = v5;
    uint64_t v47 = v14 + 16;
    do
    {
      v53(v0, v27, v12);
      closure #1 in static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)(v0, v1);
      uint64_t v30 = OUTLINED_FUNCTION_50_23();
      v31(v30);
      OUTLINED_FUNCTION_53_2(v1, 1, v5);
      if (v32)
      {
        outlined destroy of PQAVerificationModelProtocol?(v1, &demangling cache variable for type metadata for Searchfoundation_Card?);
      }
      else
      {
        uint64_t v33 = *v28;
        OUTLINED_FUNCTION_49_17();
        v33();
        OUTLINED_FUNCTION_49_17();
        v33();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v55 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v55 + 16) + 1, 1, v55);
        }
        unint64_t v36 = *(void *)(v55 + 16);
        unint64_t v35 = *(void *)(v55 + 24);
        if (v36 >= v35 >> 1) {
          uint64_t v55 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1, v55);
        }
        *(void *)(v55 + 16) = v36 + 1;
        OUTLINED_FUNCTION_46_8();
        uint64_t v5 = v49;
        OUTLINED_FUNCTION_49_17();
        v33();
        uint64_t v12 = v48;
      }
      v27 += v52;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease_n();
    uint64_t v37 = v46;
    uint64_t v7 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v55 = MEMORY[0x263F8EE78];
    uint64_t v37 = v46;
  }
  Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent.compactSnippet.getter();
  static GlobalSearchResponseProcessor.makeCard(casinoSnippet:)(v43, v44);
  OUTLINED_FUNCTION_16_1();
  v38();
  uint64_t v39 = OUTLINED_FUNCTION_33_19();
  OUTLINED_FUNCTION_53_2(v39, v40, v5);
  if (v32)
  {
    uint64_t v41 = outlined destroy of PQAVerificationModelProtocol?(v44, &demangling cache variable for type metadata for Searchfoundation_Card?);
    MEMORY[0x270FA5388](v41);
    v42[-2] = v55;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_Card and conformance Searchfoundation_Card, MEMORY[0x263F5CB50]);
    static Message.with(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v37, v44, v5);
  }
  OUTLINED_FUNCTION_119_0();
}

id static GlobalSearchResponseProcessor.makeSFCard(card:)()
{
  type metadata accessor for Searchfoundation_Card();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_Card and conformance Searchfoundation_Card, MEMORY[0x263F5CB50]);
  uint64_t v0 = Message.serializedData(partial:)();
  unint64_t v2 = v1;
  id v3 = objc_allocWithZone(MEMORY[0x263F67B20]);
  outlined copy of Data._Representation(v0, v2);
  id v4 = @nonobjc _SFPBCard.init(data:)(v0, v2);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F677D0]), sel_initWithProtobuf_, v4);

    outlined consume of Data._Representation(v0, v2);
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    uint64_t v8 = OUTLINED_FUNCTION_43_1(v7, (uint64_t)static Logging.search);
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_51_1(v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_257DC6000, v8, OS_LOG_TYPE_DEFAULT, "Failed to initialize _SFPBCard from serialized data", v10, 2u);
      OUTLINED_FUNCTION_34();
    }
    outlined consume of Data._Representation(v0, v2);

    return 0;
  }
  return v6;
}

void static GlobalSearchResponseProcessor.makeGenericItem(experience:domain:lowConfidenceKnowledge:)()
{
  OUTLINED_FUNCTION_104_0();
  char v3 = v2;
  uint64_t v27 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  type metadata accessor for Searchfoundation_Card();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_59_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_39_19();
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_14_10();
  uint64_t v16 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  if (v16)
  {
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    specialized Collection.first.getter(v17, v1);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53_2(v1, 1, v12);
    if (!v18)
    {
      OUTLINED_FUNCTION_58_1();
      v22();
      static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
      id v23 = static GlobalSearchResponseProcessor.makeSFCard(card:)();
      uint64_t v24 = static GlobalSearchResponseProcessor.makeGlobalItems(experience:domain:lowConfidenceKnowledge:)((uint64_t)v8, v6, v27, v3 & 1);
      uint64_t v25 = v23;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch10GlobalItemVG_AF0E6ResultVs5NeverOTg504_s10d8Search06f89B17ResponseProcessorO15makeGenericItem10experience6domain22lowConfidenceKnowledgeSayAA0B6H58VG015SiriInformationB00G10ExperienceC_SSSbtFZAiA0cH0VXEfU_0xyE00P10ExperienceCSo6SFCardCSgTf1cn_n(v24, v8, v23);
      OUTLINED_FUNCTION_16_1();
      v26();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v12);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    outlined destroy of PQAVerificationModelProtocol?(v1, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v25 = OUTLINED_FUNCTION_43_1(v19, (uint64_t)static Logging.search);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v20))
  {
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_257DC6000, v25, v20, "No layout snippet in GenericExperience", v21, 2u);
    OUTLINED_FUNCTION_34();
  }
LABEL_9:

  OUTLINED_FUNCTION_119_0();
}

void static GlobalSearchResponseProcessor.makeAudioItem(experience:domain:)()
{
  OUTLINED_FUNCTION_104_0();
  unint64_t v36 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v35 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_14_10();
  type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_12_7();
  UUID.init()();
  UUID.uuidString.getter();
  OUTLINED_FUNCTION_111_0();
  v10();
  id v11 = objc_allocWithZone(MEMORY[0x263F02AE8]);
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v11, sel_init);
  id v13 = objc_allocWithZone(MEMORY[0x263F02AE0]);
  swift_bridgeObjectRetain();
  uint64_t v14 = OUTLINED_FUNCTION_63_12();
  id v34 = @nonobjc CSSearchableItem.init(uniqueIdentifier:domainIdentifier:attributeSet:)(v14, v15, v16, v17, v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
  uint64_t v18 = OUTLINED_FUNCTION_60_11();
  uint64_t v19 = (int *)(type metadata accessor for SearchResult(v18) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_258661700;
  uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
               + 48);
  uint64_t v22 = type metadata accessor for GlobalDialog();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v22);
  type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
  uint64_t v23 = OUTLINED_FUNCTION_33_19();
  __swift_storeEnumTagSinglePayload(v23, v24, 1, v25);
  swift_bridgeObjectRetain();
  uint64_t v26 = OUTLINED_FUNCTION_63_12();
  GlobalItem.init(id:domain:dialog:text:parsecEntity:lowConfidenceKnowledge:)(v26, v27, v28, v29, v1, 0, 0, v35, v30, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_258662D10;
  type metadata accessor for DialogExperience();
  swift_allocObject();
  *(void *)(v31 + 32) = DialogExperience.init(_:card:)(v36, 0);
  specialized Array._endMutation()();
  *(void *)(v0 + v33) = v31;
  swift_storeEnumTagMultiPayload();
  char v32 = (void *)(v21 + v20 + v19[8]);
  *char v32 = 0;
  v32[1] = 0;
  outlined init with take of SearchResultItem(v0, v21 + v20, (void (*)(void))type metadata accessor for SearchResultItem);
  *(void *)(v21 + v20 + v19[7]) = v34;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static GlobalSearchResponseProcessor.processRenderedDialog(experience:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_44_3();
  uint64_t v4 = type metadata accessor for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - v9;
  if (static GlobalSearchResponseProcessor.parseExperience(experience:)())
  {
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    specialized Collection.first.getter(v12, v0);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53_2(v0, 1, v4);
    if (!v13)
    {
      OUTLINED_FUNCTION_58_1();
      v14();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v1, v10, v4);
      GlobalDialog.init(renderedDialog:)();
      OUTLINED_FUNCTION_30();
      return v15();
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v4);
  }
  outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent?);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_43_1(v17, (uint64_t)static Logging.search);
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_51_1(v19))
  {
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OUTLINED_FUNCTION_56(&dword_257DC6000, v20, v21, "No rendered dialog in Pegasus response, returning empty dialog");
    OUTLINED_FUNCTION_34();
  }

  return GlobalDialog.init(print:speak:)();
}

uint64_t static GlobalSearchResponseProcessor.parseExperience(experience:)()
{
  dispatch thunk of Experience.queryConfidence.getter();
  if (v0 != 1.0)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_257DC6000, v8, v9, "Received low confidence Pegasus response", v10, 2u);
      MEMORY[0x25A2C94B0](v10, -1, -1);
    }

    return 0;
  }
  uint64_t v1 = GenericExperience.components.getter();
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  do
  {
    closure #1 in static GlobalSearchResponseProcessor.collatePegasusComponents(components:)(v4, &v13, (char *)&v12, (char *)&v11);
    v4 += v5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t static GlobalSearchResponseProcessor.makeGlobalItems(experience:domain:lowConfidenceKnowledge:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  HIDWORD(v93) = a4;
  uint64_t v97 = a2;
  uint64_t v98 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v94 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v92 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for UUID();
  uint64_t v91 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v90 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KGDocument?);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v88 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for KGDocument();
  MEMORY[0x270FA5388](v87);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WebAnswer?);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for WebAnswer();
  MEMORY[0x270FA5388](v17);
  os_log_type_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_SageExperience?);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Apple_Parsec_Siri_V2alpha_SageExperience();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for GlobalDialog();
  uint64_t v95 = *(void *)(v27 - 8);
  uint64_t v96 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  static GlobalSearchResponseProcessor.processRenderedDialog(experience:)();
  dispatch thunk of GenericExperience.sageExperience.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23) == 1)
  {
    uint64_t v85 = v13;
    uint64_t v86 = v29;
    uint64_t v30 = v92;
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v22, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_SageExperience?);
    uint64_t v31 = v98;
    BOOL v32 = v97 == 0x77736E615F626577 && v98 == 0xEA00000000007265;
    if (v32 || (uint64_t v33 = v97, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      static GlobalSearchResponseProcessor.makeWebAnswer(experience:)();
      specialized Collection.first.getter(v41, (uint64_t)v16);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
      {
        outlined destroy of PQAVerificationModelProtocol?((uint64_t)v16, &demangling cache variable for type metadata for WebAnswer?);
      }
      else
      {
        outlined init with take of SearchResultItem((uint64_t)v16, (uint64_t)v19, (void (*)(void))type metadata accessor for WebAnswer);
        uint64_t v50 = *((void *)v19 + 2);
        unint64_t v49 = *((void *)v19 + 3);
        uint64_t v51 = HIBYTE(v49) & 0xF;
        if ((v49 & 0x2000000000000000) == 0) {
          uint64_t v51 = v50 & 0xFFFFFFFFFFFFLL;
        }
        if (v51)
        {
          uint64_t v87 = *((void *)v19 + 3);
          uint64_t v88 = v50;
          swift_bridgeObjectRetain();
          outlined destroy of KGDocument();
          uint64_t v52 = v30;
          uint64_t v54 = v89;
          uint64_t v53 = v90;
          uint64_t v55 = v91;
          goto LABEL_28;
        }
        outlined destroy of KGDocument();
      }
      uint64_t v52 = v30;
      uint64_t v54 = v89;
      uint64_t v53 = v90;
      uint64_t v55 = v91;
      uint64_t v57 = (uint64_t)v86;
    }
    else
    {
      BOOL v56 = v33 == 26475 && v31 == 0xE200000000000000;
      uint64_t v52 = v30;
      uint64_t v54 = v89;
      uint64_t v53 = v90;
      uint64_t v55 = v91;
      uint64_t v57 = (uint64_t)v86;
      if (!v56 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_30;
      }
    }
    static GlobalSearchResponseProcessor.makeKnowledge(experience:)(a1, v34, v35, v36, v37, v38, v39, v40, v84, (uint64_t)v85, (uint64_t)v86, v87, v88, v89, v90, v91, v92, v93, v94,
      v95);
    uint64_t v58 = v88;
    specialized Collection.first.getter(v59, v88);
    swift_bridgeObjectRelease();
    uint64_t v60 = v87;
    if (__swift_getEnumTagSinglePayload(v58, 1, v87) == 1)
    {
      outlined destroy of PQAVerificationModelProtocol?(v58, &demangling cache variable for type metadata for KGDocument?);
LABEL_30:
      uint64_t v66 = GlobalDialog.print.getter();
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      uint64_t v69 = HIBYTE(v68) & 0xF;
      if ((v68 & 0x2000000000000000) == 0) {
        uint64_t v69 = v66 & 0xFFFFFFFFFFFFLL;
      }
      if (v69) {
        uint64_t v70 = GlobalDialog.print.getter();
      }
      else {
        uint64_t v70 = GlobalDialog.speak.getter();
      }
      uint64_t v87 = v71;
      uint64_t v88 = v70;
      goto LABEL_36;
    }
    uint64_t v61 = (uint64_t)v85;
    outlined init with take of SearchResultItem(v58, (uint64_t)v85, (void (*)(void))type metadata accessor for KGDocument);
    uint64_t v62 = (uint64_t *)(v61 + *(int *)(v60 + 24));
    uint64_t v64 = *v62;
    unint64_t v63 = v62[1];
    uint64_t v65 = HIBYTE(v63) & 0xF;
    if ((v63 & 0x2000000000000000) == 0) {
      uint64_t v65 = v64 & 0xFFFFFFFFFFFFLL;
    }
    if (!v65)
    {
      outlined destroy of KGDocument();
      uint64_t v57 = (uint64_t)v86;
      goto LABEL_30;
    }
    uint64_t v87 = v63;
    uint64_t v88 = v64;
    swift_bridgeObjectRetain();
    outlined destroy of KGDocument();
LABEL_28:
    uint64_t v57 = (uint64_t)v86;
LABEL_36:
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GlobalItem>);
    uint64_t v72 = *(void *)(type metadata accessor for GlobalItem() - 8);
    unint64_t v73 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_258661700;
    UUID.init()();
    uint64_t v74 = UUID.uuidString.getter();
    uint64_t v75 = v53;
    uint64_t v77 = v76;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v75, v54);
    uint64_t v46 = v95;
    uint64_t v47 = v96;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v52, v57, v96);
    __swift_storeEnumTagSinglePayload(v52, 0, 1, v47);
    uint64_t v78 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
    uint64_t v79 = v52;
    uint64_t v80 = v94;
    __swift_storeEnumTagSinglePayload(v94, 1, 1, v78);
    uint64_t v81 = v98;
    swift_bridgeObjectRetain();
    GlobalItem.init(id:domain:dialog:text:parsecEntity:lowConfidenceKnowledge:)(v74, v77, v97, v81, v79, v88, v87, v80, (void *)(v45 + v73), BYTE4(v93) & 1);
    uint64_t v48 = (char *)v57;
    goto LABEL_37;
  }
  uint64_t v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
  uint64_t v43 = MEMORY[0x25A2C5BB0](v42);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = v98;
  *(&v84 - 4) = v97;
  *(&v84 - 3) = v44;
  uint64_t v83 = v29;
  uint64_t v45 = specialized Sequence.compactMap<A>(_:)((void (*)(uint64_t))partial apply for closure #1 in static GlobalSearchResponseProcessor.makeGlobalItems(experience:domain:lowConfidenceKnowledge:), (uint64_t)(&v84 - 6), v43);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v46 = v95;
  uint64_t v47 = v96;
  uint64_t v48 = v29;
LABEL_37:
  (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
  return v45;
}