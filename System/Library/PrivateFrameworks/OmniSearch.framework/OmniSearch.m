uint64_t AnswerSynthesisModelOnDevice.modelVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnswerSynthesisModelOnDevice.modelVersion.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*AnswerSynthesisModelOnDevice.modelVersion.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t AnswerSynthesisModelOnDevice.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AnswerSynthesisModelOnDevice.init()();
  return v0;
}

void *AnswerSynthesisModelOnDevice.init()()
{
  v1 = v0;
  OUTLINED_FUNCTION_3();
  uint64_t v2 = type metadata accessor for AssetVersion();
  OUTLINED_FUNCTION_1();
  uint64_t v44 = v3;
  ((void (*)(void))MEMORY[0x270FA5388])();
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogAsset<LLMAdapterAssetMetadata, LLMAdapterAssetContents>);
  OUTLINED_FUNCTION_1();
  uint64_t v45 = v8;
  uint64_t v46 = v7;
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v13 = (char *)v38 - v12;
  v0[2] = 0;
  v0[3] = 0;
  unint64_t v14 = static AnswerSynthesisModelProtocol.GMS_USE_CASE_ID.getter();
  uint64_t v16 = v15;
  id v17 = objc_msgSend(self, sel_processInfo);
  signed int v18 = objc_msgSend(v17, sel_processIdentifier);

  uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for AnswerSynthesisModelOnDevice._ClientInfo();
  OUTLINED_FUNCTION_12();
  v1[4] = AnswerSynthesisModelOnDevice._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(v14, v16, v18, 0, v19);
  static Catalog.Resource.LLM.Adapter.AnswerSynthesis()();
  __swift_project_boxed_opaque_existential_1(v49, v49[3]);
  dispatch thunk of AssetBackedResource.fetchAsset()();
  uint64_t v20 = v45;
  CatalogAsset.version.getter();
  uint64_t v21 = AssetVersion.number.getter();
  uint64_t v23 = v22;
  v24 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  uint64_t v43 = v6;
  uint64_t v44 = v2;
  v42 = v24;
  OUTLINED_FUNCTION_30();
  v25();
  swift_beginAccess();
  v1[2] = v21;
  v1[3] = v23;
  swift_bridgeObjectRelease();
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logging.answerSynthesis);
  uint64_t v27 = v46;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v11, v13, v46);
  v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v48 = v40;
    *(_DWORD *)v30 = 136315138;
    v38[1] = v30 + 4;
    v39 = v30;
    v41 = v13;
    uint64_t v31 = v43;
    CatalogAsset.version.getter();
    uint64_t v32 = AssetVersion.number.getter();
    unint64_t v34 = v33;
    v42(v31, v44);
    uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v35 = *(void (**)(char *, uint64_t))(v45 + 8);
    v35(v11, v27);
    _os_log_impl(&dword_257DC6000, v28, v29, "AS on device model version is %s", v39, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    v35(v41, v27);
  }
  else
  {

    v36 = *(void (**)(char *, uint64_t))(v20 + 8);
    v36(v11, v27);
    v36(v13, v27);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  return v1;
}

Swift::Void __swiftcall AnswerSynthesisModelOnDevice.prewarm()()
{
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logging.answerSynthesis);
  v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_257DC6000, v1, v2, "Prewarming AnswerSynthesisModelOnDevice model...", v3, 2u);
    OUTLINED_FUNCTION_34();
  }

  swift_retain();
  TokenGenerator.prewarm()();
  swift_release();
}

uint64_t AnswerSynthesisModelOnDevice.model.getter()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelOnDevice.createPromptTemplate()()
{
  OUTLINED_FUNCTION_3();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<AssetBackedLLMBundle>);
  MEMORY[0x270FA5388](v0 - 8);
  OUTLINED_FUNCTION_16();
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisID.getter();
  static AnswerSynthesisModelProtocol.promptTemplateID.getter();
  return PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
}

uint64_t AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *uint64_t v3 = v0;
  v3[1] = AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:);
  OUTLINED_FUNCTION_29();
  return closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(v4, v5, v6, v7, v2);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

uint64_t closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[30] = a4;
  v5[31] = a5;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[32] = swift_task_alloc();
  v5[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[35] = v6;
  v5[36] = *(void *)(v6 - 8);
  v5[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[38] = v7;
  v5[39] = *(void *)(v7 - 8);
  v5[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v5[42] = v8;
  v5[43] = *(void *)(v8 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v5[46] = v9;
  v5[47] = *(void *)(v9 - 8);
  v5[48] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[49] = v10;
  v5[50] = *(void *)(v10 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CompletionPrompt();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:), 0, 0);
}

uint64_t closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)()
{
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v23 = *(void *)(v0 + 368);
  uint64_t v24 = *(void *)(v0 + 384);
  uint64_t v25 = *(void *)(v0 + 328);
  uint64_t v21 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v19 = *(void *)(v0 + 232);
  uint64_t v20 = *(void *)(v0 + 424);
  *(void *)(swift_task_alloc() + 16) = v6;
  CompletionPrompt.init(_:)();
  swift_task_dealloc();
  static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
  *(_DWORD *)(v0 + 576) = *MEMORY[0x263F413E0];
  uint64_t v7 = *(void (**)(uint64_t))(v3 + 104);
  *(void *)(v0 + 496) = v7;
  *(void *)(v0 + 504) = (v3 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v7(v4);
  *(void *)(v0 + 512) = lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  OUTLINED_FUNCTION_36();
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 520) = v8;
  *(void *)(v0 + 528) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v4, v5);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(void *)(v0 + 536) = v9;
  *(void *)(v0 + 544) = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v2);
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v19);
  OUTLINED_FUNCTION_36();
  GenerativeConfigurationProtocol.bindVariables(_:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = OUTLINED_FUNCTION_25();
  ((void (*)(uint64_t))v9)(v10);
  Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_36();
  GenerativeConfigurationProtocol._internalTrackingConfig(_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30();
  ((void (*)(void))v9)();
  uint64_t v11 = *(void *)(v21 + 32);
  *(void *)(v0 + 552) = v11;
  uint64_t v12 = v11
      + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v12, v23);
  OUTLINED_FUNCTION_36();
  GenerativeConfigurationProtocol._internalSessionTrackingConfig(_:)();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  OUTLINED_FUNCTION_30();
  ((void (*)(void))v9)();
  uint64_t v13 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  OUTLINED_FUNCTION_32(v25, v14, v15, v13);
  FunctionIdentifier.init(identifier:resourceInformation:)();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v16;
  *uint64_t v16 = v0;
  v16[1] = closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:);
  uint64_t v17 = *(void *)(v0 + 256);
  return MEMORY[0x270F2FC98](v17, 0xD00000000000001CLL, 0x800000025867D260);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  *(void *)(v6 + 568) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t inited;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t (*v21)(void);
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  void (*v41)(uint64_t, void, uint64_t);
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;

  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?(v1);
  }
  else
  {
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    v42 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v40 = *(_DWORD *)(v0 + 576);
    v41 = *(void (**)(uint64_t, void, uint64_t))(v0 + 496);
    uint64_t v44 = *(void *)(v0 + 448);
    uint64_t v45 = *(void *)(v0 + 488);
    uint64_t v46 = *(void *)(v0 + 416);
    uint64_t v47 = *(void *)(v0 + 424);
    v38 = *(void *)(v0 + 408);
    v39 = *(void *)(v0 + 392);
    unint64_t v33 = *(void *)(v0 + 352);
    unint64_t v34 = *(void *)(v0 + 344);
    v35 = *(void *)(v0 + 336);
    v36 = *(void *)(v0 + 360);
    v49 = *(void *)(v0 + 320);
    uint64_t v43 = *(void *)(v0 + 312);
    uint64_t v3 = *(void *)(v0 + 304);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 272);
    v37 = *(void *)(v0 + 224);
    uint64_t v31 = v1 + *(int *)(v2 + 48);
    uint64_t v32 = *(void *)(v0 + 296);
    v30 = v6 + *(int *)(*(void *)(v0 + 264) + 48);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
    v7(v6, v1, v3);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v8(v30, v31, v4);
    v7(v49, v6, v3);
    uint64_t v9 = OUTLINED_FUNCTION_33();
    uint64_t v10 = v4;
    ((void (*)(uint64_t))v8)(v9);
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_28();
    v11();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36, v33, v35);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    strcpy((char *)(inited + 32), "promptTemplate");
    *(unsigned char *)(inited + 47) = -18;
    uint64_t v13 = type metadata accessor for PromptTemplate();
    *(void *)(inited + 72) = v13;
    *(void *)(inited + 80) = lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1Tm, v37, v13);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    Dictionary.init(dictionaryLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    uint64_t v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_258661700;
    *(void *)(v15 + 32) = 0xD000000000000059;
    *(void *)(v15 + 40) = 0x800000025867D200;
    static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
    v41(v38, v40, v39);
    *(void *)(v15 + 72) = type metadata accessor for SamplingParameters();
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v15 + 48));
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v42(v38, v39);
    Dictionary.init(dictionaryLiteral:)();
    static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v10);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v49, v3);
    v48(v45, v46);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v45, v44, v46);
  }
  uint64_t v16 = *(void *)(v0 + 568);
  GenerativeConfigurationProtocol.functionIdentifier(_:)();
  GenerativeConfigurationProtocol._addAssetCache()();
  if (v16)
  {
    (*(void (**)(void, void))(v0 + 536))(*(void *)(v0 + 432), *(void *)(v0 + 416));
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    signed int v18 = *(void *)(v0 + 488);
    uint64_t v19 = *(void *)(v0 + 416);
    OUTLINED_FUNCTION_28();
    v20();
    v17(v18, v19);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 552);
    uint64_t v23 = *(void (**)(void))(v0 + 536);
    uint64_t v24 = *(void *)(v0 + 488);
    uint64_t v25 = *(void *)(v0 + 440);
    uint64_t v26 = *(void *)(v0 + 416);
    v23();
    *(void *)(v0 + 208) = *(void *)(v22
                                      + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo__model);
    type metadata accessor for TokenGenerator();
    GenerativeConfigurationProtocol.with<A>(model:modelType:)();
    ((void (*)(uint64_t, uint64_t))v23)(v25, v26);
    uint64_t v27 = OUTLINED_FUNCTION_25();
    v28(v27);
    ((void (*)(uint64_t, uint64_t))v23)(v24, v26);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v21();
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[67];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[52];
  OUTLINED_FUNCTION_28();
  v4();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v5();
}

uint64_t closure #1 in closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Prompt();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PromptTemplate();
  v13[3] = v6;
  v13[4] = lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v6);
  uint64_t v8 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v10 + v9, v5, v2);
  MEMORY[0x25A2C7790](v10, v2, v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AnswerSynthesisModelOnDevice.synthesize_generateGenerativeFunctionOverride()()
{
  uint64_t v1 = type metadata accessor for BindableConfiguration();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_15();
  uint64_t v3 = type metadata accessor for CompletionPrompt();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - v10;
  CompletionPrompt.init(_:)();
  BindableConfiguration.init(name:)();
  lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  OUTLINED_FUNCTION_30();
  v12();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v9, v3);
  uint64_t v14 = static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (!v0) {
    uint64_t v1 = v14;
  }
  v13(v11, v3);
  return v1;
}

uint64_t closure #1 in AnswerSynthesisModelOnDevice.synthesize_generateGenerativeFunctionOverride()()
{
  uint64_t v0 = type metadata accessor for Prompt();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = type metadata accessor for BindableVariable();
  v9[4] = MEMORY[0x263F62138];
  __swift_allocate_boxed_opaque_existential_1Tm(v9);
  BindableVariable.init(name:)();
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x25A2C7790](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t AnswerSynthesisModelOnDevice.synthesize(_:bindings:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v0[2] = v3;
  v0[3] = *(void *)(v3 - 8);
  v0[4] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = AnswerSynthesisModelOnDevice.synthesize(_:bindings:);
  OUTLINED_FUNCTION_29();
  return closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(v5, v6, v7, v8, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  v3[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v3[7] = v10;
    uint64_t v11 = lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, MEMORY[0x263F7F7D8]);
    *uint64_t v10 = v5;
    v10[1] = AnswerSynthesisModelOnDevice.synthesize(_:bindings:);
    uint64_t v12 = v3[2];
    return MEMORY[0x270F2EE70](v12, v11);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

uint64_t AnswerSynthesisModelOnDevice.synthesize(_:bindings:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_10();
  *uint64_t v7 = v6;
  uint64_t v8 = *v3;
  *uint64_t v7 = *v3;
  *(void *)(v6 + 64) = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_28();
  v9();
  if (v2)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v10, v11, v12);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v13(a1, a2);
  }
}

Swift::String_optional __swiftcall AnswerSynthesisModelOnDevice.getModelVersion()()
{
  OUTLINED_FUNCTION_35();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t AnswerSynthesisModelOnDevice._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v37[3] = a4;
  uint64_t v39 = a3;
  type metadata accessor for CachePolicy();
  MEMORY[0x270FA5388]();
  type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x270FA5388]();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<AssetBackedLLMBundle>);
  MEMORY[0x270FA5388]();
  uint64_t v10 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  _ClientInfoSessionTrackingConfig.init(sessionTrackingConifg:_internalSessionTrackingConfig:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v6+ OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig, v13, v10);
  uint64_t v14 = specialized Dictionary.subscript.getter(0xD000000000000015, 0x800000025867D670, a5);
  unint64_t v16 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_52;
  }
  uint64_t v18 = HIBYTE(v16) & 0xF;
  uint64_t v19 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v16 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(v16) & 0xF;
  }
  else {
    uint64_t v20 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20) {
    goto LABEL_51;
  }
  if ((v16 & 0x1000000000000000) != 0)
  {
    specialized _parseInteger<A, B>(ascii:radix:)(v14, v16, 10);
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  if ((v16 & 0x2000000000000000) == 0)
  {
    if ((v14 & 0x1000000000000000) != 0) {
      uint64_t v21 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v21 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v21, v19, 10);
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_52:
    type metadata accessor for TokenGenerator();
    static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisID.getter();
    static CachePolicy.inMemory.getter();
    GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
    *(void *)(v6
              + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo__model) = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:parentOfOnBehalfOf:)();
    return v6;
  }
  v40[0] = v14;
  v40[1] = v16 & 0xFFFFFFFFFFFFFFLL;
  if (v14 == 43)
  {
    if (v18)
    {
      if (v18 != 1 && (BYTE1(v14) - 48) <= 9u && v18 != 2 && (BYTE2(v14) - 48) <= 9u)
      {
        uint64_t v22 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
        uint64_t v23 = v18 - 3;
        if (v23)
        {
          uint64_t v24 = (unsigned __int8 *)v40 + 3;
          do
          {
            unsigned int v25 = *v24 - 48;
            if (v25 > 9) {
              break;
            }
            uint64_t v26 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
              break;
            }
            uint64_t v22 = v26 + v25;
            if (__OFADD__(v26, v25)) {
              break;
            }
            ++v24;
            --v23;
          }
          while (v23);
        }
      }
      goto LABEL_51;
    }
  }
  else
  {
    if (v14 != 45)
    {
      if (v18)
      {
        if ((v14 - 48) <= 9u && v18 != 1 && (BYTE1(v14) - 48) <= 9u)
        {
          uint64_t v27 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
          uint64_t v28 = v18 - 2;
          if (v28)
          {
            os_log_type_t v29 = (unsigned __int8 *)v40 + 2;
            do
            {
              unsigned int v30 = *v29 - 48;
              if (v30 > 9) {
                break;
              }
              uint64_t v31 = 10 * v27;
              if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
                break;
              }
              uint64_t v27 = v31 + v30;
              if (__OFADD__(v31, v30)) {
                break;
              }
              ++v29;
              --v28;
            }
            while (v28);
          }
        }
      }
      goto LABEL_51;
    }
    if (v18)
    {
      if (v18 != 1 && (BYTE1(v14) - 48) <= 9u && v18 != 2 && (BYTE2(v14) - 48) <= 9u)
      {
        uint64_t v32 = -10 * (BYTE1(v14) - 48) - (BYTE2(v14) - 48);
        uint64_t v33 = v18 - 3;
        if (v33)
        {
          unint64_t v34 = (unsigned __int8 *)v40 + 3;
          do
          {
            unsigned int v35 = *v34 - 48;
            if (v35 > 9) {
              break;
            }
            uint64_t v36 = 10 * v32;
            if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
              break;
            }
            uint64_t v32 = v36 - v35;
            if (__OFSUB__(v36, v35)) {
              break;
            }
            ++v34;
            --v33;
          }
          while (v33);
        }
      }
      goto LABEL_51;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t AnswerSynthesisModelOnDevice._ClientInfo.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  uint64_t v2 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelOnDevice._ClientInfo.__deallocating_deinit()
{
  uint64_t v0 = AnswerSynthesisModelOnDevice._ClientInfo.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t protocol witness for _ClientInfoProtocol.useCaseIdentifier.getter in conformance AnswerSynthesisModelOnDevice._ClientInfo()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.getter in conformance AnswerSynthesisModelOnDevice._ClientInfo@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.setter in conformance AnswerSynthesisModelOnDevice._ClientInfo(uint64_t a1)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t protocol witness for _ClientInfoProtocol._model.getter in conformance AnswerSynthesisModelOnDevice._ClientInfo()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelOnDevice.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelOnDevice.__deallocating_deinit()
{
  AnswerSynthesisModelOnDevice.deinit();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

void protocol witness for AnswerSynthesisModelProtocol.prewarm() in conformance AnswerSynthesisModelOnDevice()
{
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.createPromptTemplate() in conformance AnswerSynthesisModelOnDevice()
{
  return AnswerSynthesisModelOnDevice.createPromptTemplate()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelOnDevice()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelOnDevice;
  return AnswerSynthesisModelOnDevice.synthesize(_:bindings:)();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelOnDevice(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v3;
  OUTLINED_FUNCTION_10();
  *uint64_t v7 = v6;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v2)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
  }
  return v10(v8, v9);
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.getModelVersion() in conformance AnswerSynthesisModelOnDevice()
{
  return AnswerSynthesisModelOnDevice.getModelVersion()().value._countAndFlagsBits;
}

uint64_t protocol witness for GenerativeModelSessionTokenGenerator.model.getter in conformance AnswerSynthesisModelOnDevice()
{
  return AnswerSynthesisModelOnDevice.model.getter();
}

void *default argument 0 of AnswerResolver.init(resolutionService:featureFlagService:)@<X0>(void *a1@<X8>)
{
  type metadata accessor for SageSearch();
  OUTLINED_FUNCTION_12();
  uint64_t v2 = SageSearch.init()();
  id v3 = objc_msgSend(self, sel_sharedSession);
  type metadata accessor for FeatureFlagService();
  uint64_t v4 = OUTLINED_FUNCTION_31();
  type metadata accessor for GlobalSearchClient();
  uint64_t v5 = swift_allocObject();
  *(void *)&long long v16 = v2;
  OUTLINED_FUNCTION_6(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16);
  *(void *)(v5 + 72) = v3;
  *(void *)(v5 + 80) = v4;
  uint64_t v13 = type metadata accessor for GlobalResolutionService();
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = v5;
  a1[3] = v13;
  a1[4] = &protocol witness table for GlobalResolutionService;
  *a1 = result;
  return result;
}

uint64_t default argument 0 of GlobalResolutionService.init(globalSearch:)()
{
  type metadata accessor for SageSearch();
  OUTLINED_FUNCTION_12();
  uint64_t v0 = SageSearch.init()();
  id v1 = objc_msgSend(self, sel_sharedSession);
  type metadata accessor for FeatureFlagService();
  uint64_t v2 = OUTLINED_FUNCTION_31();
  type metadata accessor for GlobalSearchClient();
  uint64_t v3 = swift_allocObject();
  *(void *)&long long v13 = v0;
  OUTLINED_FUNCTION_6(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  *(void *)(v3 + 72) = v1;
  *(void *)(v3 + 80) = v2;
  return v3;
}

uint64_t specialized == infix<A>(_:_:)(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000746FLL;
  uint64_t v3 = 0x68736E6565726373;
  uint64_t v4 = a1;
  uint64_t v5 = 0x68736E6565726373;
  unint64_t v6 = 0xEA0000000000746FLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6569666C6573;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x616D61726F6E6170;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6F6D6F6C73;
      break;
    case 4:
      uint64_t v5 = 0x566C616974617073;
      unint64_t v6 = 0xEC0000006F656469;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6569666C6573;
      break;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x616D61726F6E6170;
      break;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F6D6F6C73;
      break;
    case 4:
      uint64_t v3 = 0x566C616974617073;
      unint64_t v2 = 0xEC0000006F656469;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

{
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 1701736302;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x656C616D6566;
    }
    else {
      uint64_t v5 = 1701601645;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v5 = 1701736302;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x656C616D6566;
    }
    else {
      uint64_t v3 = 1701601645;
    }
    if (a2 == 1) {
      uint64_t v7 = 0xE600000000000000;
    }
    else {
      uint64_t v7 = 0xE400000000000000;
    }
  }
  else
  {
    uint64_t v7 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  char v8;

  unint64_t v2 = 0xD000000000000010;
  uint64_t v3 = 0x800000025867C130;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0xD000000000000015;
    }
    else {
      uint64_t v5 = 0x64696C6176;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000025867C150;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
  }
  else
  {
    uint64_t v5 = 0xD000000000000010;
    unint64_t v6 = 0x800000025867C130;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v2 = 0xD000000000000015;
    }
    else {
      unint64_t v2 = 0x64696C6176;
    }
    if (a2 == 1) {
      uint64_t v3 = 0x800000025867C150;
    }
    else {
      uint64_t v3 = 0xE500000000000000;
    }
  }
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

{
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0x726577736E61;
  uint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x726577736E61;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x6769626D61736964;
      uint64_t v4 = 0xEC00000065746175;
      break;
    case 2:
      uint64_t v4 = 0x800000025867C180;
      unint64_t v6 = 0xD000000000000011;
      break;
    case 3:
      uint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x726577736E416F6ELL;
      break;
    default:
      break;
  }
  uint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x6769626D61736964;
      uint64_t v7 = 0xEC00000065746175;
      break;
    case 2:
      uint64_t v7 = 0x800000025867C180;
      uint64_t v3 = 0xD000000000000011;
      break;
    case 3:
      uint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x726577736E416F6ELL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 1953718636;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1954047342;
    }
    else {
      uint64_t v5 = 0x7473726966;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v5 = 1953718636;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1954047342;
    }
    else {
      uint64_t v3 = 0x7473726966;
    }
    if (a2 == 1) {
      uint64_t v7 = 0xE400000000000000;
    }
    else {
      uint64_t v7 = 0xE500000000000000;
    }
  }
  else
  {
    uint64_t v7 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0x6F69647541;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1936744781;
    }
    else {
      uint64_t v5 = 0x6E776F6E6B6E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE500000000000000;
    uint64_t v5 = 0x6F69647541;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1936744781;
    }
    else {
      uint64_t v3 = 0x6E776F6E6B6E75;
    }
    if (a2 == 1) {
      uint64_t v7 = 0xE400000000000000;
    }
    else {
      uint64_t v7 = 0xE700000000000000;
    }
  }
  else
  {
    uint64_t v7 = 0xE500000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0x657275747566;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1953718640;
    }
    else {
      uint64_t v5 = 0x6669636570736E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xEB00000000646569;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x657275747566;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1953718640;
    }
    else {
      uint64_t v3 = 0x6669636570736E75;
    }
    if (a2 == 1) {
      uint64_t v7 = 0xE400000000000000;
    }
    else {
      uint64_t v7 = 0xEB00000000646569;
    }
  }
  else
  {
    uint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0x656E6F6870;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6C69616D65;
    }
    else {
      uint64_t v5 = 0x656D697465636166;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE500000000000000;
    uint64_t v5 = 0x656E6F6870;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6C69616D65;
    }
    else {
      uint64_t v3 = 0x656D697465636166;
    }
    if (a2 == 1) {
      uint64_t v7 = 0xE500000000000000;
    }
    else {
      uint64_t v7 = 0xE800000000000000;
    }
  }
  else
  {
    uint64_t v7 = 0xE500000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0x797469746E65;
  uint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6867696C746F7073;
    }
    else {
      uint64_t v5 = 0x6C61626F6C67;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000074;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x797469746E65;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6867696C746F7073;
    }
    else {
      uint64_t v3 = 0x6C61626F6C67;
    }
    if (a2 == 1) {
      uint64_t v7 = 0xE900000000000074;
    }
    else {
      uint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    uint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unsigned int v9;

  uint64_t v3 = 0x676E69727473;
  uint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x676E69727473;
  switch(v5)
  {
    case 1:
      uint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1702125924;
      break;
    case 2:
      uint64_t v4 = 0xE800000000000000;
      uint64_t v7 = 1634891108;
      goto LABEL_5;
    case 3:
      uint64_t v4 = 0xE800000000000000;
      uint64_t v7 = 1633906540;
LABEL_5:
      unint64_t v6 = v7 | 0x6E6F697400000000;
      break;
    case 4:
      unint64_t v6 = 0x6E6F73726570;
      break;
    case 5:
      unint64_t v6 = 0x7265626D756ELL;
      break;
    default:
      break;
  }
  char v8 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      char v8 = 0xE400000000000000;
      uint64_t v3 = 1702125924;
      break;
    case 2:
      char v8 = 0xE800000000000000;
      uint64_t v9 = 1634891108;
      goto LABEL_12;
    case 3:
      char v8 = 0xE800000000000000;
      uint64_t v9 = 1633906540;
LABEL_12:
      uint64_t v3 = v9 | 0x6E6F697400000000;
      break;
    case 4:
      uint64_t v3 = 0x6E6F73726570;
      break;
    case 5:
      uint64_t v3 = 0x7265626D756ELL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    OUTLINED_FUNCTION_4();
  }
  else {
    unint64_t v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))LLMQUModelResponseNonEnumArgs.CodingKeys.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, LLMQUModelAppEntityStatus.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))LLMQUModelAppEntityType.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))PreExtractedSharedLink.Keys.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))PreExtractedBreadcrumb.Keys.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))PreExtractedContact.Keys.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))LLMQUModelResponse.CodingKeys.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))PreExtractedCard.Keys.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, AppEntityStatus.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))EntityUTType.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, ReturnType.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))EntityType.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))SearchResultKey.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, MEMORY[0x263F5B7C0], (char)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, MEMORY[0x263F5B870], (char)&lazy protocol witness table cache variable for type MemoryCreationQUParseSortOrder and conformance MemoryCreationQUParseSortOrder);
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6563697665446E6FLL;
  }
  else {
    uint64_t v4 = 0x726576726573;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x6563697665446E6FLL;
  }
  else {
    uint64_t v6 = 0x726576726573;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0xD000000000000011;
  }
  else {
    uint64_t v4 = 0x6E776F6E6B6E75;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0x800000025867D0E0;
  }
  if (a2) {
    uint64_t v6 = 0xD000000000000011;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (a2) {
    unint64_t v7 = 0x800000025867D0E0;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (a1) {
    char v2 = 0x7373656E69737562;
  }
  else {
    char v2 = 0x6C616E6F73726570;
  }
  if (a2) {
    BOOL v3 = 0x7373656E69737562;
  }
  else {
    BOOL v3 = 0x6C616E6F73726570;
  }
  if (v2 == v3) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

{
  char v2;
  unint64_t v4;
  unint64_t v5;
  const char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;

  uint64_t v4 = 0xD000000000000011;
  unint64_t v5 = 0x800000025867C2D0;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0xD000000000000015;
      uint64_t v6 = "flightReservation";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0x800000025867C310;
      uint64_t v4 = 0xD000000000000010;
      break;
    case 3:
      uint64_t v4 = 0xD000000000000012;
      uint64_t v6 = "hotelReservation";
      goto LABEL_6;
    case 4:
      uint64_t v4 = 0xD000000000000016;
      uint64_t v6 = "vehicleReservation";
LABEL_6:
      unint64_t v5 = (unint64_t)v6 | 0x8000000000000000;
      break;
    case 5:
      uint64_t v4 = 0x646574656B636974;
      unint64_t v7 = 2003789907;
      goto LABEL_9;
    case 6:
      uint64_t v4 = 0x45636972656E6567;
      unint64_t v7 = 1953391990;
LABEL_9:
      unint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  char v8 = 0xD000000000000011;
  uint64_t v9 = 0x800000025867C2D0;
  switch(a2)
  {
    case 1:
      char v8 = 0xD000000000000015;
      uint64_t v10 = "flightReservation";
      goto LABEL_15;
    case 2:
      uint64_t v9 = 0x800000025867C310;
      char v8 = 0xD000000000000010;
      break;
    case 3:
      char v8 = 0xD000000000000012;
      uint64_t v10 = "hotelReservation";
      goto LABEL_15;
    case 4:
      char v8 = 0xD000000000000016;
      uint64_t v10 = "vehicleReservation";
LABEL_15:
      uint64_t v9 = (unint64_t)v10 | 0x8000000000000000;
      break;
    case 5:
      char v8 = 0x646574656B636974;
      uint64_t v11 = 2003789907;
      goto LABEL_18;
    case 6:
      char v8 = 0x45636972656E6567;
      uint64_t v11 = 1953391990;
LABEL_18:
      uint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  if (v4 == v8 && v5 == v9) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  BOOL v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x697274744173635FLL;
  }
  else {
    uint64_t v4 = 1835365481;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xED00007365747562;
  }
  if (a2) {
    uint64_t v6 = 0x697274744173635FLL;
  }
  else {
    uint64_t v6 = 1835365481;
  }
  if (a2) {
    unint64_t v7 = 0xED00007365747562;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t specialized == infix<A>(_:_:)()
{
  OUTLINED_FUNCTION_22();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xEA0000000000746ELL;
      break;
    case 2:
      unint64_t v0 = 0xE600000000000000;
      break;
    case 3:
      uint64_t v4 = 7827304;
      goto LABEL_8;
    case 4:
      unint64_t v0 = 0x800000025867CA20;
      break;
    case 5:
      unint64_t v0 = 0xEA00000000007261;
      break;
    case 7:
      uint64_t v4 = 7630437;
LABEL_8:
      unint64_t v0 = v4 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    case 8:
      OUTLINED_FUNCTION_14();
      break;
    case 9:
      unint64_t v0 = 0xE400000000000000;
      break;
    case 10:
      unint64_t v0 = 0xE700000000000000;
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_24();
  switch(v8)
  {
    case 1:
      unint64_t v6 = 0x6172756174736572;
      unint64_t v1 = 0xEA0000000000746ELL;
      break;
    case 2:
      unint64_t v1 = 0xE600000000000000;
      unint64_t v6 = 0x746867696C66;
      break;
    case 3:
      unint64_t v6 = 0x735F74656B636974;
      uint64_t v9 = 7827304;
      goto LABEL_20;
    case 4:
      unint64_t v1 = (v7 - 32) | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000010;
      break;
    case 5:
      unint64_t v6 = 0x635F6C61746E6572;
      unint64_t v1 = 0xEA00000000007261;
      break;
    case 6:
      unint64_t v6 = 0x7974726170;
      break;
    case 7:
      unint64_t v6 = 0x6D746E696F707061;
      uint64_t v9 = 7630437;
LABEL_20:
      unint64_t v1 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    case 8:
      OUTLINED_FUNCTION_19();
      break;
    case 9:
      unint64_t v1 = 0xE400000000000000;
      unint64_t v6 = 1685217635;
      break;
    case 10:
      unint64_t v1 = 0xE700000000000000;
      unint64_t v6 = 0x636972656E6567;
      break;
    default:
      break;
  }
  if (v5 == v6 && v0 == v1) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_22();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xE400000000000000;
      break;
    case 2:
      unint64_t v0 = 0xE700000000000000;
      break;
    case 3:
      unint64_t v0 = 0xE400000000000000;
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_24();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v5 = 1701603686;
      break;
    case 2:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v5 = 0x6567617373656DLL;
      break;
    case 3:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v5 = 1702129518;
      break;
    case 4:
      uint64_t v5 = 0x6F746F6870;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_22();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xE300000000000000;
      break;
    case 2:
      unint64_t v0 = 0xE800000000000000;
      break;
    case 3:
      unint64_t v0 = 0xE400000000000000;
      break;
    case 6:
      unint64_t v0 = 0xE300000000000000;
      break;
    case 7:
      unint64_t v0 = 0xE900000000000041;
      break;
    case 8:
      unint64_t v0 = 0xE700000000000000;
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_24();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE300000000000000;
      uint64_t v5 = 4473168;
      break;
    case 2:
      unint64_t v1 = 0xE800000000000000;
      uint64_t v5 = 0x4E414D4553524F48;
      break;
    case 3:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v5 = 1398097242;
      break;
    case 4:
      uint64_t v5 = 0x4F454D4143;
      break;
    case 5:
      uint64_t v5 = 0x4843544157;
      break;
    case 6:
      unint64_t v1 = 0xE300000000000000;
      uint64_t v5 = 5390659;
      break;
    case 7:
      uint64_t v5 = 0x544952414752414DLL;
      unint64_t v1 = 0xE900000000000041;
      break;
    case 8:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_22();
  switch(v3)
  {
    case 1:
      OUTLINED_FUNCTION_14();
      break;
    case 2:
      unint64_t v0 = 0xE400000000000000;
      break;
    case 3:
      unint64_t v0 = 0xEF746E6172756174;
      break;
    case 4:
      unint64_t v0 = 0xEA00000000006C65;
      break;
    case 5:
      unint64_t v0 = 0xEB00000000746867;
      break;
    case 6:
      unint64_t v0 = 0xEE0064496C616E6FLL;
      break;
    case 8:
      unint64_t v0 = 0xED0000746E657645;
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_24();
  switch(v6)
  {
    case 1:
      OUTLINED_FUNCTION_19();
      break;
    case 2:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v5 = 1685217635;
      break;
    case 3:
      OUTLINED_FUNCTION_21();
      uint64_t v5 = v7 | 0x7365527400000000;
      unint64_t v1 = 0xEF746E6172756174;
      break;
    case 4:
      OUTLINED_FUNCTION_21();
      uint64_t v5 = v8 | 0x746F487400000000;
      unint64_t v1 = 0xEA00000000006C65;
      break;
    case 5:
      OUTLINED_FUNCTION_21();
      uint64_t v5 = v9 | 0x696C467400000000;
      unint64_t v1 = 0xEB00000000746867;
      break;
    case 6:
      uint64_t v5 = 0x7372655064726163;
      unint64_t v1 = 0xEE0064496C616E6FLL;
      break;
    case 7:
      uint64_t v5 = 0x6F746F6870;
      break;
    case 8:
      uint64_t v5 = 0x7261646E656C6163;
      unint64_t v1 = 0xED0000746E657645;
      break;
    case 9:
      uint64_t v5 = 0x616964656DLL;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    OUTLINED_FUNCTION_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  unint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1)
{
  uint64_t v1 = StackedGridsLayout.rawValue.getter(a1);
  uint64_t v2 = OUTLINED_FUNCTION_33();
  uint64_t v3 = StackedGridsLayout.rawValue.getter(v2);
  char v4 = specialized static Array<A>.== infix(_:_:)(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    OUTLINED_FUNCTION_4();
  }
  else {
    LOBYTE(v5) = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  char v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    OUTLINED_FUNCTION_4();
  }
  else {
    LOBYTE(v4) = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    if (a1) {
      uint64_t v6 = 104;
    }
    else {
      uint64_t v6 = 72;
    }
    unint64_t v8 = 0xE100000000000000;
    if (a4) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v10 = v11;
    goto LABEL_12;
  }
  uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
  unint64_t v8 = v7;
  if ((a4 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_3:
  if (a3) {
    uint64_t v9 = 104;
  }
  else {
    uint64_t v9 = 72;
  }
  unint64_t v10 = 0xE100000000000000;
LABEL_12:
  if (v6 == v9 && v8 == v10) {
    OUTLINED_FUNCTION_4();
  }
  else {
    LOBYTE(v6) = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

BOOL specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

BOOL specialized == infix<A>(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

BOOL specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2, void (*a3)(void), char a4)
{
  a3(0);
  uint64_t v5 = (unint64_t *)OUTLINED_FUNCTION_33();
  lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(v5, v6);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v11 == v9 && v12 == v10) {
    OUTLINED_FUNCTION_4();
  }
  else {
    a4 = OUTLINED_FUNCTION_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t default argument 3 of AnswerSynthesisRequest.init(query:documents:context:charLimit:enableTruncation:)()
{
  return static NSUserDefaults.answerSynthesisTokenLimitDevice.getter();
}

uint64_t default argument 0 of GlobalSearchClient.init(client:session:featureFlagService:)()
{
  return default argument 0 of GlobalSearchClient.init(client:session:featureFlagService:)();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  uint64_t v3 = OUTLINED_FUNCTION_18();
  uint64_t v5 = v4(v3);
  OUTLINED_FUNCTION_12();
  uint64_t result = v1();
  v2[3] = v5;
  v2[4] = v0;
  *uint64_t v2 = result;
  return result;
}

id default argument 1 of GlobalSearchClient.init(client:session:featureFlagService:)()
{
  id v0 = objc_msgSend(self, sel_sharedSession);
  return v0;
}

uint64_t default argument 2 of GlobalSearchClient.init(client:session:featureFlagService:)()
{
  type metadata accessor for FeatureFlagService();
  return swift_allocObject();
}

void *default argument 2 of GlobalSearchClient.search(content:entities:sources:location:)@<X0>(void *a1@<X8>)
{
  return default argument 2 of GlobalSearchClient.search(content:entities:sources:location:)(&one-time initialization token for all, &static SearchSources.all, a1);
}

uint64_t default argument 3 of FlightReservation.init(flightNumber:flightCarrierCode:bundleId:flightDepartureDateComponents:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  MEMORY[0x270FA5388](v1 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  MEMORY[0x270FA5388](v5 - 8);
  OUTLINED_FUNCTION_16();
  uint64_t v6 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_32(v0, v7, v8, v6);
  uint64_t v9 = type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_32(v4, v10, v11, v9);
  OUTLINED_FUNCTION_33();
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t specialized thunk for @escaping @callee_guaranteed (@guaranteed String, @in_guaranteed SearchResult, @guaranteed [SearchResultKey]) -> (@unowned Bool)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = applySubStringMatchFiltering(answer:document:supportedDomain:)(*a1, a1[1], a2, *a3);
  *a4 = result & 1;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for AnswerSynthesisModelOnDevice._ClientInfo()
{
  uint64_t result = type metadata singleton initialization cache for AnswerSynthesisModelOnDevice._ClientInfo;
  if (!type metadata singleton initialization cache for AnswerSynthesisModelOnDevice._ClientInfo) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t default argument 0 of GenericEventEntity.init(attendees:businessName:cost:duration:endDateTime:eventLink:eventName:eventType:eventSubType:location:organizer:phoneNumber:startDateTime:)()
{
  return MEMORY[0x263F8EE78];
}

id default argument 0 of SearchToolIntentController.init(omniSearchService:hallucinationMitigator:metricsLogger:)@<X0>(void *a1@<X8>)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  id v3 = static OmniSearchService.shared;
  a1[3] = type metadata accessor for OmniSearchService();
  a1[4] = &protocol witness table for OmniSearchService;
  *a1 = v3;
  return v3;
}

uint64_t default argument 1 of SearchToolIntentController.init(omniSearchService:hallucinationMitigator:metricsLogger:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for HallucinationMitigator();
  OUTLINED_FUNCTION_8(v0, (uint64_t)&protocol witness table for HallucinationMitigator);
  return swift_retain();
}

uint64_t default argument 2 of SearchToolIntentController.init(omniSearchService:hallucinationMitigator:metricsLogger:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for MetricsLogger();
  OUTLINED_FUNCTION_8(v0, (uint64_t)&protocol witness table for MetricsLogger);
  return swift_retain();
}

uint64_t default argument 2 of DisambiguationRequestable.resolveDisambiguation(_:dialogString:limit:)()
{
  return static NSUserDefaults.disambiguationLimit.getter();
}

uint64_t default argument 2 of AceService.sendResponse(_:dialog:mode:)()
{
  return 1;
}

uint64_t default argument 2 of AceService.sendCard(_:dialog:mode:option:)()
{
  return 1;
}

void default argument 3 of AceService.sendCard(_:dialog:mode:option:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t default argument 1 of LLMFormatter.StringInterpolation.appendInterpolation(_:separator:)()
{
  return 8236;
}

uint64_t default argument 0 of ContactContentManager.init(contactStore:)@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  uint64_t result = type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for CNContactStore);
  a1[3] = result;
  a1[4] = &protocol witness table for CNContactStore;
  *a1 = v2;
  return result;
}

uint64_t default argument 0 of OS_xpc_object.oms_read(byteCount:)()
{
  return 4096;
}

void default argument 0 of MessageBodyManager.init(helper:)(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for IMSPIMessageQueryHelper;
  *(void *)(a1 + 32) = &protocol witness table for IMSPIMessageQueryHelper;
}

uint64_t default argument 8 of MobileSMSDocument.init(id:chatId:displayName:body:from:to:date:contentURL:photoAttachments:serviceName:chatName:chatParticipants:chatMessages:dataDetectorResults:extractedEventsLLMConsumableDescription:partialExtractedAttributes:csItem:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 11 of MobileSMSDocument.init(id:chatId:displayName:body:from:to:date:contentURL:photoAttachments:serviceName:chatName:chatParticipants:chatMessages:dataDetectorResults:extractedEventsLLMConsumableDescription:partialExtractedAttributes:csItem:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 12 of MobileSMSDocument.init(id:chatId:displayName:body:from:to:date:contentURL:photoAttachments:serviceName:chatName:chatParticipants:chatMessages:dataDetectorResults:extractedEventsLLMConsumableDescription:partialExtractedAttributes:csItem:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 0 of LLMQueryParser.init(llmQUModelServer:)()
{
  return default argument 0 of GlobalSearchClient.init(client:session:featureFlagService:)();
}

uint64_t default argument 0 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)()
{
  return default argument 0 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  id v3 = OUTLINED_FUNCTION_18();
  uint64_t v5 = v4(v3);
  uint64_t result = v1();
  v2[3] = v5;
  v2[4] = v0;
  *id v2 = result;
  return result;
}

double default argument 1 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ECRClient();
  swift_allocObject();
  uint64_t v3 = ECRClient.init()();
  if (v3)
  {
    *(void *)(a1 + 24) = v2;
    *(void *)(a1 + 32) = &protocol witness table for ECRClient;
    *(void *)a1 = v3;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id default argument 2 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t Parser = type metadata accessor for MemoryCreationQueryParser();
  uint64_t v3 = swift_allocObject();
  id result = objc_msgSend(self, sel_spotlightManager);
  *(void *)(v3 + 16) = result;
  a1[3] = Parser;
  a1[4] = (uint64_t)&protocol witness table for MemoryCreationQueryParser;
  *a1 = v3;
  return result;
}

uint64_t default argument 2 of MemoryCreationQUController.parse(_:quResponse:performanceMetrics:)()
{
  return MemoryCreationQUPerformanceMetrics.init()();
}

uint64_t default argument 1 of MemoryCreationQUModelResponse.init(who:what:when:where:music:mood:sort_order:trip:all_time:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  return Dictionary.init(dictionaryLiteral:)();
}

unint64_t default argument 4 of MemoryCreationQUModelResponse.init(who:what:when:where:music:mood:sort_order:trip:all_time:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  uint64_t v0 = OUTLINED_FUNCTION_11();
  uint64_t v1 = OUTLINED_FUNCTION_11();
  uint64_t v2 = OUTLINED_FUNCTION_11();
  return (unint64_t)MemoryCreationQUModelResponseMusic.init(artist:genre:song:)((Swift::OpaquePointer)v0, (Swift::OpaquePointer)v1, (Swift::OpaquePointer)v2);
}

uint64_t default argument 0 of AppEntityIndexClient.init(searchAgent:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalSearchManager();
  OUTLINED_FUNCTION_8(v0, (uint64_t)&protocol witness table for LocalSearchManager);
  return swift_retain();
}

uint64_t default argument 0 of AppEntitySearchService.init(maxItemCount:)()
{
  return 20;
}

uint64_t default argument 1 of GlobalSearchClient.search(content:entities:sources:location:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 1 of LocalIndexClient.findMatches(for:maxItemCount:spQUParse:)()
{
  return 20;
}

uint64_t default argument 1 of JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t default argument 2 of JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F06150];
  uint64_t v3 = type metadata accessor for JSONEncoder.KeyEncodingStrategy();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

void specialized OptionSet<>.init()(void *a1@<X8>)
{
  *a1 = 0;
}

void specialized OptionSet<>.init()(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t specialized OptionSet.intersection(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t specialized OptionSet.intersection(_:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

BOOL specialized OptionSet<>.insert(_:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

BOOL specialized OptionSet<>.insert(_:)(_DWORD *a1, int a2)
{
  int v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

void specialized OptionSet<>.formUnion(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_20(*v1 | a1);
}

uint64_t specialized OptionSet<>.formUnion(_:)(uint64_t result)
{
  *v1 |= result;
  return result;
}

void specialized OptionSet<>.formIntersection(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_20(*v1 & a1);
}

uint64_t specialized OptionSet<>.formIntersection(_:)(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t default argument 0 of StackedGridsLayoutProvider.init(_:)()
{
  if (one-time initialization token for defaultLayout != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  return (unint64_t)StackedGridsLayout.init(rawValue:)((Swift::OpaquePointer)v0);
}

uint64_t default argument 2 of OmniSearchService.init(searchServices:answerResolver:maxPerSourceLimit:intermediateCallback:queryParser:answerSynthesisController:featureFlagService:resultHydrator:)()
{
  return 10;
}

uint64_t default argument 4 of OmniSearchService.init(searchServices:answerResolver:maxPerSourceLimit:intermediateCallback:queryParser:answerSynthesisController:featureFlagService:resultHydrator:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LLMQueryParser();
  OUTLINED_FUNCTION_8(v0, (uint64_t)&protocol witness table for LLMQueryParser);
  return swift_retain();
}

uint64_t default argument 5 of OmniSearchService.init(searchServices:answerResolver:maxPerSourceLimit:intermediateCallback:queryParser:answerSynthesisController:featureFlagService:resultHydrator:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for AnswerSynthesisController();
  OUTLINED_FUNCTION_8(v0, (uint64_t)&protocol witness table for AnswerSynthesisController);
  return swift_retain();
}

uint64_t default argument 7 of OmniSearchService.init(searchServices:answerResolver:maxPerSourceLimit:intermediateCallback:queryParser:answerSynthesisController:featureFlagService:resultHydrator:)()
{
  return default argument 0 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)();
}

uint64_t default argument 1 of OmniSearchService.init(searchServices:answerResolver:maxPerSourceLimit:intermediateCallback:queryParser:answerSynthesisController:featureFlagService:resultHydrator:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SageSearch();
  OUTLINED_FUNCTION_12();
  uint64_t v2 = SageSearch.init()();
  id v3 = objc_msgSend(self, sel_sharedSession);
  type metadata accessor for FeatureFlagService();
  uint64_t v4 = OUTLINED_FUNCTION_31();
  type metadata accessor for GlobalSearchClient();
  uint64_t v5 = swift_allocObject();
  *(void *)&long long v19 = v2;
  OUTLINED_FUNCTION_6(v5, v6, v7, v8, v9, v10, v11, v12, v18, v19);
  *(void *)(v5 + 72) = v3;
  *(void *)(v5 + 80) = v4;
  uint64_t v13 = type metadata accessor for GlobalResolutionService();
  uint64_t v14 = (void *)swift_allocObject();
  v14[3] = 0;
  v14[4] = 0;
  v14[2] = v5;
  uint64_t v20 = v13;
  uint64_t v21 = &protocol witness table for GlobalResolutionService;
  *(void *)&long long v19 = v14;
  uint64_t v15 = OUTLINED_FUNCTION_31();
  uint64_t v16 = type metadata accessor for AnswerResolver();
  swift_allocObject();
  uint64_t result = AnswerResolver.init(resolutionService:featureFlagService:)((uint64_t)&v19, v15);
  a1[3] = v16;
  a1[4] = (uint64_t)&protocol witness table for AnswerResolver;
  *a1 = result;
  return result;
}

uint64_t default argument 7 of OmniSearchService.search(_:rewrittenQuery:structuredQuery:typeIdentifiers:matchedEntities:sources:options:requestedProperties:)()
{
  return MEMORY[0x263F8EE78];
}

void *default argument 5 of OmniSearchService.search(_:rewrittenQuery:structuredQuery:typeIdentifiers:matchedEntities:sources:options:requestedProperties:)@<X0>(void *a1@<X8>)
{
  return default argument 2 of GlobalSearchClient.search(content:entities:sources:location:)(&one-time initialization token for allExceptWebIndex, &static SearchSources.allExceptWebIndex, a1);
}

void *default argument 2 of OmniSearchService.search(query:matchedEntities:sources:options:requestedProperties:)@<X0>(void *a1@<X8>)
{
  return default argument 2 of GlobalSearchClient.search(content:entities:sources:location:)(&one-time initialization token for allExceptWebIndex, &static SearchSources.allExceptWebIndex, a1);
}

uint64_t default argument 4 of OmniSearchService.search(query:matchedEntities:sources:options:requestedProperties:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 3 of OmniSearchService.localSearch(query:sources:options:requestedProperties:)()
{
  return MEMORY[0x263F8EE78];
}

void *default argument 1 of OmniSearchService.globalSearch(query:sources:options:)@<X0>(void *a1@<X8>)
{
  return default argument 2 of GlobalSearchClient.search(content:entities:sources:location:)(&one-time initialization token for allExceptWebIndex, &static SearchSources.allExceptWebIndex, a1);
}

void *default argument 2 of GlobalSearchClient.search(content:entities:sources:location:)@<X0>(void *result@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*result != -1) {
    uint64_t result = (void *)swift_once();
  }
  *a3 = *a2;
  return result;
}

uint64_t default argument 6 of OmniSearchService.search(_:rewrittenQuery:structuredQuery:typeIdentifiers:matchedEntities:sources:options:requestedProperties:)@<X0>(uint64_t a1@<X8>)
{
  _s10OmniSearch0B7ContextVSgWOi0_(v11);
  outlined init with take of SearchContext?((uint64_t)v11, a1);
  uint64_t v2 = (int *)type metadata accessor for OmniSearchOptions();
  id v3 = (void *)(a1 + v2[7]);
  *id v3 = 0;
  v3[1] = 0xE000000000000000;
  uint64_t v4 = (void *)(a1 + v2[8]);
  *uint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  *(unsigned char *)(a1 + v2[9]) = 0;
  *(unsigned char *)(a1 + v2[10]) = 0;
  *(unsigned char *)(a1 + v2[11]) = 0;
  uint64_t v5 = a1 + v2[5];
  uint64_t v6 = type metadata accessor for IntentSystemContext.AssistantContext.InteractionMode();
  uint64_t result = OUTLINED_FUNCTION_32(v5, v7, v8, v6);
  uint64_t v10 = (void *)(a1 + v2[6]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  return result;
}

void default argument 0 of SearchEntityBuilder.init(cardBuilder:)(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for EntityCardBuilder;
  *(void *)(a1 + 32) = &protocol witness table for EntityCardBuilder;
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSAttributedStringKey()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(*v0, MEMORY[0x263F07B58]);
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance NSAttributedStringKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance NSAttributedStringKey()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(*v0, MEMORY[0x263F8D308]);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance NSAttributedStringKey()
{
  return specialized _SwiftNewtypeWrapper<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance NSAttributedStringKey()
{
  return specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance NSAttributedStringKey()
{
  return specialized == infix<A>(_:_:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance NSAttributedStringKey@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = MEMORY[0x25A2C7AB0](*a1, a1[1]);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance NSAttributedStringKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NSAttributedStringKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSAttributedStringKey(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  uint64_t v3 = lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t specialized static UnsafeMutablePointer.allocate(capacity:)()
{
  return swift_slowAlloc();
}

uint64_t closure #1 in osLogInternal(_:log:type:)(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void specialized UnsafeMutablePointer.deallocate()()
{
}

uint64_t implicit closure #1 in OSLogInterpolation.appendInterpolation(_:align:privacy:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t closure #1 in OSLogArguments.append(_:)(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26();
  uint64_t v9 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v6, v7, v8, 1, a1, a2);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t ObjectType = swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v15[0] = a1;
    v15[1] = a2;
    uint64_t v13 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v10;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, ChatMessageRecord)>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unsigned char **closure #1 in OSLogArguments.append(_:)(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of SageSearchClient(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t type metadata accessor for NSUserDefaults(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [JSONEncoder.OutputFormatting] and conformance [A];
  if (!lazy protocol witness table cache variable for type [JSONEncoder.OutputFormatting] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [JSONEncoder.OutputFormatting]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [JSONEncoder.OutputFormatting] and conformance [A]);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void _s10OmniSearch0B7ContextVSgWOi0_(void *a1)
{
}

uint64_t outlined init with take of SearchContext?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchContext?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AnswerSynthesisModelOnDevice()
{
  return self;
}

uint64_t method lookup function for AnswerSynthesisModelOnDevice(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnswerSynthesisModelOnDevice);
}

uint64_t dispatch thunk of AnswerSynthesisModelOnDevice.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ObjC metadata update function for AnswerSynthesisModelOnDevice._ClientInfo()
{
  return type metadata accessor for AnswerSynthesisModelOnDevice._ClientInfo();
}

uint64_t type metadata completion function for AnswerSynthesisModelOnDevice._ClientInfo()
{
  uint64_t result = type metadata accessor for _ClientInfoSessionTrackingConfig();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for DDResultCategory(uint64_t a1)
{
}

void type metadata accessor for SPResponseKind(uint64_t a1)
{
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NSDecimal(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NSDecimal(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

void type metadata accessor for NSDecimal(uint64_t a1)
{
}

uint64_t specialized _SwiftNewtypeWrapper<>.hash(into:)()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t partial apply for closure #1 in closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)()
{
  return closure #1 in closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(*(void *)(v0 + 16));
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t outlined destroy of (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for _NSRange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for _NSRange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for NSAttributedStringKey(uint64_t a1)
{
}

void type metadata accessor for NSStringCompareOptions(uint64_t a1)
{
}

void type metadata accessor for DDResultCategory(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t base witness table accessor for RawRepresentable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for Equatable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type CompletionPrompt and conformance CompletionPrompt(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v1 = MEMORY[0x25A2C7AB0](v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void HallucinationMitigator.__allocating_init()()
{
}

uint64_t OUTLINED_FUNCTION_0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10)
{
  *(void *)(a1 + 16) = 10;
  *(unsigned char *)(a1 + 24) = 2;
  return outlined init with take of SageSearchClient(&a10, a1 + 32);
}

uint64_t OUTLINED_FUNCTION_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[3] = a1;
  v2[4] = a2;
  *uint64_t v2 = v3;
  return v3;
}

uint64_t OUTLINED_FUNCTION_9()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_11()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_12()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_14()
{
  return 0x746361746E6F63;
}

uint64_t OUTLINED_FUNCTION_18()
{
  return 0;
}

void OUTLINED_FUNCTION_20(uint64_t a1@<X8>)
{
  void *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_23()
{
  return 28526;
}

uint64_t OUTLINED_FUNCTION_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_33()
{
  return v0;
}

void OUTLINED_FUNCTION_34()
{
  JUMPOUT(0x25A2C94B0);
}

uint64_t OUTLINED_FUNCTION_35()
{
  return swift_beginAccess();
}

unint64_t static AnswerSynthesisModelProtocol.GMS_USE_CASE_ID.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static AnswerSynthesisModelProtocol.promptTemplateID.getter()
{
  return 0xD00000000000003ELL;
}

uint64_t static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  char v5 = (char *)&v8 - v4;
  static SamplingStrategy.argmax()();
  uint64_t v6 = type metadata accessor for SamplingStrategy();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.answerSynthesisTokenLimitOutput.getter();
  outlined init with copy of SamplingStrategy?((uint64_t)v5, (uint64_t)v3);
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  return outlined destroy of SamplingStrategy?((uint64_t)v5);
}

unint64_t type metadata accessor for NSUserDefaults()
{
  unint64_t result = lazy cache variable for type metadata for NSUserDefaults;
  if (!lazy cache variable for type metadata for NSUserDefaults)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  }
  return result;
}

uint64_t outlined init with copy of SamplingStrategy?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SamplingStrategy?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AnswerSynthesisModelProtocol.templateBindingUserPromptKey.getter()
{
  return 0x6D6F725072657375;
}

uint64_t dispatch thunk of AnswerSynthesisModelProtocol.prewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnswerSynthesisModelProtocol.createPromptTemplate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnswerSynthesisModelProtocol.synthesize(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = dispatch thunk of AnswerSynthesisModelProtocol.synthesize(_:bindings:);
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of AnswerSynthesisModelProtocol.synthesize(_:bindings:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of AnswerSynthesisModelProtocol.getModelVersion()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t AnswerSynthesisModelServer.modelVersion.getter()
{
  OUTLINED_FUNCTION_35();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnswerSynthesisModelServer.modelVersion.setter()
{
  OUTLINED_FUNCTION_53();
  swift_beginAccess();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*AnswerSynthesisModelServer.modelVersion.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t AnswerSynthesisModelServer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AnswerSynthesisModelServer.init()();
  return v0;
}

void *AnswerSynthesisModelServer.init()()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_3();
  uint64_t v2 = type metadata accessor for AssetVersion();
  OUTLINED_FUNCTION_1();
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogAsset<ServerConfigurationAssetMetadata, ServerConfigurationAssetContents>);
  OUTLINED_FUNCTION_1();
  uint64_t v44 = v8;
  uint64_t v45 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  size_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v37 - v12;
  v0[2] = 0;
  v0[3] = 0;
  unint64_t v14 = static AnswerSynthesisModelProtocol.GMS_USE_CASE_ID.getter();
  uint64_t v16 = v15;
  id v17 = objc_msgSend(self, sel_processInfo);
  signed int v18 = objc_msgSend(v17, sel_processIdentifier);

  uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for AnswerSynthesisModelServer._ClientInfo();
  swift_allocObject();
  v1[4] = AnswerSynthesisModelServer._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(v14, v16, v18, 0, v19);
  static Catalog.Resource.LLM.ServerConfiguration.AnswerSynthesisServer()();
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  dispatch thunk of AssetBackedResource.fetchAsset()();
  uint64_t v20 = v44;
  CatalogAsset.version.getter();
  uint64_t v21 = AssetVersion.number.getter();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v43 + 8);
  v42 = v6;
  uint64_t v43 = v2;
  v41 = v24;
  v24(v6, v2);
  swift_beginAccess();
  v1[2] = v21;
  v1[3] = v23;
  swift_bridgeObjectRelease();
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logging.answerSynthesis);
  uint64_t v26 = v45;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v11, v13, v45);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v27, v28))
  {
    os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v47 = v39;
    *(_DWORD *)os_log_type_t v29 = 136315138;
    v37[1] = v29 + 4;
    uint64_t v38 = v29;
    uint64_t v40 = v13;
    unsigned int v30 = v42;
    CatalogAsset.version.getter();
    uint64_t v31 = AssetVersion.number.getter();
    unint64_t v33 = v32;
    v41(v30, v43);
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v34 = *(void (**)(char *, uint64_t))(v44 + 8);
    v34(v11, v26);
    _os_log_impl(&dword_257DC6000, v27, v28, "AS server model version is %s", v38, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    v34(v40, v26);
  }
  else
  {

    unsigned int v35 = *(void (**)(char *, uint64_t))(v20 + 8);
    v35(v11, v26);
    v35(v13, v26);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
  return v1;
}

uint64_t type metadata accessor for AnswerSynthesisModelServer._ClientInfo()
{
  uint64_t result = type metadata singleton initialization cache for AnswerSynthesisModelServer._ClientInfo;
  if (!type metadata singleton initialization cache for AnswerSynthesisModelServer._ClientInfo) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall AnswerSynthesisModelServer.prewarm()()
{
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logging.answerSynthesis);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OUTLINED_FUNCTION_56(&dword_257DC6000, v3, v4, "Prewarming AnswerSynthesisModelServer model...");
    OUTLINED_FUNCTION_34();
  }

  swift_retain();
  TokenGenerator.prewarm()();
  swift_release();
}

uint64_t AnswerSynthesisModelServer.model.getter()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelServer.createPromptTemplate()()
{
  OUTLINED_FUNCTION_3();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  MEMORY[0x270FA5388](v0 - 8);
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.answerSynthesis);
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_257DC6000, v2, v3, "Creating prompt template for Answer Synthesis Server model", v4, 2u);
    OUTLINED_FUNCTION_34();
  }

  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter();
  static AnswerSynthesisModelProtocol.promptTemplateID.getter();
  return PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
}

uint64_t AnswerSynthesisModelServer.createOverridePrompt()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_39();
  if (AFIsInternalInstall())
  {
    type metadata accessor for NSUserDefaults();
    uint64_t v7 = static NSUserDefaults.answerSynthesisPromptTemplateOverride.getter();
    if (v8)
    {
      uint64_t v9 = v7;
      unint64_t v10 = v8;
      id v11 = static NSUserDefaults.makeModelCatalogAjaxUserDefaults()();
      if (v11)
      {
        uint64_t v12 = v11;
        static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter();
        uint64_t v13 = MEMORY[0x25A2C5F00](v3);
        uint64_t v15 = v14;
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
        uint64_t v16 = (void *)MEMORY[0x25A2C7AB0](v13, v15);
        swift_bridgeObjectRelease();
        id v17 = objc_msgSend(v12, sel_objectForKey_, v16);

        if (v17)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v33, 0, sizeof(v33));
        }
        outlined init with take of Any?((uint64_t)v33, (uint64_t)&v34);
        if (*((void *)&v35 + 1))
        {
          outlined destroy of Any?((uint64_t)&v34, (uint64_t *)&demangling cache variable for type metadata for Any?);
          if (one-time initialization token for answerSynthesis != -1) {
            swift_once();
          }
          uint64_t v20 = type metadata accessor for Logger();
          __swift_project_value_buffer(v20, (uint64_t)static Logging.answerSynthesis);
          swift_bridgeObjectRetain_n();
          uint64_t v21 = Logger.logObject.getter();
          os_log_type_t v22 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v21, v22))
          {
            uint64_t v23 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v34 = swift_slowAlloc();
            *(_DWORD *)uint64_t v23 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, (uint64_t *)&v34);
            OUTLINED_FUNCTION_47(v24);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, v21, v22, "Using override prompt template for Answer Synthesis: %s", v23, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          Prompt.init(template:)();
          uint64_t v30 = type metadata accessor for Prompt();
          uint64_t v31 = a1;
          uint64_t v32 = 0;
          return __swift_storeEnumTagSinglePayload(v31, v32, 1, v30);
        }
      }
      else
      {
        long long v34 = 0u;
        long long v35 = 0u;
      }
      swift_bridgeObjectRelease();
      outlined destroy of Any?((uint64_t)&v34, (uint64_t *)&demangling cache variable for type metadata for Any?);
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      __swift_project_value_buffer(v25, (uint64_t)static Logging.answerSynthesis);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OUTLINED_FUNCTION_56(&dword_257DC6000, v28, v29, "Ignoring overridden Answer Synthesis prompt template since ajax override is not set");
        OUTLINED_FUNCTION_34();
      }

      uint64_t v30 = type metadata accessor for Prompt();
      uint64_t v31 = a1;
      uint64_t v32 = 1;
      return __swift_storeEnumTagSinglePayload(v31, v32, 1, v30);
    }
  }
  uint64_t v18 = type metadata accessor for Prompt();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v18);
}

uint64_t AnswerSynthesisModelServer.synthesize(_:bindings:)()
{
  OUTLINED_FUNCTION_27();
  v1[7] = v2;
  v1[8] = v0;
  v1[6] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Prompt?);
  v1[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Prompt();
  v1[10] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v1[11] = v5;
  v1[12] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  AnswerSynthesisModelServer.createOverridePrompt()(v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of Any?(v0[9], &demangling cache variable for type metadata for Prompt?);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[15] = v3;
    *uint64_t v3 = v0;
    v3[1] = AnswerSynthesisModelServer.synthesize(_:bindings:);
    uint64_t v4 = v0[7];
    uint64_t v5 = v0[6];
    return AnswerSynthesisModelServer.synthesizeWithTemplate(_:bindings:)(v5, v4);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[9], v0[10]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[13] = v7;
    *uint64_t v7 = v0;
    v7[1] = AnswerSynthesisModelServer.synthesize(_:bindings:);
    return AnswerSynthesisModelServer.synthesizeWithOverride(_:bindings:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v0;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_28();
  v1();
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v10;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_53();
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  if (!v1)
  {
    uint64_t v6 = v2;
    uint64_t v7 = v0;
  }
  return v8(v6, v7);
}

{
  void (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_28();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t AnswerSynthesisModelServer.synthesizeWithOverride(_:bindings:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v3[2] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v3[3] = v7;
  uint64_t v8 = swift_task_alloc();
  v3[4] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = AnswerSynthesisModelServer.synthesizeWithOverride(_:bindings:);
  return closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)(v8, v2, v0, v1, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  v3[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v3[7] = v10;
    uint64_t v11 = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, MEMORY[0x263F7F7D8]);
    *uint64_t v10 = v5;
    v10[1] = AnswerSynthesisModelServer.synthesizeWithOverride(_:bindings:);
    uint64_t v12 = v3[2];
    return MEMORY[0x270F2EE70](v12, v11);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v11;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_28();
  v4();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v8 = OUTLINED_FUNCTION_33_0();
    return v9(v8);
  }
}

uint64_t AnswerSynthesisModelServer.synthesizeWithTemplate(_:bindings:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v3[2] = v7;
  v3[3] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v3[4] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = AnswerSynthesisModelServer.synthesizeWithTemplate(_:bindings:);
  return closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)(v8, a1, a2, (uint64_t)v2, v6);
}

uint64_t AnswerSynthesisModelServer.synthesizeWithTemplate(_:bindings:)()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  v3[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v3[7] = v10;
    uint64_t v11 = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, MEMORY[0x263F7F7D8]);
    *uint64_t v10 = v5;
    v10[1] = AnswerSynthesisModelServer.synthesizeWithTemplate(_:bindings:);
    uint64_t v12 = v3[2];
    return MEMORY[0x270F2EE70](v12, v11);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v11;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_28();
  v4();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v8 = OUTLINED_FUNCTION_33_0();
    return v9(v8);
  }
}

Swift::String_optional __swiftcall AnswerSynthesisModelServer.getModelVersion()()
{
  OUTLINED_FUNCTION_35();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v2 = OUTLINED_FUNCTION_30_0();
  return closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)(v2, v3, v4, v5, v6);
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[30] = a4;
  v5[31] = a5;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[32] = swift_task_alloc();
  v5[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[35] = v6;
  v5[36] = *(void *)(v6 - 8);
  v5[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[38] = v7;
  v5[39] = *(void *)(v7 - 8);
  v5[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v5[42] = v8;
  v5[43] = *(void *)(v8 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v5[46] = v9;
  v5[47] = *(void *)(v9 - 8);
  v5[48] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[49] = v10;
  v5[50] = *(void *)(v10 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CompletionPrompt();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:), 0, 0);
}

#error "257DD3D60: call analysis failed (funcsize=126)"

uint64_t closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 568) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  void (*v13)(void);
  void (*v14)(void);
  uint64_t inited;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1Tm;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  void (*v37)(void);
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  void (*v55)(uint64_t, void, uint64_t);
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;

  uint64_t v6 = *(void *)(v2 + 256);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  if (__swift_getEnumTagSinglePayload(v6, 1, v7) == 1)
  {
    outlined destroy of Any?(v6, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
    v56 = *(void (**)(uint64_t, uint64_t))(v2 + 520);
    v54 = *(_DWORD *)(v2 + 576);
    v55 = *(void (**)(uint64_t, void, uint64_t))(v2 + 496);
    OUTLINED_FUNCTION_20_0();
    v52 = v9;
    v53 = v8;
    uint64_t v47 = *(void *)(v2 + 352);
    uint64_t v48 = *(void *)(v2 + 344);
    v49 = *(void *)(v2 + 336);
    v50 = *(void *)(v2 + 360);
    OUTLINED_FUNCTION_54();
    uint64_t v10 = *(void *)(v2 + 288);
    v51 = *(void *)(v2 + 224);
    uint64_t v45 = v6 + *(int *)(v7 + 48);
    uint64_t v46 = v11;
    uint64_t v44 = *(void *)(v2 + 272) + *(int *)(*(void *)(v2 + 264) + 48);
    uint64_t v12 = *(void (**)(void))(v1 + 32);
    OUTLINED_FUNCTION_34_0();
    v12();
    uint64_t v13 = *(void (**)(void))(v10 + 32);
    uint64_t v4 = (uint64_t *)(v10 + 32);
    OUTLINED_FUNCTION_45();
    v13();
    OUTLINED_FUNCTION_34_0();
    v12();
    OUTLINED_FUNCTION_45();
    v13();
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_28();
    v14();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v50, v47, v49);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    strcpy((char *)(inited + 32), "promptTemplate");
    *(unsigned char *)(inited + 47) = -18;
    uint64_t v16 = type metadata accessor for PromptTemplate();
    *(void *)(inited + 72) = v16;
    *(void *)(inited + 80) = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1Tm, v51, v16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    uint64_t v3 = MEMORY[0x263F8D310];
    uint64_t v1 = MEMORY[0x263F8D320];
    uint64_t v0 = Dictionary.init(dictionaryLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    uint64_t v18 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_37(v18, v19, v20, v21, v22, v23, v24, v25, v43, v44, v45, v46, v47, v48, v49, v50, v26);
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 40) = 0x800000025867D200;
    static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
    uint64_t v6 = v53;
    v55(v52, v54, v53);
    v18[4].n128_u64[1] = type metadata accessor for SamplingParameters();
    __swift_allocate_boxed_opaque_existential_1Tm(v4);
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v56(v52, v53);
    Dictionary.init(dictionaryLiteral:)();
    OUTLINED_FUNCTION_18_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_0();
    v29();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v3, v5);
    uint64_t v30 = OUTLINED_FUNCTION_52();
    v31(v30);
    uint64_t v32 = OUTLINED_FUNCTION_26_0();
    v33(v32);
  }
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_51();
  if (v1)
  {
    long long v34 = OUTLINED_FUNCTION_46();
    v35(v34);
    OUTLINED_FUNCTION_25_0();
    uint64_t v36 = *(void *)(v2 + 416);
    OUTLINED_FUNCTION_28();
    v37();
    ((void (*)(uint64_t, uint64_t))v4)(v6, v36);
  }
  else
  {
    OUTLINED_FUNCTION_43();
    uint64_t v39 = *(void *)(v2 + 440);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_7_0();
    MEMORY[0]();
    OUTLINED_FUNCTION_48(OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo__model);
    OUTLINED_FUNCTION_31_0();
    GenerativeConfigurationProtocol.with<A>(model:modelType:)();
    MEMORY[0](v39, v3);
    uint64_t v40 = OUTLINED_FUNCTION_25();
    v41(v40);
    MEMORY[0](v0, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v2 + 8);
  return v38();
}

uint64_t closure #1 in closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Prompt();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PromptTemplate();
  v13[3] = v6;
  v13[4] = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v6);
  uint64_t v8 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v10 + v9, v5, v2);
  MEMORY[0x25A2C7790](v10, v2, v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  uint64_t v2 = OUTLINED_FUNCTION_30_0();
  return closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)(v2, v3, v4, v5, v6);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[30] = a4;
  v5[31] = a5;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[32] = swift_task_alloc();
  v5[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[35] = v6;
  v5[36] = *(void *)(v6 - 8);
  v5[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[38] = v7;
  v5[39] = *(void *)(v7 - 8);
  v5[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v5[42] = v8;
  v5[43] = *(void *)(v8 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v5[46] = v9;
  v5[47] = *(void *)(v9 - 8);
  v5[48] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[49] = v10;
  v5[50] = *(void *)(v10 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CompletionPrompt();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:), 0, 0);
}

#error "257DD4D60: call analysis failed (funcsize=126)"

uint64_t closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 568) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  void (*v12)(void);
  void (*v13)(void);
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  void (*v36)(void);
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  void (*v54)(uint64_t, void, uint64_t);
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;

  uint64_t v5 = *(void *)(v1 + 256);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    outlined destroy of Any?(v5, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
    v55 = *(void (**)(uint64_t, uint64_t))(v1 + 520);
    v53 = *(_DWORD *)(v1 + 576);
    v54 = *(void (**)(uint64_t, void, uint64_t))(v1 + 496);
    OUTLINED_FUNCTION_20_0();
    v51 = v8;
    v52 = v7;
    uint64_t v45 = *(void *)(v1 + 352);
    uint64_t v46 = *(void *)(v1 + 344);
    uint64_t v47 = *(void *)(v1 + 336);
    uint64_t v48 = *(void *)(v1 + 360);
    OUTLINED_FUNCTION_54();
    uint64_t v9 = *(void *)(v1 + 288);
    v50 = *(void *)(v1 + 224);
    uint64_t v43 = v5 + *(int *)(v6 + 48);
    uint64_t v44 = v10;
    v42 = *(void *)(v1 + 272) + *(int *)(*(void *)(v1 + 264) + 48);
    uint64_t v11 = *(void (**)(void))(v0 + 32);
    ((void (*)(void, uint64_t, uint64_t))v11)(*(void *)(v1 + 272), v5, v4);
    uint64_t v12 = *(void (**)(void))(v9 + 32);
    uint64_t v3 = (uint64_t *)(v9 + 32);
    OUTLINED_FUNCTION_45();
    v12();
    OUTLINED_FUNCTION_34_0();
    v11();
    OUTLINED_FUNCTION_45();
    v12();
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_28();
    v13();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v48, v45, v47);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    strcpy((char *)(inited + 32), "overridePrompt");
    *(unsigned char *)(inited + 47) = -18;
    uint64_t v15 = type metadata accessor for Prompt();
    uint64_t v16 = MEMORY[0x263F620B8];
    *(void *)(inited + 72) = v15;
    *(void *)(inited + 80) = v16;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1Tm, v50, v15);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    uint64_t v0 = MEMORY[0x263F8D310];
    uint64_t v6 = Dictionary.init(dictionaryLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    uint64_t v2 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_37(v2, v18, v19, v20, v21, v22, v23, v24, v42, v43, v44, v45, v46, v47, v48, v4, v25);
    *(void *)(v26 + 32) = v27;
    *(void *)(v26 + 40) = 0x800000025867D200;
    static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
    uint64_t v5 = v52;
    v54(v51, v53, v52);
    v2[4].n128_u64[1] = type metadata accessor for SamplingParameters();
    __swift_allocate_boxed_opaque_existential_1Tm(v3);
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v55(v51, v52);
    Dictionary.init(dictionaryLiteral:)();
    OUTLINED_FUNCTION_18_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_0();
    v28();
    (*(void (**)(__n128 *, uint64_t))(v56 + 8))(v2, v49);
    uint64_t v29 = OUTLINED_FUNCTION_52();
    v30(v29);
    uint64_t v31 = OUTLINED_FUNCTION_26_0();
    v32(v31);
  }
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_51();
  if (v0)
  {
    unint64_t v33 = OUTLINED_FUNCTION_46();
    v34(v33);
    OUTLINED_FUNCTION_25_0();
    long long v35 = *(void *)(v1 + 416);
    OUTLINED_FUNCTION_28();
    v36();
    ((void (*)(uint64_t, uint64_t))v3)(v5, v35);
  }
  else
  {
    OUTLINED_FUNCTION_43();
    uint64_t v38 = *(void *)(v1 + 440);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_7_0();
    MEMORY[0]();
    OUTLINED_FUNCTION_48(OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo__model);
    OUTLINED_FUNCTION_31_0();
    GenerativeConfigurationProtocol.with<A>(model:modelType:)();
    MEMORY[0](v38, v2);
    uint64_t v39 = OUTLINED_FUNCTION_25();
    v40(v39);
    MEMORY[0](v6, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v37 = *(uint64_t (**)(void))(v1 + 8);
  return v37();
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_44();
  uint64_t v49 = v24[71];
  uint64_t v25 = (void (*)(uint64_t, uint64_t))v24[67];
  uint64_t v26 = v24[61];
  uint64_t v38 = v24[56];
  uint64_t v39 = v24[55];
  uint64_t v27 = v24[52];
  uint64_t v40 = v24[54];
  uint64_t v41 = v24[51];
  uint64_t v42 = v24[48];
  uint64_t v43 = v24[44];
  uint64_t v44 = v24[41];
  uint64_t v45 = v24[40];
  uint64_t v46 = v24[37];
  uint64_t v47 = v24[34];
  uint64_t v48 = v24[32];
  OUTLINED_FUNCTION_28();
  v28();
  v25(v26, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_35_0();
  return v30(v29, v30, v31, v32, v33, v34, v35, v36, a9, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
           v48,
           v49,
           a22,
           a23,
           a24);
}

uint64_t closure #1 in closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)()
{
  uint64_t v0 = type metadata accessor for Prompt();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x25A2C7790](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t AnswerSynthesisModelServer.synthesizeWithOverride_generateGenerativeFunctionOverride()()
{
  uint64_t v2 = type metadata accessor for BindableConfiguration();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_39();
  uint64_t v6 = type metadata accessor for CompletionPrompt();
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v18 - v13;
  CompletionPrompt.init(_:)();
  BindableConfiguration.init(name:)();
  lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v12, v6);
  uint64_t v16 = static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (!v0) {
    uint64_t v2 = v16;
  }
  v15(v14, v6);
  return v2;
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_generateGenerativeFunctionOverride()()
{
  uint64_t v0 = type metadata accessor for Prompt();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = type metadata accessor for BindableVariable();
  v9[4] = MEMORY[0x263F62138];
  __swift_allocate_boxed_opaque_existential_1Tm(v9);
  BindableVariable.init(name:)();
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x25A2C7790](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t AnswerSynthesisModelServer._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  void v40[3] = a4;
  uint64_t v42 = a3;
  uint64_t v10 = type metadata accessor for CachePolicy();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  _ClientInfoSessionTrackingConfig.init(sessionTrackingConifg:_internalSessionTrackingConfig:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v6+ OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig, v16, v13);
  uint64_t v17 = specialized Dictionary.subscript.getter(0xD000000000000015, 0x800000025867D670, a5);
  unint64_t v19 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_52;
  }
  uint64_t v21 = HIBYTE(v19) & 0xF;
  uint64_t v22 = v17 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v23 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23) {
    goto LABEL_51;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    specialized _parseInteger<A, B>(ascii:radix:)(v17, v19, 10);
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((v17 & 0x1000000000000000) != 0) {
      uint64_t v24 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v24 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v24, v22, 10);
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_52:
    type metadata accessor for TokenGenerator();
    static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter();
    static CachePolicy.inMemory.getter();
    GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
    *(void *)(v6
              + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo__model) = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:parentOfOnBehalfOf:)();
    return v6;
  }
  v43[0] = v17;
  v43[1] = v19 & 0xFFFFFFFFFFFFFFLL;
  if (v17 == 43)
  {
    if (v21)
    {
      if (v21 != 1 && (BYTE1(v17) - 48) <= 9u && v21 != 2 && (BYTE2(v17) - 48) <= 9u)
      {
        uint64_t v25 = 10 * (BYTE1(v17) - 48) + (BYTE2(v17) - 48);
        uint64_t v26 = v21 - 3;
        if (v26)
        {
          uint64_t v27 = (unsigned __int8 *)v43 + 3;
          do
          {
            unsigned int v28 = *v27 - 48;
            if (v28 > 9) {
              break;
            }
            uint64_t v29 = 10 * v25;
            if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63) {
              break;
            }
            uint64_t v25 = v29 + v28;
            if (__OFADD__(v29, v28)) {
              break;
            }
            ++v27;
            --v26;
          }
          while (v26);
        }
      }
      goto LABEL_51;
    }
  }
  else
  {
    if (v17 != 45)
    {
      if (v21)
      {
        if ((v17 - 48) <= 9u && v21 != 1 && (BYTE1(v17) - 48) <= 9u)
        {
          uint64_t v30 = 10 * (v17 - 48) + (BYTE1(v17) - 48);
          uint64_t v31 = v21 - 2;
          if (v31)
          {
            uint64_t v32 = (unsigned __int8 *)v43 + 2;
            do
            {
              unsigned int v33 = *v32 - 48;
              if (v33 > 9) {
                break;
              }
              uint64_t v34 = 10 * v30;
              if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
                break;
              }
              uint64_t v30 = v34 + v33;
              if (__OFADD__(v34, v33)) {
                break;
              }
              ++v32;
              --v31;
            }
            while (v31);
          }
        }
      }
      goto LABEL_51;
    }
    if (v21)
    {
      if (v21 != 1 && (BYTE1(v17) - 48) <= 9u && v21 != 2 && (BYTE2(v17) - 48) <= 9u)
      {
        uint64_t v35 = -10 * (BYTE1(v17) - 48) - (BYTE2(v17) - 48);
        uint64_t v36 = v21 - 3;
        if (v36)
        {
          v37 = (unsigned __int8 *)v43 + 3;
          do
          {
            unsigned int v38 = *v37 - 48;
            if (v38 > 9) {
              break;
            }
            uint64_t v39 = 10 * v35;
            if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63) {
              break;
            }
            uint64_t v35 = v39 - v38;
            if (__OFSUB__(v39, v38)) {
              break;
            }
            ++v37;
            --v36;
          }
          while (v36);
        }
      }
      goto LABEL_51;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t AnswerSynthesisModelServer._ClientInfo.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  uint64_t v2 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelServer._ClientInfo.__deallocating_deinit()
{
  uint64_t v0 = AnswerSynthesisModelServer._ClientInfo.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.getter in conformance AnswerSynthesisModelServer._ClientInfo@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.setter in conformance AnswerSynthesisModelServer._ClientInfo(uint64_t a1)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelServer._ClientInfo())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t protocol witness for _ClientInfoProtocol._model.getter in conformance AnswerSynthesisModelServer._ClientInfo()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelServer.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelServer.__deallocating_deinit()
{
  AnswerSynthesisModelServer.deinit();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

void protocol witness for AnswerSynthesisModelProtocol.prewarm() in conformance AnswerSynthesisModelServer()
{
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.createPromptTemplate() in conformance AnswerSynthesisModelServer()
{
  return AnswerSynthesisModelServer.createPromptTemplate()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer;
  return AnswerSynthesisModelServer.synthesize(_:bindings:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v10;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  if (!v1)
  {
    uint64_t v6 = v2;
    uint64_t v7 = v0;
  }
  return v8(v6, v7);
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.getModelVersion() in conformance AnswerSynthesisModelServer()
{
  return AnswerSynthesisModelServer.getModelVersion()().value._countAndFlagsBits;
}

uint64_t protocol witness for GenerativeModelSessionTokenGenerator.model.getter in conformance AnswerSynthesisModelServer()
{
  return AnswerSynthesisModelServer.model.getter();
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AnswerSynthesisModelServer()
{
  return self;
}

uint64_t method lookup function for AnswerSynthesisModelServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnswerSynthesisModelServer);
}

uint64_t dispatch thunk of AnswerSynthesisModelServer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ObjC metadata update function for AnswerSynthesisModelServer._ClientInfo()
{
  return type metadata accessor for AnswerSynthesisModelServer._ClientInfo();
}

uint64_t type metadata completion function for AnswerSynthesisModelServer._ClientInfo()
{
  uint64_t result = type metadata accessor for _ClientInfoSessionTrackingConfig();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)()
{
  return closure #1 in closure #1 in AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:)(*(void *)(v0 + 16));
}

uint64_t outlined destroy of Any?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)()
{
  return closure #1 in closure #1 in AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:)();
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_7_0()
{
  uint64_t v2 = v0[41];
  *(void *)(v1 - 136) = v0[44];
  *(void *)(v1 - 128) = v2;
  uint64_t v3 = v0[37];
  *(void *)(v1 - 120) = v0[40];
  *(void *)(v1 - 112) = v3;
  uint64_t v4 = v0[32];
  *(void *)(v1 - 104) = v0[34];
  *(void *)(v1 - 96) = v4;
}

uint64_t OUTLINED_FUNCTION_9_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v11 + 536) = *(void *)(a10 + 8);
  *(void *)(v11 + 544) = (a10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v10;
}

uint64_t OUTLINED_FUNCTION_10_0(uint64_t a1, int a2)
{
  *(_DWORD *)(v2 + 576) = a2;
  *(void *)(v2 + 496) = *(void *)(v3 + 104);
  *(void *)(v2 + 504) = (v3 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  return v4;
}

uint64_t OUTLINED_FUNCTION_12_0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return GenerativeConfigurationProtocol.functionIdentifier(_:)();
}

uint64_t OUTLINED_FUNCTION_14_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a16;
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  *(void *)(v0 + 520) = *(void *)(v1 + 8);
  *(void *)(v0 + 528) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v2;
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
}

void OUTLINED_FUNCTION_20_0()
{
  uint64_t v2 = v0[61];
  *(void *)(v1 - 144) = v0[56];
  *(void *)(v1 - 136) = v2;
  uint64_t v3 = v0[53];
  *(void *)(v1 - 128) = v0[52];
  *(void *)(v1 - 120) = v3;
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return FunctionIdentifier.init(identifier:resourceInformation:)();
}

uint64_t OUTLINED_FUNCTION_23_0(uint64_t a1)
{
  *(void *)(v1 + 512) = a1;
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return GenerativeConfigurationProtocol._internalTrackingConfig(_:)();
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return GenerativeConfigurationProtocol.bindVariables(_:)();
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return v0;
}

void OUTLINED_FUNCTION_32_0()
{
  *(void *)(v1 - 104) = *(void *)(v0 + 544);
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return *(void *)(v0 + 256);
}

__n128 OUTLINED_FUNCTION_37(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17)
{
  __n128 result = a17;
  a1[1] = a17;
  return result;
}

uint64_t OUTLINED_FUNCTION_38()
{
  return GenerativeConfigurationProtocol._internalSessionTrackingConfig(_:)();
}

uint64_t OUTLINED_FUNCTION_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return __swift_storeEnumTagSinglePayload(a19, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_41()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_46()
{
  return *(void *)(v0 + 432);
}

uint64_t OUTLINED_FUNCTION_47(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_48@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 208) = *(void *)(v2 + a1);
  return type metadata accessor for TokenGenerator();
}

void OUTLINED_FUNCTION_50()
{
  uint64_t v2 = *(void *)(v0 + 384);
  *(void *)(v1 - 152) = *(void *)(v0 + 408);
  *(void *)(v1 - 144) = v2;
}

uint64_t OUTLINED_FUNCTION_51()
{
  return GenerativeConfigurationProtocol._addAssetCache()();
}

uint64_t OUTLINED_FUNCTION_52()
{
  return v0;
}

void OUTLINED_FUNCTION_54()
{
  uint64_t v2 = *(void *)(v0 + 312);
  *(void *)(v1 - 96) = *(void *)(v0 + 320);
  *(void *)(v1 - 152) = v2;
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_56(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t PQAVerificationModelOnDevice.modelVersion.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PQAVerificationModelOnDevice.modelVersion.modify())()
{
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t static PQAVerificationModelOnDevice.defaultVerificationModelParameter.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  MEMORY[0x270FA5388](v1 - 8);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - v3;
  static SamplingStrategy.argmax()();
  uint64_t v5 = type metadata accessor for SamplingStrategy();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  outlined init with copy of SamplingStrategy?((uint64_t)v4, v0);
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  return outlined destroy of SamplingStrategy?((uint64_t)v4, &demangling cache variable for type metadata for SamplingStrategy?);
}

unint64_t static PQAVerificationModelOnDevice.promptTemplateID.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t PQAVerificationModelOnDevice.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PQAVerificationModelOnDevice.init()();
  return v0;
}

void *PQAVerificationModelOnDevice.init()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_3();
  uint64_t v3 = type metadata accessor for AssetVersion();
  OUTLINED_FUNCTION_1();
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogAsset<LLMAdapterAssetMetadata, LLMAdapterAssetContents>);
  OUTLINED_FUNCTION_1();
  uint64_t v44 = v10;
  uint64_t v45 = v9;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v37 - v12;
  v0[2] = 0;
  v0[3] = 0;
  unint64_t v14 = static AnswerSynthesisModelProtocol.GMS_USE_CASE_ID.getter();
  uint64_t v16 = v15;
  id v17 = objc_msgSend(self, sel_processInfo);
  signed int v18 = objc_msgSend(v17, sel_processIdentifier);

  uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for PQAVerificationModelOnDevice._ClientInfo();
  swift_allocObject();
  v2[4] = PQAVerificationModelOnDevice._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(v14, v16, v18, 0, v19);
  static Catalog.Resource.LLM.Adapter.PQAVerification()();
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  dispatch thunk of AssetBackedResource.fetchAsset()();
  uint64_t v20 = v44;
  CatalogAsset.version.getter();
  uint64_t v21 = AssetVersion.number.getter();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  uint64_t v42 = v8;
  uint64_t v43 = v3;
  uint64_t v41 = v24;
  v24(v8, v3);
  swift_beginAccess();
  v2[2] = v21;
  v2[3] = v23;
  swift_bridgeObjectRelease();
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logging.answerSynthesis);
  uint64_t v26 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v1, v13, v45);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    uint64_t v39 = OUTLINED_FUNCTION_13_1();
    uint64_t v47 = v39;
    *(_DWORD *)uint64_t v29 = 136315138;
    v37[1] = v29 + 4;
    unsigned int v38 = v29;
    uint64_t v40 = v13;
    uint64_t v30 = v42;
    CatalogAsset.version.getter();
    uint64_t v31 = AssetVersion.number.getter();
    unint64_t v33 = v32;
    v41(v30, v43);
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v34(v1, v26);
    _os_log_impl(&dword_257DC6000, v27, v28, "PQA verification model version is %s", v38, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    v34((uint64_t)v40, v26);
  }
  else
  {

    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v35(v1, v26);
    v35((uint64_t)v13, v26);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
  return v2;
}

uint64_t type metadata accessor for PQAVerificationModelOnDevice._ClientInfo()
{
  uint64_t result = type metadata singleton initialization cache for PQAVerificationModelOnDevice._ClientInfo;
  if (!type metadata singleton initialization cache for PQAVerificationModelOnDevice._ClientInfo) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall PQAVerificationModelOnDevice.prewarm()()
{
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logging.answerSynthesis);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_257DC6000, v1, v2, "Prewarming PQASynthesisModelOnDevice model...", v3, 2u);
    OUTLINED_FUNCTION_34();
  }

  swift_retain();
  TokenGenerator.prewarm()();
  swift_release();
}

uint64_t PQAVerificationModelOnDevice.model.getter()
{
  return swift_retain();
}

uint64_t PQAVerificationModelOnDevice.createPromptTemplate()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<AssetBackedLLMBundle>);
  MEMORY[0x270FA5388](v0 - 8);
  OUTLINED_FUNCTION_15();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PQAVerificationID.getter();
  return PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
}

uint64_t PQAVerificationModelOnDevice.verifySearchResults(request:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v3 = v2;
  *(void *)(v1 + 96) = v0;
  uint64_t v4 = type metadata accessor for PromptTemplate();
  *(void *)(v1 + 104) = v4;
  OUTLINED_FUNCTION_12_0(v4);
  *(void *)(v1 + 112) = v5;
  *(void *)(v1 + 120) = swift_task_alloc();
  *(_OWORD *)(v1 + 128) = *(_OWORD *)v3;
  *(void *)(v1 + 144) = *(void *)(v3 + 16);
  *(_OWORD *)(v1 + 152) = *(_OWORD *)(v3 + 24);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t inited;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  long long v13;
  long long v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  uint64_t v19;

  signed int v18 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v13 = *(_OWORD *)(v0 + 152);
  unint64_t v14 = *(_OWORD *)(v0 + 128);
  PQAVerificationModelOnDevice.createPromptTemplate()();
  uint64_t v15 = v14;
  uint64_t v16 = v1;
  id v17 = v13;
  uint64_t v2 = PQAVerificationRequest.userPrompt()();
  if (v3)
  {
    OUTLINED_FUNCTION_28();
    v4();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5(0);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    *(void *)(inited + 32) = 0x6D6F725072657375;
    *(void *)(inited + 40) = 0xEA00000000007470;
    *(Swift::String *)(inited + 48) = v2;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 168) = Dictionary.init(dictionaryLiteral:)();
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    *(void *)(v0 + 176) = __swift_project_value_buffer(v8, (uint64_t)static Logging.answerSynthesis);
    swift_bridgeObjectRetain();
    uint64_t v9 = Logger.logObject.getter();
    uint64_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      *(void *)&uint64_t v15 = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v11 = 136642819;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 88) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2._countAndFlagsBits, (unint64_t)v2._object, (uint64_t *)&v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v9, v10, "Calling pqa verification with user prompt: %{sensitive}s", v11, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v12;
    *uint64_t v12 = v0;
    v12[1] = PQAVerificationModelOnDevice.verifySearchResults(request:);
    return PQAVerificationModelOnDevice.synthesize(_:bindings:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  v8[24] = v6;
  v8[25] = v7;
  v8[26] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(void);
  uint64_t v12;
  void *v13;
  uint64_t v14;

  uint64_t v13 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[24];
    uint64_t v3 = v0[25];
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    uint64_t v12 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v1, v2, "PQA verification got response: %s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v7 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = v0[13];
  uint64_t v9 = String.oms_BOOLeanValue.getter();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(v9 & 1);
}

{
  uint64_t v0;
  void (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_28();
  v1();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t PQAVerificationModelOnDevice.synthesize(_:bindings:)()
{
  OUTLINED_FUNCTION_27();
  v1[11] = v2;
  v1[12] = v0;
  v1[10] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Prompt?);
  v1[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Prompt();
  v1[14] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v1[15] = v5;
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[10];
  *(void *)(swift_task_alloc() + 16) = v3;
  Prompt.init(_:)();
  swift_task_dealloc();
  PQAVerificationModelOnDevice.createOverridePrompt()(v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of SamplingStrategy?(v0[13], &demangling cache variable for type metadata for Prompt?);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[20] = v4;
    *uint64_t v4 = v0;
    v4[1] = PQAVerificationModelOnDevice.synthesize(_:bindings:);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[15] + 32))(v0[16], v0[13], v0[14]);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[18] = v5;
    *uint64_t v5 = v0;
    v5[1] = PQAVerificationModelOnDevice.synthesize(_:bindings:);
  }
  return PQAVerificationModelOnDevice.synthesizeWithPrompt(_:bindings:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v0;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v7 = v6;
  *(void *)(v8 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  void (*v1)(void, void);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  uint64_t v1 = *(void (**)(void, void))(v0[15] + 8);
  v1(v0[16], v0[14]);
  v1(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = OUTLINED_FUNCTION_19_0();
  return v3(v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  v2[6] = v1;
  v2[7] = v4;
  v2[8] = v5;
  v2[9] = v0;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v7 = v6;
  *(void *)(v8 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  OUTLINED_FUNCTION_28();
  v3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v1, v2);
}

{
  void *v0;
  void (*v1)(void, void);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = *(void (**)(void, void))(v0[15] + 8);
  v1(v0[16], v0[14]);
  v1(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v2();
}

{
  void (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_28();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t PQAVerificationModelOnDevice.createOverridePrompt()@<X0>(uint64_t a1@<X8>)
{
  if (AFIsInternalInstall()
    && (type metadata accessor for NSUserDefaults(),
        uint64_t v2 = static NSUserDefaults.pqaVerificationPromptTemplateOverride.getter(),
        v3))
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logging.answerSynthesis);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      uint64_t v13 = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v13);
      OUTLINED_FUNCTION_17();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v7, v8, "Using override prompt template for PQA Verification: %s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    Prompt.init(template:)();
    uint64_t v12 = type metadata accessor for Prompt();
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v12);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Prompt();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v10);
  }
}

uint64_t closure #1 in PQAVerificationModelOnDevice.synthesize(_:bindings:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Prompt();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PromptTemplate();
  v13[3] = v6;
  v13[4] = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, MEMORY[0x263F41548]);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v6);
  uint64_t v8 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v10 + v9, v5, v2);
  MEMORY[0x25A2C7790](v10, v2, v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PQAVerificationModelOnDevice.synthesizeWithPrompt(_:bindings:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v0[2] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v0[3] = v4;
  v0[4] = swift_task_alloc();
  unint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *unint64_t v5 = v0;
  v5[1] = PQAVerificationModelOnDevice.synthesizeWithPrompt(_:bindings:);
  OUTLINED_FUNCTION_29();
  return closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)(v6, v7, v8, v9, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  unint64_t v5 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  v3[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v3[7] = v10;
    uint64_t v11 = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, MEMORY[0x263F7F7D8]);
    *uint64_t v10 = v5;
    v10[1] = PQAVerificationModelOnDevice.synthesizeWithPrompt(_:bindings:);
    uint64_t v12 = v3[2];
    return MEMORY[0x270F2EE70](v12, v11);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  *uint64_t v7 = *v1;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_28();
  v9();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA2498](v10, v11, v12);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v13(v5, v3);
  }
}

uint64_t PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *uint64_t v3 = v0;
  v3[1] = AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:);
  OUTLINED_FUNCTION_29();
  return closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)(v4, v5, v6, v7, v2);
}

uint64_t closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[30] = a4;
  v5[31] = a5;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[32] = swift_task_alloc();
  v5[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[35] = v6;
  v5[36] = *(void *)(v6 - 8);
  v5[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[38] = v7;
  v5[39] = *(void *)(v7 - 8);
  v5[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FunctionIdentifier();
  v5[42] = v8;
  v5[43] = *(void *)(v8 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v5[46] = v9;
  v5[47] = *(void *)(v9 - 8);
  v5[48] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[49] = v10;
  v5[50] = *(void *)(v10 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CompletionPrompt();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:), 0, 0);
}

uint64_t closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v19 = *(void *)(v0 + 368);
  uint64_t v20 = *(void *)(v0 + 384);
  uint64_t v21 = *(void *)(v0 + 328);
  uint64_t v17 = *(void *)(v0 + 240);
  uint64_t v18 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 232);
  *(void *)(swift_task_alloc() + 16) = v5;
  CompletionPrompt.init(_:)();
  swift_task_dealloc();
  static PQAVerificationModelOnDevice.defaultVerificationModelParameter.getter();
  *(_DWORD *)(v0 + 576) = *MEMORY[0x263F413E0];
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 496) = v6;
  *(void *)(v0 + 504) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v6(v3);
  *(void *)(v0 + 512) = lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 520) = v7;
  *(void *)(v0 + 528) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v3, v4);
  uint64_t v8 = *(void (**)(void))(v1 + 8);
  *(void *)(v0 + 536) = v8;
  *(void *)(v0 + 544) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_10_1();
  v8();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v16);
  GenerativeConfigurationProtocol.bindVariables(_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_1();
  v8();
  Dictionary.init(dictionaryLiteral:)();
  GenerativeConfigurationProtocol._internalTrackingConfig(_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_1();
  v8();
  uint64_t v9 = *(void *)(v17 + 32);
  *(void *)(v0 + 552) = v9;
  uint64_t v10 = v9
      + OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo_trackingConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20, v10, v19);
  GenerativeConfigurationProtocol._internalSessionTrackingConfig(_:)();
  OUTLINED_FUNCTION_16_1();
  v11();
  OUTLINED_FUNCTION_10_1();
  v8();
  uint64_t v12 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v12);
  FunctionIdentifier.init(identifier:resourceInformation:)();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v13;
  void *v13 = v0;
  v13[1] = closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:);
  uint64_t v14 = *(void *)(v0 + 256);
  return MEMORY[0x270F2FC98](v14, 0xD00000000000001CLL, 0x800000025867D880);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  *(void *)(v6 + 568) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v18;
  void (*v19)(void);
  void (*v20)(void);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t (*v26)(void);
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  void (*v43)(uint64_t, void, uint64_t);
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;

  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of SamplingStrategy?(v1, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v42 = *(_DWORD *)(v0 + 576);
    uint64_t v43 = *(void (**)(uint64_t, void, uint64_t))(v0 + 496);
    uint64_t v46 = *(void *)(v0 + 488);
    uint64_t v45 = *(void *)(v0 + 448);
    uint64_t v47 = *(void *)(v0 + 416);
    uint64_t v48 = *(void *)(v0 + 424);
    uint64_t v39 = *(void *)(v0 + 408);
    uint64_t v40 = *(void *)(v0 + 392);
    v50 = *(void *)(v0 + 320);
    uint64_t v3 = *(void *)(v0 + 288);
    uint64_t v36 = *(void *)(v0 + 280);
    v37 = *(void *)(v0 + 296);
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v5 = *(void *)(v0 + 272);
    unsigned int v38 = *(void *)(v0 + 224);
    uint64_t v35 = v1 + *(int *)(v2 + 48);
    uint64_t v6 = v5 + *(int *)(v4 + 48);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 312) + 32);
    uint64_t v8 = *(void *)(v0 + 304);
    v7(v5, v1);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v9(v6, v35, v36);
    uint64_t v10 = v5 + *(int *)(v4 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v50, v5, v8);
    v9(v37, v10, v36);
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_28();
    v11();
    uint64_t v12 = OUTLINED_FUNCTION_19_0();
    v13(v12);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    *(void *)(inited + 32) = 0x74706D6F7270;
    *(void *)(inited + 40) = 0xE600000000000000;
    uint64_t v15 = type metadata accessor for Prompt();
    uint64_t v16 = MEMORY[0x263F620B8];
    *(void *)(inited + 72) = v15;
    *(void *)(inited + 80) = v16;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1Tm, v38, v15);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    Dictionary.init(dictionaryLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_258661700;
    *(void *)(v18 + 32) = 0xD000000000000061;
    *(void *)(v18 + 40) = 0x800000025867D810;
    static PQAVerificationModelOnDevice.defaultVerificationModelParameter.getter();
    v43(v39, v42, v40);
    *(void *)(v18 + 72) = type metadata accessor for SamplingParameters();
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v18 + 48));
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v44(v39, v40);
    Dictionary.init(dictionaryLiteral:)();
    static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_1();
    v19();
    OUTLINED_FUNCTION_16_1();
    v20();
    v49(v46, v47);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v46, v45, v47);
  }
  uint64_t v21 = *(void *)(v0 + 568);
  GenerativeConfigurationProtocol.functionIdentifier(_:)();
  GenerativeConfigurationProtocol._addAssetCache()();
  if (v21)
  {
    (*(void (**)(void, void))(v0 + 536))(*(void *)(v0 + 432), *(void *)(v0 + 416));
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v23 = *(void *)(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 416);
    OUTLINED_FUNCTION_28();
    v25();
    v22(v23, v24);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 552);
    os_log_type_t v28 = *(void (**)(void))(v0 + 536);
    uint64_t v29 = *(void *)(v0 + 488);
    uint64_t v30 = *(void *)(v0 + 440);
    uint64_t v31 = *(void *)(v0 + 416);
    uint64_t v41 = *(void *)(v0 + 360);
    unint64_t v32 = *(void *)(v0 + 344);
    unint64_t v33 = *(void *)(v0 + 336);
    v28();
    *(void *)(v0 + 208) = *(void *)(v27
                                      + OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo__model);
    type metadata accessor for TokenGenerator();
    GenerativeConfigurationProtocol.with<A>(model:modelType:)();
    ((void (*)(uint64_t, uint64_t))v28)(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v41, v33);
    ((void (*)(uint64_t, uint64_t))v28)(v29, v31);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v26();
}

uint64_t closure #1 in closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)()
{
  uint64_t v0 = type metadata accessor for Prompt();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x25A2C7790](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t PQAVerificationModelOnDevice.synthesizeWithPrompt_generateGenerativeFunctionOverride()()
{
  uint64_t v1 = type metadata accessor for BindableConfiguration();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_15();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for CompletionPrompt();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v19 - v13;
  CompletionPrompt.init(_:)();
  BindableConfiguration.init(name:)();
  lazy protocol witness table accessor for type TokenGenerator and conformance TokenGenerator(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, MEMORY[0x263F61F60]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  uint64_t v15 = *(void (**)(uint64_t))(v10 + 8);
  uint64_t v16 = OUTLINED_FUNCTION_19_0();
  v15(v16);
  uint64_t v17 = static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (!v0) {
    uint64_t v1 = v17;
  }
  ((void (*)(char *, uint64_t))v15)(v14, v8);
  return v1;
}

uint64_t closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_generateGenerativeFunctionOverride()()
{
  uint64_t v0 = type metadata accessor for Prompt();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = type metadata accessor for BindableVariable();
  v9[4] = MEMORY[0x263F62138];
  __swift_allocate_boxed_opaque_existential_1Tm(v9);
  BindableVariable.init(name:)();
  uint64_t v4 = MEMORY[0x263F620B0];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_258661700;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x25A2C7790](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t PQAVerificationModelOnDevice.modelVersion.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PQAVerificationModelOnDevice._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  void v40[3] = a4;
  uint64_t v42 = a3;
  uint64_t v10 = type metadata accessor for CachePolicy();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<AssetBackedLLMBundle>);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  _ClientInfoSessionTrackingConfig.init(sessionTrackingConifg:_internalSessionTrackingConfig:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v6+ OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo_trackingConfig, v16, v13);
  uint64_t v17 = specialized Dictionary.subscript.getter(0xD000000000000015, 0x800000025867D670, a5);
  unint64_t v19 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_52;
  }
  uint64_t v21 = HIBYTE(v19) & 0xF;
  uint64_t v22 = v17 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v23 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23) {
    goto LABEL_51;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    specialized _parseInteger<A, B>(ascii:radix:)(v17, v19, 10);
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((v17 & 0x1000000000000000) != 0) {
      uint64_t v24 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v24 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v24, v22, 10);
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_52:
    type metadata accessor for TokenGenerator();
    static Catalog.ResourceBundle.TokenGeneration.LLM.PQAVerificationID.getter();
    static CachePolicy.inMemory.getter();
    GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
    *(void *)(v6
              + OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo__model) = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:parentOfOnBehalfOf:)();
    return v6;
  }
  v43[0] = v17;
  v43[1] = v19 & 0xFFFFFFFFFFFFFFLL;
  if (v17 == 43)
  {
    if (v21)
    {
      if (v21 != 1 && (BYTE1(v17) - 48) <= 9u && v21 != 2 && (BYTE2(v17) - 48) <= 9u)
      {
        uint64_t v25 = 10 * (BYTE1(v17) - 48) + (BYTE2(v17) - 48);
        uint64_t v26 = v21 - 3;
        if (v26)
        {
          uint64_t v27 = (unsigned __int8 *)v43 + 3;
          do
          {
            unsigned int v28 = *v27 - 48;
            if (v28 > 9) {
              break;
            }
            uint64_t v29 = 10 * v25;
            if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63) {
              break;
            }
            uint64_t v25 = v29 + v28;
            if (__OFADD__(v29, v28)) {
              break;
            }
            ++v27;
            --v26;
          }
          while (v26);
        }
      }
      goto LABEL_51;
    }
  }
  else
  {
    if (v17 != 45)
    {
      if (v21)
      {
        if ((v17 - 48) <= 9u && v21 != 1 && (BYTE1(v17) - 48) <= 9u)
        {
          uint64_t v30 = 10 * (v17 - 48) + (BYTE1(v17) - 48);
          uint64_t v31 = v21 - 2;
          if (v31)
          {
            unint64_t v32 = (unsigned __int8 *)v43 + 2;
            do
            {
              unsigned int v33 = *v32 - 48;
              if (v33 > 9) {
                break;
              }
              uint64_t v34 = 10 * v30;
              if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
                break;
              }
              uint64_t v30 = v34 + v33;
              if (__OFADD__(v34, v33)) {
                break;
              }
              ++v32;
              --v31;
            }
            while (v31);
          }
        }
      }
      goto LABEL_51;
    }
    if (v21)
    {
      if (v21 != 1 && (BYTE1(v17) - 48) <= 9u && v21 != 2 && (BYTE2(v17) - 48) <= 9u)
      {
        uint64_t v35 = -10 * (BYTE1(v17) - 48) - (BYTE2(v17) - 48);
        uint64_t v36 = v21 - 3;
        if (v36)
        {
          v37 = (unsigned __int8 *)v43 + 3;
          do
          {
            unsigned int v38 = *v37 - 48;
            if (v38 > 9) {
              break;
            }
            uint64_t v39 = 10 * v35;
            if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63) {
              break;
            }
            uint64_t v35 = v39 - v38;
            if (__OFSUB__(v39, v38)) {
              break;
            }
            ++v37;
            --v36;
          }
          while (v36);
        }
      }
      goto LABEL_51;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PQAVerificationModelOnDevice._ClientInfo.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo_trackingConfig;
  uint64_t v2 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t PQAVerificationModelOnDevice._ClientInfo.__deallocating_deinit()
{
  uint64_t v0 = PQAVerificationModelOnDevice._ClientInfo.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.getter in conformance PQAVerificationModelOnDevice._ClientInfo@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo_trackingConfig;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.setter in conformance PQAVerificationModelOnDevice._ClientInfo(uint64_t a1)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch28PQAVerificationModelOnDeviceP33_9A46336C3C4431BAFF09DC622DE21C0E11_ClientInfo_trackingConfig;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance PQAVerificationModelOnDevice._ClientInfo())()
{
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t protocol witness for _ClientInfoProtocol._model.getter in conformance PQAVerificationModelOnDevice._ClientInfo()
{
  return swift_retain();
}

uint64_t PQAVerificationModelOnDevice.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PQAVerificationModelOnDevice.__deallocating_deinit()
{
  PQAVerificationModelOnDevice.deinit();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t protocol witness for PQAVerificationModelProtocol.verifySearchResults(request:) in conformance PQAVerificationModelOnDevice()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for PQAVerificationModelProtocol.verifySearchResults(request:) in conformance PQAVerificationModelOnDevice;
  return PQAVerificationModelOnDevice.verifySearchResults(request:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (v0) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v3 & 1;
  }
  return v6(v7);
}

void protocol witness for AnswerSynthesisModelProtocol.prewarm() in conformance PQAVerificationModelOnDevice()
{
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.createPromptTemplate() in conformance PQAVerificationModelOnDevice()
{
  return PQAVerificationModelOnDevice.createPromptTemplate()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance PQAVerificationModelOnDevice()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance PQAVerificationModelOnDevice;
  return PQAVerificationModelOnDevice.synthesize(_:bindings:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v7 = v6;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v0)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v3;
  }
  return v10(v8, v9);
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.getModelVersion() in conformance PQAVerificationModelOnDevice()
{
  return PQAVerificationModelOnDevice.getModelVersion()().value._countAndFlagsBits;
}

uint64_t protocol witness for GenerativeModelSessionTokenGenerator.model.getter in conformance PQAVerificationModelOnDevice()
{
  return PQAVerificationModelOnDevice.model.getter();
}

uint64_t partial apply for closure #1 in PQAVerificationModelOnDevice.synthesize(_:bindings:)()
{
  return closure #1 in PQAVerificationModelOnDevice.synthesize(_:bindings:)(*(void *)(v0 + 16));
}

uint64_t type metadata accessor for PQAVerificationModelOnDevice()
{
  return self;
}

uint64_t method lookup function for PQAVerificationModelOnDevice(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PQAVerificationModelOnDevice);
}

uint64_t dispatch thunk of PQAVerificationModelOnDevice.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ObjC metadata update function for PQAVerificationModelOnDevice._ClientInfo()
{
  return type metadata accessor for PQAVerificationModelOnDevice._ClientInfo();
}

uint64_t type metadata completion function for PQAVerificationModelOnDevice._ClientInfo()
{
  uint64_t result = type metadata accessor for _ClientInfoSessionTrackingConfig();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)()
{
  return closure #1 in closure #1 in PQAVerificationModelOnDevice.synthesizeWithPrompt_runnable(_:bindings:)();
}

uint64_t outlined destroy of SamplingStrategy?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return v0;
}

uint64_t dispatch thunk of PQAVerificationModelProtocol.verifySearchResults(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = dispatch thunk of PQAVerificationModelProtocol.verifySearchResults(request:);
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PQAVerificationModelProtocol.verifySearchResults(request:)(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t AnswerResolvable.resolve(query:results:assistantLocale:)()
{
  OUTLINED_FUNCTION_127();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[5] = v4;
  *uint64_t v4 = v1;
  v4[1] = AnswerResolvable.resolve(query:results:assistantLocale:);
  uint64_t v5 = OUTLINED_FUNCTION_92();
  return v6(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  OUTLINED_FUNCTION_27_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    uint64_t v11 = v5[3];
    v5[6] = v3;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 16) + **(int **)(v11 + 16));
    uint64_t v12 = (void *)swift_task_alloc();
    v5[7] = v12;
    *uint64_t v12 = v7;
    v12[1] = AnswerResolvable.resolve(query:results:assistantLocale:);
    uint64_t v13 = v5[3];
    uint64_t v14 = v5[2];
    return v15(v3, v14, v13);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  unint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = OUTLINED_FUNCTION_51_0();
  return v4(v3);
}

uint64_t AnswerResolver.extractionRules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnswerResolver.enabledRules.getter()
{
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  return specialized _ArrayProtocol.filter(_:)(v1, v0);
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = result + 32;
    while (v6 < *(void *)(v3 + 16))
    {
      outlined init with copy of ExtractionRule(v7, (uint64_t)&v13);
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      __swift_project_boxed_opaque_existential_1(&v13, v14);
      if (ExtractionRule.isEnabled(_:)(*(void *)(a2 + 64), v8, v9))
      {
        outlined init with take of SageSearchClient(&v13, (uint64_t)v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v10 = v16;
        unint64_t v11 = *(void *)(v16 + 16);
        if (v11 >= *(void *)(v16 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v10 = v16;
        }
        *(void *)(v10 + 16) = v11 + 1;
        uint64_t result = outlined init with take of SageSearchClient(v12, v10 + 40 * v11 + 32);
      }
      else
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
      }
      ++v6;
      v7 += 40;
      if (v5 == v6)
      {
        uint64_t v4 = v16;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t AnswerResolver.resolutionService.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of EagerResolutionService?(v1 + 24, a1, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
}

uint64_t AnswerResolver.featureFlagService.getter()
{
  return swift_retain();
}

uint64_t AnswerResolver.__allocating_init(resolutionService:extractionRules:featureFlagService:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  outlined init with take of EagerResolutionService?(a1, v6 + 24, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 64) = a3;
  return v6;
}

uint64_t AnswerResolver.init(resolutionService:extractionRules:featureFlagService:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  outlined init with take of EagerResolutionService?(a1, v3 + 24, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t AnswerResolver.__allocating_init(resolutionService:featureFlagService:)()
{
  OUTLINED_FUNCTION_53();
  uint64_t v2 = swift_allocObject();
  AnswerResolver.init(resolutionService:featureFlagService:)(v1, v0);
  return v2;
}

uint64_t AnswerResolver.init(resolutionService:featureFlagService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a1;
  uint64_t v37 = a2;
  type metadata accessor for OSSignpostError();
  OUTLINED_FUNCTION_1();
  uint64_t v35 = v3;
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OSSignpostID();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v34 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - v15;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for OSSignposter();
  __swift_project_value_buffer(v17, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  unint64_t v18 = OSSignposter.logHandle.getter();
  os_signpost_type_t v19 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v18, v19, v21, "AnswerResolver.init", "", v20, 2u);
    OUTLINED_FUNCTION_34();
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v16, v5);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v16, v5);
  uint64_t v23 = v39;
  outlined init with copy of EagerResolutionService?(v38, v39 + 24, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
  *(void *)(v23 + 64) = v37;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ExtractionRule>);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 56) = &type metadata for InstantAnswerExtraction;
  *(void *)(v24 + 64) = &protocol witness table for InstantAnswerExtraction;
  *(void *)(v24 + 96) = &type metadata for MediaAnswerRule;
  *(void *)(v24 + 104) = &protocol witness table for MediaAnswerRule;
  *(unsigned char *)(v24 + 72) = 4;
  *(void *)(v24 + 136) = &type metadata for CalendarLocationAnswer;
  *(void *)(v24 + 144) = &protocol witness table for CalendarLocationAnswer;
  *(unsigned char *)(v24 + 112) = 3;
  *(void *)(v24 + 176) = &type metadata for WalletLocationAnswer;
  *(void *)(v24 + 184) = &protocol witness table for WalletLocationAnswer;
  *(unsigned char *)(v24 + 152) = 3;
  *(_OWORD *)(v24 + 16) = xmmword_258661C80;
  *(void *)(v24 + 216) = &type metadata for FlightFromExtractedAnswer;
  *(void *)(v24 + 224) = &protocol witness table for FlightFromExtractedAnswer;
  *(unsigned char *)(v24 + 192) = 2;
  *(void *)(v23 + 16) = v24;
  swift_retain();
  uint64_t v25 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v26 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    uint64_t v27 = v34;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v36;
    if ((*(unsigned int (**)(char *, uint64_t))(v35 + 88))(v27, v36) == *MEMORY[0x263F90238])
    {
      uint64_t v30 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      uint64_t v30 = "";
    }
    uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v31 = 0;
    os_signpost_id_t v32 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v25, v26, v32, "AnswerResolver.init", v30, v31, 2u);
    OUTLINED_FUNCTION_34();
  }

  v22(v11, v5);
  swift_release();
  swift_release();
  outlined destroy of EagerResolutionService?(v38, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
  return v39;
}

uint64_t AnswerResolver.extractInfo(query:results:assistantLocale:)()
{
  OUTLINED_FUNCTION_27();
  v1[11] = v2;
  v1[12] = v0;
  v1[9] = v3;
  v1[10] = v4;
  v1[8] = v5;
  uint64_t v6 = type metadata accessor for OSSignpostError();
  v1[13] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v1[14] = v7;
  v1[15] = OUTLINED_FUNCTION_50_0();
  v1[16] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_12_0(v8);
  v1[17] = v9;
  v1[18] = OUTLINED_FUNCTION_50_0();
  v1[19] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for OSSignpostID();
  v1[20] = v10;
  OUTLINED_FUNCTION_12_0(v10);
  v1[21] = v11;
  v1[22] = OUTLINED_FUNCTION_50_0();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t AnswerResolver.extractInfo(query:results:assistantLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Logging.answerSynthesis);
  swift_retain_n();
  unint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = *(void *)(v14 + 96);
  if (v20)
  {
    a11 = v14 + 304;
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134218240;
    uint64_t v16 = (void (*)(uint64_t, void *))(v21 + 24);
    uint64_t v23 = *(void *)((*(uint64_t (**)(void))(*(void *)v21 + 104))() + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v14 + 56) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v22 + 12) = 1024;
    uint64_t v15 = &demangling cache variable for type metadata for EagerResolutionService?;
    outlined init with copy of EagerResolutionService?(v21 + 24, v14 + 16, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
    LODWORD(v23) = *(void *)(v14 + 40) != 0;
    outlined destroy of EagerResolutionService?(v14 + 16, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
    swift_release();
    *(_DWORD *)(v14 + 304) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_257DC6000, v18, v19, "AnswerResolver: Running %ld rules (w/ resolution=%{BOOL}d)", (uint8_t *)v22, 0x12u);
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_release_n();
  }

  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for OSSignposter();
  *(void *)(v14 + 208) = __swift_project_value_buffer(v24, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v25 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v26 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)os_signpost_type_t v26 = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_186();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v25, v27, v28, "AnswerResolver.extractInfo", "", v26, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v29 = *(void *)(v14 + 200);
  uint64_t v30 = *(void *)(v14 + 160);
  uint64_t v31 = *(void *)(v14 + 168);
  uint64_t v32 = *(void *)(v14 + 72);

  uint64_t v33 = OUTLINED_FUNCTION_148();
  v34(v33);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v14 + 216) = OUTLINED_FUNCTION_160();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  uint64_t v35 = v31 + 8;
  *(void *)(v14 + 224) = v36;
  *(void *)(v14 + 232) = v35 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v36(v29, v30);
  uint64_t v37 = *(void *)(v32 + 16);
  *(void *)(v14 + 240) = v37;
  if (v37)
  {
    uint64_t v38 = *(void *)(v14 + 96);
    uint64_t v39 = *(int **)(*(void *)v38 + 136);
    uint64_t v40 = (*(void *)v38 + 136) & 0xFFFFFFFFFFFFLL | 0x7A2C000000000000;
    *(void *)(v14 + 248) = v39;
    *(void *)(v14 + 256) = v40;
    uint64_t v41 = type metadata accessor for SearchResult(0);
    OUTLINED_FUNCTION_12_0(v41);
    *(_DWORD *)(v14 + 308) = *(_DWORD *)(v42 + 80);
    uint64_t v44 = *(void *)(v43 + 72);
    uint64_t v45 = MEMORY[0x263F8EE78];
    *(void *)(v14 + 272) = 0;
    *(void *)(v14 + 280) = v45;
    *(void *)(v14 + 264) = v44;
    v70 = (char *)v39 + *v39;
    swift_bridgeObjectRetain();
    uint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v14 + 288) = v46;
    *uint64_t v46 = v14;
    v46[1] = AnswerResolver.extractInfo(query:results:assistantLocale:);
    OUTLINED_FUNCTION_100();
    OUTLINED_FUNCTION_45_0();
    return v53(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, v70, a12, a13, a14);
  }
  else
  {
    v56 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v57 = OUTLINED_FUNCTION_130();
      if (v58(v57) != *MEMORY[0x263F90238])
      {
        OUTLINED_FUNCTION_77();
        v59();
      }
      uint64_t v35 = OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v35 = 0;
      OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_186();
      OUTLINED_FUNCTION_129(&dword_257DC6000, v56, v60, v61, "AnswerResolver.extractInfo");
      OUTLINED_FUNCTION_34();
    }
    OUTLINED_FUNCTION_67();
    v16(v35, v15);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_149();
    OUTLINED_FUNCTION_45_0();
    return v64(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14);
  }
}

{
  uint64_t v14;
  void (*v15)(NSObject *, uint64_t);
  NSObject *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t);
  void (*v19)(void);
  os_signpost_type_t v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  uint64_t v16 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v17 = OUTLINED_FUNCTION_130();
    if (v18(v17) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v19();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v16, v20, v21, "AnswerResolver.extractInfo");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_67();
  v15(v16, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_45_0();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14);
}

uint64_t AnswerResolver.extractInfo(query:results:assistantLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_118();
  outlined init with copy of ExtractedInfo(v16[19], v16[18], (void (*)(void))type metadata accessor for ExtractedInfo);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = v16[35];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v18 + 16) + 1, 1, v16[35], &demangling cache variable for type metadata for _ContiguousArrayStorage<ExtractedInfo>, type metadata accessor for ExtractedInfo, (void (*)(void))type metadata accessor for ExtractedInfo, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
  }
  unint64_t v20 = *(void *)(v18 + 16);
  unint64_t v19 = *(void *)(v18 + 24);
  if (v20 >= v19 >> 1) {
    uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1, v18, &demangling cache variable for type metadata for _ContiguousArrayStorage<ExtractedInfo>, type metadata accessor for ExtractedInfo, (void (*)(void))type metadata accessor for ExtractedInfo, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
  }
  uint64_t v21 = v16[30];
  uint64_t v22 = v16[18];
  uint64_t v23 = v16[19];
  uint64_t v24 = v16[17];
  uint64_t v25 = v16[34] + 1;
  *(void *)(v18 + 16) = v20 + 1;
  outlined init with take of ExtractedInfo(v22, v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, (void (*)(void))type metadata accessor for ExtractedInfo);
  outlined destroy of ExtractedInfo(v23, (void (*)(void))type metadata accessor for ExtractedInfo);
  if (v25 == v21)
  {
    swift_bridgeObjectRelease();
    os_signpost_type_t v26 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v27 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v28 = v16[16];
      uint64_t v30 = v16[13];
      uint64_t v29 = v16[14];
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v29 + 88))(v28, v30) == *MEMORY[0x263F90238])
      {
        uint64_t v31 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v42();
        uint64_t v31 = "";
      }
      uint64_t v43 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v43 = 0;
      os_signpost_id_t v44 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl(&dword_257DC6000, v26, v27, v44, "AnswerResolver.extractInfo", v31, v43, 2u);
      OUTLINED_FUNCTION_34();
    }
    uint64_t v45 = (void (*)(uint64_t, uint64_t))v16[28];
    uint64_t v46 = v16[23];
    uint64_t v47 = v16[20];
    uint64_t v56 = v16[19];
    uint64_t v57 = v16[18];
    uint64_t v58 = v16[16];
    uint64_t v60 = v16[15];

    v45(v46, v47);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_36_1();
    return v50(v48, v49, v50, v51, v52, v53, v54, v55, a9, v56, v57, v58, v60, a14, a15, a16);
  }
  else
  {
    ++v16[34];
    v16[35] = v18;
    uint64_t v59 = v16[31] + *(int *)v16[31];
    uint64_t v32 = (void *)swift_task_alloc();
    v16[36] = v32;
    *uint64_t v32 = v16;
    v32[1] = AnswerResolver.extractInfo(query:results:assistantLocale:);
    OUTLINED_FUNCTION_100();
    OUTLINED_FUNCTION_36_1();
    return v39(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12, v59, a14, a15, a16);
  }
}

uint64_t specialized Array.append(_:)(uint64_t a1)
{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>, type metadata accessor for SearchResult, (void (*)(void))type metadata accessor for SearchResult, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
  uint64_t v3 = *(void *)(*v1 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>, type metadata accessor for SearchResult, (void (*)(void))type metadata accessor for SearchResult, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
  uint64_t v4 = *v1;
  *(void *)(*v1 + 16) = v3 + 1;
  uint64_t v5 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v5);
  uint64_t result = outlined init with take of ExtractedInfo(a1, v4+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v7 + 72) * v3, (void (*)(void))type metadata accessor for SearchResult);
  uint64_t *v1 = v4;
  return result;
}

uint64_t AnswerResolver.applyRules(query:result:assistantLocale:)()
{
  OUTLINED_FUNCTION_27();
  v1[33] = v2;
  v1[34] = v0;
  v1[31] = v3;
  v1[32] = v4;
  v1[29] = v5;
  v1[30] = v6;
  v1[35] = type metadata accessor for ExtractedType(0);
  v1[36] = OUTLINED_FUNCTION_50_0();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedType?);
  v1[39] = OUTLINED_FUNCTION_50_0();
  v1[40] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_209();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 104))();
  v1[41] = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  v1[42] = v4;
  if (v4)
  {
    v1[43] = 0;
    outlined init with copy of ExtractionRule(v3 + 32, (uint64_t)(v1 + 2));
    uint64_t v5 = v1[5];
    uint64_t v6 = v1[6];
    uint64_t v7 = (void *)OUTLINED_FUNCTION_19_0();
    __swift_project_boxed_opaque_existential_1(v7, v8);
    unint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 16)
                                                                                                + **(int **)(v6 + 16));
    uint64_t v9 = swift_task_alloc();
    uint64_t v10 = (void *)OUTLINED_FUNCTION_131(v9);
    *uint64_t v10 = v11;
    v10[1] = AnswerResolver.applyRules(query:result:assistantLocale:);
    uint64_t v12 = v1[40];
    uint64_t v13 = v1[32];
    uint64_t v14 = v1[33];
    uint64_t v15 = v1[30];
    uint64_t v16 = v1[31];
    return v20(v12, v15, v16, v13, v14, v5, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = OUTLINED_FUNCTION_128();
    outlined init with copy of ExtractedInfo(v18, v0, (void (*)(void))type metadata accessor for SearchResult);
    type metadata accessor for ExtractedInfo(0);
    OUTLINED_FUNCTION_112();
    OUTLINED_FUNCTION_146();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v19();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 360) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void AnswerResolver.applyRules(query:result:assistantLocale:)()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[35];
  outlined init with copy of EagerResolutionService?(v0[40], v1, &demangling cache variable for type metadata for ExtractedType?);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of EagerResolutionService?(v0[40], &demangling cache variable for type metadata for ExtractedType?);
    uint64_t v3 = OUTLINED_FUNCTION_148();
    outlined destroy of EagerResolutionService?(v3, v4);
    uint64_t v5 = v0[42];
    uint64_t v6 = v0[43] + 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
    if (v6 != v5)
    {
      OUTLINED_FUNCTION_90();
      __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
      uint64_t v27 = swift_task_alloc();
      uint64_t v28 = (void *)OUTLINED_FUNCTION_131(v27);
      void *v28 = v29;
      v28[1] = AnswerResolver.applyRules(query:result:assistantLocale:);
      OUTLINED_FUNCTION_124();
      OUTLINED_FUNCTION_140();
      __asm { BRAA            X8, X16 }
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = OUTLINED_FUNCTION_128();
    outlined init with copy of ExtractedInfo(v7, (uint64_t)(v0 + 2), (void (*)(void))type metadata accessor for SearchResult);
    type metadata accessor for ExtractedInfo(0);
    OUTLINED_FUNCTION_112();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = OUTLINED_FUNCTION_208();
    outlined init with take of ExtractedInfo(v8, v9, v10);
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logging.answerSynthesis);
    uint64_t v12 = OUTLINED_FUNCTION_208();
    outlined init with copy of ExtractedInfo(v12, v13, v14);
    outlined init with copy of ExtractionRule((uint64_t)(v0 + 2), (uint64_t)(v0 + 17));
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v0[40];
    uint64_t v19 = v0[37];
    if (v17)
    {
      uint64_t v20 = v0[36];
      uint64_t v37 = v0[40];
      uint64_t v21 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315394;
      outlined init with copy of ExtractedInfo(v19, v20, (void (*)(void))type metadata accessor for ExtractedType);
      uint64_t v22 = String.init<A>(describing:)();
      v0[27] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ExtractedInfo(v19, (void (*)(void))type metadata accessor for ExtractedType);
      *(_WORD *)(v21 + 12) = 2080;
      outlined init with copy of ExtractionRule((uint64_t)(v0 + 17), (uint64_t)(v0 + 22));
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractionRule);
      uint64_t v24 = String.init<A>(describing:)();
      v0[28] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
      _os_log_impl(&dword_257DC6000, v15, v16, "Extracted: %s with rule: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();

      uint64_t v26 = v37;
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
      outlined destroy of ExtractedInfo(v19, (void (*)(void))type metadata accessor for ExtractedType);
      uint64_t v26 = v18;
    }
    outlined destroy of EagerResolutionService?(v26, &demangling cache variable for type metadata for ExtractedType?);
    uint64_t v32 = v0[38];
    uint64_t v33 = v0[29];
    outlined init with copy of ExtractedInfo(v0[31], v33, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v34 = type metadata accessor for ExtractedInfo(0);
    outlined init with take of ExtractedInfo(v32, v33 + *(int *)(v34 + 20), (void (*)(void))type metadata accessor for ExtractedType);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  }
  OUTLINED_FUNCTION_146();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_140();
  __asm { BRAA            X1, X16 }
}

uint64_t AnswerResolver.applyRules(query:result:assistantLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_71();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_135();
  a20 = v22;
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  unint64_t v25 = (void *)v22[45];
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logging.answerSynthesis);
  outlined init with copy of ExtractionRule((uint64_t)(v22 + 2), (uint64_t)(v22 + 7));
  id v27 = v25;
  id v28 = v25;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = (void *)v22[45];
  if (v31)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = (void *)swift_slowAlloc();
    a11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315394;
    outlined init with copy of ExtractionRule((uint64_t)(v22 + 7), (uint64_t)(v22 + 12));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractionRule);
    uint64_t v35 = String.init<A>(describing:)();
    *(void *)(v33 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &a11);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v22 + 7));
    *(_WORD *)(v33 + 12) = 2112;
    id v37 = v32;
    uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v33 + 14) = v38;
    *uint64_t v34 = v38;

    _os_log_impl(&dword_257DC6000, v29, v30, "Extraction rule: %s failed. %@", (uint8_t *)v33, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v22 + 7));
  }
  uint64_t v39 = v22[42];
  uint64_t v40 = v22[43] + 1;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v22 + 2));
  if (v40 == v39)
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = OUTLINED_FUNCTION_128();
    outlined init with copy of ExtractedInfo(v41, (uint64_t)(v22 + 2), (void (*)(void))type metadata accessor for SearchResult);
    type metadata accessor for ExtractedInfo(0);
    OUTLINED_FUNCTION_112();
    OUTLINED_FUNCTION_146();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_45_0();
    return v43(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14);
  }
  else
  {
    OUTLINED_FUNCTION_90();
    uint64_t v51 = v22[6];
    __swift_project_boxed_opaque_existential_1(v22 + 2, v22[5]);
    uint64_t v65 = *(void *)(v51 + 16) + **(int **)(v51 + 16);
    uint64_t v52 = swift_task_alloc();
    uint64_t v53 = (void *)OUTLINED_FUNCTION_131(v52);
    *uint64_t v53 = v54;
    v53[1] = AnswerResolver.applyRules(query:result:assistantLocale:);
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_45_0();
    return v63(v55, v56, v57, v58, v59, v60, v61, v62, v65, v51 + 16, a11, a12, a13, a14);
  }
}

uint64_t AnswerResolver.resolve(extractedResults:)()
{
  OUTLINED_FUNCTION_27();
  v1[17] = v2;
  v1[18] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v1[19] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SearchResult(0);
  v1[20] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[21] = v4;
  v1[22] = OUTLINED_FUNCTION_50_0();
  v1[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_12_0(v5);
  v1[24] = v6;
  v1[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OSSignpostError();
  v1[26] = v7;
  OUTLINED_FUNCTION_12_0(v7);
  v1[27] = v8;
  v1[28] = OUTLINED_FUNCTION_50_0();
  v1[29] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OSSignpostID();
  v1[30] = v9;
  OUTLINED_FUNCTION_12_0(v9);
  v1[31] = v10;
  v1[32] = OUTLINED_FUNCTION_50_0();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  *(void *)(v6 + 336) = v5;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t AnswerResolver.resolve(extractedResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for OSSignposter();
  *(void *)(v14 + 288) = __swift_project_value_buffer(v15, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  os_log_type_t v16 = OSSignposter.logHandle.getter();
  os_signpost_type_t v17 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v18 = 0;
    os_signpost_id_t v19 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v16, v17, v19, "AnswerResolver.resolve", "", v18, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v20 = *(void *)(v14 + 272);
  uint64_t v21 = *(void *)(v14 + 280);
  uint64_t v22 = *(void *)(v14 + 240);
  uint64_t v23 = *(void *)(v14 + 248);
  uint64_t v24 = *(void *)(v14 + 144);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v20, v21, v22);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v14 + 296) = OUTLINED_FUNCTION_160();
  unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  *(void *)(v14 + 304) = v25;
  *(void *)(v14 + 312) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v25(v21, v22);
  outlined init with copy of EagerResolutionService?(v24 + 24, v14 + 56, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
  if (*(void *)(v14 + 80))
  {
    outlined init with take of SageSearchClient((long long *)(v14 + 56), v14 + 16);
    uint64_t v26 = OUTLINED_FUNCTION_148();
    outlined init with copy of ExtractionRule(v26, v27);
    uint64_t v28 = swift_allocObject();
    *(void *)(v14 + 320) = v28;
    outlined init with take of SageSearchClient((long long *)(v14 + 96), v28 + 16);
    v74 = (char *)&async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)
        + async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v14 + 328) = v29;
    *uint64_t v29 = v14;
    v29[1] = AnswerResolver.resolve(extractedResults:);
    OUTLINED_FUNCTION_45_0();
    return v34(v30, v31, v32, v33, v34, v35, v36, v37, (void (*)(void))a9, a10, v74, a12, a13, a14);
  }
  else
  {
    uint64_t v39 = *(void *)(v14 + 136);
    outlined destroy of EagerResolutionService?(v14 + 56, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
    uint64_t v40 = *(void *)(v39 + 16);
    if (v40)
    {
      a9 = v25;
      uint64_t v41 = *(void *)(v14 + 192);
      uint64_t v42 = *(void *)(v14 + 168);
      uint64_t v43 = *(void *)(v14 + 136)
          + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      uint64_t v44 = *(void *)(v41 + 72);
      swift_bridgeObjectRetain();
      uint64_t v45 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v46 = *(void *)(v14 + 200);
        uint64_t v48 = *(void *)(v14 + 152);
        uint64_t v47 = *(void *)(v14 + 160);
        outlined init with copy of ExtractedInfo(v43, v46, (void (*)(void))type metadata accessor for ExtractedInfo);
        ExtractedInfo.buildAnswerResult()();
        __swift_storeEnumTagSinglePayload(v48, 0, 1, v47);
        outlined destroy of ExtractedInfo(v46, (void (*)(void))type metadata accessor for ExtractedInfo);
        if (__swift_getEnumTagSinglePayload(v48, 1, v47) == 1)
        {
          outlined destroy of EagerResolutionService?(*(void *)(v14 + 152), &demangling cache variable for type metadata for SearchResult?);
        }
        else
        {
          uint64_t v50 = *(void *)(v14 + 176);
          uint64_t v49 = *(void *)(v14 + 184);
          outlined init with take of ExtractedInfo(*(void *)(v14 + 152), v49, (void (*)(void))type metadata accessor for SearchResult);
          outlined init with take of ExtractedInfo(v49, v50, (void (*)(void))type metadata accessor for SearchResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v45 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v45 + 16) + 1, 1, v45, &demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>, type metadata accessor for SearchResult, (void (*)(void))type metadata accessor for SearchResult, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
          }
          unint64_t v52 = *(void *)(v45 + 16);
          unint64_t v51 = *(void *)(v45 + 24);
          if (v52 >= v51 >> 1) {
            uint64_t v45 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1, v45, &demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>, type metadata accessor for SearchResult, (void (*)(void))type metadata accessor for SearchResult, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
          }
          *(void *)(v45 + 16) = v52 + 1;
          OUTLINED_FUNCTION_137();
          outlined init with take of ExtractedInfo(v54, v45 + v53 + *(void *)(v42 + 72) * v52, (void (*)(void))type metadata accessor for SearchResult);
        }
        v43 += v44;
        --v40;
      }
      while (v40);
      swift_bridgeObjectRelease();
      unint64_t v25 = a9;
    }
    uint64_t v55 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v56 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v58 = *(void *)(v14 + 216);
      uint64_t v57 = *(void *)(v14 + 224);
      uint64_t v59 = *(void *)(v14 + 208);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v58 + 88))(v57, v59) == *MEMORY[0x263F90238])
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v61();
        uint64_t v60 = "";
      }
      uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_55();
      *(_WORD *)uint64_t v62 = 0;
      os_signpost_id_t v63 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl(&dword_257DC6000, v55, v56, v63, "AnswerResolver.resolve", v60, v62, 2u);
      OUTLINED_FUNCTION_34();
    }

    uint64_t v64 = OUTLINED_FUNCTION_208();
    ((void (*)(uint64_t))v25)(v64);
    uint64_t v73 = *(void *)(v14 + 176);
    uint64_t v75 = *(void *)(v14 + 152);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_45_0();
    return v67(v65, v66, v67, v68, v69, v70, v71, v72, (void (*)(void))a9, v73, v75, a12, a13, a14);
  }
}

uint64_t AnswerResolver.resolve(extractedResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_135();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v14 + 2));
  uint64_t v15 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v16 = v14[29];
    uint64_t v17 = v14[26];
    uint64_t v18 = v14[27];
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 88))(v16, v17) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v19();
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_129(&dword_257DC6000, v15, v20, v21, "AnswerResolver.resolve");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v22 = (void (*)(uint64_t))v14[38];

  uint64_t v23 = OUTLINED_FUNCTION_148();
  v22(v23);
  uint64_t v33 = v14[19];
  uint64_t v34 = v14[42];
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_45_0();
  return v26(v24, v25, v26, v27, v28, v29, v30, v31, a9, v33, v34, a12, a13, a14);
}

uint64_t closure #2 in AnswerResolver.resolve(extractedResults:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v3[13] = type metadata accessor for ExtractedInfo(0);
  v3[14] = swift_task_alloc();
  v3[15] = type metadata accessor for ExtractedType(0);
  v3[16] = swift_task_alloc();
  type metadata accessor for SearchResult(0);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResolvedInfo?);
  v3[19] = swift_task_alloc();
  v3[20] = type metadata accessor for ResolvedInfo();
  v3[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in AnswerResolver.resolve(extractedResults:), 0, 0);
}

uint64_t closure #2 in AnswerResolver.resolve(extractedResults:)()
{
  OUTLINED_FUNCTION_49();
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 96) + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = closure #2 in AnswerResolver.resolve(extractedResults:);
  return EagerResolutionService.resolveExtractedInfo(_:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t closure #2 in AnswerResolver.resolve(extractedResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_118();
  uint64_t v17 = v16[19];
  if (__swift_getEnumTagSinglePayload(v17, 1, v16[20]) == 1)
  {
    outlined destroy of EagerResolutionService?(v17, &demangling cache variable for type metadata for ResolvedInfo?);
    ExtractedInfo.buildAnswerResult()();
  }
  else
  {
    outlined init with take of ExtractedInfo(v17, v16[21], (void (*)(void))type metadata accessor for ResolvedInfo);
    ExtractedInfo.updateResultWith(_:)();
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logging.answerSynthesis);
    uint64_t v19 = OUTLINED_FUNCTION_19_0();
    outlined init with copy of ExtractedInfo(v19, v20, v21);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v16[21];
    uint64_t v26 = v16[17];
    if (v24)
    {
      a10 = v16 + 9;
      a12 = v16[21];
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      a11 = swift_slowAlloc();
      a13 = a11;
      *(_DWORD *)uint64_t v27 = 136642819;
      a9 = v27 + 4;
      SearchResultItem.associatedValue.getter((uint64_t)(v16 + 2));
      uint64_t v28 = v16[5];
      uint64_t v29 = v16[6];
      __swift_project_boxed_opaque_existential_1(v16 + 2, v28);
      (*(void (**)(uint64_t, uint64_t))(v29 + 48))(v28, v29);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v16 + 2));
      uint64_t v30 = OUTLINED_FUNCTION_19_0();
      v16[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ExtractedInfo(v26, (void (*)(void))type metadata accessor for SearchResult);
      _os_log_impl(&dword_257DC6000, v22, v23, "Resolved: %{sensitive}s", v27, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {

      outlined destroy of ExtractedInfo(v26, (void (*)(void))type metadata accessor for SearchResult);
    }
    outlined destroy of ExtractedInfo(v25, (void (*)(void))type metadata accessor for ResolvedInfo);
    outlined init with take of ExtractedInfo(v16[18], v16[10], (void (*)(void))type metadata accessor for SearchResult);
  }
  OUTLINED_FUNCTION_159();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_36_1();
  return v34(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t closure #2 in AnswerResolver.resolve(extractedResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_61();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_118();
  a22 = v24;
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)v24[23];
  uint64_t v28 = v24[14];
  uint64_t v29 = v24[11];
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logging.answerSynthesis);
  outlined init with copy of ExtractedInfo(v29, v28, (void (*)(void))type metadata accessor for ExtractedInfo);
  id v31 = v27;
  id v32 = v27;
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v36 = (void *)v24[23];
  if (v35)
  {
    a10 = v24 + 8;
    a11 = v24 + 7;
    uint64_t v37 = v24[16];
    a9 = v24[15];
    uint64_t v38 = v24[13];
    uint64_t v39 = v24[14];
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    a12 = swift_slowAlloc();
    a13 = a12;
    *(_DWORD *)uint64_t v40 = 136315394;
    outlined init with copy of ExtractedInfo(v39 + *(int *)(v38 + 20), v37, (void (*)(void))type metadata accessor for ExtractedType);
    uint64_t v42 = String.init<A>(describing:)();
    v24[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, &a13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ExtractedInfo(v39, (void (*)(void))type metadata accessor for ExtractedInfo);
    *(_WORD *)(v40 + 12) = 2112;
    id v44 = v36;
    uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
    v24[8] = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v41 = v45;

    _os_log_impl(&dword_257DC6000, v33, v34, "Eager resolution failed: %s - %@", (uint8_t *)v40, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v46 = v24[14];

    outlined destroy of ExtractedInfo(v46, (void (*)(void))type metadata accessor for ExtractedInfo);
  }
  ExtractedInfo.buildAnswerResult()();
  OUTLINED_FUNCTION_159();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_36_1();
  return v48(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = a4;
  *(void *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 112) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = *(void *)(v5 - 8);
  *(void *)(v4 + 64) = swift_task_alloc();
  *(void *)(v4 + 72) = swift_task_alloc();
  *(void *)(v4 + 80) = *(void *)(type metadata accessor for SearchResult(0) - 8);
  *(void *)(v4 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

{
  uint64_t v4;

  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = a4;
  *(void *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 64) = a1;
  return OUTLINED_FUNCTION_66((uint64_t)specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:));
}

{
  uint64_t v4;

  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = a4;
  *(void *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 64) = a1;
  return OUTLINED_FUNCTION_66((uint64_t)specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:));
}

{
  uint64_t v4;

  *(void *)(v4 + 168) = a3;
  *(void *)(v4 + 176) = a4;
  *(void *)(v4 + 160) = a2;
  *(unsigned char *)(v4 + 200) = a1;
  return OUTLINED_FUNCTION_66((uint64_t)specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:));
}

uint64_t specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_133(v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(Int, SearchResult)]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  uint64_t v3 = OUTLINED_FUNCTION_113();
  return MEMORY[0x270FA2158](v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [SearchResult]));
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_154(v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(Int, [SearchResult])]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  uint64_t v3 = OUTLINED_FUNCTION_57();
  return MEMORY[0x270FA2158](v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v0 + 64) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v0 + 16);
    swift_bridgeObjectRetain_n();
    specialized MutableCollection<>.sort(by:)(&v11, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
    OUTLINED_FUNCTION_153();
    uint64_t v1 = v11;
    *(void *)(v0 + 16) = v11;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_116();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = v11;
    uint64_t v4 = *(void *)(v11 + 16);
    uint64_t v5 = 40;
    do
    {
      uint64_t v6 = *(void *)(v1 + v5);
      uint64_t v11 = v3;
      uint64_t v7 = *(void *)(v3 + 24);
      swift_bridgeObjectRetain();
      if (v4 >= v7 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v3 = v11;
      }
      *(void *)(v3 + 16) = v4 + 1;
      *(void *)(v3 + 8 * v4 + 32) = v6;
      v5 += 16;
      ++v4;
      --v2;
    }
    while (v2);
    OUTLINED_FUNCTION_153();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = OUTLINED_FUNCTION_51_0();
  return v9(v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_27();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 112) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  *(void *)(v0 + 48) = v5;
  OUTLINED_FUNCTION_12_0(v5);
  *(void *)(v0 + 56) = v6;
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_50_0();
  *(void *)(v0 + 72) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v7);
  *(void *)(v0 + 80) = v8;
  *(void *)(v0 + 88) = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_133(v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(Int, SearchResult)]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  uint64_t v3 = OUTLINED_FUNCTION_113();
  return MEMORY[0x270FA2158](v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, (String, [String])));
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_154(v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(Int, (String, [String]))]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  uint64_t v3 = OUTLINED_FUNCTION_57();
  return MEMORY[0x270FA2158](v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  long long v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, ChatMessageRecord));
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 184) = v2;
  uint64_t v3 = *(_OWORD *)(v0 + 160);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(Int, ChatMessageRecord)]);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v4;
  *uint64_t v4 = v0;
  v4[1] = specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  uint64_t v5 = OUTLINED_FUNCTION_57();
  return MEMORY[0x270FA2158](v5);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_61();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_118();
  a22 = v24;
  uint64_t v27 = *(void *)(v24 + 16);
  if ((*(unsigned char *)(v24 + 112) & 1) == 0)
  {
    a12 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain_n();
    specialized MutableCollection<>.sort(by:)(&a12);
    swift_bridgeObjectRelease_n();
    uint64_t v27 = a12;
    *(void *)(v24 + 16) = a12;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    a9 = v24 + 16;
    uint64_t v29 = *(void *)(v24 + 80);
    uint64_t v30 = *(void *)(v24 + 56);
    a11 = *(void *)(v24 + 48);
    a12 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_116();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    OUTLINED_FUNCTION_137();
    a10 = v27;
    uint64_t v32 = v27 + v31;
    uint64_t v33 = *(void *)(v30 + 72);
    uint64_t v34 = a12;
    do
    {
      uint64_t v35 = *(void *)(v24 + 88);
      uint64_t v37 = *(void *)(v24 + 64);
      uint64_t v36 = *(void *)(v24 + 72);
      outlined init with copy of EagerResolutionService?(v32, v36, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v38 = *(int *)(a11 + 48);
      uint64_t v39 = v37 + v38;
      outlined init with copy of ExtractedInfo(v36 + v38, v39, (void (*)(void))type metadata accessor for SearchResult);
      outlined init with take of ExtractedInfo(v39, v35, (void (*)(void))type metadata accessor for SearchResult);
      outlined destroy of EagerResolutionService?(v36, &demangling cache variable for type metadata for (Int, SearchResult));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_115();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v34 = a12;
      }
      unint64_t v40 = *(void *)(v34 + 16);
      if (v40 >= *(void *)(v34 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v34 = a12;
      }
      *(void *)(v34 + 16) = v40 + 1;
      OUTLINED_FUNCTION_137();
      outlined init with take of ExtractedInfo(v42, v34 + v41 + *(void *)(v29 + 72) * v40, (void (*)(void))type metadata accessor for SearchResult);
      v32 += v33;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_36_1();
  return v45(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16);
}

{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  long long *v30;
  uint64_t v31;
  long long *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_61();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_118();
  a22 = v24;
  uint64_t v27 = *(void *)(v24 + 152);
  if ((*(unsigned char *)(v24 + 200) & 1) == 0)
  {
    a12 = *(void *)(v24 + 152);
    swift_bridgeObjectRetain_n();
    specialized MutableCollection<>.sort(by:)(&a12, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
    OUTLINED_FUNCTION_153();
    uint64_t v27 = a12;
    *(void *)(v24 + 152) = a12;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v29 = v24 + 16;
    a9 = v24 + 152;
    uint64_t v30 = (long long *)(v24 + 112);
    a12 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_116();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    a10 = v27;
    a11 = v24;
    uint64_t v31 = v27 + 32;
    uint64_t v32 = (long long *)(v24 + 72);
    uint64_t v33 = v24 + 24;
    uint64_t v34 = a12;
    do
    {
      outlined init with copy of EagerResolutionService?(v31, v29, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      outlined init with copy of ExtractionRule(v33, (uint64_t)v32);
      outlined init with take of SageSearchClient(v32, (uint64_t)v30);
      outlined destroy of EagerResolutionService?(v29, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_115();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v34 = a12;
      }
      uint64_t v35 = *(void *)(v34 + 16);
      if (v35 >= *(void *)(v34 + 24) >> 1)
      {
        OUTLINED_FUNCTION_144();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v34 = a12;
      }
      *(void *)(v34 + 16) = v35 + 1;
      outlined init with take of SageSearchClient(v30, v34 + 40 * v35 + 32);
      v31 += 48;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_36_1();
  return v38(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_61();
  a22 = v24;
  a23 = v25;
  OUTLINED_FUNCTION_118();
  a21 = v23;
  uint64_t v26 = *(void *)(v23 + 16);
  if ((*(unsigned char *)(v23 + 64) & 1) == 0)
  {
    a11 = *(void *)(v23 + 16);
    swift_bridgeObjectRetain_n();
    specialized MutableCollection<>.sort(by:)(&a11, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
    OUTLINED_FUNCTION_153();
    uint64_t v26 = a11;
    *(void *)(v23 + 16) = a11;
  }
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    a11 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_116();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v28 = 0;
    uint64_t v29 = a11;
    unint64_t v30 = *(void *)(a11 + 16);
    uint64_t v31 = 24 * v30;
    do
    {
      uint64_t v32 = *(void *)(v26 + v28 + 40);
      a9 = *(_OWORD *)(v26 + v28 + 48);
      a11 = v29;
      unint64_t v33 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30 >= v33 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v29 = a11;
      }
      *(void *)(v29 + 16) = v30 + 1;
      uint64_t v34 = v29 + v31;
      *(void *)(v34 + 32) = v32;
      *(_OWORD *)(v34 + 40) = a9;
      v31 += 24;
      v28 += 32;
      ++v30;
      --v27;
    }
    while (v27);
    OUTLINED_FUNCTION_153();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_36_1();
  return v37(v35, v36, v37, v38, v39, v40, v41, v42, a9, *((void *)&a9 + 1), a10, a11, a12, a13, a14, a15);
}

uint64_t AnswerResolver.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of EagerResolutionService?(v0 + 24, (uint64_t *)&demangling cache variable for type metadata for EagerResolutionService?);
  swift_release();
  return v0;
}

uint64_t AnswerResolver.__deallocating_deinit()
{
  AnswerResolver.deinit();
  return MEMORY[0x270FA0228](v0, 72, 7);
}

uint64_t protocol witness for AnswerResolvable.extractInfo(query:results:assistantLocale:) in conformance AnswerResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 128)
                                                                   + **(int **)(**(void **)v4 + 128));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = protocol witness for AnswerResolvable.extractInfo(query:results:assistantLocale:) in conformance AnswerResolver;
  return v12(a1, a2, a3, a4);
}

uint64_t protocol witness for AnswerResolvable.extractInfo(query:results:assistantLocale:) in conformance AnswerResolver()
{
  OUTLINED_FUNCTION_27();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_149();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t protocol witness for AnswerResolvable.resolve(extractedResults:) in conformance AnswerResolver(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 144) + **(int **)(**(void **)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = dispatch thunk of AnswerResolvable.resolve(extractedResults:);
  return v6(a1);
}

uint64_t ComposedAnswer.renderOption.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_19_0();
}

uint64_t specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for ExtractedInfo(0) - 8);
  v4[13] = v5;
  v4[14] = *(void *)(v5 + 64);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: ExtractedInfo));
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: ExtractedInfo)?);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

{
  void *v4;
  uint64_t v6;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

{
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for SearchResult(0) - 8);
  v4[13] = v5;
  v4[14] = *(void *)(v5 + 64);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult)?);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

{
  void *v4;
  uint64_t v6;

  v4[34] = a3;
  v4[35] = a4;
  v4[32] = a1;
  v4[33] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

{
  void *v4;
  uint64_t v6;

  v4[34] = a3;
  v4[35] = a4;
  v4[32] = a1;
  v4[33] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:), 0, 0);
}

#error "257DE0668: call analysis failed (funcsize=170)"

void specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v23 = *(void *)(v1 + 16);
  if (v23)
  {
    uint64_t v2 = type metadata accessor for TaskPriority();
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v22 = v2;
    do
    {
      uint64_t v4 = *(void *)(v0 + 104);
      uint64_t v5 = *(void *)(v0 + 88);
      uint64_t v6 = *(void *)(v0 + 96);
      uint64_t v7 = *(void *)(v1 + 32 + 8 * v3);
      __swift_storeEnumTagSinglePayload(*(void *)(v0 + 112), 1, 1, v2);
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      v8[4] = v5;
      v8[5] = v6;
      v8[6] = v7;
      v8[7] = v3;
      uint64_t v9 = OUTLINED_FUNCTION_208();
      outlined init with copy of EagerResolutionService?(v9, v10, &demangling cache variable for type metadata for TaskPriority?);
      LODWORD(v4) = __swift_getEnumTagSinglePayload(v4, 1, v2);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v4 == 1)
      {
        outlined destroy of EagerResolutionService?(*(void *)(v0 + 104), &demangling cache variable for type metadata for TaskPriority?);
      }
      else
      {
        TaskPriority.rawValue.getter();
        OUTLINED_FUNCTION_148();
        OUTLINED_FUNCTION_16_1();
        v11();
      }
      if (v8[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v14 = 0;
      }
      uint64_t v15 = **(void **)(v0 + 72);
      uint64_t v16 = OUTLINED_FUNCTION_141();
      *(void *)(v16 + 16) = &async function pointer to partial apply for specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
      *(void *)(v16 + 24) = v8;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [SearchResult]));
      uint64_t v17 = v14 | v12;
      if (v14 | v12)
      {
        uint64_t v17 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v12;
        *(void *)(v0 + 40) = v14;
      }
      uint64_t v2 = v22;
      ++v3;
      uint64_t v18 = *(void *)(v0 + 112);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v17;
      *(void *)(v0 + 64) = v15;
      swift_task_create();
      swift_release();
      outlined destroy of EagerResolutionService?(v18, &demangling cache variable for type metadata for TaskPriority?);
    }
    while (v23 != v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v19;
  *uint64_t v19 = v0;
  v19[1] = specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  OUTLINED_FUNCTION_140();
  __asm { BR              X1 }
}

uint64_t specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_51_0();
  return v4(v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_51_0();
  return v4(v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *(void **)(v3 + 16);
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  *uint64_t v4 = v2;
  OUTLINED_FUNCTION_13();
  return v7();
}

#error "257DE0F50: call analysis failed (funcsize=170)"

uint64_t specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_2();
  uint64_t v11 = *v10;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v12 = v11;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_139();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

#error "257DE1434: call analysis failed (funcsize=137)"

#error "257DE1728: call analysis failed (funcsize=137)"

uint64_t specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[2] = a1;
  v7[3] = a7;
  type metadata accessor for SearchResult(0);
  uint64_t v10 = swift_task_alloc();
  v7[4] = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[5] = v11;
  void *v11 = v7;
  v11[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return v13(v10, a6);
}

{
  void *v7;
  uint64_t v10;
  void *v11;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v7[2] = a1;
  v7[3] = a7;
  type metadata accessor for SearchResult(0);
  uint64_t v10 = swift_task_alloc();
  v7[4] = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[5] = v11;
  void *v11 = v7;
  v11[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return v13(v10, a6);
}

{
  void *v7;
  void *v9;
  int *v11;
  uint64_t v12;

  v7[7] = a1;
  v7[8] = a7;
  uint64_t v11 = (int *)((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  v7[9] = v9;
  *uint64_t v9 = v7;
  v9[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return ((uint64_t (*)(void *, uint64_t))v11)(v7 + 2, a6);
}

{
  uint64_t v7;
  void *v14;
  uint64_t v16;

  *(void *)(v7 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v14;
  *uint64_t v14 = v7;
  v14[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5, a6, a7);
}

uint64_t specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 32), *(void *)(v0 + 24));
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = (uint64_t)v3
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult))
              + 48);
  *uint64_t v3 = v1;
  outlined init with take of ExtractedInfo(v2, v4, (void (*)(void))type metadata accessor for SearchResult);
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v5();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void, void, void, void))(v0 + 8))(*(void *)(v0 + 40), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_27();
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t *v1 = *(void *)(v0 + 64);
  outlined init with take of SageSearchClient((long long *)(v0 + 16), (uint64_t)(v1 + 1));
  OUTLINED_FUNCTION_13();
  return v2();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  OUTLINED_FUNCTION_49();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *(void **)(v5 + 16);
  uint64_t v7 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  *uint64_t v6 = v4;
  v6[1] = v2;
  OUTLINED_FUNCTION_13();
  return v9();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t (*v13)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_2();
  uint64_t v10 = *(void **)(v9 + 16);
  uint64_t v11 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v12 = v11;
  swift_task_dealloc();
  *uint64_t v10 = v8;
  v10[1] = v6;
  v10[2] = v4;
  v10[3] = v2;
  OUTLINED_FUNCTION_13();
  return v13();
}

uint64_t specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a6;
  v6[2] = a5;
  uint64_t v9 = (int *)((char *)a3 + *a3);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[5] = v7;
  *uint64_t v7 = v6;
  v7[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return ((uint64_t (*)(void *, void *))v9)(v6 + 3, v6 + 2);
}

{
  uint64_t v6;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  *(void *)(v6 + 40) = a6;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 48) = v8;
  *uint64_t v8 = v6;
  v8[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return v10(v6 + 16, a5);
}

uint64_t specialized TaskGroup.oms_results.getter(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult)?);
  v1[6] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(Int, SearchResult)>.Iterator);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized TaskGroup.oms_results.getter, 0, 0);
}

{
  void *v1;
  uint64_t v2;
  uint64_t v4;

  v1[4] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(Int, [SearchResult])>.Iterator);
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized TaskGroup.oms_results.getter, 0, 0);
}

{
  void *v1;
  uint64_t v2;
  uint64_t v4;

  v1[6] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(Int, (String, [String]))>.Iterator);
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized TaskGroup.oms_results.getter, 0, 0);
}

{
  void *v1;
  uint64_t v2;
  uint64_t v4;

  v1[14] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(Int, ChatMessageRecord)>.Iterator);
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](specialized TaskGroup.oms_results.getter, 0, 0);
}

uint64_t specialized TaskGroup.oms_results.getter()
{
  OUTLINED_FUNCTION_27();
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 80) = MEMORY[0x263F8EE78];
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_101(v1);
  *uint64_t v2 = v3;
  v2[1] = specialized TaskGroup.oms_results.getter;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA1E60]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = v0[6];
  if (__swift_getEnumTagSinglePayload(v1, 1, v0[3]) == 1)
  {
    OUTLINED_FUNCTION_28();
    v2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v4 = v0[10];
    return v3(v4);
  }
  else
  {
    outlined init with take of EagerResolutionService?(v1, v0[5], &demangling cache variable for type metadata for (Int, SearchResult));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = v0[10];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_115();
      uint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8 >= *(void *)(v7 + 24) >> 1)
    {
      OUTLINED_FUNCTION_144();
      uint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    uint64_t v10 = v0[4];
    uint64_t v9 = v0[5];
    *(void *)(v7 + 16) = v8 + 1;
    outlined init with take of EagerResolutionService?(v9, v7+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v8, &demangling cache variable for type metadata for (Int, SearchResult));
    v0[10] = v7;
    uint64_t v11 = swift_task_alloc();
    uint64_t v12 = (void *)OUTLINED_FUNCTION_101(v11);
    *uint64_t v12 = v13;
    v12[1] = specialized TaskGroup.oms_results.getter;
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA1E60]();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [SearchResult]));
  OUTLINED_FUNCTION_143();
  *(void *)(v0 + 64) = MEMORY[0x263F8EE78];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = specialized TaskGroup.oms_results.getter;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA1E60]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void (*v8)(void);
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  if (v1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v0[8];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_115();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v4 = v11;
    }
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5 >= *(void *)(v4 + 24) >> 1)
    {
      OUTLINED_FUNCTION_144();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v4 = v12;
    }
    *(void *)(v4 + 16) = v5 + 1;
    uint64_t v6 = v4 + 16 * v5;
    *(void *)(v6 + 32) = v2;
    *(void *)(v6 + 40) = v1;
    v0[8] = v4;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    *uint64_t v7 = v0;
    v7[1] = specialized TaskGroup.oms_results.getter;
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA1E60]();
  }
  else
  {
    OUTLINED_FUNCTION_28();
    v8();
    swift_task_dealloc();
    OUTLINED_FUNCTION_149();
    uint64_t v10 = v0[8];
    return v9(v10);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, (String, [String])));
  OUTLINED_FUNCTION_143();
  *(void *)(v0 + 80) = MEMORY[0x263F8EE78];
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_101(v1);
  *uint64_t v2 = v3;
  v2[1] = specialized TaskGroup.oms_results.getter;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA1E60]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  unint64_t v3;
  long long v4;
  long long v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  long long v16;
  long long v17;
  uint64_t v18;

  OUTLINED_FUNCTION_78();
  if (*(void *)(v0 + 32))
  {
    uint64_t v16 = *(_OWORD *)(v0 + 32);
    uint64_t v17 = *(_OWORD *)(v0 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void *)(v0 + 80);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_115();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v2 = v13;
    }
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v5 = v16;
    uint64_t v4 = v17;
    if (v3 >= *(void *)(v2 + 24) >> 1)
    {
      OUTLINED_FUNCTION_144();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v5 = v16;
      uint64_t v4 = v17;
      uint64_t v2 = v14;
    }
    *(void *)(v2 + 16) = v3 + 1;
    uint64_t v6 = v2 + 32 * v3;
    *(_OWORD *)(v6 + 32) = v4;
    *(_OWORD *)(v6 + 48) = v5;
    *(void *)(v0 + 80) = v2;
    uint64_t v7 = swift_task_alloc();
    uint64_t v8 = (void *)OUTLINED_FUNCTION_101(v7);
    *uint64_t v8 = v9;
    v8[1] = specialized TaskGroup.oms_results.getter;
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA1E60]();
  }
  else
  {
    OUTLINED_FUNCTION_28();
    v10();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v12 = *(void *)(v0 + 80);
    return v11(v12);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  OUTLINED_FUNCTION_49();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, ChatMessageRecord));
  OUTLINED_FUNCTION_143();
  *(void *)(v0 + 144) = MEMORY[0x263F8EE78];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  void *v1 = v0;
  v1[1] = specialized TaskGroup.oms_results.getter;
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA1E60]();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  uint64_t v0;
  long long v1;
  char isUniquelyReferenced_nonNull_native;
  char *v3;
  unint64_t v4;
  char *v5;
  long long v6;
  long long v7;
  void *v8;
  void (*v9)(void);
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  int64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;

  OUTLINED_FUNCTION_49();
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 80) = v1;
    *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v3 = *(char **)(v0 + 144);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v12 = (char *)OUTLINED_FUNCTION_115();
      uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v13, v14, v15);
    }
    uint64_t v4 = *((void *)v3 + 2);
    if (v4 >= *((void *)v3 + 3) >> 1)
    {
      OUTLINED_FUNCTION_144();
      uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v16, v17, v18, v19);
    }
    *((void *)v3 + 2) = v4 + 1;
    uint64_t v5 = &v3[48 * v4];
    uint64_t v6 = *(_OWORD *)(v0 + 64);
    uint64_t v7 = *(_OWORD *)(v0 + 96);
    *((_OWORD *)v5 + 3) = *(_OWORD *)(v0 + 80);
    *((_OWORD *)v5 + 4) = v7;
    *((_OWORD *)v5 + 2) = v6;
    *(void *)(v0 + 144) = v3;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    *uint64_t v8 = v0;
    v8[1] = specialized TaskGroup.oms_results.getter;
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA1E60]();
  }
  else
  {
    OUTLINED_FUNCTION_28();
    v9();
    swift_task_dealloc();
    OUTLINED_FUNCTION_149();
    uint64_t v11 = *(void *)(v0 + 144);
    return v10(v11);
  }
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_62();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (key: String, value: String));
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (_:_:_:));
}

{
  return specialized static Array._allocateUninitialized(_:)(a1);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (offset: Int, element: Float));
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (String, CSSearchableItem));
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (String, [String]));
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for MessageRecord);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1);
}

{
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_62();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_53();
    if (v3)
    {
      v1(0);
      *(void *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = v2;
    }
    v1(0);
    return OUTLINED_FUNCTION_168();
  }
  return result;
}

{
  return specialized static Array._allocateUninitialized(_:)(a1);
}

{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_62();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_53();
    if (v3)
    {
      __swift_instantiateConcreteTypeFromMangledName(v1);
      *(void *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = v2;
    }
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(v1);
    OUTLINED_FUNCTION_53_0(v4);
    return OUTLINED_FUNCTION_168();
  }
  return result;
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_62();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5TQ0_()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v3();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch17ChatMessageRecord_pt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch17ChatMessageRecord_pt_Tg5TQ0_;
  return v6(a1);
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent>, MEMORY[0x263F5CFD8], MEMORY[0x263F5CFD8], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_GeoObjectComponent>, MEMORY[0x263F5CED0], MEMORY[0x263F5CED0], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_RenderedDialogComponent>, MEMORY[0x263F5D058], MEMORY[0x263F5D058], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_DomainObjectComponent>, MEMORY[0x263F5CFD0], MEMORY[0x263F5CFD0], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return MEMORY[0x270F9DBA0]();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(uint64_t *a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v9 = *v4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v9;
  if (!result)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, v9, a1, a2, a3, a4);
    *uint64_t v4 = result;
  }
  return result;
}

uint64_t specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t a1)
{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, &demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent>, MEMORY[0x263F5CFD8], MEMORY[0x263F5CFD8], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, &demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_GeoObjectComponent>, MEMORY[0x263F5CED0], MEMORY[0x263F5CED0], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, &demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_RenderedDialogComponent>, MEMORY[0x263F5D058], MEMORY[0x263F5D058], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, &demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_DomainObjectComponent>, MEMORY[0x263F5CFD0], MEMORY[0x263F5CFD0], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

uint64_t specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t result, uint64_t *a2, uint64_t (*a3)(void), void (*a4)(void), void (*a5)(uint64_t, uint64_t, unint64_t))
{
  unint64_t v6 = *(void *)(*v5 + 24);
  if (result + 1 > (uint64_t)(v6 >> 1))
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, result + 1, 1, *v5, a2, a3, a4, a5);
    *uint64_t v5 = result;
  }
  return result;
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  OUTLINED_FUNCTION_49_0();
  if (v3)
  {
    OUTLINED_FUNCTION_60();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_93();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (const void *)OUTLINED_FUNCTION_204();
    OUTLINED_FUNCTION_158(v7);
    OUTLINED_FUNCTION_114(v8);
  }
  if (v1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_126();
    v0(v9);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_111();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11, v12, v13, v14);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_49_0();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_204();
    OUTLINED_FUNCTION_158(v8);
    OUTLINED_FUNCTION_114(v9);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_126();
    v1(v10);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_110();
    v0(v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_49_0();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_204();
    OUTLINED_FUNCTION_158(v8);
    OUTLINED_FUNCTION_114(v9);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_126();
    v1(v10);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_110();
    v0(v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t *v6;
  const void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  OUTLINED_FUNCTION_49_0();
  if (v3)
  {
    OUTLINED_FUNCTION_60();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_93();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (const void *)swift_allocObject();
    uint64_t v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_152(v8 - 32);
  }
  if (v1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_126();
    v0(v9);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_111();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11, v12, v13, v14);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_49_0();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)swift_allocObject();
    uint64_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_152(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_126();
    v1(v10);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_110();
    v0(v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_49_0();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_204();
    OUTLINED_FUNCTION_158(v8);
    OUTLINED_FUNCTION_114(v9);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_126();
    v1(v10);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_110();
    v0(v11);
  }
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>, type metadata accessor for SearchResult, (void (*)(void))type metadata accessor for SearchResult, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Searchfoundation_Card>, MEMORY[0x263F5CB50], MEMORY[0x263F5CB50], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<GlobalItem>, (uint64_t (*)(void))type metadata accessor for GlobalItem, (void (*)(void))type metadata accessor for GlobalItem, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<MemoryCreationQUParseSortOrder>, MEMORY[0x263F5B870], MEMORY[0x263F5B870], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<MemoryCreationQUResult>, (uint64_t (*)(void))type metadata accessor for MemoryCreationQUResult, (void (*)(void))type metadata accessor for MemoryCreationQUResult, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<SearchEntity>, type metadata accessor for SearchEntity, (void (*)(void))type metadata accessor for SearchEntity, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent>, MEMORY[0x263F5CFD8], MEMORY[0x263F5CFD8], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Searchfoundation_CardSection>, MEMORY[0x263F5CBA0], MEMORY[0x263F5CBA0], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Photo>, type metadata accessor for Photo, (void (*)(void))type metadata accessor for Photo, (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<IntelligenceFlowSearchToolTelemetry.SearchToolGlobalSearchResult>, MEMORY[0x263F4F110], MEMORY[0x263F4F110], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<IntelligenceFlowSearchToolTelemetry.SearchToolGeneralSearchResult>, MEMORY[0x263F4F170], MEMORY[0x263F4F170], (void (*)(uint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(uint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    OUTLINED_FUNCTION_60();
    if (v14 != v15)
    {
      OUTLINED_FUNCTION_93();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v23 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v18 = a6(0);
  OUTLINED_FUNCTION_12_0(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  size_t v24 = _swift_stdlib_malloc_size(v23);
  if (!v20 || (v24 - v22 == 0x8000000000000000 ? (BOOL v25 = v20 == -1) : (BOOL v25 = 0), v25))
  {
LABEL_23:
    OUTLINED_FUNCTION_17_0();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  a6(0);
  OUTLINED_FUNCTION_137();
  unint64_t v27 = (unint64_t)v23 + v26;
  if (a1)
  {
    a8(a4 + v26, v16, v27);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0, v16, v27, a4, a7);
  }
  return (uint64_t)v23;
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t, char *);
  char v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  size_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t result;

  OUTLINED_FUNCTION_49_0();
  if (v6)
  {
    OUTLINED_FUNCTION_60();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_93();
      if (v8)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (!v11)
  {
    uint64_t v17 = (char *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(v5);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_12_0(v12);
  char v14 = *(void *)(v13 + 72);
  uint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v14 || (v18 - v16 == 0x8000000000000000 ? (uint64_t v19 = v14 == -1) : (uint64_t v19 = 0), v19))
  {
LABEL_23:
    OUTLINED_FUNCTION_17_0();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_152(v18 - v16);
LABEL_18:
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_53_0(v20);
  OUTLINED_FUNCTION_137();
  if (v3)
  {
    v2(v0 + v21, v10, &v17[v21]);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    unint64_t v22 = OUTLINED_FUNCTION_111();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v22, v23, v24, v25, v26);
  }
  return (uint64_t)v17;
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  return MEMORY[0x270F9EA48]();
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, String));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [SearchResult]));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, (String, [String])));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, ChatMessageRecord));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SFCollectionStyleGrid, Int));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    unint64_t v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_147();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_96();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_157();
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  unint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 8 * a1 + 32;
  unint64_t v7 = a3 + 8 * v5;
  if (v6 >= v7 || v6 + 8 * v5 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    OUTLINED_FUNCTION_187();
    swift_bridgeObjectRelease();
    return v7;
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_96();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_157();
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  unint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v5;
  if (v6 >= v7 || v6 + 40 * v5 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    OUTLINED_FUNCTION_187();
    swift_bridgeObjectRelease();
    return v7;
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_96();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_157();
  __break(1u);
  return result;
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
    goto LABEL_11;
  }
  a5(0);
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_147();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_96();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_157();
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in OSLogArguments.append<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed () -> (@unowned Int)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t outlined init with copy of ExtractedInfo(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t sub_257DE5E90()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t partial apply for closure #2 in AnswerResolver.resolve(extractedResults:)()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_53();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_26_1(v3);
  *uint64_t v4 = v5;
  v4[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return closure #2 in AnswerResolver.resolve(extractedResults:)(v2, v0, v1 + 16);
}

uint64_t outlined copy of ResultsDialog.RenderOption(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t dispatch thunk of AnswerResolvable.extractInfo(query:results:assistantLocale:)()
{
  OUTLINED_FUNCTION_127();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  void *v1 = v2;
  v1[1] = dispatch thunk of AnswerResolvable.extractInfo(query:results:assistantLocale:);
  uint64_t v3 = OUTLINED_FUNCTION_92();
  return v4(v3);
}

uint64_t dispatch thunk of AnswerResolvable.resolve(extractedResults:)()
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 16) + **(int **)(v0 + 16));
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_44_0(v6);
  *uint64_t v7 = v8;
  v7[1] = dispatch thunk of AnswerResolvable.resolve(extractedResults:);
  return v10(v5, v3, v1);
}

uint64_t type metadata accessor for AnswerResolver()
{
  return self;
}

uint64_t method lookup function for AnswerResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnswerResolver);
}

uint64_t dispatch thunk of AnswerResolver.enabledRules.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AnswerResolver.__allocating_init(resolutionService:extractionRules:featureFlagService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of AnswerResolver.__allocating_init(resolutionService:featureFlagService:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AnswerResolver.extractInfo(query:results:assistantLocale:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_209();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 128) + **(int **)(v8 + 128));
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_44_0(v9);
  *uint64_t v10 = v11;
  v10[1] = dispatch thunk of AnswerResolver.extractInfo(query:results:assistantLocale:);
  return v13(v7, v5, v3, v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_150();
  return v4(v3);
}

uint64_t dispatch thunk of AnswerResolver.applyRules(query:result:assistantLocale:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_209();
  char v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 136)
                                                                            + **(int **)(v10 + 136));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_26_1(v11);
  *uint64_t v12 = v13;
  v12[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return v15(v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of AnswerResolver.resolve(extractedResults:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_209();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 144) + **(int **)(v2 + 144));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_44_0(v3);
  *uint64_t v4 = v5;
  v4[1] = dispatch thunk of AnswerResolver.resolve(extractedResults:);
  return v7(v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_51_0();
  return v4(v3);
}

uint64_t destroy for ComposedAnswer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if ((unint64_t)(result - 1) >= 3)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ComposedAnswer(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  if ((unint64_t)(v4 - 1) >= 3)
  {
    a1[1] = *v3;
    a1[2] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *(_OWORD *)v3;
  }
  return a1;
}

void *assignWithCopy for ComposedAnswer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[2] - 1;
  if ((unint64_t)(a1[2] - 1) >= 3)
  {
    if (v4 >= 3)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of EagerResolutionService?((uint64_t)(a1 + 1), &demangling cache variable for type metadata for (disambiguationDialog: String?));
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for ComposedAnswer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = a2 + 1;
  if ((unint64_t)(a1[2] - 1) >= 3)
  {
    uint64_t v5 = a2[2];
    if ((unint64_t)(v5 - 1) >= 3)
    {
      a1[1] = *v4;
      a1[2] = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of EagerResolutionService?((uint64_t)(a1 + 1), &demangling cache variable for type metadata for (disambiguationDialog: String?));
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for ComposedAnswer(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComposedAnswer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposedAnswer()
{
  return &type metadata for ComposedAnswer;
}

void specialized MutableCollection<>.sort(by:)(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  OUTLINED_FUNCTION_53_0(v2);
  uint64_t v4 = v3;
  uint64_t v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v5 = v6;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  v8[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8[1] = v7;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v8);
  *a1 = v5;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                 - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v3;
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  OUTLINED_FUNCTION_1();
  uint64_t v129 = v5;
  uint64_t v130 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v126 = (uint64_t)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v136 = (uint64_t)&v120 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v133 = (uint64_t *)((char *)&v120 - v11);
  MEMORY[0x270FA5388](v10);
  v132 = (uint64_t *)((char *)&v120 - v12);
  Swift::Int v13 = a1[1];
  Swift::Int v14 = _minimumMergeRunLength(_:)(v13);
  if (v14 >= v13)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      if (v13) {
        specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v13, 1, a1);
      }
      return;
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  Swift::Int v15 = v14;
  uint64_t v122 = specialized static Array._allocateUninitialized(_:)(v13 / 2);
  uint64_t v123 = v13;
  unint64_t v128 = v16;
  if (v13 <= 0)
  {
    uint64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v61 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_102:
    if (v61 < 2) {
      goto LABEL_116;
    }
    uint64_t v114 = *a1;
    while (1)
    {
      unint64_t v115 = v61 - 2;
      if (v61 < 2) {
        break;
      }
      if (!v114) {
        goto LABEL_148;
      }
      uint64_t v116 = *(void *)&v18[16 * v115 + 32];
      uint64_t v117 = *(void *)&v18[16 * v61 + 24];
      specialized _merge<A>(low:mid:high:buffer:by:)(v114 + *(void *)(v129 + 72) * v116, v114 + *(void *)(v129 + 72) * *(void *)&v18[16 * v61 + 16], v114 + *(void *)(v129 + 72) * v117, v128);
      if (v2) {
        goto LABEL_114;
      }
      if (v117 < v116) {
        goto LABEL_135;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew()();
      }
      if (v115 >= *((void *)v18 + 2)) {
        goto LABEL_136;
      }
      v118 = &v18[16 * v115 + 32];
      *(void *)v118 = v116;
      *((void *)v118 + 1) = v117;
      unint64_t v119 = *((void *)v18 + 2);
      if (v61 > v119) {
        goto LABEL_137;
      }
      memmove(&v18[16 * v61 + 16], &v18[16 * v61 + 32], 16 * (v119 - v61));
      *((void *)v18 + 2) = v119 - 1;
      unint64_t v61 = v119 - 1;
      if (v119 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  Swift::Int v121 = v15;
  uint64_t v17 = 0;
  uint64_t v18 = (char *)MEMORY[0x263F8EE78];
  Swift::Int v19 = v13;
  v135 = a1;
  while (1)
  {
    uint64_t v20 = v17;
    Swift::Int v21 = v17 + 1;
    uint64_t v127 = v17;
    if (v17 + 1 < v19)
    {
      uint64_t v22 = *a1;
      uint64_t v23 = *(void *)(v129 + 72);
      uint64_t v24 = *a1 + v23 * v21;
      Swift::Int v137 = v19;
      BOOL v25 = v132;
      outlined init with copy of EagerResolutionService?(v24, (uint64_t)v132, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v26 = v133;
      outlined init with copy of EagerResolutionService?(v22 + v23 * v20, (uint64_t)v133, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v134 = *v25;
      uint64_t v131 = *v26;
      outlined destroy of EagerResolutionService?((uint64_t)v26, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v27 = (uint64_t)v25;
      Swift::Int v19 = v137;
      outlined destroy of EagerResolutionService?(v27, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v125 = v22;
      uint64_t v138 = v23;
      if (v20 + 2 >= v19)
      {
        Swift::Int v21 = v20 + 2;
      }
      else
      {
        uint64_t v120 = v2;
        v124 = v18;
        uint64_t v28 = v23 * v21;
        uint64_t v29 = v22;
        Swift::Int v21 = v20 + 2;
        uint64_t v30 = v23 * (v20 + 2);
        while (1)
        {
          uint64_t v31 = v132;
          int v32 = v131 >= v134;
          outlined init with copy of EagerResolutionService?(v29 + v30, (uint64_t)v132, &demangling cache variable for type metadata for (Int, SearchResult));
          unint64_t v33 = v133;
          outlined init with copy of EagerResolutionService?(v29 + v28, (uint64_t)v133, &demangling cache variable for type metadata for (Int, SearchResult));
          int v34 = *v33 < *v31;
          outlined destroy of EagerResolutionService?((uint64_t)v33, &demangling cache variable for type metadata for (Int, SearchResult));
          outlined destroy of EagerResolutionService?((uint64_t)v31, &demangling cache variable for type metadata for (Int, SearchResult));
          if (v32 == v34) {
            break;
          }
          uint64_t v23 = v138;
          v29 += v138;
          if (++v21 >= v137)
          {
            Swift::Int v19 = v137;
            Swift::Int v21 = v137;
            uint64_t v18 = v124;
            uint64_t v22 = v125;
            uint64_t v2 = v120;
            uint64_t v20 = v127;
            goto LABEL_12;
          }
        }
        uint64_t v18 = v124;
        uint64_t v22 = v125;
        uint64_t v2 = v120;
        uint64_t v20 = v127;
        Swift::Int v19 = v137;
        uint64_t v23 = v138;
      }
LABEL_12:
      if (v131 < v134) {
        goto LABEL_29;
      }
      if (v21 < v20) {
        goto LABEL_141;
      }
      if (v20 >= v21)
      {
LABEL_29:
        a1 = v135;
      }
      else
      {
        v124 = v18;
        uint64_t v35 = 0;
        uint64_t v36 = v23 * (v21 - 1);
        uint64_t v37 = v20;
        uint64_t v38 = v21 * v23;
        Swift::Int v39 = v37;
        uint64_t v40 = v37 * v23;
        do
        {
          if (v39 != v21 + v35 - 1)
          {
            if (!v22) {
              goto LABEL_147;
            }
            uint64_t v134 = v22 + v36;
            outlined init with take of EagerResolutionService?(v22 + v40, v126, &demangling cache variable for type metadata for (Int, SearchResult));
            if (v40 < v36 || v22 + v40 >= (unint64_t)(v22 + v38))
            {
              uint64_t v42 = v134;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v42 = v134;
              if (v40 != v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            outlined init with take of EagerResolutionService?(v126, v42, &demangling cache variable for type metadata for (Int, SearchResult));
            uint64_t v22 = v125;
            uint64_t v23 = v138;
          }
          ++v39;
          --v35;
          v36 -= v23;
          v38 -= v23;
          v40 += v23;
        }
        while (v39 < v21 + v35);
        a1 = v135;
        uint64_t v18 = v124;
        uint64_t v20 = v127;
        Swift::Int v19 = v137;
      }
    }
    if (v21 < v19)
    {
      if (__OFSUB__(v21, v20)) {
        goto LABEL_139;
      }
      if (v21 - v20 < v121)
      {
        if (__OFADD__(v20, v121)) {
          goto LABEL_142;
        }
        if (v20 + v121 >= v19) {
          Swift::Int v43 = v19;
        }
        else {
          Swift::Int v43 = v20 + v121;
        }
        if (v43 < v20) {
          goto LABEL_143;
        }
        if (v21 != v43)
        {
          v124 = v18;
          uint64_t v125 = v43;
          uint64_t v120 = v2;
          uint64_t v44 = *(void *)(v129 + 72);
          uint64_t v138 = v44 * (v21 - 1);
          uint64_t v131 = v44;
          Swift::Int v45 = v21 * v44;
          do
          {
            uint64_t v46 = 0;
            uint64_t v47 = v127;
            uint64_t v134 = v21;
            while (1)
            {
              uint64_t v48 = v135;
              uint64_t v49 = *v135;
              Swift::Int v50 = v45;
              uint64_t v51 = v45 + v46 + *v135;
              uint64_t v52 = v132;
              outlined init with copy of EagerResolutionService?(v51, (uint64_t)v132, &demangling cache variable for type metadata for (Int, SearchResult));
              uint64_t v53 = v133;
              outlined init with copy of EagerResolutionService?(v138 + v46 + v49, (uint64_t)v133, &demangling cache variable for type metadata for (Int, SearchResult));
              Swift::Int v137 = *v52;
              Swift::Int v54 = *v53;
              outlined destroy of EagerResolutionService?((uint64_t)v53, &demangling cache variable for type metadata for (Int, SearchResult));
              outlined destroy of EagerResolutionService?((uint64_t)v52, &demangling cache variable for type metadata for (Int, SearchResult));
              if (v54 < v137) {
                break;
              }
              uint64_t v55 = *v48;
              if (!*v48) {
                goto LABEL_145;
              }
              Swift::Int v45 = v50;
              uint64_t v56 = v55 + v138 + v46;
              outlined init with take of EagerResolutionService?(v55 + v50 + v46, v136, &demangling cache variable for type metadata for (Int, SearchResult));
              swift_arrayInitWithTakeFrontToBack();
              outlined init with take of EagerResolutionService?(v136, v56, &demangling cache variable for type metadata for (Int, SearchResult));
              v46 -= v131;
              ++v47;
              uint64_t v57 = v134;
              if (v134 == v47) {
                goto LABEL_46;
              }
            }
            uint64_t v57 = v134;
            Swift::Int v45 = v50;
LABEL_46:
            Swift::Int v21 = v57 + 1;
            v138 += v131;
            v45 += v131;
          }
          while (v21 != v125);
          Swift::Int v21 = v125;
          uint64_t v2 = v120;
          uint64_t v18 = v124;
          a1 = v135;
          uint64_t v20 = v127;
        }
      }
    }
    if (v21 < v20) {
      goto LABEL_138;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v111 = (char *)OUTLINED_FUNCTION_115();
      uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v111, v112, v113, v18);
    }
    unint64_t v60 = *((void *)v18 + 2);
    unint64_t v59 = *((void *)v18 + 3);
    unint64_t v61 = v60 + 1;
    if (v60 >= v59 >> 1) {
      uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v59 > 1), v60 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v61;
    uint64_t v62 = v18 + 32;
    os_signpost_id_t v63 = &v18[16 * v60 + 32];
    uint64_t v64 = v134;
    *(void *)os_signpost_id_t v63 = v127;
    *((void *)v63 + 1) = v64;
    if (v60) {
      break;
    }
    unint64_t v61 = 1;
LABEL_96:
    Swift::Int v19 = a1[1];
    uint64_t v17 = v134;
    if (v134 >= v19) {
      goto LABEL_102;
    }
  }
  while (1)
  {
    unint64_t v65 = v61 - 1;
    if (v61 >= 4)
    {
      uint64_t v70 = &v62[16 * v61];
      uint64_t v71 = *((void *)v70 - 8);
      uint64_t v72 = *((void *)v70 - 7);
      BOOL v76 = __OFSUB__(v72, v71);
      uint64_t v73 = v72 - v71;
      if (v76) {
        goto LABEL_123;
      }
      uint64_t v75 = *((void *)v70 - 6);
      uint64_t v74 = *((void *)v70 - 5);
      BOOL v76 = __OFSUB__(v74, v75);
      uint64_t v68 = v74 - v75;
      char v69 = v76;
      if (v76) {
        goto LABEL_124;
      }
      unint64_t v77 = v61 - 2;
      v78 = &v62[16 * v61 - 32];
      uint64_t v80 = *(void *)v78;
      uint64_t v79 = *((void *)v78 + 1);
      BOOL v76 = __OFSUB__(v79, v80);
      uint64_t v81 = v79 - v80;
      if (v76) {
        goto LABEL_125;
      }
      BOOL v76 = __OFADD__(v68, v81);
      uint64_t v82 = v68 + v81;
      if (v76) {
        goto LABEL_127;
      }
      if (v82 >= v73)
      {
        v100 = &v62[16 * v65];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v76 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v76) {
          goto LABEL_133;
        }
        BOOL v93 = v68 < v103;
        goto LABEL_85;
      }
    }
    else
    {
      if (v61 != 3)
      {
        uint64_t v94 = *((void *)v18 + 4);
        uint64_t v95 = *((void *)v18 + 5);
        BOOL v76 = __OFSUB__(v95, v94);
        uint64_t v87 = v95 - v94;
        char v88 = v76;
        goto LABEL_79;
      }
      uint64_t v67 = *((void *)v18 + 4);
      uint64_t v66 = *((void *)v18 + 5);
      BOOL v76 = __OFSUB__(v66, v67);
      uint64_t v68 = v66 - v67;
      char v69 = v76;
    }
    if (v69) {
      goto LABEL_126;
    }
    unint64_t v77 = v61 - 2;
    v83 = &v62[16 * v61 - 32];
    uint64_t v85 = *(void *)v83;
    uint64_t v84 = *((void *)v83 + 1);
    BOOL v86 = __OFSUB__(v84, v85);
    uint64_t v87 = v84 - v85;
    char v88 = v86;
    if (v86) {
      goto LABEL_128;
    }
    v89 = &v62[16 * v65];
    uint64_t v91 = *(void *)v89;
    uint64_t v90 = *((void *)v89 + 1);
    BOOL v76 = __OFSUB__(v90, v91);
    uint64_t v92 = v90 - v91;
    if (v76) {
      goto LABEL_130;
    }
    if (__OFADD__(v87, v92)) {
      goto LABEL_132;
    }
    if (v87 + v92 >= v68)
    {
      BOOL v93 = v68 < v92;
LABEL_85:
      if (v93) {
        unint64_t v65 = v77;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v88) {
      goto LABEL_129;
    }
    v96 = &v62[16 * v65];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    BOOL v76 = __OFSUB__(v97, v98);
    uint64_t v99 = v97 - v98;
    if (v76) {
      goto LABEL_131;
    }
    if (v99 < v87) {
      goto LABEL_96;
    }
LABEL_87:
    unint64_t v104 = v65 - 1;
    if (v65 - 1 >= v61)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    uint64_t v105 = *a1;
    if (!*a1) {
      goto LABEL_146;
    }
    v106 = &v62[16 * v104];
    uint64_t v107 = *(void *)v106;
    v108 = &v62[16 * v65];
    uint64_t v109 = *((void *)v108 + 1);
    specialized _merge<A>(low:mid:high:buffer:by:)(v105 + *(void *)(v129 + 72) * *(void *)v106, v105 + *(void *)(v129 + 72) * *(void *)v108, v105 + *(void *)(v129 + 72) * v109, v128);
    if (v2) {
      break;
    }
    if (v109 < v107) {
      goto LABEL_120;
    }
    if (v65 > *((void *)v18 + 2)) {
      goto LABEL_121;
    }
    *(void *)v106 = v107;
    *(void *)&v62[16 * v104 + 8] = v109;
    unint64_t v110 = *((void *)v18 + 2);
    if (v65 >= v110) {
      goto LABEL_122;
    }
    unint64_t v61 = v110 - 1;
    memmove(&v62[16 * v65], v108 + 16, 16 * (v110 - 1 - v65));
    *((void *)v18 + 2) = v110 - 1;
    a1 = v135;
    if (v110 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v123 >= -1) {
    goto LABEL_117;
  }
  __break(1u);
LABEL_116:
  swift_bridgeObjectRelease();
  if (v123 >= -1)
  {
LABEL_117:
    *(void *)(v122 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  unint64_t v15;
  Swift::Int v16;
  char *v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  Swift::Int *v23;
  uint64_t v24;
  int v25;
  uint64_t *v26;
  Swift::Int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  Swift::Int v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t *v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  Swift::Int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  Swift::Int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  Swift::Int v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  Swift::Int *v128;
  Swift::Int v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  v124 = *(void *)(v4 - 8);
  uint64_t v125 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  Swift::Int v121 = (uint64_t)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v131 = (uint64_t)&v115 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v128 = (Swift::Int *)((char *)&v115 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v127 = (Swift::Int *)((char *)&v115 - v11);
  uint64_t v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12) {
        specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v12, 1, a1);
      }
      return;
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  Swift::Int v14 = v13;
  uint64_t v116 = specialized static Array._allocateUninitialized(_:)(v12 / 2);
  uint64_t v117 = v12;
  uint64_t v123 = v15;
  if (v12 <= 0)
  {
    uint64_t v17 = (char *)MEMORY[0x263F8EE78];
    uint64_t v56 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_102:
    if (v56 < 2) {
      goto LABEL_116;
    }
    uint64_t v107 = *a1;
    while (1)
    {
      v108 = v56 - 2;
      if (v56 < 2) {
        break;
      }
      if (!v107) {
        goto LABEL_148;
      }
      uint64_t v109 = v17;
      unint64_t v110 = v17 + 32;
      v111 = *(void *)&v17[16 * v108 + 32];
      int64_t v112 = *(void *)&v17[16 * v56 + 24];
      specialized _merge<A>(low:mid:high:buffer:by:)(v107 + *(void *)(v124 + 72) * v111, v107 + *(void *)(v124 + 72) * *(void *)&v110[16 * v56 - 16], v107 + *(void *)(v124 + 72) * v112, v123);
      if (v2) {
        goto LABEL_114;
      }
      if (v112 < v111) {
        goto LABEL_135;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v109 = specialized _ArrayBuffer._consumeAndCreateNew()();
      }
      if (v108 >= *((void *)v109 + 2)) {
        goto LABEL_136;
      }
      char v113 = &v109[16 * v108 + 32];
      *(void *)char v113 = v111;
      *((void *)v113 + 1) = v112;
      uint64_t v114 = *((void *)v109 + 2);
      if (v56 > v114) {
        goto LABEL_137;
      }
      uint64_t v17 = v109;
      memmove(&v109[16 * v56 + 16], &v109[16 * v56 + 32], 16 * (v114 - v56));
      *((void *)v109 + 2) = v114 - 1;
      uint64_t v56 = v114 - 1;
      if (v114 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  unint64_t v115 = v14;
  unint64_t v16 = 0;
  uint64_t v17 = (char *)MEMORY[0x263F8EE78];
  uint64_t v130 = a1;
  while (1)
  {
    uint64_t v18 = v16;
    Swift::Int v19 = v16 + 1;
    uint64_t v122 = v16;
    if (v16 + 1 < v12)
    {
      uint64_t v20 = *a1;
      Swift::Int v21 = *(void *)(v124 + 72);
      uint64_t v22 = v127;
      outlined init with copy of SearchResultItem?(v20 + v21 * v19, (uint64_t)v127, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      uint64_t v23 = v128;
      outlined init with copy of SearchResultItem?(v20 + v21 * v18, (uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      v132 = *v22;
      uint64_t v129 = *v23;
      outlined destroy of SearchResult?((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      outlined destroy of SearchResult?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      v118 = v20;
      v133 = v21;
      if (v18 + 2 >= v12)
      {
        Swift::Int v19 = v18 + 2;
        uint64_t v29 = v21;
      }
      else
      {
        uint64_t v126 = v21 * v19;
        uint64_t v24 = v20;
        Swift::Int v19 = v18 + 2;
        unint64_t v119 = v17;
        uint64_t v120 = v21 * (v18 + 2);
        while (1)
        {
          BOOL v25 = v132 < v129;
          uint64_t v26 = v127;
          outlined init with copy of SearchResultItem?(v24 + v120, (uint64_t)v127, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
          uint64_t v27 = v128;
          outlined init with copy of SearchResultItem?(v24 + v126, (uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
          uint64_t v28 = *v26 >= *v27;
          outlined destroy of SearchResult?((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
          outlined destroy of SearchResult?((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
          if (v25 == v28) {
            break;
          }
          uint64_t v29 = v133;
          v24 += v133;
          if (++v19 >= v12)
          {
            Swift::Int v19 = v12;
            uint64_t v20 = v118;
            uint64_t v17 = v119;
            uint64_t v18 = v122;
            goto LABEL_12;
          }
        }
        uint64_t v20 = v118;
        uint64_t v17 = v119;
        uint64_t v18 = v122;
        uint64_t v29 = v133;
      }
LABEL_12:
      if (v132 >= v129) {
        goto LABEL_29;
      }
      if (v19 < v18) {
        goto LABEL_141;
      }
      if (v18 >= v19)
      {
LABEL_29:
        a1 = v130;
      }
      else
      {
        uint64_t v129 = v12;
        uint64_t v30 = 0;
        uint64_t v31 = v29 * (v19 - 1);
        int v32 = v18;
        unint64_t v33 = v19 * v29;
        int v34 = v32;
        uint64_t v35 = v32 * v29;
        unint64_t v119 = v17;
        do
        {
          if (v34 != v19 + v30 - 1)
          {
            if (!v20) {
              goto LABEL_147;
            }
            v132 = v20 + v31;
            outlined init with take of SearchResultItem?(v20 + v35, v121, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
            if (v35 < v31 || v20 + v35 >= (unint64_t)(v20 + v33))
            {
              uint64_t v37 = v132;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v37 = v132;
              if (v35 != v31) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            outlined init with take of SearchResultItem?(v121, v37, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
            uint64_t v20 = v118;
            uint64_t v17 = v119;
            uint64_t v29 = v133;
          }
          ++v34;
          --v30;
          v31 -= v29;
          v33 -= v29;
          v35 += v29;
        }
        while (v34 < v19 + v30);
        uint64_t v12 = v129;
        a1 = v130;
        uint64_t v18 = v122;
      }
    }
    if (v19 < v12)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_139;
      }
      if (v19 - v18 < v115)
      {
        if (__OFADD__(v18, v115)) {
          goto LABEL_142;
        }
        if (v18 + v115 >= v12) {
          uint64_t v38 = v12;
        }
        else {
          uint64_t v38 = v18 + v115;
        }
        if (v38 < v18) {
          goto LABEL_143;
        }
        if (v19 != v38)
        {
          v118 = v2;
          unint64_t v119 = v17;
          Swift::Int v39 = *(void *)(v124 + 72);
          v133 = v39 * (v19 - 1);
          uint64_t v126 = v39;
          uint64_t v40 = v19 * v39;
          uint64_t v120 = v38;
          do
          {
            uint64_t v41 = 0;
            uint64_t v42 = v122;
            uint64_t v129 = v19;
            while (1)
            {
              Swift::Int v43 = v130;
              uint64_t v44 = *v130;
              Swift::Int v45 = v40;
              uint64_t v46 = v40 + v41 + *v130;
              uint64_t v47 = v127;
              outlined init with copy of SearchResultItem?(v46, (uint64_t)v127, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
              uint64_t v48 = v128;
              outlined init with copy of SearchResultItem?(v133 + v41 + v44, (uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
              v132 = *v47;
              uint64_t v49 = *v48;
              outlined destroy of SearchResult?((uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
              outlined destroy of SearchResult?((uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
              if (v132 >= v49) {
                break;
              }
              Swift::Int v50 = *v43;
              if (!*v43) {
                goto LABEL_145;
              }
              uint64_t v40 = v45;
              uint64_t v51 = v50 + v133 + v41;
              outlined init with take of SearchResultItem?(v50 + v45 + v41, v131, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
              swift_arrayInitWithTakeFrontToBack();
              outlined init with take of SearchResultItem?(v131, v51, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
              v41 -= v126;
              ++v42;
              uint64_t v52 = v129;
              if (v129 == v42) {
                goto LABEL_46;
              }
            }
            uint64_t v52 = v129;
            uint64_t v40 = v45;
LABEL_46:
            Swift::Int v19 = v52 + 1;
            v133 += v126;
            v40 += v126;
          }
          while (v19 != v120);
          Swift::Int v19 = v120;
          uint64_t v2 = v118;
          uint64_t v17 = v119;
          a1 = v130;
          uint64_t v18 = v122;
        }
      }
    }
    if (v19 < v18) {
      goto LABEL_138;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v129 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    uint64_t v55 = *((void *)v17 + 2);
    Swift::Int v54 = *((void *)v17 + 3);
    uint64_t v56 = v55 + 1;
    if (v55 >= v54 >> 1) {
      uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v54 > 1), v55 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v56;
    uint64_t v57 = v17 + 32;
    uint64_t v58 = &v17[16 * v55 + 32];
    unint64_t v59 = v129;
    *(void *)uint64_t v58 = v122;
    *((void *)v58 + 1) = v59;
    if (v55) {
      break;
    }
    uint64_t v56 = 1;
LABEL_96:
    uint64_t v12 = a1[1];
    unint64_t v16 = v129;
    if (v129 >= v12) {
      goto LABEL_102;
    }
  }
  while (1)
  {
    unint64_t v60 = v56 - 1;
    if (v56 >= 4)
    {
      unint64_t v65 = &v57[16 * v56];
      uint64_t v66 = *((void *)v65 - 8);
      uint64_t v67 = *((void *)v65 - 7);
      uint64_t v71 = __OFSUB__(v67, v66);
      uint64_t v68 = v67 - v66;
      if (v71) {
        goto LABEL_123;
      }
      uint64_t v70 = *((void *)v65 - 6);
      char v69 = *((void *)v65 - 5);
      uint64_t v71 = __OFSUB__(v69, v70);
      os_signpost_id_t v63 = v69 - v70;
      uint64_t v64 = v71;
      if (v71) {
        goto LABEL_124;
      }
      uint64_t v72 = v56 - 2;
      uint64_t v73 = &v57[16 * v56 - 32];
      uint64_t v75 = *(void *)v73;
      uint64_t v74 = *((void *)v73 + 1);
      uint64_t v71 = __OFSUB__(v74, v75);
      BOOL v76 = v74 - v75;
      if (v71) {
        goto LABEL_125;
      }
      uint64_t v71 = __OFADD__(v63, v76);
      unint64_t v77 = v63 + v76;
      if (v71) {
        goto LABEL_127;
      }
      if (v77 >= v68)
      {
        uint64_t v95 = &v57[16 * v60];
        uint64_t v97 = *(void *)v95;
        v96 = *((void *)v95 + 1);
        uint64_t v71 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v71) {
          goto LABEL_133;
        }
        char v88 = v63 < v98;
        goto LABEL_85;
      }
    }
    else
    {
      if (v56 != 3)
      {
        v89 = *((void *)v17 + 4);
        uint64_t v90 = *((void *)v17 + 5);
        uint64_t v71 = __OFSUB__(v90, v89);
        uint64_t v82 = v90 - v89;
        v83 = v71;
        goto LABEL_79;
      }
      uint64_t v62 = *((void *)v17 + 4);
      unint64_t v61 = *((void *)v17 + 5);
      uint64_t v71 = __OFSUB__(v61, v62);
      os_signpost_id_t v63 = v61 - v62;
      uint64_t v64 = v71;
    }
    if (v64) {
      goto LABEL_126;
    }
    uint64_t v72 = v56 - 2;
    v78 = &v57[16 * v56 - 32];
    uint64_t v80 = *(void *)v78;
    uint64_t v79 = *((void *)v78 + 1);
    uint64_t v81 = __OFSUB__(v79, v80);
    uint64_t v82 = v79 - v80;
    v83 = v81;
    if (v81) {
      goto LABEL_128;
    }
    uint64_t v84 = &v57[16 * v60];
    BOOL v86 = *(void *)v84;
    uint64_t v85 = *((void *)v84 + 1);
    uint64_t v71 = __OFSUB__(v85, v86);
    uint64_t v87 = v85 - v86;
    if (v71) {
      goto LABEL_130;
    }
    if (__OFADD__(v82, v87)) {
      goto LABEL_132;
    }
    if (v82 + v87 >= v63)
    {
      char v88 = v63 < v87;
LABEL_85:
      if (v88) {
        unint64_t v60 = v72;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v83) {
      goto LABEL_129;
    }
    uint64_t v91 = &v57[16 * v60];
    BOOL v93 = *(void *)v91;
    uint64_t v92 = *((void *)v91 + 1);
    uint64_t v71 = __OFSUB__(v92, v93);
    uint64_t v94 = v92 - v93;
    if (v71) {
      goto LABEL_131;
    }
    if (v94 < v82) {
      goto LABEL_96;
    }
LABEL_87:
    uint64_t v99 = v60 - 1;
    if (v60 - 1 >= v56)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    v100 = *a1;
    if (!*a1) {
      goto LABEL_146;
    }
    uint64_t v101 = v17;
    uint64_t v102 = &v57[16 * v99];
    uint64_t v103 = *(void *)v102;
    unint64_t v104 = &v57[16 * v60];
    uint64_t v105 = *((void *)v104 + 1);
    specialized _merge<A>(low:mid:high:buffer:by:)(v100 + *(void *)(v124 + 72) * *(void *)v102, v100 + *(void *)(v124 + 72) * *(void *)v104, v100 + *(void *)(v124 + 72) * v105, v123);
    if (v2) {
      break;
    }
    if (v105 < v103) {
      goto LABEL_120;
    }
    if (v60 > *((void *)v101 + 2)) {
      goto LABEL_121;
    }
    *(void *)uint64_t v102 = v103;
    *(void *)&v57[16 * v99 + 8] = v105;
    v106 = *((void *)v101 + 2);
    if (v60 >= v106) {
      goto LABEL_122;
    }
    uint64_t v17 = v101;
    uint64_t v56 = v106 - 1;
    memmove(&v57[16 * v60], v104 + 16, 16 * (v106 - 1 - v60));
    *((void *)v101 + 2) = v106 - 1;
    a1 = v130;
    if (v106 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v117 >= -1) {
    goto LABEL_117;
  }
  __break(1u);
LABEL_116:
  swift_bridgeObjectRelease();
  if (v117 >= -1)
  {
LABEL_117:
    *(void *)(v116 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
}

uint64_t specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2, &demangling cache variable for type metadata for (Int, [SearchResult]));
  v89 = a1;
  uint64_t v90 = result;
  uint64_t v94 = v6;
  uint64_t v92 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    unint64_t v32 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_90:
    if (v32 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v92 >= -1)
      {
        *(void *)(v90 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v81 = *v89;
    while (1)
    {
      unint64_t v82 = v32 - 2;
      if (v32 < 2) {
        break;
      }
      if (!v81) {
        goto LABEL_133;
      }
      uint64_t v83 = *(void *)(v9 + 32 + 16 * v82);
      uint64_t v84 = *(void *)(v9 + 32 + 16 * (v32 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v81 + 16 * v83), (char *)(v81 + 16 * *(void *)(v9 + 32 + 16 * (v32 - 1))), v81 + 16 * v84, v94);
      if (v1) {
        goto LABEL_86;
      }
      if (v84 < v83) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()();
        uint64_t v9 = result;
      }
      if (v82 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v85 = (void *)(v9 + 32 + 16 * v82);
      *uint64_t v85 = v83;
      v85[1] = v84;
      unint64_t v86 = *(void *)(v9 + 16);
      if (v32 > v86) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v32 - 1)), (const void *)(v9 + 32 + 16 * v32), 16 * (v86 - v32));
      *(void *)(v9 + 16) = v86 - 1;
      unint64_t v32 = v86 - 1;
      if (v86 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v87 = *a1 - 16;
  uint64_t v88 = *a1 + 32;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v91 = v5;
  uint64_t v93 = *a1;
  while (1)
  {
    Swift::Int v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 16 * v7);
      uint64_t v12 = 16 * v10;
      uint64_t v13 = *(void *)(v8 + 16 * v10);
      Swift::Int v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        Swift::Int v14 = (uint64_t *)(v88 + 16 * v10);
        uint64_t v15 = v11;
        while (1)
        {
          uint64_t v17 = *v14;
          v14 += 2;
          uint64_t v16 = v17;
          if (v13 >= v11 == v15 < v17) {
            break;
          }
          ++v7;
          uint64_t v15 = v16;
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
      }
      if (v13 >= v11)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v18 = 16 * v7;
          Swift::Int v19 = v7;
          Swift::Int v20 = v10;
          do
          {
            if (v20 != --v19)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v21 = v8 + v18;
              uint64_t v22 = *(void *)(v8 + v12);
              uint64_t v23 = *(void *)(v8 + v12 + 8);
              *(_OWORD *)(v8 + v12) = *(_OWORD *)(v8 + v18 - 16);
              *(void *)(v21 - 16) = v22;
              *(void *)(v21 - 8) = v23;
            }
            ++v20;
            v18 -= 16;
            v12 += 16;
          }
          while (v20 < v19);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        Swift::Int v24 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v24 >= v3) {
          Swift::Int v24 = v3;
        }
        if (v24 < v10) {
          goto LABEL_128;
        }
        if (v7 != v24)
        {
          uint64_t v25 = v87 + 16 * v7;
          do
          {
            uint64_t v26 = *(void *)(v8 + 16 * v7);
            Swift::Int v27 = v10;
            uint64_t v28 = v25;
            do
            {
              if (*(void *)v28 < v26) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              uint64_t v29 = *(void *)(v28 + 24);
              *(_OWORD *)(v28 + 16) = *(_OWORD *)v28;
              *(void *)uint64_t v28 = v26;
              *(void *)(v28 + 8) = v29;
              v28 -= 16;
              ++v27;
            }
            while (v7 != v27);
            ++v7;
            v25 += 16;
          }
          while (v7 != v24);
          Swift::Int v7 = v24;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v31 = *(void *)(v9 + 16);
    unint64_t v30 = *(void *)(v9 + 24);
    unint64_t v32 = v31 + 1;
    uint64_t v8 = v93;
    if (v31 >= v30 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v30 > 1), v31 + 1, 1, (char *)v9);
      uint64_t v8 = v93;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v32;
    uint64_t v33 = v9 + 32;
    int v34 = (Swift::Int *)(v9 + 32 + 16 * v31);
    *int v34 = v10;
    v34[1] = v7;
    if (v31) {
      break;
    }
    unint64_t v32 = 1;
LABEL_81:
    uint64_t v5 = v91;
    Swift::Int v3 = v92;
    if (v7 >= v92) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v35 = v32 - 1;
    if (v32 >= 4)
    {
      unint64_t v40 = v33 + 16 * v32;
      uint64_t v41 = *(void *)(v40 - 64);
      uint64_t v42 = *(void *)(v40 - 56);
      BOOL v46 = __OFSUB__(v42, v41);
      uint64_t v43 = v42 - v41;
      if (v46) {
        goto LABEL_107;
      }
      uint64_t v45 = *(void *)(v40 - 48);
      uint64_t v44 = *(void *)(v40 - 40);
      BOOL v46 = __OFSUB__(v44, v45);
      uint64_t v38 = v44 - v45;
      char v39 = v46;
      if (v46) {
        goto LABEL_108;
      }
      unint64_t v47 = v32 - 2;
      uint64_t v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      uint64_t v50 = *v48;
      uint64_t v49 = v48[1];
      BOOL v46 = __OFSUB__(v49, v50);
      uint64_t v51 = v49 - v50;
      if (v46) {
        goto LABEL_109;
      }
      BOOL v46 = __OFADD__(v38, v51);
      uint64_t v52 = v38 + v51;
      if (v46) {
        goto LABEL_111;
      }
      if (v52 >= v43)
      {
        uint64_t v70 = (uint64_t *)(v33 + 16 * v35);
        uint64_t v72 = *v70;
        uint64_t v71 = v70[1];
        BOOL v46 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v46) {
          goto LABEL_117;
        }
        BOOL v63 = v38 < v73;
        goto LABEL_70;
      }
    }
    else
    {
      if (v32 != 3)
      {
        uint64_t v64 = *(void *)(v9 + 32);
        uint64_t v65 = *(void *)(v9 + 40);
        BOOL v46 = __OFSUB__(v65, v64);
        uint64_t v57 = v65 - v64;
        char v58 = v46;
        goto LABEL_64;
      }
      uint64_t v37 = *(void *)(v9 + 32);
      uint64_t v36 = *(void *)(v9 + 40);
      BOOL v46 = __OFSUB__(v36, v37);
      uint64_t v38 = v36 - v37;
      char v39 = v46;
    }
    if (v39) {
      goto LABEL_110;
    }
    unint64_t v47 = v32 - 2;
    uint64_t v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    BOOL v56 = __OFSUB__(v54, v55);
    uint64_t v57 = v54 - v55;
    char v58 = v56;
    if (v56) {
      goto LABEL_112;
    }
    unint64_t v59 = (uint64_t *)(v33 + 16 * v35);
    uint64_t v61 = *v59;
    uint64_t v60 = v59[1];
    BOOL v46 = __OFSUB__(v60, v61);
    uint64_t v62 = v60 - v61;
    if (v46) {
      goto LABEL_114;
    }
    if (__OFADD__(v57, v62)) {
      goto LABEL_116;
    }
    if (v57 + v62 >= v38)
    {
      BOOL v63 = v38 < v62;
LABEL_70:
      if (v63) {
        unint64_t v35 = v47;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v58) {
      goto LABEL_113;
    }
    uint64_t v66 = (uint64_t *)(v33 + 16 * v35);
    uint64_t v68 = *v66;
    uint64_t v67 = v66[1];
    BOOL v46 = __OFSUB__(v67, v68);
    uint64_t v69 = v67 - v68;
    if (v46) {
      goto LABEL_115;
    }
    if (v69 < v57) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v74 = v9;
    unint64_t v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    BOOL v76 = (uint64_t *)(v33 + 16 * v75);
    uint64_t v77 = *v76;
    v78 = (void *)(v33 + 16 * v35);
    uint64_t v79 = v78[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v8 + 16 * *v76), (char *)(v8 + 16 * *v78), v8 + 16 * v79, v94);
    if (v1) {
      break;
    }
    if (v79 < v77) {
      goto LABEL_104;
    }
    if (v35 > *(void *)(v74 + 16)) {
      goto LABEL_105;
    }
    *BOOL v76 = v77;
    *(void *)(v33 + 16 * v75 + 8) = v79;
    unint64_t v80 = *(void *)(v74 + 16);
    if (v35 >= v80) {
      goto LABEL_106;
    }
    uint64_t v9 = v74;
    unint64_t v32 = v80 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v33 + 16 * v35), v78 + 2, 16 * (v80 - 1 - v35));
    *(void *)(v74 + 16) = v80 - 1;
    uint64_t v8 = v93;
    if (v80 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v92 < -1) {
    goto LABEL_125;
  }
  *(void *)(v90 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  _OWORD *v21;
  uint64_t v22;
  long long v23;
  long long v24;
  long long v25;
  Swift::Int v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  _OWORD *v31;
  long long v32;
  long long v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  Swift::Int *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2, &demangling cache variable for type metadata for (Int, (String, [String])));
  uint64_t v94 = a1;
  uint64_t v95 = result;
  uint64_t v99 = v6;
  uint64_t v97 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v37 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_90:
    if (v37 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v97 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    unint64_t v86 = *v94;
    while (1)
    {
      uint64_t v87 = v37 - 2;
      if (v37 < 2) {
        break;
      }
      if (!v86) {
        goto LABEL_133;
      }
      uint64_t v88 = *(void *)(v9 + 32 + 16 * v87);
      v89 = *(void *)(v9 + 32 + 16 * (v37 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v86 + 32 * v88), (char *)(v86 + 32 * *(void *)(v9 + 32 + 16 * (v37 - 1))), v86 + 32 * v89, v99);
      if (v1) {
        goto LABEL_86;
      }
      if (v89 < v88) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()();
        uint64_t v9 = result;
      }
      if (v87 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v90 = (void *)(v9 + 32 + 16 * v87);
      *uint64_t v90 = v88;
      v90[1] = v89;
      uint64_t v91 = *(void *)(v9 + 16);
      if (v37 > v91) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v37 - 1)), (const void *)(v9 + 32 + 16 * v37), 16 * (v91 - v37));
      *(void *)(v9 + 16) = v91 - 1;
      uint64_t v37 = v91 - 1;
      if (v91 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 16;
  uint64_t v93 = *a1 + 64;
  uint64_t v9 = MEMORY[0x263F8EE78];
  v96 = v5;
  uint64_t v98 = *a1;
  while (1)
  {
    Swift::Int v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 32 * v7);
      uint64_t v12 = 32 * v10;
      uint64_t v13 = *(void *)(v8 + 32 * v10);
      Swift::Int v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        Swift::Int v14 = (uint64_t *)(v93 + 32 * v10);
        uint64_t v15 = v11;
        while (1)
        {
          uint64_t v17 = *v14;
          v14 += 4;
          uint64_t v16 = v17;
          if (v13 >= v11 == v15 < v17) {
            break;
          }
          ++v7;
          uint64_t v15 = v16;
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
      }
      if (v13 >= v11)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v18 = 32 * v7;
          Swift::Int v19 = v7;
          Swift::Int v20 = v10;
          do
          {
            if (v20 != --v19)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v21 = (_OWORD *)(v8 + v12);
              uint64_t v22 = v8 + v18;
              Swift::Int v24 = *(_OWORD *)(v8 + v12);
              uint64_t v23 = *(_OWORD *)(v8 + v12 + 16);
              uint64_t v25 = *(_OWORD *)(v8 + v18 - 16);
              *uint64_t v21 = *(_OWORD *)(v8 + v18 - 32);
              v21[1] = v25;
              *(_OWORD *)(v22 - 32) = v24;
              *(_OWORD *)(v22 - 16) = v23;
            }
            ++v20;
            v18 -= 32;
            v12 += 32;
          }
          while (v20 < v19);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v26 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v26 >= v3) {
          uint64_t v26 = v3;
        }
        if (v26 < v10) {
          goto LABEL_128;
        }
        if (v7 != v26)
        {
          Swift::Int v27 = v92 + 32 * v7;
          do
          {
            uint64_t v28 = *(void *)(v8 + 32 * v7);
            uint64_t v29 = v10;
            unint64_t v30 = v27;
            do
            {
              if (*(void *)(v30 - 48) < v28) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              unint64_t v31 = (_OWORD *)(v30 - 16);
              uint64_t v33 = *(_OWORD *)(v30 - 48);
              unint64_t v32 = *(_OWORD *)(v30 - 32);
              *(_OWORD *)(v30 - 32) = *(_OWORD *)v30;
              v30 -= 32;
              int v34 = *(void *)(v30 + 24);
              *unint64_t v31 = v33;
              v31[1] = v32;
              *(void *)(v30 - 16) = v28;
              *(void *)(v30 - 8) = v34;
              ++v29;
            }
            while (v7 != v29);
            ++v7;
            v27 += 32;
          }
          while (v7 != v26);
          Swift::Int v7 = v26;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    uint64_t v36 = *(void *)(v9 + 16);
    unint64_t v35 = *(void *)(v9 + 24);
    uint64_t v37 = v36 + 1;
    uint64_t v8 = v98;
    if (v36 >= v35 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v35 > 1), v36 + 1, 1, (char *)v9);
      uint64_t v8 = v98;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v37;
    uint64_t v38 = v9 + 32;
    char v39 = (Swift::Int *)(v9 + 32 + 16 * v36);
    int *v39 = v10;
    v39[1] = v7;
    if (v36) {
      break;
    }
    uint64_t v37 = 1;
LABEL_81:
    uint64_t v5 = v96;
    Swift::Int v3 = v97;
    if (v7 >= v97) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v40 = v37 - 1;
    if (v37 >= 4)
    {
      uint64_t v45 = v38 + 16 * v37;
      BOOL v46 = *(void *)(v45 - 64);
      unint64_t v47 = *(void *)(v45 - 56);
      uint64_t v51 = __OFSUB__(v47, v46);
      uint64_t v48 = v47 - v46;
      if (v51) {
        goto LABEL_107;
      }
      uint64_t v50 = *(void *)(v45 - 48);
      uint64_t v49 = *(void *)(v45 - 40);
      uint64_t v51 = __OFSUB__(v49, v50);
      uint64_t v43 = v49 - v50;
      uint64_t v44 = v51;
      if (v51) {
        goto LABEL_108;
      }
      uint64_t v52 = v37 - 2;
      uint64_t v53 = (uint64_t *)(v38 + 16 * (v37 - 2));
      uint64_t v55 = *v53;
      uint64_t v54 = v53[1];
      uint64_t v51 = __OFSUB__(v54, v55);
      BOOL v56 = v54 - v55;
      if (v51) {
        goto LABEL_109;
      }
      uint64_t v51 = __OFADD__(v43, v56);
      uint64_t v57 = v43 + v56;
      if (v51) {
        goto LABEL_111;
      }
      if (v57 >= v48)
      {
        unint64_t v75 = (uint64_t *)(v38 + 16 * v40);
        uint64_t v77 = *v75;
        BOOL v76 = v75[1];
        uint64_t v51 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v51) {
          goto LABEL_117;
        }
        uint64_t v68 = v43 < v78;
        goto LABEL_70;
      }
    }
    else
    {
      if (v37 != 3)
      {
        uint64_t v69 = *(void *)(v9 + 32);
        uint64_t v70 = *(void *)(v9 + 40);
        uint64_t v51 = __OFSUB__(v70, v69);
        uint64_t v62 = v70 - v69;
        BOOL v63 = v51;
        goto LABEL_64;
      }
      uint64_t v42 = *(void *)(v9 + 32);
      uint64_t v41 = *(void *)(v9 + 40);
      uint64_t v51 = __OFSUB__(v41, v42);
      uint64_t v43 = v41 - v42;
      uint64_t v44 = v51;
    }
    if (v44) {
      goto LABEL_110;
    }
    uint64_t v52 = v37 - 2;
    char v58 = (uint64_t *)(v38 + 16 * (v37 - 2));
    uint64_t v60 = *v58;
    unint64_t v59 = v58[1];
    uint64_t v61 = __OFSUB__(v59, v60);
    uint64_t v62 = v59 - v60;
    BOOL v63 = v61;
    if (v61) {
      goto LABEL_112;
    }
    uint64_t v64 = (uint64_t *)(v38 + 16 * v40);
    uint64_t v66 = *v64;
    uint64_t v65 = v64[1];
    uint64_t v51 = __OFSUB__(v65, v66);
    uint64_t v67 = v65 - v66;
    if (v51) {
      goto LABEL_114;
    }
    if (__OFADD__(v62, v67)) {
      goto LABEL_116;
    }
    if (v62 + v67 >= v43)
    {
      uint64_t v68 = v43 < v67;
LABEL_70:
      if (v68) {
        unint64_t v40 = v52;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v63) {
      goto LABEL_113;
    }
    uint64_t v71 = (uint64_t *)(v38 + 16 * v40);
    uint64_t v73 = *v71;
    uint64_t v72 = v71[1];
    uint64_t v51 = __OFSUB__(v72, v73);
    uint64_t v74 = v72 - v73;
    if (v51) {
      goto LABEL_115;
    }
    if (v74 < v62) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v79 = v9;
    unint64_t v80 = v40 - 1;
    if (v40 - 1 >= v37)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v81 = (uint64_t *)(v38 + 16 * v80);
    unint64_t v82 = *v81;
    uint64_t v83 = (void *)(v38 + 16 * v40);
    uint64_t v84 = v83[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v8 + 32 * *v81), (char *)(v8 + 32 * *v83), v8 + 32 * v84, v99);
    if (v1) {
      break;
    }
    if (v84 < v82) {
      goto LABEL_104;
    }
    if (v40 > *(void *)(v79 + 16)) {
      goto LABEL_105;
    }
    *uint64_t v81 = v82;
    *(void *)(v38 + 16 * v80 + 8) = v84;
    uint64_t v85 = *(void *)(v79 + 16);
    if (v40 >= v85) {
      goto LABEL_106;
    }
    uint64_t v9 = v79;
    uint64_t v37 = v85 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v38 + 16 * v40), v83 + 2, 16 * (v85 - 1 - v40));
    *(void *)(v79 + 16) = v85 - 1;
    uint64_t v8 = v98;
    if (v85 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v97 < -1) {
    goto LABEL_125;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  float v11;
  uint64_t v12;
  float v13;
  float *v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  float v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::Int *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_130;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  v89 = result;
  uint64_t v93 = v6;
  uint64_t v91 = v3;
  uint64_t v87 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    unint64_t v31 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_96:
    if (v31 < 2)
    {
LABEL_107:
      uint64_t result = swift_bridgeObjectRelease();
      if (v91 >= -1)
      {
        *(void *)(v89 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_135;
    }
    unint64_t v80 = *v87;
    while (1)
    {
      uint64_t v81 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v80) {
        goto LABEL_139;
      }
      unint64_t v82 = *(void *)(v9 + 32 + 16 * v81);
      uint64_t v83 = *(void *)(v9 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((float *)(v80 + 16 * v82), (float *)(v80 + 16 * *(void *)(v9 + 32 + 16 * (v31 - 1))), v80 + 16 * v83, v93);
      if (v1) {
        goto LABEL_92;
      }
      if (v83 < v82) {
        goto LABEL_125;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()();
        uint64_t v9 = result;
      }
      if (v81 >= *(void *)(v9 + 16)) {
        goto LABEL_126;
      }
      uint64_t v84 = (void *)(v9 + 32 + 16 * v81);
      *uint64_t v84 = v82;
      v84[1] = v83;
      uint64_t v85 = *(void *)(v9 + 16);
      if (v31 > v85) {
        goto LABEL_127;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v31 - 1)), (const void *)(v9 + 32 + 16 * v31), 16 * (v85 - v31));
      *(void *)(v9 + 16) = v85 - 1;
      unint64_t v31 = v85 - 1;
      if (v85 <= 2) {
        goto LABEL_107;
      }
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return result;
  }
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v88 = *a1 + 8;
  unint64_t v86 = *a1 + 40;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v90 = v5;
  uint64_t v92 = *a1;
  while (1)
  {
    Swift::Int v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(float *)(v88 + 16 * v7);
      uint64_t v12 = 16 * v10;
      uint64_t v13 = *(float *)(v88 + 16 * v10);
      Swift::Int v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        Swift::Int v14 = (float *)(v86 + 16 * v10);
        while (v11 < v13 != *v14 >= *(v14 - 4))
        {
          ++v7;
          v14 += 4;
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
      }
      if (v11 < v13)
      {
        if (v7 < v10) {
          goto LABEL_132;
        }
        if (v10 < v7)
        {
          uint64_t v15 = 16 * v7 - 16;
          uint64_t v16 = v7;
          uint64_t v17 = v10;
          do
          {
            if (v17 != --v16)
            {
              if (!v8) {
                goto LABEL_138;
              }
              uint64_t v18 = (_OWORD *)(v8 + v12);
              Swift::Int v19 = v8 + v15;
              Swift::Int v20 = *(void *)(v8 + v12);
              uint64_t v21 = *(_DWORD *)(v8 + v12 + 8);
              if (v12 != v15 || (unint64_t)v18 >= v8 + v15 + 16) {
                *uint64_t v18 = *(_OWORD *)v19;
              }
              *(void *)Swift::Int v19 = v20;
              *(_DWORD *)(v19 + 8) = v21;
            }
            ++v17;
            v15 -= 16;
            v12 += 16;
          }
          while (v17 < v16);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_129;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v23 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_133;
        }
        if (v23 >= v3) {
          uint64_t v23 = v3;
        }
        if (v23 < v10) {
          goto LABEL_134;
        }
        if (v7 != v23)
        {
          Swift::Int v24 = v8 + 16 * v7;
          do
          {
            uint64_t v25 = v24;
            uint64_t v26 = v10;
            do
            {
              Swift::Int v27 = *(float *)(v25 + 8);
              if (v27 >= *(float *)(v25 - 8)) {
                break;
              }
              if (!v8) {
                goto LABEL_136;
              }
              uint64_t v28 = *(void *)v25;
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v25 - 16);
              *(float *)(v25 - 8) = v27;
              *(void *)(v25 - 16) = v28;
              v25 -= 16;
              ++v26;
            }
            while (v7 != v26);
            ++v7;
            v24 += 16;
          }
          while (v7 != v23);
          Swift::Int v7 = v23;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_128;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v30 = *(void *)(v9 + 16);
    uint64_t v29 = *(void *)(v9 + 24);
    unint64_t v31 = v30 + 1;
    uint64_t v8 = v92;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v29 > 1), v30 + 1, 1, (char *)v9);
      uint64_t v8 = v92;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v31;
    unint64_t v32 = v9 + 32;
    uint64_t v33 = (Swift::Int *)(v9 + 32 + 16 * v30);
    *uint64_t v33 = v10;
    v33[1] = v7;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_87:
    uint64_t v5 = v90;
    Swift::Int v3 = v91;
    if (v7 >= v91) {
      goto LABEL_96;
    }
  }
  while (1)
  {
    int v34 = v31 - 1;
    if (v31 >= 4)
    {
      char v39 = v32 + 16 * v31;
      unint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      uint64_t v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_113;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      uint64_t v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      uint64_t v38 = v45;
      if (v45) {
        goto LABEL_114;
      }
      BOOL v46 = v31 - 2;
      unint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      uint64_t v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_115;
      }
      uint64_t v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_117;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        uint64_t v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_123;
        }
        uint64_t v62 = v37 < v72;
        goto LABEL_76;
      }
    }
    else
    {
      if (v31 != 3)
      {
        BOOL v63 = *(void *)(v9 + 32);
        uint64_t v64 = *(void *)(v9 + 40);
        uint64_t v45 = __OFSUB__(v64, v63);
        BOOL v56 = v64 - v63;
        uint64_t v57 = v45;
        goto LABEL_70;
      }
      uint64_t v36 = *(void *)(v9 + 32);
      unint64_t v35 = *(void *)(v9 + 40);
      uint64_t v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      uint64_t v38 = v45;
    }
    if (v38) {
      goto LABEL_116;
    }
    BOOL v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    uint64_t v55 = __OFSUB__(v53, v54);
    BOOL v56 = v53 - v54;
    uint64_t v57 = v55;
    if (v55) {
      goto LABEL_118;
    }
    char v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    unint64_t v59 = v58[1];
    uint64_t v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_120;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_122;
    }
    if (v56 + v61 >= v37)
    {
      uint64_t v62 = v37 < v61;
LABEL_76:
      if (v62) {
        int v34 = v46;
      }
      goto LABEL_78;
    }
LABEL_70:
    if (v57) {
      goto LABEL_119;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    uint64_t v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_121;
    }
    if (v68 < v56) {
      goto LABEL_87;
    }
LABEL_78:
    uint64_t v73 = v9;
    uint64_t v74 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v8) {
      goto LABEL_137;
    }
    unint64_t v75 = (uint64_t *)(v32 + 16 * v74);
    BOOL v76 = *v75;
    uint64_t v77 = (void *)(v32 + 16 * v34);
    v78 = v77[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((float *)(v8 + 16 * *v75), (float *)(v8 + 16 * *v77), v8 + 16 * v78, v93);
    if (v1) {
      break;
    }
    if (v78 < v76) {
      goto LABEL_110;
    }
    if (v34 > *(void *)(v73 + 16)) {
      goto LABEL_111;
    }
    *unint64_t v75 = v76;
    *(void *)(v32 + 16 * v74 + 8) = v78;
    uint64_t v79 = *(void *)(v73 + 16);
    if (v34 >= v79) {
      goto LABEL_112;
    }
    uint64_t v9 = v73;
    unint64_t v31 = v79 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v77 + 2, 16 * (v79 - 1 - v34));
    *(void *)(v73 + 16) = v79 - 1;
    uint64_t v8 = v92;
    if (v79 <= 2) {
      goto LABEL_87;
    }
  }
LABEL_92:
  uint64_t result = swift_bridgeObjectRelease();
  if (v91 < -1) {
    goto LABEL_131;
  }
  *(void *)(v89 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  int v14;
  Swift::Int v15;
  void *v16;
  void *v17;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  _OWORD *v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  long long v29;
  Swift::Int v30;
  uint64_t v31;
  Swift::Int v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  Swift::Int *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  void *v83;
  uint64_t *v84;
  uint64_t v85;
  Swift::Int v86;
  void *v87;
  long long *v88;
  long long v90;
  long long v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  unint64_t v104 = result;
  uint64_t v105 = v3;
  v106 = v6;
  uint64_t v102 = a1;
  if (v3 <= 0)
  {
    uint64_t v107 = MEMORY[0x263F8EE78];
    unint64_t v35 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_110:
    if (v35 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v104 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v93 = *v102;
    while (1)
    {
      uint64_t v94 = v35 - 2;
      if (v35 < 2) {
        break;
      }
      if (!v93) {
        goto LABEL_153;
      }
      uint64_t v95 = v107;
      v96 = *(void *)(v107 + 32 + 16 * v94);
      uint64_t v97 = *(void *)(v107 + 32 + 16 * (v35 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v93 + 32 * v96), (char *)(v93 + 32 * *(void *)(v107 + 32 + 16 * (v35 - 1))), v93 + 32 * v97, v106);
      if (v1) {
        goto LABEL_106;
      }
      if (v97 < v96) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()();
        uint64_t v95 = result;
      }
      if (v94 >= *(void *)(v95 + 16)) {
        goto LABEL_140;
      }
      uint64_t v98 = (void *)(v95 + 32 + 16 * v94);
      *uint64_t v98 = v96;
      v98[1] = v97;
      uint64_t v99 = *(void *)(v95 + 16);
      if (v35 > v99) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v95 + 32 + 16 * (v35 - 1)), (const void *)(v95 + 32 + 16 * v35), 16 * (v99 - v35));
      uint64_t v107 = v95;
      *(void *)(v95 + 16) = v99 - 1;
      unint64_t v35 = v99 - 1;
      Swift::Int v3 = v105;
      if (v99 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v103 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  v100 = *a1 + 24;
  uint64_t v101 = *a1 + 8;
  uint64_t v107 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    Swift::Int v10 = (uint64_t *)(v8 + 32 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 32 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      Swift::Int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v101 + 32 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 32 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 4;
        Swift::Int v19 = v15 + 1;
        Swift::Int v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    Swift::Int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    Swift::Int v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      Swift::Int v20 = 32 * v15;
      uint64_t v21 = 32 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          Swift::Int v24 = (_OWORD *)(v8 + v21);
          uint64_t v25 = v8 + v20;
          uint64_t v26 = *(_OWORD *)(v8 + v21);
          Swift::Int v27 = *(void *)(v8 + v21 + 16);
          uint64_t v28 = *(void *)(v8 + v21 + 24);
          uint64_t v29 = *(_OWORD *)(v8 + v20 - 16);
          *Swift::Int v24 = *(_OWORD *)(v8 + v20 - 32);
          v24[1] = v29;
          *(_OWORD *)(v25 - 32) = v26;
          *(void *)(v25 - 16) = v27;
          *(void *)(v25 - 8) = v28;
        }
        ++v23;
        v20 -= 32;
        v21 += 32;
      }
      while (v23 < v22);
    }
LABEL_31:
    Swift::Int v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v103) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v103)) {
      goto LABEL_146;
    }
    if (v9 + v103 >= v3) {
      unint64_t v30 = v3;
    }
    else {
      unint64_t v30 = v9 + v103;
    }
    if (v30 < v9) {
      goto LABEL_147;
    }
    if (v7 == v30)
    {
LABEL_41:
      unint64_t v31 = v107;
    }
    else
    {
      uint64_t v83 = (void *)(v100 + 32 * v7);
      unint64_t v31 = v107;
      do
      {
        uint64_t v84 = (uint64_t *)(v8 + 32 * v7);
        uint64_t result = *v84;
        uint64_t v85 = v84[1];
        unint64_t v86 = v9;
        uint64_t v87 = v83;
        do
        {
          uint64_t v88 = (long long *)(v87 - 7);
          if (result == *(v87 - 7) && v85 == *(v87 - 6)) {
            break;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t v91 = *v88;
          uint64_t v90 = *(_OWORD *)(v87 - 5);
          *(v87 - 4) = *v87;
          v87 -= 4;
          uint64_t result = v87[1];
          uint64_t v85 = v87[2];
          uint64_t v92 = v87[3];
          v88[2] = v91;
          v88[3] = v90;
          *(v87 - 3) = result;
          *(v87 - 2) = v85;
          *(v87 - 1) = v92;
          ++v86;
        }
        while (v7 != v86);
        ++v7;
        v83 += 4;
      }
      while (v7 != v30);
      Swift::Int v7 = v30;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v32 = v9;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v31 + 16) + 1, 1, (char *)v31);
      unint64_t v31 = result;
    }
    int v34 = *(void *)(v31 + 16);
    uint64_t v33 = *(void *)(v31 + 24);
    unint64_t v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v33 > 1), v34 + 1, 1, (char *)v31);
      unint64_t v31 = result;
    }
    *(void *)(v31 + 16) = v35;
    uint64_t v36 = v31 + 32;
    uint64_t v37 = (Swift::Int *)(v31 + 32 + 16 * v34);
    unsigned __int8 *v37 = v32;
    v37[1] = v7;
    uint64_t v107 = v31;
    if (v34) {
      break;
    }
    unint64_t v35 = 1;
LABEL_90:
    Swift::Int v3 = v105;
    if (v7 >= v105) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    uint64_t v38 = v35 - 1;
    if (v35 >= 4)
    {
      uint64_t v43 = v36 + 16 * v35;
      uint64_t v44 = *(void *)(v43 - 64);
      uint64_t v45 = *(void *)(v43 - 56);
      uint64_t v49 = __OFSUB__(v45, v44);
      BOOL v46 = v45 - v44;
      if (v49) {
        goto LABEL_127;
      }
      uint64_t v48 = *(void *)(v43 - 48);
      unint64_t v47 = *(void *)(v43 - 40);
      uint64_t v49 = __OFSUB__(v47, v48);
      uint64_t v41 = v47 - v48;
      uint64_t v42 = v49;
      if (v49) {
        goto LABEL_128;
      }
      uint64_t v50 = v35 - 2;
      uint64_t v51 = (uint64_t *)(v36 + 16 * (v35 - 2));
      uint64_t v53 = *v51;
      uint64_t v52 = v51[1];
      uint64_t v49 = __OFSUB__(v52, v53);
      uint64_t v54 = v52 - v53;
      if (v49) {
        goto LABEL_129;
      }
      uint64_t v49 = __OFADD__(v41, v54);
      uint64_t v55 = v41 + v54;
      if (v49) {
        goto LABEL_131;
      }
      if (v55 >= v46)
      {
        uint64_t v73 = (uint64_t *)(v36 + 16 * v38);
        unint64_t v75 = *v73;
        uint64_t v74 = v73[1];
        uint64_t v49 = __OFSUB__(v74, v75);
        BOOL v76 = v74 - v75;
        if (v49) {
          goto LABEL_137;
        }
        uint64_t v66 = v41 < v76;
        goto LABEL_79;
      }
    }
    else
    {
      if (v35 != 3)
      {
        uint64_t v67 = *(void *)(v31 + 32);
        uint64_t v68 = *(void *)(v31 + 40);
        uint64_t v49 = __OFSUB__(v68, v67);
        uint64_t v60 = v68 - v67;
        uint64_t v61 = v49;
        goto LABEL_73;
      }
      unint64_t v40 = *(void *)(v31 + 32);
      char v39 = *(void *)(v31 + 40);
      uint64_t v49 = __OFSUB__(v39, v40);
      uint64_t v41 = v39 - v40;
      uint64_t v42 = v49;
    }
    if (v42) {
      goto LABEL_130;
    }
    uint64_t v50 = v35 - 2;
    BOOL v56 = (uint64_t *)(v36 + 16 * (v35 - 2));
    char v58 = *v56;
    uint64_t v57 = v56[1];
    unint64_t v59 = __OFSUB__(v57, v58);
    uint64_t v60 = v57 - v58;
    uint64_t v61 = v59;
    if (v59) {
      goto LABEL_132;
    }
    uint64_t v62 = (uint64_t *)(v36 + 16 * v38);
    uint64_t v64 = *v62;
    BOOL v63 = v62[1];
    uint64_t v49 = __OFSUB__(v63, v64);
    uint64_t v65 = v63 - v64;
    if (v49) {
      goto LABEL_134;
    }
    if (__OFADD__(v60, v65)) {
      goto LABEL_136;
    }
    if (v60 + v65 >= v41)
    {
      uint64_t v66 = v41 < v65;
LABEL_79:
      if (v66) {
        uint64_t v38 = v50;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v61) {
      goto LABEL_133;
    }
    uint64_t v69 = (uint64_t *)(v36 + 16 * v38);
    uint64_t v71 = *v69;
    uint64_t v70 = v69[1];
    uint64_t v49 = __OFSUB__(v70, v71);
    uint64_t v72 = v70 - v71;
    if (v49) {
      goto LABEL_135;
    }
    if (v72 < v60) {
      goto LABEL_90;
    }
LABEL_81:
    uint64_t v77 = v38 - 1;
    if (v38 - 1 >= v35)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    v78 = (uint64_t *)(v36 + 16 * v77);
    uint64_t v79 = *v78;
    unint64_t v80 = (void *)(v36 + 16 * v38);
    uint64_t v81 = v80[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v8 + 32 * *v78), (char *)(v8 + 32 * *v80), v8 + 32 * v81, v106);
    if (v1) {
      break;
    }
    if (v81 < v79) {
      goto LABEL_124;
    }
    if (v38 > *(void *)(v107 + 16)) {
      goto LABEL_125;
    }
    void *v78 = v79;
    *(void *)(v36 + 16 * v77 + 8) = v81;
    unint64_t v82 = *(void *)(v107 + 16);
    if (v38 >= v82) {
      goto LABEL_126;
    }
    unint64_t v31 = v107;
    unint64_t v35 = v82 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v36 + 16 * v38), v80 + 2, 16 * (v82 - 1 - v38));
    *(void *)(v107 + 16) = v82 - 1;
    if (v82 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v105 < -1) {
    goto LABEL_145;
  }
  *(void *)(v104 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  Swift::Int v54;
  Swift::Int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  long long v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  long long v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  Swift::Int *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  char v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  unint64_t v150;
  Swift::Int v151;
  Swift::Int v152;
  char *v153;
  Swift::Int v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  void v158[3];
  uint64_t v159;
  uint64_t v160;
  long long v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  Swift::Int v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v139 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v139 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  v155 = (char *)&v139 - v13;
  Swift::Int v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v139 - v15;
  MEMORY[0x270FA5388](v14);
  v145 = (char *)&v139 - v17;
  v164 = a1;
  uint64_t v18 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v18);
  if (result < v18)
  {
    Swift::Int v20 = result;
    uint64_t result = specialized static Array._allocateUninitialized(_:)(v18 / 2);
    v141 = result;
    v156 = v21;
    v142 = v18;
    if (v18 <= 0) {
      goto LABEL_99;
    }
    v139 = v20;
    v140 = v16;
    v147 = v11;
    uint64_t v22 = 0;
    uint64_t v23 = MEMORY[0x263F8EE78];
    v153 = v8;
    while (1)
    {
      Swift::Int v24 = v22;
      uint64_t v25 = v22 + 1;
      v143 = -40;
      v152 = v22;
      if (v22 + 1 < v18)
      {
        v154 = v18;
        uint64_t v26 = *v164;
        outlined init with copy of CustomStringConvertible(*v164 + 40 * v25, (uint64_t)&v161);
        v146 = v26;
        outlined init with copy of CustomStringConvertible(v26 + 40 * v24, (uint64_t)v158);
        Swift::Int v27 = v162;
        uint64_t v28 = v163;
        __swift_project_boxed_opaque_existential_1(&v161, v162);
        uint64_t v29 = (uint64_t)v145;
        (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
        unint64_t v30 = type metadata accessor for Date();
        uint64_t result = __swift_getEnumTagSinglePayload(v29, 1, v30);
        if (result == 1) {
          goto LABEL_149;
        }
        v144 = v23;
        unint64_t v31 = v159;
        unint64_t v32 = v160;
        __swift_project_boxed_opaque_existential_1(v158, v159);
        uint64_t v33 = (uint64_t)v140;
        (*(void (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
        uint64_t result = __swift_getEnumTagSinglePayload(v33, 1, v30);
        if (result == 1) {
          goto LABEL_150;
        }
        int v34 = lazy protocol witness table accessor for type Date and conformance Date();
        unint64_t v35 = v145;
        v150 = v34;
        LODWORD(v151) = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v36 = *(void *)(v30 - 8);
        uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        uint64_t v38 = v33;
        char v39 = v36 + 8;
        v37(v38, v30);
        v148 = v39;
        v149 = v37;
        v37((uint64_t)v35, v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v158);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v161);
        uint64_t v25 = v24 + 2;
        uint64_t v18 = v154;
        if (v24 + 2 < v154)
        {
          unint64_t v40 = v24 + 2;
          uint64_t v41 = v146 + 40 * v24 + 40;
          while (1)
          {
            outlined init with copy of CustomStringConvertible(v41 + 40, (uint64_t)&v161);
            outlined init with copy of CustomStringConvertible(v41, (uint64_t)v158);
            uint64_t v43 = v162;
            uint64_t v42 = v163;
            __swift_project_boxed_opaque_existential_1(&v161, v162);
            uint64_t v44 = (uint64_t)v155;
            (*(void (**)(uint64_t, uint64_t))(v42 + 24))(v43, v42);
            uint64_t result = __swift_getEnumTagSinglePayload(v44, 1, v30);
            if (result == 1) {
              goto LABEL_145;
            }
            uint64_t v45 = v159;
            BOOL v46 = v160;
            __swift_project_boxed_opaque_existential_1(v158, v159);
            unint64_t v47 = (uint64_t)v147;
            (*(void (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
            uint64_t result = __swift_getEnumTagSinglePayload(v47, 1, v30);
            if (result == 1) {
              goto LABEL_146;
            }
            uint64_t v48 = v155;
            uint64_t v49 = dispatch thunk of static Comparable.< infix(_:_:)();
            uint64_t v50 = (void (*)(char *, uint64_t))v149;
            v149(v47, v30);
            v50(v48, v30);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v158);
            uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v161);
            if ((v151 ^ v49)) {
              break;
            }
            v41 += 40;
            ++v40;
            uint64_t v18 = v154;
            if (v40 >= v154)
            {
              uint64_t v25 = v154;
              Swift::Int v24 = v152;
              goto LABEL_15;
            }
          }
          uint64_t v25 = v40;
          Swift::Int v24 = v152;
          uint64_t v18 = v154;
        }
LABEL_15:
        uint64_t v23 = v144;
        if ((v151 & 1) == 0)
        {
          if (v25 < v24) {
            goto LABEL_137;
          }
          if (v24 < v25)
          {
            uint64_t v51 = v143 + 40 * v25;
            uint64_t v52 = v25;
            uint64_t v53 = 40 * v24;
            uint64_t v54 = v24;
            uint64_t v55 = v52;
            do
            {
              if (v54 != --v52)
              {
                if (!v146) {
                  goto LABEL_147;
                }
                BOOL v56 = v146 + v53;
                uint64_t v57 = v146 + v51;
                outlined init with take of SageSearchClient((long long *)(v146 + v53), (uint64_t)&v161);
                char v58 = *(void *)(v57 + 32);
                unint64_t v59 = *(_OWORD *)(v57 + 16);
                *(_OWORD *)BOOL v56 = *(_OWORD *)v57;
                *(_OWORD *)(v56 + 16) = v59;
                *(void *)(v56 + 32) = v58;
                uint64_t result = outlined init with take of SageSearchClient(&v161, v57);
              }
              ++v54;
              v51 -= 40;
              v53 += 40;
            }
            while (v54 < v52);
            uint64_t v23 = v144;
            uint64_t v25 = v55;
            Swift::Int v24 = v152;
            uint64_t v18 = v154;
          }
        }
      }
      if (v25 < v18)
      {
        if (__OFSUB__(v25, v24)) {
          goto LABEL_135;
        }
        if (v25 - v24 < v139)
        {
          if (__OFADD__(v24, v139)) {
            goto LABEL_138;
          }
          if (v24 + v139 >= v18) {
            uint64_t v60 = v18;
          }
          else {
            uint64_t v60 = v24 + v139;
          }
          if (v60 < v24)
          {
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
          if (v25 != v60)
          {
            v144 = v23;
            uint64_t v61 = v143 + 40 * v25;
            v151 = v60;
LABEL_34:
            uint64_t v62 = v24;
            v154 = v61;
            while (1)
            {
              BOOL v63 = v25;
              uint64_t v64 = *v164 + v61;
              outlined init with copy of CustomStringConvertible(v64 + 40, (uint64_t)&v161);
              outlined init with copy of CustomStringConvertible(v64, (uint64_t)v158);
              uint64_t v65 = v162;
              uint64_t v66 = v163;
              __swift_project_boxed_opaque_existential_1(&v161, v162);
              (*(void (**)(uint64_t, uint64_t))(v66 + 24))(v65, v66);
              uint64_t v67 = type metadata accessor for Date();
              uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v67);
              if (result == 1) {
                goto LABEL_141;
              }
              uint64_t v68 = v159;
              uint64_t v69 = v160;
              __swift_project_boxed_opaque_existential_1(v158, v159);
              (*(void (**)(uint64_t, uint64_t))(v69 + 24))(v68, v69);
              uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v67);
              if (result == 1) {
                break;
              }
              lazy protocol witness table accessor for type Date and conformance Date();
              uint64_t v70 = dispatch thunk of static Comparable.< infix(_:_:)();
              uint64_t v71 = *(void (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8);
              v71(v5, v67);
              v71(v8, v67);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v158);
              uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v161);
              if (v70)
              {
                uint64_t v25 = v63;
LABEL_42:
                ++v25;
                uint64_t v61 = v154 + 40;
                Swift::Int v24 = v152;
                if (v25 == v151)
                {
                  uint64_t v25 = v151;
                  uint64_t v23 = v144;
                  goto LABEL_44;
                }
                goto LABEL_34;
              }
              uint64_t v72 = *v164;
              if (!*v164) {
                goto LABEL_143;
              }
              uint64_t v25 = v63;
              uint64_t v73 = v72 + v61;
              outlined init with take of SageSearchClient((long long *)(v72 + v61 + 40), (uint64_t)&v161);
              uint64_t v74 = *(_OWORD *)(v73 + 16);
              *(_OWORD *)(v73 + 40) = *(_OWORD *)v73;
              *(_OWORD *)(v73 + 56) = v74;
              *(void *)(v73 + 72) = *(void *)(v73 + 32);
              uint64_t result = outlined init with take of SageSearchClient(&v161, v73);
              v61 -= 40;
              if (v63 == ++v62) {
                goto LABEL_42;
              }
            }
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
            return result;
          }
        }
      }
LABEL_44:
      if (v25 < v24) {
        goto LABEL_134;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v23 + 16) + 1, 1, (char *)v23);
        uint64_t v23 = result;
      }
      BOOL v76 = *(void *)(v23 + 16);
      unint64_t v75 = *(void *)(v23 + 24);
      uint64_t v77 = v76 + 1;
      if (v76 >= v75 >> 1)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v75 > 1), v76 + 1, 1, (char *)v23);
        uint64_t v23 = result;
      }
      *(void *)(v23 + 16) = v77;
      v78 = v23 + 32;
      uint64_t v79 = (Swift::Int *)(v23 + 32 + 16 * v76);
      *uint64_t v79 = v24;
      v79[1] = v25;
      v154 = v25;
      if (v76) {
        break;
      }
      uint64_t v77 = 1;
LABEL_92:
      uint64_t v18 = v164[1];
      uint64_t v22 = v154;
      if (v154 >= v18) {
        goto LABEL_100;
      }
    }
    while (1)
    {
      unint64_t v80 = v77 - 1;
      if (v77 >= 4)
      {
        uint64_t v85 = v78 + 16 * v77;
        unint64_t v86 = *(void *)(v85 - 64);
        uint64_t v87 = *(void *)(v85 - 56);
        uint64_t v91 = __OFSUB__(v87, v86);
        uint64_t v88 = v87 - v86;
        if (v91) {
          goto LABEL_119;
        }
        uint64_t v90 = *(void *)(v85 - 48);
        v89 = *(void *)(v85 - 40);
        uint64_t v91 = __OFSUB__(v89, v90);
        uint64_t v83 = v89 - v90;
        uint64_t v84 = v91;
        if (v91) {
          goto LABEL_120;
        }
        uint64_t v92 = v77 - 2;
        uint64_t v93 = (uint64_t *)(v78 + 16 * (v77 - 2));
        uint64_t v95 = *v93;
        uint64_t v94 = v93[1];
        uint64_t v91 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v91) {
          goto LABEL_121;
        }
        uint64_t v91 = __OFADD__(v83, v96);
        uint64_t v97 = v83 + v96;
        if (v91) {
          goto LABEL_123;
        }
        if (v97 >= v88)
        {
          unint64_t v115 = (uint64_t *)(v78 + 16 * v80);
          uint64_t v117 = *v115;
          uint64_t v116 = v115[1];
          uint64_t v91 = __OFSUB__(v116, v117);
          v118 = v116 - v117;
          if (v91) {
            goto LABEL_129;
          }
          v108 = v83 < v118;
          goto LABEL_81;
        }
      }
      else
      {
        if (v77 != 3)
        {
          uint64_t v109 = *(void *)(v23 + 32);
          unint64_t v110 = *(void *)(v23 + 40);
          uint64_t v91 = __OFSUB__(v110, v109);
          uint64_t v102 = v110 - v109;
          uint64_t v103 = v91;
          goto LABEL_75;
        }
        unint64_t v82 = *(void *)(v23 + 32);
        uint64_t v81 = *(void *)(v23 + 40);
        uint64_t v91 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        uint64_t v84 = v91;
      }
      if (v84) {
        goto LABEL_122;
      }
      uint64_t v92 = v77 - 2;
      uint64_t v98 = (uint64_t *)(v78 + 16 * (v77 - 2));
      v100 = *v98;
      uint64_t v99 = v98[1];
      uint64_t v101 = __OFSUB__(v99, v100);
      uint64_t v102 = v99 - v100;
      uint64_t v103 = v101;
      if (v101) {
        goto LABEL_124;
      }
      unint64_t v104 = (uint64_t *)(v78 + 16 * v80);
      v106 = *v104;
      uint64_t v105 = v104[1];
      uint64_t v91 = __OFSUB__(v105, v106);
      uint64_t v107 = v105 - v106;
      if (v91) {
        goto LABEL_126;
      }
      if (__OFADD__(v102, v107)) {
        goto LABEL_128;
      }
      if (v102 + v107 >= v83)
      {
        v108 = v83 < v107;
LABEL_81:
        if (v108) {
          unint64_t v80 = v92;
        }
        goto LABEL_83;
      }
LABEL_75:
      if (v103) {
        goto LABEL_125;
      }
      v111 = (uint64_t *)(v78 + 16 * v80);
      char v113 = *v111;
      int64_t v112 = v111[1];
      uint64_t v91 = __OFSUB__(v112, v113);
      uint64_t v114 = v112 - v113;
      if (v91) {
        goto LABEL_127;
      }
      if (v114 < v102) {
        goto LABEL_92;
      }
LABEL_83:
      unint64_t v119 = v80 - 1;
      if (v80 - 1 >= v77)
      {
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      if (!*v164) {
        goto LABEL_144;
      }
      uint64_t v120 = v5;
      Swift::Int v121 = v23;
      uint64_t v122 = (uint64_t *)(v78 + 16 * v119);
      uint64_t v123 = *v122;
      v124 = v78;
      uint64_t v125 = v80;
      uint64_t v126 = (void *)(v78 + 16 * v80);
      uint64_t v127 = v126[1];
      unint64_t v128 = v157;
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)(*v164 + 40 * *v122, *v164 + 40 * *v126, *v164 + 40 * v127, v156);
      v157 = v128;
      if (v128)
      {
LABEL_97:
        uint64_t result = swift_bridgeObjectRelease();
        if (v142 >= -1) {
          goto LABEL_114;
        }
        __break(1u);
LABEL_99:
        uint64_t v23 = MEMORY[0x263F8EE78];
        uint64_t v77 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_100:
        if (v77 >= 2)
        {
          uint64_t v130 = *v164;
          uint64_t v131 = v157;
          while (1)
          {
            v132 = v77 - 2;
            if (v77 < 2) {
              break;
            }
            if (!v130) {
              goto LABEL_148;
            }
            v133 = v23;
            uint64_t v134 = v23 + 32;
            v135 = *(void *)(v23 + 32 + 16 * v132);
            uint64_t v136 = *(void *)(v23 + 32 + 16 * (v77 - 1) + 8);
            uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)(v130 + 40 * v135, v130 + 40 * *(void *)(v134 + 16 * (v77 - 1)), v130 + 40 * v136, v156);
            if (v131) {
              goto LABEL_97;
            }
            if (v136 < v135) {
              goto LABEL_131;
            }
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()();
              v133 = result;
            }
            if (v132 >= *(void *)(v133 + 16)) {
              goto LABEL_132;
            }
            Swift::Int v137 = (void *)(v133 + 32 + 16 * v132);
            *Swift::Int v137 = v135;
            v137[1] = v136;
            uint64_t v138 = *(void *)(v133 + 16);
            if (v77 > v138) {
              goto LABEL_133;
            }
            uint64_t v23 = v133;
            uint64_t result = (uint64_t)memmove((void *)(v133 + 32 + 16 * (v77 - 1)), (const void *)(v133 + 32 + 16 * v77), 16 * (v138 - v77));
            *(void *)(v133 + 16) = v138 - 1;
            uint64_t v77 = v138 - 1;
            if (v138 <= 2) {
              goto LABEL_113;
            }
          }
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
LABEL_113:
        uint64_t result = swift_bridgeObjectRelease();
        if (v142 >= -1)
        {
LABEL_114:
          *(void *)(v141 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
        goto LABEL_142;
      }
      if (v127 < v123) {
        goto LABEL_116;
      }
      if (v125 > *(void *)(v121 + 16)) {
        goto LABEL_117;
      }
      *uint64_t v122 = v123;
      *(void *)(v124 + 16 * v119 + 8) = v127;
      uint64_t v129 = *(void *)(v121 + 16);
      if (v125 >= v129) {
        goto LABEL_118;
      }
      uint64_t v23 = v121;
      uint64_t v77 = v129 - 1;
      uint64_t result = (uint64_t)memmove(v126, v126 + 2, 16 * (v129 - 1 - v125));
      v78 = v124;
      *(void *)(v121 + 16) = v129 - 1;
      uint64_t v5 = v120;
      uint64_t v8 = v153;
      if (v129 <= 2) {
        goto LABEL_92;
      }
    }
  }
  if (v18 < 0) {
    goto LABEL_136;
  }
  if (v18) {
    return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v18, 1, v164);
  }
  return result;
}

uint64_t specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, v2);
      }
      return result;
    }
    goto LABEL_129;
  }
  uint64_t v5 = result;
  uint64_t v113 = v1;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
  uint64_t v104 = result;
  uint64_t v105 = v3;
  unint64_t v110 = v6;
  if (v3 < 1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    unint64_t v39 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_94:
    uint64_t result = v8;
    if (v39 < 2)
    {
LABEL_105:
      uint64_t result = swift_bridgeObjectRelease();
      if (v105 >= -1)
      {
        *(void *)(v104 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_134;
    }
    uint64_t v93 = *v2;
    while (1)
    {
      unint64_t v94 = v39 - 2;
      if (v39 < 2) {
        break;
      }
      if (!v93) {
        goto LABEL_138;
      }
      uint64_t v95 = result;
      uint64_t v96 = *(void *)(result + 32 + 16 * v94);
      uint64_t v97 = *(void *)(result + 32 + 16 * (v39 - 1) + 8);
      uint64_t v98 = v113;
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v93 + 48 * v96), (char *)(v93 + 48 * *(void *)(result + 32 + 16 * (v39 - 1))), v93 + 48 * v97, v110);
      uint64_t v113 = v98;
      if (v98) {
        goto LABEL_91;
      }
      if (v97 < v96) {
        goto LABEL_124;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()();
        uint64_t v95 = result;
      }
      if (v94 >= *(void *)(v95 + 16)) {
        goto LABEL_125;
      }
      uint64_t v99 = (void *)(v95 + 32 + 16 * v94);
      *uint64_t v99 = v96;
      v99[1] = v97;
      unint64_t v100 = *(void *)(v95 + 16);
      if (v39 > v100) {
        goto LABEL_126;
      }
      memmove((void *)(v95 + 32 + 16 * (v39 - 1)), (const void *)(v95 + 32 + 16 * v39), 16 * (v100 - v39));
      uint64_t result = v95;
      *(void *)(v95 + 16) = v100 - 1;
      unint64_t v39 = v100 - 1;
      if (v100 <= 2) {
        goto LABEL_105;
      }
    }
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    return result;
  }
  uint64_t v103 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = MEMORY[0x263F8EE78];
  Swift::Int v9 = v3;
  while (1)
  {
    Swift::Int v10 = v7++;
    Swift::Int v108 = v10;
    if (v7 < v9)
    {
      uint64_t v11 = *v2;
      Swift::Int v12 = v9;
      outlined init with copy of EagerResolutionService?(*v2 + 48 * v7, (uint64_t)v112, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      outlined init with copy of EagerResolutionService?(v11 + 48 * v10, (uint64_t)v111, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      uint64_t v106 = v112[0];
      uint64_t v13 = v111[0];
      outlined destroy of EagerResolutionService?((uint64_t)v111, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      uint64_t result = outlined destroy of EagerResolutionService?((uint64_t)v112, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      Swift::Int v7 = v10 + 2;
      if (v10 + 2 >= v12)
      {
        Swift::Int v9 = v12;
      }
      else
      {
        uint64_t v101 = v11;
        uint64_t v102 = v8;
        uint64_t v14 = v11 + 48 * v10 + 48;
        while (1)
        {
          outlined init with copy of EagerResolutionService?(v14 + 48, (uint64_t)v112, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
          outlined init with copy of EagerResolutionService?(v14, (uint64_t)v111, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
          BOOL v15 = v111[0] < v112[0];
          outlined destroy of EagerResolutionService?((uint64_t)v111, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
          uint64_t result = outlined destroy of EagerResolutionService?((uint64_t)v112, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
          if (v13 >= v106 == v15) {
            break;
          }
          ++v7;
          v14 += 48;
          if (v7 >= v12)
          {
            Swift::Int v9 = v12;
            Swift::Int v7 = v12;
            uint64_t v8 = v102;
            goto LABEL_12;
          }
        }
        uint64_t v8 = v102;
        Swift::Int v9 = v12;
LABEL_12:
        uint64_t v11 = v101;
      }
      if (v13 >= v106)
      {
        if (v7 < v10) {
          goto LABEL_131;
        }
        if (v10 < v7)
        {
          uint64_t v16 = (long long *)(v11 + 48 * v7 - 48);
          uint64_t v17 = (long long *)(v11 + 48 * v10);
          Swift::Int v18 = v7;
          Swift::Int v19 = v10;
          do
          {
            if (v19 != --v18)
            {
              if (!v11) {
                goto LABEL_137;
              }
              long long v20 = *v17;
              long long v21 = v17[1];
              long long v22 = v17[2];
              long long v24 = v16[1];
              long long v23 = v16[2];
              *uint64_t v17 = *v16;
              v17[1] = v24;
              v17[2] = v23;
              v16[1] = v21;
              void v16[2] = v22;
              *uint64_t v16 = v20;
            }
            ++v19;
            v16 -= 3;
            v17 += 3;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 < v9)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_128;
      }
      if (v7 - v10 < v103)
      {
        if (__OFADD__(v10, v103)) {
          goto LABEL_132;
        }
        if (v10 + v103 >= v9) {
          Swift::Int v25 = v9;
        }
        else {
          Swift::Int v25 = v10 + v103;
        }
        if (v25 < v10) {
          goto LABEL_133;
        }
        if (v7 != v25)
        {
          uint64_t v26 = 48 * v7;
          Swift::Int v107 = v25;
          do
          {
            Swift::Int v27 = v10;
            uint64_t v28 = v26;
            do
            {
              uint64_t v29 = *v2 + v28;
              outlined init with copy of EagerResolutionService?(v29, (uint64_t)v112, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
              outlined init with copy of EagerResolutionService?(v29 - 48, (uint64_t)v111, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
              uint64_t v30 = v112[0];
              uint64_t v31 = v111[0];
              outlined destroy of EagerResolutionService?((uint64_t)v111, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
              uint64_t result = outlined destroy of EagerResolutionService?((uint64_t)v112, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
              if (v31 < v30) {
                break;
              }
              if (!*v2) {
                goto LABEL_135;
              }
              unint64_t v32 = (long long *)(*v2 + v28);
              long long v34 = v32[1];
              long long v33 = v32[2];
              long long v35 = *v32;
              long long v36 = *(v32 - 2);
              *unint64_t v32 = *(v32 - 3);
              v32[1] = v36;
              v32[2] = *(v32 - 1);
              *(v32 - 3) = v35;
              *(v32 - 2) = v34;
              *(v32 - 1) = v33;
              v28 -= 48;
              ++v27;
            }
            while (v7 != v27);
            ++v7;
            v26 += 48;
            Swift::Int v10 = v108;
          }
          while (v7 != v107);
          Swift::Int v7 = v107;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_127;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v38 = *(void *)(v8 + 16);
    unint64_t v37 = *(void *)(v8 + 24);
    unint64_t v39 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v37 > 1), v38 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v39;
    uint64_t v40 = v8 + 32;
    uint64_t v41 = (Swift::Int *)(v8 + 32 + 16 * v38);
    Swift::Int *v41 = v10;
    v41[1] = v7;
    if (v38) {
      break;
    }
    unint64_t v39 = 1;
LABEL_86:
    Swift::Int v9 = v2[1];
    if (v7 >= v9) {
      goto LABEL_94;
    }
  }
  Swift::Int v109 = v7;
  while (1)
  {
    unint64_t v42 = v39 - 1;
    if (v39 >= 4)
    {
      unint64_t v47 = v40 + 16 * v39;
      uint64_t v48 = *(void *)(v47 - 64);
      uint64_t v49 = *(void *)(v47 - 56);
      BOOL v53 = __OFSUB__(v49, v48);
      uint64_t v50 = v49 - v48;
      if (v53) {
        goto LABEL_112;
      }
      uint64_t v52 = *(void *)(v47 - 48);
      uint64_t v51 = *(void *)(v47 - 40);
      BOOL v53 = __OFSUB__(v51, v52);
      uint64_t v45 = v51 - v52;
      char v46 = v53;
      if (v53) {
        goto LABEL_113;
      }
      unint64_t v54 = v39 - 2;
      uint64_t v55 = (uint64_t *)(v40 + 16 * (v39 - 2));
      uint64_t v57 = *v55;
      uint64_t v56 = v55[1];
      BOOL v53 = __OFSUB__(v56, v57);
      uint64_t v58 = v56 - v57;
      if (v53) {
        goto LABEL_114;
      }
      BOOL v53 = __OFADD__(v45, v58);
      uint64_t v59 = v45 + v58;
      if (v53) {
        goto LABEL_116;
      }
      if (v59 >= v50)
      {
        uint64_t v77 = (uint64_t *)(v40 + 16 * v42);
        uint64_t v79 = *v77;
        uint64_t v78 = v77[1];
        BOOL v53 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v53) {
          goto LABEL_122;
        }
        BOOL v70 = v45 < v80;
        goto LABEL_75;
      }
    }
    else
    {
      if (v39 != 3)
      {
        uint64_t v71 = *(void *)(v8 + 32);
        uint64_t v72 = *(void *)(v8 + 40);
        BOOL v53 = __OFSUB__(v72, v71);
        uint64_t v64 = v72 - v71;
        char v65 = v53;
        goto LABEL_69;
      }
      uint64_t v44 = *(void *)(v8 + 32);
      uint64_t v43 = *(void *)(v8 + 40);
      BOOL v53 = __OFSUB__(v43, v44);
      uint64_t v45 = v43 - v44;
      char v46 = v53;
    }
    if (v46) {
      goto LABEL_115;
    }
    unint64_t v54 = v39 - 2;
    uint64_t v60 = (uint64_t *)(v40 + 16 * (v39 - 2));
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    BOOL v63 = __OFSUB__(v61, v62);
    uint64_t v64 = v61 - v62;
    char v65 = v63;
    if (v63) {
      goto LABEL_117;
    }
    uint64_t v66 = (uint64_t *)(v40 + 16 * v42);
    uint64_t v68 = *v66;
    uint64_t v67 = v66[1];
    BOOL v53 = __OFSUB__(v67, v68);
    uint64_t v69 = v67 - v68;
    if (v53) {
      goto LABEL_119;
    }
    if (__OFADD__(v64, v69)) {
      goto LABEL_121;
    }
    if (v64 + v69 >= v45)
    {
      BOOL v70 = v45 < v69;
LABEL_75:
      if (v70) {
        unint64_t v42 = v54;
      }
      goto LABEL_77;
    }
LABEL_69:
    if (v65) {
      goto LABEL_118;
    }
    uint64_t v73 = (uint64_t *)(v40 + 16 * v42);
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    BOOL v53 = __OFSUB__(v74, v75);
    uint64_t v76 = v74 - v75;
    if (v53) {
      goto LABEL_120;
    }
    if (v76 < v64) {
      goto LABEL_86;
    }
LABEL_77:
    unint64_t v81 = v42 - 1;
    if (v42 - 1 >= v39)
    {
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    unint64_t v82 = v2;
    uint64_t v83 = *v2;
    if (!*v2) {
      goto LABEL_136;
    }
    uint64_t v84 = v8;
    uint64_t v85 = (uint64_t *)(v40 + 16 * v81);
    uint64_t v86 = *v85;
    uint64_t v87 = v40;
    unint64_t v88 = v42;
    v89 = (void *)(v40 + 16 * v42);
    uint64_t v90 = v89[1];
    uint64_t v91 = v113;
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v83 + 48 * *v85), (char *)(v83 + 48 * *v89), v83 + 48 * v90, v110);
    uint64_t v113 = v91;
    if (v91) {
      break;
    }
    if (v90 < v86) {
      goto LABEL_109;
    }
    if (v88 > *(void *)(v84 + 16)) {
      goto LABEL_110;
    }
    *uint64_t v85 = v86;
    *(void *)(v87 + 16 * v81 + 8) = v90;
    unint64_t v92 = *(void *)(v84 + 16);
    if (v88 >= v92) {
      goto LABEL_111;
    }
    uint64_t v8 = v84;
    unint64_t v39 = v92 - 1;
    uint64_t result = (uint64_t)memmove(v89, v89 + 2, 16 * (v92 - 1 - v88));
    uint64_t v40 = v87;
    *(void *)(v84 + 16) = v92 - 1;
    uint64_t v2 = v82;
    Swift::Int v7 = v109;
    if (v92 <= 2) {
      goto LABEL_86;
    }
  }
LABEL_91:
  uint64_t result = swift_bridgeObjectRelease();
  if (v105 < -1) {
    goto LABEL_130;
  }
  *(void *)(v104 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a1;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  uint64_t v7 = MEMORY[0x270FA5388](v37);
  uint64_t v43 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v39 = (uint64_t *)((char *)&v34 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  unint64_t v38 = (uint64_t *)((char *)&v34 - v13);
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v40 = v14;
    uint64_t v16 = v14 * v42;
    uint64_t v17 = &demangling cache variable for type metadata for (Int, SearchResult);
    uint64_t v45 = a4;
    while (2)
    {
      uint64_t v18 = 0;
      uint64_t v19 = v36;
      uint64_t v41 = v16;
      do
      {
        uint64_t v20 = *v45;
        uint64_t v21 = v16 + v18 + *v45;
        long long v22 = v38;
        outlined init with copy of EagerResolutionService?(v21, (uint64_t)v38, v17);
        uint64_t v23 = v15 + v18 + v20;
        uint64_t v24 = v15;
        Swift::Int v25 = v39;
        outlined init with copy of EagerResolutionService?(v23, (uint64_t)v39, v17);
        uint64_t v44 = *v22;
        uint64_t v26 = v17;
        uint64_t v27 = *v25;
        uint64_t v28 = (uint64_t)v25;
        uint64_t v15 = v24;
        outlined destroy of EagerResolutionService?(v28, v26);
        uint64_t v29 = (uint64_t)v22;
        uint64_t v16 = v41;
        uint64_t result = outlined destroy of EagerResolutionService?(v29, v26);
        BOOL v30 = v27 < v44;
        uint64_t v17 = v26;
        if (v30) {
          break;
        }
        uint64_t v31 = *v45;
        if (!*v45)
        {
          __break(1u);
          return result;
        }
        uint64_t v32 = v31 + v24 + v18;
        outlined init with take of EagerResolutionService?(v31 + v16 + v18, v43, v26);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v33 = v32;
        uint64_t v17 = v26;
        uint64_t result = outlined init with take of EagerResolutionService?(v43, v33, v26);
        v18 -= v40;
        ++v19;
      }
      while (v42 != v19);
      uint64_t v15 = v24 + v40;
      v16 += v40;
      if (++v42 != v35) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void v31[3];
  uint64_t v32;
  uint64_t v33;
  long long v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  uint64_t v29 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v37 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = 40 * v37 - 40;
    while (2)
    {
      uint64_t v15 = v29;
      BOOL v30 = v14;
      do
      {
        uint64_t v16 = *a4 + v14;
        outlined init with copy of CustomStringConvertible(v16 + 40, (uint64_t)&v34);
        outlined init with copy of CustomStringConvertible(v16, (uint64_t)v31);
        uint64_t v18 = v35;
        uint64_t v17 = v36;
        __swift_project_boxed_opaque_existential_1(&v34, v35);
        (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v18, v17);
        uint64_t v19 = type metadata accessor for Date();
        uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v19);
        if (result == 1)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          return result;
        }
        uint64_t v20 = v32;
        uint64_t v21 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
        uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v19);
        if (result == 1) {
          goto LABEL_12;
        }
        lazy protocol witness table accessor for type Date and conformance Date();
        long long v22 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v23 = *(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8);
        v23(v10, v19);
        v23(v13, v19);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
        if (v22) {
          break;
        }
        uint64_t v24 = *a4;
        if (!*a4) {
          goto LABEL_13;
        }
        Swift::Int v25 = v24 + v14;
        outlined init with take of SageSearchClient((long long *)(v24 + v14 + 40), (uint64_t)&v34);
        uint64_t v26 = *(_OWORD *)(v25 + 16);
        *(_OWORD *)(v25 + 40) = *(_OWORD *)v25;
        *(_OWORD *)(v25 + 56) = v26;
        *(void *)(v25 + 72) = *(void *)(v25 + 32);
        uint64_t result = outlined init with take of SageSearchClient(&v34, v25);
        v14 -= 40;
        ++v15;
      }
      while (v37 != v15);
      uint64_t v14 = v30 + 40;
      if (++v37 != v28) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;

  uint64_t v36 = a1;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v7 = MEMORY[0x270FA5388](v37);
  uint64_t v43 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v39 = (uint64_t *)((char *)&v34 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  unint64_t v38 = (uint64_t *)((char *)&v34 - v13);
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v40 = v14;
    uint64_t v16 = v14 * v42;
    uint64_t v17 = (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult);
    uint64_t v45 = a4;
    while (2)
    {
      uint64_t v18 = 0;
      uint64_t v19 = v36;
      uint64_t v41 = v16;
      do
      {
        uint64_t v20 = *v45;
        uint64_t v21 = v16 + v18 + *v45;
        long long v22 = v38;
        outlined init with copy of SearchResultItem?(v21, (uint64_t)v38, v17);
        uint64_t v23 = v15 + v18 + v20;
        uint64_t v24 = v15;
        Swift::Int v25 = v39;
        outlined init with copy of SearchResultItem?(v23, (uint64_t)v39, v17);
        uint64_t v44 = *v22;
        uint64_t v26 = v17;
        uint64_t v27 = *v25;
        uint64_t v28 = (uint64_t)v25;
        uint64_t v15 = v24;
        outlined destroy of SearchResult?(v28, v26);
        uint64_t v29 = (uint64_t)v22;
        uint64_t v16 = v41;
        uint64_t result = outlined destroy of SearchResult?(v29, v26);
        BOOL v30 = v44 < v27;
        uint64_t v17 = v26;
        if (!v30) {
          break;
        }
        uint64_t v31 = *v45;
        if (!*v45)
        {
          __break(1u);
          return result;
        }
        uint64_t v32 = v31 + v24 + v18;
        outlined init with take of SearchResultItem?(v31 + v16 + v18, v43, v26);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v33 = v32;
        uint64_t v17 = v26;
        uint64_t result = outlined init with take of SearchResultItem?(v43, v33, v26);
        v18 -= v40;
        ++v19;
      }
      while (v42 != v19);
      uint64_t v15 = v24 + v40;
      v16 += v40;
      if (++v42 != v35) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 16 * a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        if (*(void *)v8 < v6) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *(void *)(v8 + 24);
        *(_OWORD *)(v8 + 16) = *(_OWORD *)v8;
        *(void *)uint64_t v8 = v6;
        *(void *)(v8 + 8) = v9;
        v8 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  long long v10;
  long long v11;
  uint64_t v12;

  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 32 * a3 + 16;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 32 * a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        if (*(void *)(v8 - 48) < v6) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = (_OWORD *)(v8 - 16);
        uint64_t v11 = *(_OWORD *)(v8 - 48);
        uint64_t v10 = *(_OWORD *)(v8 - 32);
        *(_OWORD *)(v8 - 32) = *(_OWORD *)v8;
        v8 -= 32;
        uint64_t v12 = *(void *)(v8 + 24);
        *uint64_t v9 = v11;
        v9[1] = v10;
        *(void *)(v8 - 16) = v6;
        *(void *)(v8 - 8) = v12;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 32;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;

  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v6 = v5;
      uint64_t v7 = result;
      do
      {
        uint64_t v8 = *(float *)(v6 + 8);
        if (v8 >= *(float *)(v6 - 8)) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *(void *)v6;
        *(_OWORD *)uint64_t v6 = *(_OWORD *)(v6 - 16);
        *(float *)(v6 - 8) = v8;
        *(void *)(v6 - 16) = v9;
        v6 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  long long *v13;
  long long v15;
  long long v16;
  uint64_t v17;

  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 32 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (void *)v8;
      do
      {
        uint64_t v13 = (long long *)(v12 - 7);
        if (result == *(v12 - 7) && v10 == *(v12 - 6)) {
          break;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v16 = *v13;
        uint64_t v15 = *(_OWORD *)(v12 - 5);
        *(v12 - 4) = *v12;
        v12 -= 4;
        uint64_t result = v12[1];
        uint64_t v10 = v12[2];
        uint64_t v17 = v12[3];
        v13[2] = v16;
        v13[3] = v15;
        *(v12 - 3) = result;
        *(v12 - 2) = v10;
        *(v12 - 1) = v17;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 32;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v20 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = 48 * a3;
    while (2)
    {
      uint64_t v8 = v20;
      uint64_t v9 = v7;
      do
      {
        uint64_t v10 = *a4 + v9;
        outlined init with copy of EagerResolutionService?(v10, (uint64_t)v19, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
        outlined init with copy of EagerResolutionService?(v10 - 48, (uint64_t)v18, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
        uint64_t v11 = v19[0];
        uint64_t v12 = v18[0];
        outlined destroy of EagerResolutionService?((uint64_t)v18, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
        uint64_t result = outlined destroy of EagerResolutionService?((uint64_t)v19, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
        if (v12 < v11) {
          break;
        }
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v13 = (long long *)(*a4 + v9);
        long long v15 = v13[1];
        long long v14 = v13[2];
        long long v16 = *v13;
        long long v17 = *(v13 - 2);
        long long *v13 = *(v13 - 3);
        v13[1] = v17;
        v13[2] = *(v13 - 1);
        *(v13 - 3) = v16;
        *(v13 - 2) = v15;
        *(v13 - 1) = v14;
        v9 -= 48;
        ++v8;
      }
      while (v5 != v8);
      ++v5;
      v7 += 48;
      if (v5 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

void specialized _merge<A>(low:mid:high:buffer:by:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
  uint64_t v9 = MEMORY[0x270FA5388](v52);
  unint64_t v54 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  BOOL v53 = (uint64_t *)((char *)&v44 - v11);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_77;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_78;
  }
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v16 / v13);
    unint64_t v21 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2) {
      goto LABEL_71;
    }
    uint64_t v45 = v4;
    uint64_t v46 = v13;
    unint64_t v48 = a4;
    uint64_t v49 = -v13;
    unint64_t v47 = a1;
    while (1)
    {
      unint64_t v24 = a3;
      uint64_t v25 = v49;
      a3 += v49;
      unint64_t v51 = v21 + v49;
      uint64_t v26 = v53;
      outlined init with copy of EagerResolutionService?(v21 + v49, (uint64_t)v53, &demangling cache variable for type metadata for (Int, SearchResult));
      unint64_t v50 = a2 + v25;
      uint64_t v27 = v54;
      outlined init with copy of EagerResolutionService?(a2 + v25, (uint64_t)v54, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v28 = *v26;
      uint64_t v29 = *v27;
      outlined destroy of EagerResolutionService?((uint64_t)v27, &demangling cache variable for type metadata for (Int, SearchResult));
      outlined destroy of EagerResolutionService?((uint64_t)v26, &demangling cache variable for type metadata for (Int, SearchResult));
      if (v29 >= v28)
      {
        if (v24 >= a2 && a3 < a2)
        {
          unint64_t v32 = v47;
          a4 = v48;
          if (v24 == a2)
          {
            a2 = v50;
            goto LABEL_43;
          }
          a2 = v50;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        a2 = v50;
      }
      else
      {
        if (v24 >= v21 && a3 < v21)
        {
          unint64_t v32 = v47;
          a4 = v48;
          if (v24 == v21)
          {
            unint64_t v21 = v51;
            goto LABEL_43;
          }
          unint64_t v21 = v51;
          goto LABEL_40;
        }
        unint64_t v21 = v51;
      }
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v32 = v47;
      a4 = v48;
LABEL_43:
      uint64_t v13 = v46;
      if (v21 <= a4 || a2 <= v32) {
        goto LABEL_71;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v14 / v13);
  uint64_t v20 = v18 * v13;
  unint64_t v21 = a4 + v18 * v13;
  unint64_t v51 = a3;
  if (v20 >= 1 && a2 < a3)
  {
    uint64_t v45 = v4;
    unint64_t v50 = v21;
    uint64_t v34 = v53;
    uint64_t v35 = v54;
    do
    {
      outlined init with copy of EagerResolutionService?(a2, (uint64_t)v34, &demangling cache variable for type metadata for (Int, SearchResult));
      outlined init with copy of EagerResolutionService?(a4, (uint64_t)v35, &demangling cache variable for type metadata for (Int, SearchResult));
      uint64_t v36 = *v34;
      uint64_t v37 = *v35;
      outlined destroy of EagerResolutionService?((uint64_t)v35, &demangling cache variable for type metadata for (Int, SearchResult));
      outlined destroy of EagerResolutionService?((uint64_t)v34, &demangling cache variable for type metadata for (Int, SearchResult));
      if (v37 >= v36)
      {
        unint64_t v39 = a2 + v13;
        if (a1 < a2 || a1 >= v39)
        {
          OUTLINED_FUNCTION_177();
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          OUTLINED_FUNCTION_177();
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        if (a1 < a4 || a1 >= a4 + v13)
        {
          OUTLINED_FUNCTION_176();
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          OUTLINED_FUNCTION_176();
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v39 = a2;
        a4 += v13;
      }
      unint64_t v21 = v50;
      a1 += v13;
      BOOL v41 = a4 >= v50 || v39 >= v51;
      a2 = v39;
    }
    while (!v41);
  }
LABEL_71:
  int64_t v42 = v21 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v42 / v13);
    return;
  }
LABEL_79:
  __break(1u);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v32;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  BOOL v41;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;

  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v9 = MEMORY[0x270FA5388](v52);
  unint64_t v54 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  BOOL v53 = (uint64_t *)((char *)&v44 - v11);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_77;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_78;
  }
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v16 / v13);
    unint64_t v21 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2) {
      goto LABEL_71;
    }
    uint64_t v45 = v4;
    uint64_t v46 = v13;
    unint64_t v48 = a4;
    uint64_t v49 = -v13;
    unint64_t v47 = a1;
    while (1)
    {
      unint64_t v24 = a3;
      uint64_t v25 = v49;
      a3 += v49;
      unint64_t v51 = v21 + v49;
      uint64_t v26 = v53;
      outlined init with copy of SearchResultItem?(v21 + v49, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      unint64_t v50 = a2 + v25;
      uint64_t v27 = v54;
      outlined init with copy of SearchResultItem?(a2 + v25, (uint64_t)v54, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      uint64_t v28 = *v26;
      uint64_t v29 = *v27;
      outlined destroy of SearchResult?((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      outlined destroy of SearchResult?((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      if (v28 >= v29)
      {
        if (v24 >= v21 && a3 < v21)
        {
          unint64_t v32 = v47;
          a4 = v48;
          if (v24 == v21)
          {
            unint64_t v21 = v51;
            goto LABEL_43;
          }
          unint64_t v21 = v51;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        unint64_t v21 = v51;
      }
      else
      {
        if (v24 >= a2 && a3 < a2)
        {
          unint64_t v32 = v47;
          a4 = v48;
          if (v24 == a2)
          {
            a2 = v50;
            goto LABEL_43;
          }
          a2 = v50;
          goto LABEL_40;
        }
        a2 = v50;
      }
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v32 = v47;
      a4 = v48;
LABEL_43:
      uint64_t v13 = v46;
      if (v21 <= a4 || a2 <= v32) {
        goto LABEL_71;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v14 / v13);
  uint64_t v20 = v18 * v13;
  unint64_t v21 = a4 + v18 * v13;
  unint64_t v51 = a3;
  if (v20 >= 1 && a2 < a3)
  {
    uint64_t v45 = v4;
    unint64_t v50 = v21;
    uint64_t v34 = v53;
    uint64_t v35 = v54;
    do
    {
      outlined init with copy of SearchResultItem?(a2, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      outlined init with copy of SearchResultItem?(a4, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      uint64_t v36 = *v34;
      uint64_t v37 = *v35;
      outlined destroy of SearchResult?((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      outlined destroy of SearchResult?((uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      if (v36 >= v37)
      {
        if (a1 < a4 || a1 >= a4 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v38 = a2;
        a4 += v13;
      }
      else
      {
        unint64_t v38 = a2 + v13;
        if (a1 < a2 || a1 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v21 = v50;
      a1 += v13;
      BOOL v41 = a4 >= v50 || v38 >= v51;
      a2 = v38;
    }
    while (!v41);
  }
LABEL_71:
  int64_t v42 = v21 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v42 / v13);
    return;
  }
LABEL_79:
  __break(1u);
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    uint64_t v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_39;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = v6 - 16;
      if (*((void *)v6 - 2) >= *((void *)v12 - 2))
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        v6 -= 16;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v12 || v18 >= v12;
        uint64_t v20 = v12 - 16;
        v12 -= 16;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_35:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 16, a4);
  uint64_t v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (*(void *)v4 >= *(void *)v6)
    {
      int64_t v14 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    int64_t v14 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 16, v6);
  return 1;
}

{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  BOOL v14;
  long long v15;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  BOOL v21;
  long long v22;

  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 32;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 32;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 32, a4);
    uint64_t v12 = &v4[32 * v11];
    if (v7 >= v6 || v10 < 32) {
      goto LABEL_35;
    }
    long long v17 = (char *)(a3 - 32);
    while (1)
    {
      uint64_t v18 = v17 + 32;
      uint64_t v19 = v6 - 32;
      if (*((void *)v6 - 4) >= *((void *)v12 - 4))
      {
        BOOL v21 = v18 != v6 || v17 >= v6;
        v6 -= 32;
        if (!v21) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v20 = v18 != v12 || v17 >= v12;
        uint64_t v19 = v12 - 32;
        v12 -= 32;
        if (!v20) {
          goto LABEL_31;
        }
      }
      BOOL v22 = *((_OWORD *)v19 + 1);
      *(_OWORD *)long long v17 = *(_OWORD *)v19;
      *((_OWORD *)v17 + 1) = v22;
LABEL_31:
      v17 -= 32;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_35;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 32, a4);
  uint64_t v12 = &v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (*(void *)v4 >= *(void *)v6)
    {
      uint64_t v13 = v6;
      int64_t v14 = v7 == v6;
      v6 += 32;
      if (!v14) {
        goto LABEL_9;
      }
LABEL_10:
      v7 += 32;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_15;
      }
    }
    uint64_t v13 = v4;
    int64_t v14 = v7 == v4;
    v4 += 32;
    if (v14) {
      goto LABEL_10;
    }
LABEL_9:
    BOOL v15 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v13;
    *((_OWORD *)v7 + 1) = v15;
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v6 = v7;
LABEL_35:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 32, v6);
  return 1;
}

{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char *v16;
  long long v19;
  long long v20;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  long long v30;
  long long v31;
  char *v34;
  void v35[6];
  void v36[6];
  char *v37;

  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 48, a4);
    uint64_t v12 = &v4[48 * v11];
    if (v7 >= v6 || v10 < 48) {
      goto LABEL_41;
    }
    BOOL v22 = (char *)(a3 - 48);
    uint64_t v34 = v4;
    while (1)
    {
      uint64_t v37 = v22 + 48;
      uint64_t v23 = v12 - 48;
      outlined init with copy of EagerResolutionService?((uint64_t)(v12 - 48), (uint64_t)v36, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      unint64_t v24 = v6 - 48;
      outlined init with copy of EagerResolutionService?((uint64_t)(v6 - 48), (uint64_t)v35, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      uint64_t v25 = v36[0];
      uint64_t v26 = (unint64_t)v12;
      uint64_t v27 = v35[0];
      outlined destroy of EagerResolutionService?((uint64_t)v35, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      outlined destroy of EagerResolutionService?((uint64_t)v36, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      if (v27 >= v25)
      {
        uint64_t v29 = v37 != v6 || v22 >= v6;
        v6 -= 48;
        uint64_t v12 = (char *)v26;
        uint64_t v4 = v34;
        if (!v29) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v28 = v37 != (char *)v26 || (unint64_t)v22 >= v26;
        unint64_t v24 = v23;
        uint64_t v12 = v23;
        uint64_t v4 = v34;
        if (!v28) {
          goto LABEL_37;
        }
      }
      BOOL v30 = *(_OWORD *)v24;
      uint64_t v31 = *((_OWORD *)v24 + 2);
      *((_OWORD *)v22 + 1) = *((_OWORD *)v24 + 1);
      *((_OWORD *)v22 + 2) = v31;
      *(_OWORD *)BOOL v22 = v30;
LABEL_37:
      v22 -= 48;
      if (v12 <= v4 || v6 <= v7) {
        goto LABEL_41;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 48, a4);
  uint64_t v12 = &v4[48 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 48)
  {
    do
    {
      outlined init with copy of EagerResolutionService?((uint64_t)v6, (uint64_t)v36, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      outlined init with copy of EagerResolutionService?((uint64_t)v4, (uint64_t)v35, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      uint64_t v13 = v36[0];
      int64_t v14 = v35[0];
      outlined destroy of EagerResolutionService?((uint64_t)v35, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      outlined destroy of EagerResolutionService?((uint64_t)v36, &demangling cache variable for type metadata for (Int, ChatMessageRecord));
      if (v14 >= v13)
      {
        BOOL v15 = v7 == v6;
        int64_t v16 = v6;
        v6 += 48;
        if (v15 && v7 < v6) {
          goto LABEL_16;
        }
      }
      else
      {
        BOOL v15 = v7 == v4;
        int64_t v16 = v4;
        v4 += 48;
        if (v15 && v7 < v4) {
          goto LABEL_16;
        }
      }
      uint64_t v19 = *(_OWORD *)v16;
      uint64_t v20 = *((_OWORD *)v16 + 2);
      *((_OWORD *)v7 + 1) = *((_OWORD *)v16 + 1);
      *((_OWORD *)v7 + 2) = v20;
      *(_OWORD *)uint64_t v7 = v19;
LABEL_16:
      v7 += 48;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_41:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 48, v6);
  return 1;
}

{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char *v14;
  long long v15;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  long long v23;

  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 32;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 32;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 32, a4);
    uint64_t v12 = &v4[32 * v11];
    if (v7 >= v6 || v10 < 32) {
      goto LABEL_43;
    }
    long long v17 = (char *)(a3 - 32);
    while (1)
    {
      uint64_t v18 = v17 + 32;
      uint64_t v19 = v12 - 32;
      uint64_t v20 = *((void *)v12 - 4) == *((void *)v6 - 4) && *((void *)v12 - 3) == *((void *)v6 - 3);
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        BOOL v22 = v18 != v12 || v17 >= v12;
        v12 -= 32;
        if (!v22) {
          goto LABEL_39;
        }
      }
      else
      {
        BOOL v21 = v18 != v6 || v17 >= v6;
        uint64_t v19 = v6 - 32;
        v6 -= 32;
        if (!v21) {
          goto LABEL_39;
        }
      }
      uint64_t v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)long long v17 = *(_OWORD *)v19;
      *((_OWORD *)v17 + 1) = v23;
LABEL_39:
      v17 -= 32;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_43;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 32, a4);
  uint64_t v12 = &v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      uint64_t v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      int64_t v14 = v4;
      uint64_t v13 = v7 == v4;
      v4 += 32;
      if (!v13) {
        goto LABEL_13;
      }
LABEL_14:
      v7 += 32;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    int64_t v14 = v6;
    uint64_t v13 = v7 == v6;
    v6 += 32;
    if (v13) {
      goto LABEL_14;
    }
LABEL_13:
    BOOL v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v14;
    *((_OWORD *)v7 + 1) = v15;
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_43:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 32, v6);
  return 1;
}

uint64_t specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5);
}

{
  uint64_t v5;
  void *v10;
  uint64_t v12;

  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5);
}

{
  uint64_t v5;
  void *v10;
  uint64_t v12;

  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5);
}

{
  uint64_t v5;
  void *v10;
  uint64_t v12;

  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5);
}

{
  uint64_t v5;
  void *v10;
  uint64_t v12;

  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5);
}

uint64_t specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v13 = *a6;
  int64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v14;
  *int64_t v14 = v7;
  v14[1] = specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:);
  return specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(a2, a3, a4, a5, v13, a7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_Say10OmniSearch0D6ResultVGt_TG5(uint64_t a1, int *a2)
{
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  Swift::Int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v3;
  *Swift::Int v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_Say10OmniSearch0D6ResultVGt_TG5TQ0_;
  return v5(v2 + 16);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_Say10OmniSearch0D6ResultVGt_TG5TQ0_()
{
  OUTLINED_FUNCTION_49();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 24);
  *uint64_t v2 = *(void *)(v1 + 16);
  v2[1] = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v3 + 8);
  return v6();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_SS_SaySSGtt_TG5(uint64_t a1, int *a2)
{
  *(void *)(v2 + 48) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v3;
  *uint64_t v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_SS_SaySSGtt_TG5TQ0_;
  return v5(v2 + 16);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_SS_SaySSGtt_TG5TQ0_()
{
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v5 = *(_OWORD **)(v4 + 48);
  uint64_t v6 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  long long v8 = *(_OWORD *)(v2 + 32);
  *uint64_t v5 = *(_OWORD *)(v2 + 16);
  v5[1] = v8;
  OUTLINED_FUNCTION_86();
  return v9();
}

uint64_t partial apply for specialized closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_63();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_63();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_63();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_63();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_63();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

uint64_t partial apply for specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)()
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_132();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_139();
  return specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(v3, v4, v5, v6, v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_132();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_34_1();
  return v4(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v0);
  OUTLINED_FUNCTION_102();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_26_1(v1);
  *uint64_t v2 = v3;
  v2[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_139();
  return specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(v4, v5, v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_34_1();
  return v4(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_12_0(v0);
  OUTLINED_FUNCTION_102();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_26_1(v1);
  *uint64_t v2 = v3;
  v2[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_139();
  return specialized closure #1 in closure #1 in Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_257DEA254()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch17ChatMessageRecord_pt_Tg5TA()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_134();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_43_0();
  return v4(v3);
}

uint64_t outlined init with copy of ExtractionRule(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  OUTLINED_FUNCTION_1_0();
  (*v3)(a2);
  return a2;
}

uint64_t objectdestroy_24Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_SS_SaySSGtt_TG5TA()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_134();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_43_0();
  return v4(v3);
}

uint64_t outlined init with copy of EagerResolutionService?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t sub_257DEA698()
{
  uint64_t v4 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_31_1();
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v9 = *(void *)(v8 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v10 = v0 + v7;
  type metadata accessor for SearchResultItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v318 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = (int *)type metadata accessor for EmailDocument(0);
      uint64_t v12 = OUTLINED_FUNCTION_38_0();
      OUTLINED_FUNCTION_1_0();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v12);
      OUTLINED_FUNCTION_191();
      OUTLINED_FUNCTION_189();
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_6_1();
      if (OUTLINED_FUNCTION_192(v11[19]))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v14 = v10 + v11[21];
      uint64_t v15 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        uint64_t v313 = (v6 + 48) & ~v6;
        swift_bridgeObjectRelease();
        uint64_t v16 = OUTLINED_FUNCTION_185();
        if (!OUTLINED_FUNCTION_8_0(v16))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x8C)))
          {
            uint64_t v17 = OUTLINED_FUNCTION_24_1();
            v18(v17);
          }
          uint64_t v15 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x90);
          if (!OUTLINED_FUNCTION_9_1(v15))
          {
            uint64_t v19 = OUTLINED_FUNCTION_24_1();
            v20(v19);
          }
        }
        uint64_t v21 = OUTLINED_FUNCTION_181();
        if (!OUTLINED_FUNCTION_8_0(v21))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x70)))
          {
            uint64_t v22 = OUTLINED_FUNCTION_24_1();
            v23(v22);
          }
          uint64_t v15 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x74);
          if (!OUTLINED_FUNCTION_9_1(v15))
          {
            uint64_t v24 = OUTLINED_FUNCTION_24_1();
            v25(v24);
          }
        }
        uint64_t v26 = OUTLINED_FUNCTION_180();
        uint64_t v312 = v14;
        if (!OUTLINED_FUNCTION_8_0(v26))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_107();
          if (!OUTLINED_FUNCTION_21_1(v6))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v27();
          }
          OUTLINED_FUNCTION_2_0();
          uint64_t v15 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x7C);
          if (!OUTLINED_FUNCTION_48_0(v15))
          {
            OUTLINED_FUNCTION_151();
            v28();
          }
          if (!OUTLINED_FUNCTION_121())
          {
            uint64_t v29 = OUTLINED_FUNCTION_24_1();
            v30(v29);
          }
        }
        uint64_t v31 = OUTLINED_FUNCTION_182();
        if (!OUTLINED_FUNCTION_8_0(v31))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x6C)))
          {
            uint64_t v32 = OUTLINED_FUNCTION_24_1();
            v33(v32);
          }
          uint64_t v15 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x70);
          if (!OUTLINED_FUNCTION_9_1(v15))
          {
            uint64_t v34 = OUTLINED_FUNCTION_24_1();
            v35(v34);
          }
        }
        uint64_t v36 = OUTLINED_FUNCTION_183();
        if (!OUTLINED_FUNCTION_8_0(v36))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x60)))
          {
            uint64_t v37 = OUTLINED_FUNCTION_24_1();
            v38(v37);
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x64)))
          {
            uint64_t v39 = OUTLINED_FUNCTION_24_1();
            v40(v39);
          }
          uint64_t v15 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v41();
          }
        }
        uint64_t v42 = OUTLINED_FUNCTION_179();
        if (!OUTLINED_FUNCTION_8_0(v42))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x58)))
          {
            uint64_t v43 = OUTLINED_FUNCTION_24_1();
            v44(v43);
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x5C)))
          {
            uint64_t v45 = OUTLINED_FUNCTION_24_1();
            v46(v45);
          }
          uint64_t v15 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v47();
          }
        }
        uint64_t v48 = OUTLINED_FUNCTION_174();
        if (!OUTLINED_FUNCTION_8_0(v48))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_106();
          if (!OUTLINED_FUNCTION_29_1(v15))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v49 = OUTLINED_FUNCTION_30_1();
            v50(v49);
          }
          if (!OUTLINED_FUNCTION_29_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x38)))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v51 = OUTLINED_FUNCTION_30_1();
            v52(v51);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_1_0();
          unint64_t v54 = *(void (**)(void))(v53 + 8);
          uint64_t v12 = v53 + 8;
          OUTLINED_FUNCTION_56_0();
          v54();
          OUTLINED_FUNCTION_56_0();
          v54();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_170();
          OUTLINED_FUNCTION_169();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          if (!OUTLINED_FUNCTION_108(v3 + *(int *)(((v6 + 48) & ~v6) + 0x98)))
          {
            uint64_t v55 = OUTLINED_FUNCTION_24_1();
            v56(v55);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v14 = v312;
          uint64_t v15 = v317;
        }
        uint64_t v57 = v14 + *(int *)(v15 + 48);
        uint64_t v58 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_8_0(v58))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_88();
          if (!OUTLINED_FUNCTION_29_1(v15))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v59 = OUTLINED_FUNCTION_30_1();
            v60(v59);
          }
          if (!OUTLINED_FUNCTION_29_1(v57 + *(int *)(((v6 + 48) & ~v6) + 0x3C)))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v61 = OUTLINED_FUNCTION_30_1();
            v62(v61);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_171();
          OUTLINED_FUNCTION_175();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v6 = v12;
          uint64_t v11 = (int *)v14;
          uint64_t v14 = v312;
          uint64_t v15 = v317;
        }
        v14 += *(int *)(v15 + 52);
        uint64_t v63 = type metadata accessor for RestaurantReservation(0);
        uint64_t v7 = v313;
        if (!__swift_getEnumTagSinglePayload(v14, 1, v63))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = OUTLINED_FUNCTION_105();
          if (!OUTLINED_FUNCTION_8_0(v64))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v65 = OUTLINED_FUNCTION_58();
            v66(v65);
          }
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_162();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          uint64_t v7 = v313;
        }
      }
      uint64_t v67 = (int *)OUTLINED_FUNCTION_193();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1(v14 + v67[10]))
        {
          OUTLINED_FUNCTION_27_1();
          v68();
        }
        if (!OUTLINED_FUNCTION_9_1(v14 + v67[11]))
        {
          OUTLINED_FUNCTION_27_1();
          v69();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_9_1(v14 + v67[15]))
        {
          OUTLINED_FUNCTION_27_1();
          v70();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      uint64_t v71 = OUTLINED_FUNCTION_194();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1(v14 + *(int *)(v71 + 44)))
        {
          OUTLINED_FUNCTION_27_1();
          v72();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_167();
        if (!OUTLINED_FUNCTION_9_1(v14 + *(int *)(v71 + 56)))
        {
          OUTLINED_FUNCTION_27_1();
          v73();
        }
        OUTLINED_FUNCTION_166();
        OUTLINED_FUNCTION_165();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_164();
        OUTLINED_FUNCTION_163();
      }
      uint64_t v74 = OUTLINED_FUNCTION_195();
      if (!OUTLINED_FUNCTION_16_2())
      {
        OUTLINED_FUNCTION_173();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v75 = OUTLINED_FUNCTION_103();
        if (!OUTLINED_FUNCTION_8_0(v75))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v76 = OUTLINED_FUNCTION_58();
          v77(v76);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_48_0(v14 + *(int *)(v74 + 48)))
        {
          OUTLINED_FUNCTION_151();
          v78();
        }
        if (!OUTLINED_FUNCTION_54_0())
        {
          OUTLINED_FUNCTION_151();
          v79();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      uint64_t v80 = v11[25];
      goto LABEL_252;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v81 = (int *)type metadata accessor for MobileSMSDocument(0);
      uint64_t v82 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v83 = OUTLINED_FUNCTION_3_1();
        v84(v83);
      }
      uint64_t v85 = OUTLINED_FUNCTION_123();
      uint64_t v86 = OUTLINED_FUNCTION_120();
      if (!__swift_getEnumTagSinglePayload(v86, v87, v85))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v2, v85);
      }
      uint64_t v318 = v9;
      OUTLINED_FUNCTION_161();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_122();
      swift_bridgeObjectRelease();
      if (OUTLINED_FUNCTION_192(v81[17]))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v316 = v85;
      OUTLINED_FUNCTION_6_1();
      uint64_t v89 = v10 + v81[19];
      uint64_t v90 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_18_1(v89))
      {
        swift_bridgeObjectRelease();
        uint64_t v91 = type metadata accessor for RentalCarReservation(0);
        if (!OUTLINED_FUNCTION_19_1(v91))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v92 = OUTLINED_FUNCTION_3_1();
            v93(v92);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v94 = OUTLINED_FUNCTION_3_1();
            v95(v94);
          }
        }
        uint64_t v96 = type metadata accessor for TicketedTransportation(0);
        if (!OUTLINED_FUNCTION_19_1(v96))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v97 = OUTLINED_FUNCTION_3_1();
            v98(v97);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v99 = OUTLINED_FUNCTION_3_1();
            v100(v99);
          }
        }
        uint64_t v101 = type metadata accessor for TicketedShow(0);
        if (!OUTLINED_FUNCTION_19_1(v101))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v102();
          }
          OUTLINED_FUNCTION_11_1();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v103 = OUTLINED_FUNCTION_3_1();
            v104(v103);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v105 = OUTLINED_FUNCTION_3_1();
            v106(v105);
          }
        }
        uint64_t v107 = type metadata accessor for Appointment(0);
        if (!OUTLINED_FUNCTION_19_1(v107))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v108 = OUTLINED_FUNCTION_3_1();
            v109(v108);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v110 = OUTLINED_FUNCTION_3_1();
            v111(v110);
          }
        }
        uint64_t v112 = type metadata accessor for Party(0);
        if (!OUTLINED_FUNCTION_19_1(v112))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v113 = OUTLINED_FUNCTION_3_1();
            v114(v113);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v115 = OUTLINED_FUNCTION_3_1();
            v116(v115);
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v117();
          }
        }
        uint64_t v118 = type metadata accessor for Trip(0);
        if (!OUTLINED_FUNCTION_19_1(v118))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v119 = OUTLINED_FUNCTION_3_1();
            v120(v119);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v121 = OUTLINED_FUNCTION_3_1();
            v122(v121);
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v123();
          }
        }
        uint64_t v124 = type metadata accessor for FlightReservation(0);
        if (!OUTLINED_FUNCTION_19_1(v124))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v125();
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v126();
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          type metadata accessor for DateComponents();
          OUTLINED_FUNCTION_1_0();
          unint64_t v128 = *(void (**)(void))(v127 + 8);
          OUTLINED_FUNCTION_65();
          v128();
          OUTLINED_FUNCTION_65();
          v128();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v129 = OUTLINED_FUNCTION_120();
          if (!__swift_getEnumTagSinglePayload(v129, v130, v82))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v131 = OUTLINED_FUNCTION_3_1();
            v132(v131);
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
        }
        uint64_t v133 = v89 + *(int *)(v90 + 48);
        uint64_t v134 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_19_1(v134))
        {
          uint64_t v135 = v89;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v136 = v133 + *(int *)(v6 + 56);
          type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_18_1(v136))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v137();
          }
          if (!OUTLINED_FUNCTION_18_1(v133 + *(int *)(v6 + 60)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v138();
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v89 = v135;
        }
        uint64_t v139 = v89 + *(int *)(v90 + 52);
        uint64_t v140 = type metadata accessor for RestaurantReservation(0);
        uint64_t v7 = (v6 + 48) & ~v6;
        if (!OUTLINED_FUNCTION_41_0(v140))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v141 = v139 + *(int *)(v89 + 56);
          uint64_t v142 = type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_184(v142))
          {
            OUTLINED_FUNCTION_1_0();
            (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v141, (v6 + 48) & ~v6);
          }
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          uint64_t v7 = (v6 + 48) & ~v6;
        }
      }
      uint64_t v144 = type metadata accessor for PreExtractedCard(0);
      if (!OUTLINED_FUNCTION_41_0(v144))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v145 = OUTLINED_FUNCTION_3_1();
          v146(v145);
        }
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v147 = OUTLINED_FUNCTION_3_1();
          v148(v147);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v149 = OUTLINED_FUNCTION_3_1();
          v150(v149);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
      }
      uint64_t v151 = type metadata accessor for PreExtractedContact(0);
      if (!OUTLINED_FUNCTION_41_0(v151))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v152 = OUTLINED_FUNCTION_3_1();
          v153(v152);
        }
        OUTLINED_FUNCTION_14_2();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v154 = OUTLINED_FUNCTION_3_1();
          v155(v154);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_14_2();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v156 = v10 + v81[22];
      uint64_t v157 = type metadata accessor for PreExtractedSharedLink(0);
      if (!OUTLINED_FUNCTION_41_0(v157))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v158 = OUTLINED_FUNCTION_120();
        if (!__swift_getEnumTagSinglePayload(v158, v159, v316))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v160 = OUTLINED_FUNCTION_3_1();
          v161(v160);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        if (!OUTLINED_FUNCTION_108(v156 + *(int *)(v89 + 48)))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v162 = OUTLINED_FUNCTION_3_1();
          v163(v162);
        }
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v164 = OUTLINED_FUNCTION_3_1();
          v165(v164);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
      }
      uint64_t v80 = v81[23];
      goto LABEL_252;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v166 = type metadata accessor for CalendarEvent(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v167 = OUTLINED_FUNCTION_3_1();
        v168(v167);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v169 = OUTLINED_FUNCTION_3_1();
        v170(v169);
      }
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      if (!*(void *)(v10 + *(int *)(v166 + 52))) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 3u:
      uint64_t v318 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v171 = type metadata accessor for Photo(0);
      uint64_t v172 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v173 = OUTLINED_FUNCTION_3_1();
        v174(v173);
      }
      OUTLINED_FUNCTION_161();
      OUTLINED_FUNCTION_191();
      OUTLINED_FUNCTION_189();
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_6_1();
      uint64_t v175 = v10 + *(int *)(v171 + 68);
      uint64_t v176 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_16_2())
      {
        uint64_t v314 = (v6 + 48) & ~v6;
        swift_bridgeObjectRelease();
        uint64_t v177 = OUTLINED_FUNCTION_185();
        if (!OUTLINED_FUNCTION_8_0(v177))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x8C)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v178();
          }
          uint64_t v176 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x90);
          if (!OUTLINED_FUNCTION_9_1(v176))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v179();
          }
        }
        uint64_t v180 = OUTLINED_FUNCTION_181();
        if (!OUTLINED_FUNCTION_8_0(v180))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x70)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v181();
          }
          uint64_t v176 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x74);
          if (!OUTLINED_FUNCTION_9_1(v176))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v182();
          }
        }
        uint64_t v183 = OUTLINED_FUNCTION_180();
        uint64_t v315 = v175;
        if (!OUTLINED_FUNCTION_8_0(v183))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_107();
          if (!OUTLINED_FUNCTION_21_1(v6))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v184();
          }
          OUTLINED_FUNCTION_2_0();
          uint64_t v176 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x7C);
          if (!OUTLINED_FUNCTION_48_0(v176))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_52_0();
            v185();
          }
          if (!OUTLINED_FUNCTION_121())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v186();
          }
        }
        uint64_t v187 = OUTLINED_FUNCTION_182();
        if (!OUTLINED_FUNCTION_8_0(v187))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x6C)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v188();
          }
          uint64_t v176 = v3 + *(int *)(((v6 + 48) & ~v6) + 0x70);
          if (!OUTLINED_FUNCTION_9_1(v176))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v189();
          }
        }
        uint64_t v190 = OUTLINED_FUNCTION_183();
        if (!OUTLINED_FUNCTION_8_0(v190))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x60)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v191();
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x64)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v192();
          }
          uint64_t v176 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v193();
          }
        }
        uint64_t v194 = OUTLINED_FUNCTION_179();
        if (!OUTLINED_FUNCTION_8_0(v194))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x58)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v195();
          }
          if (!OUTLINED_FUNCTION_9_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x5C)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v196();
          }
          uint64_t v176 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v197();
          }
        }
        uint64_t v198 = OUTLINED_FUNCTION_174();
        if (!OUTLINED_FUNCTION_8_0(v198))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_106();
          if (!OUTLINED_FUNCTION_29_1(v176))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v199 = OUTLINED_FUNCTION_30_1();
            v200(v199);
          }
          if (!OUTLINED_FUNCTION_29_1(v3 + *(int *)(((v6 + 48) & ~v6) + 0x38)))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v201 = OUTLINED_FUNCTION_30_1();
            v202(v201);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_1_0();
          v204 = *(void (**)(void))(v203 + 8);
          uint64_t v172 = v203 + 8;
          OUTLINED_FUNCTION_56_0();
          v204();
          OUTLINED_FUNCTION_56_0();
          v204();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_170();
          OUTLINED_FUNCTION_169();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          if (!OUTLINED_FUNCTION_108(v3 + *(int *)(((v6 + 48) & ~v6) + 0x98)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_10_2();
            v205();
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v175 = v315;
          uint64_t v176 = v317;
        }
        uint64_t v206 = v175 + *(int *)(v176 + 48);
        uint64_t v207 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_8_0(v207))
        {
          OUTLINED_FUNCTION_74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_88();
          if (!OUTLINED_FUNCTION_29_1(v176))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v208 = OUTLINED_FUNCTION_30_1();
            v209(v208);
          }
          if (!OUTLINED_FUNCTION_29_1(v206 + *(int *)(((v6 + 48) & ~v6) + 0x3C)))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v210 = OUTLINED_FUNCTION_30_1();
            v211(v210);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_171();
          OUTLINED_FUNCTION_175();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v6 = v172;
          uint64_t v171 = v175;
          uint64_t v175 = v315;
          uint64_t v176 = v317;
        }
        v175 += *(int *)(v176 + 52);
        uint64_t v212 = type metadata accessor for RestaurantReservation(0);
        uint64_t v7 = v314;
        if (!__swift_getEnumTagSinglePayload(v175, 1, v212))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v213 = OUTLINED_FUNCTION_105();
          if (!OUTLINED_FUNCTION_8_0(v213))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v214 = OUTLINED_FUNCTION_58();
            v215(v214);
          }
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_162();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          uint64_t v7 = v314;
        }
      }
      v216 = (int *)OUTLINED_FUNCTION_193();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1(v175 + v216[10]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v217();
        }
        if (!OUTLINED_FUNCTION_9_1(v175 + v216[11]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v218();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_9_1(v175 + v216[15]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v219();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      uint64_t v220 = OUTLINED_FUNCTION_194();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_9_1(v175 + *(int *)(v220 + 44)))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v221();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_167();
        if (!OUTLINED_FUNCTION_9_1(v175 + *(int *)(v220 + 56)))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v222();
        }
        OUTLINED_FUNCTION_166();
        OUTLINED_FUNCTION_165();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_164();
        OUTLINED_FUNCTION_163();
      }
      uint64_t v223 = OUTLINED_FUNCTION_195();
      if (!OUTLINED_FUNCTION_16_2())
      {
        OUTLINED_FUNCTION_173();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = OUTLINED_FUNCTION_103();
        if (!OUTLINED_FUNCTION_8_0(v224))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v225 = OUTLINED_FUNCTION_58();
          v226(v225);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_48_0(v175 + *(int *)(v223 + 48)))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_52_0();
          v227();
        }
        if (!OUTLINED_FUNCTION_54_0())
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_52_0();
          v228();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
      }
      uint64_t v80 = *(int *)(v171 + 84);
LABEL_252:
      uint64_t v9 = v318;
      if (!*(void *)(v10 + v80 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v229 = type metadata accessor for NoteDocument(0);
      uint64_t v230 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v230))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_16_1();
        v231();
      }
      goto LABEL_273;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v232 = type metadata accessor for Reminder(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v233 = OUTLINED_FUNCTION_3_1();
        v234(v233);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v235 = OUTLINED_FUNCTION_3_1();
        v236(v235);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v237 = *(int *)(v232 + 48);
      goto LABEL_323;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v238 = type metadata accessor for PhoneHistory(0);
      uint64_t v239 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v239))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v240 = OUTLINED_FUNCTION_22_1();
        v241(v240);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v237 = *(int *)(v238 + 52);
      goto LABEL_323;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v242 = type metadata accessor for VoicemailTranscript(0);
      goto LABEL_267;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v237 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
      goto LABEL_323;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v242 = type metadata accessor for VoiceMemo(0);
LABEL_267:
      uint64_t v243 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v243))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v244 = OUTLINED_FUNCTION_22_1();
        v245(v244);
      }
      uint64_t v237 = *(int *)(v242 + 32);
      goto LABEL_323;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v229 = type metadata accessor for Safari(0);
      uint64_t v246 = OUTLINED_FUNCTION_123();
      if (!OUTLINED_FUNCTION_35_1(v246))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v247();
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
LABEL_273:
      uint64_t v248 = *(int *)(v229 + 36);
      goto LABEL_311;
    case 0xBu:
      swift_bridgeObjectRelease();

      break;
    case 0xCu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for WalletTransaction(0);
      uint64_t v249 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v249))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v250 = OUTLINED_FUNCTION_22_1();
        v251(v250);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for WalletPass(0);
      uint64_t v252 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v252))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v253 = OUTLINED_FUNCTION_22_1();
        v254(v253);
      }
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0xEu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FlightReservation(0);
      OUTLINED_FUNCTION_123();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v255 = OUTLINED_FUNCTION_3_1();
        v256(v255);
      }
      uint64_t v319 = v9;
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v257 = OUTLINED_FUNCTION_3_1();
        v258(v257);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_214();
      OUTLINED_FUNCTION_1_0();
      v260 = *(void (**)(void))(v259 + 8);
      OUTLINED_FUNCTION_99();
      v260();
      OUTLINED_FUNCTION_99();
      v260();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v261 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v261))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v262 = OUTLINED_FUNCTION_22_1();
        v263(v262);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      uint64_t v9 = v319;
      break;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for HotelReservation(0);
      OUTLINED_FUNCTION_216();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v264 = OUTLINED_FUNCTION_3_1();
        v265(v264);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v266 = OUTLINED_FUNCTION_3_1();
        v267(v266);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for RestaurantReservation(0);
      uint64_t v268 = OUTLINED_FUNCTION_214();
      if (!OUTLINED_FUNCTION_15_0(v268))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v269 = OUTLINED_FUNCTION_22_1();
        v270(v269);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_334;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v271 = type metadata accessor for RentalCarReservation(0);
      uint64_t v272 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v272))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v273();
      }
      uint64_t v248 = *(int *)(v271 + 144);
      goto LABEL_311;
    case 0x13u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v274 = type metadata accessor for TicketedTransportation(0);
      uint64_t v275 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v275))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v276();
      }
      uint64_t v248 = *(int *)(v274 + 116);
      goto LABEL_311;
    case 0x14u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v277 = type metadata accessor for TicketedShow(0);
      uint64_t v278 = OUTLINED_FUNCTION_213();
      if (!OUTLINED_FUNCTION_15_0(v278))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v279 = OUTLINED_FUNCTION_22_1();
        v280(v279);
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v281 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v282 = OUTLINED_FUNCTION_3_1();
        v283(v282);
      }
      uint64_t v284 = v10 + *(int *)(v277 + 128);
      goto LABEL_324;
    case 0x15u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v285 = type metadata accessor for Appointment(0);
      uint64_t v286 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v286))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v287();
      }
      uint64_t v248 = *(int *)(v285 + 112);
LABEL_311:
      uint64_t v288 = v10 + v248;
      if (!OUTLINED_FUNCTION_48_0(v10 + v248))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(uint64_t, uint64_t))(v289 + 8))(v288, v1);
      }
      break;
    case 0x16u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v290 = type metadata accessor for Party(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v291 = OUTLINED_FUNCTION_3_1();
        v292(v291);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v293 = OUTLINED_FUNCTION_3_1();
        v294(v293);
      }
      uint64_t v237 = *(int *)(v290 + 104);
      goto LABEL_323;
    case 0x17u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v295 = type metadata accessor for Trip(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v296 = OUTLINED_FUNCTION_3_1();
        v297(v296);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v298 = OUTLINED_FUNCTION_3_1();
        v299(v298);
      }
      uint64_t v237 = *(int *)(v295 + 100);
LABEL_323:
      uint64_t v284 = v10 + v237;
      uint64_t v281 = type metadata accessor for URL();
LABEL_324:
      if (!OUTLINED_FUNCTION_9_1(v284))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v284, v281);
      }
      break;
    case 0x18u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for GlobalItem();
      uint64_t v301 = OUTLINED_FUNCTION_215();
      if (!OUTLINED_FUNCTION_15_0(v301))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v302 = OUTLINED_FUNCTION_22_1();
        v303(v302);
      }
      OUTLINED_FUNCTION_155();
      if (!(!v307 & v306)) {
        outlined consume of Data._Representation(*v305, v304);
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
      goto LABEL_334;
    case 0x19u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_334;
    case 0x1Au:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Answer(0);
      uint64_t v308 = OUTLINED_FUNCTION_213();
      if (!OUTLINED_FUNCTION_15_0(v308))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v309 = OUTLINED_FUNCTION_22_1();
        v310(v309);
      }
LABEL_334:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  OUTLINED_FUNCTION_6_1();
  return MEMORY[0x270FA0238](v0, ((v9 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v6 | 7);
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5TA()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_134();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_43_0();
  return v4(v3);
}

uint64_t sub_257DEEA74()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_Say10OmniSearch0D6ResultVGt_TG5TA()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_134();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v3 = OUTLINED_FUNCTION_43_0();
  return v4(v3);
}

uint64_t outlined init with take of EagerResolutionService?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t sub_257DEECFC()
{
  uint64_t v4 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_31_1();
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (int *)((v6 + 48) & ~v6);
  uint64_t v9 = *(void *)(v8 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v10 = (id *)((char *)v7 + v0);
  type metadata accessor for SearchResultItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = (int *)type metadata accessor for EmailDocument(0);
      OUTLINED_FUNCTION_38_0();
      OUTLINED_FUNCTION_1_0();
      uint64_t v373 = v12;
      uint64_t v366 = v13 + 8;
      v368 = *(void (**)(uint64_t))(v13 + 8);
      v368(v2);
      OUTLINED_FUNCTION_191();
      OUTLINED_FUNCTION_189();
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_6_1();
      if (OUTLINED_FUNCTION_192(v11[19]))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v14 = (uint64_t)v10 + v11[21];
      uint64_t v15 = type metadata accessor for PartialExtractedAttributes(0);
      uint64_t v375 = v9;
      if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
      {
        uint64_t v364 = (v6 + 48) & ~v6;
        swift_bridgeObjectRelease();
        uint64_t v7 = (int *)OUTLINED_FUNCTION_202();
        uint64_t v16 = v373;
        if (!__swift_getEnumTagSinglePayload(v9, 1, (uint64_t)v7))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[35]))
          {
            uint64_t v17 = OUTLINED_FUNCTION_25_1();
            v18(v17);
          }
          if (!OUTLINED_FUNCTION_13_2(v7[36]))
          {
            uint64_t v19 = OUTLINED_FUNCTION_25_1();
            v20(v19);
          }
        }
        uint64_t v21 = OUTLINED_FUNCTION_199();
        if (!OUTLINED_FUNCTION_8_0(v21))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[28]))
          {
            uint64_t v22 = OUTLINED_FUNCTION_25_1();
            v23(v22);
          }
          if (!OUTLINED_FUNCTION_13_2(v7[29]))
          {
            uint64_t v24 = OUTLINED_FUNCTION_25_1();
            v25(v24);
          }
        }
        uint64_t v26 = OUTLINED_FUNCTION_198();
        if (!OUTLINED_FUNCTION_8_0(v26))
        {
          uint64_t v360 = v14;
          OUTLINED_FUNCTION_94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = OUTLINED_FUNCTION_107();
          if (!OUTLINED_FUNCTION_21_1(v6))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v27();
          }
          OUTLINED_FUNCTION_2_0();
          if (!OUTLINED_FUNCTION_13_2(v7[31]))
          {
            uint64_t v28 = OUTLINED_FUNCTION_25_1();
            v29(v28);
          }
          if (!OUTLINED_FUNCTION_178())
          {
            uint64_t v30 = OUTLINED_FUNCTION_25_1();
            v31(v30);
          }
        }
        uint64_t v32 = OUTLINED_FUNCTION_200();
        if (!OUTLINED_FUNCTION_8_0(v32))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[27]))
          {
            uint64_t v33 = OUTLINED_FUNCTION_25_1();
            v34(v33);
          }
          if (!OUTLINED_FUNCTION_13_2(v7[28]))
          {
            uint64_t v35 = OUTLINED_FUNCTION_25_1();
            v36(v35);
          }
        }
        uint64_t v37 = OUTLINED_FUNCTION_201();
        if (!OUTLINED_FUNCTION_8_0(v37))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[24]))
          {
            uint64_t v38 = OUTLINED_FUNCTION_25_1();
            v39(v38);
          }
          if (!OUTLINED_FUNCTION_13_2(v7[25]))
          {
            uint64_t v40 = OUTLINED_FUNCTION_25_1();
            v41(v40);
          }
          uint64_t v3 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v9))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v42();
          }
        }
        uint64_t v43 = OUTLINED_FUNCTION_197();
        if (!OUTLINED_FUNCTION_8_0(v43))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[22]))
          {
            uint64_t v44 = OUTLINED_FUNCTION_25_1();
            v45(v44);
          }
          if (!OUTLINED_FUNCTION_13_2(v7[23]))
          {
            uint64_t v46 = OUTLINED_FUNCTION_25_1();
            v47(v46);
          }
          uint64_t v3 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v9))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v48();
          }
        }
        uint64_t v49 = OUTLINED_FUNCTION_196();
        if (!OUTLINED_FUNCTION_8_0(v49))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_106();
          if (!OUTLINED_FUNCTION_29_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v50 = OUTLINED_FUNCTION_30_1();
            v51(v50);
          }
          if (!OUTLINED_FUNCTION_29_1(v9 + v7[14]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v52 = OUTLINED_FUNCTION_30_1();
            v53(v52);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_1_0();
          uint64_t v55 = *(void (**)(void))(v54 + 8);
          OUTLINED_FUNCTION_56_0();
          v55();
          OUTLINED_FUNCTION_56_0();
          v55();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_170();
          OUTLINED_FUNCTION_169();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v3 = v9 + v7[38];
          if (!OUTLINED_FUNCTION_80(v3, v56, v57, v58, v59, v60, v61, v62, v359, v14, (uint64_t)v11, v6, v364, v366, (uint64_t)v368, v371, v373))
          {
            OUTLINED_FUNCTION_47_0();
            v63();
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v11 = (int *)v361;
          uint64_t v6 = v363;
          uint64_t v14 = v360;
          uint64_t v16 = v371;
        }
        uint64_t v9 = v14 + *(int *)(v16 + 48);
        uint64_t v64 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_8_0(v64))
        {
          OUTLINED_FUNCTION_94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_88();
          if (!OUTLINED_FUNCTION_29_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v65 = OUTLINED_FUNCTION_30_1();
            v66(v65);
          }
          if (!OUTLINED_FUNCTION_29_1(v9 + v7[15]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v67 = OUTLINED_FUNCTION_30_1();
            v68(v67);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_171();
          OUTLINED_FUNCTION_175();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v6 = v14;
          uint64_t v16 = v371;
        }
        uint64_t v15 = v14 + *(int *)(v16 + 52);
        uint64_t v69 = type metadata accessor for RestaurantReservation(0);
        if (!OUTLINED_FUNCTION_188(v69))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v70 = OUTLINED_FUNCTION_105();
          if (!OUTLINED_FUNCTION_8_0(v70))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v71 = OUTLINED_FUNCTION_58();
            v72(v71);
          }
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_162();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          uint64_t v7 = (int *)v364;
          uint64_t v9 = v375;
        }
      }
      uint64_t v73 = (int *)OUTLINED_FUNCTION_193();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_82(v73[10], v359, v360, v361, v363, v364, v366, (uint64_t)v368, v371, v373))
        {
          OUTLINED_FUNCTION_47_0();
          v74();
        }
        if (!OUTLINED_FUNCTION_9_1(v15 + v73[11]))
        {
          OUTLINED_FUNCTION_47_0();
          v75();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_9_1(v15 + v73[15]))
        {
          OUTLINED_FUNCTION_47_0();
          v76();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        uint64_t v9 = v375;
      }
      uint64_t v77 = OUTLINED_FUNCTION_194();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_82(*(int *)(v77 + 44), v359, v360, v361, v363, v364, v366, (uint64_t)v368, v371, v373))
        {
          OUTLINED_FUNCTION_47_0();
          v78();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_167();
        if (!OUTLINED_FUNCTION_9_1(v15 + *(int *)(v77 + 56)))
        {
          OUTLINED_FUNCTION_47_0();
          v79();
        }
        OUTLINED_FUNCTION_166();
        OUTLINED_FUNCTION_165();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_164();
        OUTLINED_FUNCTION_163();
        uint64_t v9 = v375;
      }
      uint64_t v80 = OUTLINED_FUNCTION_195();
      if (!OUTLINED_FUNCTION_16_2())
      {
        OUTLINED_FUNCTION_173();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v81 = OUTLINED_FUNCTION_103();
        if (!OUTLINED_FUNCTION_8_0(v81))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v82 = OUTLINED_FUNCTION_58();
          v83(v82);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_80(v15 + *(int *)(v80 + 48), v84, v85, v86, v87, v88, v89, v90, v359, v360, (uint64_t)v11, v363, v364, v366, (uint64_t)v368, v371, v373))
        {
          OUTLINED_FUNCTION_47_0();
          v91();
        }
        if (!OUTLINED_FUNCTION_54_0())
        {
          OUTLINED_FUNCTION_47_0();
          v92();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        uint64_t v9 = v375;
        uint64_t v11 = v362;
      }
      uint64_t v93 = v11[25];
      goto LABEL_253;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v94 = (int *)type metadata accessor for MobileSMSDocument(0);
      uint64_t v95 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v96 = OUTLINED_FUNCTION_3_1();
        v97(v96);
      }
      uint64_t v98 = OUTLINED_FUNCTION_123();
      if (!OUTLINED_FUNCTION_16_2())
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_40_0();
        v99();
      }
      uint64_t v376 = v9;
      OUTLINED_FUNCTION_161();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_122();
      swift_bridgeObjectRelease();
      if (OUTLINED_FUNCTION_192(v94[17]))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v372 = v98;
      OUTLINED_FUNCTION_6_1();
      uint64_t v100 = (uint64_t)v10 + v94[19];
      uint64_t v101 = type metadata accessor for PartialExtractedAttributes(0);
      if (!OUTLINED_FUNCTION_18_1(v100))
      {
        swift_bridgeObjectRelease();
        uint64_t v102 = type metadata accessor for RentalCarReservation(0);
        if (!OUTLINED_FUNCTION_19_1(v102))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v103 = OUTLINED_FUNCTION_3_1();
            v104(v103);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v105 = OUTLINED_FUNCTION_3_1();
            v106(v105);
          }
        }
        uint64_t v107 = type metadata accessor for TicketedTransportation(0);
        if (!OUTLINED_FUNCTION_19_1(v107))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v108 = OUTLINED_FUNCTION_3_1();
            v109(v108);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v110 = OUTLINED_FUNCTION_3_1();
            v111(v110);
          }
        }
        uint64_t v112 = type metadata accessor for TicketedShow(0);
        if (!OUTLINED_FUNCTION_19_1(v112))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v113();
          }
          OUTLINED_FUNCTION_11_1();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v114 = OUTLINED_FUNCTION_3_1();
            v115(v114);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v116 = OUTLINED_FUNCTION_3_1();
            v117(v116);
          }
        }
        uint64_t v118 = type metadata accessor for Appointment(0);
        if (!OUTLINED_FUNCTION_19_1(v118))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v119 = OUTLINED_FUNCTION_3_1();
            v120(v119);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v121 = OUTLINED_FUNCTION_3_1();
            v122(v121);
          }
        }
        uint64_t v123 = type metadata accessor for Party(0);
        if (!OUTLINED_FUNCTION_19_1(v123))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v124 = OUTLINED_FUNCTION_3_1();
            v125(v124);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v126 = OUTLINED_FUNCTION_3_1();
            v127(v126);
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v128();
          }
        }
        uint64_t v129 = type metadata accessor for Trip(0);
        if (!OUTLINED_FUNCTION_19_1(v129))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v130 = OUTLINED_FUNCTION_3_1();
            v131(v130);
          }
          if (!OUTLINED_FUNCTION_4_1())
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v132 = OUTLINED_FUNCTION_3_1();
            v133(v132);
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v134();
          }
        }
        uint64_t v135 = type metadata accessor for FlightReservation(0);
        if (!OUTLINED_FUNCTION_19_1(v135))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v136();
          }
          if (!OUTLINED_FUNCTION_16_2())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v137();
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          type metadata accessor for DateComponents();
          OUTLINED_FUNCTION_1_0();
          uint64_t v139 = *(void (**)(void))(v138 + 8);
          OUTLINED_FUNCTION_65();
          v139();
          OUTLINED_FUNCTION_65();
          v139();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v140 = OUTLINED_FUNCTION_120();
          if (!__swift_getEnumTagSinglePayload(v140, v141, v95))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v142 = OUTLINED_FUNCTION_3_1();
            v143(v142);
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
        }
        uint64_t v144 = v100 + *(int *)(v101 + 48);
        uint64_t v145 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_19_1(v145))
        {
          uint64_t v146 = v100;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v147 = v144 + *(int *)(v6 + 56);
          type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_18_1(v147))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v148();
          }
          if (!OUTLINED_FUNCTION_18_1(v144 + *(int *)(v6 + 60)))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v149();
          }
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_11_1();
          uint64_t v100 = v146;
        }
        uint64_t v150 = v100 + *(int *)(v101 + 52);
        uint64_t v151 = type metadata accessor for RestaurantReservation(0);
        uint64_t v7 = (int *)((v6 + 48) & ~v6);
        if (!OUTLINED_FUNCTION_41_0(v151))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v152 = v150 + *(int *)(v100 + 56);
          uint64_t v153 = type metadata accessor for DateComponents();
          if (!OUTLINED_FUNCTION_184(v153))
          {
            OUTLINED_FUNCTION_1_0();
            (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v152, (v6 + 48) & ~v6);
          }
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          OUTLINED_FUNCTION_14_2();
          uint64_t v7 = (int *)((v6 + 48) & ~v6);
        }
      }
      uint64_t v155 = type metadata accessor for PreExtractedCard(0);
      if (!OUTLINED_FUNCTION_41_0(v155))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v156 = OUTLINED_FUNCTION_3_1();
          v157(v156);
        }
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v158 = OUTLINED_FUNCTION_3_1();
          v159(v158);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v160 = OUTLINED_FUNCTION_3_1();
          v161(v160);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
      }
      uint64_t v162 = type metadata accessor for PreExtractedContact(0);
      if (!OUTLINED_FUNCTION_41_0(v162))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v163 = OUTLINED_FUNCTION_3_1();
          v164(v163);
        }
        OUTLINED_FUNCTION_14_2();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v165 = OUTLINED_FUNCTION_3_1();
          v166(v165);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_14_2();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v167 = (char *)v10 + v94[22];
      uint64_t v168 = type metadata accessor for PreExtractedSharedLink(0);
      if (!OUTLINED_FUNCTION_41_0(v168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v169 = OUTLINED_FUNCTION_120();
        if (!__swift_getEnumTagSinglePayload(v169, v170, v372))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v171 = OUTLINED_FUNCTION_3_1();
          v172(v171);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        if (!OUTLINED_FUNCTION_108((uint64_t)&v167[*(int *)(v100 + 48)]))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v173 = OUTLINED_FUNCTION_3_1();
          v174(v173);
        }
        if (!OUTLINED_FUNCTION_4_1())
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v175 = OUTLINED_FUNCTION_3_1();
          v176(v175);
        }
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_14_2();
      }
      uint64_t v9 = v376;
      if (!*(id *)((char *)v10 + v94[23] + 8)) {
        break;
      }
      goto LABEL_254;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v177 = type metadata accessor for CalendarEvent(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v178 = OUTLINED_FUNCTION_3_1();
        v179(v178);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v180 = OUTLINED_FUNCTION_3_1();
        v181(v180);
      }
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      if (!*(id *)((char *)v10 + *(int *)(v177 + 52))) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_335;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v182 = type metadata accessor for Photo(0);
      OUTLINED_FUNCTION_38_0();
      uint64_t v183 = OUTLINED_FUNCTION_120();
      uint64_t v374 = v184;
      if (!__swift_getEnumTagSinglePayload(v183, v185, v184))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(uint64_t))(v186 + 8))(v2);
      }
      OUTLINED_FUNCTION_161();
      OUTLINED_FUNCTION_191();
      OUTLINED_FUNCTION_189();
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_6_1();
      uint64_t v187 = (uint64_t)v10 + *(int *)(v182 + 68);
      uint64_t v188 = type metadata accessor for PartialExtractedAttributes(0);
      uint64_t v377 = v9;
      if (!__swift_getEnumTagSinglePayload(v187, 1, v188))
      {
        uint64_t v364 = (v6 + 48) & ~v6;
        swift_bridgeObjectRelease();
        uint64_t v7 = (int *)OUTLINED_FUNCTION_202();
        uint64_t v189 = v374;
        if (!__swift_getEnumTagSinglePayload(v9, 1, (uint64_t)v7))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[35]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v190();
          }
          if (!OUTLINED_FUNCTION_13_2(v7[36]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v191();
          }
        }
        uint64_t v192 = OUTLINED_FUNCTION_199();
        if (!OUTLINED_FUNCTION_8_0(v192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[28]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v193();
          }
          if (!OUTLINED_FUNCTION_13_2(v7[29]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v194();
          }
        }
        uint64_t v195 = OUTLINED_FUNCTION_198();
        if (!OUTLINED_FUNCTION_8_0(v195))
        {
          uint64_t v365 = v187;
          OUTLINED_FUNCTION_94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = OUTLINED_FUNCTION_107();
          if (!OUTLINED_FUNCTION_21_1(v6))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v196();
          }
          OUTLINED_FUNCTION_2_0();
          if (!OUTLINED_FUNCTION_13_2(v7[31]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v197();
          }
          if (!OUTLINED_FUNCTION_178())
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v198();
          }
        }
        uint64_t v199 = OUTLINED_FUNCTION_200();
        if (!OUTLINED_FUNCTION_8_0(v199))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[27]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v200();
          }
          if (!OUTLINED_FUNCTION_13_2(v7[28]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v201();
          }
        }
        uint64_t v202 = OUTLINED_FUNCTION_201();
        if (!OUTLINED_FUNCTION_8_0(v202))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[24]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v203();
          }
          if (!OUTLINED_FUNCTION_13_2(v7[25]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v204();
          }
          uint64_t v3 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v9))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v205();
          }
        }
        uint64_t v206 = OUTLINED_FUNCTION_197();
        if (!OUTLINED_FUNCTION_8_0(v206))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!OUTLINED_FUNCTION_13_2(v7[22]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v207();
          }
          if (!OUTLINED_FUNCTION_13_2(v7[23]))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_23_1();
            v208();
          }
          uint64_t v3 = OUTLINED_FUNCTION_87();
          if (!OUTLINED_FUNCTION_21_1(v9))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_40_0();
            v209();
          }
        }
        uint64_t v210 = OUTLINED_FUNCTION_196();
        if (!OUTLINED_FUNCTION_8_0(v210))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_106();
          if (!OUTLINED_FUNCTION_29_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v211 = OUTLINED_FUNCTION_30_1();
            v212(v211);
          }
          if (!OUTLINED_FUNCTION_29_1(v9 + v7[14]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v213 = OUTLINED_FUNCTION_30_1();
            v214(v213);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_1_0();
          v216 = *(void (**)(void))(v215 + 8);
          OUTLINED_FUNCTION_56_0();
          v216();
          OUTLINED_FUNCTION_56_0();
          v216();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_170();
          OUTLINED_FUNCTION_169();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v3 = v9 + v7[38];
          if (!OUTLINED_FUNCTION_80(v3, v217, v218, v219, v220, v221, v222, v223, v359, v360, v361, v6, v364, v187, v182, v371, v374))
          {
            OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_52_0();
            v224();
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v6 = v363;
          uint64_t v187 = v365;
          uint64_t v182 = v367;
          uint64_t v189 = v371;
        }
        uint64_t v9 = v187 + *(int *)(v189 + 48);
        uint64_t v225 = type metadata accessor for HotelReservation(0);
        if (!OUTLINED_FUNCTION_8_0(v225))
        {
          OUTLINED_FUNCTION_94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_88();
          if (!OUTLINED_FUNCTION_29_1(v3))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v226 = OUTLINED_FUNCTION_30_1();
            v227(v226);
          }
          if (!OUTLINED_FUNCTION_29_1(v9 + v7[15]))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v228 = OUTLINED_FUNCTION_30_1();
            v229(v228);
          }
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_171();
          OUTLINED_FUNCTION_175();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_2_0();
          uint64_t v6 = v187;
          uint64_t v189 = v371;
        }
        uint64_t v188 = v187 + *(int *)(v189 + 52);
        uint64_t v230 = type metadata accessor for RestaurantReservation(0);
        if (!OUTLINED_FUNCTION_188(v230))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v231 = OUTLINED_FUNCTION_105();
          if (!OUTLINED_FUNCTION_8_0(v231))
          {
            OUTLINED_FUNCTION_1_0();
            uint64_t v232 = OUTLINED_FUNCTION_58();
            v233(v232);
          }
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_162();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_7_1();
          uint64_t v7 = (int *)v364;
          uint64_t v9 = v377;
        }
      }
      v234 = (int *)OUTLINED_FUNCTION_193();
      if (!OUTLINED_FUNCTION_16_2())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_82(v234[10], v359, v360, v361, v363, v364, v365, v367, v371, v374))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v235();
        }
        if (!OUTLINED_FUNCTION_9_1(v188 + v234[11]))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_10_2();
          v236();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        uint64_t v237 = v188 + v234[15];
        if (!OUTLINED_FUNCTION_9_1(v237))
        {
          OUTLINED_FUNCTION_1_0();
          (*(void (**)(uint64_t))(v238 + 8))(v237);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        uint64_t v9 = v377;
      }
      uint64_t v239 = OUTLINED_FUNCTION_194();
      if (!OUTLINED_FUNCTION_16_2())
      {
        uint64_t v240 = v9;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!OUTLINED_FUNCTION_80(v188 + *(int *)(v239 + 44), v241, v242, v243, v244, v245, v246, v247, v359, v360, v361, v363, v364, v365, v182, v371, v374))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_52_0();
          v248();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_167();
        uint64_t v249 = v188 + *(int *)(v239 + 56);
        if (!OUTLINED_FUNCTION_48_0(v249))
        {
          OUTLINED_FUNCTION_1_0();
          (*(void (**)(uint64_t))(v250 + 8))(v249);
        }
        OUTLINED_FUNCTION_166();
        OUTLINED_FUNCTION_165();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_164();
        OUTLINED_FUNCTION_163();
        uint64_t v9 = v240;
        uint64_t v182 = v369;
      }
      uint64_t v251 = OUTLINED_FUNCTION_195();
      if (!OUTLINED_FUNCTION_16_2())
      {
        OUTLINED_FUNCTION_173();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v252 = OUTLINED_FUNCTION_103();
        if (!OUTLINED_FUNCTION_8_0(v252))
        {
          OUTLINED_FUNCTION_1_0();
          uint64_t v253 = OUTLINED_FUNCTION_58();
          v254(v253);
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        if (!OUTLINED_FUNCTION_80(v188 + *(int *)(v251 + 48), v255, v256, v257, v258, v259, v260, v261, v359, v360, v361, v363, v364, v365, v182, v371, v374))
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_52_0();
          v262();
        }
        if (!OUTLINED_FUNCTION_54_0())
        {
          OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_52_0();
          v263();
        }
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_7_1();
        uint64_t v9 = v377;
        uint64_t v182 = v370;
      }
      uint64_t v93 = *(int *)(v182 + 84);
LABEL_253:
      if (!*(id *)((char *)v10 + v93 + 8)) {
        break;
      }
LABEL_254:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_335;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v264 = type metadata accessor for NoteDocument(0);
      uint64_t v265 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v265))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_16_1();
        v266();
      }
      goto LABEL_274;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v267 = type metadata accessor for Reminder(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v268 = OUTLINED_FUNCTION_3_1();
        v269(v268);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v270 = OUTLINED_FUNCTION_3_1();
        v271(v270);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v272 = *(int *)(v267 + 48);
      goto LABEL_324;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v273 = type metadata accessor for PhoneHistory(0);
      uint64_t v274 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v274))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v275 = OUTLINED_FUNCTION_22_1();
        v276(v275);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v272 = *(int *)(v273 + 52);
      goto LABEL_324;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v277 = type metadata accessor for VoicemailTranscript(0);
      goto LABEL_268;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v272 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
      goto LABEL_324;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v277 = type metadata accessor for VoiceMemo(0);
LABEL_268:
      uint64_t v278 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v278))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v279 = OUTLINED_FUNCTION_22_1();
        v280(v279);
      }
      uint64_t v272 = *(int *)(v277 + 32);
      goto LABEL_324;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v264 = type metadata accessor for Safari(0);
      uint64_t v281 = OUTLINED_FUNCTION_123();
      if (!OUTLINED_FUNCTION_35_1(v281))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v282();
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
LABEL_274:
      uint64_t v283 = *(int *)(v264 + 36);
      goto LABEL_312;
    case 0xBu:
      swift_bridgeObjectRelease();

      break;
    case 0xCu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for WalletTransaction(0);
      uint64_t v284 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v284))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v285 = OUTLINED_FUNCTION_22_1();
        v286(v285);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_335;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for WalletPass(0);
      uint64_t v287 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v287))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v288 = OUTLINED_FUNCTION_22_1();
        v289(v288);
      }
      OUTLINED_FUNCTION_6_1();
      goto LABEL_335;
    case 0xEu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_335;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FlightReservation(0);
      OUTLINED_FUNCTION_123();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v290 = OUTLINED_FUNCTION_3_1();
        v291(v290);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v292 = OUTLINED_FUNCTION_3_1();
        v293(v292);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_214();
      OUTLINED_FUNCTION_1_0();
      uint64_t v295 = *(void (**)(void))(v294 + 8);
      OUTLINED_FUNCTION_99();
      v295();
      OUTLINED_FUNCTION_99();
      v295();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      uint64_t v296 = OUTLINED_FUNCTION_76();
      if (!OUTLINED_FUNCTION_15_0(v296))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v297 = OUTLINED_FUNCTION_22_1();
        v298(v297);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      break;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for HotelReservation(0);
      OUTLINED_FUNCTION_216();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v299 = OUTLINED_FUNCTION_3_1();
        v300(v299);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v301 = OUTLINED_FUNCTION_3_1();
        v302(v301);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_335;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for RestaurantReservation(0);
      uint64_t v303 = OUTLINED_FUNCTION_214();
      if (!OUTLINED_FUNCTION_15_0(v303))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v304 = OUTLINED_FUNCTION_22_1();
        v305(v304);
      }
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_6_1();
      goto LABEL_335;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v306 = type metadata accessor for RentalCarReservation(0);
      uint64_t v307 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v307))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v308();
      }
      uint64_t v283 = *(int *)(v306 + 144);
      goto LABEL_312;
    case 0x13u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v309 = type metadata accessor for TicketedTransportation(0);
      uint64_t v310 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v310))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v311();
      }
      uint64_t v283 = *(int *)(v309 + 116);
      goto LABEL_312;
    case 0x14u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v312 = type metadata accessor for TicketedShow(0);
      uint64_t v313 = OUTLINED_FUNCTION_213();
      if (!OUTLINED_FUNCTION_15_0(v313))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v314 = OUTLINED_FUNCTION_22_1();
        v315(v314);
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v316 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v317 = OUTLINED_FUNCTION_3_1();
        v318(v317);
      }
      uint64_t v319 = (uint64_t)v10 + *(int *)(v312 + 128);
      goto LABEL_325;
    case 0x15u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v320 = type metadata accessor for Appointment(0);
      uint64_t v321 = OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_35_1(v321))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v322();
      }
      uint64_t v283 = *(int *)(v320 + 112);
LABEL_312:
      v323 = (char *)v10 + v283;
      if (!OUTLINED_FUNCTION_48_0((uint64_t)v10 + v283))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(char *, uint64_t))(v324 + 8))(v323, v1);
      }
      break;
    case 0x16u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v325 = type metadata accessor for Party(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v326 = OUTLINED_FUNCTION_3_1();
        v327(v326);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v328 = OUTLINED_FUNCTION_3_1();
        v329(v328);
      }
      uint64_t v272 = *(int *)(v325 + 104);
      goto LABEL_324;
    case 0x17u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v330 = type metadata accessor for Trip(0);
      OUTLINED_FUNCTION_38_0();
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v331 = OUTLINED_FUNCTION_3_1();
        v332(v331);
      }
      if (!OUTLINED_FUNCTION_4_1())
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v333 = OUTLINED_FUNCTION_3_1();
        v334(v333);
      }
      uint64_t v272 = *(int *)(v330 + 100);
LABEL_324:
      uint64_t v319 = (uint64_t)v10 + v272;
      uint64_t v316 = type metadata accessor for URL();
LABEL_325:
      if (!OUTLINED_FUNCTION_9_1(v319))
      {
        OUTLINED_FUNCTION_1_0();
        (*(void (**)(uint64_t, uint64_t))(v335 + 8))(v319, v316);
      }
      break;
    case 0x18u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for GlobalItem();
      uint64_t v336 = OUTLINED_FUNCTION_215();
      if (!OUTLINED_FUNCTION_15_0(v336))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v337 = OUTLINED_FUNCTION_22_1();
        v338(v337);
      }
      OUTLINED_FUNCTION_155();
      if (!(!v342 & v341)) {
        outlined consume of Data._Representation(*v340, v339);
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
      goto LABEL_335;
    case 0x19u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_335;
    case 0x1Au:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Answer(0);
      uint64_t v343 = OUTLINED_FUNCTION_213();
      if (!OUTLINED_FUNCTION_15_0(v343))
      {
        OUTLINED_FUNCTION_1_0();
        uint64_t v344 = OUTLINED_FUNCTION_22_1();
        v345(v344);
      }
LABEL_335:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  OUTLINED_FUNCTION_6_1();
  v346 = (char *)v10 + *(int *)(v4 + 20);
  type metadata accessor for ExtractedType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      goto LABEL_345;
    case 1u:
      type metadata accessor for URL();
      goto LABEL_347;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v347 = (int *)type metadata accessor for FlightReservation(0);
      uint64_t v348 = (uint64_t)&v346[v347[13]];
      type metadata accessor for URL();
      if (!OUTLINED_FUNCTION_48_0(v348))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v349();
      }
      if (!OUTLINED_FUNCTION_48_0((uint64_t)&v346[v347[14]]))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_52_0();
        v350();
      }
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      v351 = &v346[v347[18]];
      uint64_t v352 = type metadata accessor for DateComponents();
      OUTLINED_FUNCTION_1_0();
      v354 = *(void (**)(char *, uint64_t))(v353 + 8);
      v354(v351, v352);
      v354(&v346[v347[19]], v352);
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      uint64_t v355 = (uint64_t)&v346[v347[38]];
      type metadata accessor for Date();
      if (!OUTLINED_FUNCTION_9_1(v355))
      {
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_10_2();
        v356();
      }
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_37_0();
LABEL_345:
      swift_bridgeObjectRelease();
      break;
    case 4u:
      type metadata accessor for Date();
LABEL_347:
      OUTLINED_FUNCTION_1_0();
      (*(void (**)(char *))(v357 + 8))(v346);
      break;
    default:
      break;
  }
  return MEMORY[0x270FA0238](v0, (((unint64_t)v7 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v6 | 7);
}

uint64_t outlined destroy of EagerResolutionService?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t outlined init with take of ExtractedInfo(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of ExtractedInfo(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_9_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_2@<X0>(uint64_t a1@<X8>)
{
  return __swift_getEnumTagSinglePayload(v2 + a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_18_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_19_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_21_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_1(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_41_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_0(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return __swift_getEnumTagSinglePayload(v1 + *(int *)(v2 + 52), 1, v0);
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_62()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

unint64_t OUTLINED_FUNCTION_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return *(void *)(v14 + 80)
       + ((*(unsigned __int8 *)(a14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a14 + 80))
       + *(void *)(a14 + 72) * v15;
}

uint64_t OUTLINED_FUNCTION_66(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, 0, 0);
}

void OUTLINED_FUNCTION_67()
{
}

uint64_t OUTLINED_FUNCTION_68()
{
  return type metadata accessor for TaskPriority();
}

uint64_t OUTLINED_FUNCTION_69()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_72()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_76()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_79(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = a17;
  a1[5] = v18;
  return outlined init with take of ExtractedInfo(v20, (uint64_t)a1 + v19, v17);
}

uint64_t OUTLINED_FUNCTION_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return __swift_getEnumTagSinglePayload(a1, 1, a17);
}

uint64_t OUTLINED_FUNCTION_82@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return __swift_getEnumTagSinglePayload(v10 + a1, 1, a10);
}

uint64_t OUTLINED_FUNCTION_86()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_87()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_88()
{
  return type metadata accessor for DateComponents();
}

uint64_t OUTLINED_FUNCTION_90()
{
  uint64_t v3 = *(void *)(v1 + 344) + 1;
  *(void *)(v1 + 344) = v3;
  uint64_t v4 = *(void *)(v1 + 328) + 40 * v3 + 32;
  return outlined init with copy of ExtractionRule(v4, v0);
}

uint64_t OUTLINED_FUNCTION_91()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_92()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long *a15, uint64_t a16, uint64_t a17)
{
  __swift_storeEnumTagSinglePayload(v17, 1, 1, a1);
  return outlined init with take of SageSearchClient(a15, a17);
}

uint64_t OUTLINED_FUNCTION_100()
{
  return *(void *)(v0 + 152);
}

uint64_t OUTLINED_FUNCTION_101(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_103()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_104@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = v3 | 0x3100;
  v1[29] = 1;
  v1[30] = a1;
  v1[31] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_105()
{
  return type metadata accessor for DateComponents();
}

uint64_t OUTLINED_FUNCTION_106()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_107()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_108(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_109@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = v3 | 0x3100;
  v2[6] = 1;
  v2[7] = a1;
  v2[8] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_110()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_112()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_113()
{
  return v0;
}

void OUTLINED_FUNCTION_114(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_115()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_116()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_117()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_119(uint64_t a1)
{
  *(void *)(a1 + 40) = v6;
  outlined init with take of SageSearchClient(v5, a1 + 48);
  *(void *)(v7 + 88) = v3;
  return outlined init with copy of EagerResolutionService?(v2, v1, v4);
}

uint64_t OUTLINED_FUNCTION_120()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_121()
{
  return __swift_getEnumTagSinglePayload(v1 + *(int *)(v2 + 128), 1, v0);
}

uint64_t OUTLINED_FUNCTION_122()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_123()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_124()
{
  return *(void *)(v0 + 320);
}

uint64_t OUTLINED_FUNCTION_125()
{
  return outlined destroy of EagerResolutionService?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_126()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_128()
{
  return *(void *)(v0 + 248);
}

void OUTLINED_FUNCTION_129(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, v5, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_130()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_131(uint64_t result)
{
  *(void *)(v1 + 352) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_133(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  __n128 result = *(__n128 *)(v2 + 24);
  *(void *)(a1 + 16) = v1;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_136()
{
  return type metadata accessor for TaskPriority();
}

uint64_t OUTLINED_FUNCTION_138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return outlined init with copy of ExtractionRule(a11 + 40 * v11, a10);
}

uint64_t OUTLINED_FUNCTION_141()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_142(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_143()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t OUTLINED_FUNCTION_146()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_148()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_150()
{
  return v0;
}

void OUTLINED_FUNCTION_152(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t OUTLINED_FUNCTION_153()
{
  return swift_bridgeObjectRelease_n();
}

__n128 OUTLINED_FUNCTION_154(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  __n128 result = *(__n128 *)(v1 + 24);
  *(void *)(a1 + 16) = v2;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_157()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

size_t OUTLINED_FUNCTION_158(const void *a1)
{
  return _swift_stdlib_malloc_size(a1);
}

uint64_t OUTLINED_FUNCTION_159()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_160()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t OUTLINED_FUNCTION_161()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_162()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_163()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_164()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_166()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_167()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_168()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_169()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_170()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_171()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_172()
{
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  *uint64_t v0 = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_173()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_174()
{
  return type metadata accessor for FlightReservation(0);
}

uint64_t OUTLINED_FUNCTION_175()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_177()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_178()
{
  return __swift_getEnumTagSinglePayload(v1 + *(int *)(v2 + 128), 1, v0);
}

uint64_t OUTLINED_FUNCTION_179()
{
  return type metadata accessor for Trip(0);
}

uint64_t OUTLINED_FUNCTION_180()
{
  return type metadata accessor for TicketedShow(0);
}

uint64_t OUTLINED_FUNCTION_181()
{
  return type metadata accessor for TicketedTransportation(0);
}

uint64_t OUTLINED_FUNCTION_182()
{
  return type metadata accessor for Appointment(0);
}

uint64_t OUTLINED_FUNCTION_183()
{
  return type metadata accessor for Party(0);
}

uint64_t OUTLINED_FUNCTION_184(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_185()
{
  return type metadata accessor for RentalCarReservation(0);
}

uint64_t OUTLINED_FUNCTION_187()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_188(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_189()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_190(void *result)
{
  result[2] = 0;
  result[3] = 0;
  result[4] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_191()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_192@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_193()
{
  return type metadata accessor for PreExtractedCard(0);
}

uint64_t OUTLINED_FUNCTION_194()
{
  return type metadata accessor for PreExtractedContact(0);
}

uint64_t OUTLINED_FUNCTION_195()
{
  return type metadata accessor for PreExtractedSharedLink(0);
}

uint64_t OUTLINED_FUNCTION_196()
{
  return type metadata accessor for FlightReservation(0);
}

uint64_t OUTLINED_FUNCTION_197()
{
  return type metadata accessor for Trip(0);
}

uint64_t OUTLINED_FUNCTION_198()
{
  return type metadata accessor for TicketedShow(0);
}

uint64_t OUTLINED_FUNCTION_199()
{
  return type metadata accessor for TicketedTransportation(0);
}

uint64_t OUTLINED_FUNCTION_200()
{
  return type metadata accessor for Appointment(0);
}

uint64_t OUTLINED_FUNCTION_201()
{
  return type metadata accessor for Party(0);
}

uint64_t OUTLINED_FUNCTION_202()
{
  return type metadata accessor for RentalCarReservation(0);
}

uint64_t OUTLINED_FUNCTION_204()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_205()
{
  __swift_getEnumTagSinglePayload(v0, 1, v1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_207()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_208()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_210()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_211()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_212()
{
  __swift_getEnumTagSinglePayload(v0, 1, v1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_213()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_214()
{
  return type metadata accessor for DateComponents();
}

uint64_t OUTLINED_FUNCTION_215()
{
  return type metadata accessor for GlobalDialog();
}

uint64_t OUTLINED_FUNCTION_216()
{
  return type metadata accessor for DateComponents();
}

uint64_t String.oms_BOOLeanValue.getter()
{
  OUTLINED_FUNCTION_53();
  Swift::String v2 = String.lowercased()();
  BOOL v3 = v2._countAndFlagsBits == 7562617 && v2._object == (void *)0xE300000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2._countAndFlagsBits == 28526 && v2._object == (void *)0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if (v6) {
      return result;
    }
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logging.answerSynthesis);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      uint64_t v11 = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v1, v0, &v11);
      OUTLINED_FUNCTION_175_0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v8, v9, "PQA Verification model returns something else %s", v10, 0xCu);
      OUTLINED_FUNCTION_122_0();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return 0;
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t result, long long *a2)
{
  uint64_t v26 = *(void *)(result + 16);
  if (!v26)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
LABEL_48:
    swift_bridgeObjectRelease();
    long long v29 = *a2;
    outlined release of String((uint64_t)&v29);
    uint64_t v30 = *((void *)a2 + 2);
    outlined release of [String]((uint64_t)&v30);
    outlined init with take of PQAVerificationModelProtocol?((uint64_t)a2 + 24, (uint64_t)v28, &demangling cache variable for type metadata for String?);
    outlined release of String((uint64_t)v28);
    return v3;
  }
  unint64_t v2 = 0;
  uint64_t v25 = result + 32;
  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v24 = result;
  while (v2 < *(void *)(result + 16))
  {
    uint64_t v4 = *(void *)(v25 + 8 * v2);
    char v5 = *(unsigned char *)(v4 + 32);
    uint64_t v6 = 1 << v5;
    unint64_t v7 = *(void *)(v4 + 64);
    if (v7)
    {
      uint64_t v8 = 0;
    }
    else
    {
      unsigned int v14 = v5 & 0x3F;
      if (v14 < 7) {
        goto LABEL_23;
      }
      unint64_t v7 = *(void *)(v4 + 72);
      if (v7)
      {
        uint64_t v8 = 1;
      }
      else
      {
        if (v14 < 8) {
          goto LABEL_23;
        }
        unint64_t v7 = *(void *)(v4 + 80);
        if (v7)
        {
          uint64_t v8 = 2;
        }
        else
        {
          unint64_t v7 = *(void *)(v4 + 88);
          if (!v7)
          {
            uint64_t v15 = 12;
            while (v15 - 8 < (unint64_t)(v6 + 63) >> 6)
            {
              unint64_t v7 = *(void *)(v4 + 8 * v15++);
              if (v7)
              {
                uint64_t v8 = v15 - 9;
                goto LABEL_6;
              }
            }
LABEL_23:
            uint64_t v13 = 0;
            unint64_t v12 = 0xE000000000000000;
            goto LABEL_24;
          }
          uint64_t v8 = 3;
        }
      }
    }
LABEL_6:
    unint64_t v9 = __clz(__rbit64(v7));
    uint64_t v10 = v9 + (v8 << 6);
    if (v10 == v6) {
      goto LABEL_23;
    }
    if (v10 < 0 || v10 >= v6) {
      goto LABEL_51;
    }
    if (((*(void *)(v4 + 64 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_52;
    }
    uint64_t v11 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    unint64_t v12 = v11[1];
    swift_bridgeObjectRetain();
LABEL_24:
    ++v2;
    uint64_t v16 = (void *)*((void *)a2 + 2);
    uint64_t v17 = v16[2];
    if (v17)
    {
      BOOL v18 = v16[4] == v13 && v16[5] == v12;
      if (v18 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
LABEL_40:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&long long v29 = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v3 = v29;
        }
        unint64_t v23 = *(void *)(v3 + 16);
        if (v23 >= *(void *)(v3 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v23 + 1;
        *(void *)(v3 + 8 * v23 + 32) = v4;
        goto LABEL_45;
      }
      if (v17 != 1)
      {
        uint64_t v19 = v16 + 7;
        uint64_t v20 = 1;
        while (1)
        {
          uint64_t v21 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            break;
          }
          if (*(v19 - 1) == v13 && *v19 == v12) {
            goto LABEL_40;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if (result) {
            goto LABEL_40;
          }
          v19 += 2;
          ++v20;
          if (v21 == v17) {
            goto LABEL_39;
          }
        }
        __break(1u);
        break;
      }
    }
LABEL_39:
    swift_bridgeObjectRelease();
LABEL_45:
    uint64_t result = v24;
    if (v2 == v26) {
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, SearchResult)?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (String, SearchResult));
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v39 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (uint64_t)&v32 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v32 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v32 - v15);
  uint64_t v17 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v37 = v17;
  uint64_t v32 = a1;
  if (v17)
  {
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)(type metadata accessor for SearchResult(0) - 8);
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v36 = *(void *)(v19 + 72);
    uint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t v33 = v5;
    do
    {
      uint64_t v22 = (uint64_t)&v38[*(int *)(v9 + 48)];
      outlined init with copy of AnswerSynthesisResult(v20, v22, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v23 = (uint64_t)v16 + *(int *)(v9 + 48);
      *uint64_t v16 = v18;
      outlined init with take of ResultsDialog(v22, v23, (void (*)(void))type metadata accessor for SearchResult);
      outlined init with take of PQAVerificationModelProtocol?((uint64_t)v16, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      uint64_t v24 = (uint64_t)&v12[*(int *)(v9 + 48)];
      keyForSearchResult(_:idx:)();
      if (v26)
      {
        uint64_t v27 = (uint64_t)v4 + *(int *)(v5 + 48);
        *uint64_t v4 = v25;
        v4[1] = v26;
        outlined init with copy of AnswerSynthesisResult(v24, v27, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v4, v28, 1, v5);
      outlined destroy of PQAVerificationModelProtocol?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
      {
        outlined destroy of PQAVerificationModelProtocol?((uint64_t)v4, &demangling cache variable for type metadata for (String, SearchResult)?);
      }
      else
      {
        uint64_t v29 = v34;
        outlined init with take of PQAVerificationModelProtocol?((uint64_t)v4, v34, (uint64_t *)&demangling cache variable for type metadata for (String, SearchResult));
        outlined init with take of PQAVerificationModelProtocol?(v29, v39, (uint64_t *)&demangling cache variable for type metadata for (String, SearchResult));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        unint64_t v30 = *(void *)(v21 + 16);
        if (v30 >= *(void *)(v21 + 24) >> 1) {
          uint64_t v21 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        *(void *)(v21 + 16) = v30 + 1;
        outlined init with take of PQAVerificationModelProtocol?(v39, v21+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (uint64_t *)&demangling cache variable for type metadata for (String, SearchResult));
        uint64_t v5 = v33;
      }
      ++v18;
      v20 += v36;
    }
    while (v37 != v18);
  }
  else
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v21;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void v32[7];

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchEntity?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SearchEntity(0);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  unint64_t v30 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (uint64_t)&v27 - v8;
  specialized _NativeDictionary.makeIterator()(v32, a1);
  uint64_t v10 = v32[0];
  uint64_t v9 = v32[1];
  uint64_t v11 = v32[3];
  unint64_t v12 = v32[4];
  uint64_t v13 = (unint64_t)(v32[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v31 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v12)
    {
      uint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      uint64_t v16 = v15 | (v11 << 6);
      goto LABEL_20;
    }
    uint64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v17 >= v13) {
      goto LABEL_27;
    }
    uint64_t v18 = *(void *)(v9 + 8 * v17);
    uint64_t v19 = v11 + 1;
    if (!v18)
    {
      uint64_t v19 = v11 + 2;
      if (v11 + 2 >= v13) {
        goto LABEL_27;
      }
      uint64_t v18 = *(void *)(v9 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v11 + 3;
        if (v11 + 3 >= v13) {
          goto LABEL_27;
        }
        uint64_t v18 = *(void *)(v9 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v11 + 4;
          if (v11 + 4 >= v13) {
            goto LABEL_27;
          }
          uint64_t v18 = *(void *)(v9 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v11 + 5;
            if (v11 + 5 >= v13) {
              goto LABEL_27;
            }
            uint64_t v18 = *(void *)(v9 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v11 + 6;
              while (v20 < v13)
              {
                uint64_t v18 = *(void *)(v9 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return v31;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v18 - 1) & v18;
    uint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v11 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v10 + 56) + 8 * v16);
    swift_getKeyPath();
    v32[6] = v21;
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_release();
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    {
      uint64_t result = outlined destroy of EagerResolutionService?((uint64_t)v4, &demangling cache variable for type metadata for SearchEntity?);
    }
    else
    {
      uint64_t v22 = v28;
      outlined init with take of AssistantSystemContext((uint64_t)v4, v28, (void (*)(void))type metadata accessor for SearchEntity);
      outlined init with take of AssistantSystemContext(v22, v30, (void (*)(void))type metadata accessor for SearchEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v31 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v31 + 16) + 1, 1, v31);
      }
      uint64_t v24 = *(void *)(v31 + 16);
      uint64_t v23 = *(void *)(v31 + 24);
      if (v24 >= v23 >> 1) {
        uint64_t v31 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1, v31);
      }
      uint64_t v25 = v30;
      uint64_t v26 = v31;
      *(void *)(v31 + 16) = v24 + 1;
      uint64_t result = outlined init with take of AssistantSystemContext(v25, v26+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v24, (void (*)(void))type metadata accessor for SearchEntity);
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v39 - v9;
  uint64_t v11 = type metadata accessor for SearchResult(0);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v46 = (uint64_t)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v43 = (uint64_t)v39 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    v39[2] = v2;
    swift_bridgeObjectRetain();
    v39[1] = a1;
    uint64_t v16 = (unint64_t *)(a1 + 40);
    uint64_t v17 = MEMORY[0x263F8EE78];
    *(void *)&long long v18 = 136315138;
    long long v40 = v18;
    v39[3] = MEMORY[0x263F8EE58] + 8;
    BOOL v41 = v8;
    uint64_t v42 = a2;
    uint64_t v45 = v10;
    do
    {
      uint64_t v47 = v17;
      uint64_t v19 = *(v16 - 1);
      unint64_t v20 = *v16;
      Swift::String v21 = String.lowercased()();
      if (*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)(v21._countAndFlagsBits, (uint64_t)v21._object);
        if (v23)
        {
          outlined init with copy of AnswerSynthesisResult(*(void *)(a2 + 56) + *(void *)(v44 + 72) * v22, (uint64_t)v8, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v24 = (uint64_t)v8;
          uint64_t v25 = 0;
        }
        else
        {
          uint64_t v24 = (uint64_t)v8;
          uint64_t v25 = 1;
        }
        __swift_storeEnumTagSinglePayload(v24, v25, 1, v11);
      }
      else
      {
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v11);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
      {
        outlined destroy of PQAVerificationModelProtocol?((uint64_t)v8, &demangling cache variable for type metadata for SearchResult?);
        if (one-time initialization token for answerSynthesis != -1) {
          swift_once();
        }
        uint64_t v26 = type metadata accessor for Logger();
        __swift_project_value_buffer(v26, (uint64_t)static Logging.answerSynthesis);
        swift_bridgeObjectRetain_n();
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = swift_slowAlloc();
          uint64_t v30 = swift_slowAlloc();
          uint64_t v48 = v30;
          *(_DWORD *)uint64_t v29 = v40;
          swift_bridgeObjectRetain();
          *(void *)(v29 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v48);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_257DC6000, v27, v28, "Answer synthesis: Unable to find search result referenced by model: %s", (uint8_t *)v29, 0xCu);
          uint64_t v31 = 1;
          swift_arrayDestroy();
          uint64_t v32 = v30;
          a2 = v42;
          MEMORY[0x25A2C94B0](v32, -1, -1);
          uint64_t v33 = v29;
          uint64_t v8 = v41;
          MEMORY[0x25A2C94B0](v33, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v31 = 1;
        }
        uint64_t v34 = (uint64_t)v45;
      }
      else
      {
        uint64_t v34 = (uint64_t)v45;
        outlined init with take of ResultsDialog((uint64_t)v8, (uint64_t)v45, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v31 = 0;
      }
      __swift_storeEnumTagSinglePayload(v34, v31, 1, v11);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v34, 1, v11) == 1)
      {
        outlined destroy of PQAVerificationModelProtocol?(v34, &demangling cache variable for type metadata for SearchResult?);
        uint64_t v17 = v47;
      }
      else
      {
        uint64_t v35 = v43;
        outlined init with take of ResultsDialog(v34, v43, (void (*)(void))type metadata accessor for SearchResult);
        outlined init with take of ResultsDialog(v35, v46, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v17 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v37 = *(void *)(v17 + 16);
        unint64_t v36 = *(void *)(v17 + 24);
        if (v37 >= v36 >> 1) {
          uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v37 + 1;
        outlined init with take of ResultsDialog(v46, v17+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v37, (void (*)(void))type metadata accessor for SearchResult);
      }
      v16 += 2;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v17;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v17 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = MEMORY[0x263F8EE78];
    long long v18 = v2;
    do
    {
      uint64_t v7 = *(void *)(a1 + 8 * v5 + 32);
      if ((v7 & 0x8000000000000000) == 0 && v7 < *(void *)(v2 + 16))
      {
        uint64_t v8 = (uint64_t *)(v17 + 24 * v7);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        uint64_t v11 = *((unsigned char *)v8 + 16);
        outlined copy of SmartChunkingInput();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v6 = v14;
        }
        uint64_t v12 = *(void *)(v6 + 16);
        if (v12 >= *(void *)(v6 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v6 = v15;
        }
        *(void *)(v6 + 16) = v12 + 1;
        uint64_t v13 = v6 + 24 * v12;
        *(void *)(v13 + 32) = v9;
        *(void *)(v13 + 40) = v10;
        *(unsigned char *)(v13 + 48) = v11;
        uint64_t v2 = v18;
      }
      ++v5;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v16 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v7 = *(void *)(a1 + 8 * v5 + 32);
      if ((v7 & 0x8000000000000000) == 0 && v7 < *(void *)(a2 + 16))
      {
        uint64_t v8 = (uint64_t *)(v16 + 16 * v7);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v6 = v13;
        }
        uint64_t v11 = *(void *)(v6 + 16);
        if (v11 >= *(void *)(v6 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v6 = v14;
        }
        *(void *)(v6 + 16) = v11 + 1;
        uint64_t v12 = v6 + 16 * v11;
        *(void *)(v12 + 32) = v9;
        *(void *)(v12 + 40) = v10;
      }
      ++v5;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v6 = *(v5 - 1);
        uint64_t v7 = *v5;
        swift_bridgeObjectRetain_n();
        uint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(v6, v7);
        if (v9)
        {
          uint64_t v10 = *(id *)(*(void *)(a2 + 56) + 8 * v8);
          uint64_t v11 = swift_bridgeObjectRelease_n();
          MEMORY[0x25A2C7E10](v11);
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v13;
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *one-time initialization function for shared()
{
  type metadata accessor for AnswerSynthesisController();
  type metadata accessor for FeatureFlagService();
  uint64_t v0 = swift_allocObject();
  uint64_t result = (void *)AnswerSynthesisController.__allocating_init(featureFlagService:)(v0);
  static AnswerSynthesisController.shared = result;
  return result;
}

{
  void *result;

  type metadata accessor for LocalSearchManager();
  swift_allocObject();
  uint64_t result = LocalSearchManager.init(infinitePatience:)(1);
  static LocalSearchManager.shared = (uint64_t)result;
  return result;
}

uint64_t AnswerSynthesisController.__allocating_init(featureFlagService:)(uint64_t a1)
{
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 80))(6))
  {
    uint64_t v3 = type metadata accessor for PQAVerificationModelOnDevice();
    OUTLINED_FUNCTION_166_0();
    uint64_t v18 = v3;
    uint64_t v19 = &protocol witness table for PQAVerificationModelOnDevice;
    v17[0] = PQAVerificationModelOnDevice.init()();
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v20, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
    outlined init with take of PQAVerificationModelProtocol?((uint64_t)v17, (uint64_t)v20, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  }
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  if (static NSUserDefaults.answerSynthesisModelType.getter() == 0x6563697665446E6FLL && v4 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = type metadata accessor for AnswerSynthesisModelServer();
      OUTLINED_FUNCTION_166_0();
      uint64_t v8 = AnswerSynthesisModelServer.init()();
      uint64_t v18 = v7;
      uint64_t v19 = &protocol witness table for AnswerSynthesisModelServer;
      v17[0] = v8;
      outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v20, (uint64_t)v16, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
      uint64_t v9 = static NSUserDefaults.answerSynthesisTokenLimitServer.getter();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      type metadata accessor for HallucinationMitigator();
      OUTLINED_FUNCTION_113_0();
      uint64_t v10 = 0;
      goto LABEL_15;
    }
  }
  uint64_t v11 = type metadata accessor for AnswerSynthesisModelOnDevice();
  OUTLINED_FUNCTION_166_0();
  uint64_t v12 = AnswerSynthesisModelOnDevice.init()();
  uint64_t v18 = v11;
  uint64_t v19 = &protocol witness table for AnswerSynthesisModelOnDevice;
  v17[0] = v12;
  outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v20, (uint64_t)v16, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  uint64_t v9 = static NSUserDefaults.answerSynthesisTokenLimitDevice.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  type metadata accessor for HallucinationMitigator();
  OUTLINED_FUNCTION_113_0();
  uint64_t v10 = 1;
LABEL_15:
  uint64_t v13 = v1(v17, v16, v10, v9, a1, v15);
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v20, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  return v13;
}

uint64_t static AnswerSynthesisController.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t one-time initialization function for supportedTypes()
{
  uint64_t result = closure #1 in variable initialization expression of static AnswerSynthesisController.supportedTypes();
  static AnswerSynthesisController.supportedTypes = result;
  return result;
}

uint64_t closure #1 in variable initialization expression of static AnswerSynthesisController.supportedTypes()
{
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v2 = v0;
  type metadata accessor for FeatureFlagService();
  swift_initStackObject();
  if (FeatureFlagService.isEnabled(_:)(OmniSearch_FeatureFlagService_FeatureFlag_eventAnswers)) {
    specialized Set.formUnion<A>(_:)((uint64_t)&outlined read-only object #1 of closure #1 in variable initialization expression of static AnswerSynthesisController.supportedTypes);
  }
  return v2;
}

uint64_t specialized Set.formUnion<A>(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v3 = *v2++;
      specialized Set._Variant.insert(_:)(&v5, v3);
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t *AnswerSynthesisController.supportedTypes.unsafeMutableAddressor()
{
  if (one-time initialization token for supportedTypes != -1) {
    swift_once();
  }
  return &static AnswerSynthesisController.supportedTypes;
}

uint64_t static AnswerSynthesisController.supportedTypes.getter()
{
  return static AnswerSynthesisController.supportedTypes.getter(&one-time initialization token for supportedTypes);
}

void one-time initialization function for noAnswerLabels()
{
  specialized Set.init(_nonEmptyArrayLiteral:)();
  static AnswerSynthesisController.noAnswerLabels = v0;
}

uint64_t *AnswerSynthesisController.noAnswerLabels.unsafeMutableAddressor()
{
  if (one-time initialization token for noAnswerLabels != -1) {
    swift_once();
  }
  return &static AnswerSynthesisController.noAnswerLabels;
}

uint64_t static AnswerSynthesisController.noAnswerLabels.getter()
{
  return static AnswerSynthesisController.supportedTypes.getter(&one-time initialization token for noAnswerLabels);
}

uint64_t static AnswerSynthesisController.supportedTypes.getter(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t AnswerSynthesisController.modelType.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t AnswerSynthesisController.answerSynthesisTokenLimit.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t AnswerSynthesisController.featureFlagService.getter()
{
  return swift_retain();
}

uint64_t AnswerSynthesisController.hallucinationMitigator.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ExtractionRule(v1 + 120, a1);
}

OmniSearch::AnswerSynthesisController::AnswerSynthesisModelType_optional __swiftcall AnswerSynthesisController.AnswerSynthesisModelType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnswerSynthesisController.AnswerSynthesisModelType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = OmniSearch_AnswerSynthesisController_AnswerSynthesisModelType_onDevice;
  }
  else {
    v4.value = OmniSearch_AnswerSynthesisController_AnswerSynthesisModelType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t AnswerSynthesisController.AnswerSynthesisModelType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6563697665446E6FLL;
  }
  else {
    return 0x726576726573;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnswerSynthesisController.AnswerSynthesisModelType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnswerSynthesisController.AnswerSynthesisModelType()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnswerSynthesisController.AnswerSynthesisModelType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerSynthesisController.AnswerSynthesisModelType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::AnswerSynthesisController::AnswerSynthesisModelType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerSynthesisController.AnswerSynthesisModelType@<W0>(Swift::String *a1@<X0>, OmniSearch::AnswerSynthesisController::AnswerSynthesisModelType_optional *a2@<X8>)
{
  result.value = AnswerSynthesisController.AnswerSynthesisModelType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnswerSynthesisController.AnswerSynthesisModelType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnswerSynthesisController.AnswerSynthesisModelType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void AnswerSynthesisController.__allocating_init(answerSynthesisModel:pqaVerificationModel:modelType:answerSynthesisTokenLimit:featureFlagService:hallucinationMitigator:)()
{
}

uint64_t AnswerSynthesisController.init(answerSynthesisModel:pqaVerificationModel:modelType:answerSynthesisTokenLimit:featureFlagService:hallucinationMitigator:)()
{
  OUTLINED_FUNCTION_144_0();
  char v6 = v5 & 1;
  outlined init with take of SageSearchClient(v7, v1 + 16);
  outlined init with take of PQAVerificationModelProtocol?(v4, v1 + 56, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  *(unsigned char *)(v1 + 96) = v6;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 112) = v2;
  outlined init with take of SageSearchClient(v0, v1 + 120);
  return v1;
}

Swift::Bool __swiftcall AnswerSynthesisController.supports(_:)(OmniSearch::SearchResultKey a1)
{
  if (one-time initialization token for supportedTypes != -1) {
    swift_once();
  }
  specialized Set.contains(_:)();
  return result;
}

void specialized Set.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    OUTLINED_FUNCTION_53();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    OUTLINED_FUNCTION_69_0();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != v4 || v11[1] != v3) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_69_0();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == v4 && v16[1] == v3) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_69_0();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void specialized Set.contains(_:)()
{
  OUTLINED_FUNCTION_104_0();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v1;
    char v3 = v0;
    Swift::Int v4 = specialized RawRepresentable<>._rawHashValue(seed:)();
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(v2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        unint64_t v8 = 0xE500000000000000;
        unint64_t v9 = 0x6C69616D65;
        switch(*(unsigned char *)(*(void *)(v2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0x4D53656C69626F6DLL;
            unint64_t v8 = 0xE900000000000053;
            break;
          case 2:
            unint64_t v8 = 0xE800000000000000;
            unint64_t v9 = 0x7261646E656C6163;
            break;
          case 3:
            unint64_t v9 = 0x6F746F6870;
            break;
          case 4:
            unint64_t v8 = 0xE600000000000000;
            unint64_t v9 = 0x726577736E61;
            break;
          case 5:
            unint64_t v8 = 0xE400000000000000;
            unint64_t v9 = 1702129518;
            break;
          case 6:
            unint64_t v8 = 0xE800000000000000;
            unint64_t v9 = 0x7265646E696D6572;
            break;
          case 7:
            unint64_t v9 = 0x736948656E6F6870;
            uint64_t v10 = 2037542772;
            goto LABEL_30;
          case 8:
            unint64_t v9 = 0xD000000000000013;
            uint64_t v11 = "";
            goto LABEL_28;
          case 9:
            unint64_t v9 = 0x456C616E72756F6ALL;
            unint64_t v8 = 0xEC0000007972746ELL;
            break;
          case 0xA:
            unint64_t v9 = 0x6D654D6563696F76;
            unint64_t v8 = 0xE90000000000006FLL;
            break;
          case 0xB:
            unint64_t v8 = 0xE600000000000000;
            unint64_t v9 = 0x697261666173;
            break;
          case 0xC:
            unint64_t v8 = 0xE400000000000000;
            unint64_t v9 = 1701603686;
            break;
          case 0xD:
            uint64_t v12 = "ipt";
            goto LABEL_21;
          case 0xE:
            unint64_t v9 = 0x615074656C6C6177;
            unint64_t v8 = 0xEA00000000007373;
            break;
          case 0xF:
            unint64_t v8 = 0xE700000000000000;
            unint64_t v9 = 0x746361746E6F63;
            break;
          case 0x10:
            uint64_t v12 = "ss";
LABEL_21:
            unint64_t v8 = (unint64_t)v12 | 0x8000000000000000;
            unint64_t v9 = 0xD000000000000011;
            break;
          case 0x11:
            unint64_t v9 = 0xD000000000000010;
            uint64_t v11 = "restaurantReservation";
            goto LABEL_28;
          case 0x12:
            unint64_t v9 = 0xD000000000000015;
            uint64_t v11 = "flightReservation";
            goto LABEL_28;
          case 0x13:
            unint64_t v9 = 0x65526C61626F6C67;
            uint64_t v10 = 1953265011;
            goto LABEL_30;
          case 0x14:
            unint64_t v9 = 0x7469746E45707061;
            unint64_t v8 = 0xE900000000000079;
            break;
          case 0x15:
            unint64_t v9 = 0xD000000000000014;
            uint64_t v11 = "n";
            goto LABEL_28;
          case 0x16:
            unint64_t v9 = 0xD000000000000016;
            uint64_t v11 = "vehicleReservation";
LABEL_28:
            unint64_t v8 = (unint64_t)v11 | 0x8000000000000000;
            break;
          case 0x17:
            unint64_t v9 = 0x646574656B636974;
            uint64_t v10 = 2003789907;
LABEL_30:
            unint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 0x18:
            unint64_t v9 = 0x6D746E696F707061;
            unint64_t v8 = 0xEB00000000746E65;
            break;
          case 0x19:
            unint64_t v9 = 0x7974726170;
            break;
          case 0x1A:
            unint64_t v8 = 0xE400000000000000;
            unint64_t v9 = 1885958772;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE500000000000000;
        unint64_t v14 = 0x6C69616D65;
        switch(v3)
        {
          case 1:
            unint64_t v14 = 0x4D53656C69626F6DLL;
            unint64_t v13 = 0xE900000000000053;
            break;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            unint64_t v14 = 0x7261646E656C6163;
            break;
          case 3:
            unint64_t v14 = 0x6F746F6870;
            break;
          case 4:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v14 = 0x726577736E61;
            break;
          case 5:
            unint64_t v13 = 0xE400000000000000;
            unint64_t v14 = 1702129518;
            break;
          case 6:
            unint64_t v13 = 0xE800000000000000;
            unint64_t v14 = 0x7265646E696D6572;
            break;
          case 7:
            unint64_t v14 = 0x736948656E6F6870;
            uint64_t v15 = 2037542772;
            goto LABEL_60;
          case 8:
            unint64_t v14 = 0xD000000000000013;
            uint64_t v16 = "";
            goto LABEL_58;
          case 9:
            OUTLINED_FUNCTION_131_0();
            unint64_t v13 = v17 + 1274;
            break;
          case 10:
            unint64_t v14 = 0x6D654D6563696F76;
            unint64_t v13 = 0xE90000000000006FLL;
            break;
          case 11:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v14 = 0x697261666173;
            break;
          case 12:
            unint64_t v13 = 0xE400000000000000;
            unint64_t v14 = 1701603686;
            break;
          case 13:
            char v18 = "ipt";
            goto LABEL_51;
          case 14:
            unint64_t v14 = 0x615074656C6C6177;
            unint64_t v13 = 0xEA00000000007373;
            break;
          case 15:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v14 = 0x746361746E6F63;
            break;
          case 16:
            char v18 = "ss";
LABEL_51:
            unint64_t v13 = (unint64_t)v18 | 0x8000000000000000;
            unint64_t v14 = 0xD000000000000011;
            break;
          case 17:
            unint64_t v14 = 0xD000000000000010;
            uint64_t v16 = "restaurantReservation";
            goto LABEL_58;
          case 18:
            unint64_t v14 = 0xD000000000000015;
            uint64_t v16 = "flightReservation";
            goto LABEL_58;
          case 19:
            unint64_t v14 = 0x65526C61626F6C67;
            uint64_t v15 = 1953265011;
            goto LABEL_60;
          case 20:
            unint64_t v14 = 0x7469746E45707061;
            unint64_t v13 = 0xE900000000000079;
            break;
          case 21:
            unint64_t v14 = 0xD000000000000014;
            uint64_t v16 = "n";
            goto LABEL_58;
          case 22:
            unint64_t v14 = 0xD000000000000016;
            uint64_t v16 = "vehicleReservation";
LABEL_58:
            unint64_t v13 = (unint64_t)v16 | 0x8000000000000000;
            break;
          case 23:
            unint64_t v14 = 0x646574656B636974;
            uint64_t v15 = 2003789907;
LABEL_60:
            unint64_t v13 = v15 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 24:
            unint64_t v14 = 0x6D746E696F707061;
            unint64_t v13 = 0xEB00000000746E65;
            break;
          case 25:
            unint64_t v14 = 0x7974726170;
            break;
          case 26:
            unint64_t v13 = 0xE400000000000000;
            unint64_t v14 = 1885958772;
            break;
          default:
            break;
        }
        if (v9 == v14 && v8 == v13) {
          break;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          unint64_t v6 = (v6 + 1) & v7;
          if ((*(void *)(v2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
            continue;
          }
        }
        goto LABEL_70;
      }
      swift_bridgeObjectRelease_n();
    }
  }
LABEL_70:
  OUTLINED_FUNCTION_119_0();
}

uint64_t AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:)()
{
  OUTLINED_FUNCTION_27();
  v0[24] = v1;
  v0[25] = v2;
  v0[22] = v3;
  v0[23] = v4;
  uint64_t v5 = type metadata accessor for OSSignpostError();
  v0[26] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v0[27] = v6;
  v0[28] = OUTLINED_FUNCTION_49_1();
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v0[29] = v7;
  OUTLINED_FUNCTION_12_0(v7);
  v0[30] = v8;
  v0[31] = OUTLINED_FUNCTION_50_0();
  v0[32] = swift_task_alloc();
  v0[33] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  void (*v8)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  void (*v19)(uint64_t, void);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v32)(char, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  uint64_t v34 = v0;
  uint64_t v1 = v0 + 56;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 272) = __swift_project_value_buffer(v2, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v3 = OSSignposter.logHandle.getter();
  uint64_t v4 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v3, v4, v6, "AnswerSynthesisController.preprocessSearchEntity", "", v5, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v7 = *(void *)(v0 + 240);

  OUTLINED_FUNCTION_64_0();
  v8();
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 280) = OUTLINED_FUNCTION_160();
  *(void *)(v0 + 288) = *(void *)(v7 + 8);
  *(void *)(v0 + 296) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_30();
  v9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AnySearchEntityPreprocessing>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_258661D60;
  *(void *)(v0 + 40) = &type metadata for EmailContentPreprocessing;
  *(void *)(v0 + 48) = &protocol witness table for EmailContentPreprocessing;
  uint64_t v11 = swift_allocObject();
  outlined init with take of SageSearchClient((long long *)(v0 + 16), v11 + 16);
  *(void *)(v10 + 32) = &async function pointer to partial apply for closure #1 in AnySearchEntityPreprocessing.init(_:);
  *(void *)(v10 + 40) = v11;
  uint64_t v12 = SmartChunkingPreprocessing.init()();
  *(void *)(v0 + 80) = &type metadata for SmartChunkingPreprocessing;
  *(void *)(v0 + 88) = &protocol witness table for SmartChunkingPreprocessing;
  *(void *)(v0 + 56) = v12;
  *(void *)(v0 + 64) = v13;
  unint64_t v14 = swift_allocObject();
  outlined init with take of SageSearchClient((long long *)(v0 + 56), v14 + 16);
  *(void *)(v10 + 48) = &closure #1 in AnySearchEntityPreprocessing.init(_:)partial apply;
  *(void *)(v10 + 56) = v14;
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  uint64_t v15 = static NSUserDefaults.answerSynthesisSearchResultsPerRequest.getter();
  if (!v15)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v0 + 192);
  char v18 = *(void *)(v17 + 16);
  swift_bridgeObjectRetain();
  uint64_t v1 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs8StrideToVySiG_Say10OmniSearch0G6ResultVGs5NeverOTg506_sSa10fg5AA0B6h22VRszlE7chunked4intoSayP18ACGGSi_tFAFSiXEfU_ALSiTf1cn_n(0, v18, v16, v17, v16);
  *(void *)(v0 + 304) = v1;
  uint64_t v19 = (void (*)(uint64_t, void))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.dataMetrics.modify();
  char v20 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisDataMetrics();
  if (!OUTLINED_FUNCTION_128_0(v20, v21, v20))
  {
    unint64_t v22 = *(void *)(v1 + 16);
    if (HIDWORD(v22))
    {
      OUTLINED_FUNCTION_17_0();
      return _assertionFailure(_:_:file:line:flags:)();
    }
    LOBYTE(v33) = 0;
    MEMORY[0x25A2C7020](v22);
  }
  v19(v0 + 96, 0);
  if (one-time initialization token for search != -1) {
    goto LABEL_17;
  }
LABEL_10:
  char v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain();
  uint64_t v24 = Logger.logObject.getter();
  uint64_t v25 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = OUTLINED_FUNCTION_13_1();
    uint64_t v33 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v26 = 136315650;
    *(void *)(v0 + 152) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000038, 0x800000025867DB30, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2048;
    *(void *)(v0 + 160) = *(void *)(v1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2048;
    *(void *)(v0 + 168) = static NSUserDefaults.answerSynthesisSearchResultsPerRequest.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v24, v25, "%s Batched into %ld batch(es) of size=%ld", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  os_log_type_t v28 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v29 = (void *)OUTLINED_FUNCTION_166_0();
  *(void *)(v0 + 312) = v29;
  v29[2] = v10;
  v29[3] = v28;
  v29[4] = v27;
  uint64_t v32 = (uint64_t (*)(char, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:)
                                                                + async function pointer to specialized Array.oms_mapWithTaskGroup<A>(ignoreOrder:itemTransform:));
  swift_bridgeObjectRetain();
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v30;
  const char *v30 = v0;
  v30[1] = AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:);
  return v32(0, (uint64_t)&async function pointer to partial apply for closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:), (uint64_t)v29, v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v2 = v1;
  *(void *)(v1 + 128) = v0;
  *(void *)(v1 + 136) = v3;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int (*v3)(uint64_t);
  void (*v4)(void);
  _WORD *v5;
  uint64_t v6;
  os_signpost_type_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v15;

  uint64_t v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v2 = OUTLINED_FUNCTION_20_1();
    if (v3(v2) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v4();
    }
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v5);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_32_1(&dword_257DC6000, v6, v7, v8, "AnswerSynthesisController.preprocessSearchEntity");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v9 = v0[17];
  uint64_t v10 = (void *)v1;
  uint64_t v11 = (void (*)(uint64_t))v0[36];

  uint64_t v12 = OUTLINED_FUNCTION_92_0();
  v11(v12);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
  return v13(v9);
}

uint64_t Array<A>.chunked(into:)(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = result;
    int64_t v4 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    return _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs8StrideToVySiG_Say10OmniSearch0G6ResultVGs5NeverOTg506_sSa10fg5AA0B6h22VRszlE7chunked4intoSayP18ACGGSi_tFAFSiXEfU_ALSiTf1cn_n(0, v4, v3, a2, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a1;
  v5[5] = a3;
  v5[8] = *a2;
  return MEMORY[0x270FA2498](closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:), 0, 0);
}

uint64_t closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:)()
{
  uint64_t v19 = v0;
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  os_log_type_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logging.answerSynthesis);
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  BOOL v5 = OUTLINED_FUNCTION_24_2(v4);
  uint64_t v6 = *(void *)(v0 + 64);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000038, 0x800000025867DB30, &v18);
    OUTLINED_FUNCTION_92_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    *(void *)(v0 + 24) = *(void *)(v6 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v3, v2, "%s Processed entity request with searchResults.count=%ld", (uint8_t *)v7, 0x16u);
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v8 = *(void **)(v0 + 40);
  uint64_t v9 = v8[2];
  *(void *)(v0 + 72) = v9;
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 64);
    *(void *)(v0 + 80) = 0;
    *(void *)(v0 + 88) = v10;
    uint64_t v11 = (int *)v8[4];
    *(void *)(v0 + 96) = v8[5];
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v12;
    *uint64_t v12 = v0;
    v12[1] = closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:);
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    return v17(v10, v13, v14);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    **(void **)(v0 + 32) = *(void *)(v0 + 64);
    OUTLINED_FUNCTION_13();
    return v16();
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *os_log_type_t v2 = v1;
  *os_log_type_t v2 = *v0;
  *(void *)(v1 + 112) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_49();
  os_log_type_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    **(void **)(v0 + 32) = *(void *)(v0 + 112);
    OUTLINED_FUNCTION_13();
    return v3();
  }
  else
  {
    BOOL v5 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(v0 + 80) + 1;
    *(void *)(v0 + 80) = v6;
    *(void *)(v0 + 88) = v5;
    uint64_t v7 = *(void *)(v0 + 40) + 16 * v6;
    uint64_t v8 = *(int **)(v7 + 32);
    *(void *)(v0 + 96) = *(void *)(v7 + 40);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v9;
    *uint64_t v9 = v0;
    v9[1] = closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v11 = *(void *)(v0 + 56);
    return v12(v5, v10, v11);
  }
}

uint64_t AnswerSynthesisController.synthesize(query:searchResults:context:traceId:clientId:)()
{
  OUTLINED_FUNCTION_27();
  v1[43] = v28;
  v1[44] = v0;
  v1[41] = v2;
  v1[42] = v3;
  v1[39] = v4;
  v1[40] = v5;
  v1[37] = v6;
  v1[38] = v7;
  v1[35] = v8;
  v1[36] = v9;
  uint64_t v10 = type metadata accessor for ResultsDialog(0);
  OUTLINED_FUNCTION_81(v10);
  v1[45] = OUTLINED_FUNCTION_49_1();
  uint64_t v11 = type metadata accessor for OSSignpostError();
  v1[46] = v11;
  OUTLINED_FUNCTION_12_0(v11);
  v1[47] = v12;
  v1[48] = OUTLINED_FUNCTION_50_0();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for AnswerSynthesisResult();
  v1[56] = v13;
  OUTLINED_FUNCTION_12_0(v13);
  v1[57] = v14;
  v1[58] = OUTLINED_FUNCTION_50_0();
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_12_0(v15);
  v1[61] = v16;
  v1[62] = OUTLINED_FUNCTION_50_0();
  v1[63] = swift_task_alloc();
  uint64_t v17 = type metadata accessor for OSSignpostID();
  v1[64] = v17;
  OUTLINED_FUNCTION_12_0(v17);
  v1[65] = v18;
  v1[66] = OUTLINED_FUNCTION_50_0();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  v1[73] = swift_task_alloc();
  v1[74] = swift_task_alloc();
  v1[75] = swift_task_alloc();
  uint64_t v19 = type metadata accessor for Date();
  v1[76] = v19;
  OUTLINED_FUNCTION_12_0(v19);
  v1[77] = v20;
  v1[78] = OUTLINED_FUNCTION_50_0();
  v1[79] = swift_task_alloc();
  v1[80] = swift_task_alloc();
  v1[81] = swift_task_alloc();
  uint64_t v21 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult();
  v1[82] = v21;
  OUTLINED_FUNCTION_12_0(v21);
  v1[83] = v22;
  v1[84] = OUTLINED_FUNCTION_50_0();
  v1[85] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v23, v24, v25);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  _WORD *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(void);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  void (*v40)(void);
  uint64_t (*v41)(void);
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  void (*v54)(void *, void);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(void);
  void (*v88)(void);
  NSObject *v89;
  uint64_t v90;
  unsigned int (*v91)(uint64_t);
  const char *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(void);
  _WORD *v102;
  os_signpost_type_t v103;
  os_signpost_id_t v104;
  uint64_t v105;
  void (*v106)(void);
  os_log_type_t v107;
  NSObject *log;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t (*v112)(uint64_t, uint64_t, uint64_t, uint64_t);
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116[17];
  void *v117;
  uint64_t v118;

  uint64_t v117 = v0;
  AnswerSynthesisController.createIFSearchToolTelemetry()();
  Date.init()();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[86] = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v3);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v2, v4, v5, "AnswerSynthesisController.synthesize", "");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v6 = v0[65];

  OUTLINED_FUNCTION_64_0();
  v7();
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  v0[87] = OUTLINED_FUNCTION_160();
  v0[88] = *(void *)(v6 + 8);
  v0[89] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_65();
  v8();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)v0[44];
  uint64_t v11 = v0[37];
  uint64_t v10 = v0[38];
  uint64_t v12 = v0[36];
  OUTLINED_FUNCTION_209();
  (*(void (**)(void))(v13 + 176))();
  uint64_t v14 = v9[18];
  uint64_t v15 = v9[19];
  __swift_project_boxed_opaque_existential_1(v9 + 15, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v12, v11, v10, v0 + 106, v14, v15);
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logging.answerSynthesis);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  uint64_t v18 = static os_log_type_t.info.getter();
  uint64_t v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = v0[38];
  if (v19)
  {
    uint64_t v107 = v18;
    log = v17;
    uint64_t v21 = OUTLINED_FUNCTION_13_1();
    uint64_t v114 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315650;
    v0[33] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x800000025867DBF0, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2048;
    uint64_t v22 = *(void *)(v20 + 16);
    v0[34] = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v23 = MEMORY[0x263F8EE78];
    if (v22)
    {
      uint64_t v24 = v0[61];
      uint64_t v25 = v0[38];
      uint64_t v115 = MEMORY[0x263F8EE78];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      OUTLINED_FUNCTION_137();
      uint64_t v27 = v25 + v26;
      uint64_t v28 = *(void *)(v24 + 72);
      do
      {
        outlined init with copy of AnswerSynthesisResult(v27, v0[63], (void (*)(void))type metadata accessor for SearchResult);
        SearchResultItem.type.getter(v116);
        uint64_t v29 = 0xE500000000000000;
        uint64_t v30 = 0x6C69616D65;
        switch(v116[0])
        {
          case 1:
            OUTLINED_FUNCTION_170_0();
            uint64_t v29 = 0xE900000000000053;
            break;
          case 2:
            uint64_t v29 = 0xE800000000000000;
            OUTLINED_FUNCTION_169_0();
            break;
          case 3:
            uint64_t v30 = 0x6F746F6870;
            break;
          case 4:
            uint64_t v29 = 0xE600000000000000;
            uint64_t v30 = 0x726577736E61;
            break;
          case 5:
            uint64_t v29 = 0xE400000000000000;
            uint64_t v30 = 1702129518;
            break;
          case 6:
            uint64_t v29 = 0xE800000000000000;
            OUTLINED_FUNCTION_165_0();
            break;
          case 7:
            OUTLINED_FUNCTION_167_0();
            uint64_t v31 = 2037542772;
            goto LABEL_38;
          case 8:
            uint64_t v30 = 0xD000000000000013;
            uint64_t v32 = "voicemailTranscript";
            goto LABEL_36;
          case 9:
            OUTLINED_FUNCTION_131_0();
            uint64_t v29 = v33 + 1274;
            OUTLINED_FUNCTION_163_0();
            break;
          case 0xA:
            OUTLINED_FUNCTION_162_0();
            uint64_t v29 = v34 + 28;
            OUTLINED_FUNCTION_161_0();
            break;
          case 0xB:
            uint64_t v29 = 0xE600000000000000;
            uint64_t v30 = 0x697261666173;
            break;
          case 0xC:
            uint64_t v29 = 0xE400000000000000;
            uint64_t v30 = 1701603686;
            break;
          case 0xD:
            uint64_t v35 = "walletTransaction";
            goto LABEL_29;
          case 0xE:
            OUTLINED_FUNCTION_159_0();
            uint64_t v29 = 0xEA00000000007373;
            break;
          case 0xF:
            uint64_t v29 = 0xE700000000000000;
            OUTLINED_FUNCTION_157_0();
            break;
          case 0x10:
            uint64_t v35 = "flightReservation";
LABEL_29:
            uint64_t v29 = (unint64_t)(v35 - 32) | 0x8000000000000000;
            uint64_t v30 = 0xD000000000000011;
            break;
          case 0x11:
            uint64_t v30 = 0xD000000000000010;
            uint64_t v32 = "hotelReservation";
            goto LABEL_36;
          case 0x12:
            uint64_t v30 = 0xD000000000000015;
            uint64_t v32 = "restaurantReservation";
            goto LABEL_36;
          case 0x13:
            OUTLINED_FUNCTION_153_0();
            uint64_t v31 = 1953265011;
            goto LABEL_38;
          case 0x14:
            OUTLINED_FUNCTION_162_0();
            uint64_t v29 = v36 + 38;
            OUTLINED_FUNCTION_151_0();
            break;
          case 0x15:
            uint64_t v30 = 0xD000000000000014;
            uint64_t v32 = "rentalCarReservation";
            goto LABEL_36;
          case 0x16:
            uint64_t v30 = 0xD000000000000016;
            uint64_t v32 = "ticketedTransportation";
LABEL_36:
            uint64_t v29 = (unint64_t)(v32 - 32) | 0x8000000000000000;
            break;
          case 0x17:
            OUTLINED_FUNCTION_149_0();
            uint64_t v31 = 2003789907;
LABEL_38:
            uint64_t v29 = v31 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 0x18:
            OUTLINED_FUNCTION_150_0();
            uint64_t v29 = 0xEB00000000746E65;
            break;
          case 0x19:
            uint64_t v30 = 0x7974726170;
            break;
          case 0x1A:
            uint64_t v29 = 0xE400000000000000;
            uint64_t v30 = 1885958772;
            break;
          default:
            break;
        }
        outlined destroy of AnswerSynthesisResult(v0[63], (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v23 = v115;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_110_0();
          uint64_t v23 = v115;
        }
        unint64_t v37 = *(void *)(v23 + 16);
        if (v37 >= *(void *)(v23 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v23 = v115;
        }
        *(void *)(v23 + 16) = v37 + 1;
        uint64_t v38 = v23 + 16 * v37;
        *(void *)(v38 + 32) = v30;
        *(void *)(v38 + 40) = v29;
        v27 += v28;
        --v22;
      }
      while (v22);
      uint64_t v43 = (uint8_t *)v21;
    }
    else
    {
      uint64_t v43 = (uint8_t *)v21;
    }
    uint64_t v44 = MEMORY[0x25A2C7E60](v23, MEMORY[0x263F8D310]);
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    v0[29] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, log, v107, "%s search result count before being filtered=%ld. All types: %s", v43, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v47 = v0[80];
  uint64_t v48 = v0[44];
  uint64_t v49 = v0[38];
  Date.init()();
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  swift_retain();
  uint64_t v50 = static NSUserDefaults.answerSynthesisLimit.getter();
  uint64_t v51 = specialized static DataFilter.filterAndReturnTopK<A>(_:where:topK:)(v49, v50, v48);
  v0[90] = v51;
  OUTLINED_FUNCTION_3();
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v52 + 272))(v47);
  uint64_t v54 = (void (*)(void *, void))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
  uint64_t v55 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisPerfMetrics();
  v0[91] = v55;
  if (!OUTLINED_FUNCTION_128_0(v55, v56, v55))
  {
    LOBYTE(v115) = 0;
    MEMORY[0x25A2C7090](v53);
  }
  v54(v0 + 19, 0);
  if (v51)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v57 = Logger.logObject.getter();
    uint64_t v58 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v113 = v58;
      uint64_t v59 = OUTLINED_FUNCTION_13_1();
      uint64_t v114 = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315650;
      v0[28] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x800000025867DBF0, &v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v59 + 12) = 2048;
      uint64_t v60 = *(void *)(v51 + 16);
      v0[30] = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v59 + 22) = 2080;
      uint64_t v61 = MEMORY[0x263F8EE78];
      if (v60)
      {
        uint64_t v110 = v59;
        v111 = v57;
        uint64_t v62 = v0[61];
        uint64_t v115 = MEMORY[0x263F8EE78];
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        OUTLINED_FUNCTION_137();
        uint64_t v64 = v51 + v63;
        uint64_t v65 = *(void *)(v62 + 72);
        do
        {
          outlined init with copy of AnswerSynthesisResult(v64, v0[62], (void (*)(void))type metadata accessor for SearchResult);
          SearchResultItem.type.getter(v116);
          uint64_t v66 = 0xE500000000000000;
          uint64_t v67 = 0x6C69616D65;
          switch(v116[0])
          {
            case 1:
              OUTLINED_FUNCTION_170_0();
              uint64_t v66 = 0xE900000000000053;
              break;
            case 2:
              uint64_t v66 = 0xE800000000000000;
              OUTLINED_FUNCTION_169_0();
              break;
            case 3:
              uint64_t v67 = 0x6F746F6870;
              break;
            case 4:
              uint64_t v66 = 0xE600000000000000;
              uint64_t v67 = 0x726577736E61;
              break;
            case 5:
              uint64_t v66 = 0xE400000000000000;
              uint64_t v67 = 1702129518;
              break;
            case 6:
              uint64_t v66 = 0xE800000000000000;
              OUTLINED_FUNCTION_165_0();
              break;
            case 7:
              OUTLINED_FUNCTION_167_0();
              uint64_t v68 = 2037542772;
              goto LABEL_86;
            case 8:
              uint64_t v67 = 0xD000000000000013;
              uint64_t v69 = "voicemailTranscript";
              goto LABEL_84;
            case 9:
              OUTLINED_FUNCTION_131_0();
              uint64_t v66 = v70 + 1274;
              OUTLINED_FUNCTION_163_0();
              break;
            case 0xA:
              OUTLINED_FUNCTION_162_0();
              uint64_t v66 = v71 + 28;
              OUTLINED_FUNCTION_161_0();
              break;
            case 0xB:
              uint64_t v66 = 0xE600000000000000;
              uint64_t v67 = 0x697261666173;
              break;
            case 0xC:
              uint64_t v66 = 0xE400000000000000;
              uint64_t v67 = 1701603686;
              break;
            case 0xD:
              uint64_t v72 = "walletTransaction";
              goto LABEL_77;
            case 0xE:
              OUTLINED_FUNCTION_159_0();
              uint64_t v66 = 0xEA00000000007373;
              break;
            case 0xF:
              uint64_t v66 = 0xE700000000000000;
              OUTLINED_FUNCTION_157_0();
              break;
            case 0x10:
              uint64_t v72 = "flightReservation";
LABEL_77:
              uint64_t v66 = (unint64_t)(v72 - 32) | 0x8000000000000000;
              uint64_t v67 = 0xD000000000000011;
              break;
            case 0x11:
              uint64_t v67 = 0xD000000000000010;
              uint64_t v69 = "hotelReservation";
              goto LABEL_84;
            case 0x12:
              uint64_t v67 = 0xD000000000000015;
              uint64_t v69 = "restaurantReservation";
              goto LABEL_84;
            case 0x13:
              OUTLINED_FUNCTION_153_0();
              uint64_t v68 = 1953265011;
              goto LABEL_86;
            case 0x14:
              OUTLINED_FUNCTION_162_0();
              uint64_t v66 = v73 + 38;
              OUTLINED_FUNCTION_151_0();
              break;
            case 0x15:
              uint64_t v67 = 0xD000000000000014;
              uint64_t v69 = "rentalCarReservation";
              goto LABEL_84;
            case 0x16:
              uint64_t v67 = 0xD000000000000016;
              uint64_t v69 = "ticketedTransportation";
LABEL_84:
              uint64_t v66 = (unint64_t)(v69 - 32) | 0x8000000000000000;
              break;
            case 0x17:
              OUTLINED_FUNCTION_149_0();
              uint64_t v68 = 2003789907;
LABEL_86:
              uint64_t v66 = v68 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              break;
            case 0x18:
              OUTLINED_FUNCTION_150_0();
              uint64_t v66 = 0xEB00000000746E65;
              break;
            case 0x19:
              uint64_t v67 = 0x7974726170;
              break;
            case 0x1A:
              uint64_t v66 = 0xE400000000000000;
              uint64_t v67 = 1885958772;
              break;
            default:
              break;
          }
          outlined destroy of AnswerSynthesisResult(v0[62], (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v61 = v115;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_110_0();
            uint64_t v61 = v115;
          }
          uint64_t v74 = *(void *)(v61 + 16);
          if (v74 >= *(void *)(v61 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v61 = v115;
          }
          *(void *)(v61 + 16) = v74 + 1;
          uint64_t v75 = v61 + 16 * v74;
          *(void *)(v75 + 32) = v67;
          *(void *)(v75 + 40) = v66;
          v64 += v65;
          --v60;
        }
        while (v60);
        uint64_t v59 = v110;
        uint64_t v57 = v111;
      }
      uint64_t v93 = MEMORY[0x25A2C7E60](v61, MEMORY[0x263F8D310]);
      uint64_t v95 = v94;
      swift_bridgeObjectRelease();
      v0[31] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v95, &v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_257DC6000, v57, v113, "%s search result count after being filtered=%ld. All types: %s", (uint8_t *)v59, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    Date.init()();
    OUTLINED_FUNCTION_209();
    uint64_t v112 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 + 168) + **(int **)(v96 + 168));
    uint64_t v97 = (void *)swift_task_alloc();
    v0[92] = v97;
    *uint64_t v97 = v0;
    v97[1] = AnswerSynthesisController.synthesize(query:searchResults:context:traceId:clientId:);
    uint64_t v98 = v0[85];
    uint64_t v100 = v0[36];
    uint64_t v99 = v0[37];
    return v112(v100, v99, v51, v98);
  }
  else
  {
    uint64_t v76 = Logger.logObject.getter();
    uint64_t v77 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)OUTLINED_FUNCTION_14_1();
      uint64_t v79 = OUTLINED_FUNCTION_13_1();
      *(_DWORD *)uint64_t v78 = 136315138;
      uint64_t v115 = v79;
      v0[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x800000025867DBF0, &v115);
      OUTLINED_FUNCTION_78_0();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_257DC6000, v76, v77, "%s no results return after being filtered", v78, 0xCu);
      OUTLINED_FUNCTION_121_0();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }

    uint64_t v80 = v0[84];
    uint64_t v81 = v0[83];
    uint64_t v82 = v0[82];
    uint64_t v83 = v0[42];
    Swift::Int v109 = v0[43];
    uint64_t v85 = v0[40];
    uint64_t v84 = v0[41];
    uint64_t v86 = static MetricsLogger.shared;
    OUTLINED_FUNCTION_64_0();
    v87();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v86 + 184))(v85, v84, v83, v109, v80);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
    swift_storeEnumTagMultiPayload();
    ResultsDialog.init(synthesisResult:)();
    OUTLINED_FUNCTION_65();
    v88();
    uint64_t v89 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OUTLINED_FUNCTION_86_0())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v90 = OUTLINED_FUNCTION_19_0();
      if (v91(v90) == *MEMORY[0x263F90238])
      {
        uint64_t v92 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v101();
        uint64_t v92 = "";
      }
      uint64_t v102 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_155_0(v102);
      OUTLINED_FUNCTION_93_0();
      OUTLINED_FUNCTION_140_0(&dword_257DC6000, v89, v103, v104, "AnswerSynthesisController.synthesize", v92);
      OUTLINED_FUNCTION_34();
    }
    uint64_t v105 = v0[64];

    OUTLINED_FUNCTION_28();
    v106();
    swift_release();
    OUTLINED_FUNCTION_83();
    v39(v105);
    OUTLINED_FUNCTION_82_0();
    v40();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v41();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 744) = v4;
  *(void *)(v2 + 752) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  NSObject *v14;
  os_signpost_type_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  int v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  void (*v24)(uint64_t);
  void (*v25)(void);
  void (*v26)(void);
  void *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  long long v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(void);
  os_signpost_id_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(void);
  void (*v49)(void);
  uint64_t (*v50)(void);
  void (*v51)(void);
  _WORD *v52;
  uint64_t v53;
  os_signpost_type_t v54;
  os_signpost_id_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  long long v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 744);
  if (!*(void *)(v1 + 16))
  {
    uint64_t v21 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_64_0();
    v22();
    uint64_t v23 = OUTLINED_FUNCTION_117_0();
    v24(v23);
    OUTLINED_FUNCTION_30();
    v25();
    swift_storeEnumTagMultiPayload();
    ResultsDialog.init(synthesisResult:)();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(void))(v21 + 8);
    OUTLINED_FUNCTION_65();
    v26();
    OUTLINED_FUNCTION_65();
    v26();
    uint64_t v27 = (void *)OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OUTLINED_FUNCTION_60_0())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v28 = OUTLINED_FUNCTION_20_1();
      if (v29(v28) != *MEMORY[0x263F90238])
      {
        OUTLINED_FUNCTION_77();
        v51();
      }
      uint64_t v52 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_41_1(v52);
      OUTLINED_FUNCTION_186();
      OUTLINED_FUNCTION_32_1(&dword_257DC6000, v53, v54, v55, "AnswerSynthesisController.synthesize");
      OUTLINED_FUNCTION_34();
    }
    uint64_t v56 = *(void (**)(uint64_t))(v0 + 704);

    uint64_t v57 = OUTLINED_FUNCTION_78_0();
    v56(v57);
    swift_release();
    OUTLINED_FUNCTION_26_2();
    v26();
    uint64_t v58 = OUTLINED_FUNCTION_106_0();
    v59(v58);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    goto LABEL_21;
  }
  uint64_t v2 = *(void *)(v0 + 728);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v0 + 760) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void (*)(uint64_t))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v2))
  {
    OUTLINED_FUNCTION_209();
    uint64_t v7 = (*(uint64_t (**)(void))(v6 + 272))();
    LOBYTE(v62) = 0;
    uint64_t v8 = OUTLINED_FUNCTION_101_0(v7);
    MEMORY[0x25A2C70C0](v8);
  }
  uint64_t v9 = OUTLINED_FUNCTION_77_0();
  v4(v9);
  uint64_t v10 = *(void *)(v0 + 752);
  OUTLINED_FUNCTION_209();
  (*(void (**)(uint64_t *__return_ptr))(v11 + 200))(&v62);
  if (v10)
  {
    uint64_t v12 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void (**)(void))(v12 + 8);
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_26_2();
    v13();
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_26_2();
    v13();
    uint64_t v14 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    uint64_t v15 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v16 = OUTLINED_FUNCTION_125_0();
      uint64_t v18 = v17(v16);
      uint64_t v19 = *(void *)(v0 + 544);
      if (v18 == *MEMORY[0x263F90238])
      {
        uint64_t v20 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v44();
        uint64_t v20 = "";
      }
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      uint64_t v60 = v19;
      uint64_t v45 = OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_90_0(&dword_257DC6000, v14, v15, v45, "AnswerSynthesisController.synthesize", v20);
      OUTLINED_FUNCTION_34();
    }
    else
    {
      uint64_t v60 = *(void *)(v0 + 544);
    }
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
    uint64_t v47 = *(void *)(v0 + 512);

    v46(v60, v47);
    swift_release();
    OUTLINED_FUNCTION_28();
    v48();
    OUTLINED_FUNCTION_111_0();
    v49();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
LABEL_21:
    return v50();
  }
  uint64_t v30 = *(void *)(v0 + 352);
  uint64_t v31 = v62;
  uint64_t v32 = v63;
  *(void *)(v0 + 768) = v63;
  uint64_t v33 = v64;
  uint64_t v34 = v66;
  uint64_t v35 = v67;
  *(void *)(v0 + 784) = v66;
  *(void *)(v0 + 792) = v35;
  unint64_t v36 = v68;
  unint64_t v37 = v69;
  *(void *)(v0 + 800) = v69;
  uint64_t v38 = v65;
  *(void *)(v0 + 16) = v31;
  *(void *)(v0 + 776) = v38;
  *(void *)(v0 + 24) = v32;
  *(void *)(v0 + 32) = v33;
  *(_OWORD *)(v0 + 40) = v38;
  *(void *)(v0 + 56) = v34;
  *(void *)(v0 + 64) = v35;
  *(void *)(v0 + 72) = v36;
  *(void *)(v0 + 80) = v37;
  uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v30 + 216)
                                                                   + **(int **)(*(void *)v30 + 216));
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v0 + 808) = v39;
  uint64_t *v39 = v40;
  v39[1] = AnswerSynthesisController.synthesize(query:searchResults:context:traceId:clientId:);
  BOOL v41 = *(void *)(v0 + 680);
  uint64_t v42 = *(void *)(v0 + 472);
  return v61(v42, v0 + 16, v3, v41);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 816) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v0[59];
  uint64_t v3 = v0[44];
  Date.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AnswerSynthesisResult>);
  uint64_t v4 = OUTLINED_FUNCTION_139_0();
  v0[103] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_258661700;
  outlined init with copy of AnswerSynthesisResult(v2, v4 + v1, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v3 + 232) + **(int **)(*(void *)v3 + 232));
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  v0[104] = v5;
  *uint64_t v5 = v6;
  v5[1] = AnswerSynthesisController.synthesize(query:searchResults:context:traceId:clientId:);
  uint64_t v7 = v0[58];
  return v9(v7, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 840) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  void (*v17)(uint64_t);
  void (*v18)(void);
  void (*v19)(void);
  void *v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t);
  void (*v23)(void);
  _WORD *v24;
  uint64_t v25;
  os_signpost_type_t v26;
  os_signpost_id_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t (*v33)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  uint64_t v1 = v0[91];
  OUTLINED_FUNCTION_209();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 272))();
  uint64_t v4 = (void (*)(uint64_t))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v1)) {
    MEMORY[0x25A2C7070](v3);
  }
  uint64_t v6 = OUTLINED_FUNCTION_77_0();
  v4(v6);
  uint64_t v7 = v0[91];
  outlined init with copy of AnswerSynthesisResult(v0[58], v0[60], (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  ResultsDialog.init(synthesisResult:)();
  uint64_t v8 = (void (*)(uint64_t))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
  if (!__swift_getEnumTagSinglePayload(v9, 1, v7))
  {
    OUTLINED_FUNCTION_209();
    uint64_t v11 = (*(uint64_t (**)(void))(v10 + 272))();
    uint64_t v12 = OUTLINED_FUNCTION_101_0(v11);
    MEMORY[0x25A2C7060](v12);
  }
  uint64_t v13 = OUTLINED_FUNCTION_180_0();
  v8(v13);
  uint64_t v14 = v0[77];
  unint64_t v36 = v0[59];
  uint64_t v35 = v0[58];
  uint64_t v38 = v0[45];
  unint64_t v37 = v0[35];
  OUTLINED_FUNCTION_64_0();
  v15();
  uint64_t v16 = OUTLINED_FUNCTION_74_0();
  v17(v16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_125_0();
  OUTLINED_FUNCTION_111_0();
  v18();
  outlined destroy of AnswerSynthesisResult(v35, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  uint64_t v19 = *(void (**)(void))(v14 + 8);
  OUTLINED_FUNCTION_30();
  v19();
  outlined destroy of AnswerSynthesisResult(v36, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  OUTLINED_FUNCTION_30();
  v19();
  OUTLINED_FUNCTION_30();
  v19();
  outlined init with take of ResultsDialog(v38, v37, (void (*)(void))type metadata accessor for ResultsDialog);
  uint64_t v20 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v21 = OUTLINED_FUNCTION_20_1();
    if (v22(v21) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v23();
    }
    uint64_t v24 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v24);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_32_1(&dword_257DC6000, v25, v26, v27, "AnswerSynthesisController.synthesize");
    OUTLINED_FUNCTION_34();
  }
  uint64_t v28 = (void (*)(uint64_t))v0[88];

  uint64_t v29 = OUTLINED_FUNCTION_78_0();
  v28(v29);
  swift_release();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_28();
  v30();
  uint64_t v31 = OUTLINED_FUNCTION_106_0();
  v32(v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v33();
}

uint64_t AnswerSynthesisController.synthesize(query:searchResults:context:traceId:clientId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_137_0();
  uint64_t v45 = v44[77];
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void (**)(void))(v45 + 8);
  OUTLINED_FUNCTION_30();
  v46();
  OUTLINED_FUNCTION_30();
  v46();
  uint64_t v47 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v48 = static os_signpost_type_t.end.getter();
  uint64_t v78 = v46;
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v49 = OUTLINED_FUNCTION_55_1();
    int v51 = v50(v49);
    uint64_t v52 = v44[94];
    if (v51 == *MEMORY[0x263F90238])
    {
      uint64_t v53 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v54();
      uint64_t v53 = "";
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    uint64_t v73 = v52;
    os_signpost_id_t v55 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_90_0(&dword_257DC6000, v47, v48, v55, "AnswerSynthesisController.synthesize", v53);
    OUTLINED_FUNCTION_34();
    uint64_t v72 = v44[69];
  }
  else
  {
    uint64_t v72 = v44[69];
    uint64_t v73 = v44[94];
  }
  uint64_t v56 = (void (*)(uint64_t))v44[88];
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_50_1();
  uint64_t v74 = v57;
  uint64_t v75 = v44[68];
  uint64_t v76 = v44[67];
  uint64_t v77 = v44[66];
  OUTLINED_FUNCTION_22_2(v58);
  uint64_t v59 = OUTLINED_FUNCTION_96_0();
  v56(v59);
  swift_release();
  OUTLINED_FUNCTION_28();
  v60();
  uint64_t v61 = OUTLINED_FUNCTION_99_0();
  v62(v61);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_2();
  return v64(v63, v64, v65, v66, v67, v68, v69, v70, v72, v73, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           v74,
           v75,
           v76,
           v77,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           v78,
           v45 + 8,
           a41,
           a42,
           a43,
           a44);
}

{
  void *v44;
  uint64_t v45;
  void (*v46)(void);
  NSObject *v47;
  os_signpost_type_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  int v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  void (*v56)(void);
  os_signpost_id_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void (*v62)(void);
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  uint64_t (*v66)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);

  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_137_0();
  uint64_t v82 = v44[100];
  uint64_t v83 = v44[87];
  uint64_t v45 = v44[77];
  uint64_t v80 = v44[86];
  uint64_t v81 = v44[67];
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void (**)(void))(v45 + 8);
  OUTLINED_FUNCTION_30();
  v46();
  uint64_t v84 = v46;
  OUTLINED_FUNCTION_30();
  v46();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v48 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v49 = OUTLINED_FUNCTION_55_1();
    int v51 = v50(v49);
    uint64_t v52 = v44[102];
    uint64_t v53 = v44[67];
    if (v51 == *MEMORY[0x263F90238])
    {
      uint64_t v54 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v56();
      uint64_t v54 = "";
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    uint64_t v75 = v52;
    uint64_t v57 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_90_0(&dword_257DC6000, v47, v48, v57, "AnswerSynthesisController.synthesize", v54);
    OUTLINED_FUNCTION_34();
    uint64_t v74 = v44[67];
    os_signpost_id_t v55 = v53;
  }
  else
  {
    os_signpost_id_t v55 = v44[67];
    uint64_t v74 = v55;
    uint64_t v75 = v44[102];
  }
  uint64_t v58 = (void (*)(uint64_t, uint64_t))v44[88];
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_50_1();
  uint64_t v76 = v59;
  uint64_t v77 = v44[69];
  uint64_t v78 = v44[68];
  uint64_t v79 = v44[66];
  uint64_t v60 = v44[64];
  OUTLINED_FUNCTION_22_2(v61);
  v58(v55, v60);
  swift_release();
  OUTLINED_FUNCTION_28();
  v62();
  uint64_t v63 = OUTLINED_FUNCTION_99_0();
  v64(v63);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_2();
  return v66(v65, v66, v67, v68, v69, v70, v71, v72, v74, v75, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           v76,
           v77,
           v78,
           v79,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           v80,
           v81,
           v82,
           v83,
           v84,
           v45 + 8,
           a41,
           a42,
           a43,
           a44);
}

{
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  NSObject *v48;
  os_signpost_type_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  int v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  void (*v56)(void);
  os_signpost_id_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(void);
  uint64_t v63;
  uint64_t (*v64)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(void);

  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_137_0();
  uint64_t v45 = v44[77];
  uint64_t v46 = v44[59];
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void (**)(void))(v45 + 8);
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_26_2();
  v47();
  outlined destroy of AnswerSynthesisResult(v46, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  OUTLINED_FUNCTION_26_2();
  v47();
  uint64_t v103 = v47;
  OUTLINED_FUNCTION_26_2();
  v47();
  os_signpost_type_t v48 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  uint64_t v49 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v50 = OUTLINED_FUNCTION_55_1();
    uint64_t v52 = v51(v50);
    uint64_t v53 = v44[105];
    uint64_t v54 = v44[66];
    if (v52 == *MEMORY[0x263F90238])
    {
      os_signpost_id_t v55 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v56();
      os_signpost_id_t v55 = "";
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    uint64_t v74 = v53;
    uint64_t v57 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_90_0(&dword_257DC6000, v48, v49, v57, "AnswerSynthesisController.synthesize", v55);
    OUTLINED_FUNCTION_34();
    uint64_t v72 = v54;
    uint64_t v73 = v44[66];
  }
  else
  {
    uint64_t v73 = v44[66];
    uint64_t v74 = v44[105];
    uint64_t v72 = v73;
  }
  uint64_t v58 = (void (*)(uint64_t, uint64_t))v44[88];
  uint64_t v59 = v44[85];
  uint64_t v60 = v44[83];
  uint64_t v75 = v44[82];
  uint64_t v76 = v44[84];
  uint64_t v77 = v44[80];
  uint64_t v78 = v44[79];
  uint64_t v79 = v44[78];
  uint64_t v80 = v44[75];
  uint64_t v81 = v44[74];
  uint64_t v82 = v44[73];
  uint64_t v83 = v44[72];
  uint64_t v84 = v44[71];
  uint64_t v85 = v44[70];
  uint64_t v86 = v44[69];
  uint64_t v87 = v44[68];
  uint64_t v88 = v44[67];
  uint64_t v61 = v44[64];
  uint64_t v89 = v44[63];
  uint64_t v90 = v44[62];
  uint64_t v91 = v44[60];
  uint64_t v92 = v44[59];
  uint64_t v93 = v44[58];
  uint64_t v94 = v44[55];
  uint64_t v95 = v44[54];
  uint64_t v96 = v44[53];
  uint64_t v97 = v44[52];
  uint64_t v98 = v44[51];
  uint64_t v99 = v44[50];
  uint64_t v100 = v44[49];
  uint64_t v101 = v44[48];
  uint64_t v102 = v44[45];

  v58(v72, v61);
  swift_release();
  OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_26_2();
  v62();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v75);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_33_2();
  return v64(v63, v64, v65, v66, v67, v68, v69, v70, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82,
           v83,
           v84,
           v85,
           v86,
           v87,
           v88,
           v89,
           v90,
           v91,
           v92,
           v93,
           v94,
           v95,
           v96,
           v97,
           v98,
           v99,
           v100,
           v101,
           v102,
           v103,
           a41,
           a42,
           a43,
           a44);
}

void ResultsDialog.init(synthesisResult:)()
{
  OUTLINED_FUNCTION_145();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for SearchResult(0);
  uint64_t v5 = OUTLINED_FUNCTION_12_0(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  type metadata accessor for AnswerSynthesisResult();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_15();
  uint64_t v12 = (uint64_t *)(v11 - v10);
  uint64_t v13 = type metadata accessor for ResultsDialog(0);
  outlined init with copy of AnswerSynthesisResult(v1, (uint64_t)v3 + *(int *)(v13 + 24), (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  uint64_t v14 = OUTLINED_FUNCTION_78_0();
  outlined init with copy of AnswerSynthesisResult(v14, v15, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      outlined destroy of AnswerSynthesisResult(v1, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
      uint64_t v17 = v12[1];
      uint64_t v18 = v12[2];
      *uint64_t v3 = *v12;
      break;
    case 2u:
      outlined destroy of AnswerSynthesisResult(v1, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
      uint64_t v17 = 0;
      *uint64_t v3 = MEMORY[0x263F8EE78];
      uint64_t v18 = 2;
      break;
    case 3u:
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      uint64_t v20 = OUTLINED_FUNCTION_43_1(v19, (uint64_t)static Logging.answerSynthesis);
      os_log_type_t v21 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_55();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_257DC6000, v20, v21, "Answer synthesis: no answer found in personal results. Returning no answers", v22, 2u);
        OUTLINED_FUNCTION_34();
      }

      *uint64_t v3 = MEMORY[0x263F8EE78];
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_126_0();
        *(_DWORD *)uint64_t v25 = 67109120;
        type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
        static NSUserDefaults.allowNoAnswerFallbackToPCS.getter();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_34();
      }

      type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
      char v26 = static NSUserDefaults.allowNoAnswerFallbackToPCS.getter();
      outlined destroy of AnswerSynthesisResult(v1, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
      uint64_t v17 = 0;
      uint64_t v18 = 2;
      if ((v26 & 1) == 0) {
        uint64_t v18 = 3;
      }
      break;
    default:
      outlined init with take of ResultsDialog((uint64_t)v12, v8, (void (*)(void))type metadata accessor for SearchResult);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
      uint64_t v16 = OUTLINED_FUNCTION_139_0();
      *(_OWORD *)(v16 + 16) = xmmword_258661700;
      outlined init with copy of AnswerSynthesisResult(v8, (uint64_t)v12 + v16, (void (*)(void))type metadata accessor for SearchResult);
      outlined destroy of AnswerSynthesisResult(v1, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
      outlined destroy of AnswerSynthesisResult(v8, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v17 = 0;
      *uint64_t v3 = v16;
      uint64_t v18 = 1;
      break;
  }
  v3[1] = v17;
  v3[2] = v18;
  OUTLINED_FUNCTION_141_0();
}

uint64_t specialized Collection.first.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter();
  }
  else {
    return 0;
  }
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5D058], a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5CFD8], a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(void))type metadata accessor for WebAnswer, (void (*)(void))type metadata accessor for WebAnswer, a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(void))type metadata accessor for KGDocument, (void (*)(void))type metadata accessor for KGDocument, a2);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for SearchResult, (void (*)(void))type metadata accessor for SearchResult, a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5CDC0], a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5CED0], a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5B870], a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(void))type metadata accessor for SearchCATEntity, (void (*)(void))type metadata accessor for SearchCATEntity, a2);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for SearchEntity, (void (*)(void))type metadata accessor for SearchEntity, a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5D000], a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5CB50], a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F5CB30], a2);
}

{
  return specialized Collection.first.getter(a1, MEMORY[0x263F06EA8], a2);
}

uint64_t specialized Collection.first.getter(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    swift_bridgeObjectRetain();
  }
  return OUTLINED_FUNCTION_79_0();
}

{
  uint64_t result;
  int v3;
  char v4;

  Swift::Bool result = specialized Dictionary.Values.startIndex.getter(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return specialized Dictionary.Values.subscript.getter(result, v3, 0, a1);
  }
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = a2(0);
  if (v7)
  {
    OUTLINED_FUNCTION_30_2();
    outlined init with copy of AnswerSynthesisResult(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a4, a3);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a4, v10, 1, v8);
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0);
  if (v5)
  {
    OUTLINED_FUNCTION_1_0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(a3, a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v8, 1, v6);
}

uint64_t AnswerSynthesisController.createIFSearchToolTelemetry()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisPerfMetrics?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisDataMetrics?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_59_0();
  IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.init()();
  outlined init with copy of ExtractionRule(v0 + 16, (uint64_t)v19);
  uint64_t v9 = v20;
  uint64_t v10 = v21;
  uint64_t v11 = (void *)OUTLINED_FUNCTION_174_0();
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.modelNumber.setter();
  uint64_t v13 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  MEMORY[0x25A2C7040](v13);
  uint64_t v14 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisDataMetrics();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v14);
  IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.dataMetrics.setter();
  uint64_t v15 = (void (*)(unsigned char *, void))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.dataMetrics.modify();
  if (!OUTLINED_FUNCTION_182_0((uint64_t)v15, v16)) {
    MEMORY[0x25A2C7030](1);
  }
  v15(v19, 0);
  IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisPerfMetrics.init()();
  uint64_t v17 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisPerfMetrics();
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v17);
  return IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.setter();
}

Swift::Void __swiftcall AnswerSynthesisController.prewarmModel()()
{
  uint64_t v105 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult();
  OUTLINED_FUNCTION_1();
  uint64_t v104 = v0;
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_184_0();
  uint64_t v114 = v2;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  OUTLINED_FUNCTION_1();
  uint64_t v103 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v100 = (void (*)(char *, uint64_t))((char *)v99 - v9);
  uint64_t v10 = type metadata accessor for Date();
  OUTLINED_FUNCTION_1();
  uint64_t v110 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_185_0();
  uint64_t v111 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v16);
  uint64_t v113 = (void (*)(void))((char *)v99 - v17);
  uint64_t v18 = type metadata accessor for OSSignpostID();
  OUTLINED_FUNCTION_1();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_73();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_73();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v24);
  char v26 = (char *)v99 - v25;
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for OSSignposter();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v107 = v28;
  uint64_t v29 = OSSignposter.logHandle.getter();
  os_signpost_type_t v30 = static os_signpost_type_t.begin.getter();
  char v31 = OS_os_log.signpostsEnabled.getter();
  uint64_t v106 = v8;
  if (v31)
  {
    uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_130_0(v32);
    os_signpost_id_t v33 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v29, v30, v33, "AnswerSynthesisController.prewarmModel", "", (uint8_t *)v20, 2u);
    uint64_t v8 = v106;
    OUTLINED_FUNCTION_34();
  }

  OUTLINED_FUNCTION_64_0();
  v34();
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_181_0();
  uint64_t v108 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v109 = v20 + 8;
  v35(v26, v18);
  unint64_t v36 = v113;
  Date.init()();
  uint64_t v37 = v112;
  outlined init with copy of ExtractionRule(v112 + 16, (uint64_t)v118);
  uint64_t v38 = v119;
  uint64_t v39 = v120;
  __swift_project_boxed_opaque_existential_1(v118, v119);
  uint64_t v40 = v38;
  uint64_t v41 = v37;
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v39);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
  OUTLINED_FUNCTION_209();
  char v43 = (*(uint64_t (**)(uint64_t))(v42 + 80))(6);
  uint64_t v44 = v110;
  uint64_t v102 = v3;
  if ((v43 & 1) == 0) {
    goto LABEL_22;
  }
  outlined init with copy of PQAVerificationModelProtocol?(v41 + 56, (uint64_t)&v116, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  if (v117)
  {
    uint64_t v100 = v35;
    outlined init with take of SageSearchClient(&v116, (uint64_t)v118);
    uint64_t v46 = v119;
    uint64_t v45 = v120;
    __swift_project_boxed_opaque_existential_1(v118, v119);
    (*(void (**)(uint64_t))(*(void *)(v45 + 8) + 8))(v46);
    if (one-time initialization token for answerSynthesis != -1) {
      goto LABEL_48;
    }
    while (1)
    {
      uint64_t v47 = type metadata accessor for Logger();
      __swift_project_value_buffer(v47, (uint64_t)static Logging.answerSynthesis);
      OUTLINED_FUNCTION_64_0();
      v48();
      uint64_t v49 = Logger.logObject.getter();
      uint64_t v50 = v44;
      os_log_type_t v51 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v49, v51))
      {
        uint64_t v52 = OUTLINED_FUNCTION_158_0();
        uint64_t v53 = OUTLINED_FUNCTION_13_1();
        v99[1] = v53;
        *(void *)&long long v116 = v53;
        *(_DWORD *)uint64_t v52 = 136315394;
        uint64_t v115 = OUTLINED_FUNCTION_63_0(v53, v54, (uint64_t *)&v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v52 + 12) = 1024;
        Date.init()();
        Date.timeIntervalSince(_:)();
        os_signpost_id_t v55 = *(void (**)(void))(v50 + 8);
        OUTLINED_FUNCTION_30();
        v55();
        double v56 = OUTLINED_FUNCTION_148_0(1000.0);
        if (v57)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          return;
        }
        if (v56 <= -1.0) {
          goto LABEL_50;
        }
        if (v56 >= 4294967300.0) {
          goto LABEL_51;
        }
        unsigned int v58 = v56;
        OUTLINED_FUNCTION_30();
        v55();
        LODWORD(v115) = v58;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_257DC6000, v49, v51, "%s PQA verification model prewarm took %u ms", (uint8_t *)v52, 0x12u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();

        uint64_t v18 = v101;
        uint64_t v35 = v100;
        uint64_t v44 = v110;
        unint64_t v36 = v113;
      }
      else
      {
        OUTLINED_FUNCTION_92_0();
        OUTLINED_FUNCTION_28();
        v72();

        uint64_t v44 = v50;
        uint64_t v35 = v100;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
LABEL_22:
      AnswerSynthesisController.createIFSearchToolTelemetry()();
      uint64_t v73 = (void (*)(uint64_t *, void))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
      uint64_t v75 = v74;
      uint64_t v76 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisPerfMetrics();
      if (__swift_getEnumTagSinglePayload(v75, 1, v76))
      {
        v73(v118, 0);
      }
      else
      {
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_209();
        uint64_t v78 = (*(uint64_t (**)(void (*)(void)))(v77 + 272))(v36);
        LOBYTE(v116) = 0;
        uint64_t v79 = OUTLINED_FUNCTION_101_0(v78);
        MEMORY[0x25A2C70A0](v79);
        v73(v118, 0);
      }
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v80 = type metadata accessor for Logger();
      __swift_project_value_buffer(v80, (uint64_t)static Logging.answerSynthesis);
      OUTLINED_FUNCTION_64_0();
      v81();
      uint64_t v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v82, v83))
      {
        uint64_t v90 = *(void (**)(void))(v44 + 8);
        OUTLINED_FUNCTION_26_2();
        v90();

        OUTLINED_FUNCTION_16_1();
        v91();
        ((void (*)(void (*)(void), uint64_t))v90)(v36, v10);
LABEL_35:
        uint64_t v92 = v107;
        uint64_t v65 = OSSignposter.logHandle.getter();
        OUTLINED_FUNCTION_143_0();
        static os_signpost_type_t.end.getter();
        if ((OUTLINED_FUNCTION_60_0() & 1) == 0) {
          goto LABEL_42;
        }
        swift_retain();
        checkForErrorAndConsumeState(state:)();
        swift_release();
        OUTLINED_FUNCTION_142_0();
        uint64_t v93 = v102;
        OUTLINED_FUNCTION_164_0();
        if (v94() == *MEMORY[0x263F90238])
        {
          uint64_t v95 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v92 + 8))(v8, v93);
          uint64_t v95 = "";
        }
        *(_WORD *)OUTLINED_FUNCTION_55() = 0;
        OSSignpostID.rawValue.getter();
        OUTLINED_FUNCTION_186();
        OUTLINED_FUNCTION_90_0(&dword_257DC6000, v65, v96, v97, "AnswerSynthesisController.prewarmModel", v95);
LABEL_41:
        OUTLINED_FUNCTION_34();
        goto LABEL_42;
      }
      uint64_t v84 = OUTLINED_FUNCTION_158_0();
      uint64_t v18 = OUTLINED_FUNCTION_13_1();
      v118[0] = v18;
      *(_DWORD *)uint64_t v84 = 136315394;
      *(void *)&long long v116 = OUTLINED_FUNCTION_63_0(v18, v85, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v84 + 12) = 1024;
      Date.init()();
      Date.timeIntervalSince(_:)();
      uint64_t v86 = *(void (**)(void))(v44 + 8);
      v44 += 8;
      unint64_t v36 = v86;
      OUTLINED_FUNCTION_26_2();
      v86();
      double v87 = OUTLINED_FUNCTION_148_0(1000.0);
      if (v57) {
        break;
      }
      if (v87 <= -1.0) {
        goto LABEL_46;
      }
      if (v87 < 4294967300.0)
      {
        uint64_t v10 = (uint64_t)v35;
        unsigned int v88 = v87;
        OUTLINED_FUNCTION_65();
        v36();
        LODWORD(v116) = v88;
        uint64_t v35 = (void (*)(char *, uint64_t))v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_257DC6000, v82, v83, "%s AS model prewarm took %u ms", (uint8_t *)v84, 0x12u);
        OUTLINED_FUNCTION_122_0();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();

        OUTLINED_FUNCTION_16_1();
        v89();
        OUTLINED_FUNCTION_65();
        v36();
        uint64_t v8 = v106;
        uint64_t v18 = v101;
        goto LABEL_35;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      swift_once();
    }
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v59 = v3;
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v116, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v60 = type metadata accessor for Logger();
  uint64_t v61 = OUTLINED_FUNCTION_43_1(v60, (uint64_t)static Logging.answerSynthesis);
  os_log_type_t v62 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_130_0(v63);
    OUTLINED_FUNCTION_156_0(&dword_257DC6000, v61, v62, "PQA verification model is enabled but not initialized");
    OUTLINED_FUNCTION_34();
  }

  OUTLINED_FUNCTION_26_2();
  v64();
  uint64_t v65 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_143_0();
  os_signpost_type_t v66 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v67 = v35;
    uint64_t v68 = v18;
    swift_retain();
    uint64_t v69 = (char *)v100;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    OUTLINED_FUNCTION_142_0();
    OUTLINED_FUNCTION_164_0();
    if (v70() == *MEMORY[0x263F90238])
    {
      uint64_t v71 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v59);
      uint64_t v71 = "";
    }
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    os_signpost_id_t v98 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_90_0(&dword_257DC6000, v65, v66, v98, "AnswerSynthesisController.prewarmModel", v71);
    uint64_t v18 = v68;
    uint64_t v35 = v67;
    goto LABEL_41;
  }
LABEL_42:

  v35((char *)v10, v18);
  swift_release();
}

void AnswerSynthesisController.createAnswerSynthesisRequest(for:with:context:enableTruncation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_105_0();
  a19 = v21;
  a20 = v22;
  uint64_t v33 = v23;
  uint64_t v24 = type metadata accessor for AnswerSynthesisRequestContext();
  uint64_t v25 = OUTLINED_FUNCTION_81(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_184_0();
  uint64_t v32 = v26;
  static AnswerSynthesisRequest.calculateCharLimitForUserPrompt(tokenLimit:)(*(void *)(v20 + 104));
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static Logging.answerSynthesis);
  swift_retain();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    a10 = v31;
    *(_DWORD *)uint64_t v30 = 136315650;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000040, 0x800000025867DC60, &a10);
    OUTLINED_FUNCTION_174_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2048;
    OUTLINED_FUNCTION_174_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v30 + 22) = 2048;
    OUTLINED_FUNCTION_174_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v28, v29, "%s answerSynthesisTokenLimit=%ld, charLimit=%ld", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v31, -1, -1);
    MEMORY[0x25A2C94B0](v30, -1, -1);
  }
  else
  {

    swift_release();
  }
  outlined init with copy of AnswerSynthesisResult(v33, v32, (void (*)(void))type metadata accessor for AnswerSynthesisRequestContext);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AnswerSynthesisRequest.init(query:documents:context:charLimit:enableTruncation:)();
  OUTLINED_FUNCTION_120_0();
}

double AnswerSynthesisController.createPQAVerificationRequest(answerSynthesisRequest:synthesisResult:)@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)*a2;
  if (!*a2)
  {
    if (one-time initialization token for answerSynthesis == -1)
    {
LABEL_8:
      uint64_t v15 = type metadata accessor for Logger();
      uint64_t v16 = OUTLINED_FUNCTION_43_1(v15, (uint64_t)static Logging.answerSynthesis);
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (!OUTLINED_FUNCTION_51_1(v17))
      {
LABEL_15:

        *(void *)(a3 + 32) = 0;
        double result = 0.0;
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        return result;
      }
      uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v18);
      uint64_t v19 = "No response from AS model result";
LABEL_14:
      _os_log_impl(&dword_257DC6000, v16, (os_log_type_t)v3, v19, v4, 2u);
      OUTLINED_FUNCTION_34();
      goto LABEL_15;
    }
LABEL_17:
    swift_once();
    goto LABEL_8;
  }
  if (!v6[2])
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v3 = a1[6];
  uint64_t v9 = v6[5];
  uint64_t v10 = v6[6];
  uint64_t v11 = v6[7];
  uint64_t v4 = (uint8_t *)v6[8];
  *(void *)&long long v23 = v6[4];
  *((void *)&v23 + 1) = v9;
  uint64_t v24 = v10;
  uint64_t v25 = v11;
  uint64_t v26 = v4;
  if (!v4)
  {
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    uint64_t v16 = OUTLINED_FUNCTION_43_1(v20, (uint64_t)static Logging.answerSynthesis);
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (!OUTLINED_FUNCTION_51_1(v21)) {
      goto LABEL_15;
    }
    uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_0(v22);
    uint64_t v19 = "No dialog from AS model response";
    goto LABEL_14;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = specialized _ArrayProtocol.filter(_:)(v12, &v23);
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v11;
  *(void *)(a3 + 24) = v4;
  *(void *)(a3 + 32) = v13;
  swift_bridgeObjectRetain();
  return result;
}

uint64_t AnswerSynthesisController.performSynthesisRequest(for:with:answerSynthesisMetrics:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  *(void *)(v1 + 472) = v4;
  *(void *)(v1 + 480) = v0;
  *(void *)(v1 + 456) = v5;
  *(void *)(v1 + 464) = v6;
  uint64_t v7 = type metadata accessor for OSSignpostError();
  *(void *)(v1 + 488) = v7;
  OUTLINED_FUNCTION_12_0(v7);
  *(void *)(v1 + 496) = v8;
  *(void *)(v1 + 504) = OUTLINED_FUNCTION_50_0();
  *(void *)(v1 + 512) = swift_task_alloc();
  *(void *)(v1 + 520) = swift_task_alloc();
  *(void *)(v1 + 528) = swift_task_alloc();
  *(void *)(v1 + 536) = swift_task_alloc();
  *(void *)(v1 + 544) = swift_task_alloc();
  *(void *)(v1 + 552) = swift_task_alloc();
  *(void *)(v1 + 560) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for String.Encoding();
  *(void *)(v1 + 568) = v9;
  OUTLINED_FUNCTION_12_0(v9);
  *(void *)(v1 + 576) = v10;
  *(void *)(v1 + 584) = OUTLINED_FUNCTION_49_1();
  uint64_t v11 = type metadata accessor for PromptTemplate();
  *(void *)(v1 + 592) = v11;
  OUTLINED_FUNCTION_12_0(v11);
  *(void *)(v1 + 600) = v12;
  *(void *)(v1 + 608) = OUTLINED_FUNCTION_49_1();
  uint64_t v13 = type metadata accessor for Date();
  *(void *)(v1 + 616) = v13;
  OUTLINED_FUNCTION_12_0(v13);
  *(void *)(v1 + 624) = v14;
  *(void *)(v1 + 632) = OUTLINED_FUNCTION_50_0();
  *(void *)(v1 + 640) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for OSSignpostID();
  *(void *)(v1 + 648) = v15;
  OUTLINED_FUNCTION_12_0(v15);
  *(void *)(v1 + 656) = v16;
  *(void *)(v1 + 664) = swift_task_alloc();
  *(void *)(v1 + 672) = swift_task_alloc();
  *(void *)(v1 + 680) = swift_task_alloc();
  *(void *)(v1 + 688) = swift_task_alloc();
  *(void *)(v1 + 696) = swift_task_alloc();
  *(void *)(v1 + 704) = swift_task_alloc();
  *(void *)(v1 + 712) = swift_task_alloc();
  *(void *)(v1 + 720) = swift_task_alloc();
  *(void *)(v1 + 728) = swift_task_alloc();
  *(void *)(v1 + 736) = swift_task_alloc();
  *(void *)(v1 + 744) = swift_task_alloc();
  uint64_t v17 = *(void *)(v3 + 8);
  *(void *)(v1 + 752) = *(void *)v3;
  *(void *)(v1 + 760) = v17;
  long long v18 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v1 + 768) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v1 + 784) = v18;
  *(void *)(v1 + 800) = *(void *)(v3 + 48);
  *(_OWORD *)(v1 + 808) = *(_OWORD *)(v3 + 56);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v19, v20, v21);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_10();
  *uint64_t v5 = v4;
  v7[113] = v6;
  v7[114] = v8;
  v7[115] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  void (*v7)(void);
  unint64_t v8;
  unint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  void *v12;
  unsigned char *v13;
  void (*v14)(void);
  void (*v15)(void);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(void);
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  NSObject *v30;
  void (*v31)(void);
  char v32;
  void (*v33)(void);
  const char *v34;
  _WORD *v35;
  os_signpost_type_t v36;
  os_signpost_id_t v37;
  uint64_t v38;
  NSObject *v39;
  unsigned int (*v40)(void);
  const char *v41;
  void (*v42)(void);
  _WORD *v43;
  os_signpost_type_t v44;
  os_signpost_id_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  void (*v53)(uint64_t, void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  os_log_type_t v60;
  void (*v61)(uint64_t, uint64_t);
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  long long v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85[2];
  uint64_t v86;
  uint64_t v87;

  uint64_t v86 = v0;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 152);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_24_2(v2))
  {
    uint64_t v3 = *(void *)(v0 + 912);
    uint64_t v4 = *(void *)(v0 + 904);
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_14_1();
    v85[0] = OUTLINED_FUNCTION_13_1();
    *uint64_t v5 = 136642819;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 440) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_103_0(&dword_257DC6000, v1, v6, "Got response from answer synthesis model: %{sensitive}s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  static String.Encoding.utf8.getter();
  uint64_t v7 = (void (*)(void))String.data(using:allowLossyConversion:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_30();
  v10();
  if (v9 >> 60 == 15)
  {
    uint64_t v11 = *(void *)(v0 + 624);
    lazy protocol witness table accessor for type NetworkServiceError and conformance NetworkServiceError();
    uint64_t v12 = (void *)swift_allocError();
    long long *v13 = 1;
    swift_willThrow();
    uint64_t v7 = (void (*)(void))(v11 + 8);
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_82_0();
    v14();
    OUTLINED_FUNCTION_30();
    v15();
LABEL_8:
    uint64_t v22 = v12;
    uint64_t v23 = v12;
    uint64_t v24 = Logger.logObject.getter();
    uint64_t v25 = static os_log_type_t.error.getter();
    os_log_type_t v83 = v12;
    if (os_log_type_enabled(v24, v25))
    {
      OUTLINED_FUNCTION_14_1();
      uint64_t v26 = (void *)OUTLINED_FUNCTION_126_0();
      OUTLINED_FUNCTION_171_0(5.7779e-34);
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 424) = v27;
      OUTLINED_FUNCTION_175_0();
      *uint64_t v26 = v27;
      uint64_t v12 = v83;

      OUTLINED_FUNCTION_103_0(&dword_257DC6000, v24, v28, "Failed to synthesize with error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
    }
    OUTLINED_FUNCTION_94_0();
    swift_willThrow();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_28();
    v29();
    uint64_t v30 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OUTLINED_FUNCTION_86_0())
    {
      OUTLINED_FUNCTION_91_0();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v7 = (void (*)(void))((char *)v7 + 88);
      OUTLINED_FUNCTION_25_2();
      v31();
      OUTLINED_FUNCTION_80_0();
      if (v32)
      {
        uint64_t v34 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v33();
        uint64_t v34 = "";
      }
      uint64_t v35 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_41_1(v35);
      OUTLINED_FUNCTION_93_0();
      OUTLINED_FUNCTION_40_1(&dword_257DC6000, v30, v36, v37, "SearchTool.AnswerSynthesis", v34);
      OUTLINED_FUNCTION_34();
    }
    OUTLINED_FUNCTION_65_0();
    uint64_t v38 = OUTLINED_FUNCTION_96_0();
    ((void (*)(uint64_t))v12)(v38);
    swift_release();
    uint64_t v39 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if (OUTLINED_FUNCTION_86_0())
    {
      OUTLINED_FUNCTION_91_0();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v7 = (void (*)(void))((char *)v7 + 88);
      OUTLINED_FUNCTION_25_2();
      if (v40() == *MEMORY[0x263F90238])
      {
        uint64_t v41 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v42();
        uint64_t v41 = "";
      }
      char v43 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_41_1(v43);
      OUTLINED_FUNCTION_93_0();
      OUTLINED_FUNCTION_40_1(&dword_257DC6000, v39, v44, v45, "AnswerSynthesisController.performSynthesisRequest", v41);
      OUTLINED_FUNCTION_34();
    }
    OUTLINED_FUNCTION_114_0();
    uint64_t v46 = OUTLINED_FUNCTION_125_0();
    v7(v46);
    swift_release();
    OUTLINED_FUNCTION_12_1();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    return v47();
  }
  uint64_t v16 = *(void **)(v0 + 920);
  type metadata accessor for JSONDecoder();
  OUTLINED_FUNCTION_12();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type AnswerSynthesisModelResult and conformance AnswerSynthesisModelResult();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v16)
  {
    uint64_t v82 = *(void *)(v0 + 608);
    uint64_t v17 = *(void *)(v0 + 600);
    long long v18 = *(void *)(v0 + 592);
    swift_release();
    uint64_t v19 = OUTLINED_FUNCTION_117_0();
    outlined consume of Data?(v19, v20);
    OUTLINED_FUNCTION_111_0();
    v21();
    uint64_t v12 = v16;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v82, v18);
    goto LABEL_8;
  }
  uint64_t v79 = (uint64_t)v7;
  uint64_t v49 = *(void *)(v0 + 632);
  swift_release();
  uint64_t v84 = *(void *)(v0 + 368);
  uint64_t v78 = *(void *)(v0 + 360);
  *(void *)(v0 + 928) = v78;
  uint64_t v50 = *(void *)(v0 + 376);
  *(void *)(v0 + 936) = v50;
  uint64_t v80 = *(unsigned char *)(v0 + 384);
  OUTLINED_FUNCTION_3();
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v51 + 272))(v49);
  uint64_t v53 = (void (*)(uint64_t, void))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
  if (!OUTLINED_FUNCTION_182_0((uint64_t)v53, v54))
  {
    LOBYTE(v85[0]) = 0;
    MEMORY[0x25A2C7080](v52);
  }
  v53(v0 + 264, 0);
  os_signpost_id_t v55 = *(void *)(v0 + 624);
  double v56 = *(void *)(v0 + 608);
  char v57 = *(void *)(v0 + 600);
  unsigned int v58 = *(void *)(v0 + 592);
  outlined consume of Data?(v79, v9);
  *(void *)(v0 + 944) = *(void *)(v55 + 8);
  *(void *)(v0 + 952) = (v55 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_125_0();
  OUTLINED_FUNCTION_26_2();
  v59();
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  uint64_t v60 = v57 + 8;
  v61(v56, v58);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v62 = Logger.logObject.getter();
  uint64_t v63 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_51_1(v63))
  {
    uint64_t v64 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    uint64_t v65 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v64 = 136642819;
    v85[0] = v65;
    *(void *)(v0 + 392) = v78;
    *(void *)(v0 + 400) = v84;
    *(void *)(v0 + 408) = v50;
    *(unsigned char *)(v0 + 416) = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_signpost_type_t v66 = String.init<A>(describing:)();
    *(void *)(v0 + 432) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_108_0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_257DC6000, v62, v60, "Answer synthesis got response: %{sensitive}s", v64, 0xCu);
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    uint64_t v68 = v80;
    uint64_t v69 = v84;
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    swift_bridgeObjectRelease_n();

    uint64_t v69 = v84;
    uint64_t v68 = v80;
  }
  uint64_t v70 = *(void *)(v0 + 800);
  uint64_t v71 = *(void *)(v0 + 760);
  *(void *)(v0 + 16) = *(void *)(v0 + 752);
  uint64_t v72 = *(void *)(v0 + 480);
  *(void *)(v0 + 24) = v71;
  uint64_t v73 = *(_OWORD *)(v0 + 784);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 768);
  *(_OWORD *)(v0 + 48) = v73;
  *(void *)(v0 + 64) = v70;
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 808);
  *(void *)(v0 + 328) = v78;
  *(void *)(v0 + 336) = v69;
  *(void *)(v0 + 344) = v50;
  *(unsigned char *)(v0 + 352) = v68;
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v72 + 224)
                                                                   + **(int **)(*(void *)v72 + 224));
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v0 + 960) = v74;
  char *v74 = v75;
  v74[1] = AnswerSynthesisController.performSynthesisRequest(for:with:answerSynthesisMetrics:);
  uint64_t v76 = *(void *)(v0 + 456);
  uint64_t v77 = *(void *)(v0 + 464);
  return v81(v76, v0 + 16, v0 + 328, v77);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 968) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  char v5;
  void (*v6)(void);
  _WORD *v7;
  uint64_t v8;
  os_signpost_type_t v9;
  os_signpost_id_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void (*v17)(void);
  _WORD *v18;
  os_signpost_type_t v19;
  os_signpost_id_t v20;
  NSObject *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v27;

  (*(void (**)(void, void))(v0 + 944))(*(void *)(v0 + 640), *(void *)(v0 + 616));
  uint64_t v2 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    OUTLINED_FUNCTION_91_0();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v3 = OUTLINED_FUNCTION_20_1();
    v4(v3);
    OUTLINED_FUNCTION_80_0();
    if (!v5)
    {
      OUTLINED_FUNCTION_77();
      v6();
    }
    uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v7);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_32_1(&dword_257DC6000, v8, v9, v10, "SearchTool.AnswerSynthesis");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_116_0();

  uint64_t v11 = OUTLINED_FUNCTION_96_0();
  v1(v11);
  swift_release();
  uint64_t v12 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v13 = *(void *)(v0 + 552);
    uint64_t v15 = *(void *)(v0 + 488);
    uint64_t v14 = *(void *)(v0 + 496);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15) == *MEMORY[0x263F90238])
    {
      uint64_t v16 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v17();
      uint64_t v16 = "";
    }
    long long v18 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v18);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v12, v19, v20, "AnswerSynthesisController.performSynthesisRequest", v16);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v21 = v12;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
  uint64_t v23 = *(void *)(v0 + 712);
  uint64_t v24 = *(void *)(v0 + 648);

  v22(v23, v24);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v25();
}

void AnswerSynthesisController.performSynthesisRequest(for:with:answerSynthesisMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_137_0();
  if (one-time initialization token for searchSignposter != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for OSSignposter();
  uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)static Logging.searchSignposter);
  *(void *)(v44 + 824) = v46;
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v136 = v46;
  uint64_t v47 = OSSignposter.logHandle.getter();
  os_signpost_type_t v48 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v49 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v49 = 0;
    os_signpost_id_t v50 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v47, v48, v50, "AnswerSynthesisController.performSynthesisRequest", "", v49, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v51 = *(void *)(v44 + 744);
  uint64_t v52 = *(void *)(v44 + 736);
  uint64_t v53 = *(void *)(v44 + 656);
  uint64_t v54 = *(void *)(v44 + 648);

  uint64_t v144 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
  v144(v52, v51, v54);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_12();
  uint64_t v138 = OUTLINED_FUNCTION_160();
  *(void *)(v44 + 832) = v138;
  *(void *)(v44 + 840) = *(void *)(v53 + 8);
  *(void *)(v44 + 848) = (v53 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_111_0();
  v55();
  if (one-time initialization token for searchComponentSignposter != -1) {
    swift_once();
  }
  *(void *)(v44 + 856) = __swift_project_value_buffer(v45, (uint64_t)static Logging.searchComponentSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  double v56 = OSSignposter.logHandle.getter();
  os_signpost_type_t v57 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    unsigned int v58 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)unsigned int v58 = 0;
    os_signpost_id_t v59 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_257DC6000, v56, v57, v59, "SearchTool.AnswerSynthesis", "", v58, 2u);
    OUTLINED_FUNCTION_34();
  }
  uint64_t v60 = *(void *)(v44 + 816);
  long long v142 = *(_OWORD *)(v44 + 784);
  long long v143 = *(_OWORD *)(v44 + 800);
  long long v140 = *(_OWORD *)(v44 + 752);
  long long v141 = *(_OWORD *)(v44 + 768);
  uint64_t v61 = *(void *)(v44 + 736);
  uint64_t v62 = *(void *)(v44 + 728);
  uint64_t v63 = *(void *)(v44 + 648);

  v144(v61, v62, v63);
  swift_allocObject();
  *(void *)(v44 + 864) = OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_26_2();
  v64();
  Date.init()();
  long long v149 = v140;
  long long v150 = v141;
  long long v151 = v142;
  long long v152 = v143;
  Swift::String v66 = AnswerSynthesisRequest.userPrompt()();
  if (v65)
  {
    uint64_t v145 = v65;
    OUTLINED_FUNCTION_77();
    v67();
    uint64_t v68 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v69 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v70 = OUTLINED_FUNCTION_97_0();
      v71(v70);
      OUTLINED_FUNCTION_80_0();
      if (v72)
      {
        uint64_t v110 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v109();
        uint64_t v110 = "";
      }
      uint64_t v111 = (_WORD *)OUTLINED_FUNCTION_55();
      os_signpost_id_t v112 = OUTLINED_FUNCTION_155_0(v111);
      OUTLINED_FUNCTION_140_0(&dword_257DC6000, v68, v69, v112, "SearchTool.AnswerSynthesis", v110);
      OUTLINED_FUNCTION_34();
    }

    OUTLINED_FUNCTION_26_2();
    v113();
    swift_release();
    uint64_t v114 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v115 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v116 = OUTLINED_FUNCTION_97_0();
      v117(v116);
      OUTLINED_FUNCTION_80_0();
      if (v72)
      {
        uint64_t v119 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_77();
        v118();
        uint64_t v119 = "";
      }
      uint64_t v120 = (_WORD *)OUTLINED_FUNCTION_55();
      os_signpost_id_t v121 = OUTLINED_FUNCTION_155_0(v120);
      OUTLINED_FUNCTION_140_0(&dword_257DC6000, v114, v115, v121, "AnswerSynthesisController.performSynthesisRequest", v119);
      OUTLINED_FUNCTION_34();
    }

    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_26_2();
    v122();
    swift_release();
    uint64_t v131 = *(void *)(v44 + 664);
    uint64_t v132 = *(void *)(v44 + 640);
    uint64_t v133 = *(void *)(v44 + 632);
    uint64_t v134 = *(void *)(v44 + 608);
    uint64_t v135 = *(void *)(v44 + 584);
    uint64_t v137 = *(void *)(v44 + 560);
    uint64_t v139 = *(void *)(v44 + 552);
    *(void *)&long long v140 = *(void *)(v44 + 544);
    *(void *)&long long v141 = *(void *)(v44 + 536);
    *(void *)&long long v142 = *(void *)(v44 + 528);
    *(void *)&long long v143 = *(void *)(v44 + 520);
    uint64_t v147 = *(void *)(v44 + 512);
    uint64_t v148 = *(void *)(v44 + 504);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_33_2();
    v124(v123, v124, v125, v126, v127, v128, v129, v130, a9, a10, a11, v131, v132, v133, v134, v135, v137, v139, v140,
      *((void *)&v140 + 1),
      v141,
      *((void *)&v141 + 1),
      v142,
      *((void *)&v142 + 1),
      v143,
      *((void *)&v143 + 1),
      a27,
      v145,
      v147,
      v148,
      v149,
      *((void *)&v149 + 1),
      v150,
      *((void *)&v150 + 1),
      v151,
      *((void *)&v151 + 1),
      v152,
      *((void *)&v152 + 1),
      v60,
      a40,
      a41,
      a42,
      a43,
      a44);
  }
  else
  {
    uint64_t v73 = (void (*)(uint64_t))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.dataMetrics.modify();
    uint64_t v74 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisDataMetrics();
    if (!OUTLINED_FUNCTION_128_0(v74, v75, v74))
    {
      OUTLINED_FUNCTION_117_0();
      unint64_t v76 = String.count.getter();
      if ((v76 & 0x8000000000000000) != 0 || HIDWORD(v76))
      {
        OUTLINED_FUNCTION_17_0();
        _assertionFailure(_:_:file:line:flags:)();
        OUTLINED_FUNCTION_33_2();
        return;
      }
      LOBYTE(v149) = 0;
      MEMORY[0x25A2C7010](v76);
    }
    uint64_t v77 = OUTLINED_FUNCTION_77_0();
    v73(v77);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_209();
    unsigned int v79 = (*(uint64_t (**)(void))(v78 + 272))();
    uint64_t v80 = (void (*)(uint64_t))IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisResult.perfMetrics.modify();
    uint64_t v81 = type metadata accessor for IntelligenceFlowSearchToolTelemetry.SearchToolAnswerSynthesisPerfMetrics();
    *(void *)(v44 + 872) = v81;
    if (!OUTLINED_FUNCTION_128_0(v81, v82, v81))
    {
      LOBYTE(v149) = 0;
      MEMORY[0x25A2C70B0](v79);
    }
    uint64_t v83 = OUTLINED_FUNCTION_180_0();
    v80(v83);
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    *(void *)(v44 + 880) = __swift_project_value_buffer(v84, (uint64_t)static Logging.answerSynthesis);
    swift_bridgeObjectRetain_n();
    uint64_t v85 = (void *)Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_51_1(v86))
    {
      double v87 = (_DWORD *)OUTLINED_FUNCTION_14_1();
      *(void *)&long long v149 = OUTLINED_FUNCTION_13_1();
      *double v87 = 136642819;
      swift_bridgeObjectRetain();
      uint64_t v88 = OUTLINED_FUNCTION_117_0();
      *(void *)(v44 + 448) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v89, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_173_0(&dword_257DC6000, v91, v92, "Calling answer synthesis with user prompt: %{sensitive}s");
      OUTLINED_FUNCTION_121_0();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v93 = *(void *)(v44 + 480);
    outlined init with copy of ExtractionRule(v93 + 16, v44 + 192);
    uint64_t v94 = *(void *)(v44 + 224);
    __swift_project_boxed_opaque_existential_1((void *)(v44 + 192), *(void *)(v44 + 216));
    uint64_t v95 = OUTLINED_FUNCTION_181_0();
    v96(v95, v94);
    __swift_destroy_boxed_opaque_existential_1Tm(v44 + 192);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_258661700;
    __swift_project_boxed_opaque_existential_1((void *)(v93 + 16), *(void *)(v93 + 40));
    *(void *)(inited + 32) = AnswerSynthesisModelProtocol.templateBindingUserPromptKey.getter();
    *(void *)(inited + 40) = v98;
    *(Swift::String *)(inited + 48) = v66;
    *(void *)(v44 + 888) = Dictionary.init(dictionaryLiteral:)();
    Date.init()();
    outlined init with copy of ExtractionRule(v93 + 16, v44 + 152);
    uint64_t v99 = *(void *)(v44 + 184);
    __swift_project_boxed_opaque_existential_1((void *)(v44 + 152), *(void *)(v44 + 176));
    uint64_t v146 = *(void *)(v99 + 24) + **(int **)(v99 + 24);
    uint64_t v100 = (void *)swift_task_alloc();
    *(void *)(v44 + 896) = v100;
    void *v100 = v44;
    v100[1] = AnswerSynthesisController.performSynthesisRequest(for:with:answerSynthesisMetrics:);
    OUTLINED_FUNCTION_33_2();
    v106(v101, v102, v103, v104, v105, v106, v107, v108, a9, a10, a11, a12, a13, a14, a15, a16, v136, v138, v140,
      *((void *)&v140 + 1),
      v141,
      *((void *)&v141 + 1),
      v142,
      *((void *)&v142 + 1),
      v143,
      *((void *)&v143 + 1),
      a27,
      v66._object,
      v146,
      v99 + 24,
      v149,
      *((void *)&v140 + 1),
      v141,
      *((void *)&v141 + 1),
      v142,
      *((void *)&v142 + 1),
      v143,
      *((void *)&v143 + 1),
      v60,
      a40,
      a41,
      a42,
      a43,
      a44);
  }
}

uint64_t AnswerSynthesisController.performSynthesisRequest(for:with:answerSynthesisMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_28();
  v28();
  OUTLINED_FUNCTION_65();
  v29();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v26 + 19));
  uint64_t v30 = (void *)v26[115];
  id v31 = v30;
  id v32 = v30;
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  uint64_t v78 = v30;
  if (os_log_type_enabled(v33, v34))
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v35 = (void *)OUTLINED_FUNCTION_126_0();
    OUTLINED_FUNCTION_171_0(5.7779e-34);
    uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
    v26[53] = v36;
    OUTLINED_FUNCTION_175_0();
    *uint64_t v35 = v36;
    uint64_t v30 = v78;

    OUTLINED_FUNCTION_103_0(&dword_257DC6000, v33, v37, "Failed to synthesize with error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
  }
  OUTLINED_FUNCTION_94_0();
  swift_willThrow();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_28();
  v38();
  uint64_t v39 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_86_0())
  {
    OUTLINED_FUNCTION_91_0();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v27 = (void (*)(void))((char *)v27 + 88);
    OUTLINED_FUNCTION_25_2();
    v40();
    OUTLINED_FUNCTION_80_0();
    if (v41)
    {
      char v43 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v42();
      char v43 = "";
    }
    uint64_t v44 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v44);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v39, v45, v46, "SearchTool.AnswerSynthesis", v43);
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_65_0();
  uint64_t v47 = OUTLINED_FUNCTION_96_0();
  ((void (*)(uint64_t))v30)(v47);
  swift_release();
  os_signpost_type_t v48 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_86_0())
  {
    OUTLINED_FUNCTION_91_0();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v27 = (void (*)(void))((char *)v27 + 88);
    OUTLINED_FUNCTION_25_2();
    if (v49() == *MEMORY[0x263F90238])
    {
      os_signpost_id_t v50 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_77();
      v51();
      os_signpost_id_t v50 = "";
    }
    uint64_t v52 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v52);
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_40_1(&dword_257DC6000, v48, v53, v54, "AnswerSynthesisController.performSynthesisRequest", v50);
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_114_0();
  uint64_t v55 = OUTLINED_FUNCTION_125_0();
  v27(v55);
  swift_release();
  uint64_t v65 = v26[83];
  uint64_t v66 = v26[80];
  uint64_t v67 = v26[79];
  uint64_t v68 = v26[76];
  uint64_t v69 = v26[73];
  uint64_t v70 = v26[70];
  uint64_t v71 = v26[69];
  uint64_t v72 = v26[68];
  uint64_t v73 = v26[67];
  uint64_t v74 = v26[66];
  uint64_t v75 = v26[65];
  uint64_t v76 = v26[64];
  uint64_t v77 = v26[63];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_61_0();
  return v57(v56, v57, v58, v59, v60, v61, v62, v63, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75,
           v76,
           v77,
           v78,
           a23,
           a24,
           a25,
           a26);
}

{
  uint64_t v26;
  void (*v27)(uint64_t);
  void *v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  char v31;
  void (*v32)(void);
  _WORD *v33;
  uint64_t v34;
  os_signpost_type_t v35;
  os_signpost_id_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t);
  void (*v41)(void);
  _WORD *v42;
  uint64_t v43;
  os_signpost_type_t v44;
  os_signpost_id_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_123_0();
  (*(void (**)(void, void))(v26 + 944))(*(void *)(v26 + 640), *(void *)(v26 + 616));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    OUTLINED_FUNCTION_91_0();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    os_log_type_t v29 = OUTLINED_FUNCTION_20_1();
    v30(v29);
    OUTLINED_FUNCTION_80_0();
    if (!v31)
    {
      OUTLINED_FUNCTION_77();
      v32();
    }
    uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v33);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_32_1(&dword_257DC6000, v34, v35, v36, "SearchTool.AnswerSynthesis");
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_116_0();

  uint64_t v37 = OUTLINED_FUNCTION_96_0();
  v27(v37);
  swift_release();
  uint64_t v38 = (void *)OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if (OUTLINED_FUNCTION_60_0())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v39 = OUTLINED_FUNCTION_20_1();
    if (v40(v39) != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_77();
      v41();
    }
    uint64_t v42 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_41_1(v42);
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_32_1(&dword_257DC6000, v43, v44, v45, "AnswerSynthesisController.performSynthesisRequest");
    OUTLINED_FUNCTION_34();
  }
  os_signpost_id_t v46 = *(void (**)(uint64_t))(v26 + 840);

  uint64_t v47 = OUTLINED_FUNCTION_78_0();
  v46(v47);
  swift_release();
  uint64_t v59 = *(void *)(v26 + 968);
  OUTLINED_FUNCTION_12_1();
  uint64_t v58 = v48;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_61_0();
  return v50(v49, v50, v51, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           v58,
           v59,
           a24,
           a25,
           a26);
}

uint64_t AnswerSynthesisController.convertSynthesisResultToSearchResultAnswers(request:synthesisResult:searchResults:)()
{
  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  *(void *)(v1 + 152) = v6;
  *(void *)(v1 + 160) = v0;
  *(void *)(v1 + 144) = v7;
  uint64_t v8 = type metadata accessor for UUID();
  *(void *)(v1 + 168) = v8;
  OUTLINED_FUNCTION_12_0(v8);
  *(void *)(v1 + 176) = v9;
  *(void *)(v1 + 184) = OUTLINED_FUNCTION_49_1();
  uint64_t v10 = type metadata accessor for Answer(0);
  *(void *)(v1 + 192) = v10;
  OUTLINED_FUNCTION_81(v10);
  *(void *)(v1 + 200) = OUTLINED_FUNCTION_49_1();
  uint64_t v11 = type metadata accessor for SearchResult(0);
  *(void *)(v1 + 208) = v11;
  OUTLINED_FUNCTION_12_0(v11);
  *(void *)(v1 + 216) = v12;
  *(void *)(v1 + 224) = OUTLINED_FUNCTION_50_0();
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = *v5;
  uint64_t v15 = v5[1];
  *(void *)(v1 + 232) = v13;
  *(void *)(v1 + 240) = v14;
  *(void *)(v1 + 248) = v15;
  long long v16 = *((_OWORD *)v5 + 2);
  *(_OWORD *)(v1 + 256) = *((_OWORD *)v5 + 1);
  *(_OWORD *)(v1 + 272) = v16;
  *(void *)(v1 + 288) = v5[6];
  long long v17 = *v3;
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v5 + 7);
  *(_OWORD *)(v1 + 312) = v17;
  *(void *)(v1 + 328) = *((void *)v3 + 2);
  *(unsigned char *)(v1 + 408) = *((unsigned char *)v3 + 24);
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_49();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 400) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v9 = *(void *)(v5 + 352);
    uint64_t v10 = *(void *)(v5 + 344);
    *(unsigned char *)(v5 + 409) = v3 & 1;
    outlined consume of PQAVerificationRequest?(v10, v9);
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

void AnswerSynthesisController.convertSynthesisResultToSearchResultAnswers(request:synthesisResult:searchResults:)()
{
  uint64_t v147 = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v1 + 160) + 112) + 80);
  if (v3(7))
  {
    int v4 = *(unsigned __int8 *)(v1 + 408);
    if (v4 == 2)
    {
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      uint64_t v6 = OUTLINED_FUNCTION_43_1(v5, (uint64_t)static Logging.answerSynthesis);
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_24_2(v7))
      {
        uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_130_0(v8);
        OUTLINED_FUNCTION_156_0(&dword_257DC6000, v6, v0, "ReflectionToken is enabled but no isValid received, no op");
        OUTLINED_FUNCTION_34();
      }
    }
    else if ((v4 & 1) == 0)
    {
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      uint64_t v10 = OUTLINED_FUNCTION_43_1(v9, (uint64_t)static Logging.answerSynthesis);
      os_log_type_t v11 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_24_2(v11))
      {
        uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_130_0(v12);
        OUTLINED_FUNCTION_156_0(&dword_257DC6000, v10, v0, "ReflectionToken false detected, fallback to content search");
        OUTLINED_FUNCTION_34();
      }

      type metadata accessor for AnswerSynthesisResult();
      swift_storeEnumTagMultiPayload();
      goto LABEL_91;
    }
  }
  uint64_t v117 = v3;
  uint64_t v13 = *(void *)(v1 + 312);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  uint64_t v16 = specialized Sequence.compactMap<A>(_:)(v14);
  swift_bridgeObjectRelease();
  uint64_t v128 = specialized Dictionary.init<A>(_:uniquingKeysWith:)(v16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = MEMORY[0x263F8EE78];
  }
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v121 = v1;
  if (v19)
  {
    uint64_t v129 = *(void *)(v1 + 216);
    uint64_t v119 = *(void **)(v1 + 200);
    uint64_t v120 = *(void *)(v1 + 208);
    uint64_t v122 = *(void *)(v1 + 152);
    uint64_t v118 = *(int **)(v1 + 192);
    swift_bridgeObjectRetain();
    uint64_t v20 = (uint8_t **)(v18 + 64);
    uint64_t v130 = v17;
    uint64_t v2 = v1;
    while (1)
    {
      uint64_t v21 = (uint64_t)*(v20 - 4);
      unint64_t v22 = (unint64_t)*(v20 - 3);
      uint64_t v131 = (uint64_t)*(v20 - 1);
      uint64_t v23 = *v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v24 = swift_bridgeObjectRetain();
      uint64_t v25 = specialized Sequence.compactMap<A>(_:)(v24, v128);
      uint64_t v132 = v21;
      uint64_t v134 = v19;
      if (*(void *)(v25 + 16)) {
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v122 + 16) != 1) {
        break;
      }
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      uint64_t v35 = OUTLINED_FUNCTION_43_1(v34, (uint64_t)static Logging.answerSynthesis);
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_55();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_257DC6000, v35, v36, "Answer synthesis: No referenced documents found for answer, falling back to only provided search result", v37, 2u);
        OUTLINED_FUNCTION_34();
      }

      uint64_t v38 = *(void *)(v122 + 16);
      swift_bridgeObjectRetain();
      uint64_t v25 = *(void *)(v2 + 152);
      if (v38)
      {
        uint64_t v21 = v132;
LABEL_20:
        unint64_t v26 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
        outlined init with copy of AnswerSynthesisResult(v25 + v26, *(void *)(v2 + 232), (void (*)(void))type metadata accessor for SearchResult);
        if (one-time initialization token for noAnswerLabels != -1) {
          swift_once();
        }
        specialized Set.contains(_:)(v21, v22, static AnswerSynthesisController.noAnswerLabels);
        if (v27)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (one-time initialization token for answerSynthesis != -1) {
            swift_once();
          }
          uint64_t v28 = type metadata accessor for Logger();
          __swift_project_value_buffer(v28, (uint64_t)static Logging.answerSynthesis);
          OUTLINED_FUNCTION_181_0();
          swift_bridgeObjectRetain();
          os_log_type_t v29 = Logger.logObject.getter();
          os_log_type_t v30 = static os_log_type_t.info.getter();
          BOOL v31 = os_log_type_enabled(v29, v30);
          uint64_t v32 = *(void *)(v2 + 232);
          if (v31)
          {
            uint64_t v33 = OUTLINED_FUNCTION_14_1();
            v139[0] = OUTLINED_FUNCTION_13_1();
            *(_DWORD *)uint64_t v33 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v33 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v132, v22, v139);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_257DC6000, v29, v30, "Answer synthesis response: no answer found in document, label: %s", (uint8_t *)v33, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();
          }
          else
          {

            OUTLINED_FUNCTION_108_0();
          }
          outlined destroy of AnswerSynthesisResult(v32, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v19 = v134;
        }
        else
        {
          unint64_t v126 = v26;
          uint64_t v127 = v15;
          uint64_t v39 = *(void *)(v2 + 224);
          uint64_t v125 = *(void *)(v2 + 232);
          uint64_t v40 = *(uint64_t **)(v2 + 200);
          UUID.init()();
          uint64_t v41 = UUID.uuidString.getter();
          uint64_t v123 = v42;
          uint64_t v124 = v41;
          OUTLINED_FUNCTION_16_1();
          v43();
          uint64_t v44 = (uint64_t)v40 + v118[9];
          uint64_t v45 = type metadata accessor for URL();
          __swift_storeEnumTagSinglePayload(v44, 1, 1, v45);
          swift_bridgeObjectRetain();
          uint64_t v46 = MEMORY[0x263F8EE78];
          Dictionary.init(dictionaryLiteral:)();
          OUTLINED_FUNCTION_181_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *uint64_t v40 = v124;
          v119[1] = v123;
          v119[2] = v132;
          v119[3] = v22;
          v119[4] = v44;
          v119[5] = v25;
          v119[6] = v46;
          *((unsigned char *)v40 + v118[10]) = 0;
          uint64_t v47 = (uint64_t *)((char *)v40 + v118[11]);
          *uint64_t v47 = v131;
          v47[1] = v23;
          outlined init with copy of AnswerSynthesisResult((uint64_t)v40, v39, (void (*)(void))type metadata accessor for Answer);
          type metadata accessor for SearchResultItem(0);
          swift_storeEnumTagMultiPayload();
          os_signpost_type_t v48 = *(void **)(v125 + *(int *)(v120 + 20));
          uint64_t v49 = (void *)(v39 + *(int *)(v120 + 24));
          *uint64_t v49 = 0;
          v49[1] = 0;
          *(void *)(v39 + *(int *)(v120 + 20)) = v48;
          id v50 = v48;
          uint64_t v51 = v130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            char v63 = OUTLINED_FUNCTION_109_0();
            uint64_t v51 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v63, v64, v65, v130);
          }
          uint64_t v19 = v134;
          unint64_t v53 = *(void *)(v51 + 16);
          unint64_t v52 = *(void *)(v51 + 24);
          uint64_t v2 = v121;
          if (v53 >= v52 >> 1) {
            uint64_t v130 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1, v51);
          }
          else {
            uint64_t v130 = v51;
          }
          uint64_t v54 = *(void *)(v121 + 224);
          uint64_t v55 = *(void *)(v121 + 232);
          uint64_t v56 = *(void *)(v121 + 200);
          *(void *)(v130 + 16) = v53 + 1;
          outlined init with take of ResultsDialog(v54, v130 + v126 + *(void *)(v129 + 72) * v53, (void (*)(void))type metadata accessor for SearchResult);
          outlined destroy of AnswerSynthesisResult(v56, (void (*)(void))type metadata accessor for Answer);
          outlined destroy of AnswerSynthesisResult(v55, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v15 = v127;
        }
        goto LABEL_51;
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_108_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v134;
      if (one-time initialization token for answerSynthesis != -1) {
        swift_once();
      }
      uint64_t v58 = OUTLINED_FUNCTION_43_1(v34, (uint64_t)static Logging.answerSynthesis);
      os_log_type_t v61 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_24_2(v61))
      {
        uint64_t v62 = (_WORD *)OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_67_0(v62);
        _os_log_impl(&dword_257DC6000, v58, (os_log_type_t)v34, "referenceDocs is expectec to have first item here, skipping answer", v23, 2u);
LABEL_49:
        OUTLINED_FUNCTION_34();
      }
LABEL_50:

LABEL_51:
      v20 += 5;
      if (!--v19) {
        goto LABEL_55;
      }
    }
    OUTLINED_FUNCTION_108_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    uint64_t v58 = OUTLINED_FUNCTION_43_1(v57, (uint64_t)static Logging.answerSynthesis);
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (!OUTLINED_FUNCTION_24_2(v59)) {
      goto LABEL_50;
    }
    uint64_t v60 = (uint8_t *)OUTLINED_FUNCTION_55();
    *(_WORD *)uint64_t v60 = 0;
    _os_log_impl(&dword_257DC6000, v58, (os_log_type_t)v21, "Answer synthesis: Unable to associate search results with answer, skipping answer", v60, 2u);
    uint64_t v2 = v121;
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  uint64_t v130 = MEMORY[0x263F8EE78];
  uint64_t v2 = v1;
LABEL_55:
  uint64_t v66 = v130;
  *(void *)(v2 + 336) = v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = *(void *)(v130 + 16);
  if (v67 != 1)
  {
    if (v67)
    {
      uint64_t v98 = *(void *)(v2 + 320);
      uint64_t v99 = *(void *)(v2 + 328);
      uint64_t v100 = *(uint64_t **)(v2 + 144);
      uint64_t *v100 = v130;
      v100[1] = v98;
      v100[2] = v99;
      type metadata accessor for AnswerSynthesisResult();
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
LABEL_91:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v116 = *(void (**)(void))(v2 + 8);
      v116();
      return;
    }
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    uint64_t v69 = (void *)OUTLINED_FUNCTION_43_1(v68, (uint64_t)static Logging.answerSynthesis);
    os_log_type_t v70 = static os_log_type_t.info.getter();
    if (!OUTLINED_FUNCTION_24_2(v70)) {
      goto LABEL_77;
    }
    uint64_t v71 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_0(v71);
    uint64_t v74 = "No search result answers";
    goto LABEL_76;
  }
  long long v75 = *(_OWORD *)(v2 + 272);
  long long v140 = *(_OWORD *)(v2 + 256);
  long long v141 = v75;
  long long v76 = *(_OWORD *)(v2 + 312);
  long long v143 = *(_OWORD *)(v2 + 296);
  long long v144 = v76;
  char v77 = *(unsigned char *)(v2 + 408);
  uint64_t v78 = *(void *)(v2 + 328);
  uint64_t v79 = *(void *)(v2 + 288);
  uint64_t v80 = *(void *)(v2 + 248);
  v139[0] = *(void *)(v2 + 240);
  v139[1] = v80;
  uint64_t v142 = v79;
  uint64_t v145 = v78;
  char v146 = v77;
  OUTLINED_FUNCTION_209();
  (*(void (**)(void *__return_ptr, uint64_t *, long long *))(v81 + 208))(v135, v139, &v144);
  uint64_t v83 = v135[0];
  uint64_t v82 = v135[1];
  *(void *)(v2 + 344) = v135[0];
  *(void *)(v2 + 352) = v82;
  uint64_t v84 = (void *)v2;
  uint64_t v86 = v136;
  uint64_t v85 = v137;
  v84[45] = v136;
  v84[46] = v85;
  uint64_t v87 = v138;
  v84[47] = v138;
  if (!v82)
  {
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v101 = type metadata accessor for Logger();
    uint64_t v69 = (void *)OUTLINED_FUNCTION_43_1(v101, (uint64_t)static Logging.answerSynthesis);
    os_log_type_t v102 = static os_log_type_t.error.getter();
    uint64_t v2 = v121;
    if (!OUTLINED_FUNCTION_24_2(v102)) {
      goto LABEL_77;
    }
    uint64_t v103 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_0(v103);
    uint64_t v74 = "Answer Synthesis response not valid, skip calling PQA verification model and returning no answer";
LABEL_76:
    OUTLINED_FUNCTION_75(&dword_257DC6000, v72, v73, v74);
    OUTLINED_FUNCTION_34();
LABEL_77:

    type metadata accessor for AnswerSynthesisResult();
    swift_storeEnumTagMultiPayload();
LABEL_90:
    swift_bridgeObjectRelease();
    goto LABEL_91;
  }
  if ((v117(6) & 1) == 0)
  {
    OUTLINED_FUNCTION_112_0();
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v104 = type metadata accessor for Logger();
    uint64_t v88 = (void *)OUTLINED_FUNCTION_43_1(v104, (uint64_t)static Logging.answerSynthesis);
    os_log_type_t v105 = static os_log_type_t.info.getter();
    uint64_t v2 = v121;
    if (OUTLINED_FUNCTION_24_2(v105))
    {
      uint64_t v106 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v106);
      OUTLINED_FUNCTION_75(&dword_257DC6000, v107, v108, "PQA Verification model disabled, returning the only answer");
      uint64_t v66 = v130;
      OUTLINED_FUNCTION_34();
    }

    if (*(void *)(v66 + 16))
    {
LABEL_89:
      uint64_t v115 = *(unsigned __int8 *)(*(void *)(v2 + 216) + 80);
      outlined init with copy of AnswerSynthesisResult(v66 + ((v115 + 32) & ~v115), *(void *)(v2 + 144), (void (*)(void))type metadata accessor for SearchResult);
      type metadata accessor for AnswerSynthesisResult();
      swift_storeEnumTagMultiPayload();
      goto LABEL_90;
    }
    __break(1u);
LABEL_84:
    OUTLINED_FUNCTION_112_0();
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v88, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
    if (one-time initialization token for answerSynthesis != -1) {
      swift_once();
    }
    uint64_t v109 = type metadata accessor for Logger();
    uint64_t v110 = (void *)OUTLINED_FUNCTION_43_1(v109, (uint64_t)static Logging.answerSynthesis);
    os_log_type_t v111 = static os_log_type_t.error.getter();
    uint64_t v2 = v121;
    if (OUTLINED_FUNCTION_24_2(v111))
    {
      os_signpost_id_t v112 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v112);
      OUTLINED_FUNCTION_75(&dword_257DC6000, v113, v114, "PQA verification model is enabled but not initialized, returning answer");
      OUTLINED_FUNCTION_34();
    }

    uint64_t v66 = v130;
    if (!*(void *)(v130 + 16))
    {
      __break(1u);
      return;
    }
    goto LABEL_89;
  }
  uint64_t v88 = (void *)(v121 + 56);
  outlined init with copy of PQAVerificationModelProtocol?(*(void *)(v121 + 160) + 56, v121 + 56, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  if (!*(void *)(v121 + 80)) {
    goto LABEL_84;
  }
  unint64_t v89 = (long long *)OUTLINED_FUNCTION_19_0();
  outlined init with take of SageSearchClient(v89, v90);
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v91 = type metadata accessor for Logger();
  *(void *)(v121 + 384) = __swift_project_value_buffer(v91, (uint64_t)static Logging.answerSynthesis);
  uint64_t v92 = Logger.logObject.getter();
  os_log_type_t v93 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v92, v93))
  {
    uint64_t v94 = (_WORD *)OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_67_0(v94);
    _os_log_impl(&dword_257DC6000, v92, v93, "Run PQA Verification model", (uint8_t *)v121, 2u);
    OUTLINED_FUNCTION_34();
  }

  uint64_t v95 = *(void *)(v121 + 40);
  uint64_t v96 = *(void *)(v121 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v121 + 16), v95);
  *(void *)(v121 + 96) = v83;
  *(void *)(v121 + 104) = v82;
  *(void *)(v121 + 112) = v86;
  *(void *)(v121 + 120) = v85;
  *(void *)(v121 + 128) = v87;
  uint64_t v133 = (void (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 + 16) + **(int **)(v96 + 16));
  os_signpost_id_t v97 = (void *)swift_task_alloc();
  *(void *)(v121 + 392) = v97;
  *os_signpost_id_t v97 = v121;
  v97[1] = AnswerSynthesisController.convertSynthesisResultToSearchResultAnswers(request:synthesisResult:searchResults:);
  v133(v121 + 96, v95, v96);
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_49();
  if (*(unsigned char *)(v0 + 409) == 1)
  {
    uint64_t v1 = Logger.logObject.getter();
    uint64_t v2 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_130_0(v3);
      OUTLINED_FUNCTION_156_0(&dword_257DC6000, v1, v2, "PQA Verification predicts hallucination, fallback to content search");
      OUTLINED_FUNCTION_34();
    }

    type metadata accessor for AnswerSynthesisResult();
  }
  else
  {
    int v4 = *(void *)(v0 + 336);
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      return;
    }
    uint64_t v5 = *(void *)(v0 + 144);
    OUTLINED_FUNCTION_137();
    outlined init with copy of AnswerSynthesisResult(v4 + v6, v5, (void (*)(void))type metadata accessor for SearchResult);
    type metadata accessor for AnswerSynthesisResult();
  }
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  v7();
}

{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  os_log_type_t v5;
  void *v6;
  _DWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;

  OUTLINED_FUNCTION_78();
  uint64_t v1 = (void *)v0[50];
  outlined consume of PQAVerificationRequest?(v0[43], v0[44]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  uint64_t v2 = v1;
  uint64_t v3 = v1;
  int v4 = (void *)Logger.logObject.getter();
  uint64_t v5 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_51_1(v5))
  {
    uint64_t v6 = (void *)v0[50];
    os_log_type_t v7 = (_DWORD *)OUTLINED_FUNCTION_14_1();
    uint64_t v8 = (void *)OUTLINED_FUNCTION_126_0();
    *os_log_type_t v7 = 138412290;
    uint64_t v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v10;
    OUTLINED_FUNCTION_175_0();
    *uint64_t v8 = v10;

    OUTLINED_FUNCTION_173_0(&dword_257DC6000, v11, v12, "PQA verification threw exception, returning the only answer. Error is %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    uint64_t v13 = (void *)v0[50];
  }
  uint64_t v14 = v0[42];

  if (*(void *)(v14 + 16))
  {
    uint64_t v15 = (void *)v0[50];
    uint64_t v16 = v0[18];
    uint64_t v17 = OUTLINED_FUNCTION_135_0(v0[27]);
    outlined init with copy of AnswerSynthesisResult(v17, v16, (void (*)(void))type metadata accessor for SearchResult);

    type metadata accessor for AnswerSynthesisResult();
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    v18();
  }
  else
  {
    __break(1u);
  }
}

uint64_t Array<A>.dictionaryByKey()()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = specialized Sequence.compactMap<A>(_:)(v0);
  swift_bridgeObjectRelease();
  return specialized Dictionary.init<A>(_:uniquingKeysWith:)(v1);
}

uint64_t AnswerSynthesisController.collateNetworkServiceResults(_:)()
{
  OUTLINED_FUNCTION_27();
  v0[3] = v1;
  v0[4] = v2;
  uint64_t v3 = type metadata accessor for SearchResult(0);
  v0[5] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v0[6] = v4;
  v0[7] = OUTLINED_FUNCTION_50_0();
  v0[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AnswerSynthesisResult();
  v0[9] = v5;
  OUTLINED_FUNCTION_12_0(v5);
  v0[10] = v6;
  v0[11] = OUTLINED_FUNCTION_50_0();
  v0[12] = swift_task_alloc();
  v0[13] = swift_task_alloc();
  v0[14] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void AnswerSynthesisController.collateNetworkServiceResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33)
{
  OUTLINED_FUNCTION_123_0();
  a32 = v34;
  a33 = v35;
  a31 = v33;
  if (one-time initialization token for answerSynthesis != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)static Logging.answerSynthesis);
  swift_bridgeObjectRetain();
  uint64_t v106 = v37;
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v41 = v33[4];
  if (v40)
  {
    uint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_14_1();
    *(_DWORD *)uint64_t v42 = 134217984;
    _OWORD v33[2] = *(void *)(v41 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_257DC6000, v38, v39, "Answer synthesis: collating %ld results", v42, 0xCu);
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v43 = v33[4];
  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    a16 = v33[13];
    uint64_t v45 = v33[10];
    a20 = v33[6];
    uint64_t v46 = v43 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    uint64_t v47 = *(void *)(v45 + 72);
    swift_bridgeObjectRetain();
    a18 = 0;
    a21 = 0;
    uint64_t v48 = MEMORY[0x263F8EE78];
    *(void *)&long long v49 = 136315138;
    a13 = v49;
    a12 = MEMORY[0x263F8EE58] + 8;
    a19 = v47;
    while (2)
    {
      outlined init with copy of AnswerSynthesisResult(v46, v33[14], (void (*)(void))type metadata accessor for AnswerSynthesisResult);
      uint64_t v50 = OUTLINED_FUNCTION_74_0();
      outlined init with copy of AnswerSynthesisResult(v50, v51, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
      OUTLINED_FUNCTION_92_0();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          char v63 = (uint64_t *)v33[13];
          swift_bridgeObjectRelease();
          uint64_t v64 = *v63;
          uint64_t v65 = *(void *)(*v63 + 16);
          uint64_t v66 = *(void *)(v48 + 16);
          uint64_t v67 = v48;
          uint64_t v68 = v66 + v65;
          if (__OFADD__(v66, v65))
          {
            __break(1u);
          }
          else
          {
            a18 = *(void *)(a16 + 8);
            a21 = *(void *)(a16 + 16);
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v68 <= *(void *)(v67 + 24) >> 1)
            {
              uint64_t v48 = v67;
            }
            else
            {
              if (v66 <= v68) {
                uint64_t v79 = v66 + v65;
              }
              else {
                uint64_t v79 = v66;
              }
              uint64_t v48 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v79, 1, v67);
            }
            if (*(void *)(v64 + 16))
            {
              uint64_t v80 = *(void *)(v48 + 16);
              if ((*(void *)(v48 + 24) >> 1) - v80 >= v65)
              {
                unint64_t v81 = (*(unsigned __int8 *)(a20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a20 + 80);
                uint64_t v82 = *(void *)(a20 + 72);
                unint64_t v83 = v48 + v81 + v82 * v80;
                if (v64 + v81 < v83 + v82 * v65 && v83 < v64 + v81 + v82 * v65) {
                  goto LABEL_56;
                }
                swift_arrayInitWithCopy();
                if (!v65)
                {
LABEL_38:
                  uint64_t v88 = v33[14];
                  swift_bridgeObjectRelease();
                  outlined destroy of AnswerSynthesisResult(v88, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
                  uint64_t v47 = a19;
                  goto LABEL_39;
                }
                uint64_t v85 = *(void *)(v48 + 16);
                BOOL v86 = __OFADD__(v85, v65);
                uint64_t v87 = v85 + v65;
                if (!v86)
                {
                  *(void *)(v48 + 16) = v87;
                  goto LABEL_38;
                }
LABEL_55:
                __break(1u);
LABEL_56:
                OUTLINED_FUNCTION_17_0();
                OUTLINED_FUNCTION_96();
                OUTLINED_FUNCTION_157();
                OUTLINED_FUNCTION_61_0();
                return;
              }
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (!v65) {
              goto LABEL_38;
            }
          }
          __break(1u);
          goto LABEL_54;
        case 2u:
          outlined init with copy of AnswerSynthesisResult(v33[14], v33[12], (void (*)(void))type metadata accessor for AnswerSynthesisResult);
          os_log_type_t v70 = Logger.logObject.getter();
          os_log_type_t v71 = static os_log_type_t.error.getter();
          BOOL v72 = os_log_type_enabled(v70, v71);
          uint64_t v73 = v33[14];
          uint64_t v74 = v33[12];
          if (v72)
          {
            a15 = v48;
            uint64_t v75 = v33[11];
            a14 = v33[14];
            uint64_t v76 = OUTLINED_FUNCTION_14_1();
            a22 = OUTLINED_FUNCTION_13_1();
            *(_DWORD *)uint64_t v76 = a13;
            outlined init with copy of AnswerSynthesisResult(v74, v75, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
            uint64_t v47 = a19;
            uint64_t v77 = String.init<A>(describing:)();
            *(void *)(v76 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, &a22);
            swift_bridgeObjectRelease();
            outlined destroy of AnswerSynthesisResult(v74, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
            _os_log_impl(&dword_257DC6000, v70, v71, "Answer synthesis: unexpected result type %s during result collation.", (uint8_t *)v76, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_34();

            uint64_t v62 = a14;
            uint64_t v48 = a15;
          }
          else
          {

            outlined destroy of AnswerSynthesisResult(v74, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
            uint64_t v62 = v73;
          }
          goto LABEL_36;
        case 3u:
          uint64_t v62 = v33[14];
          goto LABEL_36;
        default:
          outlined init with take of ResultsDialog(v33[13], v33[8], (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v52 = OUTLINED_FUNCTION_74_0();
          outlined init with copy of AnswerSynthesisResult(v52, v53, v54);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            char v89 = OUTLINED_FUNCTION_109_0();
            uint64_t v48 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v89, v90, v91, v48);
          }
          unint64_t v56 = *(void *)(v48 + 16);
          unint64_t v55 = *(void *)(v48 + 24);
          if (v56 >= v55 >> 1) {
            uint64_t v48 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1, v48);
          }
          uint64_t v57 = v33[14];
          uint64_t v58 = v33[8];
          *(void *)(v48 + 16) = v56 + 1;
          OUTLINED_FUNCTION_137();
          outlined init with take of ResultsDialog(v61, v48 + v59 + *(void *)(v60 + 72) * v56, (void (*)(void))type metadata accessor for SearchResult);
          outlined destroy of AnswerSynthesisResult(v58, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v62 = v57;
LABEL_36:
          outlined destroy of AnswerSynthesisResult(v62, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
LABEL_39:
          v46 += v47;
          if (--v44) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v92 = a21;
          uint64_t v93 = a18;
          goto LABEL_42;
      }
    }
  }
  uint64_t v93 = 0;
  uint64_t v92 = 0;
  uint64_t v48 = MEMORY[0x263F8EE78];
LABEL_42:
  uint64_t v94 = *(void *)(v48 + 16);
  if (v94)
  {
    if (v94 != 1)
    {
      os_signpost_id_t v97 = (uint64_t *)v33[3];
      *os_signpost_id_t v97 = v48;
      v97[1] = v93;
      v97[2] = v92;
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    swift_bridgeObjectRelease();
    if (!*(void *)(v48 + 16))
    {
      __break(1u);
      JUMPOUT(0x257E0069CLL);
    }
    uint64_t v95 = v33[3];
    uint64_t v96 = OUTLINED_FUNCTION_135_0(v33[6]);
    outlined init with copy of AnswerSynthesisResult(v96, v95, (void (*)(void))type metadata accessor for SearchResult);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
LABEL_49:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_61_0();
  v99(v98, v99, v100, v101, v102, v103, v104, v105, a9, a10, a11, a12, a13, *((void *)&a13 + 1), a14, a15, a16, v106, a18,
    a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25);
}

void specialized Array.append<A>(contentsOf:)()
{
  OUTLINED_FUNCTION_176_0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_160_0();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v9 = OUTLINED_FUNCTION_146_0();
  specialized UnsafeMutablePointer.initialize(from:count:)(v9, v10, v11);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v1;
    return;
  }
  uint64_t v12 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v12, v2);
  uint64_t v13 = v12 + v2;
  if (!v5)
  {
    *(void *)(v1 + 16) = v13;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  void (*v0)(uint64_t);
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_53();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v5 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  BOOL v5 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  void *v1 = v5;
  uint64_t v6 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v7 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v6 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v10 <= v7) {
      uint64_t v10 = v7;
    }
    swift_bridgeObjectRetain();
    BOOL v5 = MEMORY[0x25A2C8560](v6, v10, 1, v5);
    swift_bridgeObjectRelease();
    void *v1 = v5;
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    unint64_t v11 = OUTLINED_FUNCTION_107_0(v9);
    v0(v11);
    if (v12 >= v4) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    OUTLINED_FUNCTION_138_0();
    if (v15)
    {
      __break(1u);
      return;
    }
    *(void *)(v13 + 16) = v14;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_141_0();
  specialized Array._endMutation()();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = *(void *)(v1 + 16);
  BOOL v5 = *v0;
  uint64_t v6 = *(void *)(*v0 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = v3;
  char v8 = v2;
  unint64_t v9 = v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || v6 + v4 > *(void *)(v5 + 24) >> 1) {
    BOOL v5 = v8();
  }
  if (!*(void *)(v9 + 16))
  {
    if (!v4) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)(v5 + 16);
  unint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(v7(0) - 8);
  if (v11 < v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  specialized UnsafeMutablePointer.initialize(from:count:)(v9 + v13, v4, v5 + v13 + *(void *)(v12 + 72) * v10);
  if (!v4)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v5;
    OUTLINED_FUNCTION_119_0();
    return;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  uint64_t v15 = __OFADD__(v14, v4);
  uint64_t v16 = v14 + v4;
  if (!v15)
  {
    *(void *)(v5 + 16) = v16;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  OUTLINED_FUNCTION_145();
  uint64_t v2 = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = *v0;
  if (*v0 >> 62)
  {
    swift_bridgeObjectRetain();
    BOOL v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v4 = *v0;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v0 = v4;
  BOOL v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    char v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    BOOL v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      unint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = MEMORY[0x25A2C8560](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v0 = v4;
    char v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    uint64_t v10 = OUTLINED_FUNCTION_107_0(v8);
    specialized Array._copyContents(initializing:)(v10, v11, v2);
    if (v12 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    OUTLINED_FUNCTION_138_0();
    if (v15)
    {
      __break(1u);
      return;
    }
    *(void *)(v13 + 16) = v14;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_141_0();
  specialized Array._endMutation()();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_176_0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_160_0();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v9 = OUTLINED_FUNCTION_146_0();
  specialized UnsafeMutablePointer.initialize(from:count:)(v9, v10);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v1;
    return;
  }
  unint64_t v11 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v11, v2);
  uint64_t v12 = v11 + v2;
  if (!v5)
  {
    *(void *)(v1 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t AnswerSynthesisController.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  outlined destroy of PQAVerificationModelProtocol?(v0 + 56, &demangling cache variable for type metadata for PQAVerificationModelProtocol?);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  return v0;
}

uint64_t AnswerSynthesisController.__deallocating_deinit()
{
  AnswerSynthesisController.deinit();
  return MEMORY[0x270FA0228](v0, 160, 7);
}

uint64_t protocol witness for AnswerSynthesisControllerProtocol.supports(_:) in conformance AnswerSynthesisController()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))() & 1;
}

uint64_t protocol witness for AnswerSynthesisControllerProtocol.synthesize(query:searchResults:context:traceId:clientId:) in conformance AnswerSynthesisController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v8 + 176) + **(int **)(**(void **)v8 + 176));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.answer.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.docs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.dialog.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.init(from:)@<X0>(void *a1@<X8>)
{
  GeneratedValues.extract<A>(field:)();
  if (v1)
  {
    type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    return v3();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    GeneratedValues.extract<A>(field:)();
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    v5();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v6;
    a1[1] = v7;
    a1[2] = v6;
    a1[3] = v6;
    a1[4] = v7;
  }
  return result;
}

uint64_t one-time initialization function for schema()
{
  uint64_t v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static AnswerSynthesisModelResult.AnswerResponse.schema);
  __swift_project_value_buffer(v0, (uint64_t)static AnswerSynthesisModelResult.AnswerResponse.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_258661D70;
  Schema.Field.init<A>(name:type:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

{
  uint64_t v0;

  uint64_t v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static AnswerSynthesisModelResult.schema);
  __swift_project_value_buffer(v0, (uint64_t)static AnswerSynthesisModelResult.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_258661D70;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AnswerSynthesisModelResult.AnswerResponse]);
  lazy protocol witness table accessor for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A](&lazy protocol witness table cache variable for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse);
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

{
  uint64_t v0;

  uint64_t v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static LLMQUModelResponse.schema);
  __swift_project_value_buffer(v0, (uint64_t)static LLMQUModelResponse.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25866DFF0;
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  lazy protocol witness table accessor for type LLMQUModelEventType and conformance LLMQUModelEventType();
  Schema.Field.init<A>(name:type:)();
  lazy protocol witness table accessor for type LLMQUModelSortOrder and conformance LLMQUModelSortOrder();
  Schema.Field.init<A>(name:type:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [LLMQUModelAppEntityType]);
  lazy protocol witness table accessor for type [LLMQUModelAppEntityType] and conformance <A> [A](&lazy protocol witness table cache variable for type [LLMQUModelAppEntityType] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type LLMQUModelAppEntityType and conformance LLMQUModelAppEntityType);
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  lazy protocol witness table accessor for type LLMQUModelAppEntityStatus and conformance LLMQUModelAppEntityStatus();
  Schema.Field.init<A>(name:type:)();
  lazy protocol witness table accessor for type LLMQUModelTemporalReference and conformance LLMQUModelTemporalReference();
  Schema.Field.init<A>(name:type:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

{
  uint64_t v0;

  uint64_t v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static MemoryCreationQUModelResponse.schema);
  __swift_project_value_buffer(v0, (uint64_t)static MemoryCreationQUModelResponse.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_258662FE0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

{
  uint64_t v0;

  uint64_t v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static MemoryCreationQUModelResponseMusic.schema);
  __swift_project_value_buffer(v0, (uint64_t)static MemoryCreationQUModelResponseMusic.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_258661D70;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.schema.unsafeMutableAddressor()
{
  if (one-time initialization token for schema != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Schema();
  return __swift_project_value_buffer(v0, (uint64_t)static AnswerSynthesisModelResult.AnswerResponse.schema);
}

uint64_t static AnswerSynthesisModelResult.AnswerResponse.schema.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for schema != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Schema();
  __swift_project_value_buffer(v2, (uint64_t)static AnswerSynthesisModelResult.AnswerResponse.schema);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 16);
  return v4(a1);
}

void __swiftcall AnswerSynthesisModelResult.AnswerResponse.init(answer:docs:dialog:)(OmniSearch::AnswerSynthesisModelResult::AnswerResponse *__return_ptr retstr, Swift::String answer, Swift::OpaquePointer docs, Swift::String_optional dialog)
{
  retstr->answer = answer;
  retstr->docs = docs;
  retstr->dialog = dialog;
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.Streaming.answer.getter()
{
  OUTLINED_FUNCTION_27();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>.Iterator);
  v1[7] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[8] = v4;
  v1[9] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_183_0();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  MEMORY[0x25A2C8090](v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = AnswerSynthesisModelResult.AnswerResponse.Streaming.answer.getter;
  uint64_t v3 = OUTLINED_FUNCTION_71_0();
  return MEMORY[0x270FA20F8](v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_77();
  v1();
  uint64_t v2 = v0[3];
  uint64_t v3 = (void *)v0[5];
  if (v2)
  {
    *uint64_t v3 = v0[2];
    v3[1] = v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<String>);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_168_0();
  v4();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v5();
}

{
  void (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_28();
  v0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.Streaming.docs.getter()
{
  type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  OUTLINED_FUNCTION_7_2();
  uint64_t v0 = OUTLINED_FUNCTION_79_0();
  return v1(v0);
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.Streaming.dialog.getter()
{
  OUTLINED_FUNCTION_27();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>.Iterator);
  v1[7] = v3;
  OUTLINED_FUNCTION_12_0(v3);
  v1[8] = v4;
  v1[9] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_183_0();
  type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming(0);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  MEMORY[0x25A2C8090](v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = AnswerSynthesisModelResult.AnswerResponse.Streaming.dialog.getter;
  uint64_t v3 = OUTLINED_FUNCTION_71_0();
  return MEMORY[0x270FA20F8](v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_77();
  v1();
  uint64_t v2 = v0[3];
  uint64_t v3 = (void *)v0[5];
  if (v2 != 1)
  {
    *uint64_t v3 = v0[2];
    v3[1] = v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<String?>);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_168_0();
  v4();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v5();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.Streaming.init(objectID:decoder:)()
{
  OUTLINED_FUNCTION_27();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  v0[5] = v4;
  OUTLINED_FUNCTION_12_0(v4);
  v0[6] = v5;
  v0[7] = OUTLINED_FUNCTION_49_1();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  v0[8] = v6;
  OUTLINED_FUNCTION_12_0(v6);
  v0[9] = v7;
  v0[10] = OUTLINED_FUNCTION_50_0();
  v0[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming(0);
  v0[12] = v8;
  OUTLINED_FUNCTION_81(v8);
  v0[13] = OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  v0[14] = v4;
  *uint64_t v4 = v5;
  v4[1] = AnswerSynthesisModelResult.AnswerResponse.Streaming.init(objectID:decoder:);
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[3];
  uint64_t v8 = MEMORY[0x263F8D310];
  uint64_t v9 = MEMORY[0x263F8D310];
  return MEMORY[0x270F2F288](v6, v7, 0x726577736E61, 0xE600000000000000, v8, v9, v2, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = (void *)v0[4];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v0[16] = v6;
  v0[17] = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v6(v1, v2, v3);
  uint64_t v7 = v5[3];
  uint64_t v8 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v7);
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  v0[18] = v9;
  *uint64_t v9 = v10;
  v9[1] = AnswerSynthesisModelResult.AnswerResponse.Streaming.init(objectID:decoder:);
  uint64_t v11 = v0[10];
  uint64_t v12 = v0[3];
  uint64_t v13 = MEMORY[0x263F8D310];
  uint64_t v14 = MEMORY[0x263F8D310];
  return MEMORY[0x270F2F288](v11, v12, 1935896420, 0xE400000000000000, v13, v14, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void **)(v0 + 32);
  (*(void (**)(void, void, void))(v0 + 128))(*(void *)(v0 + 104) + *(int *)(*(void *)(v0 + 96) + 20), *(void *)(v0 + 80), *(void *)(v0 + 64));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  *(void *)(v0 + 160) = v5;
  *uint64_t v5 = v6;
  v5[1] = AnswerSynthesisModelResult.AnswerResponse.Streaming.init(objectID:decoder:);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 24);
  return MEMORY[0x270F2F288](v7, v8, 0x676F6C616964, 0xE600000000000000, v4, v4, v2, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[2];
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1 + *(int *)(v2 + 24), v4, v5);
  outlined init with copy of AnswerSynthesisResult(v1, v7, (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
  __swift_destroy_boxed_opaque_existential_1Tm(v6);
  outlined destroy of AnswerSynthesisResult(v1, (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_86();
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = *(void *)(v0 + 32);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v2();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  OUTLINED_FUNCTION_118_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_27_0();
  uint64_t v3 = *(void *)(v0 + 152);
  OUTLINED_FUNCTION_133_0();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v4();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  uint64_t v5 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_82_0();
  v5();
  if (!v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_98_0();
    ((void (*)(uint64_t))v5)(v6);
  }
  OUTLINED_FUNCTION_118_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_78();
  uint64_t v3 = *(void *)(v0 + 152);
  OUTLINED_FUNCTION_133_0();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v4();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  uint64_t v5 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_82_0();
  v5();
  if (!v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_98_0();
    ((void (*)(uint64_t))v5)(v6);
  }
  OUTLINED_FUNCTION_118_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v7();
}

uint64_t protocol witness for GenerableStreaming.init(objectID:decoder:) in conformance AnswerSynthesisModelResult.AnswerResponse.Streaming()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return AnswerSynthesisModelResult.AnswerResponse.Streaming.init(objectID:decoder:)();
}

uint64_t static AnswerSynthesisModelResult.AnswerResponse.collect(_:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<AnswerSynthesisModelResult.AnswerResponse.Streaming, Error>.Iterator);
  uint64_t v0 = swift_allocBox();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<AnswerSynthesisModelResult.AnswerResponse.Streaming, Error>);
  MEMORY[0x25A2C8090](v1);
  return MEMORY[0x270FA2110](&async function pointer to partial apply for closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:), v0, &type metadata for AnswerSynthesisModelResult.AnswerResponse);
}

uint64_t closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:)(uint64_t a1)
{
  v1[8] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<String?>);
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>.Iterator);
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StreamSignal<String>);
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnswerSynthesisModelResult.AnswerResponse.Streaming?);
  v1[18] = swift_task_alloc();
  v1[19] = type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming(0);
  v1[20] = swift_task_alloc();
  v1[21] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<AnswerSynthesisModelResult.AnswerResponse.Streaming, Error>.Iterator);
  v1[22] = swift_projectBox();
  return MEMORY[0x270FA2498](closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:), 0, 0);
}

uint64_t closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  swift_beginAccess();
  swift_task_alloc();
  OUTLINED_FUNCTION_54_1();
  v0[23] = v1;
  void *v1 = v2;
  v1[1] = closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:);
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[18];
  return MEMORY[0x270FA2100](v4, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 192) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  void *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_49();
  uint64_t v1 = v0[18];
  if (OUTLINED_FUNCTION_128_0(v2, v3, v0[19]) == 1)
  {
    uint64_t v4 = v0[8];
    outlined destroy of PQAVerificationModelProtocol?(v1, &demangling cache variable for type metadata for AnswerSynthesisModelResult.AnswerResponse.Streaming?);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(void *)(v4 + 32) = 0;
    OUTLINED_FUNCTION_132_0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
    return v5();
  }
  else
  {
    outlined init with take of ResultsDialog(v1, v0[20], (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
    swift_task_alloc();
    OUTLINED_FUNCTION_54_1();
    v0[25] = v7;
    *uint64_t v7 = v8;
    v7[1] = closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:);
    return AnswerSynthesisModelResult.AnswerResponse.Streaming.answer.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  void *v9;
  void (*v10)(void);
  uint64_t (*v11)(void);
  uint64_t v13;

  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_164_0();
  uint64_t v2 = v1();
  *(_DWORD *)(v0 + 264) = v2;
  if (v2 == *MEMORY[0x263F40970])
  {
    uint64_t v3 = *(void **)(v0 + 136);
    (*(void (**)(void *, void))(*(void *)(v0 + 128) + 96))(v3, *(void *)(v0 + 120));
    *(void *)(v0 + 216) = *v3;
    *(void *)(v0 + 224) = v3[1];
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
    MEMORY[0x25A2C8090](v4);
    *(void *)(v0 + 232) = MEMORY[0x263F8EE78];
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v5;
    *uint64_t v5 = v0;
    v5[1] = closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:);
    OUTLINED_FUNCTION_26();
    return MEMORY[0x270FA20F8](v6);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 160);
    OUTLINED_FUNCTION_77();
    v8();
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    OUTLINED_FUNCTION_147_0();
    *uint64_t v9 = 0xD00000000000003CLL;
    v9[1] = 0x800000025867DE20;
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v10();
    swift_willThrow();
    outlined destroy of AnswerSynthesisResult(v7, (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
    OUTLINED_FUNCTION_36_2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
    return v11();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void (*v8)(void);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  if (v2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v0[29];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_109_0();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v4 = v11;
    }
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5 >= *(void *)(v4 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v4 = v12;
    }
    *(void *)(v4 + 16) = v5 + 1;
    uint64_t v6 = v4 + 16 * v5;
    *(void *)(v6 + 32) = v1;
    *(void *)(v6 + 40) = v2;
    v0[29] = v4;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[30] = v7;
    *uint64_t v7 = v0;
    v7[1] = closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:);
    return MEMORY[0x270FA20F8](v0 + 5);
  }
  else
  {
    OUTLINED_FUNCTION_77();
    v8();
    swift_task_alloc();
    OUTLINED_FUNCTION_54_1();
    v0[31] = v9;
    *uint64_t v9 = v10;
    v9[1] = closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:);
    return AnswerSynthesisModelResult.AnswerResponse.Streaming.dialog.getter();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(void);
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  long long *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  long long v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  void (*v14)(void);
  void *v15;
  void (*v16)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_78();
  uint64_t v1 = *(_DWORD *)(v0 + 264);
  OUTLINED_FUNCTION_164_0();
  uint64_t v3 = v2();
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  if (v3 == v1)
  {
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v7 = *(long long **)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 72);
    outlined destroy of AnswerSynthesisResult(*(void *)(v0 + 160), (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
    (*(void (**)(long long *, uint64_t))(v8 + 96))(v7, v9);
    uint64_t v11 = *v7;
    *(void *)uint64_t v10 = v6;
    *(void *)(v10 + 8) = v4;
    *(void *)(v10 + 16) = v5;
    *(_OWORD *)(v10 + 24) = v11;
    OUTLINED_FUNCTION_132_0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_86();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_82_0();
    v14();
    type metadata accessor for StreamingError();
    lazy protocol witness table accessor for type StreamingError and conformance StreamingError();
    OUTLINED_FUNCTION_147_0();
    *uint64_t v15 = 0xD00000000000003CLL;
    v15[1] = 0x800000025867DE60;
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_168_0();
    v16();
    swift_willThrow();
    outlined destroy of AnswerSynthesisResult(v13, (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13();
  }
  return v12();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_27_0();
  swift_endAccess();
  OUTLINED_FUNCTION_36_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v0();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27_0();
  outlined destroy of AnswerSynthesisResult(*(void *)(v0 + 160), (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
  OUTLINED_FUNCTION_36_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_27_0();
  uint64_t v1 = *(void *)(v0 + 160);
  OUTLINED_FUNCTION_77();
  v2();
  outlined destroy of AnswerSynthesisResult(v1, (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
  OUTLINED_FUNCTION_36_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v3();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_27_0();
  outlined destroy of AnswerSynthesisResult(*(void *)(v0 + 160), (void (*)(void))type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming);
  OUTLINED_FUNCTION_36_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13();
  return v1();
}

BOOL static AnswerSynthesisModelResult.AnswerResponse.CodingKeys.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AnswerSynthesisModelResult.AnswerResponse.CodingKeys.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726577736E61 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1935896420 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.CodingKeys.init(intValue:)()
{
  return 3;
}

Swift::Int AnswerSynthesisModelResult.AnswerResponse.CodingKeys.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x726577736E61;
  }
  if (a1 == 1) {
    return 1935896420;
  }
  return 0x676F6C616964;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys(char *a1, char *a2)
{
  return static AnswerSynthesisModelResult.AnswerResponse.CodingKeys.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys()
{
  return AnswerSynthesisModelResult.AnswerResponse.CodingKeys.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys(uint64_t a1)
{
  AnswerSynthesisModelResult.AnswerResponse.CodingKeys.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys()
{
  return AnswerSynthesisModelResult.AnswerResponse.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = AnswerSynthesisModelResult.AnswerResponse.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys()
{
  return AnswerSynthesisModelResult.AnswerResponse.CodingKeys.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AnswerSynthesisModelResult.AnswerResponse.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnswerSynthesisModelResult.AnswerResponse.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnswerSynthesisModelResult.AnswerResponse.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_124_0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  OUTLINED_FUNCTION_111_0();
  return v4();
}

void AnswerSynthesisModelResult.AnswerResponse.init(from:)()
{
  OUTLINED_FUNCTION_105_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisModelResult.AnswerResponse.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v8 = v7;
    uint64_t v14 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v11 = v10;
    uint64_t v12 = v9;
    OUTLINED_FUNCTION_26_2();
    v13();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    v4[3] = v12;
    v4[4] = v11;
  }
  OUTLINED_FUNCTION_120_0();
}

double protocol witness for Decodable.init(from:) in conformance AnswerSynthesisModelResult.AnswerResponse@<D0>(uint64_t a1@<X8>)
{
  AnswerSynthesisModelResult.AnswerResponse.init(from:)();
  if (!v1)
  {
    double result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AnswerSynthesisModelResult.AnswerResponse(void *a1)
{
  return AnswerSynthesisModelResult.AnswerResponse.encode(to:)(a1);
}

uint64_t AnswerSynthesisModelResult.disambiguationDialog.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisModelResult.isValid.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional __swiftcall AnswerSynthesisModelResult.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnswerSynthesisModelResult.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional)3;
  }
  else {
    return (OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional)v3;
  }
}

OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional __swiftcall AnswerSynthesisModelResult.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional)3;
}

uint64_t AnswerSynthesisModelResult.CodingKeys.intValue.getter()
{
  return 0;
}

void AnswerSynthesisModelResult.CodingKeys.rawValue.getter(unsigned __int8 a1)
{
  if (a1) {
    OUTLINED_FUNCTION_172_0(a1);
  }
  else {
    OUTLINED_FUNCTION_177_0();
  }
}

void AnswerSynthesisModelResult.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  if (a1) {
    OUTLINED_FUNCTION_172_0(a1);
  }
  else {
    OUTLINED_FUNCTION_177_0();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnswerSynthesisModelResult.CodingKeys(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnswerSynthesisModelResult.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnswerSynthesisModelResult.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerSynthesisModelResult.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerSynthesisModelResult.CodingKeys@<W0>(Swift::String *a1@<X0>, OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional *a2@<X8>)
{
  result.value = AnswerSynthesisModelResult.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnswerSynthesisModelResult.CodingKeys(void *a1@<X8>)
{
  AnswerSynthesisModelResult.CodingKeys.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void protocol witness for CodingKey.stringValue.getter in conformance AnswerSynthesisModelResult.CodingKeys()
{
  AnswerSynthesisModelResult.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisModelResult.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::AnswerSynthesisModelResult::CodingKeys_optional *a2@<X8>)
{
  result.value = AnswerSynthesisModelResult.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance AnswerSynthesisModelResult.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisModelResult.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisModelResult.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t static AnswerSynthesisModelResult.schema.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for schema != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Schema();
  __swift_project_value_buffer(v2, (uint64_t)static AnswerSynthesisModelResult.schema);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 16);
  return v4(a1);
}

void AnswerSynthesisModelResult.init(from:)()
{
}

uint64_t AnswerSynthesisModelResult.init(answerResponses:disambiguationDialog:isValid:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  return result;
}

void AnswerSynthesisModelResult.encode(to:)()
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnswerSynthesisModelResult.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  lazy protocol witness table accessor for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AnswerSynthesisModelResult.AnswerResponse]);
  lazy protocol witness table accessor for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A](&lazy protocol witness table cache variable for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse);
  OUTLINED_FUNCTION_124_0();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v0)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  OUTLINED_FUNCTION_82_0();
  v4();
  OUTLINED_FUNCTION_120_0();
}

void AnswerSynthesisModelResult.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_105_0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisModelResult.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  lazy protocol witness table accessor for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AnswerSynthesisModelResult.AnswerResponse]);
    lazy protocol witness table accessor for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A](&lazy protocol witness table cache variable for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A], (void (*)(void))lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v18 = v17;
    uint64_t v20 = v16;
    swift_bridgeObjectRetain();
    uint64_t v21 = v18;
    LOBYTE(v18) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_26_2();
    v19();
    *(void *)uint64_t v14 = a10;
    *(void *)(v14 + 8) = v20;
    *(void *)(v14 + 16) = v21;
    *(unsigned char *)(v14 + 24) = v18;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_120_0();
}

void protocol witness for Generable.init(from:) in conformance AnswerSynthesisModelResult()
{
}

void protocol witness for Decodable.init(from:) in conformance AnswerSynthesisModelResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AnswerSynthesisModelResult.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance AnswerSynthesisModelResult()
{
}

uint64_t ResultsDialog.renderOption.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_79_0();
  outlined copy of ResultsDialog.RenderOption(v0, v1);
  return OUTLINED_FUNCTION_79_0();
}

uint64_t ResultsDialog.synthesisResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ResultsDialog(0);
  return outlined init with copy of AnswerSynthesisResult(v1 + *(int *)(v3 + 24), a1, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
}

uint64_t ResultsDialog.init(results:renderOption:synthesisResult:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v7 = type metadata accessor for ResultsDialog(0);
  return outlined init with take of ResultsDialog(a4, (uint64_t)a5 + *(int *)(v7 + 24), (void (*)(void))type metadata accessor for AnswerSynthesisResult);
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs8StrideToVySiG_Say10OmniSearch0G6ResultVGs5NeverOTg506_sSa10fg5AA0B6h22VRszlE7chunked4intoSayP18ACGGSi_tFAFSiXEfU_ALSiTf1cn_n(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3;
  int64_t v7 = a1;
  uint64_t v8 = specialized StrideTo.underestimatedCount.getter(a1, a2, a3);
  uint64_t v65 = MEMORY[0x263F8EE78];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v65;
    if (v8)
    {
      while (1)
      {
        BOOL v10 = v7 <= a2;
        if (v6 > 0) {
          BOOL v10 = v7 >= a2;
        }
        if (v10) {
          break;
        }
        if (__OFADD__(v7, v6)) {
          unint64_t v11 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
        }
        else {
          unint64_t v11 = v7 + v6;
        }
        if (__OFADD__(v7, a5)) {
          goto LABEL_80;
        }
        if (*(void *)(a4 + 16) >= v7 + a5) {
          int64_t v12 = v7 + a5;
        }
        else {
          int64_t v12 = *(void *)(a4 + 16);
        }
        if (v12 < v7) {
          goto LABEL_81;
        }
        if (v7 < 0) {
          goto LABEL_82;
        }
        uint64_t v64 = v12 - v7;
        uint64_t v13 = v9;
        uint64_t v14 = v6;
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v15 = swift_dynamicCastClass();
        if (!v15)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = MEMORY[0x263F8EE78];
        }
        uint64_t v16 = *(void *)(v15 + 16);
        swift_release();
        if (v16 == v64)
        {
          uint64_t v17 = (void *)swift_dynamicCastClass();
          swift_bridgeObjectRelease();
          uint64_t v6 = v14;
          uint64_t v9 = v13;
          int64_t v18 = v11;
          if (!v17)
          {
            swift_bridgeObjectRelease();
            uint64_t v17 = (void *)MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease_n();
          uint64_t v17 = (void *)MEMORY[0x263F8EE78];
          uint64_t v6 = v14;
          uint64_t v9 = v13;
          int64_t v18 = v11;
          if (v12 != v7)
          {
            uint64_t v20 = v12 - v7;
            if (v64 < 1)
            {
              if (v64 < 0) {
                goto LABEL_91;
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
              uint64_t v21 = *(void *)(type metadata accessor for SearchResult(0) - 8);
              uint64_t v22 = *(void *)(v21 + 72);
              unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
              uint64_t v17 = (void *)swift_allocObject();
              size_t v24 = _swift_stdlib_malloc_size(v17);
              if (!v22) {
                goto LABEL_87;
              }
              if (v24 - v23 == 0x8000000000000000 && v22 == -1) {
                goto LABEL_89;
              }
              uint64_t v26 = 2 * ((uint64_t)(v24 - v23) / v22);
              uint64_t v20 = v64;
              v17[2] = v64;
              void v17[3] = v26;
            }
            uint64_t v27 = *(void *)(type metadata accessor for SearchResult(0) - 8);
            unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
            uint64_t v29 = a4 + v28;
            os_log_type_t v30 = (char *)v17 + v28;
            uint64_t v31 = *(void *)(v27 + 72);
            unint64_t v32 = v29 + v31 * v7;
            uint64_t v33 = v31 * v20;
            uint64_t v34 = &v30[v33];
            unint64_t v35 = v32 + v33;
            if (v32 < (unint64_t)v34 && (unint64_t)v30 < v35) {
              goto LABEL_91;
            }
            swift_arrayInitWithCopy();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v19 = *(void *)(v9 + 16);
        if (v19 >= *(void *)(v9 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        *(void *)(v9 + 16) = v19 + 1;
        *(void *)(v9 + 8 * v19 + 32) = v17;
        int64_t v7 = v18;
        if (!--v8) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
    }
    else
    {
      int64_t v18 = v7;
LABEL_40:
      BOOL v37 = v18 <= a2;
      if (v6 > 0) {
        BOOL v37 = v18 >= a2;
      }
      if (v37)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        return v9;
      }
      while (1)
      {
        int64_t v39 = __OFADD__(v18, v6) ? ((v18 + v6) >> 63) ^ 0x8000000000000000 : v18 + v6;
        if (__OFADD__(v18, a5)) {
          break;
        }
        if (*(void *)(a4 + 16) >= v18 + a5) {
          uint64_t v40 = v18 + a5;
        }
        else {
          uint64_t v40 = *(void *)(a4 + 16);
        }
        uint64_t v41 = v40 - v18;
        if (v40 < v18) {
          goto LABEL_84;
        }
        if (v18 < 0) {
          goto LABEL_85;
        }
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v42 = swift_dynamicCastClass();
        if (!v42)
        {
          swift_bridgeObjectRelease();
          uint64_t v42 = MEMORY[0x263F8EE78];
        }
        uint64_t v43 = *(void *)(v42 + 16);
        swift_release();
        if (v43 == v41)
        {
          uint64_t v44 = (void *)swift_dynamicCastClass();
          swift_bridgeObjectRelease();
          if (!v44)
          {
            swift_bridgeObjectRelease();
            uint64_t v44 = (void *)MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease_n();
          uint64_t v44 = (void *)MEMORY[0x263F8EE78];
          if (v40 != v18)
          {
            if (v41 < 1)
            {
              if (v41 < 0) {
                goto LABEL_91;
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
              uint64_t v47 = *(void *)(type metadata accessor for SearchResult(0) - 8);
              uint64_t v48 = *(void *)(v47 + 72);
              unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
              uint64_t v44 = (void *)swift_allocObject();
              size_t v50 = _swift_stdlib_malloc_size(v44);
              if (!v48) {
                goto LABEL_88;
              }
              if (v50 - v49 == 0x8000000000000000 && v48 == -1) {
                goto LABEL_90;
              }
              v44[2] = v41;
              v44[3] = 2 * ((uint64_t)(v50 - v49) / v48);
            }
            uint64_t v52 = *(void *)(type metadata accessor for SearchResult(0) - 8);
            unint64_t v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
            uint64_t v54 = a4 + v53;
            unint64_t v55 = (char *)v44 + v53;
            uint64_t v56 = *(void *)(v52 + 72);
            unint64_t v57 = v54 + v56 * v18;
            uint64_t v58 = v56 * v41;
            uint64_t v59 = &v55[v58];
            unint64_t v60 = v57 + v58;
            if (v57 < (unint64_t)v59 && (unint64_t)v55 < v60) {
              goto LABEL_91;
            }
            swift_arrayInitWithCopy();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v45 = *(void *)(v9 + 16);
        if (v45 >= *(void *)(v9 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        *(void *)(v9 + 16) = v45 + 1;
        *(void *)(v9 + 8 * v45 + 32) = v44;
        BOOL v46 = v39 <= a2;
        if (v6 > 0) {
          BOOL v46 = v39 >= a2;
        }
        int64_t v18 = v39;
        if (v46) {
          goto LABEL_43;
        }
      }
    }
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
  }
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Dictionary.init<A>(_:uniquingKeysWith:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, SearchResult>);
    uint64_t v3 = static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE80];
  }
  uint64_t v6 = v3;
  specialized _NativeDictionary.merge<A>(_:isUnique:uniquingKeysWith:)(a1, 1, &v6);
  uint64_t v4 = v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

uint64_t protocol witness for static Generable.schema.getter in conformance AnswerSynthesisModelResult.AnswerResponse@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for schema != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Schema();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static AnswerSynthesisModelResult.AnswerResponse.schema);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

double protocol witness for Generable.init(from:) in conformance AnswerSynthesisModelResult.AnswerResponse@<D0>(uint64_t a1@<X8>)
{
  AnswerSynthesisModelResult.AnswerResponse.init(from:)(v5);
  if (!v1)
  {
    double result = *(double *)v5;
    long long v4 = v5[1];
    *(_OWORD *)a1 = v5[0];
    *(_OWORD *)(a1 + 16) = v4;
    *(void *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  if (a3 + 16 * a2 > a1 && a1 + 16 * a2 > a3)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  BOOL v3;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (uint64_t v3 = a1 + 40 * a2 > a3) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CustomStringConvertible?);
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  BOOL v3;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0 || (a3 + 160 * a2 > a1 ? (uint64_t v3 = a1 + 160 * a2 > a3) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  BOOL v3;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (uint64_t v3 = a1 + 8 * a2 > a3) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    type metadata accessor for MemoryCreationQUParseAttributes();
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  BOOL v3;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (uint64_t v3 = a1 + 24 * a2 > a3) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  BOOL v3;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (uint64_t v3 = a1 + 32 * a2 > a3) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  if (a3 + 24 * a2 > a1 && a1 + 24 * a2 > a3)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  BOOL v3;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (uint64_t v3 = a1 + 24 * a2 > a3) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, [String]));
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_87_0();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_88_0();
  if (!v5 & v4) {
    char v6 = v3 > v2;
  }
  else {
    char v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [SearchResult]));
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_89_0();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  type metadata accessor for NSUserDefaults(0, v3);
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_89_0();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_87_0();
  if (!v5 & v4) {
    char v6 = v3 > v2;
  }
  else {
    char v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, (String, [String])));
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_53();
  if (v4 + 48 * v3 > v2 && v2 + 48 * v3 > v4)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, ChatMessageRecord));
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_53();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_88_0();
  if (!v5 & v4) {
    char v6 = v3 > v2;
  }
  else {
    char v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SFCollectionStyleGrid, Int));
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2, a3);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2, a3);
}

{
  uint64_t *v4;
  unint64_t v5;
  char v6;
  char v7;
  BOOL v8;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_154_0();
  if (!v7 & v6) {
    uint64_t v8 = v5 > a3;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

{
  void (*v4)(void);
  unint64_t v5;
  char v6;
  char v7;
  BOOL v8;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_53();
  v4(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_154_0();
  if (!v7 & v6) {
    uint64_t v8 = v5 > a3;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_13_3();
  return swift_arrayInitWithCopy();
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_97();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_157();
    __break(1u);
    return result;
  }
  if (&__dst[4 * a2] > __src && &__src[4 * a2] > __dst)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_96();
    goto LABEL_11;
  }
  return memcpy(__dst, __src, 4 * a2);
}

{
  BOOL v3;
  void *result;
  uint64_t vars8;

  if (a2 < 0 || (&__dst[8 * a2] > __src ? (uint64_t v3 = &__src[8 * a2] > __dst) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 8 * a2);
  }
  return result;
}

{
  BOOL v3;
  void *result;
  uint64_t vars8;

  if (a2 < 0 || (&__dst[16 * a2] > __src ? (uint64_t v3 = &__src[16 * a2] > __dst) : (uint64_t v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 16 * a2);
  }
  return result;
}

uint64_t sub_257E06184()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t partial apply for closure #1 in AnySearchEntityPreprocessing.init(_:)()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_152_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = partial apply for closure #1 in AnySearchEntityPreprocessing.init(_:);
  uint64_t v2 = OUTLINED_FUNCTION_129_0();
  return closure #1 in AnySearchEntityPreprocessing.init(_:)(v2, v3, v4, v5);
}

uint64_t closure #1 in AnySearchEntityPreprocessing.init(_:)partial apply()
{
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_152_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = closure #1 in AnySearchEntityPreprocessing.init(_:)partial apply;
  uint64_t v2 = OUTLINED_FUNCTION_129_0();
  return closure #1 in AnySearchEntityPreprocessing.init(_:)(v2, v3, v4, v5);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_257E063B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t partial apply for closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_53();
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_26_1(v6);
  *uint64_t v7 = v8;
  v7[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  return closure #1 in AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:)(v2, v0, v3, v4, v5);
}

uint64_t type metadata accessor for ResultsDialog(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for ResultsDialog);
}

unint64_t lazy protocol witness table accessor for type DialogOverrideError and conformance DialogOverrideError()
{
  unint64_t result = lazy protocol witness table cache variable for type DialogOverrideError and conformance DialogOverrideError;
  if (!lazy protocol witness table cache variable for type DialogOverrideError and conformance DialogOverrideError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DialogOverrideError and conformance DialogOverrideError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DialogOverrideError and conformance DialogOverrideError;
  if (!lazy protocol witness table cache variable for type DialogOverrideError and conformance DialogOverrideError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DialogOverrideError and conformance DialogOverrideError);
  }
  return result;
}

char *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char *a1, int64_t a2, char a3)
{
  unint64_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

{
  uint64_t *v3;
  char *result;

  unint64_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

{
  uint64_t *v3;
  char *result;

  unint64_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

{
  uint64_t *v3;
  char *result;

  unint64_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

uint64_t outlined init with copy of AnswerSynthesisResult(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of AnswerSynthesisResult(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t outlined init with take of ResultsDialog(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type NetworkServiceError and conformance NetworkServiceError()
{
  unint64_t result = lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError;
  if (!lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError;
  if (!lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisModelResult and conformance AnswerSynthesisModelResult()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult and conformance AnswerSynthesisModelResult;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult and conformance AnswerSynthesisModelResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult and conformance AnswerSynthesisModelResult);
  }
  return result;
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined consume of Data._Representation(a1, a2);
  }
  return a1;
}

uint64_t outlined consume of PQAVerificationRequest?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for AnswerSynthesisModelResult.AnswerResponse.Streaming);
}

uint64_t type metadata accessor for ResultsDialog(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t partial apply for closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:)()
{
  OUTLINED_FUNCTION_27();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_26_1(v2);
  *uint64_t v3 = v4;
  v3[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return closure #1 in static AnswerSynthesisModelResult.AnswerResponse.collect(_:)(v1);
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse.CodingKeys and conformance AnswerSynthesisModelResult.AnswerResponse.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A](unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.CodingKeys and conformance AnswerSynthesisModelResult.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisModelResult.AnswerResponse and conformance AnswerSynthesisModelResult.AnswerResponse);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisController.AnswerSynthesisModelType and conformance AnswerSynthesisController.AnswerSynthesisModelType()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerSynthesisController.AnswerSynthesisModelType and conformance AnswerSynthesisController.AnswerSynthesisModelType;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisController.AnswerSynthesisModelType and conformance AnswerSynthesisController.AnswerSynthesisModelType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisController.AnswerSynthesisModelType and conformance AnswerSynthesisController.AnswerSynthesisModelType);
  }
  return result;
}

uint64_t dispatch thunk of AnswerSynthesisControllerProtocol.supports(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AnswerSynthesisControllerProtocol.synthesize(query:searchResults:context:traceId:clientId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  OUTLINED_FUNCTION_85_0();
  uint64_t v16 = (uint64_t (*)(uint64_t))(*(void *)(a11 + 16) + **(int **)(a11 + 16));
  uint64_t v11 = swift_task_alloc();
  int64_t v12 = (void *)OUTLINED_FUNCTION_26_1(v11);
  *int64_t v12 = v13;
  v12[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v14 = OUTLINED_FUNCTION_62_0();
  return v16(v14);
}

uint64_t type metadata accessor for AnswerSynthesisController()
{
  return self;
}

uint64_t method lookup function for AnswerSynthesisController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnswerSynthesisController);
}

uint64_t dispatch thunk of AnswerSynthesisController.__allocating_init(answerSynthesisModel:pqaVerificationModel:modelType:answerSynthesisTokenLimit:featureFlagService:hallucinationMitigator:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 152))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of AnswerSynthesisController.supports(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:)()
{
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_209();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = dispatch thunk of AnswerSynthesisController.preprocessSearchEntity(for:with:answerSynthesisMetrics:);
  OUTLINED_FUNCTION_70_0();
  return v2();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_27();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of AnswerSynthesisController.synthesize(query:searchResults:context:traceId:clientId:)()
{
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_209();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 176) + **(int **)(v0 + 176));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_26_1(v1);
  *uint64_t v2 = v3;
  v2[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  uint64_t v4 = OUTLINED_FUNCTION_62_0();
  return v6(v4);
}

uint64_t dispatch thunk of AnswerSynthesisController.prewarmModel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AnswerSynthesisController.createAnswerSynthesisRequest(for:with:context:enableTruncation:)()
{
  OUTLINED_FUNCTION_209();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of AnswerSynthesisController.createPQAVerificationRequest(answerSynthesisRequest:synthesisResult:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of AnswerSynthesisController.performSynthesisRequest(for:with:answerSynthesisMetrics:)()
{
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_209();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  OUTLINED_FUNCTION_70_0();
  return v3();
}

uint64_t dispatch thunk of AnswerSynthesisController.convertSynthesisResultToSearchResultAnswers(request:synthesisResult:searchResults:)()
{
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_209();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_26_1(v0);
  void *v1 = v2;
  v1[1] = AnswerSynthesisModelServer.synthesizeWithOverride_runnable(_:bindings:);
  OUTLINED_FUNCTION_70_0();
  return v3();
}

uint64_t dispatch thunk of AnswerSynthesisController.collateNetworkServiceResults(_:)()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_209();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 232) + **(int **)(v2 + 232));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_26_1(v3);
  *uint64_t v4 = v5;
  v4[1] = AnswerSynthesisModelServer.synthesizeWithTemplate_runnable(_:bindings:);
  return v7(v1, v0);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisController.AnswerSynthesisModelType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnswerSynthesisController.AnswerSynthesisModelType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257E07514);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for AnswerSynthesisController.AnswerSynthesisModelType(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *destructiveInjectEnumTag for AnswerSynthesisController.AnswerSynthesisModelType(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AnswerSynthesisController.AnswerSynthesisModelType()
{
  return &type metadata for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t destroy for AnswerSynthesisModelResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnswerSynthesisModelResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnswerSynthesisModelResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnswerSynthesisModelResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisModelResult(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisModelResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnswerSynthesisModelResult()
{
  return &type metadata for AnswerSynthesisModelResult;
}

uint64_t initializeBufferWithCopyOfBuffer for AnswerSynthesisModelResult.AnswerResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AnswerSynthesisModelResult.AnswerResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AnswerSynthesisModelResult.AnswerResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AnswerSynthesisModelResult.AnswerResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnswerSynthesisModelResult.AnswerResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisModelResult.AnswerResponse(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisModelResult.AnswerResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnswerSynthesisModelResult.AnswerResponse()
{
  return &type metadata for AnswerSynthesisModelResult.AnswerResponse;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

uint64_t initializeWithCopy for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_257E07F9C);
}

uint64_t sub_257E07F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  OUTLINED_FUNCTION_30_2();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }
  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisModelResult.AnswerResponse.Streaming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_257E08038);
}

uint64_t sub_257E08038(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String, Error>);
  OUTLINED_FUNCTION_30_2();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncThrowingStream<String?, Error>);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void type metadata completion function for AnswerSynthesisModelResult.AnswerResponse.Streaming()
{
  type metadata accessor for AsyncThrowingStream<String, Error>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AsyncThrowingStream<String?, Error>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for AsyncThrowingStream<String, Error>()
{
  if (!lazy cache variable for type metadata for AsyncThrowingStream<String, Error>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
    unint64_t v0 = type metadata accessor for AsyncThrowingStream();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for AsyncThrowingStream<String, Error>);
    }
  }
}

void type metadata accessor for AsyncThrowingStream<String?, Error>()
{
  if (!lazy cache variable for type metadata for AsyncThrowingStream<String?, Error>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
    unint64_t v0 = type metadata accessor for AsyncThrowingStream();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for AsyncThrowingStream<String?, Error>);
    }
  }
}

ValueMetadata *type metadata accessor for AnswerSynthesisModelResult.CodingKeys()
{
  return &type metadata for AnswerSynthesisModelResult.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for ResultsDialog(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    uint64_t v9 = a2[2];
    swift_bridgeObjectRetain();
    if ((unint64_t)(v9 - 1) >= 3)
    {
      a1[1] = *v8;
      a1[2] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 1) = *(_OWORD *)v8;
    }
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for AnswerSynthesisResult();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v36 = *((void *)v12 + 1);
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = v36;
      *((void *)v11 + 2) = *((void *)v12 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_543:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v37 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v37;
          uint64_t v38 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v38;
          uint64_t v39 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v39;
          uint64_t v40 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v40;
          uint64_t v2640 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v2640;
          v2656 = (int *)type metadata accessor for MobileSMSDocument(0);
          uint64_t v41 = v2656[10];
          v2626 = &v11[v41];
          uint64_t v42 = &v12[v41];
          uint64_t v43 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2626, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2626, v42, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)v2626, 0, 1, v43);
          }
          uint64_t v306 = v2656[11];
          uint64_t v307 = &v11[v306];
          uint64_t v308 = &v12[v306];
          uint64_t v309 = type metadata accessor for URL();
          uint64_t v2635 = v309;
          uint64_t v2650 = v43;
          if (__swift_getEnumTagSinglePayload((uint64_t)v308, 1, v309))
          {
            uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v307, v308, *(void *)(*(void *)(v310 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v307, v308, v309);
            __swift_storeEnumTagSinglePayload((uint64_t)v307, 0, 1, v309);
          }
          *(void *)&v11[v2656[12]] = *(void *)&v12[v2656[12]];
          uint64_t v462 = v2656[13];
          v463 = &v11[v462];
          v464 = &v12[v462];
          uint64_t v465 = *((void *)v464 + 1);
          *(void *)v463 = *(void *)v464;
          *((void *)v463 + 1) = v465;
          uint64_t v466 = v2656[14];
          v467 = &v11[v466];
          v468 = &v12[v466];
          uint64_t v469 = *((void *)v468 + 1);
          *(void *)v467 = *(void *)v468;
          *((void *)v467 + 1) = v469;
          *(void *)&v11[v2656[15]] = *(void *)&v12[v2656[15]];
          *(void *)&v11[v2656[16]] = *(void *)&v12[v2656[16]];
          uint64_t v470 = v2656[17];
          v471 = &v11[v470];
          v472 = &v12[v470];
          uint64_t v473 = *(void *)&v12[v470];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v473)
          {
            uint64_t v474 = *((void *)v472 + 1);
            uint64_t v475 = *((void *)v472 + 2);
            *(void *)v471 = v473;
            *((void *)v471 + 1) = v474;
            uint64_t v476 = *((void *)v472 + 3);
            uint64_t v477 = *((void *)v472 + 4);
            *((void *)v471 + 2) = v475;
            *((void *)v471 + 3) = v476;
            *((void *)v471 + 4) = v477;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v627 = *((_OWORD *)v472 + 1);
            *(_OWORD *)v471 = *(_OWORD *)v472;
            *((_OWORD *)v471 + 1) = v627;
            *((void *)v471 + 4) = *((void *)v472 + 4);
          }
          uint64_t v628 = v2656[18];
          v629 = &v11[v628];
          v630 = &v12[v628];
          uint64_t v631 = *((void *)v630 + 1);
          *(void *)v629 = *(void *)v630;
          *((void *)v629 + 1) = v631;
          uint64_t v632 = v2656[19];
          v633 = &v11[v632];
          v634 = &v12[v632];
          v635 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v634, 1, (uint64_t)v635))
          {
            uint64_t v636 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v633, v634, *(void *)(*(void *)(v636 - 8) + 64));
          }
          else
          {
            uint64_t v673 = *((void *)v634 + 1);
            *(void *)v633 = *(void *)v634;
            *((void *)v633 + 1) = v673;
            uint64_t v674 = v635[5];
            v675 = &v633[v674];
            v676 = &v634[v674];
            uint64_t v677 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2597 = v634;
            v2617 = v635;
            if (__swift_getEnumTagSinglePayload((uint64_t)v676, 1, v677))
            {
              uint64_t v678 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v675, v676, *(void *)(*(void *)(v678 - 8) + 64));
            }
            else
            {
              uint64_t v734 = *((void *)v676 + 1);
              *(void *)v675 = *(void *)v676;
              *((void *)v675 + 1) = v734;
              uint64_t v735 = *((void *)v676 + 3);
              *((void *)v675 + 2) = *((void *)v676 + 2);
              *((void *)v675 + 3) = v735;
              uint64_t v736 = *((void *)v676 + 5);
              *((void *)v675 + 4) = *((void *)v676 + 4);
              *((void *)v675 + 5) = v736;
              uint64_t v737 = *((void *)v676 + 7);
              *((void *)v675 + 6) = *((void *)v676 + 6);
              *((void *)v675 + 7) = v737;
              uint64_t v738 = *((void *)v676 + 9);
              *((void *)v675 + 8) = *((void *)v676 + 8);
              *((void *)v675 + 9) = v738;
              uint64_t v739 = *((void *)v676 + 11);
              *((void *)v675 + 10) = *((void *)v676 + 10);
              *((void *)v675 + 11) = v739;
              uint64_t v740 = *((void *)v676 + 13);
              *((void *)v675 + 12) = *((void *)v676 + 12);
              *((void *)v675 + 13) = v740;
              uint64_t v741 = *((void *)v676 + 15);
              *((void *)v675 + 14) = *((void *)v676 + 14);
              *((void *)v675 + 15) = v741;
              v675[128] = v676[128];
              *(_WORD *)(v675 + 129) = *(_WORD *)(v676 + 129);
              uint64_t v742 = *((void *)v676 + 18);
              *((void *)v675 + 17) = *((void *)v676 + 17);
              *((void *)v675 + 18) = v742;
              uint64_t v743 = *((void *)v676 + 20);
              *((void *)v675 + 19) = *((void *)v676 + 19);
              *((void *)v675 + 20) = v743;
              uint64_t v744 = *((void *)v676 + 22);
              *((void *)v675 + 21) = *((void *)v676 + 21);
              *((void *)v675 + 22) = v744;
              v2388 = (void *)*((void *)v676 + 24);
              *((void *)v675 + 23) = *((void *)v676 + 23);
              *((void *)v675 + 24) = v2388;
              uint64_t v745 = *((void *)v676 + 26);
              *((void *)v675 + 25) = *((void *)v676 + 25);
              *((void *)v675 + 26) = v745;
              uint64_t v746 = *((void *)v676 + 28);
              *((void *)v675 + 27) = *((void *)v676 + 27);
              *((void *)v675 + 28) = v746;
              uint64_t v747 = *((void *)v676 + 30);
              *((void *)v675 + 29) = *((void *)v676 + 29);
              *((void *)v675 + 30) = v747;
              uint64_t v2575 = *((void *)v676 + 32);
              *((void *)v675 + 31) = *((void *)v676 + 31);
              *((void *)v675 + 32) = v2575;
              uint64_t v2532 = *((void *)v676 + 34);
              *((void *)v675 + 33) = *((void *)v676 + 33);
              *((void *)v675 + 34) = v2532;
              uint64_t v2499 = *((void *)v676 + 36);
              *((void *)v675 + 35) = *((void *)v676 + 35);
              *((void *)v675 + 36) = v2499;
              uint64_t v748 = *((void *)v676 + 38);
              *((void *)v675 + 37) = *((void *)v676 + 37);
              *((void *)v675 + 38) = v748;
              uint64_t v749 = *((void *)v676 + 40);
              *((void *)v675 + 39) = *((void *)v676 + 39);
              *((void *)v675 + 40) = v749;
              uint64_t v750 = *((void *)v676 + 42);
              *((void *)v675 + 41) = *((void *)v676 + 41);
              *((void *)v675 + 42) = v750;
              uint64_t v751 = *((void *)v676 + 44);
              *((void *)v675 + 43) = *((void *)v676 + 43);
              *((void *)v675 + 44) = v751;
              uint64_t v752 = *((void *)v676 + 46);
              *((void *)v675 + 45) = *((void *)v676 + 45);
              *((void *)v675 + 46) = v752;
              uint64_t v753 = *((void *)v676 + 47);
              v675[384] = v676[384];
              *((void *)v675 + 47) = v753;
              uint64_t v754 = *((void *)v676 + 50);
              *((void *)v675 + 49) = *((void *)v676 + 49);
              *((void *)v675 + 50) = v754;
              uint64_t v755 = *((void *)v676 + 52);
              *((void *)v675 + 51) = *((void *)v676 + 51);
              *((void *)v675 + 52) = v755;
              uint64_t v756 = *(int *)(v677 + 140);
              v2385 = &v675[v756];
              v757 = &v676[v756];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v757, 1, v2650))
              {
                uint64_t v758 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2385, v757, *(void *)(*(void *)(v758 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2385, v757, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v2385, 0, 1, v2650);
              }
              uint64_t v1305 = *(int *)(v677 + 144);
              v1306 = &v675[v1305];
              v1307 = &v676[v1305];
              v634 = v2597;
              if (__swift_getEnumTagSinglePayload((uint64_t)&v676[v1305], 1, v2650))
              {
                uint64_t v1308 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1306, v1307, *(void *)(*(void *)(v1308 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1306, v1307, v2650);
                v634 = v2597;
                __swift_storeEnumTagSinglePayload((uint64_t)v1306, 0, 1, v2650);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v675, 0, 1, v677);
              v635 = v2617;
            }
            uint64_t v1335 = v635[6];
            v1336 = &v633[v1335];
            v1337 = &v634[v1335];
            uint64_t v1338 = type metadata accessor for TicketedTransportation(0);
            v2579 = v633;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1337, 1, v1338))
            {
              uint64_t v1339 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v1336, v1337, *(void *)(*(void *)(v1339 - 8) + 64));
            }
            else
            {
              uint64_t v1340 = *((void *)v1337 + 1);
              *(void *)v1336 = *(void *)v1337;
              *((void *)v1336 + 1) = v1340;
              uint64_t v1341 = *((void *)v1337 + 3);
              *((void *)v1336 + 2) = *((void *)v1337 + 2);
              *((void *)v1336 + 3) = v1341;
              uint64_t v1342 = *((void *)v1337 + 5);
              *((void *)v1336 + 4) = *((void *)v1337 + 4);
              *((void *)v1336 + 5) = v1342;
              uint64_t v1343 = *((void *)v1337 + 7);
              *((void *)v1336 + 6) = *((void *)v1337 + 6);
              *((void *)v1336 + 7) = v1343;
              uint64_t v1344 = *((void *)v1337 + 9);
              *((void *)v1336 + 8) = *((void *)v1337 + 8);
              *((void *)v1336 + 9) = v1344;
              uint64_t v1345 = *((void *)v1337 + 11);
              *((void *)v1336 + 10) = *((void *)v1337 + 10);
              *((void *)v1336 + 11) = v1345;
              uint64_t v1346 = *((void *)v1337 + 13);
              *((void *)v1336 + 12) = *((void *)v1337 + 12);
              *((void *)v1336 + 13) = v1346;
              uint64_t v1347 = *((void *)v1337 + 15);
              *((void *)v1336 + 14) = *((void *)v1337 + 14);
              *((void *)v1336 + 15) = v1347;
              v1336[128] = v1337[128];
              *(_WORD *)(v1336 + 129) = *(_WORD *)(v1337 + 129);
              uint64_t v1348 = *((void *)v1337 + 18);
              *((void *)v1336 + 17) = *((void *)v1337 + 17);
              *((void *)v1336 + 18) = v1348;
              uint64_t v1349 = *((void *)v1337 + 20);
              *((void *)v1336 + 19) = *((void *)v1337 + 19);
              *((void *)v1336 + 20) = v1349;
              uint64_t v1350 = *((void *)v1337 + 22);
              *((void *)v1336 + 21) = *((void *)v1337 + 21);
              *((void *)v1336 + 22) = v1350;
              uint64_t v1351 = *((void *)v1337 + 24);
              *((void *)v1336 + 23) = *((void *)v1337 + 23);
              *((void *)v1336 + 24) = v1351;
              uint64_t v2509 = *((void *)v1337 + 26);
              *((void *)v1336 + 25) = *((void *)v1337 + 25);
              *((void *)v1336 + 26) = v2509;
              uint64_t v1352 = *((void *)v1337 + 28);
              *((void *)v1336 + 27) = *((void *)v1337 + 27);
              *((void *)v1336 + 28) = v1352;
              uint64_t v1353 = *((void *)v1337 + 30);
              *((void *)v1336 + 29) = *((void *)v1337 + 29);
              *((void *)v1336 + 30) = v1353;
              uint64_t v1354 = *((void *)v1337 + 32);
              *((void *)v1336 + 31) = *((void *)v1337 + 31);
              *((void *)v1336 + 32) = v1354;
              uint64_t v1355 = *((void *)v1337 + 34);
              *((void *)v1336 + 33) = *((void *)v1337 + 33);
              *((void *)v1336 + 34) = v1355;
              uint64_t v1356 = *((void *)v1337 + 36);
              uint64_t v1357 = *((void *)v1337 + 35);
              v1336[296] = v1337[296];
              *((void *)v1336 + 35) = v1357;
              *((void *)v1336 + 36) = v1356;
              uint64_t v2545 = v1338;
              uint64_t v1358 = *(int *)(v1338 + 112);
              v2394 = &v1336[v1358];
              v1359 = &v1337[v1358];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1359, 1, v2650))
              {
                uint64_t v1360 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2394, v1359, *(void *)(*(void *)(v1360 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2394, v1359, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v2394, 0, 1, v2650);
              }
              uint64_t v1365 = *(int *)(v1338 + 116);
              v1366 = &v1336[v1365];
              v1367 = &v1337[v1365];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1337[v1365], 1, v2650))
              {
                uint64_t v1368 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1366, v1367, *(void *)(*(void *)(v1368 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1366, v1367, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v1366, 0, 1, v2650);
              }
              v634 = v2597;
              __swift_storeEnumTagSinglePayload((uint64_t)v1336, 0, 1, v2545);
              v635 = v2617;
            }
            uint64_t v1397 = v635[7];
            v1398 = &v633[v1397];
            v1399 = &v634[v1397];
            v1400 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1399, 1, (uint64_t)v1400))
            {
              uint64_t v1401 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v1398, v1399, *(void *)(*(void *)(v1401 - 8) + 64));
            }
            else
            {
              uint64_t v1402 = *((void *)v1399 + 1);
              *(void *)v1398 = *(void *)v1399;
              *((void *)v1398 + 1) = v1402;
              uint64_t v1403 = *((void *)v1399 + 3);
              *((void *)v1398 + 2) = *((void *)v1399 + 2);
              *((void *)v1398 + 3) = v1403;
              uint64_t v1404 = *((void *)v1399 + 5);
              *((void *)v1398 + 4) = *((void *)v1399 + 4);
              *((void *)v1398 + 5) = v1404;
              uint64_t v1405 = *((void *)v1399 + 7);
              *((void *)v1398 + 6) = *((void *)v1399 + 6);
              *((void *)v1398 + 7) = v1405;
              uint64_t v1406 = *((void *)v1399 + 9);
              *((void *)v1398 + 8) = *((void *)v1399 + 8);
              *((void *)v1398 + 9) = v1406;
              uint64_t v1407 = *((void *)v1399 + 11);
              *((void *)v1398 + 10) = *((void *)v1399 + 10);
              *((void *)v1398 + 11) = v1407;
              uint64_t v1408 = *((void *)v1399 + 13);
              *((void *)v1398 + 12) = *((void *)v1399 + 12);
              *((void *)v1398 + 13) = v1408;
              uint64_t v1409 = *((void *)v1399 + 15);
              *((void *)v1398 + 14) = *((void *)v1399 + 14);
              *((void *)v1398 + 15) = v1409;
              v1398[128] = v1399[128];
              *(_WORD *)(v1398 + 129) = *(_WORD *)(v1399 + 129);
              uint64_t v1410 = *((void *)v1399 + 18);
              *((void *)v1398 + 17) = *((void *)v1399 + 17);
              *((void *)v1398 + 18) = v1410;
              uint64_t v1411 = *((void *)v1399 + 20);
              *((void *)v1398 + 19) = *((void *)v1399 + 19);
              *((void *)v1398 + 20) = v1411;
              uint64_t v1412 = *((void *)v1399 + 22);
              *((void *)v1398 + 21) = *((void *)v1399 + 21);
              *((void *)v1398 + 22) = v1412;
              uint64_t v1413 = *((void *)v1399 + 24);
              *((void *)v1398 + 23) = *((void *)v1399 + 23);
              *((void *)v1398 + 24) = v1413;
              uint64_t v1414 = *((void *)v1399 + 26);
              *((void *)v1398 + 25) = *((void *)v1399 + 25);
              *((void *)v1398 + 26) = v1414;
              uint64_t v1415 = *((void *)v1399 + 28);
              *((void *)v1398 + 27) = *((void *)v1399 + 27);
              *((void *)v1398 + 28) = v1415;
              uint64_t v2510 = *((void *)v1399 + 30);
              *((void *)v1398 + 29) = *((void *)v1399 + 29);
              *((void *)v1398 + 30) = v2510;
              uint64_t v1416 = *((void *)v1399 + 32);
              *((void *)v1398 + 31) = *((void *)v1399 + 31);
              *((void *)v1398 + 32) = v1416;
              uint64_t v1417 = *((void *)v1399 + 34);
              *((void *)v1398 + 33) = *((void *)v1399 + 33);
              *((void *)v1398 + 34) = v1417;
              uint64_t v1418 = *((void *)v1399 + 36);
              uint64_t v1419 = *((void *)v1399 + 35);
              v1398[296] = v1399[296];
              *((void *)v1398 + 35) = v1419;
              *((void *)v1398 + 36) = v1418;
              uint64_t v1420 = *((void *)v1399 + 39);
              *((void *)v1398 + 38) = *((void *)v1399 + 38);
              *((void *)v1398 + 39) = v1420;
              uint64_t v2546 = (uint64_t)v1400;
              uint64_t v1421 = v1400[29];
              __dsta = &v1398[v1421];
              v1422 = &v1399[v1421];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1422, 1, v2635))
              {
                uint64_t v1423 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(__dsta, v1422, *(void *)(*(void *)(v1423 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2635 - 8) + 16))(__dsta, v1422, v2635);
                __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v2635);
              }
              uint64_t v1432 = v1400[30];
              v1433 = &v1398[v1432];
              v1434 = &v1399[v1432];
              uint64_t v1435 = *((void *)v1434 + 1);
              *(void *)v1433 = *(void *)v1434;
              *((void *)v1433 + 1) = v1435;
              uint64_t v1436 = v1400[31];
              v1437 = &v1398[v1436];
              v1438 = &v1399[v1436];
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1438, 1, v2650))
              {
                uint64_t v1439 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1437, v1438, *(void *)(*(void *)(v1439 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1437, v1438, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v1437, 0, 1, v2650);
              }
              uint64_t v1444 = *(int *)(v2546 + 128);
              v1445 = &v1398[v1444];
              v1446 = &v1399[v1444];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1399[v1444], 1, v2650))
              {
                uint64_t v1447 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1445, v1446, *(void *)(*(void *)(v1447 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1445, v1446, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v1445, 0, 1, v2650);
              }
              v634 = v2597;
              __swift_storeEnumTagSinglePayload((uint64_t)v1398, 0, 1, v2546);
              v635 = v2617;
            }
            uint64_t v1476 = v635[8];
            v1477 = &v633[v1476];
            v1478 = &v634[v1476];
            uint64_t v1479 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1478, 1, v1479))
            {
              uint64_t v1480 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1477, v1478, *(void *)(*(void *)(v1480 - 8) + 64));
            }
            else
            {
              uint64_t v1481 = *((void *)v1478 + 1);
              *(void *)v1477 = *(void *)v1478;
              *((void *)v1477 + 1) = v1481;
              uint64_t v1482 = *((void *)v1478 + 3);
              *((void *)v1477 + 2) = *((void *)v1478 + 2);
              *((void *)v1477 + 3) = v1482;
              uint64_t v1483 = *((void *)v1478 + 5);
              *((void *)v1477 + 4) = *((void *)v1478 + 4);
              *((void *)v1477 + 5) = v1483;
              uint64_t v1484 = *((void *)v1478 + 7);
              *((void *)v1477 + 6) = *((void *)v1478 + 6);
              *((void *)v1477 + 7) = v1484;
              uint64_t v1485 = *((void *)v1478 + 9);
              *((void *)v1477 + 8) = *((void *)v1478 + 8);
              *((void *)v1477 + 9) = v1485;
              uint64_t v1486 = *((void *)v1478 + 11);
              *((void *)v1477 + 10) = *((void *)v1478 + 10);
              *((void *)v1477 + 11) = v1486;
              uint64_t v1487 = *((void *)v1478 + 13);
              *((void *)v1477 + 12) = *((void *)v1478 + 12);
              *((void *)v1477 + 13) = v1487;
              uint64_t v1488 = *((void *)v1478 + 15);
              *((void *)v1477 + 14) = *((void *)v1478 + 14);
              *((void *)v1477 + 15) = v1488;
              v1477[128] = v1478[128];
              *(_WORD *)(v1477 + 129) = *(_WORD *)(v1478 + 129);
              uint64_t v1489 = *((void *)v1478 + 18);
              *((void *)v1477 + 17) = *((void *)v1478 + 17);
              *((void *)v1477 + 18) = v1489;
              uint64_t v1490 = *((void *)v1478 + 20);
              *((void *)v1477 + 19) = *((void *)v1478 + 19);
              *((void *)v1477 + 20) = v1490;
              uint64_t v1491 = *((void *)v1478 + 22);
              *((void *)v1477 + 21) = *((void *)v1478 + 21);
              *((void *)v1477 + 22) = v1491;
              uint64_t v1492 = *((void *)v1478 + 24);
              *((void *)v1477 + 23) = *((void *)v1478 + 23);
              *((void *)v1477 + 24) = v1492;
              uint64_t v1493 = *((void *)v1478 + 26);
              *((void *)v1477 + 25) = *((void *)v1478 + 25);
              *((void *)v1477 + 26) = v1493;
              uint64_t v1494 = *((void *)v1478 + 28);
              *((void *)v1477 + 27) = *((void *)v1478 + 27);
              *((void *)v1477 + 28) = v1494;
              uint64_t v1495 = *((void *)v1478 + 30);
              *((void *)v1477 + 29) = *((void *)v1478 + 29);
              *((void *)v1477 + 30) = v1495;
              uint64_t v1496 = *((void *)v1478 + 32);
              *((void *)v1477 + 31) = *((void *)v1478 + 31);
              *((void *)v1477 + 32) = v1496;
              uint64_t v1497 = *((void *)v1478 + 34);
              uint64_t v1498 = *((void *)v1478 + 33);
              v1477[280] = v1478[280];
              *((void *)v1477 + 33) = v1498;
              *((void *)v1477 + 34) = v1497;
              uint64_t v1499 = v1479;
              uint64_t v1500 = *((void *)v1478 + 37);
              *((void *)v1477 + 36) = *((void *)v1478 + 36);
              *((void *)v1477 + 37) = v1500;
              uint64_t v2547 = v1499;
              uint64_t v1501 = *(int *)(v1499 + 108);
              v2396 = &v1477[v1501];
              v1502 = &v1478[v1501];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1502, 1, v2650))
              {
                uint64_t v1503 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2396, v1502, *(void *)(*(void *)(v1503 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2396, v1502, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v2396, 0, 1, v2650);
              }
              uint64_t v1508 = *(int *)(v2547 + 112);
              v1509 = &v1477[v1508];
              v1510 = &v1478[v1508];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1478[v1508], 1, v2650))
              {
                uint64_t v1511 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1509, v1510, *(void *)(*(void *)(v1511 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1509, v1510, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v1509, 0, 1, v2650);
              }
              v634 = v2597;
              __swift_storeEnumTagSinglePayload((uint64_t)v1477, 0, 1, v2547);
              v635 = v2617;
            }
            uint64_t v1534 = v635[9];
            v1535 = &v633[v1534];
            v1536 = &v634[v1534];
            uint64_t v1537 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1536, 1, v1537))
            {
              uint64_t v1538 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1535, v1536, *(void *)(*(void *)(v1538 - 8) + 64));
            }
            else
            {
              uint64_t v1539 = *((void *)v1536 + 1);
              *(void *)v1535 = *(void *)v1536;
              *((void *)v1535 + 1) = v1539;
              uint64_t v1540 = *((void *)v1536 + 3);
              *((void *)v1535 + 2) = *((void *)v1536 + 2);
              *((void *)v1535 + 3) = v1540;
              uint64_t v1541 = *((void *)v1536 + 5);
              *((void *)v1535 + 4) = *((void *)v1536 + 4);
              *((void *)v1535 + 5) = v1541;
              uint64_t v1542 = *((void *)v1536 + 7);
              *((void *)v1535 + 6) = *((void *)v1536 + 6);
              *((void *)v1535 + 7) = v1542;
              uint64_t v1543 = *((void *)v1536 + 9);
              *((void *)v1535 + 8) = *((void *)v1536 + 8);
              *((void *)v1535 + 9) = v1543;
              uint64_t v1544 = *((void *)v1536 + 11);
              *((void *)v1535 + 10) = *((void *)v1536 + 10);
              *((void *)v1535 + 11) = v1544;
              uint64_t v1545 = *((void *)v1536 + 13);
              *((void *)v1535 + 12) = *((void *)v1536 + 12);
              *((void *)v1535 + 13) = v1545;
              uint64_t v1546 = *((void *)v1536 + 15);
              *((void *)v1535 + 14) = *((void *)v1536 + 14);
              *((void *)v1535 + 15) = v1546;
              v1535[128] = v1536[128];
              *(_WORD *)(v1535 + 129) = *(_WORD *)(v1536 + 129);
              uint64_t v1547 = *((void *)v1536 + 18);
              *((void *)v1535 + 17) = *((void *)v1536 + 17);
              *((void *)v1535 + 18) = v1547;
              uint64_t v1548 = *((void *)v1536 + 20);
              *((void *)v1535 + 19) = *((void *)v1536 + 19);
              *((void *)v1535 + 20) = v1548;
              uint64_t v1549 = *((void *)v1536 + 22);
              *((void *)v1535 + 21) = *((void *)v1536 + 21);
              *((void *)v1535 + 22) = v1549;
              uint64_t v1550 = *((void *)v1536 + 24);
              *((void *)v1535 + 23) = *((void *)v1536 + 23);
              *((void *)v1535 + 24) = v1550;
              uint64_t v1551 = *((void *)v1536 + 26);
              *((void *)v1535 + 25) = *((void *)v1536 + 25);
              *((void *)v1535 + 26) = v1551;
              uint64_t v1552 = *((void *)v1536 + 28);
              *((void *)v1535 + 27) = *((void *)v1536 + 27);
              *((void *)v1535 + 28) = v1552;
              uint64_t v1553 = *((void *)v1536 + 30);
              *((void *)v1535 + 29) = *((void *)v1536 + 29);
              *((void *)v1535 + 30) = v1553;
              uint64_t v2548 = v1537;
              *((void *)v1535 + 31) = *((void *)v1536 + 31);
              uint64_t v1554 = *(int *)(v1537 + 96);
              v2401 = &v1535[v1554];
              v2404 = &v1536[v1554];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2404, 1, v2650))
              {
                uint64_t v1555 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2401, v2404, *(void *)(*(void *)(v1555 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2401, v2404, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v2401, 0, 1, v2650);
              }
              uint64_t v1560 = *(int *)(v1537 + 100);
              v1561 = &v1535[v1560];
              v1562 = &v1536[v1560];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1536[v1560], 1, v2650))
              {
                uint64_t v1563 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1561, v1562, *(void *)(*(void *)(v1563 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1561, v1562, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v1561, 0, 1, v2650);
              }
              uint64_t v1569 = *(int *)(v2548 + 104);
              v1570 = &v1535[v1569];
              v1571 = &v1536[v1569];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1536[v1569], 1, v2635))
              {
                uint64_t v1572 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1570, v1571, *(void *)(*(void *)(v1572 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2635 - 8) + 16))(v1570, v1571, v2635);
                __swift_storeEnumTagSinglePayload((uint64_t)v1570, 0, 1, v2635);
              }
              v634 = v2597;
              __swift_storeEnumTagSinglePayload((uint64_t)v1535, 0, 1, v2548);
              v635 = v2617;
            }
            uint64_t v1593 = v635[10];
            v1594 = &v633[v1593];
            v1595 = &v634[v1593];
            uint64_t v1596 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1595, 1, v1596))
            {
              uint64_t v1597 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1594, v1595, *(void *)(*(void *)(v1597 - 8) + 64));
            }
            else
            {
              uint64_t v1598 = *((void *)v1595 + 1);
              *(void *)v1594 = *(void *)v1595;
              *((void *)v1594 + 1) = v1598;
              uint64_t v1599 = *((void *)v1595 + 3);
              *((void *)v1594 + 2) = *((void *)v1595 + 2);
              *((void *)v1594 + 3) = v1599;
              uint64_t v1600 = *((void *)v1595 + 5);
              *((void *)v1594 + 4) = *((void *)v1595 + 4);
              *((void *)v1594 + 5) = v1600;
              uint64_t v1601 = *((void *)v1595 + 7);
              *((void *)v1594 + 6) = *((void *)v1595 + 6);
              *((void *)v1594 + 7) = v1601;
              uint64_t v1602 = *((void *)v1595 + 9);
              *((void *)v1594 + 8) = *((void *)v1595 + 8);
              *((void *)v1594 + 9) = v1602;
              uint64_t v1603 = *((void *)v1595 + 11);
              *((void *)v1594 + 10) = *((void *)v1595 + 10);
              *((void *)v1594 + 11) = v1603;
              uint64_t v1604 = *((void *)v1595 + 13);
              *((void *)v1594 + 12) = *((void *)v1595 + 12);
              *((void *)v1594 + 13) = v1604;
              uint64_t v1605 = *((void *)v1595 + 15);
              *((void *)v1594 + 14) = *((void *)v1595 + 14);
              *((void *)v1594 + 15) = v1605;
              v1594[128] = v1595[128];
              *(_WORD *)(v1594 + 129) = *(_WORD *)(v1595 + 129);
              uint64_t v1606 = *((void *)v1595 + 18);
              *((void *)v1594 + 17) = *((void *)v1595 + 17);
              *((void *)v1594 + 18) = v1606;
              uint64_t v1607 = *((void *)v1595 + 20);
              *((void *)v1594 + 19) = *((void *)v1595 + 19);
              *((void *)v1594 + 20) = v1607;
              uint64_t v1608 = *((void *)v1595 + 22);
              *((void *)v1594 + 21) = *((void *)v1595 + 21);
              *((void *)v1594 + 22) = v1608;
              uint64_t v1609 = *((void *)v1595 + 24);
              *((void *)v1594 + 23) = *((void *)v1595 + 23);
              *((void *)v1594 + 24) = v1609;
              uint64_t v1610 = *((void *)v1595 + 26);
              *((void *)v1594 + 25) = *((void *)v1595 + 25);
              *((void *)v1594 + 26) = v1610;
              uint64_t v2549 = v1596;
              *((void *)v1594 + 27) = *((void *)v1595 + 27);
              uint64_t v1611 = *(int *)(v1596 + 88);
              v2409 = &v1594[v1611];
              v2413 = &v1595[v1611];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2413, 1, v2650))
              {
                uint64_t v1612 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2409, v2413, *(void *)(*(void *)(v1612 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2409, v2413, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v2409, 0, 1, v2650);
              }
              uint64_t v1617 = *(int *)(v1596 + 92);
              v1618 = &v1594[v1617];
              v1619 = &v1595[v1617];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1595[v1617], 1, v2650))
              {
                uint64_t v1620 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1618, v1619, *(void *)(*(void *)(v1620 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1618, v1619, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v1618, 0, 1, v2650);
              }
              uint64_t v1629 = *(int *)(v2549 + 96);
              v1630 = &v1594[v1629];
              v1631 = &v1595[v1629];
              *(void *)v1630 = *(void *)v1631;
              v1630[8] = v1631[8];
              uint64_t v1632 = *(int *)(v2549 + 100);
              v1633 = &v1594[v1632];
              v1634 = &v1595[v1632];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1595[v1632], 1, v2635))
              {
                uint64_t v1635 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1633, v1634, *(void *)(*(void *)(v1635 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2635 - 8) + 16))(v1633, v1634, v2635);
                __swift_storeEnumTagSinglePayload((uint64_t)v1633, 0, 1, v2635);
              }
              v634 = v2597;
              __swift_storeEnumTagSinglePayload((uint64_t)v1594, 0, 1, v2549);
              v635 = v2617;
            }
            uint64_t v1651 = v635[11];
            v1652 = &v633[v1651];
            v1653 = &v634[v1651];
            v1654 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1653, 1, (uint64_t)v1654))
            {
              uint64_t v1655 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1652, v1653, *(void *)(*(void *)(v1655 - 8) + 64));
            }
            else
            {
              uint64_t v1656 = *((void *)v1653 + 1);
              *(void *)v1652 = *(void *)v1653;
              *((void *)v1652 + 1) = v1656;
              uint64_t v1657 = *((void *)v1653 + 3);
              *((void *)v1652 + 2) = *((void *)v1653 + 2);
              *((void *)v1652 + 3) = v1657;
              uint64_t v2550 = *((void *)v1653 + 5);
              *((void *)v1652 + 4) = *((void *)v1653 + 4);
              *((void *)v1652 + 5) = v2550;
              uint64_t v2511 = *((void *)v1653 + 7);
              *((void *)v1652 + 6) = *((void *)v1653 + 6);
              *((void *)v1652 + 7) = v2511;
              uint64_t v1658 = *((void *)v1653 + 9);
              *((void *)v1652 + 8) = *((void *)v1653 + 8);
              *((void *)v1652 + 9) = v1658;
              uint64_t v1659 = *((void *)v1653 + 11);
              *((void *)v1652 + 10) = *((void *)v1653 + 10);
              *((void *)v1652 + 11) = v1659;
              v1652[96] = v1653[96];
              uint64_t v1660 = *((void *)v1653 + 14);
              *((void *)v1652 + 13) = *((void *)v1653 + 13);
              *((void *)v1652 + 14) = v1660;
              uint64_t v1661 = v1654[13];
              v2459 = &v1652[v1661];
              v1662 = &v1653[v1661];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1662, 1, v2635))
              {
                uint64_t v1663 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2459, v1662, *(void *)(*(void *)(v1663 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2635 - 8) + 16))(v2459, v1662, v2635);
                __swift_storeEnumTagSinglePayload((uint64_t)v2459, 0, 1, v2635);
              }
              uint64_t v1668 = v1654[14];
              v1669 = &v1652[v1668];
              v1670 = &v1653[v1668];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1653[v1668], 1, v2635))
              {
                uint64_t v1671 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1669, v1670, *(void *)(*(void *)(v1671 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2635 - 8) + 16))(v1669, v1670, v2635);
                __swift_storeEnumTagSinglePayload((uint64_t)v1669, 0, 1, v2635);
              }
              uint64_t v1740 = v1654[15];
              v1741 = &v1652[v1740];
              v1742 = &v1653[v1740];
              uint64_t v2551 = *((void *)v1742 + 1);
              *(void *)v1741 = *(void *)v1742;
              *((void *)v1741 + 1) = v2551;
              uint64_t v1743 = v1654[16];
              v1744 = &v1652[v1743];
              v1745 = &v1653[v1743];
              uint64_t v2512 = *((void *)v1745 + 1);
              *(void *)v1744 = *(void *)v1745;
              *((void *)v1744 + 1) = v2512;
              uint64_t v1746 = v1654[17];
              v1747 = &v1652[v1746];
              v1748 = &v1653[v1746];
              uint64_t v1749 = *((void *)v1748 + 1);
              *(void *)v1747 = *(void *)v1748;
              *((void *)v1747 + 1) = v1749;
              uint64_t v1750 = v1654[18];
              v2470 = &v1653[v1750];
              v2485 = &v1652[v1750];
              uint64_t v1751 = type metadata accessor for DateComponents();
              v1752 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1751 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1752(v2485, v2470, v1751);
              v1752(&v1652[v1654[19]], &v1653[v1654[19]], v1751);
              uint64_t v1753 = v1654[20];
              v1754 = &v1652[v1753];
              v1755 = &v1653[v1753];
              uint64_t v1756 = *((void *)v1755 + 1);
              *(void *)v1754 = *(void *)v1755;
              *((void *)v1754 + 1) = v1756;
              uint64_t v1757 = v1654[21];
              v1758 = &v1652[v1757];
              v1759 = &v1653[v1757];
              uint64_t v2552 = *((void *)v1759 + 1);
              *(void *)v1758 = *(void *)v1759;
              *((void *)v1758 + 1) = v2552;
              uint64_t v1760 = v1654[22];
              v1761 = &v1652[v1760];
              v1762 = &v1653[v1760];
              uint64_t v2513 = *((void *)v1762 + 1);
              *(void *)v1761 = *(void *)v1762;
              *((void *)v1761 + 1) = v2513;
              uint64_t v1763 = v1654[23];
              v1764 = &v1652[v1763];
              v1765 = &v1653[v1763];
              uint64_t v2486 = *((void *)v1765 + 1);
              *(void *)v1764 = *(void *)v1765;
              *((void *)v1764 + 1) = v2486;
              uint64_t v1766 = v1654[24];
              v1767 = &v1652[v1766];
              v1768 = &v1653[v1766];
              uint64_t v2471 = *((void *)v1768 + 1);
              *(void *)v1767 = *(void *)v1768;
              *((void *)v1767 + 1) = v2471;
              uint64_t v1769 = v1654[25];
              v1770 = &v1652[v1769];
              v1771 = &v1653[v1769];
              v2462 = (void *)*((void *)v1771 + 1);
              *(void *)v1770 = *(void *)v1771;
              *((void *)v1770 + 1) = v2462;
              uint64_t v1772 = v1654[26];
              v1773 = &v1652[v1772];
              v1774 = &v1653[v1772];
              v2451 = (void *)*((void *)v1774 + 1);
              *(void *)v1773 = *(void *)v1774;
              *((void *)v1773 + 1) = v2451;
              uint64_t v1775 = v1654[27];
              v1776 = &v1652[v1775];
              v1777 = &v1653[v1775];
              v2441 = (void *)*((void *)v1777 + 1);
              *(void *)v1776 = *(void *)v1777;
              *((void *)v1776 + 1) = v2441;
              uint64_t v1778 = v1654[28];
              v1779 = &v1652[v1778];
              v1780 = &v1653[v1778];
              v2433 = (void *)*((void *)v1780 + 1);
              *(void *)v1779 = *(void *)v1780;
              *((void *)v1779 + 1) = v2433;
              uint64_t v1781 = v1654[29];
              v1782 = &v1652[v1781];
              v1783 = &v1653[v1781];
              v2425 = (void *)*((void *)v1783 + 1);
              *(void *)v1782 = *(void *)v1783;
              *((void *)v1782 + 1) = v2425;
              uint64_t v1784 = v1654[30];
              v1785 = &v1652[v1784];
              v1786 = &v1653[v1784];
              v2419 = (void *)*((void *)v1786 + 1);
              *(void *)v1785 = *(void *)v1786;
              *((void *)v1785 + 1) = v2419;
              uint64_t v1787 = v1654[31];
              v1788 = &v1652[v1787];
              v1789 = &v1653[v1787];
              v2415 = (void *)*((void *)v1789 + 1);
              *(void *)v1788 = *(void *)v1789;
              *((void *)v1788 + 1) = v2415;
              uint64_t v1790 = v1654[32];
              v1791 = &v1652[v1790];
              v1792 = &v1653[v1790];
              uint64_t v1793 = *((void *)v1792 + 1);
              *(void *)v1791 = *(void *)v1792;
              *((void *)v1791 + 1) = v1793;
              *(void *)&v1652[v1654[33]] = *(void *)&v1653[v1654[33]];
              *(void *)&v1652[v1654[34]] = *(void *)&v1653[v1654[34]];
              uint64_t v1794 = v1654[35];
              v1795 = &v1652[v1794];
              v1796 = &v1653[v1794];
              uint64_t v1797 = *((void *)v1796 + 1);
              *(void *)v1795 = *(void *)v1796;
              *((void *)v1795 + 1) = v1797;
              uint64_t v1798 = v1654[36];
              v1799 = &v1652[v1798];
              v1800 = &v1653[v1798];
              uint64_t v1801 = *((void *)v1800 + 1);
              *(void *)v1799 = *(void *)v1800;
              *((void *)v1799 + 1) = v1801;
              uint64_t v1802 = v1654[37];
              v1803 = &v1652[v1802];
              v1804 = &v1653[v1802];
              uint64_t v1805 = *((void *)v1804 + 1);
              *(void *)v1803 = *(void *)v1804;
              *((void *)v1803 + 1) = v1805;
              uint64_t v1806 = v1654[38];
              v2400 = &v1652[v1806];
              v2403 = &v1653[v1806];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2403, 1, v2650))
              {
                uint64_t v1807 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2400, v2403, *(void *)(*(void *)(v1807 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2400, v2403, v2650);
                __swift_storeEnumTagSinglePayload((uint64_t)v2400, 0, 1, v2650);
              }
              uint64_t v1856 = v1654[39];
              v1857 = &v1652[v1856];
              v1858 = &v1653[v1856];
              uint64_t v1859 = *((void *)v1858 + 1);
              *(void *)v1857 = *(void *)v1858;
              *((void *)v1857 + 1) = v1859;
              uint64_t v1860 = v1654[40];
              v1861 = &v1652[v1860];
              v1862 = &v1653[v1860];
              uint64_t v2553 = *((void *)v1862 + 1);
              *(void *)v1861 = *(void *)v1862;
              *((void *)v1861 + 1) = v2553;
              uint64_t v1863 = v1654[41];
              v1864 = &v1652[v1863];
              v1865 = &v1653[v1863];
              v1864[8] = v1865[8];
              *(void *)v1864 = *(void *)v1865;
              uint64_t v1866 = v1654[42];
              v1867 = &v1652[v1866];
              v1868 = &v1653[v1866];
              uint64_t v1869 = *((void *)v1868 + 1);
              *(void *)v1867 = *(void *)v1868;
              *((void *)v1867 + 1) = v1869;
              uint64_t v1870 = v1654[43];
              v1871 = &v1652[v1870];
              v1872 = &v1653[v1870];
              *(_OWORD *)v1871 = *(_OWORD *)v1872;
              *(void *)(v1871 + 13) = *(void *)(v1872 + 13);
              uint64_t v1873 = v1654[44];
              v1874 = &v1652[v1873];
              v1875 = &v1653[v1873];
              uint64_t v1876 = *((void *)v1875 + 1);
              *(void *)v1874 = *(void *)v1875;
              *((void *)v1874 + 1) = v1876;
              uint64_t v1877 = v1654[45];
              v1878 = &v1652[v1877];
              v1879 = &v1653[v1877];
              uint64_t v1880 = *((void *)v1879 + 1);
              *(void *)v1878 = *(void *)v1879;
              *((void *)v1878 + 1) = v1880;
              uint64_t v1881 = v1654[46];
              v1882 = &v1652[v1881];
              v1883 = &v1653[v1881];
              uint64_t v1884 = *((void *)v1883 + 1);
              *(void *)v1882 = *(void *)v1883;
              *((void *)v1882 + 1) = v1884;
              uint64_t v1885 = v1654[47];
              v1886 = &v1652[v1885];
              v1887 = &v1653[v1885];
              uint64_t v1888 = *((void *)v1887 + 1);
              *(void *)v1886 = *(void *)v1887;
              *((void *)v1886 + 1) = v1888;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1652, 0, 1, (uint64_t)v1654);
              v633 = v2579;
              v634 = v2597;
              v635 = v2617;
            }
            uint64_t v1889 = v635[12];
            v1890 = &v633[v1889];
            v1891 = &v634[v1889];
            v1892 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1891, 1, (uint64_t)v1892))
            {
              uint64_t v1893 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1890, v1891, *(void *)(*(void *)(v1893 - 8) + 64));
            }
            else
            {
              uint64_t v1894 = *((void *)v1891 + 1);
              *(void *)v1890 = *(void *)v1891;
              *((void *)v1890 + 1) = v1894;
              uint64_t v2554 = *((void *)v1891 + 3);
              *((void *)v1890 + 2) = *((void *)v1891 + 2);
              *((void *)v1890 + 3) = v2554;
              uint64_t v2514 = *((void *)v1891 + 5);
              *((void *)v1890 + 4) = *((void *)v1891 + 4);
              *((void *)v1890 + 5) = v2514;
              uint64_t v1895 = *((void *)v1891 + 7);
              *((void *)v1890 + 6) = *((void *)v1891 + 6);
              *((void *)v1890 + 7) = v1895;
              uint64_t v1896 = *((void *)v1891 + 9);
              *((void *)v1890 + 8) = *((void *)v1891 + 8);
              *((void *)v1890 + 9) = v1896;
              uint64_t v1897 = *((void *)v1891 + 11);
              *((void *)v1890 + 10) = *((void *)v1891 + 10);
              *((void *)v1890 + 11) = v1897;
              v1890[96] = v1891[96];
              uint64_t v1898 = *((void *)v1891 + 14);
              *((void *)v1890 + 13) = *((void *)v1891 + 13);
              *((void *)v1890 + 14) = v1898;
              uint64_t v1899 = *((void *)v1891 + 16);
              *((void *)v1890 + 15) = *((void *)v1891 + 15);
              *((void *)v1890 + 16) = v1899;
              uint64_t v1900 = v1892[14];
              v2435 = &v1890[v1900];
              v2452 = &v1891[v1900];
              v2442 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2452, 1, (uint64_t)v2442))
              {
                uint64_t v1901 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2435, v2452, *(void *)(*(void *)(v1901 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2442 - 1) + 16))(v2435, v2452, v2442);
                __swift_storeEnumTagSinglePayload((uint64_t)v2435, 0, 1, (uint64_t)v2442);
              }
              uint64_t v1906 = v1892[15];
              v1907 = &v1890[v1906];
              v1908 = &v1891[v1906];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1891[v1906], 1, (uint64_t)v2442))
              {
                uint64_t v1909 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1907, v1908, *(void *)(*(void *)(v1909 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2442 - 1) + 16))(v1907, v1908, v2442);
                __swift_storeEnumTagSinglePayload((uint64_t)v1907, 0, 1, (uint64_t)v2442);
              }
              uint64_t v1965 = v1892[16];
              v1966 = &v1890[v1965];
              v1967 = &v1891[v1965];
              uint64_t v1968 = *((void *)v1967 + 1);
              *(void *)v1966 = *(void *)v1967;
              *((void *)v1966 + 1) = v1968;
              uint64_t v1969 = v1892[17];
              v1970 = &v1890[v1969];
              v1971 = &v1891[v1969];
              uint64_t v2555 = *((void *)v1971 + 1);
              *(void *)v1970 = *(void *)v1971;
              *((void *)v1970 + 1) = v2555;
              uint64_t v1972 = v1892[18];
              v1973 = &v1890[v1972];
              v1974 = &v1891[v1972];
              uint64_t v2516 = *((void *)v1974 + 1);
              *(void *)v1973 = *(void *)v1974;
              *((void *)v1973 + 1) = v2516;
              uint64_t v1975 = v1892[19];
              v1976 = &v1890[v1975];
              v1977 = &v1891[v1975];
              uint64_t v2489 = *((void *)v1977 + 1);
              *(void *)v1976 = *(void *)v1977;
              *((void *)v1976 + 1) = v2489;
              uint64_t v1978 = v1892[20];
              v1979 = &v1890[v1978];
              v1980 = &v1891[v1978];
              v2453 = (void *)*((void *)v1980 + 1);
              *(void *)v1979 = *(void *)v1980;
              *((void *)v1979 + 1) = v2453;
              *(void *)&v1890[v1892[21]] = *(void *)&v1891[v1892[21]];
              *(void *)&v1890[v1892[22]] = *(void *)&v1891[v1892[22]];
              uint64_t v1981 = v1892[23];
              v1982 = &v1890[v1981];
              v1983 = &v1891[v1981];
              *(void *)v1982 = *(void *)v1983;
              v1982[8] = v1983[8];
              uint64_t v1984 = v1892[24];
              v1985 = &v1890[v1984];
              v1986 = &v1891[v1984];
              *(void *)v1985 = *(void *)v1986;
              v1985[8] = v1986[8];
              uint64_t v1987 = v1892[25];
              v1988 = &v1890[v1987];
              v1989 = &v1891[v1987];
              uint64_t v1990 = *((void *)v1989 + 1);
              *(void *)v1988 = *(void *)v1989;
              *((void *)v1988 + 1) = v1990;
              uint64_t v1991 = v1892[26];
              v1992 = &v1890[v1991];
              v1993 = &v1891[v1991];
              uint64_t v1994 = *((void *)v1993 + 1);
              *(void *)v1992 = *(void *)v1993;
              *((void *)v1992 + 1) = v1994;
              uint64_t v1995 = v1892[27];
              v1996 = &v1890[v1995];
              v1997 = &v1891[v1995];
              uint64_t v1998 = *((void *)v1997 + 1);
              *(void *)v1996 = *(void *)v1997;
              *((void *)v1996 + 1) = v1998;
              uint64_t v1999 = v1892[28];
              v2000 = &v1890[v1999];
              v2001 = &v1891[v1999];
              uint64_t v2002 = *((void *)v2001 + 1);
              *(void *)v2000 = *(void *)v2001;
              *((void *)v2000 + 1) = v2002;
              uint64_t v2003 = v1892[29];
              v2004 = &v1890[v2003];
              v2005 = &v1891[v2003];
              *(void *)v2004 = *(void *)v2005;
              v2004[8] = v2005[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1890, 0, 1, (uint64_t)v1892);
              v633 = v2579;
              v634 = v2597;
              v635 = v2617;
            }
            uint64_t v2006 = v635[13];
            v2007 = &v633[v2006];
            v2008 = &v634[v2006];
            v2009 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v2008, 1, (uint64_t)v2009))
            {
              uint64_t v2010 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v2007, v2008, *(void *)(*(void *)(v2010 - 8) + 64));
            }
            else
            {
              uint64_t v2011 = *((void *)v2008 + 1);
              *(void *)v2007 = *(void *)v2008;
              *((void *)v2007 + 1) = v2011;
              uint64_t v2601 = *((void *)v2008 + 3);
              *((void *)v2007 + 2) = *((void *)v2008 + 2);
              *((void *)v2007 + 3) = v2601;
              uint64_t v2556 = *((void *)v2008 + 5);
              *((void *)v2007 + 4) = *((void *)v2008 + 4);
              *((void *)v2007 + 5) = v2556;
              uint64_t v2517 = *((void *)v2008 + 7);
              *((void *)v2007 + 6) = *((void *)v2008 + 6);
              *((void *)v2007 + 7) = v2517;
              uint64_t v2012 = *((void *)v2008 + 9);
              *((void *)v2007 + 8) = *((void *)v2008 + 8);
              *((void *)v2007 + 9) = v2012;
              uint64_t v2013 = *((void *)v2008 + 11);
              *((void *)v2007 + 10) = *((void *)v2008 + 10);
              *((void *)v2007 + 11) = v2013;
              v2007[96] = v2008[96];
              uint64_t v2014 = *((void *)v2008 + 14);
              *((void *)v2007 + 13) = *((void *)v2008 + 13);
              *((void *)v2007 + 14) = v2014;
              uint64_t v2015 = *((void *)v2008 + 16);
              *((void *)v2007 + 15) = *((void *)v2008 + 15);
              *((void *)v2007 + 16) = v2015;
              uint64_t v2016 = v2009[14];
              v2444 = &v2007[v2016];
              v2464 = &v2008[v2016];
              v2454 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2464, 1, (uint64_t)v2454))
              {
                uint64_t v2017 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2444, v2464, *(void *)(*(void *)(v2017 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2454 - 1) + 16))(v2444, v2464, v2454);
                __swift_storeEnumTagSinglePayload((uint64_t)v2444, 0, 1, (uint64_t)v2454);
              }
              uint64_t v2199 = v2009[15];
              v2200 = &v2007[v2199];
              v2201 = &v2008[v2199];
              uint64_t v2202 = *((void *)v2201 + 1);
              *(void *)v2200 = *(void *)v2201;
              *((void *)v2200 + 1) = v2202;
              uint64_t v2203 = v2009[16];
              v2204 = &v2007[v2203];
              v2205 = &v2008[v2203];
              uint64_t v2602 = *((void *)v2205 + 1);
              *(void *)v2204 = *(void *)v2205;
              *((void *)v2204 + 1) = v2602;
              uint64_t v2206 = v2009[17];
              v2207 = &v2007[v2206];
              v2208 = &v2008[v2206];
              uint64_t v2561 = *((void *)v2208 + 1);
              *(void *)v2207 = *(void *)v2208;
              *((void *)v2207 + 1) = v2561;
              uint64_t v2209 = v2009[18];
              v2210 = &v2007[v2209];
              v2211 = &v2008[v2209];
              uint64_t v2523 = *((void *)v2211 + 1);
              *(void *)v2210 = *(void *)v2211;
              *((void *)v2210 + 1) = v2523;
              uint64_t v2212 = v2009[19];
              v2213 = &v2007[v2212];
              v2214 = &v2008[v2212];
              uint64_t v2215 = *((void *)v2214 + 1);
              *(void *)v2213 = *(void *)v2214;
              *((void *)v2213 + 1) = v2215;
              *(void *)&v2007[v2009[20]] = *(void *)&v2008[v2009[20]];
              uint64_t v2216 = v2009[21];
              v2217 = &v2007[v2216];
              v2218 = &v2008[v2216];
              uint64_t v2219 = *((void *)v2218 + 1);
              *(void *)v2217 = *(void *)v2218;
              *((void *)v2217 + 1) = v2219;
              uint64_t v2220 = v2009[22];
              v2221 = &v2007[v2220];
              v2222 = &v2008[v2220];
              uint64_t v2223 = *((void *)v2222 + 1);
              *(void *)v2221 = *(void *)v2222;
              *((void *)v2221 + 1) = v2223;
              uint64_t v2224 = v2009[23];
              v2225 = &v2007[v2224];
              v2226 = &v2008[v2224];
              uint64_t v2227 = *((void *)v2226 + 1);
              *(void *)v2225 = *(void *)v2226;
              *((void *)v2225 + 1) = v2227;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v2007, 0, 1, (uint64_t)v2009);
              v633 = v2579;
              v635 = v2617;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v633, 0, 1, (uint64_t)v635);
          }
          uint64_t v2228 = v2656[20];
          v2229 = &v11[v2228];
          v2230 = &v12[v2228];
          uint64_t v2231 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2230, 1, v2231))
          {
            uint64_t v2232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2229, v2230, *(void *)(*(void *)(v2232 - 8) + 64));
          }
          else
          {
            uint64_t v2233 = *((void *)v2230 + 1);
            *(void *)v2229 = *(void *)v2230;
            *((void *)v2229 + 1) = v2233;
            uint64_t v2234 = *((void *)v2230 + 3);
            v2235 = (int *)v2231;
            *((void *)v2229 + 2) = *((void *)v2230 + 2);
            *((void *)v2229 + 3) = v2234;
            uint64_t v2236 = *((void *)v2230 + 5);
            *((void *)v2229 + 4) = *((void *)v2230 + 4);
            *((void *)v2229 + 5) = v2236;
            uint64_t v2237 = *((void *)v2230 + 7);
            *((void *)v2229 + 6) = *((void *)v2230 + 6);
            *((void *)v2229 + 7) = v2237;
            uint64_t v2238 = *((void *)v2230 + 9);
            *((void *)v2229 + 8) = *((void *)v2230 + 8);
            *((void *)v2229 + 9) = v2238;
            uint64_t v2239 = *((void *)v2230 + 11);
            *((void *)v2229 + 10) = *((void *)v2230 + 10);
            *((void *)v2229 + 11) = v2239;
            v2622 = v2235;
            uint64_t v2240 = v2235[10];
            v2583 = &v2230[v2240];
            v2603 = &v2229[v2240];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2583, 1, v2650))
            {
              uint64_t v2241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2603, v2583, *(void *)(*(void *)(v2241 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2603, v2583, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2603, 0, 1, v2650);
            }
            uint64_t v2242 = v2622[11];
            v2243 = &v2229[v2242];
            v2244 = &v2230[v2242];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2230[v2242], 1, v2650))
            {
              uint64_t v2245 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2243, v2244, *(void *)(*(void *)(v2245 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2243, v2244, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2243, 0, 1, v2650);
            }
            uint64_t v2246 = v2622[12];
            v2247 = &v2229[v2246];
            v2248 = &v2230[v2246];
            uint64_t v2249 = *((void *)v2248 + 1);
            *(void *)v2247 = *(void *)v2248;
            *((void *)v2247 + 1) = v2249;
            uint64_t v2250 = v2622[13];
            v2251 = &v2229[v2250];
            v2252 = &v2230[v2250];
            uint64_t v2253 = *((void *)v2252 + 1);
            *(void *)v2251 = *(void *)v2252;
            *((void *)v2251 + 1) = v2253;
            uint64_t v2254 = v2622[14];
            v2255 = &v2229[v2254];
            v2256 = &v2230[v2254];
            uint64_t v2257 = *((void *)v2256 + 1);
            *(void *)v2255 = *(void *)v2256;
            *((void *)v2255 + 1) = v2257;
            uint64_t v2258 = v2622[15];
            v2259 = &v2229[v2258];
            v2260 = &v2230[v2258];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2260, 1, v2650))
            {
              uint64_t v2261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2259, v2260, *(void *)(*(void *)(v2261 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2259, v2260, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2259, 0, 1, v2650);
            }
            uint64_t v2262 = v2622[16];
            v2263 = &v2229[v2262];
            v2264 = &v2230[v2262];
            uint64_t v2265 = *((void *)v2264 + 1);
            *(void *)v2263 = *(void *)v2264;
            *((void *)v2263 + 1) = v2265;
            uint64_t v2266 = v2622[17];
            v2267 = &v2229[v2266];
            v2268 = &v2230[v2266];
            uint64_t v2604 = *((void *)v2268 + 1);
            *(void *)v2267 = *(void *)v2268;
            *((void *)v2267 + 1) = v2604;
            uint64_t v2269 = v2622[18];
            v2270 = &v2229[v2269];
            v2271 = &v2230[v2269];
            uint64_t v2584 = *((void *)v2271 + 1);
            *(void *)v2270 = *(void *)v2271;
            *((void *)v2270 + 1) = v2584;
            uint64_t v2272 = v2622[19];
            v2273 = &v2229[v2272];
            v2274 = &v2230[v2272];
            uint64_t v2275 = *((void *)v2274 + 1);
            *(void *)v2273 = *(void *)v2274;
            *((void *)v2273 + 1) = v2275;
            uint64_t v2276 = v2622[20];
            v2277 = &v2229[v2276];
            v2278 = &v2230[v2276];
            uint64_t v2279 = *((void *)v2278 + 1);
            *(void *)v2277 = *(void *)v2278;
            *((void *)v2277 + 1) = v2279;
            uint64_t v2280 = v2622[21];
            v2281 = &v2229[v2280];
            v2282 = &v2230[v2280];
            uint64_t v2283 = *((void *)v2282 + 1);
            *(void *)v2281 = *(void *)v2282;
            *((void *)v2281 + 1) = v2283;
            uint64_t v2284 = v2622[22];
            v2285 = &v2229[v2284];
            v2286 = &v2230[v2284];
            uint64_t v2287 = *((void *)v2286 + 1);
            *(void *)v2285 = *(void *)v2286;
            *((void *)v2285 + 1) = v2287;
            uint64_t v2288 = v2622[23];
            v2289 = &v2229[v2288];
            v2290 = &v2230[v2288];
            uint64_t v2291 = *((void *)v2290 + 1);
            *(void *)v2289 = *(void *)v2290;
            *((void *)v2289 + 1) = v2291;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2229, 0, 1, (uint64_t)v2622);
          }
          uint64_t v2292 = v2656[21];
          v2293 = &v11[v2292];
          v2294 = &v12[v2292];
          v2295 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2294, 1, (uint64_t)v2295))
          {
            uint64_t v2296 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2293, v2294, *(void *)(*(void *)(v2296 - 8) + 64));
          }
          else
          {
            uint64_t v2297 = *((void *)v2294 + 1);
            *(void *)v2293 = *(void *)v2294;
            *((void *)v2293 + 1) = v2297;
            uint64_t v2298 = *((void *)v2294 + 3);
            *((void *)v2293 + 2) = *((void *)v2294 + 2);
            *((void *)v2293 + 3) = v2298;
            uint64_t v2299 = *((void *)v2294 + 5);
            *((void *)v2293 + 4) = *((void *)v2294 + 4);
            *((void *)v2293 + 5) = v2299;
            uint64_t v2300 = *((void *)v2294 + 7);
            *((void *)v2293 + 6) = *((void *)v2294 + 6);
            *((void *)v2293 + 7) = v2300;
            uint64_t v2605 = *((void *)v2294 + 9);
            *((void *)v2293 + 8) = *((void *)v2294 + 8);
            *((void *)v2293 + 9) = v2605;
            uint64_t v2585 = *((void *)v2294 + 11);
            *((void *)v2293 + 10) = *((void *)v2294 + 10);
            *((void *)v2293 + 11) = v2585;
            uint64_t v2301 = v2295[11];
            v2623 = &v2293[v2301];
            v2562 = &v2294[v2301];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2562, 1, v2650))
            {
              uint64_t v2302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2623, v2562, *(void *)(*(void *)(v2302 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2623, v2562, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2623, 0, 1, v2650);
            }
            uint64_t v2303 = v2295[12];
            v2304 = &v2293[v2303];
            v2305 = &v2294[v2303];
            uint64_t v2306 = *((void *)v2305 + 1);
            *(void *)v2304 = *(void *)v2305;
            *((void *)v2304 + 1) = v2306;
            *(void *)&v2293[v2295[13]] = *(void *)&v2294[v2295[13]];
            uint64_t v2307 = v2295[14];
            v2308 = &v2293[v2307];
            v2309 = &v2294[v2307];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2309, 1, v2650))
            {
              uint64_t v2310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2308, v2309, *(void *)(*(void *)(v2310 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2308, v2309, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2308, 0, 1, v2650);
            }
            *(void *)&v2293[v2295[15]] = *(void *)&v2294[v2295[15]];
            *(void *)&v2293[v2295[16]] = *(void *)&v2294[v2295[16]];
            uint64_t v2311 = v2295[17];
            v2312 = &v2293[v2311];
            v2313 = &v2294[v2311];
            uint64_t v2314 = *((void *)v2313 + 1);
            *(void *)v2312 = *(void *)v2313;
            *((void *)v2312 + 1) = v2314;
            *(void *)&v2293[v2295[18]] = *(void *)&v2294[v2295[18]];
            *(void *)&v2293[v2295[19]] = *(void *)&v2294[v2295[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2293, 0, 1, (uint64_t)v2295);
          }
          uint64_t v2315 = v2656[22];
          v2316 = &v11[v2315];
          v2317 = &v12[v2315];
          v2318 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2317, 1, (uint64_t)v2318))
          {
            uint64_t v2319 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2316, v2317, *(void *)(*(void *)(v2319 - 8) + 64));
          }
          else
          {
            uint64_t v2320 = *((void *)v2317 + 1);
            *(void *)v2316 = *(void *)v2317;
            *((void *)v2316 + 1) = v2320;
            uint64_t v2321 = *((void *)v2317 + 3);
            *((void *)v2316 + 2) = *((void *)v2317 + 2);
            *((void *)v2316 + 3) = v2321;
            uint64_t v2322 = *((void *)v2317 + 5);
            *((void *)v2316 + 4) = *((void *)v2317 + 4);
            *((void *)v2316 + 5) = v2322;
            uint64_t v2323 = *((void *)v2317 + 7);
            *((void *)v2316 + 6) = *((void *)v2317 + 6);
            *((void *)v2316 + 7) = v2323;
            uint64_t v2324 = v2318[8];
            v2624 = &v2316[v2324];
            v2325 = &v2317[v2324];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2325, 1, v2635))
            {
              uint64_t v2326 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2624, v2325, *(void *)(*(void *)(v2326 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2635 - 8) + 16))(v2624, v2325, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2624, 0, 1, v2635);
            }
            uint64_t v2327 = v2318[9];
            v2328 = &v2316[v2327];
            v2329 = &v2317[v2327];
            uint64_t v2330 = *((void *)v2329 + 1);
            *(void *)v2328 = *(void *)v2329;
            *((void *)v2328 + 1) = v2330;
            uint64_t v2331 = v2318[10];
            v2332 = &v2316[v2331];
            v2333 = &v2317[v2331];
            uint64_t v2334 = *((void *)v2333 + 1);
            *(void *)v2332 = *(void *)v2333;
            *((void *)v2332 + 1) = v2334;
            uint64_t v2335 = v2318[11];
            v2336 = &v2316[v2335];
            v2337 = &v2317[v2335];
            uint64_t v2338 = *((void *)v2337 + 1);
            *(void *)v2336 = *(void *)v2337;
            *((void *)v2336 + 1) = v2338;
            uint64_t v2339 = v2318[12];
            v2340 = &v2316[v2339];
            v2341 = &v2317[v2339];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2341, 1, v2650))
            {
              uint64_t v2342 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2340, v2341, *(void *)(*(void *)(v2342 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2340, v2341, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2340, 0, 1, v2650);
            }
            uint64_t v2343 = v2318[13];
            v2344 = &v2316[v2343];
            v2345 = &v2317[v2343];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2317[v2343], 1, v2650))
            {
              uint64_t v2346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2344, v2345, *(void *)(*(void *)(v2346 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2344, v2345, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2344, 0, 1, v2650);
            }
            uint64_t v2347 = v2318[14];
            v2348 = &v2316[v2347];
            v2349 = &v2317[v2347];
            *(void *)v2348 = *(void *)v2349;
            v2348[8] = v2349[8];
            uint64_t v2350 = v2318[15];
            v2351 = &v2316[v2350];
            v2352 = &v2317[v2350];
            uint64_t v2353 = *((void *)v2352 + 1);
            *(void *)v2351 = *(void *)v2352;
            *((void *)v2351 + 1) = v2353;
            uint64_t v2354 = v2318[16];
            v2355 = &v2316[v2354];
            v2356 = &v2317[v2354];
            uint64_t v2357 = *((void *)v2356 + 1);
            *(void *)v2355 = *(void *)v2356;
            *((void *)v2355 + 1) = v2357;
            uint64_t v2358 = v2318[17];
            v2359 = &v2316[v2358];
            v2360 = &v2317[v2358];
            uint64_t v2361 = *((void *)v2360 + 1);
            *(void *)v2359 = *(void *)v2360;
            *((void *)v2359 + 1) = v2361;
            uint64_t v2362 = v2318[18];
            v2363 = &v2316[v2362];
            v2364 = &v2317[v2362];
            uint64_t v2365 = *((void *)v2364 + 1);
            *(void *)v2363 = *(void *)v2364;
            *((void *)v2363 + 1) = v2365;
            uint64_t v2366 = v2318[19];
            v2367 = &v2316[v2366];
            v2368 = &v2317[v2366];
            uint64_t v2369 = *((void *)v2368 + 1);
            *(void *)v2367 = *(void *)v2368;
            *((void *)v2367 + 1) = v2369;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2316, 0, 1, (uint64_t)v2318);
          }
          uint64_t v1300 = v2656[23];
          goto LABEL_538;
        case 2u:
          uint64_t v45 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v45;
          uint64_t v46 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v46;
          uint64_t v47 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v47;
          uint64_t v48 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v49 = v48[7];
          size_t v50 = &v11[v49];
          uint64_t v51 = &v12[v49];
          uint64_t v52 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
          {
            uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
          }
          uint64_t v311 = v48[8];
          uint64_t v312 = &v11[v311];
          uint64_t v313 = &v12[v311];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v311], 1, v52))
          {
            uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v312, v313, *(void *)(*(void *)(v314 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v312, v313, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, v52);
          }
          uint64_t v478 = v48[9];
          v479 = &v11[v478];
          v480 = &v12[v478];
          uint64_t v481 = *((void *)v480 + 1);
          *(void *)v479 = *(void *)v480;
          *((void *)v479 + 1) = v481;
          *(void *)&v11[v48[10]] = *(void *)&v12[v48[10]];
          *(void *)&v11[v48[11]] = *(void *)&v12[v48[11]];
          uint64_t v482 = v48[12];
          v483 = &v11[v482];
          v484 = &v12[v482];
          uint64_t v485 = *((void *)v484 + 1);
          *(void *)v483 = *(void *)v484;
          *((void *)v483 + 1) = v485;
          uint64_t v486 = v48[13];
          v487 = &v11[v486];
          v488 = &v12[v486];
          uint64_t v489 = *(void *)&v12[v486];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v489)
          {
            uint64_t v490 = *((void *)v488 + 1);
            uint64_t v491 = *((void *)v488 + 2);
            *(void *)v487 = v489;
            *((void *)v487 + 1) = v490;
            uint64_t v492 = *((void *)v488 + 3);
            uint64_t v493 = *((void *)v488 + 4);
            *((void *)v487 + 2) = v491;
            *((void *)v487 + 3) = v492;
            *((void *)v487 + 4) = v493;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_540;
          }
          long long v637 = *((_OWORD *)v488 + 1);
          *(_OWORD *)v487 = *(_OWORD *)v488;
          *((_OWORD *)v487 + 1) = v637;
          *((void *)v487 + 4) = *((void *)v488 + 4);
          goto LABEL_542;
        case 3u:
          v2641 = a1;
          uint64_t v54 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v54;
          uint64_t v55 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v55;
          uint64_t v56 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v56;
          uint64_t v57 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v57;
          uint64_t v58 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v58;
          *((void *)v11 + 10) = *((void *)v12 + 10);
          v2657 = (int *)type metadata accessor for Photo(0);
          uint64_t v59 = v2657[11];
          v2587 = &v11[v59];
          v2608 = &v12[v59];
          uint64_t v60 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2627 = v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2608, 1, v60))
          {
            uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2587, v2608, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v2587, v2608, v60);
            __swift_storeEnumTagSinglePayload((uint64_t)v2587, 0, 1, v60);
          }
          *(void *)&v11[v2657[12]] = *(void *)&v12[v2657[12]];
          *(void *)&v11[v2657[13]] = *(void *)&v12[v2657[13]];
          *(void *)&v11[v2657[14]] = *(void *)&v12[v2657[14]];
          *(void *)&v11[v2657[15]] = *(void *)&v12[v2657[15]];
          uint64_t v315 = v2657[16];
          uint64_t v316 = &v11[v315];
          uint64_t v317 = &v12[v315];
          uint64_t v318 = *((void *)v317 + 1);
          *(void *)uint64_t v316 = *(void *)v317;
          *((void *)v316 + 1) = v318;
          uint64_t v319 = v2657[17];
          uint64_t v320 = &v11[v319];
          uint64_t v321 = &v12[v319];
          uint64_t v322 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          v323 = (int *)v322;
          swift_bridgeObjectRetain();
          uint64_t v324 = v321;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v322))
          {
            uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v320, v321, *(void *)(*(void *)(v325 - 8) + 64));
          }
          else
          {
            uint64_t v494 = *((void *)v321 + 1);
            *(void *)uint64_t v320 = *(void *)v321;
            *((void *)v320 + 1) = v494;
            uint64_t v495 = *(int *)(v322 + 20);
            v496 = &v320[v495];
            v497 = &v321[v495];
            uint64_t v498 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2595 = v320;
            v2615 = v323;
            v2573 = v324;
            if (__swift_getEnumTagSinglePayload((uint64_t)v497, 1, v498))
            {
              uint64_t v499 = (uint64_t)v320;
              uint64_t v500 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v496, v497, *(void *)(*(void *)(v500 - 8) + 64));
            }
            else
            {
              uint64_t v706 = *((void *)v497 + 1);
              *(void *)v496 = *(void *)v497;
              *((void *)v496 + 1) = v706;
              uint64_t v707 = *((void *)v497 + 3);
              *((void *)v496 + 2) = *((void *)v497 + 2);
              *((void *)v496 + 3) = v707;
              uint64_t v708 = *((void *)v497 + 5);
              *((void *)v496 + 4) = *((void *)v497 + 4);
              *((void *)v496 + 5) = v708;
              uint64_t v709 = *((void *)v497 + 7);
              *((void *)v496 + 6) = *((void *)v497 + 6);
              *((void *)v496 + 7) = v709;
              uint64_t v710 = *((void *)v497 + 9);
              *((void *)v496 + 8) = *((void *)v497 + 8);
              *((void *)v496 + 9) = v710;
              uint64_t v711 = *((void *)v497 + 11);
              *((void *)v496 + 10) = *((void *)v497 + 10);
              *((void *)v496 + 11) = v711;
              uint64_t v712 = *((void *)v497 + 13);
              *((void *)v496 + 12) = *((void *)v497 + 12);
              *((void *)v496 + 13) = v712;
              uint64_t v713 = *((void *)v497 + 15);
              *((void *)v496 + 14) = *((void *)v497 + 14);
              *((void *)v496 + 15) = v713;
              v496[128] = v497[128];
              *(_WORD *)(v496 + 129) = *(_WORD *)(v497 + 129);
              uint64_t v714 = *((void *)v497 + 18);
              *((void *)v496 + 17) = *((void *)v497 + 17);
              *((void *)v496 + 18) = v714;
              uint64_t v715 = *((void *)v497 + 20);
              *((void *)v496 + 19) = *((void *)v497 + 19);
              *((void *)v496 + 20) = v715;
              uint64_t v716 = *((void *)v497 + 22);
              *((void *)v496 + 21) = *((void *)v497 + 21);
              *((void *)v496 + 22) = v716;
              uint64_t v717 = *((void *)v497 + 24);
              *((void *)v496 + 23) = *((void *)v497 + 23);
              *((void *)v496 + 24) = v717;
              uint64_t v718 = *((void *)v497 + 26);
              *((void *)v496 + 25) = *((void *)v497 + 25);
              *((void *)v496 + 26) = v718;
              uint64_t v719 = *((void *)v497 + 28);
              *((void *)v496 + 27) = *((void *)v497 + 27);
              *((void *)v496 + 28) = v719;
              uint64_t v720 = *((void *)v497 + 30);
              *((void *)v496 + 29) = *((void *)v497 + 29);
              *((void *)v496 + 30) = v720;
              uint64_t v2498 = *((void *)v497 + 32);
              *((void *)v496 + 31) = *((void *)v497 + 31);
              *((void *)v496 + 32) = v2498;
              uint64_t v721 = *((void *)v497 + 34);
              *((void *)v496 + 33) = *((void *)v497 + 33);
              *((void *)v496 + 34) = v721;
              uint64_t v722 = *((void *)v497 + 36);
              *((void *)v496 + 35) = *((void *)v497 + 35);
              *((void *)v496 + 36) = v722;
              uint64_t v723 = *((void *)v497 + 38);
              *((void *)v496 + 37) = *((void *)v497 + 37);
              *((void *)v496 + 38) = v723;
              uint64_t v724 = *((void *)v497 + 40);
              *((void *)v496 + 39) = *((void *)v497 + 39);
              *((void *)v496 + 40) = v724;
              uint64_t v725 = *((void *)v497 + 42);
              *((void *)v496 + 41) = *((void *)v497 + 41);
              *((void *)v496 + 42) = v725;
              uint64_t v726 = *((void *)v497 + 44);
              *((void *)v496 + 43) = *((void *)v497 + 43);
              *((void *)v496 + 44) = v726;
              uint64_t v727 = *((void *)v497 + 46);
              *((void *)v496 + 45) = *((void *)v497 + 45);
              *((void *)v496 + 46) = v727;
              uint64_t v728 = *((void *)v497 + 47);
              v496[384] = v497[384];
              *((void *)v496 + 47) = v728;
              uint64_t v729 = *((void *)v497 + 50);
              *((void *)v496 + 49) = *((void *)v497 + 49);
              *((void *)v496 + 50) = v729;
              uint64_t v730 = *((void *)v497 + 52);
              *((void *)v496 + 51) = *((void *)v497 + 51);
              *((void *)v496 + 52) = v730;
              uint64_t v731 = *(int *)(v498 + 140);
              v2531 = &v496[v731];
              v732 = &v497[v731];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v732, 1, v2627))
              {
                uint64_t v733 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2531, v732, *(void *)(*(void *)(v733 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2531, v732, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2531, 0, 1, v2627);
              }
              uint64_t v759 = *(int *)(v498 + 144);
              v760 = &v496[v759];
              v761 = &v497[v759];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v497[v759], 1, v2627))
              {
                uint64_t v762 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v760, v761, *(void *)(*(void *)(v762 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v760, v761, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v760, 0, 1, v2627);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v496, 0, 1, v498);
              uint64_t v499 = (uint64_t)v320;
              v323 = v2615;
            }
            uint64_t v763 = v323[6];
            v764 = (void *)(v499 + v763);
            v765 = (void *)((char *)v324 + v763);
            uint64_t v766 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v765, 1, v766))
            {
              uint64_t v767 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v764, v765, *(void *)(*(void *)(v767 - 8) + 64));
            }
            else
            {
              uint64_t v768 = v765[1];
              void *v764 = *v765;
              v764[1] = v768;
              uint64_t v769 = v765[3];
              v764[2] = v765[2];
              v764[3] = v769;
              uint64_t v770 = v765[5];
              v764[4] = v765[4];
              v764[5] = v770;
              uint64_t v771 = v765[7];
              v764[6] = v765[6];
              v764[7] = v771;
              uint64_t v772 = v765[9];
              v764[8] = v765[8];
              v764[9] = v772;
              uint64_t v773 = v765[11];
              v764[10] = v765[10];
              v764[11] = v773;
              uint64_t v774 = v765[13];
              v764[12] = v765[12];
              v764[13] = v774;
              uint64_t v775 = v765[15];
              v764[14] = v765[14];
              v764[15] = v775;
              *((unsigned char *)v764 + 128) = *((unsigned char *)v765 + 128);
              *(_WORD *)((char *)v764 + 129) = *(_WORD *)((char *)v765 + 129);
              uint64_t v776 = v765[18];
              v764[17] = v765[17];
              v764[18] = v776;
              uint64_t v777 = v765[20];
              v764[19] = v765[19];
              v764[20] = v777;
              uint64_t v778 = v765[22];
              v764[21] = v765[21];
              v764[22] = v778;
              uint64_t v779 = v765[24];
              v764[23] = v765[23];
              v764[24] = v779;
              uint64_t v2475 = v765[26];
              v764[25] = v765[25];
              v764[26] = v2475;
              uint64_t v780 = v765[28];
              v764[27] = v765[27];
              v764[28] = v780;
              uint64_t v781 = v765[30];
              v764[29] = v765[29];
              v764[30] = v781;
              uint64_t v782 = v765[32];
              v764[31] = v765[31];
              v764[32] = v782;
              uint64_t v783 = v765[34];
              v764[33] = v765[33];
              v764[34] = v783;
              uint64_t v784 = v765[36];
              uint64_t v785 = v765[35];
              *((unsigned char *)v764 + 296) = *((unsigned char *)v765 + 296);
              v764[35] = v785;
              v764[36] = v784;
              uint64_t v786 = *(int *)(v766 + 112);
              v2533 = (char *)v764 + v786;
              v787 = (char *)v765 + v786;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v787, 1, v2627))
              {
                uint64_t v788 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2533, v787, *(void *)(*(void *)(v788 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2533, v787, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2533, 0, 1, v2627);
              }
              uint64_t v789 = *(int *)(v766 + 116);
              v790 = (char *)v764 + v789;
              v791 = (char *)v765 + v789;
              if (__swift_getEnumTagSinglePayload((uint64_t)v765 + v789, 1, v2627))
              {
                uint64_t v792 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v790, v791, *(void *)(*(void *)(v792 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v790, v791, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v790, 0, 1, v2627);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v764, 0, 1, v766);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
            }
            uint64_t v793 = v323[7];
            v794 = (void *)(v499 + v793);
            v795 = (void *)((char *)v324 + v793);
            v796 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v795, 1, (uint64_t)v796))
            {
              uint64_t v797 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v794, v795, *(void *)(*(void *)(v797 - 8) + 64));
            }
            else
            {
              uint64_t v798 = v795[1];
              void *v794 = *v795;
              v794[1] = v798;
              uint64_t v799 = v795[3];
              v794[2] = v795[2];
              v794[3] = v799;
              uint64_t v800 = v795[5];
              v794[4] = v795[4];
              v794[5] = v800;
              uint64_t v801 = v795[7];
              v794[6] = v795[6];
              v794[7] = v801;
              uint64_t v802 = v795[9];
              v794[8] = v795[8];
              v794[9] = v802;
              uint64_t v803 = v795[11];
              v794[10] = v795[10];
              v794[11] = v803;
              uint64_t v804 = v795[13];
              v794[12] = v795[12];
              v794[13] = v804;
              uint64_t v805 = v795[15];
              v794[14] = v795[14];
              v794[15] = v805;
              *((unsigned char *)v794 + 128) = *((unsigned char *)v795 + 128);
              *(_WORD *)((char *)v794 + 129) = *(_WORD *)((char *)v795 + 129);
              uint64_t v806 = v795[18];
              v794[17] = v795[17];
              v794[18] = v806;
              uint64_t v807 = v795[20];
              v794[19] = v795[19];
              v794[20] = v807;
              uint64_t v808 = v795[22];
              v794[21] = v795[21];
              v794[22] = v808;
              __dstc = (void *)v795[24];
              v794[23] = v795[23];
              v794[24] = __dstc;
              uint64_t v809 = v795[26];
              v794[25] = v795[25];
              v794[26] = v809;
              uint64_t v810 = v795[28];
              v794[27] = v795[27];
              v794[28] = v810;
              uint64_t v2500 = v795[30];
              v794[29] = v795[29];
              v794[30] = v2500;
              uint64_t v811 = v795[32];
              v794[31] = v795[31];
              v794[32] = v811;
              uint64_t v812 = v795[34];
              v794[33] = v795[33];
              v794[34] = v812;
              uint64_t v813 = v795[36];
              uint64_t v814 = v795[35];
              *((unsigned char *)v794 + 296) = *((unsigned char *)v795 + 296);
              v794[35] = v814;
              v794[36] = v813;
              uint64_t v815 = v795[39];
              v794[38] = v795[38];
              v794[39] = v815;
              uint64_t v816 = v796[29];
              v2534 = (char *)v794 + v816;
              v817 = (char *)v795 + v816;
              uint64_t v818 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v817, 1, v818))
              {
                uint64_t v819 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2534, v817, *(void *)(*(void *)(v819 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v818 - 8) + 16))(v2534, v817, v818);
                __swift_storeEnumTagSinglePayload((uint64_t)v2534, 0, 1, v818);
              }
              uint64_t v820 = v796[30];
              v821 = (void *)((char *)v794 + v820);
              v822 = (void *)((char *)v795 + v820);
              uint64_t v823 = v822[1];
              void *v821 = *v822;
              v821[1] = v823;
              uint64_t v824 = v796[31];
              v825 = (char *)v794 + v824;
              v826 = (char *)v795 + v824;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v826, 1, v2627))
              {
                uint64_t v827 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v825, v826, *(void *)(*(void *)(v827 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v825, v826, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v825, 0, 1, v2627);
              }
              uint64_t v828 = v796[32];
              v829 = (char *)v794 + v828;
              v830 = (char *)v795 + v828;
              if (__swift_getEnumTagSinglePayload((uint64_t)v795 + v828, 1, v2627))
              {
                uint64_t v831 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v829, v830, *(void *)(*(void *)(v831 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v829, v830, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v829, 0, 1, v2627);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v794, 0, 1, (uint64_t)v796);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
            }
            uint64_t v832 = v323[8];
            v833 = (void *)(v499 + v832);
            v834 = (void *)((char *)v324 + v832);
            uint64_t v835 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v834, 1, v835))
            {
              uint64_t v836 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v833, v834, *(void *)(*(void *)(v836 - 8) + 64));
            }
            else
            {
              uint64_t v837 = v834[1];
              void *v833 = *v834;
              v833[1] = v837;
              uint64_t v838 = v834[3];
              v833[2] = v834[2];
              v833[3] = v838;
              uint64_t v839 = v834[5];
              v833[4] = v834[4];
              v833[5] = v839;
              uint64_t v840 = v834[7];
              v833[6] = v834[6];
              v833[7] = v840;
              uint64_t v841 = v834[9];
              v833[8] = v834[8];
              v833[9] = v841;
              uint64_t v842 = v834[11];
              v833[10] = v834[10];
              v833[11] = v842;
              uint64_t v843 = v834[13];
              v833[12] = v834[12];
              v833[13] = v843;
              uint64_t v844 = v834[15];
              v833[14] = v834[14];
              v833[15] = v844;
              *((unsigned char *)v833 + 128) = *((unsigned char *)v834 + 128);
              *(_WORD *)((char *)v833 + 129) = *(_WORD *)((char *)v834 + 129);
              uint64_t v845 = v834[18];
              v833[17] = v834[17];
              v833[18] = v845;
              uint64_t v846 = v834[20];
              v833[19] = v834[19];
              v833[20] = v846;
              uint64_t v847 = v834[22];
              v833[21] = v834[21];
              v833[22] = v847;
              uint64_t v848 = v834[24];
              v833[23] = v834[23];
              v833[24] = v848;
              uint64_t v849 = v834[26];
              v833[25] = v834[25];
              v833[26] = v849;
              uint64_t v850 = v834[28];
              v833[27] = v834[27];
              v833[28] = v850;
              uint64_t v851 = v834[30];
              v833[29] = v834[29];
              v833[30] = v851;
              uint64_t v852 = v834[32];
              v833[31] = v834[31];
              v833[32] = v852;
              uint64_t v853 = v834[34];
              uint64_t v854 = v834[33];
              *((unsigned char *)v833 + 280) = *((unsigned char *)v834 + 280);
              v833[33] = v854;
              v833[34] = v853;
              uint64_t v855 = v834[37];
              v833[36] = v834[36];
              v833[37] = v855;
              uint64_t v856 = *(int *)(v835 + 108);
              v2535 = (char *)v833 + v856;
              v857 = (char *)v834 + v856;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v857, 1, v2627))
              {
                uint64_t v858 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2535, v857, *(void *)(*(void *)(v858 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2535, v857, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2535, 0, 1, v2627);
              }
              uint64_t v859 = *(int *)(v835 + 112);
              v860 = (char *)v833 + v859;
              v861 = (char *)v834 + v859;
              if (__swift_getEnumTagSinglePayload((uint64_t)v834 + v859, 1, v2627))
              {
                uint64_t v862 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v860, v861, *(void *)(*(void *)(v862 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v860, v861, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v860, 0, 1, v2627);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v833, 0, 1, v835);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
            }
            uint64_t v863 = v323[9];
            v864 = (void *)(v499 + v863);
            v865 = (void *)((char *)v324 + v863);
            v866 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v865, 1, (uint64_t)v866))
            {
              uint64_t v867 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v864, v865, *(void *)(*(void *)(v867 - 8) + 64));
            }
            else
            {
              uint64_t v868 = v865[1];
              void *v864 = *v865;
              v864[1] = v868;
              uint64_t v869 = v865[3];
              v864[2] = v865[2];
              v864[3] = v869;
              uint64_t v870 = v865[5];
              v864[4] = v865[4];
              v864[5] = v870;
              uint64_t v871 = v865[7];
              v864[6] = v865[6];
              v864[7] = v871;
              uint64_t v872 = v865[9];
              v864[8] = v865[8];
              v864[9] = v872;
              uint64_t v873 = v865[11];
              v864[10] = v865[10];
              v864[11] = v873;
              uint64_t v874 = v865[13];
              v864[12] = v865[12];
              v864[13] = v874;
              uint64_t v875 = v865[15];
              v864[14] = v865[14];
              v864[15] = v875;
              *((unsigned char *)v864 + 128) = *((unsigned char *)v865 + 128);
              *(_WORD *)((char *)v864 + 129) = *(_WORD *)((char *)v865 + 129);
              uint64_t v876 = v865[18];
              v864[17] = v865[17];
              v864[18] = v876;
              uint64_t v877 = v865[20];
              v864[19] = v865[19];
              v864[20] = v877;
              uint64_t v878 = v865[22];
              v864[21] = v865[21];
              v864[22] = v878;
              uint64_t v879 = v865[24];
              v864[23] = v865[23];
              v864[24] = v879;
              uint64_t v880 = v865[26];
              v864[25] = v865[25];
              v864[26] = v880;
              uint64_t v881 = v865[28];
              v864[27] = v865[27];
              v864[28] = v881;
              uint64_t v882 = v865[30];
              v864[29] = v865[29];
              v864[30] = v882;
              v864[31] = v865[31];
              uint64_t v883 = v866[24];
              v2501 = (char *)v864 + v883;
              v884 = (char *)v865 + v883;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v884, 1, v2627))
              {
                uint64_t v885 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2501, v884, *(void *)(*(void *)(v885 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2501, v884, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2501, 0, 1, v2627);
              }
              uint64_t v886 = v866[25];
              v887 = (char *)v864 + v886;
              v888 = (char *)v865 + v886;
              if (__swift_getEnumTagSinglePayload((uint64_t)v865 + v886, 1, v2627))
              {
                uint64_t v889 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v887, v888, *(void *)(*(void *)(v889 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v887, v888, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v887, 0, 1, v2627);
              }
              uint64_t v890 = v866[26];
              v891 = (char *)v864 + v890;
              v892 = (char *)v865 + v890;
              uint64_t v893 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v892, 1, v893))
              {
                uint64_t v894 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v891, v892, *(void *)(*(void *)(v894 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v893 - 8) + 16))(v891, v892, v893);
                __swift_storeEnumTagSinglePayload((uint64_t)v891, 0, 1, v893);
              }
              uint64_t v324 = v2573;
              __swift_storeEnumTagSinglePayload((uint64_t)v864, 0, 1, (uint64_t)v866);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
            }
            uint64_t v895 = v323[10];
            v896 = (void *)(v499 + v895);
            v897 = (void *)((char *)v324 + v895);
            uint64_t v898 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v897, 1, v898))
            {
              uint64_t v899 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v896, v897, *(void *)(*(void *)(v899 - 8) + 64));
            }
            else
            {
              uint64_t v900 = v897[1];
              void *v896 = *v897;
              v896[1] = v900;
              uint64_t v901 = v897[3];
              v896[2] = v897[2];
              v896[3] = v901;
              uint64_t v902 = v897[5];
              v896[4] = v897[4];
              v896[5] = v902;
              uint64_t v903 = v897[7];
              v896[6] = v897[6];
              v896[7] = v903;
              uint64_t v904 = v897[9];
              v896[8] = v897[8];
              v896[9] = v904;
              uint64_t v905 = v897[11];
              v896[10] = v897[10];
              v896[11] = v905;
              uint64_t v906 = v897[13];
              v896[12] = v897[12];
              v896[13] = v906;
              uint64_t v907 = v897[15];
              v896[14] = v897[14];
              v896[15] = v907;
              *((unsigned char *)v896 + 128) = *((unsigned char *)v897 + 128);
              *(_WORD *)((char *)v896 + 129) = *(_WORD *)((char *)v897 + 129);
              uint64_t v908 = v897[18];
              v896[17] = v897[17];
              v896[18] = v908;
              uint64_t v909 = v897[20];
              v896[19] = v897[19];
              v896[20] = v909;
              uint64_t v910 = v897[22];
              v896[21] = v897[21];
              v896[22] = v910;
              uint64_t v911 = v897[24];
              v896[23] = v897[23];
              v896[24] = v911;
              uint64_t v912 = v897[26];
              v896[25] = v897[25];
              v896[26] = v912;
              v896[27] = v897[27];
              uint64_t v913 = *(int *)(v898 + 88);
              v2502 = (int *)v898;
              v2536 = (char *)v896 + v913;
              v914 = (char *)v897 + v913;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v914, 1, v2627))
              {
                uint64_t v915 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2536, v914, *(void *)(*(void *)(v915 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2536, v914, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2536, 0, 1, v2627);
              }
              uint64_t v916 = v2502[23];
              v917 = (char *)v896 + v916;
              v918 = (char *)v897 + v916;
              if (__swift_getEnumTagSinglePayload((uint64_t)v897 + v916, 1, v2627))
              {
                uint64_t v919 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v917, v918, *(void *)(*(void *)(v919 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v917, v918, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v917, 0, 1, v2627);
              }
              uint64_t v920 = v2502[24];
              v921 = (char *)v896 + v920;
              v922 = (char *)v897 + v920;
              *(void *)v921 = *(void *)v922;
              v921[8] = v922[8];
              uint64_t v923 = v2502[25];
              v924 = (char *)v896 + v923;
              v925 = (char *)v897 + v923;
              uint64_t v926 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v925, 1, v926))
              {
                uint64_t v927 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v924, v925, *(void *)(*(void *)(v927 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v926 - 8) + 16))(v924, v925, v926);
                __swift_storeEnumTagSinglePayload((uint64_t)v924, 0, 1, v926);
              }
              uint64_t v324 = v2573;
              __swift_storeEnumTagSinglePayload((uint64_t)v896, 0, 1, (uint64_t)v2502);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
            }
            uint64_t v928 = v323[11];
            v929 = (void *)(v499 + v928);
            v930 = (void *)((char *)v324 + v928);
            v931 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v930, 1, (uint64_t)v931))
            {
              uint64_t v932 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v929, v930, *(void *)(*(void *)(v932 - 8) + 64));
            }
            else
            {
              uint64_t v933 = v930[1];
              void *v929 = *v930;
              v929[1] = v933;
              uint64_t v2503 = v930[3];
              v929[2] = v930[2];
              v929[3] = v2503;
              uint64_t v934 = v930[5];
              v929[4] = v930[4];
              v929[5] = v934;
              uint64_t v935 = v930[7];
              v929[6] = v930[6];
              v929[7] = v935;
              uint64_t v936 = v930[9];
              v929[8] = v930[8];
              v929[9] = v936;
              uint64_t v937 = v930[11];
              v929[10] = v930[10];
              v929[11] = v937;
              *((unsigned char *)v929 + 96) = *((unsigned char *)v930 + 96);
              uint64_t v938 = v930[14];
              v929[13] = v930[13];
              v929[14] = v938;
              uint64_t v939 = v931[13];
              v2537 = (char *)v929 + v939;
              v940 = (char *)v930 + v939;
              uint64_t v941 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v940, 1, v941))
              {
                uint64_t v942 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2537, v940, *(void *)(*(void *)(v942 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v941 - 8) + 16))(v2537, v940, v941);
                __swift_storeEnumTagSinglePayload((uint64_t)v2537, 0, 1, v941);
              }
              uint64_t v943 = v931[14];
              v944 = (char *)v929 + v943;
              v945 = (char *)v930 + v943;
              if (__swift_getEnumTagSinglePayload((uint64_t)v930 + v943, 1, v941))
              {
                uint64_t v946 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v944, v945, *(void *)(*(void *)(v946 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v941 - 8) + 16))(v944, v945, v941);
                __swift_storeEnumTagSinglePayload((uint64_t)v944, 0, 1, v941);
              }
              uint64_t v947 = v931[15];
              v948 = (void *)((char *)v929 + v947);
              v949 = (void *)((char *)v930 + v947);
              uint64_t v950 = v949[1];
              void *v948 = *v949;
              v948[1] = v950;
              uint64_t v951 = v931[16];
              v952 = (void *)((char *)v929 + v951);
              v953 = (void *)((char *)v930 + v951);
              uint64_t v2538 = v953[1];
              void *v952 = *v953;
              v952[1] = v2538;
              uint64_t v954 = v931[17];
              v955 = (void *)((char *)v929 + v954);
              v956 = (void *)((char *)v930 + v954);
              uint64_t v957 = v956[1];
              void *v955 = *v956;
              v955[1] = v957;
              uint64_t v958 = v931[18];
              v2504 = (char *)v929 + v958;
              v2476 = (char *)v930 + v958;
              uint64_t v959 = type metadata accessor for DateComponents();
              v960 = *(void (**)(char *, char *, uint64_t))(*(void *)(v959 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v960(v2504, v2476, v959);
              v960((char *)v929 + v931[19], (char *)v930 + v931[19], v959);
              uint64_t v961 = v931[20];
              v962 = (void *)((char *)v929 + v961);
              v963 = (void *)((char *)v930 + v961);
              uint64_t v964 = v963[1];
              void *v962 = *v963;
              v962[1] = v964;
              uint64_t v965 = v931[21];
              v966 = (void *)((char *)v929 + v965);
              v967 = (void *)((char *)v930 + v965);
              v2457 = (void *)v967[1];
              void *v966 = *v967;
              v966[1] = v2457;
              uint64_t v968 = v931[22];
              v969 = (void *)((char *)v929 + v968);
              v970 = (void *)((char *)v930 + v968);
              uint64_t v2505 = v970[1];
              void *v969 = *v970;
              v969[1] = v2505;
              uint64_t v971 = v931[23];
              v972 = (void *)((char *)v929 + v971);
              v973 = (void *)((char *)v930 + v971);
              uint64_t v2477 = v973[1];
              void *v972 = *v973;
              v972[1] = v2477;
              uint64_t v974 = v931[24];
              v975 = (void *)((char *)v929 + v974);
              v976 = (void *)((char *)v930 + v974);
              uint64_t v2466 = v976[1];
              void *v975 = *v976;
              v975[1] = v2466;
              uint64_t v977 = v931[25];
              v978 = (void *)((char *)v929 + v977);
              v979 = (void *)((char *)v930 + v977);
              v2447 = (void *)v979[1];
              void *v978 = *v979;
              v978[1] = v2447;
              uint64_t v980 = v931[26];
              v981 = (void *)((char *)v929 + v980);
              v982 = (void *)((char *)v930 + v980);
              v2439 = (void *)v982[1];
              void *v981 = *v982;
              v981[1] = v2439;
              uint64_t v983 = v931[27];
              v984 = (void *)((char *)v929 + v983);
              v985 = (void *)((char *)v930 + v983);
              v2430 = (void *)v985[1];
              void *v984 = *v985;
              v984[1] = v2430;
              uint64_t v986 = v931[28];
              v987 = (void *)((char *)v929 + v986);
              v988 = (void *)((char *)v930 + v986);
              v2422 = (void *)v988[1];
              void *v987 = *v988;
              v987[1] = v2422;
              uint64_t v989 = v931[29];
              v990 = (void *)((char *)v929 + v989);
              v991 = (void *)((char *)v930 + v989);
              v2417 = (void *)v991[1];
              void *v990 = *v991;
              v990[1] = v2417;
              uint64_t v992 = v931[30];
              v993 = (void *)((char *)v929 + v992);
              v994 = (void *)((char *)v930 + v992);
              v2412 = (void *)v994[1];
              void *v993 = *v994;
              v993[1] = v2412;
              uint64_t v995 = v931[31];
              v996 = (void *)((char *)v929 + v995);
              v997 = (void *)((char *)v930 + v995);
              v2408 = (void *)v997[1];
              void *v996 = *v997;
              v996[1] = v2408;
              uint64_t v998 = v931[32];
              v999 = (void *)((char *)v929 + v998);
              v1000 = (void *)((char *)v930 + v998);
              uint64_t v1001 = v1000[1];
              void *v999 = *v1000;
              v999[1] = v1001;
              *(void *)((char *)v929 + v931[33]) = *(void *)((char *)v930 + v931[33]);
              *(void *)((char *)v929 + v931[34]) = *(void *)((char *)v930 + v931[34]);
              uint64_t v1002 = v931[35];
              v1003 = (void *)((char *)v929 + v1002);
              v1004 = (void *)((char *)v930 + v1002);
              uint64_t v1005 = v1004[1];
              void *v1003 = *v1004;
              v1003[1] = v1005;
              uint64_t v1006 = v931[36];
              v1007 = (void *)((char *)v929 + v1006);
              v1008 = (void *)((char *)v930 + v1006);
              uint64_t v1009 = v1008[1];
              void *v1007 = *v1008;
              v1007[1] = v1009;
              uint64_t v1010 = v931[37];
              v1011 = (void *)((char *)v929 + v1010);
              v1012 = (void *)((char *)v930 + v1010);
              uint64_t v1013 = v1012[1];
              void *v1011 = *v1012;
              v1011[1] = v1013;
              uint64_t v1014 = v931[38];
              v2539 = (char *)v929 + v1014;
              v1015 = (char *)v930 + v1014;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1015, 1, v2627))
              {
                uint64_t v1016 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2539, v1015, *(void *)(*(void *)(v1016 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2539, v1015, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2539, 0, 1, v2627);
              }
              uint64_t v1017 = v931[39];
              v1018 = (void *)((char *)v929 + v1017);
              v1019 = (void *)((char *)v930 + v1017);
              uint64_t v1020 = v1019[1];
              void *v1018 = *v1019;
              v1018[1] = v1020;
              uint64_t v1021 = v931[40];
              v1022 = (void *)((char *)v929 + v1021);
              v1023 = (void *)((char *)v930 + v1021);
              uint64_t v1024 = v1023[1];
              void *v1022 = *v1023;
              v1022[1] = v1024;
              uint64_t v1025 = v931[41];
              v1026 = (char *)v929 + v1025;
              v1027 = (char *)v930 + v1025;
              v1026[8] = v1027[8];
              *(void *)v1026 = *(void *)v1027;
              uint64_t v1028 = v931[42];
              v1029 = (void *)((char *)v929 + v1028);
              v1030 = (void *)((char *)v930 + v1028);
              uint64_t v1031 = v1030[1];
              void *v1029 = *v1030;
              v1029[1] = v1031;
              uint64_t v1032 = v931[43];
              v1033 = (char *)v929 + v1032;
              v1034 = (char *)v930 + v1032;
              *(_OWORD *)v1033 = *(_OWORD *)v1034;
              *(void *)(v1033 + 13) = *(void *)(v1034 + 13);
              uint64_t v1035 = v931[44];
              v1036 = (void *)((char *)v929 + v1035);
              v1037 = (void *)((char *)v930 + v1035);
              uint64_t v1038 = v1037[1];
              void *v1036 = *v1037;
              v1036[1] = v1038;
              uint64_t v1039 = v931[45];
              v1040 = (void *)((char *)v929 + v1039);
              v1041 = (void *)((char *)v930 + v1039);
              uint64_t v1042 = v1041[1];
              void *v1040 = *v1041;
              v1040[1] = v1042;
              uint64_t v1043 = v931[46];
              v1044 = (void *)((char *)v929 + v1043);
              v1045 = (void *)((char *)v930 + v1043);
              uint64_t v1046 = v1045[1];
              void *v1044 = *v1045;
              v1044[1] = v1046;
              uint64_t v1047 = v931[47];
              v1048 = (void *)((char *)v929 + v1047);
              v1049 = (void *)((char *)v930 + v1047);
              uint64_t v1050 = v1049[1];
              void *v1048 = *v1049;
              v1048[1] = v1050;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v929, 0, 1, (uint64_t)v931);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
              uint64_t v324 = v2573;
            }
            uint64_t v1051 = v323[12];
            v1052 = (void *)(v499 + v1051);
            v1053 = (void *)((char *)v324 + v1051);
            v1054 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1053, 1, (uint64_t)v1054))
            {
              uint64_t v1055 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1052, v1053, *(void *)(*(void *)(v1055 - 8) + 64));
            }
            else
            {
              uint64_t v1056 = v1053[1];
              void *v1052 = *v1053;
              v1052[1] = v1056;
              uint64_t v2506 = v1053[3];
              v1052[2] = v1053[2];
              v1052[3] = v2506;
              uint64_t v1057 = v1053[5];
              v1052[4] = v1053[4];
              v1052[5] = v1057;
              uint64_t v1058 = v1053[7];
              v1052[6] = v1053[6];
              v1052[7] = v1058;
              uint64_t v1059 = v1053[9];
              v1052[8] = v1053[8];
              v1052[9] = v1059;
              uint64_t v1060 = v1053[11];
              v1052[10] = v1053[10];
              v1052[11] = v1060;
              *((unsigned char *)v1052 + 96) = *((unsigned char *)v1053 + 96);
              uint64_t v1061 = v1053[14];
              v1052[13] = v1053[13];
              v1052[14] = v1061;
              uint64_t v1062 = v1053[16];
              v1052[15] = v1053[15];
              v1052[16] = v1062;
              uint64_t v1063 = v1054[14];
              v2540 = (char *)v1052 + v1063;
              v1064 = (char *)v1053 + v1063;
              uint64_t v1065 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1064, 1, v1065))
              {
                uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2540, v1064, *(void *)(*(void *)(v1066 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1065 - 8) + 16))(v2540, v1064, v1065);
                __swift_storeEnumTagSinglePayload((uint64_t)v2540, 0, 1, v1065);
              }
              uint64_t v1067 = v1054[15];
              v1068 = (char *)v1052 + v1067;
              v1069 = (char *)v1053 + v1067;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1053 + v1067, 1, v1065))
              {
                uint64_t v1070 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1068, v1069, *(void *)(*(void *)(v1070 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1065 - 8) + 16))(v1068, v1069, v1065);
                __swift_storeEnumTagSinglePayload((uint64_t)v1068, 0, 1, v1065);
              }
              uint64_t v1071 = v1054[16];
              v1072 = (void *)((char *)v1052 + v1071);
              v1073 = (void *)((char *)v1053 + v1071);
              uint64_t v1074 = v1073[1];
              void *v1072 = *v1073;
              v1072[1] = v1074;
              uint64_t v1075 = v1054[17];
              v1076 = (void *)((char *)v1052 + v1075);
              v1077 = (void *)((char *)v1053 + v1075);
              uint64_t v1078 = v1077[1];
              void *v1076 = *v1077;
              v1076[1] = v1078;
              uint64_t v1079 = v1054[18];
              v1080 = (void *)((char *)v1052 + v1079);
              v1081 = (void *)((char *)v1053 + v1079);
              uint64_t v2541 = v1081[1];
              void *v1080 = *v1081;
              v1080[1] = v2541;
              uint64_t v1082 = v1054[19];
              v1083 = (void *)((char *)v1052 + v1082);
              v1084 = (void *)((char *)v1053 + v1082);
              uint64_t v2507 = v1084[1];
              void *v1083 = *v1084;
              v1083[1] = v2507;
              uint64_t v1085 = v1054[20];
              v1086 = (void *)((char *)v1052 + v1085);
              v1087 = (void *)((char *)v1053 + v1085);
              v2458 = (void *)v1087[1];
              void *v1086 = *v1087;
              v1086[1] = v2458;
              *(void *)((char *)v1052 + v1054[21]) = *(void *)((char *)v1053 + v1054[21]);
              *(void *)((char *)v1052 + v1054[22]) = *(void *)((char *)v1053 + v1054[22]);
              uint64_t v1088 = v1054[23];
              v1089 = (char *)v1052 + v1088;
              v1090 = (char *)v1053 + v1088;
              *(void *)v1089 = *(void *)v1090;
              v1089[8] = v1090[8];
              uint64_t v1091 = v1054[24];
              v1092 = (char *)v1052 + v1091;
              v1093 = (char *)v1053 + v1091;
              *(void *)v1092 = *(void *)v1093;
              v1092[8] = v1093[8];
              uint64_t v1094 = v1054[25];
              v1095 = (void *)((char *)v1052 + v1094);
              v1096 = (void *)((char *)v1053 + v1094);
              uint64_t v1097 = v1096[1];
              void *v1095 = *v1096;
              v1095[1] = v1097;
              uint64_t v1098 = v1054[26];
              v1099 = (void *)((char *)v1052 + v1098);
              v1100 = (void *)((char *)v1053 + v1098);
              uint64_t v1101 = v1100[1];
              void *v1099 = *v1100;
              v1099[1] = v1101;
              uint64_t v1102 = v1054[27];
              v1103 = (void *)((char *)v1052 + v1102);
              v1104 = (void *)((char *)v1053 + v1102);
              uint64_t v1105 = v1104[1];
              void *v1103 = *v1104;
              v1103[1] = v1105;
              uint64_t v1106 = v1054[28];
              v1107 = (void *)((char *)v1052 + v1106);
              v1108 = (void *)((char *)v1053 + v1106);
              uint64_t v1109 = v1108[1];
              void *v1107 = *v1108;
              v1107[1] = v1109;
              uint64_t v1110 = v1054[29];
              v1111 = (char *)v1052 + v1110;
              v1112 = (char *)v1053 + v1110;
              *(void *)v1111 = *(void *)v1112;
              v1111[8] = v1112[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1052, 0, 1, (uint64_t)v1054);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
              uint64_t v324 = v2573;
            }
            uint64_t v1113 = v323[13];
            v1114 = (void *)(v499 + v1113);
            v1115 = (void *)((char *)v324 + v1113);
            v1116 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1115, 1, (uint64_t)v1116))
            {
              uint64_t v1117 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1114, v1115, *(void *)(*(void *)(v1117 - 8) + 64));
            }
            else
            {
              uint64_t v1118 = v1115[1];
              void *v1114 = *v1115;
              v1114[1] = v1118;
              uint64_t v2542 = v1115[3];
              v1114[2] = v1115[2];
              v1114[3] = v2542;
              uint64_t v2508 = v1115[5];
              v1114[4] = v1115[4];
              v1114[5] = v2508;
              uint64_t v1119 = v1115[7];
              v1114[6] = v1115[6];
              v1114[7] = v1119;
              uint64_t v1120 = v1115[9];
              v1114[8] = v1115[8];
              v1114[9] = v1120;
              uint64_t v1121 = v1115[11];
              v1114[10] = v1115[10];
              v1114[11] = v1121;
              *((unsigned char *)v1114 + 96) = *((unsigned char *)v1115 + 96);
              uint64_t v1122 = v1115[14];
              v1114[13] = v1115[13];
              v1114[14] = v1122;
              uint64_t v1123 = v1115[16];
              v1114[15] = v1115[15];
              v1114[16] = v1123;
              uint64_t v1124 = v1116[14];
              v2576 = (char *)v1114 + v1124;
              v1125 = (char *)v1115 + v1124;
              v2448 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1125, 1, (uint64_t)v2448))
              {
                uint64_t v1126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2576, v1125, *(void *)(*(void *)(v1126 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2448 - 1) + 16))(v2576, v1125, v2448);
                __swift_storeEnumTagSinglePayload((uint64_t)v2576, 0, 1, (uint64_t)v2448);
              }
              uint64_t v1127 = v1116[15];
              v1128 = (void *)((char *)v1114 + v1127);
              v1129 = (void *)((char *)v1115 + v1127);
              uint64_t v1130 = v1129[1];
              void *v1128 = *v1129;
              v1128[1] = v1130;
              uint64_t v1131 = v1116[16];
              v1132 = (void *)((char *)v1114 + v1131);
              v1133 = (void *)((char *)v1115 + v1131);
              uint64_t v1134 = v1133[1];
              void *v1132 = *v1133;
              v1132[1] = v1134;
              uint64_t v1135 = v1116[17];
              v1136 = (void *)((char *)v1114 + v1135);
              v1137 = (void *)((char *)v1115 + v1135);
              uint64_t v2577 = v1137[1];
              void *v1136 = *v1137;
              v1136[1] = v2577;
              uint64_t v1138 = v1116[18];
              v1139 = (void *)((char *)v1114 + v1138);
              v1140 = (void *)((char *)v1115 + v1138);
              uint64_t v2543 = v1140[1];
              void *v1139 = *v1140;
              v1139[1] = v2543;
              uint64_t v1141 = v1116[19];
              v1142 = (void *)((char *)v1114 + v1141);
              v1143 = (void *)((char *)v1115 + v1141);
              uint64_t v1144 = v1143[1];
              void *v1142 = *v1143;
              v1142[1] = v1144;
              *(void *)((char *)v1114 + v1116[20]) = *(void *)((char *)v1115 + v1116[20]);
              uint64_t v1145 = v1116[21];
              v1146 = (void *)((char *)v1114 + v1145);
              v1147 = (void *)((char *)v1115 + v1145);
              uint64_t v1148 = v1147[1];
              void *v1146 = *v1147;
              v1146[1] = v1148;
              uint64_t v1149 = v1116[22];
              v1150 = (void *)((char *)v1114 + v1149);
              v1151 = (void *)((char *)v1115 + v1149);
              uint64_t v1152 = v1151[1];
              void *v1150 = *v1151;
              v1150[1] = v1152;
              uint64_t v1153 = v1116[23];
              v1154 = (void *)((char *)v1114 + v1153);
              v1155 = (void *)((char *)v1115 + v1153);
              uint64_t v1156 = v1155[1];
              void *v1154 = *v1155;
              v1154[1] = v1156;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1114, 0, 1, (uint64_t)v1116);
              uint64_t v499 = (uint64_t)v2595;
              v323 = v2615;
            }
            __swift_storeEnumTagSinglePayload(v499, 0, 1, (uint64_t)v323);
          }
          uint64_t v1157 = v2657[18];
          v1158 = &v11[v1157];
          v1159 = &v12[v1157];
          v1160 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1159, 1, (uint64_t)v1160))
          {
            uint64_t v1161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1158, v1159, *(void *)(*(void *)(v1161 - 8) + 64));
          }
          else
          {
            uint64_t v1162 = *((void *)v1159 + 1);
            *(void *)v1158 = *(void *)v1159;
            *((void *)v1158 + 1) = v1162;
            uint64_t v1163 = *((void *)v1159 + 3);
            *((void *)v1158 + 2) = *((void *)v1159 + 2);
            *((void *)v1158 + 3) = v1163;
            uint64_t v1164 = *((void *)v1159 + 5);
            *((void *)v1158 + 4) = *((void *)v1159 + 4);
            *((void *)v1158 + 5) = v1164;
            uint64_t v1165 = *((void *)v1159 + 7);
            *((void *)v1158 + 6) = *((void *)v1159 + 6);
            *((void *)v1158 + 7) = v1165;
            uint64_t v1166 = *((void *)v1159 + 9);
            *((void *)v1158 + 8) = *((void *)v1159 + 8);
            *((void *)v1158 + 9) = v1166;
            uint64_t v1167 = *((void *)v1159 + 11);
            *((void *)v1158 + 10) = *((void *)v1159 + 10);
            *((void *)v1158 + 11) = v1167;
            uint64_t v1168 = v1160[10];
            v2598 = &v1159[v1168];
            v2618 = &v1158[v1168];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2598, 1, v2627))
            {
              uint64_t v1169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2618, v2598, *(void *)(*(void *)(v1169 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2618, v2598, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v2618, 0, 1, v2627);
            }
            uint64_t v1170 = v1160[11];
            v1171 = &v1158[v1170];
            v1172 = &v1159[v1170];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1159[v1170], 1, v2627))
            {
              uint64_t v1173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1171, v1172, *(void *)(*(void *)(v1173 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1171, v1172, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v1171, 0, 1, v2627);
            }
            uint64_t v1174 = v1160[12];
            v1175 = &v1158[v1174];
            v1176 = &v1159[v1174];
            uint64_t v1177 = *((void *)v1176 + 1);
            *(void *)v1175 = *(void *)v1176;
            *((void *)v1175 + 1) = v1177;
            uint64_t v1178 = v1160[13];
            v1179 = &v1158[v1178];
            v1180 = &v1159[v1178];
            uint64_t v1181 = *((void *)v1180 + 1);
            *(void *)v1179 = *(void *)v1180;
            *((void *)v1179 + 1) = v1181;
            uint64_t v1182 = v1160[14];
            v1183 = &v1158[v1182];
            v1184 = &v1159[v1182];
            uint64_t v1185 = *((void *)v1184 + 1);
            *(void *)v1183 = *(void *)v1184;
            *((void *)v1183 + 1) = v1185;
            uint64_t v1186 = v1160[15];
            v1187 = &v1158[v1186];
            v1188 = &v1159[v1186];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1188, 1, v2627))
            {
              uint64_t v1189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1187, v1188, *(void *)(*(void *)(v1189 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1187, v1188, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v1187, 0, 1, v2627);
            }
            uint64_t v1190 = v1160[16];
            v1191 = &v1158[v1190];
            v1192 = &v1159[v1190];
            uint64_t v1193 = *((void *)v1192 + 1);
            *(void *)v1191 = *(void *)v1192;
            *((void *)v1191 + 1) = v1193;
            uint64_t v1194 = v1160[17];
            v1195 = &v1158[v1194];
            v1196 = &v1159[v1194];
            uint64_t v2619 = *((void *)v1196 + 1);
            *(void *)v1195 = *(void *)v1196;
            *((void *)v1195 + 1) = v2619;
            uint64_t v1197 = v1160[18];
            v1198 = &v1158[v1197];
            v1199 = &v1159[v1197];
            uint64_t v1200 = *((void *)v1199 + 1);
            *(void *)v1198 = *(void *)v1199;
            *((void *)v1198 + 1) = v1200;
            uint64_t v1201 = v1160[19];
            v1202 = &v1158[v1201];
            v1203 = &v1159[v1201];
            uint64_t v1204 = *((void *)v1203 + 1);
            *(void *)v1202 = *(void *)v1203;
            *((void *)v1202 + 1) = v1204;
            uint64_t v1205 = v1160[20];
            v1206 = &v1158[v1205];
            v1207 = &v1159[v1205];
            uint64_t v1208 = *((void *)v1207 + 1);
            *(void *)v1206 = *(void *)v1207;
            *((void *)v1206 + 1) = v1208;
            uint64_t v1209 = v1160[21];
            v1210 = &v1158[v1209];
            v1211 = &v1159[v1209];
            uint64_t v1212 = *((void *)v1211 + 1);
            *(void *)v1210 = *(void *)v1211;
            *((void *)v1210 + 1) = v1212;
            uint64_t v1213 = v1160[22];
            v1214 = &v1158[v1213];
            v1215 = &v1159[v1213];
            uint64_t v1216 = *((void *)v1215 + 1);
            *(void *)v1214 = *(void *)v1215;
            *((void *)v1214 + 1) = v1216;
            uint64_t v1217 = v1160[23];
            v1218 = &v1158[v1217];
            v1219 = &v1159[v1217];
            uint64_t v1220 = *((void *)v1219 + 1);
            *(void *)v1218 = *(void *)v1219;
            *((void *)v1218 + 1) = v1220;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1158, 0, 1, (uint64_t)v1160);
          }
          uint64_t v1221 = v2657[19];
          v1222 = &v11[v1221];
          v1223 = &v12[v1221];
          v1224 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1223, 1, (uint64_t)v1224))
          {
            uint64_t v1225 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1222, v1223, *(void *)(*(void *)(v1225 - 8) + 64));
          }
          else
          {
            uint64_t v1226 = *((void *)v1223 + 1);
            *(void *)v1222 = *(void *)v1223;
            *((void *)v1222 + 1) = v1226;
            uint64_t v1227 = *((void *)v1223 + 3);
            *((void *)v1222 + 2) = *((void *)v1223 + 2);
            *((void *)v1222 + 3) = v1227;
            uint64_t v1228 = *((void *)v1223 + 5);
            *((void *)v1222 + 4) = *((void *)v1223 + 4);
            *((void *)v1222 + 5) = v1228;
            uint64_t v1229 = *((void *)v1223 + 7);
            *((void *)v1222 + 6) = *((void *)v1223 + 6);
            *((void *)v1222 + 7) = v1229;
            uint64_t v2599 = *((void *)v1223 + 9);
            *((void *)v1222 + 8) = *((void *)v1223 + 8);
            *((void *)v1222 + 9) = v2599;
            uint64_t v2578 = *((void *)v1223 + 11);
            *((void *)v1222 + 10) = *((void *)v1223 + 10);
            *((void *)v1222 + 11) = v2578;
            uint64_t v1230 = v1224[11];
            v2620 = &v1222[v1230];
            v1231 = &v1223[v1230];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1231, 1, v2627))
            {
              uint64_t v1232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2620, v1231, *(void *)(*(void *)(v1232 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2620, v1231, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v2620, 0, 1, v2627);
            }
            uint64_t v1233 = v1224[12];
            v1234 = &v1222[v1233];
            v1235 = &v1223[v1233];
            uint64_t v1236 = *((void *)v1235 + 1);
            *(void *)v1234 = *(void *)v1235;
            *((void *)v1234 + 1) = v1236;
            *(void *)&v1222[v1224[13]] = *(void *)&v1223[v1224[13]];
            uint64_t v1237 = v1224[14];
            v1238 = &v1222[v1237];
            v1239 = &v1223[v1237];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1239, 1, v2627))
            {
              uint64_t v1240 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1238, v1239, *(void *)(*(void *)(v1240 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1238, v1239, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v1238, 0, 1, v2627);
            }
            *(void *)&v1222[v1224[15]] = *(void *)&v1223[v1224[15]];
            *(void *)&v1222[v1224[16]] = *(void *)&v1223[v1224[16]];
            uint64_t v1241 = v1224[17];
            v1242 = &v1222[v1241];
            v1243 = &v1223[v1241];
            uint64_t v1244 = *((void *)v1243 + 1);
            *(void *)v1242 = *(void *)v1243;
            *((void *)v1242 + 1) = v1244;
            *(void *)&v1222[v1224[18]] = *(void *)&v1223[v1224[18]];
            *(void *)&v1222[v1224[19]] = *(void *)&v1223[v1224[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1222, 0, 1, (uint64_t)v1224);
          }
          uint64_t v1245 = v2657[20];
          v1246 = &v11[v1245];
          v1247 = &v12[v1245];
          v1248 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1247, 1, (uint64_t)v1248))
          {
            uint64_t v1249 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1246, v1247, *(void *)(*(void *)(v1249 - 8) + 64));
            a1 = v2641;
          }
          else
          {
            uint64_t v1250 = *((void *)v1247 + 1);
            *(void *)v1246 = *(void *)v1247;
            *((void *)v1246 + 1) = v1250;
            uint64_t v1251 = *((void *)v1247 + 3);
            *((void *)v1246 + 2) = *((void *)v1247 + 2);
            *((void *)v1246 + 3) = v1251;
            uint64_t v1252 = *((void *)v1247 + 5);
            *((void *)v1246 + 4) = *((void *)v1247 + 4);
            *((void *)v1246 + 5) = v1252;
            uint64_t v1253 = *((void *)v1247 + 7);
            *((void *)v1246 + 6) = *((void *)v1247 + 6);
            *((void *)v1246 + 7) = v1253;
            uint64_t v1254 = v1248[8];
            v2600 = &v1247[v1254];
            v2621 = &v1246[v1254];
            uint64_t v1255 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2600, 1, v1255))
            {
              uint64_t v1256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2621, v2600, *(void *)(*(void *)(v1256 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v2621, v2600, v1255);
              __swift_storeEnumTagSinglePayload((uint64_t)v2621, 0, 1, v1255);
            }
            uint64_t v1257 = v1248[9];
            v1258 = &v1246[v1257];
            v1259 = &v1247[v1257];
            uint64_t v1260 = *((void *)v1259 + 1);
            *(void *)v1258 = *(void *)v1259;
            *((void *)v1258 + 1) = v1260;
            uint64_t v1261 = v1248[10];
            v1262 = &v1246[v1261];
            v1263 = &v1247[v1261];
            uint64_t v1264 = *((void *)v1263 + 1);
            *(void *)v1262 = *(void *)v1263;
            *((void *)v1262 + 1) = v1264;
            uint64_t v1265 = v1248[11];
            v1266 = &v1246[v1265];
            v1267 = &v1247[v1265];
            uint64_t v1268 = *((void *)v1267 + 1);
            *(void *)v1266 = *(void *)v1267;
            *((void *)v1266 + 1) = v1268;
            uint64_t v1269 = v1248[12];
            v1270 = &v1246[v1269];
            v1271 = &v1247[v1269];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1271, 1, v2627))
            {
              uint64_t v1272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1270, v1271, *(void *)(*(void *)(v1272 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1270, v1271, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v1270, 0, 1, v2627);
            }
            a1 = v2641;
            uint64_t v1273 = v1248[13];
            v1274 = &v1246[v1273];
            v1275 = &v1247[v1273];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1247[v1273], 1, v2627))
            {
              uint64_t v1276 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1274, v1275, *(void *)(*(void *)(v1276 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1274, v1275, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v1274, 0, 1, v2627);
            }
            uint64_t v1277 = v1248[14];
            v1278 = &v1246[v1277];
            v1279 = &v1247[v1277];
            *(void *)v1278 = *(void *)v1279;
            v1278[8] = v1279[8];
            uint64_t v1280 = v1248[15];
            v1281 = &v1246[v1280];
            v1282 = &v1247[v1280];
            uint64_t v1283 = *((void *)v1282 + 1);
            *(void *)v1281 = *(void *)v1282;
            *((void *)v1281 + 1) = v1283;
            uint64_t v1284 = v1248[16];
            v1285 = &v1246[v1284];
            v1286 = &v1247[v1284];
            uint64_t v1287 = *((void *)v1286 + 1);
            *(void *)v1285 = *(void *)v1286;
            *((void *)v1285 + 1) = v1287;
            uint64_t v1288 = v1248[17];
            v1289 = &v1246[v1288];
            v1290 = &v1247[v1288];
            uint64_t v1291 = *((void *)v1290 + 1);
            *(void *)v1289 = *(void *)v1290;
            *((void *)v1289 + 1) = v1291;
            uint64_t v1292 = v1248[18];
            v1293 = &v1246[v1292];
            v1294 = &v1247[v1292];
            uint64_t v1295 = *((void *)v1294 + 1);
            *(void *)v1293 = *(void *)v1294;
            *((void *)v1293 + 1) = v1295;
            uint64_t v1296 = v1248[19];
            v1297 = &v1246[v1296];
            v1298 = &v1247[v1296];
            uint64_t v1299 = *((void *)v1298 + 1);
            *(void *)v1297 = *(void *)v1298;
            *((void *)v1297 + 1) = v1299;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1246, 0, 1, (uint64_t)v1248);
          }
          uint64_t v1300 = v2657[21];
LABEL_538:
          v2189 = &v11[v1300];
          v2190 = &v12[v1300];
          uint64_t v2370 = *(void *)&v12[v1300 + 8];
          if (!v2370) {
            goto LABEL_545;
          }
          *(void *)v2189 = *(void *)v2190;
          *((void *)v2189 + 1) = v2370;
          uint64_t v2371 = *((void *)v2190 + 3);
          *((void *)v2189 + 2) = *((void *)v2190 + 2);
          *((void *)v2189 + 3) = v2371;
          uint64_t v2372 = *((void *)v2190 + 5);
          *((void *)v2189 + 4) = *((void *)v2190 + 4);
          *((void *)v2189 + 5) = v2372;
          uint64_t v2373 = *((void *)v2190 + 7);
          *((void *)v2189 + 6) = *((void *)v2190 + 6);
          *((void *)v2189 + 7) = v2373;
          uint64_t v2374 = *((void *)v2190 + 9);
          *((void *)v2189 + 8) = *((void *)v2190 + 8);
          *((void *)v2189 + 9) = v2374;
          uint64_t v2563 = *((void *)v2190 + 11);
          *((void *)v2189 + 10) = *((void *)v2190 + 10);
          *((void *)v2189 + 11) = v2563;
          uint64_t v2606 = *((void *)v2190 + 13);
          *((void *)v2189 + 12) = *((void *)v2190 + 12);
          *((void *)v2189 + 13) = v2606;
          uint64_t v2638 = *((void *)v2190 + 15);
          *((void *)v2189 + 14) = *((void *)v2190 + 14);
          *((void *)v2189 + 15) = v2638;
          uint64_t v2675 = *((void *)v2190 + 17);
          *((void *)v2189 + 16) = *((void *)v2190 + 16);
          *((void *)v2189 + 17) = v2675;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_540;
        case 4u:
          uint64_t v62 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v62;
          uint64_t v63 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v63;
          uint64_t v64 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v64;
          uint64_t v65 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v65;
          uint64_t v66 = type metadata accessor for NoteDocument(0);
          uint64_t v67 = *(int *)(v66 + 32);
          v2658 = &v11[v67];
          uint64_t v68 = &v12[v67];
          uint64_t v69 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
          {
            uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2658, v68, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v2658, v68, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v2658, 0, 1, v69);
          }
          uint64_t v326 = *(int *)(v66 + 36);
          v327 = &v11[v326];
          uint64_t v328 = (uint64_t)&v12[v326];
          if (!__swift_getEnumTagSinglePayload((uint64_t)&v12[v326], 1, v69)) {
            goto LABEL_143;
          }
          goto LABEL_152;
        case 5u:
          uint64_t v71 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v71;
          uint64_t v72 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v72;
          uint64_t v73 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v73;
          uint64_t v74 = (int *)type metadata accessor for Reminder(0);
          uint64_t v75 = v74[7];
          uint64_t v76 = &v11[v75];
          uint64_t v77 = &v12[v75];
          uint64_t v78 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
          {
            uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
            __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
          }
          uint64_t v329 = v74[8];
          uint64_t v330 = &v11[v329];
          uint64_t v331 = &v12[v329];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v329], 1, v78))
          {
            uint64_t v332 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v330, v331, *(void *)(*(void *)(v332 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v330, v331, v78);
            __swift_storeEnumTagSinglePayload((uint64_t)v330, 0, 1, v78);
          }
          v11[v74[9]] = v12[v74[9]];
          uint64_t v501 = v74[10];
          v502 = &v11[v501];
          v503 = &v12[v501];
          uint64_t v504 = *((void *)v503 + 1);
          *(void *)v502 = *(void *)v503;
          *((void *)v502 + 1) = v504;
          uint64_t v505 = v74[11];
          v506 = &v11[v505];
          v507 = &v12[v505];
          uint64_t v508 = *((void *)v507 + 1);
          *(void *)v506 = *(void *)v507;
          *((void *)v506 + 1) = v508;
          uint64_t v509 = v74[12];
          uint64_t v101 = &v11[v509];
          uint64_t v102 = &v12[v509];
          uint64_t v103 = type metadata accessor for URL();
          goto LABEL_141;
        case 6u:
          uint64_t v80 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v80;
          uint64_t v81 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v81;
          uint64_t v82 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v82;
          uint64_t v83 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v83;
          uint64_t v84 = type metadata accessor for PhoneHistory(0);
          uint64_t v85 = *(int *)(v84 + 40);
          v2628 = &v11[v85];
          v2642 = &v12[v85];
          v2659 = (int *)v84;
          uint64_t v86 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2642, 1, v86))
          {
            uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2628, v2642, *(void *)(*(void *)(v87 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v2628, v2642, v86);
            __swift_storeEnumTagSinglePayload((uint64_t)v2628, 0, 1, v86);
          }
          uint64_t v333 = v2659[11];
          v334 = &v11[v333];
          uint64_t v335 = &v12[v333];
          uint64_t v336 = *((void *)v335 + 1);
          *(void *)v334 = *(void *)v335;
          *((void *)v334 + 1) = v336;
          uint64_t v337 = v2659[12];
          v338 = &v11[v337];
          unint64_t v339 = &v12[v337];
          uint64_t v340 = *((void *)v339 + 1);
          *(void *)v338 = *(void *)v339;
          *((void *)v338 + 1) = v340;
          uint64_t v341 = v2659[13];
          uint64_t v101 = &v11[v341];
          uint64_t v102 = &v12[v341];
          uint64_t v103 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103)) {
            goto LABEL_81;
          }
          goto LABEL_142;
        case 7u:
          uint64_t v88 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v88;
          uint64_t v89 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v89;
          uint64_t v90 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v90;
          uint64_t v91 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v92 = *(int *)(v91 + 28);
          uint64_t v93 = &v11[v92];
          uint64_t v94 = &v12[v92];
          uint64_t v95 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v95))
          {
            uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v95);
          }
          uint64_t v342 = *(int *)(v91 + 32);
          uint64_t v343 = &v11[v342];
          uint64_t v344 = (uint64_t)&v12[v342];
          uint64_t v345 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v344, 1, v345);
          goto LABEL_86;
        case 8u:
          uint64_t v97 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v97;
          uint64_t v98 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v98;
          uint64_t v99 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v99;
          uint64_t v100 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          uint64_t v101 = &v11[v100];
          uint64_t v102 = &v12[v100];
          uint64_t v103 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
LABEL_141:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
          {
LABEL_142:
            uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v101, v102, *(void *)(*(void *)(v510 - 8) + 64));
          }
          else
          {
LABEL_81:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
            __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
          }
          goto LABEL_542;
        case 9u:
          uint64_t v104 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v104;
          uint64_t v105 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v105;
          uint64_t v106 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v107 = v106[6];
          uint64_t v108 = &v11[v107];
          uint64_t v109 = &v12[v107];
          uint64_t v110 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
          {
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
          }
          uint64_t v347 = v106[7];
          uint64_t v348 = &v11[v347];
          v349 = &v12[v347];
          *(void *)uint64_t v348 = *(void *)v349;
          v348[8] = v349[8];
          uint64_t v350 = v106[8];
          uint64_t v343 = &v11[v350];
          uint64_t v344 = (uint64_t)&v12[v350];
          uint64_t v345 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v344, 1, v345);
LABEL_86:
          if (EnumTagSinglePayload) {
            goto LABEL_87;
          }
          goto LABEL_159;
        case 0xAu:
          uint64_t v112 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v112;
          uint64_t v113 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v113;
          uint64_t v114 = (int *)type metadata accessor for Safari(0);
          uint64_t v115 = v114[6];
          uint64_t v116 = &v11[v115];
          uint64_t v117 = &v12[v115];
          uint64_t v69 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v69))
          {
            uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v116, v117, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v69);
          }
          uint64_t v354 = v114[7];
          uint64_t v355 = &v11[v354];
          v356 = &v12[v354];
          uint64_t v357 = *((void *)v356 + 1);
          *(void *)uint64_t v355 = *(void *)v356;
          *((void *)v355 + 1) = v357;
          uint64_t v358 = v114[8];
          uint64_t v359 = &v11[v358];
          uint64_t v360 = &v12[v358];
          uint64_t v361 = *((void *)v360 + 1);
          *(void *)uint64_t v359 = *(void *)v360;
          *((void *)v359 + 1) = v361;
          uint64_t v362 = v114[9];
          v327 = &v11[v362];
          uint64_t v328 = (uint64_t)&v12[v362];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload(v328, 1, v69)) {
            goto LABEL_143;
          }
          size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          uint64_t v352 = v327;
          uint64_t v353 = (const void *)v328;
          goto LABEL_153;
        case 0xBu:
          uint64_t v119 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v119;
          uint64_t v120 = (void *)*((void *)v12 + 2);
          *((void *)v11 + 2) = v120;
          swift_bridgeObjectRetain();
          id v121 = v120;
          goto LABEL_542;
        case 0xCu:
          uint64_t v122 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v122;
          uint64_t v123 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v123;
          uint64_t v124 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v124;
          uint64_t v125 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v126 = v125[7];
          uint64_t v127 = &v11[v126];
          uint64_t v128 = &v12[v126];
          uint64_t v129 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v129))
          {
            uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
            __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v129);
          }
          uint64_t v363 = v125[8];
          uint64_t v364 = &v11[v363];
          uint64_t v365 = &v12[v363];
          uint64_t v366 = *((void *)v365 + 1);
          *(void *)uint64_t v364 = *(void *)v365;
          *((void *)v364 + 1) = v366;
          uint64_t v367 = v125[9];
          v368 = &v11[v367];
          uint64_t v369 = &v12[v367];
          uint64_t v370 = *((void *)v369 + 1);
          *(void *)v368 = *(void *)v369;
          *((void *)v368 + 1) = v370;
          uint64_t v371 = v125[10];
          uint64_t v372 = &v11[v371];
          uint64_t v373 = &v12[v371];
          uint64_t v374 = *((void *)v373 + 1);
          *(void *)uint64_t v372 = *(void *)v373;
          *((void *)v372 + 1) = v374;
          uint64_t v375 = v125[11];
          uint64_t v376 = &v11[v375];
          uint64_t v377 = &v12[v375];
          *(_OWORD *)uint64_t v376 = *(_OWORD *)v377;
          *(void *)(v376 + 13) = *(void *)(v377 + 13);
          uint64_t v378 = v125[12];
          v379 = &v11[v378];
          v380 = &v12[v378];
          uint64_t v381 = *((void *)v380 + 1);
          *(void *)v379 = *(void *)v380;
          *((void *)v379 + 1) = v381;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_540;
        case 0xDu:
          uint64_t v131 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v131;
          uint64_t v132 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v132;
          uint64_t v133 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v133;
          uint64_t v134 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v135 = v134[7];
          uint64_t v136 = &v11[v135];
          uint64_t v137 = &v12[v135];
          uint64_t v138 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v138))
          {
            uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
            __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v138);
          }
          uint64_t v382 = v134[8];
          v383 = &v11[v382];
          v384 = &v12[v382];
          uint64_t v385 = *((void *)v384 + 1);
          *(void *)v383 = *(void *)v384;
          *((void *)v383 + 1) = v385;
          *(void *)&v11[v134[9]] = *(void *)&v12[v134[9]];
          goto LABEL_540;
        case 0xEu:
          uint64_t v140 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v140;
          uint64_t v141 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v141;
          uint64_t v142 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v142;
          uint64_t v143 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v143;
          uint64_t v144 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v144;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_541;
        case 0xFu:
          uint64_t v145 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v145;
          uint64_t v146 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v146;
          uint64_t v147 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v147;
          uint64_t v2660 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v2660;
          uint64_t v2643 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v2643;
          uint64_t v2629 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v2629;
          v11[96] = v12[96];
          uint64_t v148 = *((void *)v12 + 14);
          *((void *)v11 + 13) = *((void *)v12 + 13);
          *((void *)v11 + 14) = v148;
          long long v149 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v150 = v149[13];
          v2588 = &v11[v150];
          long long v151 = &v12[v150];
          uint64_t v2609 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v151, 1, v2609))
          {
            uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2588, v151, *(void *)(*(void *)(v152 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2609 - 8) + 16))(v2588, v151, v2609);
            __swift_storeEnumTagSinglePayload((uint64_t)v2588, 0, 1, v2609);
          }
          uint64_t v386 = v149[14];
          v387 = &v11[v386];
          v388 = &v12[v386];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v386], 1, v2609))
          {
            uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v387, v388, *(void *)(*(void *)(v389 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2609 - 8) + 16))(v387, v388, v2609);
            __swift_storeEnumTagSinglePayload((uint64_t)v387, 0, 1, v2609);
          }
          uint64_t v511 = v149[15];
          v512 = &v11[v511];
          v513 = &v12[v511];
          uint64_t v514 = *((void *)v513 + 1);
          *(void *)v512 = *(void *)v513;
          *((void *)v512 + 1) = v514;
          uint64_t v515 = v149[16];
          v516 = &v11[v515];
          v517 = &v12[v515];
          uint64_t v518 = *((void *)v517 + 1);
          *(void *)v516 = *(void *)v517;
          *((void *)v516 + 1) = v518;
          uint64_t v519 = v149[17];
          v520 = &v11[v519];
          v521 = &v12[v519];
          uint64_t v522 = *((void *)v521 + 1);
          *(void *)v520 = *(void *)v521;
          *((void *)v520 + 1) = v522;
          uint64_t v523 = v149[18];
          v2651 = &v12[v523];
          v2671 = &v11[v523];
          uint64_t v524 = type metadata accessor for DateComponents();
          v525 = *(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v525(v2671, v2651, v524);
          v525(&v11[v149[19]], &v12[v149[19]], v524);
          uint64_t v526 = v149[20];
          v527 = &v11[v526];
          v528 = &v12[v526];
          uint64_t v2672 = *((void *)v528 + 1);
          *(void *)v527 = *(void *)v528;
          *((void *)v527 + 1) = v2672;
          uint64_t v529 = v149[21];
          v530 = &v11[v529];
          v531 = &v12[v529];
          uint64_t v2652 = *((void *)v531 + 1);
          *(void *)v530 = *(void *)v531;
          *((void *)v530 + 1) = v2652;
          uint64_t v532 = v149[22];
          v533 = &v11[v532];
          v534 = &v12[v532];
          uint64_t v2636 = *((void *)v534 + 1);
          *(void *)v533 = *(void *)v534;
          *((void *)v533 + 1) = v2636;
          uint64_t v535 = v149[23];
          v536 = &v11[v535];
          v537 = &v12[v535];
          uint64_t v2616 = *((void *)v537 + 1);
          *(void *)v536 = *(void *)v537;
          *((void *)v536 + 1) = v2616;
          uint64_t v538 = v149[24];
          v539 = &v11[v538];
          v540 = &v12[v538];
          uint64_t v2596 = *((void *)v540 + 1);
          *(void *)v539 = *(void *)v540;
          *((void *)v539 + 1) = v2596;
          uint64_t v541 = v149[25];
          v542 = &v11[v541];
          v543 = &v12[v541];
          uint64_t v2574 = *((void *)v543 + 1);
          *(void *)v542 = *(void *)v543;
          *((void *)v542 + 1) = v2574;
          uint64_t v544 = v149[26];
          v545 = &v11[v544];
          v546 = &v12[v544];
          uint64_t v2529 = *((void *)v546 + 1);
          *(void *)v545 = *(void *)v546;
          *((void *)v545 + 1) = v2529;
          uint64_t v547 = v149[27];
          v548 = &v11[v547];
          v549 = &v12[v547];
          uint64_t v2497 = *((void *)v549 + 1);
          *(void *)v548 = *(void *)v549;
          *((void *)v548 + 1) = v2497;
          uint64_t v550 = v149[28];
          v551 = &v11[v550];
          v552 = &v12[v550];
          uint64_t v2474 = *((void *)v552 + 1);
          *(void *)v551 = *(void *)v552;
          *((void *)v551 + 1) = v2474;
          uint64_t v553 = v149[29];
          v554 = &v11[v553];
          v555 = &v12[v553];
          uint64_t v2465 = *((void *)v555 + 1);
          *(void *)v554 = *(void *)v555;
          *((void *)v554 + 1) = v2465;
          uint64_t v556 = v149[30];
          v557 = &v11[v556];
          v558 = &v12[v556];
          v2456 = (void *)*((void *)v558 + 1);
          *(void *)v557 = *(void *)v558;
          *((void *)v557 + 1) = v2456;
          uint64_t v559 = v149[31];
          v560 = &v11[v559];
          v561 = &v12[v559];
          v2446 = (void *)*((void *)v561 + 1);
          *(void *)v560 = *(void *)v561;
          *((void *)v560 + 1) = v2446;
          uint64_t v562 = v149[32];
          v563 = &v11[v562];
          v564 = &v12[v562];
          uint64_t v565 = *((void *)v564 + 1);
          *(void *)v563 = *(void *)v564;
          *((void *)v563 + 1) = v565;
          *(void *)&v11[v149[33]] = *(void *)&v12[v149[33]];
          *(void *)&v11[v149[34]] = *(void *)&v12[v149[34]];
          uint64_t v566 = v149[35];
          v567 = &v11[v566];
          v568 = &v12[v566];
          uint64_t v569 = *((void *)v568 + 1);
          *(void *)v567 = *(void *)v568;
          *((void *)v567 + 1) = v569;
          uint64_t v570 = v149[36];
          v571 = &v11[v570];
          v572 = &v12[v570];
          uint64_t v573 = *((void *)v572 + 1);
          *(void *)v571 = *(void *)v572;
          *((void *)v571 + 1) = v573;
          uint64_t v574 = v149[37];
          v575 = &v11[v574];
          v576 = &v12[v574];
          uint64_t v577 = *((void *)v576 + 1);
          *(void *)v575 = *(void *)v576;
          *((void *)v575 + 1) = v577;
          uint64_t v578 = v149[38];
          v2421 = &v11[v578];
          v2438 = &v12[v578];
          v2429 = (void *)type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2438, 1, (uint64_t)v2429))
          {
            uint64_t v579 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2421, v2438, *(void *)(*(void *)(v579 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v2429 - 1) + 16))(v2421, v2438, v2429);
            __swift_storeEnumTagSinglePayload((uint64_t)v2421, 0, 1, (uint64_t)v2429);
          }
          uint64_t v638 = v149[39];
          v639 = &v11[v638];
          v640 = &v12[v638];
          uint64_t v641 = *((void *)v640 + 1);
          *(void *)v639 = *(void *)v640;
          *((void *)v639 + 1) = v641;
          uint64_t v642 = v149[40];
          v643 = &v11[v642];
          v644 = &v12[v642];
          uint64_t v645 = *((void *)v644 + 1);
          *(void *)v643 = *(void *)v644;
          *((void *)v643 + 1) = v645;
          uint64_t v646 = v149[41];
          v647 = &v11[v646];
          v648 = &v12[v646];
          v647[8] = v648[8];
          *(void *)v647 = *(void *)v648;
          uint64_t v649 = v149[42];
          v650 = &v11[v649];
          v651 = &v12[v649];
          uint64_t v652 = *((void *)v651 + 1);
          *(void *)v650 = *(void *)v651;
          *((void *)v650 + 1) = v652;
          uint64_t v653 = v149[43];
          v654 = &v11[v653];
          v655 = &v12[v653];
          *(_OWORD *)v654 = *(_OWORD *)v655;
          *(void *)(v654 + 13) = *(void *)(v655 + 13);
          uint64_t v656 = v149[44];
          v657 = &v11[v656];
          v658 = &v12[v656];
          uint64_t v659 = *((void *)v658 + 1);
          *(void *)v657 = *(void *)v658;
          *((void *)v657 + 1) = v659;
          uint64_t v660 = v149[45];
          v661 = &v11[v660];
          v662 = &v12[v660];
          uint64_t v663 = *((void *)v662 + 1);
          *(void *)v661 = *(void *)v662;
          *((void *)v661 + 1) = v663;
          uint64_t v664 = v149[46];
          v665 = &v11[v664];
          v666 = &v12[v664];
          uint64_t v667 = *((void *)v666 + 1);
          *(void *)v665 = *(void *)v666;
          *((void *)v665 + 1) = v667;
          uint64_t v668 = v149[47];
          v669 = &v11[v668];
          v670 = &v12[v668];
          uint64_t v671 = *((void *)v670 + 1);
          *(void *)v669 = *(void *)v670;
          *((void *)v669 + 1) = v671;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v672 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)&v11[*(int *)(v672 + 48)] = *(void *)&v12[*(int *)(v672 + 48)];
          swift_bridgeObjectRetain();
          goto LABEL_542;
        case 0x10u:
          uint64_t v153 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v153;
          uint64_t v154 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v154;
          uint64_t v2661 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v2661;
          uint64_t v2644 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v2644;
          uint64_t v2630 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v2630;
          uint64_t v2610 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v2610;
          v11[96] = v12[96];
          uint64_t v155 = *((void *)v12 + 14);
          *((void *)v11 + 13) = *((void *)v12 + 13);
          *((void *)v11 + 14) = v155;
          uint64_t v156 = *((void *)v12 + 16);
          *((void *)v11 + 15) = *((void *)v12 + 15);
          *((void *)v11 + 16) = v156;
          uint64_t v157 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v158 = v157[14];
          v2565 = &v11[v158];
          uint64_t v159 = &v12[v158];
          uint64_t v2589 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v159, 1, v2589))
          {
            uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2565, v159, *(void *)(*(void *)(v160 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2589 - 8) + 16))(v2565, v159, v2589);
            __swift_storeEnumTagSinglePayload((uint64_t)v2565, 0, 1, v2589);
          }
          uint64_t v390 = v157[15];
          v391 = &v11[v390];
          v392 = &v12[v390];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v390], 1, v2589))
          {
            uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v391, v392, *(void *)(*(void *)(v393 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2589 - 8) + 16))(v391, v392, v2589);
            __swift_storeEnumTagSinglePayload((uint64_t)v391, 0, 1, v2589);
          }
          uint64_t v580 = v157[16];
          v581 = &v11[v580];
          v582 = &v12[v580];
          uint64_t v583 = *((void *)v582 + 1);
          *(void *)v581 = *(void *)v582;
          *((void *)v581 + 1) = v583;
          uint64_t v584 = v157[17];
          v585 = &v11[v584];
          v586 = &v12[v584];
          uint64_t v2673 = *((void *)v586 + 1);
          *(void *)v585 = *(void *)v586;
          *((void *)v585 + 1) = v2673;
          uint64_t v587 = v157[18];
          v588 = &v11[v587];
          v589 = &v12[v587];
          uint64_t v2653 = *((void *)v589 + 1);
          *(void *)v588 = *(void *)v589;
          *((void *)v588 + 1) = v2653;
          uint64_t v590 = v157[19];
          v591 = &v11[v590];
          v592 = &v12[v590];
          uint64_t v2637 = *((void *)v592 + 1);
          *(void *)v591 = *(void *)v592;
          *((void *)v591 + 1) = v2637;
          uint64_t v593 = v157[20];
          v594 = &v11[v593];
          v595 = &v12[v593];
          uint64_t v596 = *((void *)v595 + 1);
          *(void *)v594 = *(void *)v595;
          *((void *)v594 + 1) = v596;
          *(void *)&v11[v157[21]] = *(void *)&v12[v157[21]];
          *(void *)&v11[v157[22]] = *(void *)&v12[v157[22]];
          uint64_t v597 = v157[23];
          v598 = &v11[v597];
          v599 = &v12[v597];
          *(void *)v598 = *(void *)v599;
          v598[8] = v599[8];
          uint64_t v600 = v157[24];
          v601 = &v11[v600];
          v602 = &v12[v600];
          *(void *)v601 = *(void *)v602;
          v601[8] = v602[8];
          uint64_t v603 = v157[25];
          v604 = &v11[v603];
          v605 = &v12[v603];
          uint64_t v606 = *((void *)v605 + 1);
          *(void *)v604 = *(void *)v605;
          *((void *)v604 + 1) = v606;
          uint64_t v607 = v157[26];
          v608 = &v11[v607];
          v609 = &v12[v607];
          uint64_t v610 = *((void *)v609 + 1);
          *(void *)v608 = *(void *)v609;
          *((void *)v608 + 1) = v610;
          uint64_t v611 = v157[27];
          v612 = &v11[v611];
          v613 = &v12[v611];
          uint64_t v614 = *((void *)v613 + 1);
          *(void *)v612 = *(void *)v613;
          *((void *)v612 + 1) = v614;
          uint64_t v615 = v157[28];
          v616 = &v11[v615];
          v617 = &v12[v615];
          uint64_t v618 = *((void *)v617 + 1);
          *(void *)v616 = *(void *)v617;
          *((void *)v616 + 1) = v618;
          uint64_t v619 = v157[29];
          v620 = &v11[v619];
          v621 = &v12[v619];
          *(void *)v620 = *(void *)v621;
          v620[8] = v621[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_540;
        case 0x11u:
          uint64_t v161 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v161;
          uint64_t v162 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v162;
          uint64_t v2662 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v2662;
          uint64_t v2645 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v2645;
          uint64_t v2631 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v2631;
          uint64_t v2611 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v2611;
          v11[96] = v12[96];
          uint64_t v163 = *((void *)v12 + 14);
          *((void *)v11 + 13) = *((void *)v12 + 13);
          *((void *)v11 + 14) = v163;
          uint64_t v164 = *((void *)v12 + 16);
          *((void *)v11 + 15) = *((void *)v12 + 15);
          *((void *)v11 + 16) = v164;
          uint64_t v165 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v166 = v165[14];
          v2566 = &v11[v166];
          v2590 = &v12[v166];
          uint64_t v167 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2590, 1, v167))
          {
            uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2566, v2590, *(void *)(*(void *)(v168 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v2566, v2590, v167);
            __swift_storeEnumTagSinglePayload((uint64_t)v2566, 0, 1, v167);
          }
          uint64_t v394 = v165[15];
          v395 = &v11[v394];
          v396 = &v12[v394];
          uint64_t v397 = *((void *)v396 + 1);
          *(void *)v395 = *(void *)v396;
          *((void *)v395 + 1) = v397;
          uint64_t v398 = v165[16];
          v399 = &v11[v398];
          v400 = &v12[v398];
          uint64_t v2670 = *((void *)v400 + 1);
          *(void *)v399 = *(void *)v400;
          *((void *)v399 + 1) = v2670;
          uint64_t v401 = v165[17];
          v402 = &v11[v401];
          v403 = &v12[v401];
          uint64_t v404 = *((void *)v403 + 1);
          *(void *)v402 = *(void *)v403;
          *((void *)v402 + 1) = v404;
          uint64_t v405 = v165[18];
          v406 = &v11[v405];
          v407 = &v12[v405];
          uint64_t v408 = *((void *)v407 + 1);
          *(void *)v406 = *(void *)v407;
          *((void *)v406 + 1) = v408;
          uint64_t v409 = v165[19];
          v410 = &v11[v409];
          v411 = &v12[v409];
          uint64_t v412 = *((void *)v411 + 1);
          *(void *)v410 = *(void *)v411;
          *((void *)v410 + 1) = v412;
          *(void *)&v11[v165[20]] = *(void *)&v12[v165[20]];
          uint64_t v413 = v165[21];
          v414 = &v11[v413];
          v415 = &v12[v413];
          uint64_t v416 = *((void *)v415 + 1);
          *(void *)v414 = *(void *)v415;
          *((void *)v414 + 1) = v416;
          uint64_t v417 = v165[22];
          v418 = &v11[v417];
          v419 = &v12[v417];
          uint64_t v420 = *((void *)v419 + 1);
          *(void *)v418 = *(void *)v419;
          *((void *)v418 + 1) = v420;
          uint64_t v421 = v165[23];
          v422 = &v11[v421];
          v423 = &v12[v421];
          uint64_t v424 = *((void *)v423 + 1);
          *(void *)v422 = *(void *)v423;
          *((void *)v422 + 1) = v424;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_541;
        case 0x12u:
          uint64_t v169 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v169;
          uint64_t v170 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v170;
          uint64_t v171 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v171;
          uint64_t v172 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v172;
          uint64_t v173 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v173;
          uint64_t v174 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v174;
          uint64_t v175 = *((void *)v12 + 13);
          *((void *)v11 + 12) = *((void *)v12 + 12);
          *((void *)v11 + 13) = v175;
          uint64_t v176 = *((void *)v12 + 15);
          *((void *)v11 + 14) = *((void *)v12 + 14);
          *((void *)v11 + 15) = v176;
          v11[128] = v12[128];
          *(_WORD *)(v11 + 129) = *(_WORD *)(v12 + 129);
          uint64_t v177 = *((void *)v12 + 18);
          *((void *)v11 + 17) = *((void *)v12 + 17);
          *((void *)v11 + 18) = v177;
          uint64_t v178 = *((void *)v12 + 20);
          *((void *)v11 + 19) = *((void *)v12 + 19);
          *((void *)v11 + 20) = v178;
          uint64_t v179 = *((void *)v12 + 22);
          *((void *)v11 + 21) = *((void *)v12 + 21);
          *((void *)v11 + 22) = v179;
          uint64_t v180 = *((void *)v12 + 24);
          *((void *)v11 + 23) = *((void *)v12 + 23);
          *((void *)v11 + 24) = v180;
          uint64_t v181 = *((void *)v12 + 26);
          *((void *)v11 + 25) = *((void *)v12 + 25);
          *((void *)v11 + 26) = v181;
          uint64_t v182 = *((void *)v12 + 28);
          *((void *)v11 + 27) = *((void *)v12 + 27);
          *((void *)v11 + 28) = v182;
          uint64_t v183 = *((void *)v12 + 30);
          *((void *)v11 + 29) = *((void *)v12 + 29);
          *((void *)v11 + 30) = v183;
          uint64_t v2646 = *((void *)v12 + 32);
          *((void *)v11 + 31) = *((void *)v12 + 31);
          *((void *)v11 + 32) = v2646;
          uint64_t v2632 = *((void *)v12 + 34);
          *((void *)v11 + 33) = *((void *)v12 + 33);
          *((void *)v11 + 34) = v2632;
          uint64_t v2612 = *((void *)v12 + 36);
          *((void *)v11 + 35) = *((void *)v12 + 35);
          *((void *)v11 + 36) = v2612;
          uint64_t v2591 = *((void *)v12 + 38);
          *((void *)v11 + 37) = *((void *)v12 + 37);
          *((void *)v11 + 38) = v2591;
          uint64_t v2567 = *((void *)v12 + 40);
          *((void *)v11 + 39) = *((void *)v12 + 39);
          *((void *)v11 + 40) = v2567;
          uint64_t v2524 = *((void *)v12 + 42);
          *((void *)v11 + 41) = *((void *)v12 + 41);
          *((void *)v11 + 42) = v2524;
          uint64_t v2492 = *((void *)v12 + 44);
          *((void *)v11 + 43) = *((void *)v12 + 43);
          *((void *)v11 + 44) = v2492;
          uint64_t v184 = *((void *)v12 + 46);
          *((void *)v11 + 45) = *((void *)v12 + 45);
          *((void *)v11 + 46) = v184;
          uint64_t v185 = *((void *)v12 + 47);
          v11[384] = v12[384];
          *((void *)v11 + 47) = v185;
          uint64_t v186 = *((void *)v12 + 50);
          *((void *)v11 + 49) = *((void *)v12 + 49);
          *((void *)v11 + 50) = v186;
          uint64_t v187 = *((void *)v12 + 52);
          *((void *)v11 + 51) = *((void *)v12 + 51);
          *((void *)v11 + 52) = v187;
          uint64_t v2663 = type metadata accessor for RentalCarReservation(0);
          uint64_t v188 = *(int *)(v2663 + 140);
          __dst = &v11[v188];
          uint64_t v189 = &v12[v188];
          uint64_t v190 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v189, 1, v190))
          {
            uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(__dst, v189, *(void *)(*(void *)(v191 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(__dst, v189, v190);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v190);
          }
          uint64_t v425 = *(int *)(v2663 + 144);
          goto LABEL_112;
        case 0x13u:
          uint64_t v192 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v192;
          uint64_t v193 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v193;
          uint64_t v194 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v194;
          uint64_t v195 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v195;
          uint64_t v196 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v196;
          uint64_t v197 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v197;
          uint64_t v198 = *((void *)v12 + 13);
          *((void *)v11 + 12) = *((void *)v12 + 12);
          *((void *)v11 + 13) = v198;
          uint64_t v199 = *((void *)v12 + 15);
          *((void *)v11 + 14) = *((void *)v12 + 14);
          *((void *)v11 + 15) = v199;
          v11[128] = v12[128];
          *(_WORD *)(v11 + 129) = *(_WORD *)(v12 + 129);
          uint64_t v200 = *((void *)v12 + 18);
          *((void *)v11 + 17) = *((void *)v12 + 17);
          *((void *)v11 + 18) = v200;
          uint64_t v201 = *((void *)v12 + 20);
          *((void *)v11 + 19) = *((void *)v12 + 19);
          *((void *)v11 + 20) = v201;
          uint64_t v202 = *((void *)v12 + 22);
          *((void *)v11 + 21) = *((void *)v12 + 21);
          *((void *)v11 + 22) = v202;
          uint64_t v203 = *((void *)v12 + 24);
          *((void *)v11 + 23) = *((void *)v12 + 23);
          *((void *)v11 + 24) = v203;
          uint64_t v2647 = *((void *)v12 + 26);
          *((void *)v11 + 25) = *((void *)v12 + 25);
          *((void *)v11 + 26) = v2647;
          uint64_t v2633 = *((void *)v12 + 28);
          *((void *)v11 + 27) = *((void *)v12 + 27);
          *((void *)v11 + 28) = v2633;
          uint64_t v2613 = *((void *)v12 + 30);
          *((void *)v11 + 29) = *((void *)v12 + 29);
          *((void *)v11 + 30) = v2613;
          uint64_t v2592 = *((void *)v12 + 32);
          *((void *)v11 + 31) = *((void *)v12 + 31);
          *((void *)v11 + 32) = v2592;
          uint64_t v204 = *((void *)v12 + 34);
          *((void *)v11 + 33) = *((void *)v12 + 33);
          *((void *)v11 + 34) = v204;
          uint64_t v205 = *((void *)v12 + 36);
          uint64_t v2525 = *((void *)v12 + 35);
          v11[296] = v12[296];
          *((void *)v11 + 35) = v2525;
          *((void *)v11 + 36) = v205;
          uint64_t v2664 = type metadata accessor for TicketedTransportation(0);
          uint64_t v206 = *(int *)(v2664 + 112);
          v2411 = &v11[v206];
          uint64_t v207 = &v12[v206];
          uint64_t v190 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v207, 1, v190))
          {
            uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2411, v207, *(void *)(*(void *)(v208 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v2411, v207, v190);
            __swift_storeEnumTagSinglePayload((uint64_t)v2411, 0, 1, v190);
          }
          uint64_t v425 = *(int *)(v2664 + 116);
          goto LABEL_112;
        case 0x14u:
          uint64_t v209 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v209;
          uint64_t v210 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v210;
          uint64_t v211 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v211;
          uint64_t v212 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v212;
          uint64_t v213 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v213;
          uint64_t v214 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v214;
          uint64_t v215 = *((void *)v12 + 13);
          *((void *)v11 + 12) = *((void *)v12 + 12);
          *((void *)v11 + 13) = v215;
          uint64_t v216 = *((void *)v12 + 15);
          *((void *)v11 + 14) = *((void *)v12 + 14);
          *((void *)v11 + 15) = v216;
          v11[128] = v12[128];
          *(_WORD *)(v11 + 129) = *(_WORD *)(v12 + 129);
          uint64_t v217 = *((void *)v12 + 18);
          *((void *)v11 + 17) = *((void *)v12 + 17);
          *((void *)v11 + 18) = v217;
          uint64_t v218 = *((void *)v12 + 20);
          *((void *)v11 + 19) = *((void *)v12 + 19);
          *((void *)v11 + 20) = v218;
          uint64_t v219 = *((void *)v12 + 22);
          *((void *)v11 + 21) = *((void *)v12 + 21);
          *((void *)v11 + 22) = v219;
          uint64_t v220 = *((void *)v12 + 24);
          *((void *)v11 + 23) = *((void *)v12 + 23);
          *((void *)v11 + 24) = v220;
          uint64_t v221 = *((void *)v12 + 26);
          *((void *)v11 + 25) = *((void *)v12 + 25);
          *((void *)v11 + 26) = v221;
          uint64_t v222 = *((void *)v12 + 28);
          *((void *)v11 + 27) = *((void *)v12 + 27);
          *((void *)v11 + 28) = v222;
          uint64_t v2648 = *((void *)v12 + 30);
          *((void *)v11 + 29) = *((void *)v12 + 29);
          *((void *)v11 + 30) = v2648;
          uint64_t v2634 = *((void *)v12 + 32);
          *((void *)v11 + 31) = *((void *)v12 + 31);
          *((void *)v11 + 32) = v2634;
          uint64_t v223 = *((void *)v12 + 34);
          *((void *)v11 + 33) = *((void *)v12 + 33);
          *((void *)v11 + 34) = v223;
          uint64_t v224 = *((void *)v12 + 36);
          uint64_t v2593 = *((void *)v12 + 35);
          v11[296] = v12[296];
          *((void *)v11 + 35) = v2593;
          *((void *)v11 + 36) = v224;
          uint64_t v2568 = *((void *)v12 + 39);
          *((void *)v11 + 38) = *((void *)v12 + 38);
          *((void *)v11 + 39) = v2568;
          v2665 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v225 = v2665[29];
          v2407 = &v11[v225];
          uint64_t v226 = &v12[v225];
          uint64_t v227 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v226, 1, v227))
          {
            uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2407, v226, *(void *)(*(void *)(v228 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16))(v2407, v226, v227);
            __swift_storeEnumTagSinglePayload((uint64_t)v2407, 0, 1, v227);
          }
          uint64_t v426 = v2665[30];
          v427 = &v11[v426];
          v428 = &v12[v426];
          uint64_t v429 = *((void *)v428 + 1);
          *(void *)v427 = *(void *)v428;
          *((void *)v427 + 1) = v429;
          uint64_t v430 = v2665[31];
          v431 = &v11[v430];
          v432 = &v12[v430];
          uint64_t v69 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v69))
          {
            uint64_t v433 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v431, v432, *(void *)(*(void *)(v433 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v431, v432, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v431, 0, 1, v69);
          }
          uint64_t v622 = v2665[32];
          v327 = &v11[v622];
          uint64_t v328 = (uint64_t)&v12[v622];
          if (!__swift_getEnumTagSinglePayload((uint64_t)&v12[v622], 1, v69))
          {
LABEL_143:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v327, v328, v69);
            uint64_t v436 = (uint64_t)v327;
            uint64_t v437 = v69;
            goto LABEL_144;
          }
LABEL_152:
          size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          uint64_t v352 = v327;
          uint64_t v353 = (const void *)v328;
          goto LABEL_153;
        case 0x15u:
          uint64_t v2569 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v2569;
          uint64_t v2526 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v2526;
          uint64_t v2493 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v2493;
          uint64_t v229 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v229;
          uint64_t v230 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v230;
          uint64_t v231 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v231;
          uint64_t v232 = *((void *)v12 + 13);
          *((void *)v11 + 12) = *((void *)v12 + 12);
          *((void *)v11 + 13) = v232;
          uint64_t v233 = *((void *)v12 + 15);
          *((void *)v11 + 14) = *((void *)v12 + 14);
          *((void *)v11 + 15) = v233;
          v11[128] = v12[128];
          *(_WORD *)(v11 + 129) = *(_WORD *)(v12 + 129);
          uint64_t v234 = *((void *)v12 + 18);
          *((void *)v11 + 17) = *((void *)v12 + 17);
          *((void *)v11 + 18) = v234;
          uint64_t v235 = *((void *)v12 + 20);
          *((void *)v11 + 19) = *((void *)v12 + 19);
          *((void *)v11 + 20) = v235;
          uint64_t v236 = *((void *)v12 + 22);
          *((void *)v11 + 21) = *((void *)v12 + 21);
          *((void *)v11 + 22) = v236;
          uint64_t v237 = *((void *)v12 + 24);
          *((void *)v11 + 23) = *((void *)v12 + 23);
          *((void *)v11 + 24) = v237;
          uint64_t v238 = *((void *)v12 + 26);
          *((void *)v11 + 25) = *((void *)v12 + 25);
          *((void *)v11 + 26) = v238;
          uint64_t v239 = *((void *)v12 + 28);
          *((void *)v11 + 27) = *((void *)v12 + 27);
          *((void *)v11 + 28) = v239;
          uint64_t v240 = *((void *)v12 + 30);
          *((void *)v11 + 29) = *((void *)v12 + 29);
          *((void *)v11 + 30) = v240;
          uint64_t v241 = *((void *)v12 + 32);
          *((void *)v11 + 31) = *((void *)v12 + 31);
          *((void *)v11 + 32) = v241;
          uint64_t v242 = *((void *)v12 + 34);
          uint64_t v243 = *((void *)v12 + 33);
          v11[280] = v12[280];
          *((void *)v11 + 33) = v243;
          *((void *)v11 + 34) = v242;
          uint64_t v244 = *((void *)v12 + 37);
          *((void *)v11 + 36) = *((void *)v12 + 36);
          *((void *)v11 + 37) = v244;
          uint64_t v2666 = type metadata accessor for Appointment(0);
          uint64_t v245 = *(int *)(v2666 + 108);
          v2416 = &v11[v245];
          uint64_t v246 = &v12[v245];
          uint64_t v190 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v246, 1, v190))
          {
            uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2416, v246, *(void *)(*(void *)(v247 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v2416, v246, v190);
            __swift_storeEnumTagSinglePayload((uint64_t)v2416, 0, 1, v190);
          }
          uint64_t v425 = *(int *)(v2666 + 112);
LABEL_112:
          v434 = &v11[v425];
          v435 = &v12[v425];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v425], 1, v190))
          {
            size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                         - 8)
                             + 64);
            uint64_t v352 = v434;
            uint64_t v353 = v435;
            goto LABEL_153;
          }
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v434, v435, v190);
          uint64_t v436 = (uint64_t)v434;
          uint64_t v437 = v190;
          goto LABEL_144;
        case 0x16u:
          uint64_t v2570 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v2570;
          uint64_t v2527 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v2527;
          uint64_t v2494 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v2494;
          uint64_t v248 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v248;
          uint64_t v249 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v249;
          uint64_t v250 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v250;
          uint64_t v251 = *((void *)v12 + 13);
          *((void *)v11 + 12) = *((void *)v12 + 12);
          *((void *)v11 + 13) = v251;
          uint64_t v252 = *((void *)v12 + 15);
          *((void *)v11 + 14) = *((void *)v12 + 14);
          *((void *)v11 + 15) = v252;
          v11[128] = v12[128];
          *(_WORD *)(v11 + 129) = *(_WORD *)(v12 + 129);
          uint64_t v253 = *((void *)v12 + 18);
          *((void *)v11 + 17) = *((void *)v12 + 17);
          *((void *)v11 + 18) = v253;
          uint64_t v254 = *((void *)v12 + 20);
          *((void *)v11 + 19) = *((void *)v12 + 19);
          *((void *)v11 + 20) = v254;
          uint64_t v255 = *((void *)v12 + 22);
          *((void *)v11 + 21) = *((void *)v12 + 21);
          *((void *)v11 + 22) = v255;
          uint64_t v256 = *((void *)v12 + 24);
          *((void *)v11 + 23) = *((void *)v12 + 23);
          *((void *)v11 + 24) = v256;
          uint64_t v257 = *((void *)v12 + 26);
          *((void *)v11 + 25) = *((void *)v12 + 25);
          *((void *)v11 + 26) = v257;
          uint64_t v258 = *((void *)v12 + 28);
          *((void *)v11 + 27) = *((void *)v12 + 27);
          *((void *)v11 + 28) = v258;
          uint64_t v259 = *((void *)v12 + 30);
          *((void *)v11 + 29) = *((void *)v12 + 29);
          *((void *)v11 + 30) = v259;
          *((void *)v11 + 31) = *((void *)v12 + 31);
          v2667 = (int *)type metadata accessor for Party(0);
          uint64_t v260 = v2667[24];
          v2428 = &v11[v260];
          uint64_t v261 = &v12[v260];
          uint64_t v262 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v261, 1, v262))
          {
            uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2428, v261, *(void *)(*(void *)(v263 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v2428, v261, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v2428, 0, 1, v262);
          }
          uint64_t v438 = v2667[25];
          v439 = &v11[v438];
          v440 = &v12[v438];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v438], 1, v262))
          {
            uint64_t v441 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v439, v440, *(void *)(*(void *)(v441 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v439, v440, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v439, 0, 1, v262);
          }
          uint64_t v623 = v2667[26];
          goto LABEL_158;
        case 0x17u:
          uint64_t v264 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v264;
          uint64_t v2614 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v2614;
          uint64_t v2594 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v2594;
          uint64_t v2571 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v2571;
          uint64_t v2528 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v2528;
          uint64_t v265 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v265;
          uint64_t v2495 = *((void *)v12 + 13);
          *((void *)v11 + 12) = *((void *)v12 + 12);
          *((void *)v11 + 13) = v2495;
          uint64_t v266 = *((void *)v12 + 15);
          *((void *)v11 + 14) = *((void *)v12 + 14);
          *((void *)v11 + 15) = v266;
          v11[128] = v12[128];
          *(_WORD *)(v11 + 129) = *(_WORD *)(v12 + 129);
          uint64_t v267 = *((void *)v12 + 18);
          *((void *)v11 + 17) = *((void *)v12 + 17);
          *((void *)v11 + 18) = v267;
          uint64_t v268 = *((void *)v12 + 20);
          *((void *)v11 + 19) = *((void *)v12 + 19);
          *((void *)v11 + 20) = v268;
          uint64_t v269 = *((void *)v12 + 22);
          *((void *)v11 + 21) = *((void *)v12 + 21);
          *((void *)v11 + 22) = v269;
          uint64_t v270 = *((void *)v12 + 24);
          *((void *)v11 + 23) = *((void *)v12 + 23);
          *((void *)v11 + 24) = v270;
          uint64_t v271 = *((void *)v12 + 26);
          *((void *)v11 + 25) = *((void *)v12 + 25);
          *((void *)v11 + 26) = v271;
          *((void *)v11 + 27) = *((void *)v12 + 27);
          v2668 = (int *)type metadata accessor for Trip(0);
          uint64_t v272 = v2668[22];
          v2445 = &v11[v272];
          v2455 = &v12[v272];
          uint64_t v273 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2455, 1, v273))
          {
            uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2445, v2455, *(void *)(*(void *)(v274 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v2445, v2455, v273);
            __swift_storeEnumTagSinglePayload((uint64_t)v2445, 0, 1, v273);
          }
          uint64_t v442 = v2668[23];
          v443 = &v11[v442];
          v444 = &v12[v442];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v442], 1, v273))
          {
            uint64_t v445 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v443, v444, *(void *)(*(void *)(v445 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v443, v444, v273);
            __swift_storeEnumTagSinglePayload((uint64_t)v443, 0, 1, v273);
          }
          uint64_t v624 = v2668[24];
          v625 = &v11[v624];
          v626 = &v12[v624];
          *(void *)v625 = *(void *)v626;
          v625[8] = v626[8];
          uint64_t v623 = v2668[25];
LABEL_158:
          uint64_t v343 = &v11[v623];
          uint64_t v344 = (uint64_t)&v12[v623];
          uint64_t v345 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload(v344, 1, v345))
          {
LABEL_87:
            size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                         - 8)
                             + 64);
            uint64_t v352 = v343;
            uint64_t v353 = (const void *)v344;
LABEL_153:
            memcpy(v352, v353, v351);
          }
          else
          {
LABEL_159:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v345 - 8) + 16))(v343, v344, v345);
            uint64_t v436 = (uint64_t)v343;
            uint64_t v437 = v345;
LABEL_144:
            __swift_storeEnumTagSinglePayload(v436, 0, 1, v437);
          }
LABEL_542:
          swift_storeEnumTagMultiPayload();
          uint64_t v2375 = type metadata accessor for SearchResult(0);
          uint64_t v2376 = *(int *)(v2375 + 20);
          v2377 = *(void **)&v12[v2376];
          *(void *)&v11[v2376] = v2377;
          uint64_t v2378 = *(int *)(v2375 + 24);
          v2379 = &v11[v2378];
          v2380 = &v12[v2378];
          uint64_t v2381 = *((void *)v2380 + 1);
          *(void *)v2379 = *(void *)v2380;
          *((void *)v2379 + 1) = v2381;
          id v2382 = v2377;
          swift_bridgeObjectRetain();
          break;
        case 0x18u:
          uint64_t v275 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v275;
          uint64_t v276 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v276;
          uint64_t v277 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v277;
          uint64_t v278 = (int *)type metadata accessor for GlobalItem();
          uint64_t v279 = v278[7];
          v280 = &v11[v279];
          uint64_t v281 = &v12[v279];
          uint64_t v282 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v281, 1, v282))
          {
            uint64_t v283 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v280, v281, *(void *)(*(void *)(v283 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 16))(v280, v281, v282);
            __swift_storeEnumTagSinglePayload((uint64_t)v280, 0, 1, v282);
          }
          uint64_t v446 = v278[8];
          v447 = &v11[v446];
          v448 = &v12[v446];
          unint64_t v449 = *((void *)v448 + 1);
          if (v449 >> 60 == 15)
          {
            *(_OWORD *)v447 = *(_OWORD *)v448;
          }
          else
          {
            uint64_t v450 = *(void *)v448;
            outlined copy of Data._Representation(*(void *)v448, *((void *)v448 + 1));
            *(void *)v447 = v450;
            *((void *)v447 + 1) = v449;
          }
          v11[v278[9]] = v12[v278[9]];
          uint64_t v451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)&v11[*(int *)(v451 + 48)] = *(void *)&v12[*(int *)(v451 + 48)];
          swift_bridgeObjectRetain();
          goto LABEL_542;
        case 0x19u:
          uint64_t v284 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v284;
          uint64_t v285 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v285;
          uint64_t v286 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v286;
          uint64_t v287 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v287;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_541;
        case 0x1Au:
          uint64_t v288 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v288;
          uint64_t v289 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v289;
          uint64_t v290 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v290;
          *((void *)v11 + 6) = *((void *)v12 + 6);
          uint64_t v291 = type metadata accessor for Answer(0);
          uint64_t v292 = *(int *)(v291 + 36);
          v2649 = &v11[v292];
          uint64_t v2669 = v291;
          uint64_t v293 = &v12[v292];
          uint64_t v294 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
          {
            uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2649, v293, *(void *)(*(void *)(v295 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 16))(v2649, v293, v294);
            __swift_storeEnumTagSinglePayload((uint64_t)v2649, 0, 1, v294);
          }
          v11[*(int *)(v2669 + 40)] = v12[*(int *)(v2669 + 40)];
          uint64_t v452 = *(int *)(v2669 + 44);
          v453 = &v11[v452];
          v454 = &v12[v452];
          uint64_t v455 = *((void *)v454 + 1);
          *(void *)v453 = *(void *)v454;
          *((void *)v453 + 1) = v455;
          goto LABEL_541;
        default:
          v2639 = a1;
          uint64_t v15 = *((void *)v12 + 1);
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = v15;
          uint64_t v16 = *((void *)v12 + 3);
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *((void *)v11 + 3) = v16;
          uint64_t v17 = *((void *)v12 + 5);
          *((void *)v11 + 4) = *((void *)v12 + 4);
          *((void *)v11 + 5) = v17;
          uint64_t v18 = *((void *)v12 + 7);
          *((void *)v11 + 6) = *((void *)v12 + 6);
          *((void *)v11 + 7) = v18;
          uint64_t v19 = *((void *)v12 + 9);
          *((void *)v11 + 8) = *((void *)v12 + 8);
          *((void *)v11 + 9) = v19;
          uint64_t v2654 = *((void *)v12 + 11);
          *((void *)v11 + 10) = *((void *)v12 + 10);
          *((void *)v11 + 11) = v2654;
          uint64_t v20 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v21 = v20[12];
          v2564 = &v12[v21];
          v2586 = &v11[v21];
          uint64_t v22 = type metadata accessor for Date();
          unint64_t v23 = *(void (**)(void, void, void))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2607 = (void (*)(char *, char *, uint64_t))v23;
          uint64_t v2625 = v22;
          v23(v2586, v2564, v22);
          *(void *)&v11[v20[13]] = *(void *)&v12[v20[13]];
          *(void *)&v11[v20[14]] = *(void *)&v12[v20[14]];
          *(void *)&v11[v20[15]] = *(void *)&v12[v20[15]];
          v11[v20[16]] = v12[v20[16]];
          v11[v20[17]] = v12[v20[17]];
          uint64_t v24 = v20[18];
          uint64_t v25 = &v11[v24];
          uint64_t v26 = &v12[v24];
          uint64_t v27 = *((void *)v26 + 1);
          *(void *)uint64_t v25 = *(void *)v26;
          *((void *)v25 + 1) = v27;
          v2655 = v20;
          uint64_t v28 = v20[19];
          uint64_t v29 = &v11[v28];
          os_log_type_t v30 = &v12[v28];
          uint64_t v31 = *(void *)&v12[v28];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v31)
          {
            uint64_t v32 = *((void *)v30 + 1);
            uint64_t v33 = *((void *)v30 + 2);
            *(void *)uint64_t v29 = v31;
            *((void *)v29 + 1) = v32;
            uint64_t v34 = *((void *)v30 + 3);
            uint64_t v35 = *((void *)v30 + 4);
            *((void *)v29 + 2) = v33;
            *((void *)v29 + 3) = v34;
            *((void *)v29 + 4) = v35;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v296 = *((_OWORD *)v30 + 1);
            *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
            *((_OWORD *)v29 + 1) = v296;
            *((void *)v29 + 4) = *((void *)v30 + 4);
          }
          uint64_t v297 = v20[20];
          uint64_t v298 = &v11[v297];
          uint64_t v299 = &v12[v297];
          uint64_t v300 = *((void *)v299 + 1);
          *(void *)uint64_t v298 = *(void *)v299;
          *((void *)v298 + 1) = v300;
          uint64_t v301 = v20[21];
          uint64_t v302 = &v11[v301];
          uint64_t v303 = &v12[v301];
          uint64_t v304 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          a1 = v2639;
          if (__swift_getEnumTagSinglePayload((uint64_t)v303, 1, (uint64_t)v304))
          {
            uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v302, v303, *(void *)(*(void *)(v305 - 8) + 64));
          }
          else
          {
            uint64_t v456 = *((void *)v303 + 1);
            *(void *)uint64_t v302 = *(void *)v303;
            *((void *)v302 + 1) = v456;
            uint64_t v457 = v304[5];
            v458 = &v302[v457];
            v459 = &v303[v457];
            uint64_t v460 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2572 = v304;
            v2496 = v303;
            if (__swift_getEnumTagSinglePayload((uint64_t)v459, 1, v460))
            {
              uint64_t v461 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v458, v459, *(void *)(*(void *)(v461 - 8) + 64));
            }
            else
            {
              uint64_t v679 = *((void *)v459 + 1);
              *(void *)v458 = *(void *)v459;
              *((void *)v458 + 1) = v679;
              uint64_t v680 = *((void *)v459 + 3);
              *((void *)v458 + 2) = *((void *)v459 + 2);
              *((void *)v458 + 3) = v680;
              uint64_t v681 = *((void *)v459 + 5);
              *((void *)v458 + 4) = *((void *)v459 + 4);
              *((void *)v458 + 5) = v681;
              uint64_t v682 = *((void *)v459 + 7);
              *((void *)v458 + 6) = *((void *)v459 + 6);
              *((void *)v458 + 7) = v682;
              uint64_t v683 = *((void *)v459 + 9);
              *((void *)v458 + 8) = *((void *)v459 + 8);
              *((void *)v458 + 9) = v683;
              uint64_t v684 = *((void *)v459 + 11);
              *((void *)v458 + 10) = *((void *)v459 + 10);
              *((void *)v458 + 11) = v684;
              uint64_t v685 = *((void *)v459 + 13);
              *((void *)v458 + 12) = *((void *)v459 + 12);
              *((void *)v458 + 13) = v685;
              uint64_t v686 = *((void *)v459 + 15);
              *((void *)v458 + 14) = *((void *)v459 + 14);
              *((void *)v458 + 15) = v686;
              v458[128] = v459[128];
              *(_WORD *)(v458 + 129) = *(_WORD *)(v459 + 129);
              uint64_t v687 = *((void *)v459 + 18);
              *((void *)v458 + 17) = *((void *)v459 + 17);
              *((void *)v458 + 18) = v687;
              uint64_t v688 = *((void *)v459 + 20);
              *((void *)v458 + 19) = *((void *)v459 + 19);
              *((void *)v458 + 20) = v688;
              uint64_t v689 = *((void *)v459 + 22);
              *((void *)v458 + 21) = *((void *)v459 + 21);
              *((void *)v458 + 22) = v689;
              uint64_t v2387 = *((void *)v459 + 24);
              *((void *)v458 + 23) = *((void *)v459 + 23);
              *((void *)v458 + 24) = v2387;
              uint64_t v690 = *((void *)v459 + 26);
              *((void *)v458 + 25) = *((void *)v459 + 25);
              *((void *)v458 + 26) = v690;
              uint64_t v691 = *((void *)v459 + 28);
              *((void *)v458 + 27) = *((void *)v459 + 27);
              *((void *)v458 + 28) = v691;
              uint64_t v692 = *((void *)v459 + 30);
              *((void *)v458 + 29) = *((void *)v459 + 29);
              *((void *)v458 + 30) = v692;
              uint64_t v2530 = *((void *)v459 + 32);
              *((void *)v458 + 31) = *((void *)v459 + 31);
              *((void *)v458 + 32) = v2530;
              uint64_t v693 = *((void *)v459 + 34);
              *((void *)v458 + 33) = *((void *)v459 + 33);
              *((void *)v458 + 34) = v693;
              uint64_t v694 = *((void *)v459 + 36);
              *((void *)v458 + 35) = *((void *)v459 + 35);
              *((void *)v458 + 36) = v694;
              uint64_t v695 = *((void *)v459 + 38);
              *((void *)v458 + 37) = *((void *)v459 + 37);
              *((void *)v458 + 38) = v695;
              uint64_t v696 = *((void *)v459 + 40);
              *((void *)v458 + 39) = *((void *)v459 + 39);
              *((void *)v458 + 40) = v696;
              uint64_t v697 = *((void *)v459 + 42);
              *((void *)v458 + 41) = *((void *)v459 + 41);
              *((void *)v458 + 42) = v697;
              uint64_t v698 = *((void *)v459 + 44);
              *((void *)v458 + 43) = *((void *)v459 + 43);
              *((void *)v458 + 44) = v698;
              uint64_t v699 = *((void *)v459 + 46);
              *((void *)v458 + 45) = *((void *)v459 + 45);
              *((void *)v458 + 46) = v699;
              uint64_t v700 = *((void *)v459 + 47);
              v458[384] = v459[384];
              *((void *)v458 + 47) = v700;
              uint64_t v701 = *((void *)v459 + 50);
              *((void *)v458 + 49) = *((void *)v459 + 49);
              *((void *)v458 + 50) = v701;
              uint64_t v702 = *((void *)v459 + 52);
              *((void *)v458 + 51) = *((void *)v459 + 51);
              *((void *)v458 + 52) = v702;
              uint64_t v703 = *(int *)(v460 + 140);
              v2384 = &v458[v703];
              v704 = &v459[v703];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v704, 1, v2625))
              {
                uint64_t v705 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2384, v704, *(void *)(*(void *)(v705 - 8) + 64));
              }
              else
              {
                v2607(v2384, v704, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v2384, 0, 1, v2625);
              }
              uint64_t v1301 = *(int *)(v460 + 144);
              v1302 = &v458[v1301];
              v1303 = &v459[v1301];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v459[v1301], 1, v2625))
              {
                uint64_t v1304 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1302, v1303, *(void *)(*(void *)(v1304 - 8) + 64));
              }
              else
              {
                v2607(v1302, v1303, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1302, 0, 1, v2625);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v458, 0, 1, v460);
              uint64_t v303 = v2496;
            }
            uint64_t v1309 = v304[6];
            v1310 = &v302[v1309];
            v1311 = &v303[v1309];
            uint64_t v1312 = type metadata accessor for TicketedTransportation(0);
            v2544 = v302;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1311, 1, v1312))
            {
              uint64_t v1313 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v1310, v1311, *(void *)(*(void *)(v1313 - 8) + 64));
            }
            else
            {
              uint64_t v1314 = *((void *)v1311 + 1);
              *(void *)v1310 = *(void *)v1311;
              *((void *)v1310 + 1) = v1314;
              uint64_t v1315 = *((void *)v1311 + 3);
              *((void *)v1310 + 2) = *((void *)v1311 + 2);
              *((void *)v1310 + 3) = v1315;
              uint64_t v1316 = *((void *)v1311 + 5);
              *((void *)v1310 + 4) = *((void *)v1311 + 4);
              *((void *)v1310 + 5) = v1316;
              uint64_t v1317 = *((void *)v1311 + 7);
              *((void *)v1310 + 6) = *((void *)v1311 + 6);
              *((void *)v1310 + 7) = v1317;
              uint64_t v1318 = *((void *)v1311 + 9);
              *((void *)v1310 + 8) = *((void *)v1311 + 8);
              *((void *)v1310 + 9) = v1318;
              uint64_t v1319 = *((void *)v1311 + 11);
              *((void *)v1310 + 10) = *((void *)v1311 + 10);
              *((void *)v1310 + 11) = v1319;
              uint64_t v1320 = *((void *)v1311 + 13);
              *((void *)v1310 + 12) = *((void *)v1311 + 12);
              *((void *)v1310 + 13) = v1320;
              uint64_t v1321 = *((void *)v1311 + 15);
              *((void *)v1310 + 14) = *((void *)v1311 + 14);
              *((void *)v1310 + 15) = v1321;
              v1310[128] = v1311[128];
              *(_WORD *)(v1310 + 129) = *(_WORD *)(v1311 + 129);
              uint64_t v1322 = *((void *)v1311 + 18);
              *((void *)v1310 + 17) = *((void *)v1311 + 17);
              *((void *)v1310 + 18) = v1322;
              uint64_t v1323 = *((void *)v1311 + 20);
              *((void *)v1310 + 19) = *((void *)v1311 + 19);
              *((void *)v1310 + 20) = v1323;
              uint64_t v1324 = *((void *)v1311 + 22);
              *((void *)v1310 + 21) = *((void *)v1311 + 21);
              *((void *)v1310 + 22) = v1324;
              uint64_t v1325 = *((void *)v1311 + 24);
              *((void *)v1310 + 23) = *((void *)v1311 + 23);
              *((void *)v1310 + 24) = v1325;
              uint64_t v2467 = *((void *)v1311 + 26);
              *((void *)v1310 + 25) = *((void *)v1311 + 25);
              *((void *)v1310 + 26) = v2467;
              uint64_t v1326 = *((void *)v1311 + 28);
              *((void *)v1310 + 27) = *((void *)v1311 + 27);
              *((void *)v1310 + 28) = v1326;
              uint64_t v1327 = *((void *)v1311 + 30);
              *((void *)v1310 + 29) = *((void *)v1311 + 29);
              *((void *)v1310 + 30) = v1327;
              uint64_t v1328 = *((void *)v1311 + 32);
              *((void *)v1310 + 31) = *((void *)v1311 + 31);
              *((void *)v1310 + 32) = v1328;
              uint64_t v1329 = *((void *)v1311 + 34);
              *((void *)v1310 + 33) = *((void *)v1311 + 33);
              *((void *)v1310 + 34) = v1329;
              uint64_t v1330 = *((void *)v1311 + 36);
              uint64_t v1331 = *((void *)v1311 + 35);
              v1310[296] = v1311[296];
              *((void *)v1310 + 35) = v1331;
              *((void *)v1310 + 36) = v1330;
              uint64_t v2478 = v1312;
              uint64_t v1332 = *(int *)(v1312 + 112);
              v2389 = &v1310[v1332];
              v1333 = &v1311[v1332];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1333, 1, v2625))
              {
                uint64_t v1334 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2389, v1333, *(void *)(*(void *)(v1334 - 8) + 64));
              }
              else
              {
                v2607(v2389, v1333, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v2389, 0, 1, v2625);
              }
              uint64_t v1361 = *(int *)(v1312 + 116);
              v1362 = &v1310[v1361];
              v1363 = &v1311[v1361];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1311[v1361], 1, v2625))
              {
                uint64_t v1364 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1362, v1363, *(void *)(*(void *)(v1364 - 8) + 64));
              }
              else
              {
                v2607(v1362, v1363, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1362, 0, 1, v2625);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1310, 0, 1, v2478);
              uint64_t v303 = v2496;
            }
            uint64_t v1369 = v304[7];
            v1370 = &v302[v1369];
            v1371 = &v303[v1369];
            v1372 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1371, 1, (uint64_t)v1372))
            {
              uint64_t v1373 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v1370, v1371, *(void *)(*(void *)(v1373 - 8) + 64));
            }
            else
            {
              uint64_t v1374 = *((void *)v1371 + 1);
              *(void *)v1370 = *(void *)v1371;
              *((void *)v1370 + 1) = v1374;
              uint64_t v1375 = *((void *)v1371 + 3);
              *((void *)v1370 + 2) = *((void *)v1371 + 2);
              *((void *)v1370 + 3) = v1375;
              uint64_t v1376 = *((void *)v1371 + 5);
              *((void *)v1370 + 4) = *((void *)v1371 + 4);
              *((void *)v1370 + 5) = v1376;
              uint64_t v1377 = *((void *)v1371 + 7);
              *((void *)v1370 + 6) = *((void *)v1371 + 6);
              *((void *)v1370 + 7) = v1377;
              uint64_t v1378 = *((void *)v1371 + 9);
              *((void *)v1370 + 8) = *((void *)v1371 + 8);
              *((void *)v1370 + 9) = v1378;
              uint64_t v1379 = *((void *)v1371 + 11);
              *((void *)v1370 + 10) = *((void *)v1371 + 10);
              *((void *)v1370 + 11) = v1379;
              uint64_t v1380 = *((void *)v1371 + 13);
              *((void *)v1370 + 12) = *((void *)v1371 + 12);
              *((void *)v1370 + 13) = v1380;
              uint64_t v1381 = *((void *)v1371 + 15);
              *((void *)v1370 + 14) = *((void *)v1371 + 14);
              *((void *)v1370 + 15) = v1381;
              v1370[128] = v1371[128];
              *(_WORD *)(v1370 + 129) = *(_WORD *)(v1371 + 129);
              uint64_t v1382 = *((void *)v1371 + 18);
              *((void *)v1370 + 17) = *((void *)v1371 + 17);
              *((void *)v1370 + 18) = v1382;
              uint64_t v1383 = *((void *)v1371 + 20);
              *((void *)v1370 + 19) = *((void *)v1371 + 19);
              *((void *)v1370 + 20) = v1383;
              uint64_t v1384 = *((void *)v1371 + 22);
              *((void *)v1370 + 21) = *((void *)v1371 + 21);
              *((void *)v1370 + 22) = v1384;
              uint64_t v1385 = *((void *)v1371 + 24);
              *((void *)v1370 + 23) = *((void *)v1371 + 23);
              *((void *)v1370 + 24) = v1385;
              uint64_t v1386 = *((void *)v1371 + 26);
              *((void *)v1370 + 25) = *((void *)v1371 + 25);
              *((void *)v1370 + 26) = v1386;
              uint64_t v1387 = *((void *)v1371 + 28);
              *((void *)v1370 + 27) = *((void *)v1371 + 27);
              *((void *)v1370 + 28) = v1387;
              uint64_t v2479 = *((void *)v1371 + 30);
              *((void *)v1370 + 29) = *((void *)v1371 + 29);
              *((void *)v1370 + 30) = v2479;
              uint64_t v1388 = *((void *)v1371 + 32);
              *((void *)v1370 + 31) = *((void *)v1371 + 31);
              *((void *)v1370 + 32) = v1388;
              uint64_t v1389 = *((void *)v1371 + 34);
              *((void *)v1370 + 33) = *((void *)v1371 + 33);
              *((void *)v1370 + 34) = v1389;
              uint64_t v1390 = *((void *)v1371 + 36);
              uint64_t v1391 = *((void *)v1371 + 35);
              v1370[296] = v1371[296];
              *((void *)v1370 + 35) = v1391;
              *((void *)v1370 + 36) = v1390;
              uint64_t v1392 = *((void *)v1371 + 39);
              *((void *)v1370 + 38) = *((void *)v1371 + 38);
              *((void *)v1370 + 39) = v1392;
              uint64_t v1393 = v1372[29];
              v2386 = &v1370[v1393];
              v1394 = &v1371[v1393];
              uint64_t v1395 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1394, 1, v1395))
              {
                uint64_t v1396 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2386, v1394, *(void *)(*(void *)(v1396 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1395 - 8) + 16))(v2386, v1394, v1395);
                __swift_storeEnumTagSinglePayload((uint64_t)v2386, 0, 1, v1395);
              }
              uint64_t v1424 = v1372[30];
              v1425 = &v1370[v1424];
              v1426 = &v1371[v1424];
              uint64_t v1427 = *((void *)v1426 + 1);
              *(void *)v1425 = *(void *)v1426;
              *((void *)v1425 + 1) = v1427;
              uint64_t v1428 = v1372[31];
              v1429 = &v1370[v1428];
              v1430 = &v1371[v1428];
              swift_bridgeObjectRetain();
              uint64_t v304 = v2572;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1430, 1, v2625))
              {
                uint64_t v1431 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1429, v1430, *(void *)(*(void *)(v1431 - 8) + 64));
              }
              else
              {
                v2607(v1429, v1430, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1429, 0, 1, v2625);
              }
              uint64_t v1440 = v1372[32];
              v1441 = &v1370[v1440];
              v1442 = &v1371[v1440];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1371[v1440], 1, v2625))
              {
                uint64_t v1443 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1441, v1442, *(void *)(*(void *)(v1443 - 8) + 64));
              }
              else
              {
                v2607(v1441, v1442, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1441, 0, 1, v2625);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1370, 0, 1, (uint64_t)v1372);
              uint64_t v303 = v2496;
            }
            uint64_t v1448 = v304[8];
            v1449 = &v302[v1448];
            v1450 = &v303[v1448];
            uint64_t v1451 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1450, 1, v1451))
            {
              uint64_t v1452 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1449, v1450, *(void *)(*(void *)(v1452 - 8) + 64));
            }
            else
            {
              uint64_t v1453 = *((void *)v1450 + 1);
              *(void *)v1449 = *(void *)v1450;
              *((void *)v1449 + 1) = v1453;
              uint64_t v1454 = *((void *)v1450 + 3);
              *((void *)v1449 + 2) = *((void *)v1450 + 2);
              *((void *)v1449 + 3) = v1454;
              uint64_t v1455 = *((void *)v1450 + 5);
              *((void *)v1449 + 4) = *((void *)v1450 + 4);
              *((void *)v1449 + 5) = v1455;
              uint64_t v1456 = *((void *)v1450 + 7);
              *((void *)v1449 + 6) = *((void *)v1450 + 6);
              *((void *)v1449 + 7) = v1456;
              uint64_t v1457 = *((void *)v1450 + 9);
              *((void *)v1449 + 8) = *((void *)v1450 + 8);
              *((void *)v1449 + 9) = v1457;
              uint64_t v1458 = *((void *)v1450 + 11);
              *((void *)v1449 + 10) = *((void *)v1450 + 10);
              *((void *)v1449 + 11) = v1458;
              uint64_t v1459 = *((void *)v1450 + 13);
              *((void *)v1449 + 12) = *((void *)v1450 + 12);
              *((void *)v1449 + 13) = v1459;
              uint64_t v1460 = *((void *)v1450 + 15);
              *((void *)v1449 + 14) = *((void *)v1450 + 14);
              *((void *)v1449 + 15) = v1460;
              v1449[128] = v1450[128];
              *(_WORD *)(v1449 + 129) = *(_WORD *)(v1450 + 129);
              uint64_t v1461 = *((void *)v1450 + 18);
              *((void *)v1449 + 17) = *((void *)v1450 + 17);
              *((void *)v1449 + 18) = v1461;
              uint64_t v1462 = *((void *)v1450 + 20);
              *((void *)v1449 + 19) = *((void *)v1450 + 19);
              *((void *)v1449 + 20) = v1462;
              uint64_t v1463 = *((void *)v1450 + 22);
              *((void *)v1449 + 21) = *((void *)v1450 + 21);
              *((void *)v1449 + 22) = v1463;
              uint64_t v1464 = *((void *)v1450 + 24);
              *((void *)v1449 + 23) = *((void *)v1450 + 23);
              *((void *)v1449 + 24) = v1464;
              uint64_t v1465 = *((void *)v1450 + 26);
              *((void *)v1449 + 25) = *((void *)v1450 + 25);
              *((void *)v1449 + 26) = v1465;
              uint64_t v1466 = *((void *)v1450 + 28);
              *((void *)v1449 + 27) = *((void *)v1450 + 27);
              *((void *)v1449 + 28) = v1466;
              uint64_t v1467 = *((void *)v1450 + 30);
              *((void *)v1449 + 29) = *((void *)v1450 + 29);
              *((void *)v1449 + 30) = v1467;
              uint64_t v1468 = *((void *)v1450 + 32);
              *((void *)v1449 + 31) = *((void *)v1450 + 31);
              *((void *)v1449 + 32) = v1468;
              uint64_t v1469 = *((void *)v1450 + 34);
              uint64_t v1470 = *((void *)v1450 + 33);
              v1449[280] = v1450[280];
              *((void *)v1449 + 33) = v1470;
              *((void *)v1449 + 34) = v1469;
              uint64_t v1471 = v1451;
              uint64_t v1472 = *((void *)v1450 + 37);
              *((void *)v1449 + 36) = *((void *)v1450 + 36);
              *((void *)v1449 + 37) = v1472;
              uint64_t v2480 = v1471;
              uint64_t v1473 = *(int *)(v1471 + 108);
              __dstb = &v1449[v1473];
              v1474 = &v1450[v1473];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1474, 1, v2625))
              {
                uint64_t v1475 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(__dstb, v1474, *(void *)(*(void *)(v1475 - 8) + 64));
              }
              else
              {
                v2607(__dstb, v1474, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v2625);
              }
              uint64_t v1504 = *(int *)(v2480 + 112);
              v1505 = &v1449[v1504];
              v1506 = &v1450[v1504];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1450[v1504], 1, v2625))
              {
                uint64_t v1507 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1505, v1506, *(void *)(*(void *)(v1507 - 8) + 64));
              }
              else
              {
                v2607(v1505, v1506, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1505, 0, 1, v2625);
              }
              uint64_t v304 = v2572;
              __swift_storeEnumTagSinglePayload((uint64_t)v1449, 0, 1, v2480);
              uint64_t v303 = v2496;
            }
            uint64_t v1512 = v304[9];
            v1513 = &v302[v1512];
            v1514 = &v303[v1512];
            uint64_t v1515 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1514, 1, v1515))
            {
              uint64_t v1516 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1513, v1514, *(void *)(*(void *)(v1516 - 8) + 64));
            }
            else
            {
              uint64_t v1517 = *((void *)v1514 + 1);
              *(void *)v1513 = *(void *)v1514;
              *((void *)v1513 + 1) = v1517;
              uint64_t v1518 = *((void *)v1514 + 3);
              *((void *)v1513 + 2) = *((void *)v1514 + 2);
              *((void *)v1513 + 3) = v1518;
              uint64_t v1519 = *((void *)v1514 + 5);
              *((void *)v1513 + 4) = *((void *)v1514 + 4);
              *((void *)v1513 + 5) = v1519;
              uint64_t v1520 = *((void *)v1514 + 7);
              *((void *)v1513 + 6) = *((void *)v1514 + 6);
              *((void *)v1513 + 7) = v1520;
              uint64_t v1521 = *((void *)v1514 + 9);
              *((void *)v1513 + 8) = *((void *)v1514 + 8);
              *((void *)v1513 + 9) = v1521;
              uint64_t v1522 = *((void *)v1514 + 11);
              *((void *)v1513 + 10) = *((void *)v1514 + 10);
              *((void *)v1513 + 11) = v1522;
              uint64_t v1523 = *((void *)v1514 + 13);
              *((void *)v1513 + 12) = *((void *)v1514 + 12);
              *((void *)v1513 + 13) = v1523;
              uint64_t v1524 = *((void *)v1514 + 15);
              *((void *)v1513 + 14) = *((void *)v1514 + 14);
              *((void *)v1513 + 15) = v1524;
              v1513[128] = v1514[128];
              *(_WORD *)(v1513 + 129) = *(_WORD *)(v1514 + 129);
              uint64_t v1525 = *((void *)v1514 + 18);
              *((void *)v1513 + 17) = *((void *)v1514 + 17);
              *((void *)v1513 + 18) = v1525;
              uint64_t v1526 = *((void *)v1514 + 20);
              *((void *)v1513 + 19) = *((void *)v1514 + 19);
              *((void *)v1513 + 20) = v1526;
              uint64_t v1527 = *((void *)v1514 + 22);
              *((void *)v1513 + 21) = *((void *)v1514 + 21);
              *((void *)v1513 + 22) = v1527;
              uint64_t v1528 = *((void *)v1514 + 24);
              *((void *)v1513 + 23) = *((void *)v1514 + 23);
              *((void *)v1513 + 24) = v1528;
              uint64_t v1529 = *((void *)v1514 + 26);
              *((void *)v1513 + 25) = *((void *)v1514 + 25);
              *((void *)v1513 + 26) = v1529;
              uint64_t v1530 = *((void *)v1514 + 28);
              *((void *)v1513 + 27) = *((void *)v1514 + 27);
              *((void *)v1513 + 28) = v1530;
              uint64_t v1531 = *((void *)v1514 + 30);
              *((void *)v1513 + 29) = *((void *)v1514 + 29);
              *((void *)v1513 + 30) = v1531;
              uint64_t v2481 = v1515;
              *((void *)v1513 + 31) = *((void *)v1514 + 31);
              uint64_t v1532 = *(int *)(v1515 + 96);
              v2397 = &v1513[v1532];
              v2399 = &v1514[v1532];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2399, 1, v2625))
              {
                uint64_t v1533 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2397, v2399, *(void *)(*(void *)(v1533 - 8) + 64));
              }
              else
              {
                v2607(v2397, v2399, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v2397, 0, 1, v2625);
              }
              uint64_t v1556 = *(int *)(v1515 + 100);
              v1557 = &v1513[v1556];
              v1558 = &v1514[v1556];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1514[v1556], 1, v2625))
              {
                uint64_t v1559 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1557, v1558, *(void *)(*(void *)(v1559 - 8) + 64));
              }
              else
              {
                v2607(v1557, v1558, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1557, 0, 1, v2625);
              }
              uint64_t v1564 = *(int *)(v2481 + 104);
              v1565 = &v1513[v1564];
              v1566 = &v1514[v1564];
              uint64_t v1567 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1566, 1, v1567))
              {
                uint64_t v1568 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1565, v1566, *(void *)(*(void *)(v1568 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1567 - 8) + 16))(v1565, v1566, v1567);
                __swift_storeEnumTagSinglePayload((uint64_t)v1565, 0, 1, v1567);
              }
              uint64_t v304 = v2572;
              __swift_storeEnumTagSinglePayload((uint64_t)v1513, 0, 1, v2481);
              uint64_t v303 = v2496;
            }
            uint64_t v1573 = v304[10];
            v1574 = &v302[v1573];
            v1575 = &v303[v1573];
            uint64_t v1576 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1575, 1, v1576))
            {
              uint64_t v1577 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1574, v1575, *(void *)(*(void *)(v1577 - 8) + 64));
            }
            else
            {
              uint64_t v1578 = *((void *)v1575 + 1);
              *(void *)v1574 = *(void *)v1575;
              *((void *)v1574 + 1) = v1578;
              uint64_t v1579 = *((void *)v1575 + 3);
              *((void *)v1574 + 2) = *((void *)v1575 + 2);
              *((void *)v1574 + 3) = v1579;
              uint64_t v1580 = *((void *)v1575 + 5);
              *((void *)v1574 + 4) = *((void *)v1575 + 4);
              *((void *)v1574 + 5) = v1580;
              uint64_t v1581 = *((void *)v1575 + 7);
              *((void *)v1574 + 6) = *((void *)v1575 + 6);
              *((void *)v1574 + 7) = v1581;
              uint64_t v1582 = *((void *)v1575 + 9);
              *((void *)v1574 + 8) = *((void *)v1575 + 8);
              *((void *)v1574 + 9) = v1582;
              uint64_t v1583 = *((void *)v1575 + 11);
              *((void *)v1574 + 10) = *((void *)v1575 + 10);
              *((void *)v1574 + 11) = v1583;
              uint64_t v1584 = *((void *)v1575 + 13);
              *((void *)v1574 + 12) = *((void *)v1575 + 12);
              *((void *)v1574 + 13) = v1584;
              uint64_t v1585 = *((void *)v1575 + 15);
              *((void *)v1574 + 14) = *((void *)v1575 + 14);
              *((void *)v1574 + 15) = v1585;
              v1574[128] = v1575[128];
              *(_WORD *)(v1574 + 129) = *(_WORD *)(v1575 + 129);
              uint64_t v1586 = *((void *)v1575 + 18);
              *((void *)v1574 + 17) = *((void *)v1575 + 17);
              *((void *)v1574 + 18) = v1586;
              uint64_t v1587 = *((void *)v1575 + 20);
              *((void *)v1574 + 19) = *((void *)v1575 + 19);
              *((void *)v1574 + 20) = v1587;
              uint64_t v1588 = *((void *)v1575 + 22);
              *((void *)v1574 + 21) = *((void *)v1575 + 21);
              *((void *)v1574 + 22) = v1588;
              uint64_t v1589 = *((void *)v1575 + 24);
              *((void *)v1574 + 23) = *((void *)v1575 + 23);
              *((void *)v1574 + 24) = v1589;
              uint64_t v1590 = *((void *)v1575 + 26);
              *((void *)v1574 + 25) = *((void *)v1575 + 25);
              *((void *)v1574 + 26) = v1590;
              *((void *)v1574 + 27) = *((void *)v1575 + 27);
              uint64_t v2482 = v1576;
              uint64_t v1591 = *(int *)(v1576 + 88);
              v2402 = &v1574[v1591];
              v2405 = &v1575[v1591];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2405, 1, v2625))
              {
                uint64_t v1592 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2402, v2405, *(void *)(*(void *)(v1592 - 8) + 64));
              }
              else
              {
                v2607(v2402, v2405, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v2402, 0, 1, v2625);
              }
              uint64_t v1613 = *(int *)(v1576 + 92);
              v1614 = &v1574[v1613];
              v1615 = &v1575[v1613];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1575[v1613], 1, v2625))
              {
                uint64_t v1616 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1614, v1615, *(void *)(*(void *)(v1616 - 8) + 64));
              }
              else
              {
                v2607(v1614, v1615, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v1614, 0, 1, v2625);
              }
              uint64_t v1621 = *(int *)(v2482 + 96);
              v1622 = &v1574[v1621];
              v1623 = &v1575[v1621];
              *(void *)v1622 = *(void *)v1623;
              v1622[8] = v1623[8];
              uint64_t v1624 = *(int *)(v2482 + 100);
              v1625 = &v1574[v1624];
              v1626 = &v1575[v1624];
              uint64_t v1627 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1626, 1, v1627))
              {
                uint64_t v1628 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1625, v1626, *(void *)(*(void *)(v1628 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1627 - 8) + 16))(v1625, v1626, v1627);
                __swift_storeEnumTagSinglePayload((uint64_t)v1625, 0, 1, v1627);
              }
              uint64_t v304 = v2572;
              __swift_storeEnumTagSinglePayload((uint64_t)v1574, 0, 1, v2482);
              uint64_t v303 = v2496;
            }
            uint64_t v1636 = v304[11];
            v1637 = &v302[v1636];
            v1638 = &v303[v1636];
            v1639 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1638, 1, (uint64_t)v1639))
            {
              uint64_t v1640 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1637, v1638, *(void *)(*(void *)(v1640 - 8) + 64));
            }
            else
            {
              uint64_t v1641 = *((void *)v1638 + 1);
              *(void *)v1637 = *(void *)v1638;
              *((void *)v1637 + 1) = v1641;
              uint64_t v1642 = *((void *)v1638 + 3);
              *((void *)v1637 + 2) = *((void *)v1638 + 2);
              *((void *)v1637 + 3) = v1642;
              uint64_t v1643 = *((void *)v1638 + 5);
              *((void *)v1637 + 4) = *((void *)v1638 + 4);
              *((void *)v1637 + 5) = v1643;
              uint64_t v1644 = *((void *)v1638 + 7);
              *((void *)v1637 + 6) = *((void *)v1638 + 6);
              *((void *)v1637 + 7) = v1644;
              uint64_t v1645 = *((void *)v1638 + 9);
              *((void *)v1637 + 8) = *((void *)v1638 + 8);
              *((void *)v1637 + 9) = v1645;
              uint64_t v1646 = *((void *)v1638 + 11);
              *((void *)v1637 + 10) = *((void *)v1638 + 10);
              *((void *)v1637 + 11) = v1646;
              v1637[96] = v1638[96];
              uint64_t v1647 = *((void *)v1638 + 14);
              *((void *)v1637 + 13) = *((void *)v1638 + 13);
              *((void *)v1637 + 14) = v1647;
              uint64_t v1648 = v1639[13];
              v2423 = &v1637[v1648];
              v1649 = &v1638[v1648];
              v2431 = (void *)type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1649, 1, (uint64_t)v2431))
              {
                uint64_t v1650 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2423, v1649, *(void *)(*(void *)(v1650 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2431 - 1) + 16))(v2423, v1649, v2431);
                __swift_storeEnumTagSinglePayload((uint64_t)v2423, 0, 1, (uint64_t)v2431);
              }
              uint64_t v1664 = v1639[14];
              v1665 = &v1637[v1664];
              v1666 = &v1638[v1664];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1638[v1664], 1, (uint64_t)v2431))
              {
                uint64_t v1667 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1665, v1666, *(void *)(*(void *)(v1667 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2431 - 1) + 16))(v1665, v1666, v2431);
                __swift_storeEnumTagSinglePayload((uint64_t)v1665, 0, 1, (uint64_t)v2431);
              }
              uint64_t v1672 = v1639[15];
              v1673 = &v1637[v1672];
              v1674 = &v1638[v1672];
              uint64_t v2483 = *((void *)v1674 + 1);
              *(void *)v1673 = *(void *)v1674;
              *((void *)v1673 + 1) = v2483;
              uint64_t v1675 = v1639[16];
              v1676 = &v1637[v1675];
              v1677 = &v1638[v1675];
              uint64_t v2468 = *((void *)v1677 + 1);
              *(void *)v1676 = *(void *)v1677;
              *((void *)v1676 + 1) = v2468;
              uint64_t v1678 = v1639[17];
              v1679 = &v1637[v1678];
              v1680 = &v1638[v1678];
              uint64_t v1681 = *((void *)v1680 + 1);
              *(void *)v1679 = *(void *)v1680;
              *((void *)v1679 + 1) = v1681;
              uint64_t v1682 = v1639[18];
              v2449 = &v1638[v1682];
              v2460 = &v1637[v1682];
              uint64_t v1683 = type metadata accessor for DateComponents();
              v1684 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1683 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1684(v2460, v2449, v1683);
              v1684(&v1637[v1639[19]], &v1638[v1639[19]], v1683);
              uint64_t v1685 = v1639[20];
              v1686 = &v1637[v1685];
              v1687 = &v1638[v1685];
              uint64_t v1688 = *((void *)v1687 + 1);
              *(void *)v1686 = *(void *)v1687;
              *((void *)v1686 + 1) = v1688;
              uint64_t v1689 = v1639[21];
              v1690 = &v1637[v1689];
              v1691 = &v1638[v1689];
              uint64_t v2484 = *((void *)v1691 + 1);
              *(void *)v1690 = *(void *)v1691;
              *((void *)v1690 + 1) = v2484;
              uint64_t v1692 = v1639[22];
              v1693 = &v1637[v1692];
              v1694 = &v1638[v1692];
              uint64_t v2469 = *((void *)v1694 + 1);
              *(void *)v1693 = *(void *)v1694;
              *((void *)v1693 + 1) = v2469;
              uint64_t v1695 = v1639[23];
              v1696 = &v1637[v1695];
              v1697 = &v1638[v1695];
              v2461 = (void *)*((void *)v1697 + 1);
              *(void *)v1696 = *(void *)v1697;
              *((void *)v1696 + 1) = v2461;
              uint64_t v1698 = v1639[24];
              v1699 = &v1637[v1698];
              v1700 = &v1638[v1698];
              v2450 = (void *)*((void *)v1700 + 1);
              *(void *)v1699 = *(void *)v1700;
              *((void *)v1699 + 1) = v2450;
              uint64_t v1701 = v1639[25];
              v1702 = &v1637[v1701];
              v1703 = &v1638[v1701];
              v2440 = (void *)*((void *)v1703 + 1);
              *(void *)v1702 = *(void *)v1703;
              *((void *)v1702 + 1) = v2440;
              uint64_t v1704 = v1639[26];
              v1705 = &v1637[v1704];
              v1706 = &v1638[v1704];
              v2432 = (void *)*((void *)v1706 + 1);
              *(void *)v1705 = *(void *)v1706;
              *((void *)v1705 + 1) = v2432;
              uint64_t v1707 = v1639[27];
              v1708 = &v1637[v1707];
              v1709 = &v1638[v1707];
              v2424 = (void *)*((void *)v1709 + 1);
              *(void *)v1708 = *(void *)v1709;
              *((void *)v1708 + 1) = v2424;
              uint64_t v1710 = v1639[28];
              v1711 = &v1637[v1710];
              v1712 = &v1638[v1710];
              v2418 = (void *)*((void *)v1712 + 1);
              *(void *)v1711 = *(void *)v1712;
              *((void *)v1711 + 1) = v2418;
              uint64_t v1713 = v1639[29];
              v1714 = &v1637[v1713];
              v1715 = &v1638[v1713];
              v2414 = (void *)*((void *)v1715 + 1);
              *(void *)v1714 = *(void *)v1715;
              *((void *)v1714 + 1) = v2414;
              uint64_t v1716 = v1639[30];
              v1717 = &v1637[v1716];
              v1718 = &v1638[v1716];
              v2410 = (void *)*((void *)v1718 + 1);
              *(void *)v1717 = *(void *)v1718;
              *((void *)v1717 + 1) = v2410;
              uint64_t v1719 = v1639[31];
              v1720 = &v1637[v1719];
              v1721 = &v1638[v1719];
              uint64_t v2406 = *((void *)v1721 + 1);
              *(void *)v1720 = *(void *)v1721;
              *((void *)v1720 + 1) = v2406;
              uint64_t v1722 = v1639[32];
              v1723 = &v1637[v1722];
              v1724 = &v1638[v1722];
              uint64_t v1725 = *((void *)v1724 + 1);
              *(void *)v1723 = *(void *)v1724;
              *((void *)v1723 + 1) = v1725;
              *(void *)&v1637[v1639[33]] = *(void *)&v1638[v1639[33]];
              *(void *)&v1637[v1639[34]] = *(void *)&v1638[v1639[34]];
              uint64_t v1726 = v1639[35];
              v1727 = &v1637[v1726];
              v1728 = &v1638[v1726];
              uint64_t v1729 = *((void *)v1728 + 1);
              *(void *)v1727 = *(void *)v1728;
              *((void *)v1727 + 1) = v1729;
              uint64_t v1730 = v1639[36];
              v1731 = &v1637[v1730];
              v1732 = &v1638[v1730];
              uint64_t v1733 = *((void *)v1732 + 1);
              *(void *)v1731 = *(void *)v1732;
              *((void *)v1731 + 1) = v1733;
              uint64_t v1734 = v1639[37];
              v1735 = &v1637[v1734];
              v1736 = &v1638[v1734];
              uint64_t v1737 = *((void *)v1736 + 1);
              *(void *)v1735 = *(void *)v1736;
              *((void *)v1735 + 1) = v1737;
              uint64_t v1738 = v1639[38];
              v2395 = &v1637[v1738];
              v2398 = &v1638[v1738];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2398, 1, v2625))
              {
                uint64_t v1739 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2395, v2398, *(void *)(*(void *)(v1739 - 8) + 64));
              }
              else
              {
                v2607(v2395, v2398, v2625);
                __swift_storeEnumTagSinglePayload((uint64_t)v2395, 0, 1, v2625);
              }
              uint64_t v1808 = v1639[39];
              v1809 = &v1637[v1808];
              v1810 = &v1638[v1808];
              uint64_t v1811 = *((void *)v1810 + 1);
              *(void *)v1809 = *(void *)v1810;
              *((void *)v1809 + 1) = v1811;
              uint64_t v1812 = v1639[40];
              v1813 = &v1637[v1812];
              v1814 = &v1638[v1812];
              uint64_t v2487 = *((void *)v1814 + 1);
              *(void *)v1813 = *(void *)v1814;
              *((void *)v1813 + 1) = v2487;
              uint64_t v1815 = v1639[41];
              v1816 = &v1637[v1815];
              v1817 = &v1638[v1815];
              v1816[8] = v1817[8];
              *(void *)v1816 = *(void *)v1817;
              uint64_t v1818 = v1639[42];
              v1819 = &v1637[v1818];
              v1820 = &v1638[v1818];
              uint64_t v1821 = *((void *)v1820 + 1);
              *(void *)v1819 = *(void *)v1820;
              *((void *)v1819 + 1) = v1821;
              uint64_t v1822 = v1639[43];
              v1823 = &v1637[v1822];
              v1824 = &v1638[v1822];
              *(_OWORD *)v1823 = *(_OWORD *)v1824;
              *(void *)(v1823 + 13) = *(void *)(v1824 + 13);
              uint64_t v1825 = v1639[44];
              v1826 = &v1637[v1825];
              v1827 = &v1638[v1825];
              uint64_t v1828 = *((void *)v1827 + 1);
              *(void *)v1826 = *(void *)v1827;
              *((void *)v1826 + 1) = v1828;
              uint64_t v1829 = v1639[45];
              v1830 = &v1637[v1829];
              v1831 = &v1638[v1829];
              uint64_t v1832 = *((void *)v1831 + 1);
              *(void *)v1830 = *(void *)v1831;
              *((void *)v1830 + 1) = v1832;
              uint64_t v1833 = v1639[46];
              v1834 = &v1637[v1833];
              v1835 = &v1638[v1833];
              uint64_t v1836 = *((void *)v1835 + 1);
              *(void *)v1834 = *(void *)v1835;
              *((void *)v1834 + 1) = v1836;
              uint64_t v1837 = v1639[47];
              v1838 = &v1637[v1837];
              v1839 = &v1638[v1837];
              uint64_t v1840 = *((void *)v1839 + 1);
              *(void *)v1838 = *(void *)v1839;
              *((void *)v1838 + 1) = v1840;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1637, 0, 1, (uint64_t)v1639);
              uint64_t v302 = v2544;
              uint64_t v304 = v2572;
              uint64_t v303 = v2496;
            }
            uint64_t v1841 = v304[12];
            v1842 = &v302[v1841];
            v1843 = &v303[v1841];
            v1844 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1843, 1, (uint64_t)v1844))
            {
              uint64_t v1845 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1842, v1843, *(void *)(*(void *)(v1845 - 8) + 64));
            }
            else
            {
              uint64_t v1846 = *((void *)v1843 + 1);
              *(void *)v1842 = *(void *)v1843;
              *((void *)v1842 + 1) = v1846;
              uint64_t v1847 = *((void *)v1843 + 3);
              *((void *)v1842 + 2) = *((void *)v1843 + 2);
              *((void *)v1842 + 3) = v1847;
              uint64_t v1848 = *((void *)v1843 + 5);
              *((void *)v1842 + 4) = *((void *)v1843 + 4);
              *((void *)v1842 + 5) = v1848;
              uint64_t v1849 = *((void *)v1843 + 7);
              *((void *)v1842 + 6) = *((void *)v1843 + 6);
              *((void *)v1842 + 7) = v1849;
              uint64_t v1850 = *((void *)v1843 + 9);
              *((void *)v1842 + 8) = *((void *)v1843 + 8);
              *((void *)v1842 + 9) = v1850;
              uint64_t v1851 = *((void *)v1843 + 11);
              *((void *)v1842 + 10) = *((void *)v1843 + 10);
              *((void *)v1842 + 11) = v1851;
              v1842[96] = v1843[96];
              uint64_t v1852 = *((void *)v1843 + 14);
              *((void *)v1842 + 13) = *((void *)v1843 + 13);
              *((void *)v1842 + 14) = v1852;
              uint64_t v1853 = *((void *)v1843 + 16);
              *((void *)v1842 + 15) = *((void *)v1843 + 15);
              *((void *)v1842 + 16) = v1853;
              uint64_t v1854 = v1844[14];
              v2420 = &v1842[v1854];
              v2434 = &v1843[v1854];
              v2426 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2434, 1, (uint64_t)v2426))
              {
                uint64_t v1855 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2420, v2434, *(void *)(*(void *)(v1855 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2426 - 1) + 16))(v2420, v2434, v2426);
                __swift_storeEnumTagSinglePayload((uint64_t)v2420, 0, 1, (uint64_t)v2426);
              }
              uint64_t v1902 = v1844[15];
              v1903 = &v1842[v1902];
              v1904 = &v1843[v1902];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1843[v1902], 1, (uint64_t)v2426))
              {
                uint64_t v1905 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1903, v1904, *(void *)(*(void *)(v1905 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2426 - 1) + 16))(v1903, v1904, v2426);
                __swift_storeEnumTagSinglePayload((uint64_t)v1903, 0, 1, (uint64_t)v2426);
              }
              uint64_t v1910 = v1844[16];
              v1911 = &v1842[v1910];
              v1912 = &v1843[v1910];
              uint64_t v1913 = *((void *)v1912 + 1);
              *(void *)v1911 = *(void *)v1912;
              *((void *)v1911 + 1) = v1913;
              uint64_t v1914 = v1844[17];
              v1915 = &v1842[v1914];
              v1916 = &v1843[v1914];
              uint64_t v2488 = *((void *)v1916 + 1);
              *(void *)v1915 = *(void *)v1916;
              *((void *)v1915 + 1) = v2488;
              uint64_t v1917 = v1844[18];
              v1918 = &v1842[v1917];
              v1919 = &v1843[v1917];
              uint64_t v2472 = *((void *)v1919 + 1);
              *(void *)v1918 = *(void *)v1919;
              *((void *)v1918 + 1) = v2472;
              uint64_t v1920 = v1844[19];
              v1921 = &v1842[v1920];
              v1922 = &v1843[v1920];
              v2463 = (void *)*((void *)v1922 + 1);
              *(void *)v1921 = *(void *)v1922;
              *((void *)v1921 + 1) = v2463;
              uint64_t v1923 = v1844[20];
              v1924 = &v1842[v1923];
              v1925 = &v1843[v1923];
              v2436 = (void *)*((void *)v1925 + 1);
              *(void *)v1924 = *(void *)v1925;
              *((void *)v1924 + 1) = v2436;
              *(void *)&v1842[v1844[21]] = *(void *)&v1843[v1844[21]];
              *(void *)&v1842[v1844[22]] = *(void *)&v1843[v1844[22]];
              uint64_t v1926 = v1844[23];
              v1927 = &v1842[v1926];
              v1928 = &v1843[v1926];
              *(void *)v1927 = *(void *)v1928;
              v1927[8] = v1928[8];
              uint64_t v1929 = v1844[24];
              v1930 = &v1842[v1929];
              v1931 = &v1843[v1929];
              *(void *)v1930 = *(void *)v1931;
              v1930[8] = v1931[8];
              uint64_t v1932 = v1844[25];
              v1933 = &v1842[v1932];
              v1934 = &v1843[v1932];
              uint64_t v1935 = *((void *)v1934 + 1);
              *(void *)v1933 = *(void *)v1934;
              *((void *)v1933 + 1) = v1935;
              uint64_t v1936 = v1844[26];
              v1937 = &v1842[v1936];
              v1938 = &v1843[v1936];
              uint64_t v1939 = *((void *)v1938 + 1);
              *(void *)v1937 = *(void *)v1938;
              *((void *)v1937 + 1) = v1939;
              uint64_t v1940 = v1844[27];
              v1941 = &v1842[v1940];
              v1942 = &v1843[v1940];
              uint64_t v1943 = *((void *)v1942 + 1);
              *(void *)v1941 = *(void *)v1942;
              *((void *)v1941 + 1) = v1943;
              uint64_t v1944 = v1844[28];
              v1945 = &v1842[v1944];
              v1946 = &v1843[v1944];
              uint64_t v1947 = *((void *)v1946 + 1);
              *(void *)v1945 = *(void *)v1946;
              *((void *)v1945 + 1) = v1947;
              uint64_t v1948 = v1844[29];
              v1949 = &v1842[v1948];
              v1950 = &v1843[v1948];
              *(void *)v1949 = *(void *)v1950;
              v1949[8] = v1950[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1842, 0, 1, (uint64_t)v1844);
              uint64_t v302 = v2544;
              uint64_t v304 = v2572;
              uint64_t v303 = v2496;
            }
            uint64_t v1951 = v304[13];
            v1952 = &v302[v1951];
            v1953 = &v303[v1951];
            v1954 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1953, 1, (uint64_t)v1954))
            {
              uint64_t v1955 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1952, v1953, *(void *)(*(void *)(v1955 - 8) + 64));
            }
            else
            {
              uint64_t v1956 = *((void *)v1953 + 1);
              *(void *)v1952 = *(void *)v1953;
              *((void *)v1952 + 1) = v1956;
              uint64_t v2515 = *((void *)v1953 + 3);
              *((void *)v1952 + 2) = *((void *)v1953 + 2);
              *((void *)v1952 + 3) = v2515;
              uint64_t v1957 = *((void *)v1953 + 5);
              *((void *)v1952 + 4) = *((void *)v1953 + 4);
              *((void *)v1952 + 5) = v1957;
              uint64_t v1958 = *((void *)v1953 + 7);
              *((void *)v1952 + 6) = *((void *)v1953 + 6);
              *((void *)v1952 + 7) = v1958;
              uint64_t v1959 = *((void *)v1953 + 9);
              *((void *)v1952 + 8) = *((void *)v1953 + 8);
              *((void *)v1952 + 9) = v1959;
              uint64_t v1960 = *((void *)v1953 + 11);
              *((void *)v1952 + 10) = *((void *)v1953 + 10);
              *((void *)v1952 + 11) = v1960;
              v1952[96] = v1953[96];
              uint64_t v1961 = *((void *)v1953 + 14);
              *((void *)v1952 + 13) = *((void *)v1953 + 13);
              *((void *)v1952 + 14) = v1961;
              uint64_t v1962 = *((void *)v1953 + 16);
              *((void *)v1952 + 15) = *((void *)v1953 + 15);
              *((void *)v1952 + 16) = v1962;
              uint64_t v1963 = v1954[14];
              v2427 = &v1952[v1963];
              v2443 = &v1953[v1963];
              v2437 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2443, 1, (uint64_t)v2437))
              {
                uint64_t v1964 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2427, v2443, *(void *)(*(void *)(v1964 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2437 - 1) + 16))(v2427, v2443, v2437);
                __swift_storeEnumTagSinglePayload((uint64_t)v2427, 0, 1, (uint64_t)v2437);
              }
              uint64_t v2018 = v1954[15];
              v2019 = &v1952[v2018];
              v2020 = &v1953[v2018];
              uint64_t v2021 = *((void *)v2020 + 1);
              *(void *)v2019 = *(void *)v2020;
              *((void *)v2019 + 1) = v2021;
              uint64_t v2022 = v1954[16];
              v2023 = &v1952[v2022];
              v2024 = &v1953[v2022];
              uint64_t v2518 = *((void *)v2024 + 1);
              *(void *)v2023 = *(void *)v2024;
              *((void *)v2023 + 1) = v2518;
              uint64_t v2025 = v1954[17];
              v2026 = &v1952[v2025];
              v2027 = &v1953[v2025];
              uint64_t v2490 = *((void *)v2027 + 1);
              *(void *)v2026 = *(void *)v2027;
              *((void *)v2026 + 1) = v2490;
              uint64_t v2028 = v1954[18];
              v2029 = &v1952[v2028];
              v2030 = &v1953[v2028];
              uint64_t v2473 = *((void *)v2030 + 1);
              *(void *)v2029 = *(void *)v2030;
              *((void *)v2029 + 1) = v2473;
              uint64_t v2031 = v1954[19];
              v2032 = &v1952[v2031];
              v2033 = &v1953[v2031];
              uint64_t v2034 = *((void *)v2033 + 1);
              *(void *)v2032 = *(void *)v2033;
              *((void *)v2032 + 1) = v2034;
              *(void *)&v1952[v1954[20]] = *(void *)&v1953[v1954[20]];
              uint64_t v2035 = v1954[21];
              v2036 = &v1952[v2035];
              v2037 = &v1953[v2035];
              uint64_t v2038 = *((void *)v2037 + 1);
              *(void *)v2036 = *(void *)v2037;
              *((void *)v2036 + 1) = v2038;
              uint64_t v2039 = v1954[22];
              v2040 = &v1952[v2039];
              v2041 = &v1953[v2039];
              uint64_t v2042 = *((void *)v2041 + 1);
              *(void *)v2040 = *(void *)v2041;
              *((void *)v2040 + 1) = v2042;
              uint64_t v2043 = v1954[23];
              v2044 = &v1952[v2043];
              v2045 = &v1953[v2043];
              uint64_t v2046 = *((void *)v2045 + 1);
              *(void *)v2044 = *(void *)v2045;
              *((void *)v2044 + 1) = v2046;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1952, 0, 1, (uint64_t)v1954);
              uint64_t v302 = v2544;
              uint64_t v304 = v2572;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v302, 0, 1, (uint64_t)v304);
          }
          uint64_t v2047 = v2655[22];
          v2048 = &v11[v2047];
          v2049 = &v12[v2047];
          uint64_t v2050 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2049, 1, v2050))
          {
            uint64_t v2051 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2048, v2049, *(void *)(*(void *)(v2051 - 8) + 64));
          }
          else
          {
            uint64_t v2052 = *((void *)v2049 + 1);
            *(void *)v2048 = *(void *)v2049;
            *((void *)v2048 + 1) = v2052;
            uint64_t v2053 = *((void *)v2049 + 3);
            v2054 = (int *)v2050;
            *((void *)v2048 + 2) = *((void *)v2049 + 2);
            *((void *)v2048 + 3) = v2053;
            uint64_t v2055 = *((void *)v2049 + 5);
            *((void *)v2048 + 4) = *((void *)v2049 + 4);
            *((void *)v2048 + 5) = v2055;
            uint64_t v2056 = *((void *)v2049 + 7);
            *((void *)v2048 + 6) = *((void *)v2049 + 6);
            *((void *)v2048 + 7) = v2056;
            uint64_t v2057 = *((void *)v2049 + 9);
            *((void *)v2048 + 8) = *((void *)v2049 + 8);
            *((void *)v2048 + 9) = v2057;
            uint64_t v2058 = *((void *)v2049 + 11);
            *((void *)v2048 + 10) = *((void *)v2049 + 10);
            *((void *)v2048 + 11) = v2058;
            v2580 = v2054;
            uint64_t v2059 = v2054[10];
            v2519 = &v2049[v2059];
            v2557 = &v2048[v2059];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2519, 1, v2625))
            {
              uint64_t v2060 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2557, v2519, *(void *)(*(void *)(v2060 - 8) + 64));
            }
            else
            {
              v2607(v2557, v2519, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2557, 0, 1, v2625);
            }
            uint64_t v2061 = v2580[11];
            v2062 = &v2048[v2061];
            v2063 = &v2049[v2061];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2049[v2061], 1, v2625))
            {
              uint64_t v2064 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2062, v2063, *(void *)(*(void *)(v2064 - 8) + 64));
            }
            else
            {
              v2607(v2062, v2063, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2062, 0, 1, v2625);
            }
            uint64_t v2065 = v2580[12];
            v2066 = &v2048[v2065];
            v2067 = &v2049[v2065];
            uint64_t v2068 = *((void *)v2067 + 1);
            *(void *)v2066 = *(void *)v2067;
            *((void *)v2066 + 1) = v2068;
            uint64_t v2069 = v2580[13];
            v2070 = &v2048[v2069];
            v2071 = &v2049[v2069];
            uint64_t v2072 = *((void *)v2071 + 1);
            *(void *)v2070 = *(void *)v2071;
            *((void *)v2070 + 1) = v2072;
            uint64_t v2073 = v2580[14];
            v2074 = &v2048[v2073];
            v2075 = &v2049[v2073];
            uint64_t v2076 = *((void *)v2075 + 1);
            *(void *)v2074 = *(void *)v2075;
            *((void *)v2074 + 1) = v2076;
            uint64_t v2077 = v2580[15];
            v2078 = &v2048[v2077];
            v2079 = &v2049[v2077];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2079, 1, v2625))
            {
              uint64_t v2080 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2078, v2079, *(void *)(*(void *)(v2080 - 8) + 64));
            }
            else
            {
              v2607(v2078, v2079, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2078, 0, 1, v2625);
            }
            uint64_t v2081 = v2580[16];
            v2082 = &v2048[v2081];
            v2083 = &v2049[v2081];
            uint64_t v2084 = *((void *)v2083 + 1);
            *(void *)v2082 = *(void *)v2083;
            *((void *)v2082 + 1) = v2084;
            uint64_t v2085 = v2580[17];
            v2086 = &v2048[v2085];
            v2087 = &v2049[v2085];
            uint64_t v2558 = *((void *)v2087 + 1);
            *(void *)v2086 = *(void *)v2087;
            *((void *)v2086 + 1) = v2558;
            uint64_t v2088 = v2580[18];
            v2089 = &v2048[v2088];
            v2090 = &v2049[v2088];
            uint64_t v2520 = *((void *)v2090 + 1);
            *(void *)v2089 = *(void *)v2090;
            *((void *)v2089 + 1) = v2520;
            uint64_t v2091 = v2580[19];
            v2092 = &v2048[v2091];
            v2093 = &v2049[v2091];
            uint64_t v2094 = *((void *)v2093 + 1);
            *(void *)v2092 = *(void *)v2093;
            *((void *)v2092 + 1) = v2094;
            uint64_t v2095 = v2580[20];
            v2096 = &v2048[v2095];
            v2097 = &v2049[v2095];
            uint64_t v2098 = *((void *)v2097 + 1);
            *(void *)v2096 = *(void *)v2097;
            *((void *)v2096 + 1) = v2098;
            uint64_t v2099 = v2580[21];
            v2100 = &v2048[v2099];
            v2101 = &v2049[v2099];
            uint64_t v2102 = *((void *)v2101 + 1);
            *(void *)v2100 = *(void *)v2101;
            *((void *)v2100 + 1) = v2102;
            uint64_t v2103 = v2580[22];
            v2104 = &v2048[v2103];
            v2105 = &v2049[v2103];
            uint64_t v2106 = *((void *)v2105 + 1);
            *(void *)v2104 = *(void *)v2105;
            *((void *)v2104 + 1) = v2106;
            uint64_t v2107 = v2580[23];
            v2108 = &v2048[v2107];
            v2109 = &v2049[v2107];
            uint64_t v2110 = *((void *)v2109 + 1);
            *(void *)v2108 = *(void *)v2109;
            *((void *)v2108 + 1) = v2110;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2048, 0, 1, (uint64_t)v2580);
          }
          uint64_t v2111 = v2655[23];
          v2112 = &v11[v2111];
          v2113 = &v12[v2111];
          v2114 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2113, 1, (uint64_t)v2114))
          {
            uint64_t v2115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2112, v2113, *(void *)(*(void *)(v2115 - 8) + 64));
          }
          else
          {
            uint64_t v2116 = *((void *)v2113 + 1);
            *(void *)v2112 = *(void *)v2113;
            *((void *)v2112 + 1) = v2116;
            uint64_t v2117 = *((void *)v2113 + 3);
            *((void *)v2112 + 2) = *((void *)v2113 + 2);
            *((void *)v2112 + 3) = v2117;
            uint64_t v2118 = *((void *)v2113 + 5);
            *((void *)v2112 + 4) = *((void *)v2113 + 4);
            *((void *)v2112 + 5) = v2118;
            uint64_t v2119 = *((void *)v2113 + 7);
            *((void *)v2112 + 6) = *((void *)v2113 + 6);
            *((void *)v2112 + 7) = v2119;
            uint64_t v2559 = *((void *)v2113 + 9);
            *((void *)v2112 + 8) = *((void *)v2113 + 8);
            *((void *)v2112 + 9) = v2559;
            uint64_t v2521 = *((void *)v2113 + 11);
            *((void *)v2112 + 10) = *((void *)v2113 + 10);
            *((void *)v2112 + 11) = v2521;
            uint64_t v2120 = v2114[11];
            v2581 = &v2112[v2120];
            v2491 = &v2113[v2120];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2491, 1, v2625))
            {
              uint64_t v2121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2581, v2491, *(void *)(*(void *)(v2121 - 8) + 64));
            }
            else
            {
              v2607(v2581, v2491, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2581, 0, 1, v2625);
            }
            uint64_t v2122 = v2114[12];
            v2123 = &v2112[v2122];
            v2124 = &v2113[v2122];
            uint64_t v2125 = *((void *)v2124 + 1);
            *(void *)v2123 = *(void *)v2124;
            *((void *)v2123 + 1) = v2125;
            *(void *)&v2112[v2114[13]] = *(void *)&v2113[v2114[13]];
            uint64_t v2126 = v2114[14];
            v2127 = &v2112[v2126];
            v2128 = &v2113[v2126];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2128, 1, v2625))
            {
              uint64_t v2129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2127, v2128, *(void *)(*(void *)(v2129 - 8) + 64));
            }
            else
            {
              v2607(v2127, v2128, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2127, 0, 1, v2625);
            }
            *(void *)&v2112[v2114[15]] = *(void *)&v2113[v2114[15]];
            *(void *)&v2112[v2114[16]] = *(void *)&v2113[v2114[16]];
            uint64_t v2130 = v2114[17];
            v2131 = &v2112[v2130];
            v2132 = &v2113[v2130];
            uint64_t v2133 = *((void *)v2132 + 1);
            *(void *)v2131 = *(void *)v2132;
            *((void *)v2131 + 1) = v2133;
            *(void *)&v2112[v2114[18]] = *(void *)&v2113[v2114[18]];
            *(void *)&v2112[v2114[19]] = *(void *)&v2113[v2114[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2112, 0, 1, (uint64_t)v2114);
          }
          uint64_t v2134 = v2655[24];
          v2135 = &v11[v2134];
          v2136 = &v12[v2134];
          v2137 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2136, 1, (uint64_t)v2137))
          {
            uint64_t v2138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2135, v2136, *(void *)(*(void *)(v2138 - 8) + 64));
          }
          else
          {
            uint64_t v2139 = *((void *)v2136 + 1);
            *(void *)v2135 = *(void *)v2136;
            *((void *)v2135 + 1) = v2139;
            uint64_t v2140 = *((void *)v2136 + 3);
            *((void *)v2135 + 2) = *((void *)v2136 + 2);
            *((void *)v2135 + 3) = v2140;
            uint64_t v2141 = *((void *)v2136 + 5);
            *((void *)v2135 + 4) = *((void *)v2136 + 4);
            *((void *)v2135 + 5) = v2141;
            uint64_t v2142 = *((void *)v2136 + 7);
            *((void *)v2135 + 6) = *((void *)v2136 + 6);
            *((void *)v2135 + 7) = v2142;
            uint64_t v2143 = v2137[8];
            v2560 = &v2136[v2143];
            v2582 = &v2135[v2143];
            uint64_t v2522 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2560, 1, v2522))
            {
              uint64_t v2144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2582, v2560, *(void *)(*(void *)(v2144 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2522 - 8) + 16))(v2582, v2560, v2522);
              __swift_storeEnumTagSinglePayload((uint64_t)v2582, 0, 1, v2522);
            }
            uint64_t v2145 = v2137[9];
            v2146 = &v2135[v2145];
            v2147 = &v2136[v2145];
            uint64_t v2148 = *((void *)v2147 + 1);
            *(void *)v2146 = *(void *)v2147;
            *((void *)v2146 + 1) = v2148;
            uint64_t v2149 = v2137[10];
            v2150 = &v2135[v2149];
            v2151 = &v2136[v2149];
            uint64_t v2152 = *((void *)v2151 + 1);
            *(void *)v2150 = *(void *)v2151;
            *((void *)v2150 + 1) = v2152;
            uint64_t v2153 = v2137[11];
            v2154 = &v2135[v2153];
            v2155 = &v2136[v2153];
            uint64_t v2156 = *((void *)v2155 + 1);
            *(void *)v2154 = *(void *)v2155;
            *((void *)v2154 + 1) = v2156;
            uint64_t v2157 = v2137[12];
            v2158 = &v2135[v2157];
            v2159 = &v2136[v2157];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2159, 1, v2625))
            {
              uint64_t v2160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2158, v2159, *(void *)(*(void *)(v2160 - 8) + 64));
            }
            else
            {
              v2607(v2158, v2159, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2158, 0, 1, v2625);
            }
            uint64_t v2161 = v2137[13];
            v2162 = &v2135[v2161];
            v2163 = &v2136[v2161];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2136[v2161], 1, v2625))
            {
              uint64_t v2164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2162, v2163, *(void *)(*(void *)(v2164 - 8) + 64));
            }
            else
            {
              v2607(v2162, v2163, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2162, 0, 1, v2625);
            }
            uint64_t v2165 = v2137[14];
            v2166 = &v2135[v2165];
            v2167 = &v2136[v2165];
            *(void *)v2166 = *(void *)v2167;
            v2166[8] = v2167[8];
            uint64_t v2168 = v2137[15];
            v2169 = &v2135[v2168];
            v2170 = &v2136[v2168];
            uint64_t v2171 = *((void *)v2170 + 1);
            *(void *)v2169 = *(void *)v2170;
            *((void *)v2169 + 1) = v2171;
            uint64_t v2172 = v2137[16];
            v2173 = &v2135[v2172];
            v2174 = &v2136[v2172];
            uint64_t v2175 = *((void *)v2174 + 1);
            *(void *)v2173 = *(void *)v2174;
            *((void *)v2173 + 1) = v2175;
            uint64_t v2176 = v2137[17];
            v2177 = &v2135[v2176];
            v2178 = &v2136[v2176];
            uint64_t v2179 = *((void *)v2178 + 1);
            *(void *)v2177 = *(void *)v2178;
            *((void *)v2177 + 1) = v2179;
            uint64_t v2180 = v2137[18];
            v2181 = &v2135[v2180];
            v2182 = &v2136[v2180];
            uint64_t v2183 = *((void *)v2182 + 1);
            *(void *)v2181 = *(void *)v2182;
            *((void *)v2181 + 1) = v2183;
            uint64_t v2184 = v2137[19];
            v2185 = &v2135[v2184];
            v2186 = &v2136[v2184];
            uint64_t v2187 = *((void *)v2186 + 1);
            *(void *)v2185 = *(void *)v2186;
            *((void *)v2185 + 1) = v2187;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2135, 0, 1, (uint64_t)v2137);
          }
          uint64_t v2188 = v2655[25];
          v2189 = &v11[v2188];
          v2190 = &v12[v2188];
          uint64_t v2191 = *(void *)&v12[v2188 + 8];
          if (v2191)
          {
            *(void *)v2189 = *(void *)v2190;
            *((void *)v2189 + 1) = v2191;
            uint64_t v2192 = *((void *)v2190 + 3);
            *((void *)v2189 + 2) = *((void *)v2190 + 2);
            *((void *)v2189 + 3) = v2192;
            uint64_t v2193 = *((void *)v2190 + 5);
            *((void *)v2189 + 4) = *((void *)v2190 + 4);
            *((void *)v2189 + 5) = v2193;
            uint64_t v2194 = *((void *)v2190 + 7);
            *((void *)v2189 + 6) = *((void *)v2190 + 6);
            *((void *)v2189 + 7) = v2194;
            uint64_t v2195 = *((void *)v2190 + 9);
            *((void *)v2189 + 8) = *((void *)v2190 + 8);
            *((void *)v2189 + 9) = v2195;
            uint64_t v2196 = *((void *)v2190 + 11);
            *((void *)v2189 + 10) = *((void *)v2190 + 10);
            *((void *)v2189 + 11) = v2196;
            uint64_t v2197 = *((void *)v2190 + 13);
            *((void *)v2189 + 12) = *((void *)v2190 + 12);
            *((void *)v2189 + 13) = v2197;
            uint64_t v2198 = *((void *)v2190 + 15);
            *((void *)v2189 + 14) = *((void *)v2190 + 14);
            *((void *)v2189 + 15) = v2198;
            uint64_t v2674 = *((void *)v2190 + 17);
            *((void *)v2189 + 16) = *((void *)v2190 + 16);
            *((void *)v2189 + 17) = v2674;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_540:
            swift_bridgeObjectRetain();
LABEL_541:
            swift_bridgeObjectRetain();
          }
          else
          {
LABEL_545:
            memcpy(v2189, v2190, 0x90uLL);
          }
          goto LABEL_542;
      }
      goto LABEL_543;
    }
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  return a1;
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for ResultsDialog(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(void *)(a1 + 16) - 1) >= 3) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for AnswerSynthesisResult();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v7 = v4 + v6[12];
        uint64_t v8 = type metadata accessor for Date();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        v9(v7, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v6[19]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v10 = v4 + v6[21];
        uint64_t v11 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v10, 1, (uint64_t)v11))
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v10 + v11[5];
          uint64_t v13 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v14 = v12 + *(int *)(v13 + 140);
            if (!__swift_getEnumTagSinglePayload(v14, 1, v8)) {
              v9(v14, v8);
            }
            uint64_t v15 = v12 + *(int *)(v13 + 144);
            if (!__swift_getEnumTagSinglePayload(v15, 1, v8)) {
              v9(v15, v8);
            }
          }
          uint64_t v16 = v10 + v11[6];
          uint64_t v17 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v18 = v16 + *(int *)(v17 + 112);
            if (!__swift_getEnumTagSinglePayload(v18, 1, v8)) {
              v9(v18, v8);
            }
            uint64_t v19 = v16 + *(int *)(v17 + 116);
            if (!__swift_getEnumTagSinglePayload(v19, 1, v8)) {
              v9(v19, v8);
            }
          }
          uint64_t v20 = v10 + v11[7];
          uint64_t v21 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v20, 1, (uint64_t)v21))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v22 = v20 + v21[29];
            uint64_t v23 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v22, 1, v23)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
            }
            swift_bridgeObjectRelease();
            uint64_t v24 = v20 + v21[31];
            if (!__swift_getEnumTagSinglePayload(v24, 1, v8)) {
              v9(v24, v8);
            }
            uint64_t v25 = v20 + v21[32];
            if (!__swift_getEnumTagSinglePayload(v25, 1, v8)) {
              v9(v25, v8);
            }
          }
          uint64_t v26 = v10 + v11[8];
          uint64_t v27 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v28 = v26 + *(int *)(v27 + 108);
            if (!__swift_getEnumTagSinglePayload(v28, 1, v8)) {
              v9(v28, v8);
            }
            uint64_t v29 = v26 + *(int *)(v27 + 112);
            if (!__swift_getEnumTagSinglePayload(v29, 1, v8)) {
              v9(v29, v8);
            }
          }
          uint64_t v30 = v10 + v11[9];
          uint64_t v31 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v30, 1, (uint64_t)v31))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v32 = v30 + v31[24];
            if (!__swift_getEnumTagSinglePayload(v32, 1, v8)) {
              v9(v32, v8);
            }
            uint64_t v33 = v30 + v31[25];
            if (!__swift_getEnumTagSinglePayload(v33, 1, v8)) {
              v9(v33, v8);
            }
            uint64_t v34 = v30 + v31[26];
            uint64_t v35 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v34, 1, v35)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
            }
          }
          uint64_t v36 = v10 + v11[10];
          uint64_t v37 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v36, 1, (uint64_t)v37))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v38 = v36 + v37[22];
            if (!__swift_getEnumTagSinglePayload(v38, 1, v8)) {
              v9(v38, v8);
            }
            uint64_t v39 = v36 + v37[23];
            if (!__swift_getEnumTagSinglePayload(v39, 1, v8)) {
              v9(v39, v8);
            }
            uint64_t v40 = v36 + v37[25];
            uint64_t v41 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v40, 1, v41)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
            }
          }
          uint64_t v42 = v10 + v11[11];
          uint64_t v43 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v42, 1, (uint64_t)v43))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v44 = v42 + v43[13];
            uint64_t v45 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v44, 1, v45)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
            }
            uint64_t v278 = v9;
            uint64_t v46 = v42 + v43[14];
            if (!__swift_getEnumTagSinglePayload(v46, 1, v45)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v46, v45);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = v42 + v43[18];
            uint64_t v48 = type metadata accessor for DateComponents();
            uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
            v49(v47, v48);
            v49(v42 + v43[19], v48);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v50 = v42 + v43[38];
            uint64_t v9 = v278;
            if (!__swift_getEnumTagSinglePayload(v50, 1, v8)) {
              v278(v50, v8);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v51 = v10 + v11[12];
          uint64_t v52 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v53 = v51 + *(int *)(v52 + 56);
            uint64_t v54 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v53, 1, v54)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
            }
            uint64_t v55 = v51 + *(int *)(v52 + 60);
            if (!__swift_getEnumTagSinglePayload(v55, 1, v54)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v55, v54);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v56 = v10 + v11[13];
          uint64_t v57 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v58 = v56 + *(int *)(v57 + 56);
            uint64_t v59 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v58, 1, v59)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v60 = v4 + v6[22];
        uint64_t v61 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v60, 1, (uint64_t)v61))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v62 = v60 + v61[10];
          if (!__swift_getEnumTagSinglePayload(v62, 1, v8)) {
            v9(v62, v8);
          }
          uint64_t v63 = v60 + v61[11];
          if (!__swift_getEnumTagSinglePayload(v63, 1, v8)) {
            v9(v63, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v60 + v61[15];
          if (!__swift_getEnumTagSinglePayload(v64, 1, v8)) {
            v9(v64, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v65 = v4 + v6[23];
        uint64_t v66 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v65, 1, v66))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v67 = v65 + *(int *)(v66 + 44);
          if (!__swift_getEnumTagSinglePayload(v67, 1, v8)) {
            v9(v67, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = v65 + *(int *)(v66 + 56);
          if (!__swift_getEnumTagSinglePayload(v68, 1, v8)) {
            v9(v68, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v69 = v4 + v6[24];
        uint64_t v70 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v69, 1, (uint64_t)v70))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = v69 + v70[8];
          uint64_t v72 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v71, 1, v72)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v71, v72);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = v69 + v70[12];
          if (!__swift_getEnumTagSinglePayload(v73, 1, v8)) {
            v9(v73, v8);
          }
          uint64_t v74 = v69 + v70[13];
          if (!__swift_getEnumTagSinglePayload(v74, 1, v8)) {
            v9(v74, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v75 = v6[25];
        goto LABEL_258;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v76 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v77 = v4 + v76[10];
        uint64_t v78 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v77, 1, v78)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v77, v78);
        }
        uint64_t v79 = v4 + v76[11];
        uint64_t v80 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v79, 1, v80)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v79, v80);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v76[17]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v81 = v4 + v76[19];
        uint64_t v82 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v81, 1, (uint64_t)v82))
        {
          swift_bridgeObjectRelease();
          uint64_t v83 = v81 + v82[5];
          uint64_t v84 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v83, 1, v84))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v85 = v83 + *(int *)(v84 + 140);
            if (!__swift_getEnumTagSinglePayload(v85, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v85, v78);
            }
            uint64_t v86 = v83 + *(int *)(v84 + 144);
            if (!__swift_getEnumTagSinglePayload(v86, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v86, v78);
            }
          }
          uint64_t v87 = v81 + v82[6];
          uint64_t v88 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v87, 1, v88))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v89 = v87 + *(int *)(v88 + 112);
            if (!__swift_getEnumTagSinglePayload(v89, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v89, v78);
            }
            uint64_t v90 = v87 + *(int *)(v88 + 116);
            if (!__swift_getEnumTagSinglePayload(v90, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v90, v78);
            }
          }
          uint64_t v91 = v81 + v82[7];
          uint64_t v92 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v91, 1, (uint64_t)v92))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v93 = v91 + v92[29];
            if (!__swift_getEnumTagSinglePayload(v93, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v93, v80);
            }
            swift_bridgeObjectRelease();
            uint64_t v94 = v91 + v92[31];
            if (!__swift_getEnumTagSinglePayload(v94, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v94, v78);
            }
            uint64_t v95 = v91 + v92[32];
            if (!__swift_getEnumTagSinglePayload(v95, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v95, v78);
            }
          }
          uint64_t v96 = v81 + v82[8];
          uint64_t v97 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v96, 1, v97))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v98 = v96 + *(int *)(v97 + 108);
            if (!__swift_getEnumTagSinglePayload(v98, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v98, v78);
            }
            uint64_t v99 = v96 + *(int *)(v97 + 112);
            if (!__swift_getEnumTagSinglePayload(v99, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v99, v78);
            }
          }
          uint64_t v100 = v81 + v82[9];
          uint64_t v101 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v100, 1, (uint64_t)v101))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v102 = v100 + v101[24];
            if (!__swift_getEnumTagSinglePayload(v102, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v102, v78);
            }
            uint64_t v103 = v100 + v101[25];
            if (!__swift_getEnumTagSinglePayload(v103, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v103, v78);
            }
            uint64_t v104 = v100 + v101[26];
            if (!__swift_getEnumTagSinglePayload(v104, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v104, v80);
            }
          }
          uint64_t v105 = v81 + v82[10];
          uint64_t v106 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v105, 1, (uint64_t)v106))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v107 = v105 + v106[22];
            if (!__swift_getEnumTagSinglePayload(v107, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v107, v78);
            }
            uint64_t v108 = v105 + v106[23];
            if (!__swift_getEnumTagSinglePayload(v108, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v108, v78);
            }
            uint64_t v109 = v105 + v106[25];
            if (!__swift_getEnumTagSinglePayload(v109, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v109, v80);
            }
          }
          uint64_t v110 = v81 + v82[11];
          uint64_t v111 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v110, 1, (uint64_t)v111))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v112 = v110 + v111[13];
            if (!__swift_getEnumTagSinglePayload(v112, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v112, v80);
            }
            uint64_t v113 = v110 + v111[14];
            if (!__swift_getEnumTagSinglePayload(v113, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v113, v80);
            }
            uint64_t v279 = v80;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v114 = v110 + v111[18];
            uint64_t v115 = type metadata accessor for DateComponents();
            uint64_t v116 = *(void (**)(uint64_t, uint64_t))(*(void *)(v115 - 8) + 8);
            v116(v114, v115);
            v116(v110 + v111[19], v115);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v117 = v110 + v111[38];
            if (!__swift_getEnumTagSinglePayload(v117, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v117, v78);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v80 = v279;
          }
          uint64_t v118 = v81 + v82[12];
          uint64_t v119 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v118, 1, v119))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v120 = v118 + *(int *)(v119 + 56);
            uint64_t v121 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v120, 1, v121)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v121 - 8) + 8))(v120, v121);
            }
            uint64_t v122 = v118 + *(int *)(v119 + 60);
            if (!__swift_getEnumTagSinglePayload(v122, 1, v121)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v121 - 8) + 8))(v122, v121);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v123 = v81 + v82[13];
          uint64_t v124 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v123, 1, v124))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v125 = v123 + *(int *)(v124 + 56);
            uint64_t v126 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v125, 1, v126)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v126 - 8) + 8))(v125, v126);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v127 = v4 + v76[20];
        uint64_t v128 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v127, 1, (uint64_t)v128))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v129 = v127 + v128[10];
          if (!__swift_getEnumTagSinglePayload(v129, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v129, v78);
          }
          uint64_t v130 = v127 + v128[11];
          if (!__swift_getEnumTagSinglePayload(v130, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v130, v78);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v131 = v127 + v128[15];
          if (!__swift_getEnumTagSinglePayload(v131, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v131, v78);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v132 = v4 + v76[21];
        uint64_t v133 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v132, 1, v133))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v134 = v132 + *(int *)(v133 + 44);
          if (!__swift_getEnumTagSinglePayload(v134, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v134, v78);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v135 = v132 + *(int *)(v133 + 56);
          if (!__swift_getEnumTagSinglePayload(v135, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v135, v78);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v136 = v4 + v76[22];
        uint64_t v137 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v136, 1, (uint64_t)v137))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v138 = v136 + v137[8];
          if (!__swift_getEnumTagSinglePayload(v138, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v138, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v139 = v136 + v137[12];
          if (!__swift_getEnumTagSinglePayload(v139, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v139, v78);
          }
          uint64_t v140 = v136 + v137[13];
          if (!__swift_getEnumTagSinglePayload(v140, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v140, v78);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v75 = v76[23];
        goto LABEL_258;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v141 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v142 = v4 + v141[7];
        uint64_t v143 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v142, 1, v143)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v143 - 8) + 8))(v142, v143);
        }
        uint64_t v144 = v4 + v141[8];
        if (!__swift_getEnumTagSinglePayload(v144, 1, v143)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v143 - 8) + 8))(v144, v143);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*(void *)(v4 + v141[13])) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v145 = (int *)type metadata accessor for Photo(0);
        uint64_t v146 = v4 + v145[11];
        uint64_t v147 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v146, 1, v147)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v146, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v148 = v4 + v145[17];
        long long v149 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v148, 1, (uint64_t)v149))
        {
          swift_bridgeObjectRelease();
          uint64_t v150 = v148 + v149[5];
          uint64_t v151 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v150, 1, v151))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v152 = v150 + *(int *)(v151 + 140);
            if (!__swift_getEnumTagSinglePayload(v152, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v152, v147);
            }
            uint64_t v153 = v150 + *(int *)(v151 + 144);
            if (!__swift_getEnumTagSinglePayload(v153, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v153, v147);
            }
          }
          uint64_t v154 = v148 + v149[6];
          uint64_t v155 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v154, 1, v155))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v156 = v154 + *(int *)(v155 + 112);
            if (!__swift_getEnumTagSinglePayload(v156, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v156, v147);
            }
            uint64_t v157 = v154 + *(int *)(v155 + 116);
            if (!__swift_getEnumTagSinglePayload(v157, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v157, v147);
            }
          }
          uint64_t v158 = v148 + v149[7];
          uint64_t v159 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v158, 1, (uint64_t)v159))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v160 = v158 + v159[29];
            uint64_t v161 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v160, 1, v161)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v161 - 8) + 8))(v160, v161);
            }
            swift_bridgeObjectRelease();
            uint64_t v162 = v158 + v159[31];
            if (!__swift_getEnumTagSinglePayload(v162, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v162, v147);
            }
            uint64_t v163 = v158 + v159[32];
            if (!__swift_getEnumTagSinglePayload(v163, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v163, v147);
            }
          }
          uint64_t v164 = v148 + v149[8];
          uint64_t v165 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v164, 1, v165))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v166 = v164 + *(int *)(v165 + 108);
            if (!__swift_getEnumTagSinglePayload(v166, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v166, v147);
            }
            uint64_t v167 = v164 + *(int *)(v165 + 112);
            if (!__swift_getEnumTagSinglePayload(v167, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v167, v147);
            }
          }
          uint64_t v168 = v148 + v149[9];
          uint64_t v169 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v168, 1, (uint64_t)v169))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v170 = v168 + v169[24];
            if (!__swift_getEnumTagSinglePayload(v170, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v170, v147);
            }
            uint64_t v171 = v168 + v169[25];
            if (!__swift_getEnumTagSinglePayload(v171, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v171, v147);
            }
            uint64_t v172 = v168 + v169[26];
            uint64_t v173 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v172, 1, v173)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v173 - 8) + 8))(v172, v173);
            }
          }
          uint64_t v174 = v148 + v149[10];
          uint64_t v175 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v174, 1, (uint64_t)v175))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v176 = v174 + v175[22];
            if (!__swift_getEnumTagSinglePayload(v176, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v176, v147);
            }
            uint64_t v177 = v174 + v175[23];
            if (!__swift_getEnumTagSinglePayload(v177, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v177, v147);
            }
            uint64_t v178 = v174 + v175[25];
            uint64_t v179 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v178, 1, v179)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v179 - 8) + 8))(v178, v179);
            }
          }
          uint64_t v180 = v148 + v149[11];
          uint64_t v181 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v180, 1, (uint64_t)v181))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v182 = v180 + v181[13];
            uint64_t v183 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v182, 1, v183)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v183 - 8) + 8))(v182, v183);
            }
            uint64_t v184 = v180 + v181[14];
            if (!__swift_getEnumTagSinglePayload(v184, 1, v183)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v183 - 8) + 8))(v184, v183);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v185 = v180 + v181[18];
            uint64_t v186 = type metadata accessor for DateComponents();
            uint64_t v187 = *(void (**)(uint64_t, uint64_t))(*(void *)(v186 - 8) + 8);
            v187(v185, v186);
            v187(v180 + v181[19], v186);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v188 = v180 + v181[38];
            if (!__swift_getEnumTagSinglePayload(v188, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v188, v147);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v189 = v148 + v149[12];
          uint64_t v190 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v189, 1, v190))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v191 = v189 + *(int *)(v190 + 56);
            uint64_t v192 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v191, 1, v192)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v192 - 8) + 8))(v191, v192);
            }
            uint64_t v193 = v189 + *(int *)(v190 + 60);
            if (!__swift_getEnumTagSinglePayload(v193, 1, v192)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v192 - 8) + 8))(v193, v192);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v194 = v148 + v149[13];
          uint64_t v195 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v194, 1, v195))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v196 = v194 + *(int *)(v195 + 56);
            uint64_t v197 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v196, 1, v197)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v197 - 8) + 8))(v196, v197);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v198 = v4 + v145[18];
        uint64_t v199 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v198, 1, (uint64_t)v199))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v200 = v198 + v199[10];
          if (!__swift_getEnumTagSinglePayload(v200, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v200, v147);
          }
          uint64_t v201 = v198 + v199[11];
          if (!__swift_getEnumTagSinglePayload(v201, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v201, v147);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v202 = v198 + v199[15];
          if (!__swift_getEnumTagSinglePayload(v202, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v202, v147);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v203 = v4 + v145[19];
        uint64_t v204 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v203, 1, v204))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v205 = v203 + *(int *)(v204 + 44);
          if (!__swift_getEnumTagSinglePayload(v205, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v205, v147);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v206 = v203 + *(int *)(v204 + 56);
          if (!__swift_getEnumTagSinglePayload(v206, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v206, v147);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v207 = v4 + v145[20];
        uint64_t v208 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v207, 1, (uint64_t)v208))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v209 = v207 + v208[8];
          uint64_t v210 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v209, 1, v210)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v210 - 8) + 8))(v209, v210);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v211 = v207 + v208[12];
          if (!__swift_getEnumTagSinglePayload(v211, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v211, v147);
          }
          uint64_t v212 = v207 + v208[13];
          if (!__swift_getEnumTagSinglePayload(v212, 1, v147)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v212, v147);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v75 = v145[21];
LABEL_258:
        if (!*(void *)(v4 + v75 + 8)) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v213 = (int *)type metadata accessor for NoteDocument(0);
        uint64_t v214 = v4 + v213[8];
        uint64_t v215 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v214, 1, v215)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v214, v215);
        }
        goto LABEL_279;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v216 = (int *)type metadata accessor for Reminder(0);
        uint64_t v217 = v4 + v216[7];
        uint64_t v218 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v217, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v217, v218);
        }
        uint64_t v219 = v4 + v216[8];
        if (!__swift_getEnumTagSinglePayload(v219, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v219, v218);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v220 = v216[12];
        goto LABEL_329;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v221 = type metadata accessor for PhoneHistory(0);
        uint64_t v222 = v4 + *(int *)(v221 + 40);
        uint64_t v223 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v222, 1, v223)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v223 - 8) + 8))(v222, v223);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v220 = *(int *)(v221 + 52);
        goto LABEL_329;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v225 = v224[7];
        goto LABEL_273;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v220 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        goto LABEL_329;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v225 = v224[6];
LABEL_273:
        uint64_t v226 = v4 + v225;
        uint64_t v227 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v226, 1, v227)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v227 - 8) + 8))(v226, v227);
        }
        uint64_t v220 = v224[8];
        goto LABEL_329;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v213 = (int *)type metadata accessor for Safari(0);
        uint64_t v228 = v4 + v213[6];
        uint64_t v215 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v228, 1, v215)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v228, v215);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_279:
        uint64_t v229 = v213[9];
        goto LABEL_317;
      case 0xBu:
        swift_bridgeObjectRelease();

        break;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v230 = v4 + *(int *)(type metadata accessor for WalletTransaction(0) + 28);
        uint64_t v231 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v230, 1, v231)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v231 - 8) + 8))(v230, v231);
        }
        goto LABEL_283;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v232 = v4 + *(int *)(type metadata accessor for WalletPass(0) + 28);
        uint64_t v233 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v232, 1, v233)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v233 - 8) + 8))(v232, v233);
        }
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v234 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v235 = v4 + v234[13];
        uint64_t v236 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v235, 1, v236)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v236 - 8) + 8))(v235, v236);
        }
        uint64_t v237 = v4 + v234[14];
        if (!__swift_getEnumTagSinglePayload(v237, 1, v236)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v236 - 8) + 8))(v237, v236);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v238 = v4 + v234[18];
        uint64_t v239 = type metadata accessor for DateComponents();
        uint64_t v240 = *(void (**)(uint64_t, uint64_t))(*(void *)(v239 - 8) + 8);
        v240(v238, v239);
        v240(v4 + v234[19], v239);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v241 = v4 + v234[38];
        uint64_t v242 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v241, 1, v242)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v242 - 8) + 8))(v241, v242);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v243 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_337;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v244 = type metadata accessor for HotelReservation(0);
        uint64_t v245 = v4 + *(int *)(v244 + 56);
        uint64_t v246 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v245, 1, v246)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v246 - 8) + 8))(v245, v246);
        }
        uint64_t v247 = v4 + *(int *)(v244 + 60);
        if (!__swift_getEnumTagSinglePayload(v247, 1, v246)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v246 - 8) + 8))(v247, v246);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v248 = v4 + *(int *)(type metadata accessor for RestaurantReservation(0) + 56);
        uint64_t v249 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v248, 1, v249)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v249 - 8) + 8))(v248, v249);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v250 = type metadata accessor for RentalCarReservation(0);
        uint64_t v251 = v4 + *(int *)(v250 + 140);
        uint64_t v215 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v251, 1, v215)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v251, v215);
        }
        uint64_t v229 = *(int *)(v250 + 144);
        goto LABEL_317;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v252 = type metadata accessor for TicketedTransportation(0);
        uint64_t v253 = v4 + *(int *)(v252 + 112);
        uint64_t v215 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v253, 1, v215)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v253, v215);
        }
        uint64_t v229 = *(int *)(v252 + 116);
        goto LABEL_317;
      case 0x14u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v254 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v255 = v4 + v254[29];
        uint64_t v256 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v255, 1, v256)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v256 - 8) + 8))(v255, v256);
        }
        swift_bridgeObjectRelease();
        uint64_t v257 = v4 + v254[31];
        uint64_t v258 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v257, 1, v258)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v258 - 8) + 8))(v257, v258);
        }
        uint64_t v259 = v4 + v254[32];
        goto LABEL_330;
      case 0x15u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v260 = type metadata accessor for Appointment(0);
        uint64_t v261 = v4 + *(int *)(v260 + 108);
        uint64_t v215 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v261, 1, v215)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v261, v215);
        }
        uint64_t v229 = *(int *)(v260 + 112);
LABEL_317:
        uint64_t v262 = v4 + v229;
        if (!__swift_getEnumTagSinglePayload(v4 + v229, 1, v215)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v262, v215);
        }
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v263 = (int *)type metadata accessor for Party(0);
        uint64_t v264 = v4 + v263[24];
        uint64_t v265 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v264, 1, v265)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v265 - 8) + 8))(v264, v265);
        }
        uint64_t v266 = v4 + v263[25];
        if (!__swift_getEnumTagSinglePayload(v266, 1, v265)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v265 - 8) + 8))(v266, v265);
        }
        uint64_t v220 = v263[26];
        goto LABEL_329;
      case 0x17u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v267 = (int *)type metadata accessor for Trip(0);
        uint64_t v268 = v4 + v267[22];
        uint64_t v269 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v268, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v268, v269);
        }
        uint64_t v270 = v4 + v267[23];
        if (!__swift_getEnumTagSinglePayload(v270, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v270, v269);
        }
        uint64_t v220 = v267[25];
LABEL_329:
        uint64_t v259 = v4 + v220;
        uint64_t v258 = type metadata accessor for URL();
LABEL_330:
        if (!__swift_getEnumTagSinglePayload(v259, 1, v258)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v258 - 8) + 8))(v259, v258);
        }
        break;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v271 = type metadata accessor for GlobalItem();
        uint64_t v272 = v4 + *(int *)(v271 + 28);
        uint64_t v273 = type metadata accessor for GlobalDialog();
        if (!__swift_getEnumTagSinglePayload(v272, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v272, v273);
        }
        uint64_t v274 = (uint64_t *)(v4 + *(int *)(v271 + 32));
        unint64_t v275 = v274[1];
        if (v275 >> 60 != 15) {
          outlined consume of Data._Representation(*v274, v275);
        }
        uint64_t v243 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_337:
        __swift_instantiateConcreteTypeFromMangledName(v243);
        goto LABEL_340;
      case 0x19u:
LABEL_283:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_340;
      case 0x1Au:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v276 = v4 + *(int *)(type metadata accessor for Answer(0) + 36);
        uint64_t v277 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v276, 1, v277)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v277 - 8) + 8))(v276, v277);
        }
LABEL_340:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResultsDialog(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = a2 + 1;
  uint64_t v7 = a2[2];
  swift_bridgeObjectRetain();
  if ((unint64_t)(v7 - 1) >= 3)
  {
    v5[1] = *v6;
    _OWORD v5[2] = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v5 + 1) = *(_OWORD *)v6;
  }
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)v5 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for AnswerSynthesisResult();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v35;
    *((void *)v9 + 2) = *((void *)v10 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_543:
    swift_storeEnumTagMultiPayload();
    return v5;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v2661 = v5;
        uint64_t v36 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v36;
        uint64_t v37 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v37;
        uint64_t v38 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v38;
        uint64_t v39 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v39;
        uint64_t v40 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v40;
        uint64_t v41 = type metadata accessor for MobileSMSDocument(0);
        uint64_t v42 = *(int *)(v41 + 40);
        uint64_t v2643 = &v9[v42];
        v2651 = (int *)v41;
        uint64_t v43 = &v10[v42];
        uint64_t v44 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2643, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v2643, v43, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)v2643, 0, 1, v44);
        }
        uint64_t v348 = v2651[11];
        v349 = &v9[v348];
        uint64_t v350 = &v10[v348];
        uint64_t v351 = type metadata accessor for URL();
        uint64_t v2647 = v44;
        if (__swift_getEnumTagSinglePayload((uint64_t)v350, 1, v351))
        {
          uint64_t v352 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v349, v350, *(void *)(*(void *)(v352 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 16))(v349, v350, v351);
          __swift_storeEnumTagSinglePayload((uint64_t)v349, 0, 1, v351);
        }
        *(void *)&v9[v2651[12]] = *(void *)&v10[v2651[12]];
        uint64_t v496 = v2651[13];
        v497 = &v9[v496];
        uint64_t v498 = &v10[v496];
        uint64_t v499 = *((void *)v498 + 1);
        *(void *)v497 = *(void *)v498;
        *((void *)v497 + 1) = v499;
        uint64_t v500 = v2651[14];
        uint64_t v501 = &v9[v500];
        v502 = &v10[v500];
        uint64_t v503 = *((void *)v502 + 1);
        *(void *)uint64_t v501 = *(void *)v502;
        *((void *)v501 + 1) = v503;
        *(void *)&v9[v2651[15]] = *(void *)&v10[v2651[15]];
        *(void *)&v9[v2651[16]] = *(void *)&v10[v2651[16]];
        uint64_t v504 = v2651[17];
        uint64_t v505 = &v9[v504];
        v506 = &v10[v504];
        uint64_t v507 = *(void *)&v10[v504];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v507)
        {
          uint64_t v508 = *((void *)v506 + 1);
          uint64_t v509 = *((void *)v506 + 2);
          *(void *)uint64_t v505 = v507;
          *((void *)v505 + 1) = v508;
          uint64_t v510 = *((void *)v506 + 3);
          uint64_t v511 = *((void *)v506 + 4);
          *((void *)v505 + 2) = v509;
          *((void *)v505 + 3) = v510;
          *((void *)v505 + 4) = v511;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v671 = *((_OWORD *)v506 + 1);
          *(_OWORD *)uint64_t v505 = *(_OWORD *)v506;
          *((_OWORD *)v505 + 1) = v671;
          *((void *)v505 + 4) = *((void *)v506 + 4);
        }
        uint64_t v672 = v2651[18];
        uint64_t v673 = &v9[v672];
        uint64_t v674 = &v10[v672];
        uint64_t v675 = *((void *)v674 + 1);
        *(void *)uint64_t v673 = *(void *)v674;
        *((void *)v673 + 1) = v675;
        uint64_t v676 = v2651[19];
        uint64_t v677 = &v9[v676];
        uint64_t v678 = &v10[v676];
        uint64_t v679 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        uint64_t v2637 = v351;
        if (__swift_getEnumTagSinglePayload((uint64_t)v678, 1, (uint64_t)v679))
        {
          uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v677, v678, *(void *)(*(void *)(v680 - 8) + 64));
        }
        else
        {
          uint64_t v717 = *((void *)v678 + 1);
          *(void *)uint64_t v677 = *(void *)v678;
          *((void *)v677 + 1) = v717;
          uint64_t v718 = v679[5];
          uint64_t v719 = &v677[v718];
          uint64_t v720 = &v678[v718];
          uint64_t v721 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2609 = v679;
          uint64_t v2625 = v677;
          v2590 = v678;
          if (__swift_getEnumTagSinglePayload((uint64_t)v720, 1, v721))
          {
            uint64_t v722 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v719, v720, *(void *)(*(void *)(v722 - 8) + 64));
          }
          else
          {
            uint64_t v778 = *((void *)v720 + 1);
            *(void *)uint64_t v719 = *(void *)v720;
            *((void *)v719 + 1) = v778;
            uint64_t v779 = *((void *)v720 + 3);
            *((void *)v719 + 2) = *((void *)v720 + 2);
            *((void *)v719 + 3) = v779;
            uint64_t v780 = *((void *)v720 + 5);
            *((void *)v719 + 4) = *((void *)v720 + 4);
            *((void *)v719 + 5) = v780;
            uint64_t v781 = *((void *)v720 + 7);
            *((void *)v719 + 6) = *((void *)v720 + 6);
            *((void *)v719 + 7) = v781;
            uint64_t v782 = *((void *)v720 + 9);
            *((void *)v719 + 8) = *((void *)v720 + 8);
            *((void *)v719 + 9) = v782;
            uint64_t v783 = *((void *)v720 + 11);
            *((void *)v719 + 10) = *((void *)v720 + 10);
            *((void *)v719 + 11) = v783;
            uint64_t v784 = *((void *)v720 + 13);
            *((void *)v719 + 12) = *((void *)v720 + 12);
            *((void *)v719 + 13) = v784;
            uint64_t v785 = *((void *)v720 + 15);
            *((void *)v719 + 14) = *((void *)v720 + 14);
            *((void *)v719 + 15) = v785;
            v719[128] = v720[128];
            *(_WORD *)(v719 + 129) = *(_WORD *)(v720 + 129);
            uint64_t v786 = *((void *)v720 + 18);
            *((void *)v719 + 17) = *((void *)v720 + 17);
            *((void *)v719 + 18) = v786;
            uint64_t v787 = *((void *)v720 + 20);
            *((void *)v719 + 19) = *((void *)v720 + 19);
            *((void *)v719 + 20) = v787;
            uint64_t v788 = *((void *)v720 + 22);
            *((void *)v719 + 21) = *((void *)v720 + 21);
            *((void *)v719 + 22) = v788;
            v2452 = (void *)*((void *)v720 + 24);
            *((void *)v719 + 23) = *((void *)v720 + 23);
            *((void *)v719 + 24) = v2452;
            uint64_t v789 = *((void *)v720 + 26);
            *((void *)v719 + 25) = *((void *)v720 + 25);
            *((void *)v719 + 26) = v789;
            uint64_t v790 = *((void *)v720 + 28);
            *((void *)v719 + 27) = *((void *)v720 + 27);
            *((void *)v719 + 28) = v790;
            uint64_t v791 = *((void *)v720 + 30);
            *((void *)v719 + 29) = *((void *)v720 + 29);
            *((void *)v719 + 30) = v791;
            uint64_t v2571 = *((void *)v720 + 32);
            *((void *)v719 + 31) = *((void *)v720 + 31);
            *((void *)v719 + 32) = v2571;
            uint64_t v792 = *((void *)v720 + 34);
            *((void *)v719 + 33) = *((void *)v720 + 33);
            *((void *)v719 + 34) = v792;
            uint64_t v793 = *((void *)v720 + 36);
            *((void *)v719 + 35) = *((void *)v720 + 35);
            *((void *)v719 + 36) = v793;
            uint64_t v794 = *((void *)v720 + 38);
            *((void *)v719 + 37) = *((void *)v720 + 37);
            *((void *)v719 + 38) = v794;
            uint64_t v795 = *((void *)v720 + 40);
            *((void *)v719 + 39) = *((void *)v720 + 39);
            *((void *)v719 + 40) = v795;
            uint64_t v796 = *((void *)v720 + 42);
            *((void *)v719 + 41) = *((void *)v720 + 41);
            *((void *)v719 + 42) = v796;
            uint64_t v797 = *((void *)v720 + 44);
            *((void *)v719 + 43) = *((void *)v720 + 43);
            *((void *)v719 + 44) = v797;
            uint64_t v798 = *((void *)v720 + 46);
            *((void *)v719 + 45) = *((void *)v720 + 45);
            *((void *)v719 + 46) = v798;
            uint64_t v799 = *((void *)v720 + 47);
            v719[384] = v720[384];
            *((void *)v719 + 47) = v799;
            uint64_t v800 = *((void *)v720 + 50);
            *((void *)v719 + 49) = *((void *)v720 + 49);
            *((void *)v719 + 50) = v800;
            uint64_t v801 = *((void *)v720 + 52);
            *((void *)v719 + 51) = *((void *)v720 + 51);
            *((void *)v719 + 52) = v801;
            uint64_t v802 = *(int *)(v721 + 140);
            v2450 = &v719[v802];
            uint64_t v803 = &v720[v802];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v803, 1, v2647))
            {
              uint64_t v804 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2450, v803, *(void *)(*(void *)(v804 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2450, v803, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v2450, 0, 1, v2647);
            }
            uint64_t v1351 = *(int *)(v721 + 144);
            uint64_t v1352 = &v719[v1351];
            uint64_t v1353 = &v720[v1351];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v720[v1351], 1, v2647))
            {
              uint64_t v1354 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1352, v1353, *(void *)(*(void *)(v1354 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1352, v1353, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1352, 0, 1, v2647);
            }
            uint64_t v677 = v2625;
            __swift_storeEnumTagSinglePayload((uint64_t)v719, 0, 1, v721);
          }
          uint64_t v1381 = v679[6];
          uint64_t v1382 = &v677[v1381];
          uint64_t v1383 = &v678[v1381];
          uint64_t v1384 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1383, 1, v1384))
          {
            uint64_t v1385 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v1382, v1383, *(void *)(*(void *)(v1385 - 8) + 64));
          }
          else
          {
            uint64_t v1386 = *((void *)v1383 + 1);
            *(void *)uint64_t v1382 = *(void *)v1383;
            *((void *)v1382 + 1) = v1386;
            uint64_t v1387 = *((void *)v1383 + 3);
            *((void *)v1382 + 2) = *((void *)v1383 + 2);
            *((void *)v1382 + 3) = v1387;
            uint64_t v1388 = *((void *)v1383 + 5);
            *((void *)v1382 + 4) = *((void *)v1383 + 4);
            *((void *)v1382 + 5) = v1388;
            uint64_t v1389 = *((void *)v1383 + 7);
            *((void *)v1382 + 6) = *((void *)v1383 + 6);
            *((void *)v1382 + 7) = v1389;
            uint64_t v1390 = *((void *)v1383 + 9);
            *((void *)v1382 + 8) = *((void *)v1383 + 8);
            *((void *)v1382 + 9) = v1390;
            uint64_t v1391 = *((void *)v1383 + 11);
            *((void *)v1382 + 10) = *((void *)v1383 + 10);
            *((void *)v1382 + 11) = v1391;
            uint64_t v1392 = *((void *)v1383 + 13);
            *((void *)v1382 + 12) = *((void *)v1383 + 12);
            *((void *)v1382 + 13) = v1392;
            uint64_t v1393 = *((void *)v1383 + 15);
            *((void *)v1382 + 14) = *((void *)v1383 + 14);
            *((void *)v1382 + 15) = v1393;
            v1382[128] = v1383[128];
            *(_WORD *)(v1382 + 129) = *(_WORD *)(v1383 + 129);
            uint64_t v1394 = *((void *)v1383 + 18);
            *((void *)v1382 + 17) = *((void *)v1383 + 17);
            *((void *)v1382 + 18) = v1394;
            uint64_t v1395 = *((void *)v1383 + 20);
            *((void *)v1382 + 19) = *((void *)v1383 + 19);
            *((void *)v1382 + 20) = v1395;
            uint64_t v1396 = *((void *)v1383 + 22);
            *((void *)v1382 + 21) = *((void *)v1383 + 21);
            *((void *)v1382 + 22) = v1396;
            uint64_t v1397 = *((void *)v1383 + 24);
            *((void *)v1382 + 23) = *((void *)v1383 + 23);
            *((void *)v1382 + 24) = v1397;
            uint64_t v2580 = *((void *)v1383 + 26);
            *((void *)v1382 + 25) = *((void *)v1383 + 25);
            *((void *)v1382 + 26) = v2580;
            uint64_t v1398 = *((void *)v1383 + 28);
            *((void *)v1382 + 27) = *((void *)v1383 + 27);
            *((void *)v1382 + 28) = v1398;
            uint64_t v1399 = *((void *)v1383 + 30);
            *((void *)v1382 + 29) = *((void *)v1383 + 29);
            *((void *)v1382 + 30) = v1399;
            uint64_t v1400 = *((void *)v1383 + 32);
            *((void *)v1382 + 31) = *((void *)v1383 + 31);
            *((void *)v1382 + 32) = v1400;
            uint64_t v1401 = *((void *)v1383 + 34);
            *((void *)v1382 + 33) = *((void *)v1383 + 33);
            *((void *)v1382 + 34) = v1401;
            uint64_t v1402 = *((void *)v1383 + 36);
            uint64_t v1403 = *((void *)v1383 + 35);
            v1382[296] = v1383[296];
            *((void *)v1382 + 35) = v1403;
            *((void *)v1382 + 36) = v1402;
            uint64_t v1404 = *(int *)(v1384 + 112);
            v2461 = &v1382[v1404];
            v2464 = (void *)v1384;
            uint64_t v1405 = &v1383[v1404];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1405, 1, v2647))
            {
              uint64_t v1406 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2461, v1405, *(void *)(*(void *)(v1406 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2461, v1405, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v2461, 0, 1, v2647);
            }
            uint64_t v1411 = *(int *)(v1384 + 116);
            uint64_t v1412 = &v1382[v1411];
            uint64_t v1413 = &v1383[v1411];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1383[v1411], 1, v2647))
            {
              uint64_t v1414 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1412, v1413, *(void *)(*(void *)(v1414 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1412, v1413, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1412, 0, 1, v2647);
            }
            uint64_t v677 = v2625;
            __swift_storeEnumTagSinglePayload((uint64_t)v1382, 0, 1, (uint64_t)v2464);
          }
          uint64_t v1442 = v679[7];
          uint64_t v1443 = &v677[v1442];
          uint64_t v1444 = &v678[v1442];
          v1445 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1444, 1, (uint64_t)v1445))
          {
            uint64_t v1446 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v1443, v1444, *(void *)(*(void *)(v1446 - 8) + 64));
          }
          else
          {
            uint64_t v1447 = *((void *)v1444 + 1);
            *(void *)uint64_t v1443 = *(void *)v1444;
            *((void *)v1443 + 1) = v1447;
            uint64_t v1448 = *((void *)v1444 + 3);
            *((void *)v1443 + 2) = *((void *)v1444 + 2);
            *((void *)v1443 + 3) = v1448;
            uint64_t v1449 = *((void *)v1444 + 5);
            *((void *)v1443 + 4) = *((void *)v1444 + 4);
            *((void *)v1443 + 5) = v1449;
            uint64_t v1450 = *((void *)v1444 + 7);
            *((void *)v1443 + 6) = *((void *)v1444 + 6);
            *((void *)v1443 + 7) = v1450;
            uint64_t v1451 = *((void *)v1444 + 9);
            *((void *)v1443 + 8) = *((void *)v1444 + 8);
            *((void *)v1443 + 9) = v1451;
            uint64_t v1452 = *((void *)v1444 + 11);
            *((void *)v1443 + 10) = *((void *)v1444 + 10);
            *((void *)v1443 + 11) = v1452;
            uint64_t v1453 = *((void *)v1444 + 13);
            *((void *)v1443 + 12) = *((void *)v1444 + 12);
            *((void *)v1443 + 13) = v1453;
            uint64_t v1454 = *((void *)v1444 + 15);
            *((void *)v1443 + 14) = *((void *)v1444 + 14);
            *((void *)v1443 + 15) = v1454;
            v1443[128] = v1444[128];
            *(_WORD *)(v1443 + 129) = *(_WORD *)(v1444 + 129);
            uint64_t v1455 = *((void *)v1444 + 18);
            *((void *)v1443 + 17) = *((void *)v1444 + 17);
            *((void *)v1443 + 18) = v1455;
            uint64_t v1456 = *((void *)v1444 + 20);
            *((void *)v1443 + 19) = *((void *)v1444 + 19);
            *((void *)v1443 + 20) = v1456;
            uint64_t v1457 = *((void *)v1444 + 22);
            *((void *)v1443 + 21) = *((void *)v1444 + 21);
            *((void *)v1443 + 22) = v1457;
            uint64_t v1458 = *((void *)v1444 + 24);
            *((void *)v1443 + 23) = *((void *)v1444 + 23);
            *((void *)v1443 + 24) = v1458;
            uint64_t v1459 = *((void *)v1444 + 26);
            *((void *)v1443 + 25) = *((void *)v1444 + 25);
            *((void *)v1443 + 26) = v1459;
            uint64_t v1460 = *((void *)v1444 + 28);
            *((void *)v1443 + 27) = *((void *)v1444 + 27);
            *((void *)v1443 + 28) = v1460;
            uint64_t v2581 = *((void *)v1444 + 30);
            *((void *)v1443 + 29) = *((void *)v1444 + 29);
            *((void *)v1443 + 30) = v2581;
            uint64_t v1461 = *((void *)v1444 + 32);
            *((void *)v1443 + 31) = *((void *)v1444 + 31);
            *((void *)v1443 + 32) = v1461;
            uint64_t v1462 = *((void *)v1444 + 34);
            *((void *)v1443 + 33) = *((void *)v1444 + 33);
            *((void *)v1443 + 34) = v1462;
            uint64_t v1463 = *((void *)v1444 + 36);
            uint64_t v1464 = *((void *)v1444 + 35);
            v1443[296] = v1444[296];
            *((void *)v1443 + 35) = v1464;
            *((void *)v1443 + 36) = v1463;
            uint64_t v1465 = *((void *)v1444 + 39);
            *((void *)v1443 + 38) = *((void *)v1444 + 38);
            *((void *)v1443 + 39) = v1465;
            uint64_t v1466 = v1445[29];
            __dstb = &v1443[v1466];
            v2462 = v1445;
            uint64_t v1467 = &v1444[v1466];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1467, 1, v2637))
            {
              uint64_t v1468 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(__dstb, v1467, *(void *)(*(void *)(v1468 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2637 - 8) + 16))(__dstb, v1467, v2637);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v2637);
            }
            uint64_t v1477 = v1445[30];
            v1478 = &v1443[v1477];
            uint64_t v1479 = &v1444[v1477];
            uint64_t v1480 = *((void *)v1479 + 1);
            *(void *)v1478 = *(void *)v1479;
            *((void *)v1478 + 1) = v1480;
            uint64_t v1481 = v1445[31];
            uint64_t v1482 = &v1443[v1481];
            uint64_t v1483 = &v1444[v1481];
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1483, 1, v2647))
            {
              uint64_t v1484 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1482, v1483, *(void *)(*(void *)(v1484 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1482, v1483, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1482, 0, 1, v2647);
            }
            uint64_t v1489 = v2462[32];
            uint64_t v1490 = &v1443[v1489];
            uint64_t v1491 = &v1444[v1489];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1444[v1489], 1, v2647))
            {
              uint64_t v1492 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1490, v1491, *(void *)(*(void *)(v1492 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1490, v1491, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1490, 0, 1, v2647);
            }
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
            __swift_storeEnumTagSinglePayload((uint64_t)v1443, 0, 1, (uint64_t)v2462);
          }
          uint64_t v1521 = v679[8];
          uint64_t v1522 = &v677[v1521];
          uint64_t v1523 = &v678[v1521];
          uint64_t v1524 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1523, 1, v1524))
          {
            uint64_t v1525 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1522, v1523, *(void *)(*(void *)(v1525 - 8) + 64));
          }
          else
          {
            uint64_t v1526 = *((void *)v1523 + 1);
            *(void *)uint64_t v1522 = *(void *)v1523;
            *((void *)v1522 + 1) = v1526;
            uint64_t v1527 = *((void *)v1523 + 3);
            *((void *)v1522 + 2) = *((void *)v1523 + 2);
            *((void *)v1522 + 3) = v1527;
            uint64_t v1528 = *((void *)v1523 + 5);
            *((void *)v1522 + 4) = *((void *)v1523 + 4);
            *((void *)v1522 + 5) = v1528;
            uint64_t v1529 = *((void *)v1523 + 7);
            *((void *)v1522 + 6) = *((void *)v1523 + 6);
            *((void *)v1522 + 7) = v1529;
            uint64_t v1530 = *((void *)v1523 + 9);
            *((void *)v1522 + 8) = *((void *)v1523 + 8);
            *((void *)v1522 + 9) = v1530;
            uint64_t v1531 = *((void *)v1523 + 11);
            *((void *)v1522 + 10) = *((void *)v1523 + 10);
            *((void *)v1522 + 11) = v1531;
            uint64_t v1532 = *((void *)v1523 + 13);
            *((void *)v1522 + 12) = *((void *)v1523 + 12);
            *((void *)v1522 + 13) = v1532;
            uint64_t v1533 = *((void *)v1523 + 15);
            *((void *)v1522 + 14) = *((void *)v1523 + 14);
            *((void *)v1522 + 15) = v1533;
            v1522[128] = v1523[128];
            *(_WORD *)(v1522 + 129) = *(_WORD *)(v1523 + 129);
            uint64_t v1534 = *((void *)v1523 + 18);
            *((void *)v1522 + 17) = *((void *)v1523 + 17);
            *((void *)v1522 + 18) = v1534;
            uint64_t v1535 = *((void *)v1523 + 20);
            *((void *)v1522 + 19) = *((void *)v1523 + 19);
            *((void *)v1522 + 20) = v1535;
            uint64_t v1536 = *((void *)v1523 + 22);
            *((void *)v1522 + 21) = *((void *)v1523 + 21);
            *((void *)v1522 + 22) = v1536;
            uint64_t v1537 = *((void *)v1523 + 24);
            *((void *)v1522 + 23) = *((void *)v1523 + 23);
            *((void *)v1522 + 24) = v1537;
            uint64_t v1538 = *((void *)v1523 + 26);
            *((void *)v1522 + 25) = *((void *)v1523 + 25);
            *((void *)v1522 + 26) = v1538;
            uint64_t v1539 = *((void *)v1523 + 28);
            *((void *)v1522 + 27) = *((void *)v1523 + 27);
            *((void *)v1522 + 28) = v1539;
            uint64_t v1540 = *((void *)v1523 + 30);
            *((void *)v1522 + 29) = *((void *)v1523 + 29);
            *((void *)v1522 + 30) = v1540;
            uint64_t v1541 = *((void *)v1523 + 32);
            *((void *)v1522 + 31) = *((void *)v1523 + 31);
            *((void *)v1522 + 32) = v1541;
            uint64_t v1543 = *((void *)v1523 + 33);
            uint64_t v1542 = *((void *)v1523 + 34);
            v1522[280] = v1523[280];
            *((void *)v1522 + 33) = v1543;
            *((void *)v1522 + 34) = v1542;
            uint64_t v1544 = (int *)v1524;
            uint64_t v1545 = *((void *)v1523 + 37);
            *((void *)v1522 + 36) = *((void *)v1523 + 36);
            *((void *)v1522 + 37) = v1545;
            uint64_t v2468 = v1544;
            uint64_t v1546 = v1544[27];
            uint64_t v2466 = &v1522[v1546];
            uint64_t v1547 = &v1523[v1546];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1547, 1, v2647))
            {
              uint64_t v1548 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2466, v1547, *(void *)(*(void *)(v1548 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2466, v1547, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v2466, 0, 1, v2647);
            }
            uint64_t v1553 = v2468[28];
            uint64_t v1554 = &v1522[v1553];
            uint64_t v1555 = &v1523[v1553];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1523[v1553], 1, v2647))
            {
              uint64_t v1556 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1554, v1555, *(void *)(*(void *)(v1556 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1554, v1555, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1554, 0, 1, v2647);
            }
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
            __swift_storeEnumTagSinglePayload((uint64_t)v1522, 0, 1, (uint64_t)v2468);
          }
          uint64_t v1579 = v679[9];
          uint64_t v1580 = &v677[v1579];
          uint64_t v1581 = &v678[v1579];
          uint64_t v1582 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1581, 1, v1582))
          {
            uint64_t v1583 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1580, v1581, *(void *)(*(void *)(v1583 - 8) + 64));
          }
          else
          {
            uint64_t v1584 = *((void *)v1581 + 1);
            *(void *)uint64_t v1580 = *(void *)v1581;
            *((void *)v1580 + 1) = v1584;
            uint64_t v1585 = *((void *)v1581 + 3);
            *((void *)v1580 + 2) = *((void *)v1581 + 2);
            *((void *)v1580 + 3) = v1585;
            uint64_t v1586 = *((void *)v1581 + 5);
            *((void *)v1580 + 4) = *((void *)v1581 + 4);
            *((void *)v1580 + 5) = v1586;
            uint64_t v1587 = *((void *)v1581 + 7);
            *((void *)v1580 + 6) = *((void *)v1581 + 6);
            *((void *)v1580 + 7) = v1587;
            uint64_t v1588 = *((void *)v1581 + 9);
            *((void *)v1580 + 8) = *((void *)v1581 + 8);
            *((void *)v1580 + 9) = v1588;
            uint64_t v1589 = *((void *)v1581 + 11);
            *((void *)v1580 + 10) = *((void *)v1581 + 10);
            *((void *)v1580 + 11) = v1589;
            uint64_t v1590 = *((void *)v1581 + 13);
            *((void *)v1580 + 12) = *((void *)v1581 + 12);
            *((void *)v1580 + 13) = v1590;
            uint64_t v1591 = *((void *)v1581 + 15);
            *((void *)v1580 + 14) = *((void *)v1581 + 14);
            *((void *)v1580 + 15) = v1591;
            v1580[128] = v1581[128];
            *(_WORD *)(v1580 + 129) = *(_WORD *)(v1581 + 129);
            uint64_t v1592 = *((void *)v1581 + 18);
            *((void *)v1580 + 17) = *((void *)v1581 + 17);
            *((void *)v1580 + 18) = v1592;
            uint64_t v1593 = *((void *)v1581 + 20);
            *((void *)v1580 + 19) = *((void *)v1581 + 19);
            *((void *)v1580 + 20) = v1593;
            uint64_t v1594 = *((void *)v1581 + 22);
            *((void *)v1580 + 21) = *((void *)v1581 + 21);
            *((void *)v1580 + 22) = v1594;
            uint64_t v1595 = *((void *)v1581 + 24);
            *((void *)v1580 + 23) = *((void *)v1581 + 23);
            *((void *)v1580 + 24) = v1595;
            uint64_t v1596 = *((void *)v1581 + 26);
            *((void *)v1580 + 25) = *((void *)v1581 + 25);
            *((void *)v1580 + 26) = v1596;
            uint64_t v1597 = *((void *)v1581 + 28);
            *((void *)v1580 + 27) = *((void *)v1581 + 27);
            *((void *)v1580 + 28) = v1597;
            uint64_t v1598 = *((void *)v1581 + 30);
            *((void *)v1580 + 29) = *((void *)v1581 + 29);
            *((void *)v1580 + 30) = v1598;
            *((void *)v1580 + 31) = *((void *)v1581 + 31);
            uint64_t v2478 = (int *)v1582;
            uint64_t v1599 = *(int *)(v1582 + 96);
            uint64_t v2474 = &v1580[v1599];
            uint64_t v2483 = &v1581[v1599];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2483, 1, v2647))
            {
              uint64_t v1600 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2474, v2483, *(void *)(*(void *)(v1600 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2474, v2483, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v2474, 0, 1, v2647);
            }
            uint64_t v1605 = *(int *)(v1582 + 100);
            uint64_t v1606 = &v1580[v1605];
            uint64_t v1607 = &v1581[v1605];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1581[v1605], 1, v2647))
            {
              uint64_t v1608 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1606, v1607, *(void *)(*(void *)(v1608 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1606, v1607, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1606, 0, 1, v2647);
            }
            uint64_t v1614 = v2478[26];
            v1615 = &v1580[v1614];
            uint64_t v1616 = &v1581[v1614];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1581[v1614], 1, v2637))
            {
              uint64_t v1617 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1615, v1616, *(void *)(*(void *)(v1617 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2637 - 8) + 16))(v1615, v1616, v2637);
              __swift_storeEnumTagSinglePayload((uint64_t)v1615, 0, 1, v2637);
            }
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
            __swift_storeEnumTagSinglePayload((uint64_t)v1580, 0, 1, (uint64_t)v2478);
          }
          uint64_t v1638 = v679[10];
          v1639 = &v677[v1638];
          uint64_t v1640 = &v678[v1638];
          uint64_t v1641 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1640, 1, v1641))
          {
            uint64_t v1642 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1639, v1640, *(void *)(*(void *)(v1642 - 8) + 64));
          }
          else
          {
            uint64_t v1643 = *((void *)v1640 + 1);
            *(void *)v1639 = *(void *)v1640;
            *((void *)v1639 + 1) = v1643;
            uint64_t v1644 = *((void *)v1640 + 3);
            *((void *)v1639 + 2) = *((void *)v1640 + 2);
            *((void *)v1639 + 3) = v1644;
            uint64_t v1645 = *((void *)v1640 + 5);
            *((void *)v1639 + 4) = *((void *)v1640 + 4);
            *((void *)v1639 + 5) = v1645;
            uint64_t v1646 = *((void *)v1640 + 7);
            *((void *)v1639 + 6) = *((void *)v1640 + 6);
            *((void *)v1639 + 7) = v1646;
            uint64_t v1647 = *((void *)v1640 + 9);
            *((void *)v1639 + 8) = *((void *)v1640 + 8);
            *((void *)v1639 + 9) = v1647;
            uint64_t v1648 = *((void *)v1640 + 11);
            *((void *)v1639 + 10) = *((void *)v1640 + 10);
            *((void *)v1639 + 11) = v1648;
            uint64_t v1649 = *((void *)v1640 + 13);
            *((void *)v1639 + 12) = *((void *)v1640 + 12);
            *((void *)v1639 + 13) = v1649;
            uint64_t v1650 = *((void *)v1640 + 15);
            *((void *)v1639 + 14) = *((void *)v1640 + 14);
            *((void *)v1639 + 15) = v1650;
            v1639[128] = v1640[128];
            *(_WORD *)(v1639 + 129) = *(_WORD *)(v1640 + 129);
            uint64_t v1651 = *((void *)v1640 + 18);
            *((void *)v1639 + 17) = *((void *)v1640 + 17);
            *((void *)v1639 + 18) = v1651;
            uint64_t v1652 = *((void *)v1640 + 20);
            *((void *)v1639 + 19) = *((void *)v1640 + 19);
            *((void *)v1639 + 20) = v1652;
            uint64_t v1653 = *((void *)v1640 + 22);
            *((void *)v1639 + 21) = *((void *)v1640 + 21);
            *((void *)v1639 + 22) = v1653;
            uint64_t v1654 = *((void *)v1640 + 24);
            *((void *)v1639 + 23) = *((void *)v1640 + 23);
            *((void *)v1639 + 24) = v1654;
            uint64_t v1655 = *((void *)v1640 + 26);
            *((void *)v1639 + 25) = *((void *)v1640 + 25);
            *((void *)v1639 + 26) = v1655;
            *((void *)v1639 + 27) = *((void *)v1640 + 27);
            uint64_t v2493 = (int *)v1641;
            uint64_t v1656 = *(int *)(v1641 + 88);
            v2485 = &v1639[v1656];
            uint64_t v2499 = &v1640[v1656];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2499, 1, v2647))
            {
              uint64_t v1657 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2485, v2499, *(void *)(*(void *)(v1657 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2485, v2499, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v2485, 0, 1, v2647);
            }
            uint64_t v1662 = *(int *)(v1641 + 92);
            uint64_t v1663 = &v1639[v1662];
            uint64_t v1664 = &v1640[v1662];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1640[v1662], 1, v2647))
            {
              uint64_t v1665 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1663, v1664, *(void *)(*(void *)(v1665 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v1663, v1664, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v1663, 0, 1, v2647);
            }
            uint64_t v1674 = v2493[24];
            uint64_t v1675 = &v1639[v1674];
            v1676 = &v1640[v1674];
            *(void *)uint64_t v1675 = *(void *)v1676;
            v1675[8] = v1676[8];
            uint64_t v1677 = v2493[25];
            uint64_t v1678 = &v1639[v1677];
            v1679 = &v1640[v1677];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1640[v1677], 1, v2637))
            {
              uint64_t v1680 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1678, v1679, *(void *)(*(void *)(v1680 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2637 - 8) + 16))(v1678, v1679, v2637);
              __swift_storeEnumTagSinglePayload((uint64_t)v1678, 0, 1, v2637);
            }
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
            __swift_storeEnumTagSinglePayload((uint64_t)v1639, 0, 1, (uint64_t)v2493);
          }
          uint64_t v1696 = v679[11];
          v1697 = &v677[v1696];
          uint64_t v1698 = &v678[v1696];
          v1699 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1698, 1, (uint64_t)v1699))
          {
            uint64_t v1700 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1697, v1698, *(void *)(*(void *)(v1700 - 8) + 64));
          }
          else
          {
            uint64_t v1701 = *((void *)v1698 + 1);
            *(void *)v1697 = *(void *)v1698;
            *((void *)v1697 + 1) = v1701;
            uint64_t v1702 = *((void *)v1698 + 3);
            *((void *)v1697 + 2) = *((void *)v1698 + 2);
            *((void *)v1697 + 3) = v1702;
            uint64_t v1703 = *((void *)v1698 + 5);
            *((void *)v1697 + 4) = *((void *)v1698 + 4);
            *((void *)v1697 + 5) = v1703;
            uint64_t v1704 = *((void *)v1698 + 7);
            *((void *)v1697 + 6) = *((void *)v1698 + 6);
            *((void *)v1697 + 7) = v1704;
            uint64_t v1705 = *((void *)v1698 + 9);
            *((void *)v1697 + 8) = *((void *)v1698 + 8);
            *((void *)v1697 + 9) = v1705;
            uint64_t v1706 = *((void *)v1698 + 11);
            *((void *)v1697 + 10) = *((void *)v1698 + 10);
            *((void *)v1697 + 11) = v1706;
            v1697[96] = v1698[96];
            uint64_t v1707 = *((void *)v1698 + 14);
            *((void *)v1697 + 13) = *((void *)v1698 + 13);
            *((void *)v1697 + 14) = v1707;
            uint64_t v1708 = v1699[13];
            uint64_t v2538 = &v1697[v1708];
            uint64_t v2546 = &v1698[v1708];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2546, 1, v2637))
            {
              uint64_t v1709 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2538, v2546, *(void *)(*(void *)(v1709 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2637 - 8) + 16))(v2538, v2546, v2637);
              __swift_storeEnumTagSinglePayload((uint64_t)v2538, 0, 1, v2637);
            }
            uint64_t v1714 = v1699[14];
            v1715 = &v1697[v1714];
            uint64_t v1716 = &v1698[v1714];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1698[v1714], 1, v2637))
            {
              uint64_t v1717 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1715, v1716, *(void *)(*(void *)(v1717 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2637 - 8) + 16))(v1715, v1716, v2637);
              __swift_storeEnumTagSinglePayload((uint64_t)v1715, 0, 1, v2637);
            }
            uint64_t v1787 = v1699[15];
            v1788 = &v1697[v1787];
            v1789 = &v1698[v1787];
            uint64_t v2582 = *((void *)v1789 + 1);
            *(void *)v1788 = *(void *)v1789;
            *((void *)v1788 + 1) = v2582;
            uint64_t v1790 = v1699[16];
            v1791 = &v1697[v1790];
            v1792 = &v1698[v1790];
            uint64_t v1793 = *((void *)v1792 + 1);
            *(void *)v1791 = *(void *)v1792;
            *((void *)v1791 + 1) = v1793;
            uint64_t v1794 = v1699[17];
            v1795 = &v1697[v1794];
            v1796 = &v1698[v1794];
            uint64_t v1797 = *((void *)v1796 + 1);
            *(void *)v1795 = *(void *)v1796;
            *((void *)v1795 + 1) = v1797;
            uint64_t v1798 = v1699[18];
            uint64_t v2549 = &v1698[v1798];
            uint64_t v2563 = &v1697[v1798];
            uint64_t v1799 = type metadata accessor for DateComponents();
            v1800 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1799 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1800(v2563, v2549, v1799);
            v1800(&v1697[v1699[19]], &v1698[v1699[19]], v1799);
            uint64_t v1801 = v1699[20];
            uint64_t v1802 = &v1697[v1801];
            v1803 = &v1698[v1801];
            uint64_t v1804 = *((void *)v1803 + 1);
            *(void *)uint64_t v1802 = *(void *)v1803;
            *((void *)v1802 + 1) = v1804;
            uint64_t v1805 = v1699[21];
            uint64_t v1806 = &v1697[v1805];
            uint64_t v1807 = &v1698[v1805];
            uint64_t v2583 = *((void *)v1807 + 1);
            *(void *)uint64_t v1806 = *(void *)v1807;
            *((void *)v1806 + 1) = v2583;
            uint64_t v1808 = v1699[22];
            v1809 = &v1697[v1808];
            v1810 = &v1698[v1808];
            uint64_t v2564 = *((void *)v1810 + 1);
            *(void *)v1809 = *(void *)v1810;
            *((void *)v1809 + 1) = v2564;
            uint64_t v1811 = v1699[23];
            uint64_t v1812 = &v1697[v1811];
            v1813 = &v1698[v1811];
            uint64_t v2550 = *((void *)v1813 + 1);
            *(void *)uint64_t v1812 = *(void *)v1813;
            *((void *)v1812 + 1) = v2550;
            uint64_t v1814 = v1699[24];
            uint64_t v1815 = &v1697[v1814];
            v1816 = &v1698[v1814];
            uint64_t v2541 = (void *)*((void *)v1816 + 1);
            *(void *)uint64_t v1815 = *(void *)v1816;
            *((void *)v1815 + 1) = v2541;
            uint64_t v1817 = v1699[25];
            uint64_t v1818 = &v1697[v1817];
            v1819 = &v1698[v1817];
            v2533 = (void *)*((void *)v1819 + 1);
            *(void *)uint64_t v1818 = *(void *)v1819;
            *((void *)v1818 + 1) = v2533;
            uint64_t v1820 = v1699[26];
            uint64_t v1821 = &v1697[v1820];
            uint64_t v1822 = &v1698[v1820];
            uint64_t v2523 = (void *)*((void *)v1822 + 1);
            *(void *)uint64_t v1821 = *(void *)v1822;
            *((void *)v1821 + 1) = v2523;
            uint64_t v1823 = v1699[27];
            v1824 = &v1697[v1823];
            uint64_t v1825 = &v1698[v1823];
            uint64_t v2513 = (void *)*((void *)v1825 + 1);
            *(void *)v1824 = *(void *)v1825;
            *((void *)v1824 + 1) = v2513;
            uint64_t v1826 = v1699[28];
            v1827 = &v1697[v1826];
            uint64_t v1828 = &v1698[v1826];
            uint64_t v2506 = (void *)*((void *)v1828 + 1);
            *(void *)v1827 = *(void *)v1828;
            *((void *)v1827 + 1) = v2506;
            uint64_t v1829 = v1699[29];
            v1830 = &v1697[v1829];
            v1831 = &v1698[v1829];
            v2501 = (void *)*((void *)v1831 + 1);
            *(void *)v1830 = *(void *)v1831;
            *((void *)v1830 + 1) = v2501;
            uint64_t v1832 = v1699[30];
            uint64_t v1833 = &v1697[v1832];
            v1834 = &v1698[v1832];
            uint64_t v2495 = (void *)*((void *)v1834 + 1);
            *(void *)uint64_t v1833 = *(void *)v1834;
            *((void *)v1833 + 1) = v2495;
            uint64_t v1835 = v1699[31];
            uint64_t v1836 = &v1697[v1835];
            uint64_t v1837 = &v1698[v1835];
            uint64_t v2487 = (void *)*((void *)v1837 + 1);
            *(void *)uint64_t v1836 = *(void *)v1837;
            *((void *)v1836 + 1) = v2487;
            uint64_t v1838 = v1699[32];
            v1839 = &v1697[v1838];
            uint64_t v1840 = &v1698[v1838];
            uint64_t v1841 = *((void *)v1840 + 1);
            *(void *)v1839 = *(void *)v1840;
            *((void *)v1839 + 1) = v1841;
            *(void *)&v1697[v1699[33]] = *(void *)&v1698[v1699[33]];
            *(void *)&v1697[v1699[34]] = *(void *)&v1698[v1699[34]];
            uint64_t v1842 = v1699[35];
            v1843 = &v1697[v1842];
            v1844 = &v1698[v1842];
            uint64_t v1845 = *((void *)v1844 + 1);
            *(void *)v1843 = *(void *)v1844;
            *((void *)v1843 + 1) = v1845;
            uint64_t v1846 = v1699[36];
            uint64_t v1847 = &v1697[v1846];
            uint64_t v1848 = &v1698[v1846];
            uint64_t v1849 = *((void *)v1848 + 1);
            *(void *)uint64_t v1847 = *(void *)v1848;
            *((void *)v1847 + 1) = v1849;
            uint64_t v1850 = v1699[37];
            uint64_t v1851 = &v1697[v1850];
            uint64_t v1852 = &v1698[v1850];
            uint64_t v1853 = *((void *)v1852 + 1);
            *(void *)uint64_t v1851 = *(void *)v1852;
            *((void *)v1851 + 1) = v1853;
            uint64_t v1854 = v1699[38];
            uint64_t v2471 = &v1697[v1854];
            uint64_t v2475 = &v1698[v1854];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2475, 1, v2647))
            {
              uint64_t v1855 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2471, v2475, *(void *)(*(void *)(v1855 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2471, v2475, v2647);
              __swift_storeEnumTagSinglePayload((uint64_t)v2471, 0, 1, v2647);
            }
            uint64_t v1906 = v1699[39];
            v1907 = &v1697[v1906];
            v1908 = &v1698[v1906];
            uint64_t v1909 = *((void *)v1908 + 1);
            *(void *)v1907 = *(void *)v1908;
            *((void *)v1907 + 1) = v1909;
            uint64_t v1910 = v1699[40];
            v1911 = &v1697[v1910];
            v1912 = &v1698[v1910];
            uint64_t v1913 = *((void *)v1912 + 1);
            *(void *)v1911 = *(void *)v1912;
            *((void *)v1911 + 1) = v1913;
            uint64_t v1914 = v1699[41];
            v1915 = &v1697[v1914];
            v1916 = &v1698[v1914];
            v1915[8] = v1916[8];
            *(void *)v1915 = *(void *)v1916;
            uint64_t v1917 = v1699[42];
            v1918 = &v1697[v1917];
            v1919 = &v1698[v1917];
            uint64_t v1920 = *((void *)v1919 + 1);
            *(void *)v1918 = *(void *)v1919;
            *((void *)v1918 + 1) = v1920;
            uint64_t v1921 = v1699[43];
            v1922 = &v1697[v1921];
            uint64_t v1923 = &v1698[v1921];
            *(_OWORD *)v1922 = *(_OWORD *)v1923;
            *(void *)(v1922 + 13) = *(void *)(v1923 + 13);
            uint64_t v1924 = v1699[44];
            v1925 = &v1697[v1924];
            uint64_t v1926 = &v1698[v1924];
            uint64_t v1927 = *((void *)v1926 + 1);
            *(void *)v1925 = *(void *)v1926;
            *((void *)v1925 + 1) = v1927;
            uint64_t v1928 = v1699[45];
            uint64_t v1929 = &v1697[v1928];
            v1930 = &v1698[v1928];
            uint64_t v1931 = *((void *)v1930 + 1);
            *(void *)uint64_t v1929 = *(void *)v1930;
            *((void *)v1929 + 1) = v1931;
            uint64_t v1932 = v1699[46];
            v1933 = &v1697[v1932];
            v1934 = &v1698[v1932];
            uint64_t v1935 = *((void *)v1934 + 1);
            *(void *)v1933 = *(void *)v1934;
            *((void *)v1933 + 1) = v1935;
            uint64_t v1936 = v1699[47];
            v1937 = &v1697[v1936];
            v1938 = &v1698[v1936];
            uint64_t v1939 = *((void *)v1938 + 1);
            *(void *)v1937 = *(void *)v1938;
            *((void *)v1937 + 1) = v1939;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1697, 0, 1, (uint64_t)v1699);
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
            uint64_t v678 = v2590;
          }
          uint64_t v1940 = v679[12];
          v1941 = &v677[v1940];
          v1942 = &v678[v1940];
          uint64_t v1943 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1942, 1, (uint64_t)v1943))
          {
            uint64_t v1944 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1941, v1942, *(void *)(*(void *)(v1944 - 8) + 64));
          }
          else
          {
            uint64_t v1945 = *((void *)v1942 + 1);
            *(void *)v1941 = *(void *)v1942;
            *((void *)v1941 + 1) = v1945;
            uint64_t v1946 = *((void *)v1942 + 3);
            *((void *)v1941 + 2) = *((void *)v1942 + 2);
            *((void *)v1941 + 3) = v1946;
            uint64_t v1947 = *((void *)v1942 + 5);
            *((void *)v1941 + 4) = *((void *)v1942 + 4);
            *((void *)v1941 + 5) = v1947;
            uint64_t v1948 = *((void *)v1942 + 7);
            *((void *)v1941 + 6) = *((void *)v1942 + 6);
            *((void *)v1941 + 7) = v1948;
            uint64_t v1949 = *((void *)v1942 + 9);
            *((void *)v1941 + 8) = *((void *)v1942 + 8);
            *((void *)v1941 + 9) = v1949;
            uint64_t v1950 = *((void *)v1942 + 11);
            *((void *)v1941 + 10) = *((void *)v1942 + 10);
            *((void *)v1941 + 11) = v1950;
            v1941[96] = v1942[96];
            uint64_t v1951 = *((void *)v1942 + 14);
            *((void *)v1941 + 13) = *((void *)v1942 + 13);
            *((void *)v1941 + 14) = v1951;
            uint64_t v1952 = *((void *)v1942 + 16);
            *((void *)v1941 + 15) = *((void *)v1942 + 15);
            *((void *)v1941 + 16) = v1952;
            uint64_t v1953 = v1943[14];
            uint64_t v2515 = &v1941[v1953];
            v1954 = &v1942[v1953];
            uint64_t v2524 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1954, 1, (uint64_t)v2524))
            {
              uint64_t v1955 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2515, v1954, *(void *)(*(void *)(v1955 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2524 - 1) + 16))(v2515, v1954, v2524);
              __swift_storeEnumTagSinglePayload((uint64_t)v2515, 0, 1, (uint64_t)v2524);
            }
            uint64_t v1960 = v1943[15];
            uint64_t v1961 = &v1941[v1960];
            uint64_t v1962 = &v1942[v1960];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1942[v1960], 1, (uint64_t)v2524))
            {
              uint64_t v1963 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1961, v1962, *(void *)(*(void *)(v1963 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2524 - 1) + 16))(v1961, v1962, v2524);
              __swift_storeEnumTagSinglePayload((uint64_t)v1961, 0, 1, (uint64_t)v2524);
            }
            uint64_t v2022 = v1943[16];
            v2023 = &v1941[v2022];
            v2024 = &v1942[v2022];
            uint64_t v2025 = *((void *)v2024 + 1);
            *(void *)v2023 = *(void *)v2024;
            *((void *)v2023 + 1) = v2025;
            uint64_t v2026 = v1943[17];
            v2027 = &v1941[v2026];
            uint64_t v2028 = &v1942[v2026];
            uint64_t v2584 = *((void *)v2028 + 1);
            *(void *)v2027 = *(void *)v2028;
            *((void *)v2027 + 1) = v2584;
            uint64_t v2029 = v1943[18];
            v2030 = &v1941[v2029];
            uint64_t v2031 = &v1942[v2029];
            uint64_t v2566 = *((void *)v2031 + 1);
            *(void *)v2030 = *(void *)v2031;
            *((void *)v2030 + 1) = v2566;
            uint64_t v2032 = v1943[19];
            v2033 = &v1941[v2032];
            uint64_t v2034 = &v1942[v2032];
            uint64_t v2552 = *((void *)v2034 + 1);
            *(void *)v2033 = *(void *)v2034;
            *((void *)v2033 + 1) = v2552;
            uint64_t v2035 = v1943[20];
            v2036 = &v1941[v2035];
            v2037 = &v1942[v2035];
            uint64_t v2038 = *((void *)v2037 + 1);
            *(void *)v2036 = *(void *)v2037;
            *((void *)v2036 + 1) = v2038;
            *(void *)&v1941[v1943[21]] = *(void *)&v1942[v1943[21]];
            *(void *)&v1941[v1943[22]] = *(void *)&v1942[v1943[22]];
            uint64_t v2039 = v1943[23];
            v2040 = &v1941[v2039];
            v2041 = &v1942[v2039];
            *(void *)v2040 = *(void *)v2041;
            v2040[8] = v2041[8];
            uint64_t v2042 = v1943[24];
            uint64_t v2043 = &v1941[v2042];
            v2044 = &v1942[v2042];
            *(void *)uint64_t v2043 = *(void *)v2044;
            v2043[8] = v2044[8];
            uint64_t v2045 = v1943[25];
            uint64_t v2046 = &v1941[v2045];
            uint64_t v2047 = &v1942[v2045];
            uint64_t v2048 = *((void *)v2047 + 1);
            *(void *)uint64_t v2046 = *(void *)v2047;
            *((void *)v2046 + 1) = v2048;
            uint64_t v2049 = v1943[26];
            uint64_t v2050 = &v1941[v2049];
            uint64_t v2051 = &v1942[v2049];
            uint64_t v2052 = *((void *)v2051 + 1);
            *(void *)uint64_t v2050 = *(void *)v2051;
            *((void *)v2050 + 1) = v2052;
            uint64_t v2053 = v1943[27];
            v2054 = &v1941[v2053];
            uint64_t v2055 = &v1942[v2053];
            uint64_t v2056 = *((void *)v2055 + 1);
            *(void *)v2054 = *(void *)v2055;
            *((void *)v2054 + 1) = v2056;
            uint64_t v2057 = v1943[28];
            uint64_t v2058 = &v1941[v2057];
            uint64_t v2059 = &v1942[v2057];
            uint64_t v2060 = *((void *)v2059 + 1);
            *(void *)uint64_t v2058 = *(void *)v2059;
            *((void *)v2058 + 1) = v2060;
            uint64_t v2061 = v1943[29];
            v2062 = &v1941[v2061];
            v2063 = &v1942[v2061];
            *(void *)v2062 = *(void *)v2063;
            v2062[8] = v2063[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1941, 0, 1, (uint64_t)v1943);
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
            uint64_t v678 = v2590;
          }
          uint64_t v2064 = v679[13];
          uint64_t v2065 = &v677[v2064];
          v2066 = &v678[v2064];
          v2067 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2066, 1, (uint64_t)v2067))
          {
            uint64_t v2068 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v2065, v2066, *(void *)(*(void *)(v2068 - 8) + 64));
          }
          else
          {
            uint64_t v2069 = *((void *)v2066 + 1);
            *(void *)uint64_t v2065 = *(void *)v2066;
            *((void *)v2065 + 1) = v2069;
            uint64_t v2070 = *((void *)v2066 + 3);
            *((void *)v2065 + 2) = *((void *)v2066 + 2);
            *((void *)v2065 + 3) = v2070;
            uint64_t v2071 = *((void *)v2066 + 5);
            *((void *)v2065 + 4) = *((void *)v2066 + 4);
            *((void *)v2065 + 5) = v2071;
            uint64_t v2072 = *((void *)v2066 + 7);
            *((void *)v2065 + 6) = *((void *)v2066 + 6);
            *((void *)v2065 + 7) = v2072;
            uint64_t v2073 = *((void *)v2066 + 9);
            *((void *)v2065 + 8) = *((void *)v2066 + 8);
            *((void *)v2065 + 9) = v2073;
            uint64_t v2074 = *((void *)v2066 + 11);
            *((void *)v2065 + 10) = *((void *)v2066 + 10);
            *((void *)v2065 + 11) = v2074;
            v2065[96] = v2066[96];
            uint64_t v2075 = *((void *)v2066 + 14);
            *((void *)v2065 + 13) = *((void *)v2066 + 13);
            *((void *)v2065 + 14) = v2075;
            uint64_t v2076 = *((void *)v2066 + 16);
            *((void *)v2065 + 15) = *((void *)v2066 + 15);
            *((void *)v2065 + 16) = v2076;
            uint64_t v2077 = v2067[14];
            uint64_t v2526 = &v2065[v2077];
            v2534 = &v2066[v2077];
            uint64_t v2078 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2534, 1, v2078))
            {
              uint64_t v2079 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2526, v2534, *(void *)(*(void *)(v2079 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2078 - 8) + 16))(v2526, v2534, v2078);
              __swift_storeEnumTagSinglePayload((uint64_t)v2526, 0, 1, v2078);
            }
            uint64_t v2254 = v2067[15];
            v2255 = &v2065[v2254];
            v2256 = &v2066[v2254];
            uint64_t v2257 = *((void *)v2256 + 1);
            *(void *)v2255 = *(void *)v2256;
            *((void *)v2255 + 1) = v2257;
            uint64_t v2258 = v2067[16];
            v2259 = &v2065[v2258];
            v2260 = &v2066[v2258];
            uint64_t v2601 = *((void *)v2260 + 1);
            *(void *)v2259 = *(void *)v2260;
            *((void *)v2259 + 1) = v2601;
            uint64_t v2261 = v2067[17];
            uint64_t v2262 = &v2065[v2261];
            v2263 = &v2066[v2261];
            uint64_t v2587 = *((void *)v2263 + 1);
            *(void *)uint64_t v2262 = *(void *)v2263;
            *((void *)v2262 + 1) = v2587;
            uint64_t v2264 = v2067[18];
            uint64_t v2265 = &v2065[v2264];
            uint64_t v2266 = &v2066[v2264];
            uint64_t v2267 = *((void *)v2266 + 1);
            *(void *)uint64_t v2265 = *(void *)v2266;
            *((void *)v2265 + 1) = v2267;
            uint64_t v2268 = v2067[19];
            uint64_t v2269 = &v2065[v2268];
            v2270 = &v2066[v2268];
            uint64_t v2271 = *((void *)v2270 + 1);
            *(void *)uint64_t v2269 = *(void *)v2270;
            *((void *)v2269 + 1) = v2271;
            *(void *)&v2065[v2067[20]] = *(void *)&v2066[v2067[20]];
            uint64_t v2272 = v2067[21];
            v2273 = &v2065[v2272];
            v2274 = &v2066[v2272];
            uint64_t v2275 = *((void *)v2274 + 1);
            *(void *)v2273 = *(void *)v2274;
            *((void *)v2273 + 1) = v2275;
            uint64_t v2276 = v2067[22];
            v2277 = &v2065[v2276];
            v2278 = &v2066[v2276];
            uint64_t v2279 = *((void *)v2278 + 1);
            *(void *)v2277 = *(void *)v2278;
            *((void *)v2277 + 1) = v2279;
            uint64_t v2280 = v2067[23];
            v2281 = &v2065[v2280];
            v2282 = &v2066[v2280];
            uint64_t v2283 = *((void *)v2282 + 1);
            *(void *)v2281 = *(void *)v2282;
            *((void *)v2281 + 1) = v2283;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2065, 0, 1, (uint64_t)v2067);
            uint64_t v679 = v2609;
            uint64_t v677 = v2625;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v677, 0, 1, (uint64_t)v679);
        }
        uint64_t v2284 = v2651[20];
        v2285 = &v9[v2284];
        v2286 = &v10[v2284];
        uint64_t v2287 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2286, 1, (uint64_t)v2287))
        {
          uint64_t v2288 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2285, v2286, *(void *)(*(void *)(v2288 - 8) + 64));
        }
        else
        {
          uint64_t v2289 = *((void *)v2286 + 1);
          *(void *)v2285 = *(void *)v2286;
          *((void *)v2285 + 1) = v2289;
          uint64_t v2290 = *((void *)v2286 + 3);
          *((void *)v2285 + 2) = *((void *)v2286 + 2);
          *((void *)v2285 + 3) = v2290;
          uint64_t v2291 = *((void *)v2286 + 5);
          *((void *)v2285 + 4) = *((void *)v2286 + 4);
          *((void *)v2285 + 5) = v2291;
          uint64_t v2292 = *((void *)v2286 + 7);
          *((void *)v2285 + 6) = *((void *)v2286 + 6);
          *((void *)v2285 + 7) = v2292;
          uint64_t v2293 = *((void *)v2286 + 9);
          *((void *)v2285 + 8) = *((void *)v2286 + 8);
          *((void *)v2285 + 9) = v2293;
          uint64_t v2294 = *((void *)v2286 + 11);
          *((void *)v2285 + 10) = *((void *)v2286 + 10);
          *((void *)v2285 + 11) = v2294;
          uint64_t v2295 = v2287[10];
          v2617 = &v2286[v2295];
          v2628 = &v2285[v2295];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2617, 1, v2647))
          {
            uint64_t v2296 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2628, v2617, *(void *)(*(void *)(v2296 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2628, v2617, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2628, 0, 1, v2647);
          }
          uint64_t v2297 = v2287[11];
          uint64_t v2298 = &v2285[v2297];
          uint64_t v2299 = &v2286[v2297];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2286[v2297], 1, v2647))
          {
            uint64_t v2300 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2298, v2299, *(void *)(*(void *)(v2300 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2298, v2299, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2298, 0, 1, v2647);
          }
          uint64_t v2301 = v2287[12];
          uint64_t v2302 = &v2285[v2301];
          uint64_t v2303 = &v2286[v2301];
          uint64_t v2304 = *((void *)v2303 + 1);
          *(void *)uint64_t v2302 = *(void *)v2303;
          *((void *)v2302 + 1) = v2304;
          uint64_t v2305 = v2287[13];
          uint64_t v2306 = &v2285[v2305];
          uint64_t v2307 = &v2286[v2305];
          uint64_t v2308 = *((void *)v2307 + 1);
          *(void *)uint64_t v2306 = *(void *)v2307;
          *((void *)v2306 + 1) = v2308;
          uint64_t v2309 = v2287[14];
          uint64_t v2310 = &v2285[v2309];
          uint64_t v2311 = &v2286[v2309];
          uint64_t v2312 = *((void *)v2311 + 1);
          *(void *)uint64_t v2310 = *(void *)v2311;
          *((void *)v2310 + 1) = v2312;
          uint64_t v2313 = v2287[15];
          uint64_t v2314 = &v2285[v2313];
          uint64_t v2315 = &v2286[v2313];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2315, 1, v2647))
          {
            uint64_t v2316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2314, v2315, *(void *)(*(void *)(v2316 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2314, v2315, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2314, 0, 1, v2647);
          }
          uint64_t v2317 = v2287[16];
          v2318 = &v2285[v2317];
          uint64_t v2319 = &v2286[v2317];
          uint64_t v2320 = *((void *)v2319 + 1);
          *(void *)v2318 = *(void *)v2319;
          *((void *)v2318 + 1) = v2320;
          uint64_t v2321 = v2287[17];
          uint64_t v2322 = &v2285[v2321];
          uint64_t v2323 = &v2286[v2321];
          uint64_t v2629 = *((void *)v2323 + 1);
          *(void *)uint64_t v2322 = *(void *)v2323;
          *((void *)v2322 + 1) = v2629;
          uint64_t v2324 = v2287[18];
          v2325 = &v2285[v2324];
          uint64_t v2326 = &v2286[v2324];
          uint64_t v2327 = *((void *)v2326 + 1);
          *(void *)v2325 = *(void *)v2326;
          *((void *)v2325 + 1) = v2327;
          uint64_t v2328 = v2287[19];
          v2329 = &v2285[v2328];
          uint64_t v2330 = &v2286[v2328];
          uint64_t v2331 = *((void *)v2330 + 1);
          *(void *)v2329 = *(void *)v2330;
          *((void *)v2329 + 1) = v2331;
          uint64_t v2332 = v2287[20];
          v2333 = &v2285[v2332];
          uint64_t v2334 = &v2286[v2332];
          uint64_t v2335 = *((void *)v2334 + 1);
          *(void *)v2333 = *(void *)v2334;
          *((void *)v2333 + 1) = v2335;
          uint64_t v2336 = v2287[21];
          v2337 = &v2285[v2336];
          uint64_t v2338 = &v2286[v2336];
          uint64_t v2339 = *((void *)v2338 + 1);
          *(void *)v2337 = *(void *)v2338;
          *((void *)v2337 + 1) = v2339;
          uint64_t v2340 = v2287[22];
          v2341 = &v2285[v2340];
          uint64_t v2342 = &v2286[v2340];
          uint64_t v2343 = *((void *)v2342 + 1);
          *(void *)v2341 = *(void *)v2342;
          *((void *)v2341 + 1) = v2343;
          uint64_t v2344 = v2287[23];
          v2345 = &v2285[v2344];
          uint64_t v2346 = &v2286[v2344];
          uint64_t v2347 = *((void *)v2346 + 1);
          *(void *)v2345 = *(void *)v2346;
          *((void *)v2345 + 1) = v2347;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2285, 0, 1, (uint64_t)v2287);
        }
        uint64_t v2348 = v2651[21];
        v2349 = &v9[v2348];
        uint64_t v2350 = &v10[v2348];
        v2351 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2350, 1, (uint64_t)v2351))
        {
          uint64_t v2352 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2349, v2350, *(void *)(*(void *)(v2352 - 8) + 64));
        }
        else
        {
          uint64_t v2353 = *((void *)v2350 + 1);
          *(void *)v2349 = *(void *)v2350;
          *((void *)v2349 + 1) = v2353;
          uint64_t v2354 = *((void *)v2350 + 3);
          *((void *)v2349 + 2) = *((void *)v2350 + 2);
          *((void *)v2349 + 3) = v2354;
          uint64_t v2355 = *((void *)v2350 + 5);
          *((void *)v2349 + 4) = *((void *)v2350 + 4);
          *((void *)v2349 + 5) = v2355;
          uint64_t v2356 = *((void *)v2350 + 7);
          *((void *)v2349 + 6) = *((void *)v2350 + 6);
          *((void *)v2349 + 7) = v2356;
          uint64_t v2357 = *((void *)v2350 + 9);
          *((void *)v2349 + 8) = *((void *)v2350 + 8);
          *((void *)v2349 + 9) = v2357;
          uint64_t v2358 = *((void *)v2350 + 11);
          *((void *)v2349 + 10) = *((void *)v2350 + 10);
          *((void *)v2349 + 11) = v2358;
          uint64_t v2359 = v2351[11];
          uint64_t v2630 = &v2349[v2359];
          uint64_t v2602 = &v2350[v2359];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2602, 1, v2647))
          {
            uint64_t v2360 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2630, v2602, *(void *)(*(void *)(v2360 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2630, v2602, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2630, 0, 1, v2647);
          }
          uint64_t v2361 = v2351[12];
          uint64_t v2362 = &v2349[v2361];
          v2363 = &v2350[v2361];
          uint64_t v2364 = *((void *)v2363 + 1);
          *(void *)uint64_t v2362 = *(void *)v2363;
          *((void *)v2362 + 1) = v2364;
          *(void *)&v2349[v2351[13]] = *(void *)&v2350[v2351[13]];
          uint64_t v2365 = v2351[14];
          uint64_t v2366 = &v2349[v2365];
          v2367 = &v2350[v2365];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2367, 1, v2647))
          {
            uint64_t v2368 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2366, v2367, *(void *)(*(void *)(v2368 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2366, v2367, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2366, 0, 1, v2647);
          }
          *(void *)&v2349[v2351[15]] = *(void *)&v2350[v2351[15]];
          *(void *)&v2349[v2351[16]] = *(void *)&v2350[v2351[16]];
          uint64_t v2369 = v2351[17];
          uint64_t v2370 = &v2349[v2369];
          uint64_t v2371 = &v2350[v2369];
          uint64_t v2372 = *((void *)v2371 + 1);
          *(void *)uint64_t v2370 = *(void *)v2371;
          *((void *)v2370 + 1) = v2372;
          *(void *)&v2349[v2351[18]] = *(void *)&v2350[v2351[18]];
          *(void *)&v2349[v2351[19]] = *(void *)&v2350[v2351[19]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2349, 0, 1, (uint64_t)v2351);
        }
        uint64_t v2373 = v2651[22];
        uint64_t v2374 = &v9[v2373];
        uint64_t v2375 = &v10[v2373];
        uint64_t v2376 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2375, 1, (uint64_t)v2376))
        {
          uint64_t v2377 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2374, v2375, *(void *)(*(void *)(v2377 - 8) + 64));
        }
        else
        {
          uint64_t v2378 = *((void *)v2375 + 1);
          *(void *)uint64_t v2374 = *(void *)v2375;
          *((void *)v2374 + 1) = v2378;
          uint64_t v2379 = *((void *)v2375 + 3);
          *((void *)v2374 + 2) = *((void *)v2375 + 2);
          *((void *)v2374 + 3) = v2379;
          uint64_t v2380 = *((void *)v2375 + 5);
          *((void *)v2374 + 4) = *((void *)v2375 + 4);
          *((void *)v2374 + 5) = v2380;
          uint64_t v2381 = *((void *)v2375 + 7);
          *((void *)v2374 + 6) = *((void *)v2375 + 6);
          *((void *)v2374 + 7) = v2381;
          uint64_t v2382 = v2376[8];
          v2383 = &v2374[v2382];
          v2384 = &v2375[v2382];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2384, 1, v2637))
          {
            uint64_t v2385 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2383, v2384, *(void *)(*(void *)(v2385 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2637 - 8) + 16))(v2383, v2384, v2637);
            __swift_storeEnumTagSinglePayload((uint64_t)v2383, 0, 1, v2637);
          }
          uint64_t v2386 = v2376[9];
          uint64_t v2387 = &v2374[v2386];
          v2388 = &v2375[v2386];
          uint64_t v2389 = *((void *)v2388 + 1);
          *(void *)uint64_t v2387 = *(void *)v2388;
          *((void *)v2387 + 1) = v2389;
          uint64_t v2390 = v2376[10];
          v2391 = &v2374[v2390];
          v2392 = &v2375[v2390];
          uint64_t v2393 = *((void *)v2392 + 1);
          *(void *)v2391 = *(void *)v2392;
          *((void *)v2391 + 1) = v2393;
          uint64_t v2394 = v2376[11];
          v2395 = &v2374[v2394];
          v2396 = &v2375[v2394];
          uint64_t v2397 = *((void *)v2396 + 1);
          *(void *)v2395 = *(void *)v2396;
          *((void *)v2395 + 1) = v2397;
          uint64_t v2398 = v2376[12];
          v2399 = &v2374[v2398];
          v2400 = &v2375[v2398];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2400, 1, v2647))
          {
            uint64_t v2401 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2399, v2400, *(void *)(*(void *)(v2401 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2399, v2400, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2399, 0, 1, v2647);
          }
          uint64_t v2402 = v2376[13];
          v2403 = &v2374[v2402];
          v2404 = &v2375[v2402];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2375[v2402], 1, v2647))
          {
            uint64_t v2405 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2403, v2404, *(void *)(*(void *)(v2405 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2647 - 8) + 16))(v2403, v2404, v2647);
            __swift_storeEnumTagSinglePayload((uint64_t)v2403, 0, 1, v2647);
          }
          uint64_t v2406 = v2376[14];
          v2407 = &v2374[v2406];
          v2408 = &v2375[v2406];
          *(void *)v2407 = *(void *)v2408;
          v2407[8] = v2408[8];
          uint64_t v2409 = v2376[15];
          v2410 = &v2374[v2409];
          v2411 = &v2375[v2409];
          uint64_t v2412 = *((void *)v2411 + 1);
          *(void *)v2410 = *(void *)v2411;
          *((void *)v2410 + 1) = v2412;
          uint64_t v2413 = v2376[16];
          v2414 = &v2374[v2413];
          v2415 = &v2375[v2413];
          uint64_t v2416 = *((void *)v2415 + 1);
          *(void *)v2414 = *(void *)v2415;
          *((void *)v2414 + 1) = v2416;
          uint64_t v2417 = v2376[17];
          v2418 = &v2374[v2417];
          v2419 = &v2375[v2417];
          uint64_t v2420 = *((void *)v2419 + 1);
          *(void *)v2418 = *(void *)v2419;
          *((void *)v2418 + 1) = v2420;
          uint64_t v2421 = v2376[18];
          v2422 = &v2374[v2421];
          v2423 = &v2375[v2421];
          uint64_t v2424 = *((void *)v2423 + 1);
          *(void *)v2422 = *(void *)v2423;
          *((void *)v2422 + 1) = v2424;
          uint64_t v2425 = v2376[19];
          v2426 = &v2374[v2425];
          v2427 = &v2375[v2425];
          uint64_t v2428 = *((void *)v2427 + 1);
          *(void *)v2426 = *(void *)v2427;
          *((void *)v2426 + 1) = v2428;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2374, 0, 1, (uint64_t)v2376);
        }
        uint64_t v1346 = v2651[23];
        goto LABEL_537;
      case 2u:
        uint64_t v46 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v46;
        uint64_t v47 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v47;
        uint64_t v48 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v48;
        uint64_t v49 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v50 = v49[7];
        uint64_t v51 = &v9[v50];
        uint64_t v52 = &v10[v50];
        uint64_t v53 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v353 = v49[8];
        uint64_t v354 = &v9[v353];
        uint64_t v355 = &v10[v353];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v353], 1, v53))
        {
          uint64_t v356 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v354, v355, *(void *)(*(void *)(v356 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v354, v355, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v354, 0, 1, v53);
        }
        uint64_t v512 = v49[9];
        v513 = &v9[v512];
        uint64_t v514 = &v10[v512];
        uint64_t v515 = *((void *)v514 + 1);
        *(void *)v513 = *(void *)v514;
        *((void *)v513 + 1) = v515;
        *(void *)&v9[v49[10]] = *(void *)&v10[v49[10]];
        *(void *)&v9[v49[11]] = *(void *)&v10[v49[11]];
        uint64_t v516 = v49[12];
        v517 = &v9[v516];
        uint64_t v518 = &v10[v516];
        uint64_t v519 = *((void *)v518 + 1);
        *(void *)v517 = *(void *)v518;
        *((void *)v517 + 1) = v519;
        uint64_t v520 = v49[13];
        v521 = &v9[v520];
        uint64_t v522 = &v10[v520];
        uint64_t v523 = *(void *)&v10[v520];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v523)
        {
          uint64_t v524 = *((void *)v522 + 1);
          uint64_t v525 = *((void *)v522 + 2);
          *(void *)v521 = v523;
          *((void *)v521 + 1) = v524;
          uint64_t v526 = *((void *)v522 + 3);
          uint64_t v527 = *((void *)v522 + 4);
          *((void *)v521 + 2) = v525;
          *((void *)v521 + 3) = v526;
          *((void *)v521 + 4) = v527;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_165:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v681 = *((_OWORD *)v522 + 1);
          *(_OWORD *)v521 = *(_OWORD *)v522;
          *((_OWORD *)v521 + 1) = v681;
          *((void *)v521 + 4) = *((void *)v522 + 4);
        }
        goto LABEL_542;
      case 3u:
        uint64_t v2661 = v5;
        uint64_t v55 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v55;
        uint64_t v56 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v56;
        uint64_t v57 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v57;
        uint64_t v58 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v58;
        uint64_t v59 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v59;
        *((void *)v9 + 10) = *((void *)v10 + 10);
        uint64_t v2652 = (int *)type metadata accessor for Photo(0);
        uint64_t v60 = v2652[11];
        uint64_t v2619 = &v9[v60];
        uint64_t v61 = &v10[v60];
        uint64_t v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2644 = v62;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2619, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v2619, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v2619, 0, 1, v62);
        }
        *(void *)&v9[v2652[12]] = *(void *)&v10[v2652[12]];
        *(void *)&v9[v2652[13]] = *(void *)&v10[v2652[13]];
        *(void *)&v9[v2652[14]] = *(void *)&v10[v2652[14]];
        *(void *)&v9[v2652[15]] = *(void *)&v10[v2652[15]];
        uint64_t v357 = v2652[16];
        uint64_t v358 = &v9[v357];
        uint64_t v359 = &v10[v357];
        uint64_t v360 = *((void *)v359 + 1);
        *(void *)uint64_t v358 = *(void *)v359;
        *((void *)v358 + 1) = v360;
        uint64_t v361 = v2652[17];
        uint64_t v362 = &v9[v361];
        uint64_t v363 = &v10[v361];
        uint64_t v364 = type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        uint64_t v365 = (int *)v364;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v363, 1, v364))
        {
          uint64_t v366 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v362, v363, *(void *)(*(void *)(v366 - 8) + 64));
        }
        else
        {
          uint64_t v528 = *((void *)v363 + 1);
          *(void *)uint64_t v362 = *(void *)v363;
          *((void *)v362 + 1) = v528;
          uint64_t v529 = *(int *)(v364 + 20);
          v530 = &v362[v529];
          v531 = &v363[v529];
          uint64_t v532 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2623 = v365;
          uint64_t v2634 = v362;
          v2607 = v363;
          if (__swift_getEnumTagSinglePayload((uint64_t)v531, 1, v532))
          {
            uint64_t v533 = (uint64_t)v362;
            uint64_t v534 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v530, v531, *(void *)(*(void *)(v534 - 8) + 64));
          }
          else
          {
            uint64_t v750 = *((void *)v531 + 1);
            *(void *)v530 = *(void *)v531;
            *((void *)v530 + 1) = v750;
            uint64_t v751 = *((void *)v531 + 3);
            *((void *)v530 + 2) = *((void *)v531 + 2);
            *((void *)v530 + 3) = v751;
            uint64_t v752 = *((void *)v531 + 5);
            *((void *)v530 + 4) = *((void *)v531 + 4);
            *((void *)v530 + 5) = v752;
            uint64_t v753 = *((void *)v531 + 7);
            *((void *)v530 + 6) = *((void *)v531 + 6);
            *((void *)v530 + 7) = v753;
            uint64_t v754 = *((void *)v531 + 9);
            *((void *)v530 + 8) = *((void *)v531 + 8);
            *((void *)v530 + 9) = v754;
            uint64_t v755 = *((void *)v531 + 11);
            *((void *)v530 + 10) = *((void *)v531 + 10);
            *((void *)v530 + 11) = v755;
            uint64_t v756 = *((void *)v531 + 13);
            *((void *)v530 + 12) = *((void *)v531 + 12);
            *((void *)v530 + 13) = v756;
            uint64_t v757 = *((void *)v531 + 15);
            *((void *)v530 + 14) = *((void *)v531 + 14);
            *((void *)v530 + 15) = v757;
            v530[128] = v531[128];
            *(_WORD *)(v530 + 129) = *(_WORD *)(v531 + 129);
            uint64_t v758 = *((void *)v531 + 18);
            *((void *)v530 + 17) = *((void *)v531 + 17);
            *((void *)v530 + 18) = v758;
            uint64_t v759 = *((void *)v531 + 20);
            *((void *)v530 + 19) = *((void *)v531 + 19);
            *((void *)v530 + 20) = v759;
            uint64_t v760 = *((void *)v531 + 22);
            *((void *)v530 + 21) = *((void *)v531 + 21);
            *((void *)v530 + 22) = v760;
            uint64_t v761 = *((void *)v531 + 24);
            *((void *)v530 + 23) = *((void *)v531 + 23);
            *((void *)v530 + 24) = v761;
            uint64_t v762 = *((void *)v531 + 26);
            *((void *)v530 + 25) = *((void *)v531 + 25);
            *((void *)v530 + 26) = v762;
            uint64_t v763 = *((void *)v531 + 28);
            *((void *)v530 + 27) = *((void *)v531 + 27);
            *((void *)v530 + 28) = v763;
            uint64_t v764 = *((void *)v531 + 30);
            *((void *)v530 + 29) = *((void *)v531 + 29);
            *((void *)v530 + 30) = v764;
            uint64_t v2570 = *((void *)v531 + 32);
            *((void *)v530 + 31) = *((void *)v531 + 31);
            *((void *)v530 + 32) = v2570;
            uint64_t v765 = *((void *)v531 + 34);
            *((void *)v530 + 33) = *((void *)v531 + 33);
            *((void *)v530 + 34) = v765;
            uint64_t v766 = *((void *)v531 + 36);
            *((void *)v530 + 35) = *((void *)v531 + 35);
            *((void *)v530 + 36) = v766;
            uint64_t v767 = *((void *)v531 + 38);
            *((void *)v530 + 37) = *((void *)v531 + 37);
            *((void *)v530 + 38) = v767;
            uint64_t v768 = *((void *)v531 + 40);
            *((void *)v530 + 39) = *((void *)v531 + 39);
            *((void *)v530 + 40) = v768;
            uint64_t v769 = *((void *)v531 + 42);
            *((void *)v530 + 41) = *((void *)v531 + 41);
            *((void *)v530 + 42) = v769;
            uint64_t v770 = *((void *)v531 + 44);
            *((void *)v530 + 43) = *((void *)v531 + 43);
            *((void *)v530 + 44) = v770;
            uint64_t v771 = *((void *)v531 + 46);
            *((void *)v530 + 45) = *((void *)v531 + 45);
            *((void *)v530 + 46) = v771;
            uint64_t v772 = *((void *)v531 + 47);
            v530[384] = v531[384];
            *((void *)v530 + 47) = v772;
            uint64_t v773 = *((void *)v531 + 50);
            *((void *)v530 + 49) = *((void *)v531 + 49);
            *((void *)v530 + 50) = v773;
            uint64_t v774 = *((void *)v531 + 52);
            *((void *)v530 + 51) = *((void *)v531 + 51);
            *((void *)v530 + 52) = v774;
            uint64_t v775 = *(int *)(v532 + 140);
            uint64_t v2591 = &v530[v775];
            uint64_t v776 = &v531[v775];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v776, 1, v2644))
            {
              uint64_t v777 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2591, v776, *(void *)(*(void *)(v777 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2591, v776, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2591, 0, 1, v2644);
            }
            uint64_t v805 = *(int *)(v532 + 144);
            uint64_t v806 = &v530[v805];
            uint64_t v807 = &v531[v805];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v531[v805], 1, v2644))
            {
              uint64_t v808 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v806, v807, *(void *)(*(void *)(v808 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v806, v807, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v806, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v530, 0, 1, v532);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v362;
          }
          uint64_t v809 = v365[6];
          uint64_t v810 = (void *)(v533 + v809);
          uint64_t v811 = &v363[v809];
          uint64_t v812 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v811, 1, v812))
          {
            uint64_t v813 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v810, v811, *(void *)(*(void *)(v813 - 8) + 64));
          }
          else
          {
            uint64_t v814 = *((void *)v811 + 1);
            *uint64_t v810 = *(void *)v811;
            v810[1] = v814;
            uint64_t v815 = *((void *)v811 + 3);
            v810[2] = *((void *)v811 + 2);
            v810[3] = v815;
            uint64_t v816 = *((void *)v811 + 5);
            v810[4] = *((void *)v811 + 4);
            v810[5] = v816;
            uint64_t v817 = *((void *)v811 + 7);
            v810[6] = *((void *)v811 + 6);
            v810[7] = v817;
            uint64_t v818 = *((void *)v811 + 9);
            v810[8] = *((void *)v811 + 8);
            v810[9] = v818;
            uint64_t v819 = *((void *)v811 + 11);
            v810[10] = *((void *)v811 + 10);
            v810[11] = v819;
            uint64_t v820 = *((void *)v811 + 13);
            v810[12] = *((void *)v811 + 12);
            v810[13] = v820;
            uint64_t v821 = *((void *)v811 + 15);
            v810[14] = *((void *)v811 + 14);
            v810[15] = v821;
            *((unsigned char *)v810 + 128) = v811[128];
            *(_WORD *)((char *)v810 + 129) = *(_WORD *)(v811 + 129);
            uint64_t v822 = *((void *)v811 + 18);
            v810[17] = *((void *)v811 + 17);
            v810[18] = v822;
            uint64_t v823 = *((void *)v811 + 20);
            v810[19] = *((void *)v811 + 19);
            v810[20] = v823;
            uint64_t v824 = *((void *)v811 + 22);
            v810[21] = *((void *)v811 + 21);
            v810[22] = v824;
            uint64_t v825 = *((void *)v811 + 24);
            v810[23] = *((void *)v811 + 23);
            v810[24] = v825;
            uint64_t v2555 = *((void *)v811 + 26);
            v810[25] = *((void *)v811 + 25);
            v810[26] = v2555;
            uint64_t v826 = *((void *)v811 + 28);
            v810[27] = *((void *)v811 + 27);
            v810[28] = v826;
            uint64_t v827 = *((void *)v811 + 30);
            v810[29] = *((void *)v811 + 29);
            v810[30] = v827;
            uint64_t v828 = *((void *)v811 + 32);
            v810[31] = *((void *)v811 + 31);
            v810[32] = v828;
            uint64_t v829 = *((void *)v811 + 34);
            v810[33] = *((void *)v811 + 33);
            v810[34] = v829;
            uint64_t v830 = *((void *)v811 + 36);
            uint64_t v831 = *((void *)v811 + 35);
            *((unsigned char *)v810 + 296) = v811[296];
            v810[35] = v831;
            v810[36] = v830;
            uint64_t v832 = *(int *)(v812 + 112);
            v2572 = (char *)v810 + v832;
            v833 = &v811[v832];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v833, 1, v2644))
            {
              uint64_t v834 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2572, v833, *(void *)(*(void *)(v834 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2572, v833, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2572, 0, 1, v2644);
            }
            uint64_t v835 = *(int *)(v812 + 116);
            uint64_t v836 = (char *)v810 + v835;
            uint64_t v837 = &v811[v835];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v811[v835], 1, v2644))
            {
              uint64_t v838 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v836, v837, *(void *)(*(void *)(v838 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v836, v837, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v836, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v810, 0, 1, v812);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
          }
          uint64_t v839 = v365[7];
          uint64_t v840 = (void *)(v533 + v839);
          uint64_t v841 = &v363[v839];
          uint64_t v842 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v841, 1, (uint64_t)v842))
          {
            uint64_t v843 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v840, v841, *(void *)(*(void *)(v843 - 8) + 64));
          }
          else
          {
            uint64_t v844 = *((void *)v841 + 1);
            *uint64_t v840 = *(void *)v841;
            v840[1] = v844;
            uint64_t v845 = *((void *)v841 + 3);
            v840[2] = *((void *)v841 + 2);
            v840[3] = v845;
            uint64_t v846 = *((void *)v841 + 5);
            v840[4] = *((void *)v841 + 4);
            v840[5] = v846;
            uint64_t v847 = *((void *)v841 + 7);
            v840[6] = *((void *)v841 + 6);
            v840[7] = v847;
            uint64_t v848 = *((void *)v841 + 9);
            v840[8] = *((void *)v841 + 8);
            v840[9] = v848;
            uint64_t v849 = *((void *)v841 + 11);
            v840[10] = *((void *)v841 + 10);
            v840[11] = v849;
            uint64_t v850 = *((void *)v841 + 13);
            v840[12] = *((void *)v841 + 12);
            v840[13] = v850;
            uint64_t v851 = *((void *)v841 + 15);
            v840[14] = *((void *)v841 + 14);
            v840[15] = v851;
            *((unsigned char *)v840 + 128) = v841[128];
            *(_WORD *)((char *)v840 + 129) = *(_WORD *)(v841 + 129);
            uint64_t v852 = *((void *)v841 + 18);
            v840[17] = *((void *)v841 + 17);
            v840[18] = v852;
            uint64_t v853 = *((void *)v841 + 20);
            v840[19] = *((void *)v841 + 19);
            v840[20] = v853;
            uint64_t v854 = *((void *)v841 + 22);
            v840[21] = *((void *)v841 + 21);
            v840[22] = v854;
            __dstc = (void *)*((void *)v841 + 24);
            v840[23] = *((void *)v841 + 23);
            v840[24] = __dstc;
            uint64_t v855 = *((void *)v841 + 26);
            v840[25] = *((void *)v841 + 25);
            v840[26] = v855;
            uint64_t v856 = *((void *)v841 + 28);
            v840[27] = *((void *)v841 + 27);
            v840[28] = v856;
            uint64_t v2573 = *((void *)v841 + 30);
            v840[29] = *((void *)v841 + 29);
            v840[30] = v2573;
            uint64_t v857 = *((void *)v841 + 32);
            v840[31] = *((void *)v841 + 31);
            v840[32] = v857;
            uint64_t v858 = *((void *)v841 + 34);
            v840[33] = *((void *)v841 + 33);
            v840[34] = v858;
            uint64_t v859 = *((void *)v841 + 36);
            uint64_t v860 = *((void *)v841 + 35);
            *((unsigned char *)v840 + 296) = v841[296];
            v840[35] = v860;
            v840[36] = v859;
            uint64_t v861 = *((void *)v841 + 39);
            v840[38] = *((void *)v841 + 38);
            v840[39] = v861;
            uint64_t v862 = v842[29];
            uint64_t v2592 = (char *)v840 + v862;
            uint64_t v863 = &v841[v862];
            uint64_t v864 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v863, 1, v864))
            {
              uint64_t v865 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2592, v863, *(void *)(*(void *)(v865 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v864 - 8) + 16))(v2592, v863, v864);
              __swift_storeEnumTagSinglePayload((uint64_t)v2592, 0, 1, v864);
            }
            uint64_t v866 = v842[30];
            uint64_t v867 = (void *)((char *)v840 + v866);
            uint64_t v868 = &v841[v866];
            uint64_t v869 = *((void *)v868 + 1);
            *uint64_t v867 = *(void *)v868;
            v867[1] = v869;
            uint64_t v870 = v842[31];
            uint64_t v871 = (char *)v840 + v870;
            uint64_t v872 = &v841[v870];
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v872, 1, v2644))
            {
              uint64_t v873 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v871, v872, *(void *)(*(void *)(v873 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v871, v872, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v871, 0, 1, v2644);
            }
            uint64_t v874 = v842[32];
            uint64_t v875 = (char *)v840 + v874;
            uint64_t v876 = &v841[v874];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v841[v874], 1, v2644))
            {
              uint64_t v877 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v875, v876, *(void *)(*(void *)(v877 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v875, v876, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v875, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v840, 0, 1, (uint64_t)v842);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
          }
          uint64_t v878 = v365[8];
          uint64_t v879 = (void *)(v533 + v878);
          uint64_t v880 = &v363[v878];
          uint64_t v881 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v880, 1, v881))
          {
            uint64_t v882 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v879, v880, *(void *)(*(void *)(v882 - 8) + 64));
          }
          else
          {
            uint64_t v883 = *((void *)v880 + 1);
            *uint64_t v879 = *(void *)v880;
            v879[1] = v883;
            uint64_t v884 = *((void *)v880 + 3);
            v879[2] = *((void *)v880 + 2);
            v879[3] = v884;
            uint64_t v885 = *((void *)v880 + 5);
            v879[4] = *((void *)v880 + 4);
            v879[5] = v885;
            uint64_t v886 = *((void *)v880 + 7);
            v879[6] = *((void *)v880 + 6);
            v879[7] = v886;
            uint64_t v887 = *((void *)v880 + 9);
            v879[8] = *((void *)v880 + 8);
            v879[9] = v887;
            uint64_t v888 = *((void *)v880 + 11);
            v879[10] = *((void *)v880 + 10);
            v879[11] = v888;
            uint64_t v889 = *((void *)v880 + 13);
            v879[12] = *((void *)v880 + 12);
            v879[13] = v889;
            uint64_t v890 = *((void *)v880 + 15);
            v879[14] = *((void *)v880 + 14);
            v879[15] = v890;
            *((unsigned char *)v879 + 128) = v880[128];
            *(_WORD *)((char *)v879 + 129) = *(_WORD *)(v880 + 129);
            uint64_t v891 = *((void *)v880 + 18);
            v879[17] = *((void *)v880 + 17);
            v879[18] = v891;
            uint64_t v892 = *((void *)v880 + 20);
            v879[19] = *((void *)v880 + 19);
            v879[20] = v892;
            uint64_t v893 = *((void *)v880 + 22);
            v879[21] = *((void *)v880 + 21);
            v879[22] = v893;
            uint64_t v894 = *((void *)v880 + 24);
            v879[23] = *((void *)v880 + 23);
            v879[24] = v894;
            uint64_t v895 = *((void *)v880 + 26);
            v879[25] = *((void *)v880 + 25);
            v879[26] = v895;
            uint64_t v896 = *((void *)v880 + 28);
            v879[27] = *((void *)v880 + 27);
            v879[28] = v896;
            uint64_t v897 = *((void *)v880 + 30);
            v879[29] = *((void *)v880 + 29);
            v879[30] = v897;
            uint64_t v898 = *((void *)v880 + 32);
            v879[31] = *((void *)v880 + 31);
            v879[32] = v898;
            uint64_t v899 = *((void *)v880 + 34);
            uint64_t v900 = *((void *)v880 + 33);
            *((unsigned char *)v879 + 280) = v880[280];
            v879[33] = v900;
            v879[34] = v899;
            uint64_t v901 = *((void *)v880 + 37);
            v879[36] = *((void *)v880 + 36);
            v879[37] = v901;
            uint64_t v902 = *(int *)(v881 + 108);
            uint64_t v2574 = (char *)v879 + v902;
            uint64_t v903 = &v880[v902];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v903, 1, v2644))
            {
              uint64_t v904 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2574, v903, *(void *)(*(void *)(v904 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2574, v903, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v2644);
            }
            uint64_t v905 = *(int *)(v881 + 112);
            uint64_t v906 = (char *)v879 + v905;
            uint64_t v907 = &v880[v905];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v880[v905], 1, v2644))
            {
              uint64_t v908 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v906, v907, *(void *)(*(void *)(v908 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v906, v907, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v906, 0, 1, v2644);
            }
            uint64_t v363 = v2607;
            __swift_storeEnumTagSinglePayload((uint64_t)v879, 0, 1, v881);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
          }
          uint64_t v909 = v365[9];
          uint64_t v910 = (void *)(v533 + v909);
          uint64_t v911 = &v363[v909];
          uint64_t v912 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v911, 1, (uint64_t)v912))
          {
            uint64_t v913 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v910, v911, *(void *)(*(void *)(v913 - 8) + 64));
          }
          else
          {
            uint64_t v914 = *((void *)v911 + 1);
            *uint64_t v910 = *(void *)v911;
            v910[1] = v914;
            uint64_t v915 = *((void *)v911 + 3);
            v910[2] = *((void *)v911 + 2);
            v910[3] = v915;
            uint64_t v916 = *((void *)v911 + 5);
            v910[4] = *((void *)v911 + 4);
            v910[5] = v916;
            uint64_t v917 = *((void *)v911 + 7);
            v910[6] = *((void *)v911 + 6);
            v910[7] = v917;
            uint64_t v918 = *((void *)v911 + 9);
            v910[8] = *((void *)v911 + 8);
            v910[9] = v918;
            uint64_t v919 = *((void *)v911 + 11);
            v910[10] = *((void *)v911 + 10);
            v910[11] = v919;
            uint64_t v920 = *((void *)v911 + 13);
            v910[12] = *((void *)v911 + 12);
            v910[13] = v920;
            uint64_t v921 = *((void *)v911 + 15);
            v910[14] = *((void *)v911 + 14);
            v910[15] = v921;
            *((unsigned char *)v910 + 128) = v911[128];
            *(_WORD *)((char *)v910 + 129) = *(_WORD *)(v911 + 129);
            uint64_t v922 = *((void *)v911 + 18);
            v910[17] = *((void *)v911 + 17);
            v910[18] = v922;
            uint64_t v923 = *((void *)v911 + 20);
            v910[19] = *((void *)v911 + 19);
            v910[20] = v923;
            uint64_t v924 = *((void *)v911 + 22);
            v910[21] = *((void *)v911 + 21);
            v910[22] = v924;
            uint64_t v925 = *((void *)v911 + 24);
            v910[23] = *((void *)v911 + 23);
            v910[24] = v925;
            uint64_t v926 = *((void *)v911 + 26);
            v910[25] = *((void *)v911 + 25);
            v910[26] = v926;
            uint64_t v927 = *((void *)v911 + 28);
            v910[27] = *((void *)v911 + 27);
            v910[28] = v927;
            uint64_t v928 = *((void *)v911 + 30);
            v910[29] = *((void *)v911 + 29);
            v910[30] = v928;
            v910[31] = *((void *)v911 + 31);
            uint64_t v929 = v912[24];
            uint64_t v2575 = (char *)v910 + v929;
            v2476 = &v911[v929];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2476, 1, v2644))
            {
              uint64_t v930 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2575, v2476, *(void *)(*(void *)(v930 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2575, v2476, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2575, 0, 1, v2644);
            }
            uint64_t v931 = v912[25];
            uint64_t v932 = (char *)v910 + v931;
            uint64_t v933 = &v911[v931];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v911[v931], 1, v2644))
            {
              uint64_t v934 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v932, v933, *(void *)(*(void *)(v934 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v932, v933, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v932, 0, 1, v2644);
            }
            uint64_t v935 = v912[26];
            uint64_t v936 = (char *)v910 + v935;
            uint64_t v937 = &v911[v935];
            uint64_t v938 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v937, 1, v938))
            {
              uint64_t v939 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v936, v937, *(void *)(*(void *)(v939 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v938 - 8) + 16))(v936, v937, v938);
              __swift_storeEnumTagSinglePayload((uint64_t)v936, 0, 1, v938);
            }
            uint64_t v363 = v2607;
            __swift_storeEnumTagSinglePayload((uint64_t)v910, 0, 1, (uint64_t)v912);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
          }
          uint64_t v940 = v365[10];
          uint64_t v941 = (void *)(v533 + v940);
          uint64_t v942 = &v363[v940];
          uint64_t v943 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v942, 1, (uint64_t)v943))
          {
            uint64_t v944 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v941, v942, *(void *)(*(void *)(v944 - 8) + 64));
          }
          else
          {
            uint64_t v945 = *((void *)v942 + 1);
            *uint64_t v941 = *(void *)v942;
            v941[1] = v945;
            uint64_t v946 = *((void *)v942 + 3);
            v941[2] = *((void *)v942 + 2);
            v941[3] = v946;
            uint64_t v947 = *((void *)v942 + 5);
            v941[4] = *((void *)v942 + 4);
            v941[5] = v947;
            uint64_t v948 = *((void *)v942 + 7);
            v941[6] = *((void *)v942 + 6);
            v941[7] = v948;
            uint64_t v949 = *((void *)v942 + 9);
            v941[8] = *((void *)v942 + 8);
            v941[9] = v949;
            uint64_t v950 = *((void *)v942 + 11);
            v941[10] = *((void *)v942 + 10);
            v941[11] = v950;
            uint64_t v951 = *((void *)v942 + 13);
            v941[12] = *((void *)v942 + 12);
            v941[13] = v951;
            uint64_t v952 = *((void *)v942 + 15);
            v941[14] = *((void *)v942 + 14);
            v941[15] = v952;
            *((unsigned char *)v941 + 128) = v942[128];
            *(_WORD *)((char *)v941 + 129) = *(_WORD *)(v942 + 129);
            uint64_t v953 = *((void *)v942 + 18);
            v941[17] = *((void *)v942 + 17);
            v941[18] = v953;
            uint64_t v954 = *((void *)v942 + 20);
            v941[19] = *((void *)v942 + 19);
            v941[20] = v954;
            uint64_t v955 = *((void *)v942 + 22);
            v941[21] = *((void *)v942 + 21);
            v941[22] = v955;
            uint64_t v956 = *((void *)v942 + 24);
            v941[23] = *((void *)v942 + 23);
            v941[24] = v956;
            uint64_t v957 = *((void *)v942 + 26);
            v941[25] = *((void *)v942 + 25);
            v941[26] = v957;
            v941[27] = *((void *)v942 + 27);
            uint64_t v958 = v943[22];
            v2576 = (char *)v941 + v958;
            uint64_t v2490 = &v942[v958];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2490, 1, v2644))
            {
              uint64_t v959 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2576, v2490, *(void *)(*(void *)(v959 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2576, v2490, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2576, 0, 1, v2644);
            }
            uint64_t v960 = v943[23];
            uint64_t v961 = (char *)v941 + v960;
            v962 = &v942[v960];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v942[v960], 1, v2644))
            {
              uint64_t v963 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v961, v962, *(void *)(*(void *)(v963 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v961, v962, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v961, 0, 1, v2644);
            }
            uint64_t v964 = v943[24];
            uint64_t v965 = (char *)v941 + v964;
            v966 = &v942[v964];
            *(void *)uint64_t v965 = *(void *)v966;
            v965[8] = v966[8];
            uint64_t v967 = v943[25];
            uint64_t v968 = (char *)v941 + v967;
            v969 = &v942[v967];
            uint64_t v970 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v969, 1, v970))
            {
              uint64_t v971 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v968, v969, *(void *)(*(void *)(v971 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v970 - 8) + 16))(v968, v969, v970);
              __swift_storeEnumTagSinglePayload((uint64_t)v968, 0, 1, v970);
            }
            uint64_t v363 = v2607;
            __swift_storeEnumTagSinglePayload((uint64_t)v941, 0, 1, (uint64_t)v943);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
          }
          uint64_t v972 = v365[11];
          v973 = (void *)(v533 + v972);
          uint64_t v974 = &v363[v972];
          v975 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v974, 1, (uint64_t)v975))
          {
            uint64_t v976 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v973, v974, *(void *)(*(void *)(v976 - 8) + 64));
          }
          else
          {
            uint64_t v977 = *((void *)v974 + 1);
            void *v973 = *(void *)v974;
            v973[1] = v977;
            uint64_t v978 = *((void *)v974 + 3);
            v973[2] = *((void *)v974 + 2);
            v973[3] = v978;
            uint64_t v979 = *((void *)v974 + 5);
            v973[4] = *((void *)v974 + 4);
            v973[5] = v979;
            uint64_t v980 = *((void *)v974 + 7);
            v973[6] = *((void *)v974 + 6);
            v973[7] = v980;
            uint64_t v981 = *((void *)v974 + 9);
            v973[8] = *((void *)v974 + 8);
            v973[9] = v981;
            uint64_t v982 = *((void *)v974 + 11);
            v973[10] = *((void *)v974 + 10);
            v973[11] = v982;
            *((unsigned char *)v973 + 96) = v974[96];
            uint64_t v983 = *((void *)v974 + 14);
            v973[13] = *((void *)v974 + 13);
            v973[14] = v983;
            uint64_t v984 = v975[13];
            uint64_t v2593 = (char *)v973 + v984;
            uint64_t v2529 = &v974[v984];
            uint64_t v985 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2529, 1, v985))
            {
              uint64_t v986 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2593, v2529, *(void *)(*(void *)(v986 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v985 - 8) + 16))(v2593, v2529, v985);
              __swift_storeEnumTagSinglePayload((uint64_t)v2593, 0, 1, v985);
            }
            uint64_t v987 = v975[14];
            v988 = (char *)v973 + v987;
            uint64_t v989 = &v974[v987];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v974[v987], 1, v985))
            {
              uint64_t v990 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v988, v989, *(void *)(*(void *)(v990 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v985 - 8) + 16))(v988, v989, v985);
              __swift_storeEnumTagSinglePayload((uint64_t)v988, 0, 1, v985);
            }
            uint64_t v991 = v975[15];
            uint64_t v992 = (void *)((char *)v973 + v991);
            v993 = &v974[v991];
            uint64_t v2594 = *((void *)v993 + 1);
            *uint64_t v992 = *(void *)v993;
            v992[1] = v2594;
            uint64_t v994 = v975[16];
            uint64_t v995 = (void *)((char *)v973 + v994);
            v996 = &v974[v994];
            uint64_t v997 = *((void *)v996 + 1);
            *uint64_t v995 = *(void *)v996;
            v995[1] = v997;
            uint64_t v998 = v975[17];
            v999 = (void *)((char *)v973 + v998);
            v1000 = &v974[v998];
            uint64_t v1001 = *((void *)v1000 + 1);
            void *v999 = *(void *)v1000;
            v999[1] = v1001;
            uint64_t v1002 = v975[18];
            uint64_t v2577 = (char *)v973 + v1002;
            uint64_t v2556 = &v974[v1002];
            uint64_t v1003 = type metadata accessor for DateComponents();
            v1004 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1003 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1004(v2577, v2556, v1003);
            v1004((char *)v973 + v975[19], &v974[v975[19]], v1003);
            uint64_t v1005 = v975[20];
            uint64_t v1006 = (void *)((char *)v973 + v1005);
            v1007 = &v974[v1005];
            uint64_t v1008 = *((void *)v1007 + 1);
            *uint64_t v1006 = *(void *)v1007;
            v1006[1] = v1008;
            uint64_t v1009 = v975[21];
            uint64_t v1010 = (void *)((char *)v973 + v1009);
            v1011 = &v974[v1009];
            uint64_t v2595 = *((void *)v1011 + 1);
            *uint64_t v1010 = *(void *)v1011;
            v1010[1] = v2595;
            uint64_t v1012 = v975[22];
            uint64_t v1013 = (void *)((char *)v973 + v1012);
            uint64_t v1014 = &v974[v1012];
            uint64_t v2557 = *((void *)v1014 + 1);
            *uint64_t v1013 = *(void *)v1014;
            v1013[1] = v2557;
            uint64_t v1015 = v975[23];
            uint64_t v1016 = (void *)((char *)v973 + v1015);
            uint64_t v1017 = &v974[v1015];
            uint64_t v2545 = *((void *)v1017 + 1);
            *uint64_t v1016 = *(void *)v1017;
            v1016[1] = v2545;
            uint64_t v1018 = v975[24];
            v1019 = (void *)((char *)v973 + v1018);
            uint64_t v1020 = &v974[v1018];
            v2537 = (void *)*((void *)v1020 + 1);
            void *v1019 = *(void *)v1020;
            v1019[1] = v2537;
            uint64_t v1021 = v975[25];
            v1022 = (void *)((char *)v973 + v1021);
            v1023 = &v974[v1021];
            uint64_t v2530 = (void *)*((void *)v1023 + 1);
            void *v1022 = *(void *)v1023;
            v1022[1] = v2530;
            uint64_t v1024 = v975[26];
            uint64_t v1025 = (void *)((char *)v973 + v1024);
            v1026 = &v974[v1024];
            v2519 = (void *)*((void *)v1026 + 1);
            *uint64_t v1025 = *(void *)v1026;
            v1025[1] = v2519;
            uint64_t v1027 = v975[27];
            uint64_t v1028 = (void *)((char *)v973 + v1027);
            v1029 = &v974[v1027];
            uint64_t v2510 = (void *)*((void *)v1029 + 1);
            *uint64_t v1028 = *(void *)v1029;
            v1028[1] = v2510;
            uint64_t v1030 = v975[28];
            uint64_t v1031 = (void *)((char *)v973 + v1030);
            uint64_t v1032 = &v974[v1030];
            v2504 = (void *)*((void *)v1032 + 1);
            *uint64_t v1031 = *(void *)v1032;
            v1031[1] = v2504;
            uint64_t v1033 = v975[29];
            v1034 = (void *)((char *)v973 + v1033);
            uint64_t v1035 = &v974[v1033];
            uint64_t v2498 = (void *)*((void *)v1035 + 1);
            void *v1034 = *(void *)v1035;
            v1034[1] = v2498;
            uint64_t v1036 = v975[30];
            v1037 = (void *)((char *)v973 + v1036);
            uint64_t v1038 = &v974[v1036];
            v2491 = (void *)*((void *)v1038 + 1);
            void *v1037 = *(void *)v1038;
            v1037[1] = v2491;
            uint64_t v1039 = v975[31];
            v1040 = (void *)((char *)v973 + v1039);
            v1041 = &v974[v1039];
            uint64_t v2482 = (void *)*((void *)v1041 + 1);
            void *v1040 = *(void *)v1041;
            v1040[1] = v2482;
            uint64_t v1042 = v975[32];
            uint64_t v1043 = (void *)((char *)v973 + v1042);
            v1044 = &v974[v1042];
            uint64_t v1045 = *((void *)v1044 + 1);
            *uint64_t v1043 = *(void *)v1044;
            v1043[1] = v1045;
            *(void *)((char *)v973 + v975[33]) = *(void *)&v974[v975[33]];
            *(void *)((char *)v973 + v975[34]) = *(void *)&v974[v975[34]];
            uint64_t v1046 = v975[35];
            uint64_t v1047 = (void *)((char *)v973 + v1046);
            v1048 = &v974[v1046];
            uint64_t v1049 = *((void *)v1048 + 1);
            *uint64_t v1047 = *(void *)v1048;
            v1047[1] = v1049;
            uint64_t v1050 = v975[36];
            uint64_t v1051 = (void *)((char *)v973 + v1050);
            v1052 = &v974[v1050];
            uint64_t v1053 = *((void *)v1052 + 1);
            *uint64_t v1051 = *(void *)v1052;
            v1051[1] = v1053;
            uint64_t v1054 = v975[37];
            uint64_t v1055 = (void *)((char *)v973 + v1054);
            uint64_t v1056 = &v974[v1054];
            uint64_t v1057 = *((void *)v1056 + 1);
            *uint64_t v1055 = *(void *)v1056;
            v1055[1] = v1057;
            uint64_t v1058 = v975[38];
            uint64_t v2578 = (char *)v973 + v1058;
            uint64_t v2472 = &v974[v1058];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2472, 1, v2644))
            {
              uint64_t v1059 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2578, v2472, *(void *)(*(void *)(v1059 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2578, v2472, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2578, 0, 1, v2644);
            }
            uint64_t v1060 = v975[39];
            uint64_t v1061 = (void *)((char *)v973 + v1060);
            uint64_t v1062 = &v974[v1060];
            uint64_t v1063 = *((void *)v1062 + 1);
            *uint64_t v1061 = *(void *)v1062;
            v1061[1] = v1063;
            uint64_t v1064 = v975[40];
            uint64_t v1065 = (void *)((char *)v973 + v1064);
            uint64_t v1066 = &v974[v1064];
            uint64_t v1067 = *((void *)v1066 + 1);
            *uint64_t v1065 = *(void *)v1066;
            v1065[1] = v1067;
            uint64_t v1068 = v975[41];
            v1069 = (char *)v973 + v1068;
            uint64_t v1070 = &v974[v1068];
            v1069[8] = v1070[8];
            *(void *)v1069 = *(void *)v1070;
            uint64_t v1071 = v975[42];
            v1072 = (void *)((char *)v973 + v1071);
            v1073 = &v974[v1071];
            uint64_t v1074 = *((void *)v1073 + 1);
            void *v1072 = *(void *)v1073;
            v1072[1] = v1074;
            uint64_t v1075 = v975[43];
            v1076 = (char *)v973 + v1075;
            v1077 = &v974[v1075];
            *(_OWORD *)v1076 = *(_OWORD *)v1077;
            *(void *)(v1076 + 13) = *(void *)(v1077 + 13);
            uint64_t v1078 = v975[44];
            uint64_t v1079 = (void *)((char *)v973 + v1078);
            v1080 = &v974[v1078];
            uint64_t v1081 = *((void *)v1080 + 1);
            *uint64_t v1079 = *(void *)v1080;
            v1079[1] = v1081;
            uint64_t v1082 = v975[45];
            v1083 = (void *)((char *)v973 + v1082);
            v1084 = &v974[v1082];
            uint64_t v1085 = *((void *)v1084 + 1);
            void *v1083 = *(void *)v1084;
            v1083[1] = v1085;
            uint64_t v1086 = v975[46];
            v1087 = (void *)((char *)v973 + v1086);
            uint64_t v1088 = &v974[v1086];
            uint64_t v1089 = *((void *)v1088 + 1);
            void *v1087 = *(void *)v1088;
            v1087[1] = v1089;
            uint64_t v1090 = v975[47];
            uint64_t v1091 = (void *)((char *)v973 + v1090);
            v1092 = &v974[v1090];
            uint64_t v1093 = *((void *)v1092 + 1);
            *uint64_t v1091 = *(void *)v1092;
            v1091[1] = v1093;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v973, 0, 1, (uint64_t)v975);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
            uint64_t v363 = v2607;
          }
          uint64_t v1094 = v365[12];
          v1095 = (void *)(v533 + v1094);
          v1096 = &v363[v1094];
          uint64_t v1097 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1096, 1, (uint64_t)v1097))
          {
            uint64_t v1098 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1095, v1096, *(void *)(*(void *)(v1098 - 8) + 64));
          }
          else
          {
            uint64_t v1099 = *((void *)v1096 + 1);
            void *v1095 = *(void *)v1096;
            v1095[1] = v1099;
            uint64_t v1100 = *((void *)v1096 + 3);
            v1095[2] = *((void *)v1096 + 2);
            v1095[3] = v1100;
            uint64_t v1101 = *((void *)v1096 + 5);
            v1095[4] = *((void *)v1096 + 4);
            v1095[5] = v1101;
            uint64_t v1102 = *((void *)v1096 + 7);
            v1095[6] = *((void *)v1096 + 6);
            v1095[7] = v1102;
            uint64_t v1103 = *((void *)v1096 + 9);
            v1095[8] = *((void *)v1096 + 8);
            v1095[9] = v1103;
            uint64_t v1104 = *((void *)v1096 + 11);
            v1095[10] = *((void *)v1096 + 10);
            v1095[11] = v1104;
            *((unsigned char *)v1095 + 96) = v1096[96];
            uint64_t v1105 = *((void *)v1096 + 14);
            v1095[13] = *((void *)v1096 + 13);
            v1095[14] = v1105;
            uint64_t v1106 = *((void *)v1096 + 16);
            v1095[15] = *((void *)v1096 + 15);
            v1095[16] = v1106;
            uint64_t v1107 = v1097[14];
            uint64_t v2596 = (char *)v1095 + v1107;
            v1108 = &v1096[v1107];
            uint64_t v2520 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1108, 1, (uint64_t)v2520))
            {
              uint64_t v1109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2596, v1108, *(void *)(*(void *)(v1109 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2520 - 1) + 16))(v2596, v1108, v2520);
              __swift_storeEnumTagSinglePayload((uint64_t)v2596, 0, 1, (uint64_t)v2520);
            }
            uint64_t v1110 = v1097[15];
            v1111 = (char *)v1095 + v1110;
            v1112 = &v1096[v1110];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1096[v1110], 1, (uint64_t)v2520))
            {
              uint64_t v1113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1111, v1112, *(void *)(*(void *)(v1113 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2520 - 1) + 16))(v1111, v1112, v2520);
              __swift_storeEnumTagSinglePayload((uint64_t)v1111, 0, 1, (uint64_t)v2520);
            }
            uint64_t v1114 = v1097[16];
            v1115 = (void *)((char *)v1095 + v1114);
            v1116 = &v1096[v1114];
            uint64_t v1117 = *((void *)v1116 + 1);
            void *v1115 = *(void *)v1116;
            v1115[1] = v1117;
            uint64_t v1118 = v1097[17];
            uint64_t v1119 = (void *)((char *)v1095 + v1118);
            uint64_t v1120 = &v1096[v1118];
            uint64_t v2597 = *((void *)v1120 + 1);
            *uint64_t v1119 = *(void *)v1120;
            v1119[1] = v2597;
            uint64_t v1121 = v1097[18];
            uint64_t v1122 = (void *)((char *)v1095 + v1121);
            uint64_t v1123 = &v1096[v1121];
            uint64_t v2579 = *((void *)v1123 + 1);
            *uint64_t v1122 = *(void *)v1123;
            v1122[1] = v2579;
            uint64_t v1124 = v1097[19];
            v1125 = (void *)((char *)v1095 + v1124);
            uint64_t v1126 = &v1096[v1124];
            uint64_t v2558 = *((void *)v1126 + 1);
            void *v1125 = *(void *)v1126;
            v1125[1] = v2558;
            uint64_t v1127 = v1097[20];
            v1128 = (void *)((char *)v1095 + v1127);
            v1129 = &v1096[v1127];
            uint64_t v1130 = *((void *)v1129 + 1);
            void *v1128 = *(void *)v1129;
            v1128[1] = v1130;
            *(void *)((char *)v1095 + v1097[21]) = *(void *)&v1096[v1097[21]];
            *(void *)((char *)v1095 + v1097[22]) = *(void *)&v1096[v1097[22]];
            uint64_t v1131 = v1097[23];
            v1132 = (char *)v1095 + v1131;
            v1133 = &v1096[v1131];
            *(void *)v1132 = *(void *)v1133;
            v1132[8] = v1133[8];
            uint64_t v1134 = v1097[24];
            uint64_t v1135 = (char *)v1095 + v1134;
            v1136 = &v1096[v1134];
            *(void *)uint64_t v1135 = *(void *)v1136;
            v1135[8] = v1136[8];
            uint64_t v1137 = v1097[25];
            uint64_t v1138 = (void *)((char *)v1095 + v1137);
            v1139 = &v1096[v1137];
            uint64_t v1140 = *((void *)v1139 + 1);
            *uint64_t v1138 = *(void *)v1139;
            v1138[1] = v1140;
            uint64_t v1141 = v1097[26];
            v1142 = (void *)((char *)v1095 + v1141);
            v1143 = &v1096[v1141];
            uint64_t v1144 = *((void *)v1143 + 1);
            void *v1142 = *(void *)v1143;
            v1142[1] = v1144;
            uint64_t v1145 = v1097[27];
            v1146 = (void *)((char *)v1095 + v1145);
            v1147 = &v1096[v1145];
            uint64_t v1148 = *((void *)v1147 + 1);
            void *v1146 = *(void *)v1147;
            v1146[1] = v1148;
            uint64_t v1149 = v1097[28];
            v1150 = (void *)((char *)v1095 + v1149);
            v1151 = &v1096[v1149];
            uint64_t v1152 = *((void *)v1151 + 1);
            void *v1150 = *(void *)v1151;
            v1150[1] = v1152;
            uint64_t v1153 = v1097[29];
            v1154 = (char *)v1095 + v1153;
            v1155 = &v1096[v1153];
            *(void *)v1154 = *(void *)v1155;
            v1154[8] = v1155[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1095, 0, 1, (uint64_t)v1097);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
            uint64_t v363 = v2607;
          }
          uint64_t v1156 = v365[13];
          uint64_t v1157 = (void *)(v533 + v1156);
          v1158 = &v363[v1156];
          v1159 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1158, 1, (uint64_t)v1159))
          {
            uint64_t v1160 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1157, v1158, *(void *)(*(void *)(v1160 - 8) + 64));
          }
          else
          {
            uint64_t v1161 = *((void *)v1158 + 1);
            *uint64_t v1157 = *(void *)v1158;
            v1157[1] = v1161;
            uint64_t v1162 = *((void *)v1158 + 3);
            v1157[2] = *((void *)v1158 + 2);
            v1157[3] = v1162;
            uint64_t v1163 = *((void *)v1158 + 5);
            v1157[4] = *((void *)v1158 + 4);
            v1157[5] = v1163;
            uint64_t v1164 = *((void *)v1158 + 7);
            v1157[6] = *((void *)v1158 + 6);
            v1157[7] = v1164;
            uint64_t v1165 = *((void *)v1158 + 9);
            v1157[8] = *((void *)v1158 + 8);
            v1157[9] = v1165;
            uint64_t v1166 = *((void *)v1158 + 11);
            v1157[10] = *((void *)v1158 + 10);
            v1157[11] = v1166;
            *((unsigned char *)v1157 + 96) = v1158[96];
            uint64_t v1167 = *((void *)v1158 + 14);
            v1157[13] = *((void *)v1158 + 13);
            v1157[14] = v1167;
            uint64_t v1168 = *((void *)v1158 + 16);
            v1157[15] = *((void *)v1158 + 15);
            v1157[16] = v1168;
            uint64_t v1169 = v1159[14];
            uint64_t v2610 = (char *)v1157 + v1169;
            v2531 = &v1158[v1169];
            uint64_t v1170 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2531, 1, v1170))
            {
              uint64_t v1171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2610, v2531, *(void *)(*(void *)(v1171 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1170 - 8) + 16))(v2610, v2531, v1170);
              __swift_storeEnumTagSinglePayload((uint64_t)v2610, 0, 1, v1170);
            }
            uint64_t v1172 = v1159[15];
            uint64_t v1173 = (void *)((char *)v1157 + v1172);
            uint64_t v1174 = &v1158[v1172];
            uint64_t v1175 = *((void *)v1174 + 1);
            *uint64_t v1173 = *(void *)v1174;
            v1173[1] = v1175;
            uint64_t v1176 = v1159[16];
            uint64_t v1177 = (void *)((char *)v1157 + v1176);
            uint64_t v1178 = &v1158[v1176];
            uint64_t v2611 = *((void *)v1178 + 1);
            *uint64_t v1177 = *(void *)v1178;
            v1177[1] = v2611;
            uint64_t v1179 = v1159[17];
            v1180 = (void *)((char *)v1157 + v1179);
            uint64_t v1181 = &v1158[v1179];
            uint64_t v2598 = *((void *)v1181 + 1);
            void *v1180 = *(void *)v1181;
            v1180[1] = v2598;
            uint64_t v1182 = v1159[18];
            v1183 = (void *)((char *)v1157 + v1182);
            v1184 = &v1158[v1182];
            uint64_t v1185 = *((void *)v1184 + 1);
            void *v1183 = *(void *)v1184;
            v1183[1] = v1185;
            uint64_t v1186 = v1159[19];
            v1187 = (void *)((char *)v1157 + v1186);
            v1188 = &v1158[v1186];
            uint64_t v1189 = *((void *)v1188 + 1);
            void *v1187 = *(void *)v1188;
            v1187[1] = v1189;
            *(void *)((char *)v1157 + v1159[20]) = *(void *)&v1158[v1159[20]];
            uint64_t v1190 = v1159[21];
            v1191 = (void *)((char *)v1157 + v1190);
            v1192 = &v1158[v1190];
            uint64_t v1193 = *((void *)v1192 + 1);
            void *v1191 = *(void *)v1192;
            v1191[1] = v1193;
            uint64_t v1194 = v1159[22];
            v1195 = (void *)((char *)v1157 + v1194);
            v1196 = &v1158[v1194];
            uint64_t v1197 = *((void *)v1196 + 1);
            void *v1195 = *(void *)v1196;
            v1195[1] = v1197;
            uint64_t v1198 = v1159[23];
            v1199 = (void *)((char *)v1157 + v1198);
            uint64_t v1200 = &v1158[v1198];
            uint64_t v1201 = *((void *)v1200 + 1);
            void *v1199 = *(void *)v1200;
            v1199[1] = v1201;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1157, 0, 1, (uint64_t)v1159);
            uint64_t v365 = v2623;
            uint64_t v533 = (uint64_t)v2634;
          }
          __swift_storeEnumTagSinglePayload(v533, 0, 1, (uint64_t)v365);
        }
        uint64_t v1202 = v2652[18];
        v1203 = &v9[v1202];
        uint64_t v1204 = &v10[v1202];
        uint64_t v1205 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1204, 1, (uint64_t)v1205))
        {
          uint64_t v1206 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1203, v1204, *(void *)(*(void *)(v1206 - 8) + 64));
        }
        else
        {
          uint64_t v1207 = *((void *)v1204 + 1);
          *(void *)v1203 = *(void *)v1204;
          *((void *)v1203 + 1) = v1207;
          uint64_t v1208 = *((void *)v1204 + 3);
          *((void *)v1203 + 2) = *((void *)v1204 + 2);
          *((void *)v1203 + 3) = v1208;
          uint64_t v1209 = *((void *)v1204 + 5);
          *((void *)v1203 + 4) = *((void *)v1204 + 4);
          *((void *)v1203 + 5) = v1209;
          uint64_t v1210 = *((void *)v1204 + 7);
          *((void *)v1203 + 6) = *((void *)v1204 + 6);
          *((void *)v1203 + 7) = v1210;
          uint64_t v1211 = *((void *)v1204 + 9);
          *((void *)v1203 + 8) = *((void *)v1204 + 8);
          *((void *)v1203 + 9) = v1211;
          uint64_t v1212 = *((void *)v1204 + 11);
          *((void *)v1203 + 10) = *((void *)v1204 + 10);
          *((void *)v1203 + 11) = v1212;
          uint64_t v1213 = v1205[10];
          v2626 = &v1204[v1213];
          uint64_t v2638 = &v1203[v1213];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2626, 1, v2644))
          {
            uint64_t v1214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2638, v2626, *(void *)(*(void *)(v1214 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2638, v2626, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2638, 0, 1, v2644);
          }
          uint64_t v1215 = v1205[11];
          uint64_t v1216 = &v1203[v1215];
          uint64_t v1217 = &v1204[v1215];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v1204[v1215], 1, v2644))
          {
            uint64_t v1218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1216, v1217, *(void *)(*(void *)(v1218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1216, v1217, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v1216, 0, 1, v2644);
          }
          uint64_t v1219 = v1205[12];
          uint64_t v1220 = &v1203[v1219];
          uint64_t v1221 = &v1204[v1219];
          uint64_t v1222 = *((void *)v1221 + 1);
          *(void *)uint64_t v1220 = *(void *)v1221;
          *((void *)v1220 + 1) = v1222;
          uint64_t v1223 = v1205[13];
          v1224 = &v1203[v1223];
          uint64_t v1225 = &v1204[v1223];
          uint64_t v1226 = *((void *)v1225 + 1);
          *(void *)v1224 = *(void *)v1225;
          *((void *)v1224 + 1) = v1226;
          uint64_t v1227 = v1205[14];
          uint64_t v1228 = &v1203[v1227];
          uint64_t v1229 = &v1204[v1227];
          uint64_t v1230 = *((void *)v1229 + 1);
          *(void *)uint64_t v1228 = *(void *)v1229;
          *((void *)v1228 + 1) = v1230;
          uint64_t v1231 = v1205[15];
          uint64_t v1232 = &v1203[v1231];
          uint64_t v1233 = &v1204[v1231];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1233, 1, v2644))
          {
            uint64_t v1234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1232, v1233, *(void *)(*(void *)(v1234 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1232, v1233, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v1232, 0, 1, v2644);
          }
          uint64_t v1235 = v1205[16];
          uint64_t v1236 = &v1203[v1235];
          uint64_t v1237 = &v1204[v1235];
          uint64_t v1238 = *((void *)v1237 + 1);
          *(void *)uint64_t v1236 = *(void *)v1237;
          *((void *)v1236 + 1) = v1238;
          uint64_t v1239 = v1205[17];
          uint64_t v1240 = &v1203[v1239];
          uint64_t v1241 = &v1204[v1239];
          uint64_t v2639 = *((void *)v1241 + 1);
          *(void *)uint64_t v1240 = *(void *)v1241;
          *((void *)v1240 + 1) = v2639;
          uint64_t v1242 = v1205[18];
          v1243 = &v1203[v1242];
          uint64_t v1244 = &v1204[v1242];
          uint64_t v1245 = *((void *)v1244 + 1);
          *(void *)v1243 = *(void *)v1244;
          *((void *)v1243 + 1) = v1245;
          uint64_t v1246 = v1205[19];
          v1247 = &v1203[v1246];
          v1248 = &v1204[v1246];
          uint64_t v1249 = *((void *)v1248 + 1);
          *(void *)v1247 = *(void *)v1248;
          *((void *)v1247 + 1) = v1249;
          uint64_t v1250 = v1205[20];
          uint64_t v1251 = &v1203[v1250];
          uint64_t v1252 = &v1204[v1250];
          uint64_t v1253 = *((void *)v1252 + 1);
          *(void *)uint64_t v1251 = *(void *)v1252;
          *((void *)v1251 + 1) = v1253;
          uint64_t v1254 = v1205[21];
          uint64_t v1255 = &v1203[v1254];
          uint64_t v1256 = &v1204[v1254];
          uint64_t v1257 = *((void *)v1256 + 1);
          *(void *)uint64_t v1255 = *(void *)v1256;
          *((void *)v1255 + 1) = v1257;
          uint64_t v1258 = v1205[22];
          v1259 = &v1203[v1258];
          uint64_t v1260 = &v1204[v1258];
          uint64_t v1261 = *((void *)v1260 + 1);
          *(void *)v1259 = *(void *)v1260;
          *((void *)v1259 + 1) = v1261;
          uint64_t v1262 = v1205[23];
          v1263 = &v1203[v1262];
          uint64_t v1264 = &v1204[v1262];
          uint64_t v1265 = *((void *)v1264 + 1);
          *(void *)v1263 = *(void *)v1264;
          *((void *)v1263 + 1) = v1265;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1203, 0, 1, (uint64_t)v1205);
        }
        uint64_t v1266 = v2652[19];
        v1267 = &v9[v1266];
        uint64_t v1268 = &v10[v1266];
        uint64_t v1269 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1268, 1, (uint64_t)v1269))
        {
          uint64_t v1270 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1267, v1268, *(void *)(*(void *)(v1270 - 8) + 64));
        }
        else
        {
          uint64_t v1271 = *((void *)v1268 + 1);
          *(void *)v1267 = *(void *)v1268;
          *((void *)v1267 + 1) = v1271;
          uint64_t v1272 = *((void *)v1268 + 3);
          *((void *)v1267 + 2) = *((void *)v1268 + 2);
          *((void *)v1267 + 3) = v1272;
          uint64_t v1273 = *((void *)v1268 + 5);
          *((void *)v1267 + 4) = *((void *)v1268 + 4);
          *((void *)v1267 + 5) = v1273;
          uint64_t v1274 = *((void *)v1268 + 7);
          *((void *)v1267 + 6) = *((void *)v1268 + 6);
          *((void *)v1267 + 7) = v1274;
          uint64_t v1275 = *((void *)v1268 + 9);
          *((void *)v1267 + 8) = *((void *)v1268 + 8);
          *((void *)v1267 + 9) = v1275;
          uint64_t v1276 = *((void *)v1268 + 11);
          *((void *)v1267 + 10) = *((void *)v1268 + 10);
          *((void *)v1267 + 11) = v1276;
          uint64_t v1277 = v1269[11];
          uint64_t v2640 = &v1267[v1277];
          uint64_t v2612 = &v1268[v1277];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2612, 1, v2644))
          {
            uint64_t v1278 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2640, v2612, *(void *)(*(void *)(v1278 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2640, v2612, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2640, 0, 1, v2644);
          }
          uint64_t v1279 = v1269[12];
          uint64_t v1280 = &v1267[v1279];
          v1281 = &v1268[v1279];
          uint64_t v1282 = *((void *)v1281 + 1);
          *(void *)uint64_t v1280 = *(void *)v1281;
          *((void *)v1280 + 1) = v1282;
          *(void *)&v1267[v1269[13]] = *(void *)&v1268[v1269[13]];
          uint64_t v1283 = v1269[14];
          uint64_t v1284 = &v1267[v1283];
          v1285 = &v1268[v1283];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1285, 1, v2644))
          {
            uint64_t v1286 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1284, v1285, *(void *)(*(void *)(v1286 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1284, v1285, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v1284, 0, 1, v2644);
          }
          *(void *)&v1267[v1269[15]] = *(void *)&v1268[v1269[15]];
          *(void *)&v1267[v1269[16]] = *(void *)&v1268[v1269[16]];
          uint64_t v1287 = v1269[17];
          uint64_t v1288 = &v1267[v1287];
          v1289 = &v1268[v1287];
          uint64_t v1290 = *((void *)v1289 + 1);
          *(void *)uint64_t v1288 = *(void *)v1289;
          *((void *)v1288 + 1) = v1290;
          *(void *)&v1267[v1269[18]] = *(void *)&v1268[v1269[18]];
          *(void *)&v1267[v1269[19]] = *(void *)&v1268[v1269[19]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1267, 0, 1, (uint64_t)v1269);
        }
        uint64_t v1291 = v2652[20];
        uint64_t v1292 = &v9[v1291];
        v1293 = &v10[v1291];
        v1294 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1293, 1, (uint64_t)v1294))
        {
          uint64_t v1295 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1292, v1293, *(void *)(*(void *)(v1295 - 8) + 64));
        }
        else
        {
          uint64_t v1296 = *((void *)v1293 + 1);
          *(void *)uint64_t v1292 = *(void *)v1293;
          *((void *)v1292 + 1) = v1296;
          uint64_t v1297 = *((void *)v1293 + 3);
          *((void *)v1292 + 2) = *((void *)v1293 + 2);
          *((void *)v1292 + 3) = v1297;
          uint64_t v1298 = *((void *)v1293 + 5);
          *((void *)v1292 + 4) = *((void *)v1293 + 4);
          *((void *)v1292 + 5) = v1298;
          uint64_t v1299 = *((void *)v1293 + 7);
          *((void *)v1292 + 6) = *((void *)v1293 + 6);
          *((void *)v1292 + 7) = v1299;
          uint64_t v1300 = v1294[8];
          uint64_t v2627 = &v1293[v1300];
          v2641 = &v1292[v1300];
          uint64_t v1301 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2627, 1, v1301))
          {
            uint64_t v1302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2641, v2627, *(void *)(*(void *)(v1302 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1301 - 8) + 16))(v2641, v2627, v1301);
            __swift_storeEnumTagSinglePayload((uint64_t)v2641, 0, 1, v1301);
          }
          uint64_t v1303 = v1294[9];
          uint64_t v1304 = &v1292[v1303];
          uint64_t v1305 = &v1293[v1303];
          uint64_t v1306 = *((void *)v1305 + 1);
          *(void *)uint64_t v1304 = *(void *)v1305;
          *((void *)v1304 + 1) = v1306;
          uint64_t v1307 = v1294[10];
          uint64_t v1308 = &v1292[v1307];
          uint64_t v1309 = &v1293[v1307];
          uint64_t v1310 = *((void *)v1309 + 1);
          *(void *)uint64_t v1308 = *(void *)v1309;
          *((void *)v1308 + 1) = v1310;
          uint64_t v1311 = v1294[11];
          uint64_t v1312 = &v1292[v1311];
          uint64_t v1313 = &v1293[v1311];
          uint64_t v1314 = *((void *)v1313 + 1);
          *(void *)uint64_t v1312 = *(void *)v1313;
          *((void *)v1312 + 1) = v1314;
          uint64_t v1315 = v1294[12];
          uint64_t v1316 = &v1292[v1315];
          uint64_t v1317 = &v1293[v1315];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1317, 1, v2644))
          {
            uint64_t v1318 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1316, v1317, *(void *)(*(void *)(v1318 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1316, v1317, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v1316, 0, 1, v2644);
          }
          uint64_t v1319 = v1294[13];
          uint64_t v1320 = &v1292[v1319];
          uint64_t v1321 = &v1293[v1319];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v1293[v1319], 1, v2644))
          {
            uint64_t v1322 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1320, v1321, *(void *)(*(void *)(v1322 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1320, v1321, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v1320, 0, 1, v2644);
          }
          uint64_t v1323 = v1294[14];
          uint64_t v1324 = &v1292[v1323];
          uint64_t v1325 = &v1293[v1323];
          *(void *)uint64_t v1324 = *(void *)v1325;
          v1324[8] = v1325[8];
          uint64_t v1326 = v1294[15];
          uint64_t v1327 = &v1292[v1326];
          uint64_t v1328 = &v1293[v1326];
          uint64_t v1329 = *((void *)v1328 + 1);
          *(void *)uint64_t v1327 = *(void *)v1328;
          *((void *)v1327 + 1) = v1329;
          uint64_t v1330 = v1294[16];
          uint64_t v1331 = &v1292[v1330];
          uint64_t v1332 = &v1293[v1330];
          uint64_t v1333 = *((void *)v1332 + 1);
          *(void *)uint64_t v1331 = *(void *)v1332;
          *((void *)v1331 + 1) = v1333;
          uint64_t v1334 = v1294[17];
          uint64_t v1335 = &v1292[v1334];
          v1336 = &v1293[v1334];
          uint64_t v1337 = *((void *)v1336 + 1);
          *(void *)uint64_t v1335 = *(void *)v1336;
          *((void *)v1335 + 1) = v1337;
          uint64_t v1338 = v1294[18];
          uint64_t v1339 = &v1292[v1338];
          uint64_t v1340 = &v1293[v1338];
          uint64_t v1341 = *((void *)v1340 + 1);
          *(void *)uint64_t v1339 = *(void *)v1340;
          *((void *)v1339 + 1) = v1341;
          uint64_t v1342 = v1294[19];
          uint64_t v1343 = &v1292[v1342];
          uint64_t v1344 = &v1293[v1342];
          uint64_t v1345 = *((void *)v1344 + 1);
          *(void *)uint64_t v1343 = *(void *)v1344;
          *((void *)v1343 + 1) = v1345;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1292, 0, 1, (uint64_t)v1294);
        }
        uint64_t v1346 = v2652[21];
        goto LABEL_537;
      case 4u:
        uint64_t v2662 = v5;
        uint64_t v64 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v64;
        uint64_t v65 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v65;
        uint64_t v66 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v66;
        uint64_t v67 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v67;
        uint64_t v68 = type metadata accessor for NoteDocument(0);
        uint64_t v69 = *(int *)(v68 + 32);
        uint64_t v70 = &v9[v69];
        uint64_t v71 = &v10[v69];
        uint64_t v72 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
        {
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
        }
        uint64_t v5 = v2662;
        uint64_t v367 = *(int *)(v68 + 36);
        goto LABEL_147;
      case 5u:
        uint64_t v74 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v74;
        uint64_t v75 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v75;
        uint64_t v76 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v76;
        uint64_t v77 = (int *)type metadata accessor for Reminder(0);
        uint64_t v78 = v77[7];
        uint64_t v79 = &v9[v78];
        uint64_t v80 = &v10[v78];
        uint64_t v81 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
        {
          uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
        }
        uint64_t v368 = v77[8];
        uint64_t v369 = &v9[v368];
        uint64_t v370 = &v10[v368];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v368], 1, v81))
        {
          uint64_t v371 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v369, v370, *(void *)(*(void *)(v371 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v369, v370, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v369, 0, 1, v81);
        }
        v9[v77[9]] = v10[v77[9]];
        uint64_t v535 = v77[10];
        v536 = &v9[v535];
        v537 = &v10[v535];
        uint64_t v538 = *((void *)v537 + 1);
        *(void *)v536 = *(void *)v537;
        *((void *)v536 + 1) = v538;
        uint64_t v539 = v77[11];
        v540 = &v9[v539];
        uint64_t v541 = &v10[v539];
        uint64_t v542 = *((void *)v541 + 1);
        *(void *)v540 = *(void *)v541;
        *((void *)v540 + 1) = v542;
        uint64_t v543 = v77[12];
        uint64_t v104 = &v9[v543];
        uint64_t v105 = &v10[v543];
        uint64_t v106 = type metadata accessor for URL();
        goto LABEL_135;
      case 6u:
        uint64_t v83 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v83;
        uint64_t v84 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v84;
        uint64_t v85 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v85;
        uint64_t v86 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v86;
        uint64_t v87 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v88 = v87[10];
        uint64_t v2645 = &v9[v88];
        uint64_t v2653 = &v10[v88];
        uint64_t v89 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2653, 1, v89))
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2645, v2653, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v2645, v2653, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v2645, 0, 1, v89);
        }
        uint64_t v372 = v87[11];
        uint64_t v373 = &v9[v372];
        uint64_t v374 = &v10[v372];
        uint64_t v375 = *((void *)v374 + 1);
        *(void *)uint64_t v373 = *(void *)v374;
        *((void *)v373 + 1) = v375;
        uint64_t v376 = v87[12];
        uint64_t v377 = &v9[v376];
        uint64_t v378 = &v10[v376];
        uint64_t v379 = *((void *)v378 + 1);
        *(void *)uint64_t v377 = *(void *)v378;
        *((void *)v377 + 1) = v379;
        uint64_t v380 = v87[13];
        uint64_t v104 = &v9[v380];
        uint64_t v105 = &v10[v380];
        uint64_t v106 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        goto LABEL_136;
      case 7u:
        uint64_t v91 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v91;
        uint64_t v92 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v92;
        uint64_t v93 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v93;
        uint64_t v94 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v95 = v94[7];
        uint64_t v96 = &v9[v95];
        uint64_t v97 = &v10[v95];
        uint64_t v98 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
        {
          uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
          __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
        }
        goto LABEL_81;
      case 8u:
        uint64_t v100 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v100;
        uint64_t v101 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v101;
        uint64_t v102 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v102;
        uint64_t v103 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v104 = &v9[v103];
        uint64_t v105 = &v10[v103];
        uint64_t v106 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
LABEL_135:
        swift_bridgeObjectRetain();
LABEL_136:
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v106))
        {
          uint64_t v544 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v104, v105, *(void *)(*(void *)(v544 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
          __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v106);
        }
        goto LABEL_542;
      case 9u:
        uint64_t v107 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v107;
        uint64_t v108 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v108;
        uint64_t v94 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v109 = v94[6];
        uint64_t v110 = &v9[v109];
        uint64_t v111 = &v10[v109];
        uint64_t v112 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v112))
        {
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v112);
        }
        uint64_t v381 = v94[7];
        uint64_t v382 = &v9[v381];
        v383 = &v10[v381];
        *(void *)uint64_t v382 = *(void *)v383;
        v382[8] = v383[8];
LABEL_81:
        uint64_t v384 = v94[8];
        goto LABEL_154;
      case 0xAu:
        uint64_t v114 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v114;
        uint64_t v115 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v115;
        uint64_t v116 = (int *)type metadata accessor for Safari(0);
        uint64_t v117 = v116[6];
        uint64_t v118 = &v9[v117];
        uint64_t v119 = &v10[v117];
        uint64_t v120 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v119, 1, v120))
        {
          uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
          __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v120);
        }
        uint64_t v385 = v116[7];
        uint64_t v386 = &v9[v385];
        v387 = &v10[v385];
        uint64_t v388 = *((void *)v387 + 1);
        *(void *)uint64_t v386 = *(void *)v387;
        *((void *)v386 + 1) = v388;
        uint64_t v389 = v116[8];
        uint64_t v390 = &v9[v389];
        v391 = &v10[v389];
        uint64_t v392 = *((void *)v391 + 1);
        *(void *)uint64_t v390 = *(void *)v391;
        *((void *)v390 + 1) = v392;
        uint64_t v393 = v116[9];
        uint64_t v394 = &v9[v393];
        v395 = &v10[v393];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v395, 1, v120))
        {
          uint64_t v396 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v394, v395, *(void *)(*(void *)(v396 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v394, v395, v120);
          __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v120);
        }
        goto LABEL_542;
      case 0xBu:
        uint64_t v122 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v122;
        uint64_t v123 = (void *)*((void *)v10 + 2);
        *((void *)v9 + 2) = v123;
        swift_bridgeObjectRetain();
        id v124 = v123;
        goto LABEL_542;
      case 0xCu:
        uint64_t v125 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v125;
        uint64_t v126 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v126;
        uint64_t v127 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v127;
        uint64_t v128 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v129 = v128[7];
        uint64_t v130 = &v9[v129];
        uint64_t v131 = &v10[v129];
        uint64_t v132 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
        {
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
          __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v132);
        }
        uint64_t v397 = v128[8];
        uint64_t v398 = &v9[v397];
        v399 = &v10[v397];
        uint64_t v400 = *((void *)v399 + 1);
        *(void *)uint64_t v398 = *(void *)v399;
        *((void *)v398 + 1) = v400;
        uint64_t v401 = v128[9];
        v402 = &v9[v401];
        v403 = &v10[v401];
        uint64_t v404 = *((void *)v403 + 1);
        *(void *)v402 = *(void *)v403;
        *((void *)v402 + 1) = v404;
        uint64_t v405 = v128[10];
        v406 = &v9[v405];
        v407 = &v10[v405];
        uint64_t v408 = *((void *)v407 + 1);
        *(void *)v406 = *(void *)v407;
        *((void *)v406 + 1) = v408;
        uint64_t v409 = v128[11];
        v410 = &v9[v409];
        v411 = &v10[v409];
        *(_OWORD *)v410 = *(_OWORD *)v411;
        *(void *)(v410 + 13) = *(void *)(v411 + 13);
        uint64_t v412 = v128[12];
        uint64_t v413 = &v9[v412];
        v414 = &v10[v412];
        uint64_t v415 = *((void *)v414 + 1);
        *(void *)uint64_t v413 = *(void *)v414;
        *((void *)v413 + 1) = v415;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_165;
      case 0xDu:
        uint64_t v134 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v134;
        uint64_t v135 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v135;
        uint64_t v136 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v136;
        uint64_t v137 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v138 = v137[7];
        uint64_t v139 = &v9[v138];
        uint64_t v140 = &v10[v138];
        uint64_t v141 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v140, 1, v141))
        {
          uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
          __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v141);
        }
        uint64_t v416 = v137[8];
        uint64_t v417 = &v9[v416];
        v418 = &v10[v416];
        uint64_t v419 = *((void *)v418 + 1);
        *(void *)uint64_t v417 = *(void *)v418;
        *((void *)v417 + 1) = v419;
        *(void *)&v9[v137[9]] = *(void *)&v10[v137[9]];
        swift_bridgeObjectRetain();
        goto LABEL_165;
      case 0xEu:
        uint64_t v143 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v143;
        uint64_t v144 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v144;
        uint64_t v145 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v145;
        uint64_t v146 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v146;
        uint64_t v147 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v147;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_165;
      case 0xFu:
        uint64_t v2663 = v5;
        uint64_t v148 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v148;
        uint64_t v149 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v149;
        uint64_t v150 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v150;
        uint64_t v151 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v151;
        uint64_t v152 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v152;
        uint64_t v153 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v153;
        v9[96] = v10[96];
        uint64_t v154 = *((void *)v10 + 14);
        *((void *)v9 + 13) = *((void *)v10 + 13);
        *((void *)v9 + 14) = v154;
        uint64_t v155 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v156 = v155[13];
        v2620 = &v9[v156];
        uint64_t v2646 = &v10[v156];
        uint64_t v2632 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2646, 1, v2632))
        {
          uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2620, v2646, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v2620, v2646, v2632);
          __swift_storeEnumTagSinglePayload((uint64_t)v2620, 0, 1, v2632);
        }
        uint64_t v420 = v155[14];
        uint64_t v421 = &v9[v420];
        v422 = &v10[v420];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v420], 1, v2632))
        {
          uint64_t v423 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v421, v422, *(void *)(*(void *)(v423 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v421, v422, v2632);
          __swift_storeEnumTagSinglePayload((uint64_t)v421, 0, 1, v2632);
        }
        uint64_t v545 = v155[15];
        v546 = &v9[v545];
        uint64_t v547 = &v10[v545];
        uint64_t v548 = *((void *)v547 + 1);
        *(void *)v546 = *(void *)v547;
        *((void *)v546 + 1) = v548;
        uint64_t v549 = v155[16];
        uint64_t v550 = &v9[v549];
        v551 = &v10[v549];
        uint64_t v552 = *((void *)v551 + 1);
        *(void *)uint64_t v550 = *(void *)v551;
        *((void *)v550 + 1) = v552;
        uint64_t v553 = v155[17];
        v554 = &v9[v553];
        v555 = &v10[v553];
        uint64_t v556 = *((void *)v555 + 1);
        *(void *)v554 = *(void *)v555;
        *((void *)v554 + 1) = v556;
        uint64_t v557 = v155[18];
        v2658 = &v9[v557];
        v558 = &v10[v557];
        uint64_t v559 = type metadata accessor for DateComponents();
        v560 = *(void (**)(char *, char *, uint64_t))(*(void *)(v559 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v560(v2658, v558, v559);
        v560(&v9[v155[19]], &v10[v155[19]], v559);
        uint64_t v561 = v155[20];
        uint64_t v562 = &v9[v561];
        v563 = &v10[v561];
        uint64_t v2659 = *((void *)v563 + 1);
        *(void *)uint64_t v562 = *(void *)v563;
        *((void *)v562 + 1) = v2659;
        uint64_t v564 = v155[21];
        uint64_t v565 = &v9[v564];
        uint64_t v566 = &v10[v564];
        uint64_t v2648 = *((void *)v566 + 1);
        *(void *)uint64_t v565 = *(void *)v566;
        *((void *)v565 + 1) = v2648;
        uint64_t v567 = v155[22];
        v568 = &v9[v567];
        uint64_t v569 = &v10[v567];
        uint64_t v2635 = *((void *)v569 + 1);
        *(void *)v568 = *(void *)v569;
        *((void *)v568 + 1) = v2635;
        uint64_t v570 = v155[23];
        v571 = &v9[v570];
        v572 = &v10[v570];
        uint64_t v2624 = *((void *)v572 + 1);
        *(void *)v571 = *(void *)v572;
        *((void *)v571 + 1) = v2624;
        uint64_t v573 = v155[24];
        uint64_t v574 = &v9[v573];
        v575 = &v10[v573];
        uint64_t v2608 = *((void *)v575 + 1);
        *(void *)uint64_t v574 = *(void *)v575;
        *((void *)v574 + 1) = v2608;
        uint64_t v576 = v155[25];
        uint64_t v577 = &v9[v576];
        uint64_t v578 = &v10[v576];
        uint64_t v2589 = *((void *)v578 + 1);
        *(void *)uint64_t v577 = *(void *)v578;
        *((void *)v577 + 1) = v2589;
        uint64_t v579 = v155[26];
        uint64_t v580 = &v9[v579];
        v581 = &v10[v579];
        uint64_t v2569 = *((void *)v581 + 1);
        *(void *)uint64_t v580 = *(void *)v581;
        *((void *)v580 + 1) = v2569;
        uint64_t v582 = v155[27];
        uint64_t v583 = &v9[v582];
        uint64_t v584 = &v10[v582];
        uint64_t v2553 = *((void *)v584 + 1);
        *(void *)uint64_t v583 = *(void *)v584;
        *((void *)v583 + 1) = v2553;
        uint64_t v585 = v155[28];
        v586 = &v9[v585];
        uint64_t v587 = &v10[v585];
        uint64_t v2544 = *((void *)v587 + 1);
        *(void *)v586 = *(void *)v587;
        *((void *)v586 + 1) = v2544;
        uint64_t v588 = v155[29];
        v589 = &v9[v588];
        uint64_t v590 = &v10[v588];
        v2536 = (void *)*((void *)v590 + 1);
        *(void *)v589 = *(void *)v590;
        *((void *)v589 + 1) = v2536;
        uint64_t v591 = v155[30];
        v592 = &v9[v591];
        uint64_t v593 = &v10[v591];
        uint64_t v2528 = (void *)*((void *)v593 + 1);
        *(void *)v592 = *(void *)v593;
        *((void *)v592 + 1) = v2528;
        uint64_t v594 = v155[31];
        v595 = &v9[v594];
        uint64_t v596 = &v10[v594];
        uint64_t v597 = *((void *)v596 + 1);
        *(void *)v595 = *(void *)v596;
        *((void *)v595 + 1) = v597;
        uint64_t v598 = v155[32];
        v599 = &v9[v598];
        uint64_t v600 = &v10[v598];
        uint64_t v601 = *((void *)v600 + 1);
        *(void *)v599 = *(void *)v600;
        *((void *)v599 + 1) = v601;
        *(void *)&v9[v155[33]] = *(void *)&v10[v155[33]];
        *(void *)&v9[v155[34]] = *(void *)&v10[v155[34]];
        uint64_t v602 = v155[35];
        uint64_t v603 = &v9[v602];
        v604 = &v10[v602];
        uint64_t v605 = *((void *)v604 + 1);
        *(void *)uint64_t v603 = *(void *)v604;
        *((void *)v603 + 1) = v605;
        uint64_t v606 = v155[36];
        uint64_t v607 = &v9[v606];
        v608 = &v10[v606];
        uint64_t v609 = *((void *)v608 + 1);
        *(void *)uint64_t v607 = *(void *)v608;
        *((void *)v607 + 1) = v609;
        uint64_t v610 = v155[37];
        uint64_t v611 = &v9[v610];
        v612 = &v10[v610];
        uint64_t v613 = *((void *)v612 + 1);
        *(void *)uint64_t v611 = *(void *)v612;
        *((void *)v611 + 1) = v613;
        uint64_t v614 = v155[38];
        uint64_t v2503 = &v9[v614];
        uint64_t v2509 = &v10[v614];
        uint64_t v2518 = (void *)type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2509, 1, (uint64_t)v2518))
        {
          uint64_t v615 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2503, v2509, *(void *)(*(void *)(v615 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(*(v2518 - 1) + 16))(v2503, v2509, v2518);
          __swift_storeEnumTagSinglePayload((uint64_t)v2503, 0, 1, (uint64_t)v2518);
        }
        uint64_t v5 = v2663;
        uint64_t v682 = v155[39];
        uint64_t v683 = &v9[v682];
        uint64_t v684 = &v10[v682];
        uint64_t v685 = *((void *)v684 + 1);
        *(void *)uint64_t v683 = *(void *)v684;
        *((void *)v683 + 1) = v685;
        uint64_t v686 = v155[40];
        uint64_t v687 = &v9[v686];
        uint64_t v688 = &v10[v686];
        uint64_t v689 = *((void *)v688 + 1);
        *(void *)uint64_t v687 = *(void *)v688;
        *((void *)v687 + 1) = v689;
        uint64_t v690 = v155[41];
        uint64_t v691 = &v9[v690];
        uint64_t v692 = &v10[v690];
        v691[8] = v692[8];
        *(void *)uint64_t v691 = *(void *)v692;
        uint64_t v693 = v155[42];
        uint64_t v694 = &v9[v693];
        uint64_t v695 = &v10[v693];
        uint64_t v696 = *((void *)v695 + 1);
        *(void *)uint64_t v694 = *(void *)v695;
        *((void *)v694 + 1) = v696;
        uint64_t v697 = v155[43];
        uint64_t v698 = &v9[v697];
        uint64_t v699 = &v10[v697];
        *(_OWORD *)uint64_t v698 = *(_OWORD *)v699;
        *(void *)(v698 + 13) = *(void *)(v699 + 13);
        uint64_t v700 = v155[44];
        uint64_t v701 = &v9[v700];
        uint64_t v702 = &v10[v700];
        uint64_t v703 = *((void *)v702 + 1);
        *(void *)uint64_t v701 = *(void *)v702;
        *((void *)v701 + 1) = v703;
        uint64_t v704 = v155[45];
        uint64_t v705 = &v9[v704];
        uint64_t v706 = &v10[v704];
        uint64_t v707 = *((void *)v706 + 1);
        *(void *)uint64_t v705 = *(void *)v706;
        *((void *)v705 + 1) = v707;
        uint64_t v708 = v155[46];
        uint64_t v709 = &v9[v708];
        uint64_t v710 = &v10[v708];
        uint64_t v711 = *((void *)v710 + 1);
        *(void *)uint64_t v709 = *(void *)v710;
        *((void *)v709 + 1) = v711;
        uint64_t v712 = v155[47];
        uint64_t v713 = &v9[v712];
        uint64_t v714 = &v10[v712];
        uint64_t v715 = *((void *)v714 + 1);
        *(void *)uint64_t v713 = *(void *)v714;
        *((void *)v713 + 1) = v715;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v716 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)&v9[*(int *)(v716 + 48)] = *(void *)&v10[*(int *)(v716 + 48)];
        goto LABEL_165;
      case 0x10u:
        uint64_t v2661 = v5;
        uint64_t v158 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v158;
        uint64_t v159 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v159;
        uint64_t v160 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v160;
        uint64_t v161 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v161;
        uint64_t v162 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v162;
        uint64_t v163 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v163;
        v9[96] = v10[96];
        uint64_t v164 = *((void *)v10 + 14);
        *((void *)v9 + 13) = *((void *)v10 + 13);
        *((void *)v9 + 14) = v164;
        uint64_t v165 = *((void *)v10 + 16);
        *((void *)v9 + 15) = *((void *)v10 + 15);
        *((void *)v9 + 16) = v165;
        uint64_t v166 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v167 = v166[14];
        uint64_t v2604 = &v9[v167];
        v2621 = &v10[v167];
        uint64_t v2633 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2621, 1, v2633))
        {
          uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2604, v2621, *(void *)(*(void *)(v168 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v2604, v2621, v2633);
          __swift_storeEnumTagSinglePayload((uint64_t)v2604, 0, 1, v2633);
        }
        uint64_t v424 = v166[15];
        uint64_t v425 = &v9[v424];
        uint64_t v426 = &v10[v424];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v424], 1, v2633))
        {
          uint64_t v427 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v425, v426, *(void *)(*(void *)(v427 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v425, v426, v2633);
          __swift_storeEnumTagSinglePayload((uint64_t)v425, 0, 1, v2633);
        }
        uint64_t v616 = v166[16];
        v617 = &v9[v616];
        uint64_t v618 = &v10[v616];
        uint64_t v619 = *((void *)v618 + 1);
        *(void *)v617 = *(void *)v618;
        *((void *)v617 + 1) = v619;
        uint64_t v620 = v166[17];
        v621 = &v9[v620];
        uint64_t v622 = &v10[v620];
        uint64_t v2660 = *((void *)v622 + 1);
        *(void *)v621 = *(void *)v622;
        *((void *)v621 + 1) = v2660;
        uint64_t v623 = v166[18];
        uint64_t v624 = &v9[v623];
        v625 = &v10[v623];
        uint64_t v2649 = *((void *)v625 + 1);
        *(void *)uint64_t v624 = *(void *)v625;
        *((void *)v624 + 1) = v2649;
        uint64_t v626 = v166[19];
        long long v627 = &v9[v626];
        uint64_t v628 = &v10[v626];
        uint64_t v2636 = *((void *)v628 + 1);
        *(void *)long long v627 = *(void *)v628;
        *((void *)v627 + 1) = v2636;
        uint64_t v629 = v166[20];
        v630 = &v9[v629];
        uint64_t v631 = &v10[v629];
        uint64_t v632 = *((void *)v631 + 1);
        *(void *)v630 = *(void *)v631;
        *((void *)v630 + 1) = v632;
        *(void *)&v9[v166[21]] = *(void *)&v10[v166[21]];
        *(void *)&v9[v166[22]] = *(void *)&v10[v166[22]];
        uint64_t v633 = v166[23];
        v634 = &v9[v633];
        v635 = &v10[v633];
        *(void *)v634 = *(void *)v635;
        v634[8] = v635[8];
        uint64_t v636 = v166[24];
        long long v637 = &v9[v636];
        uint64_t v638 = &v10[v636];
        *(void *)long long v637 = *(void *)v638;
        v637[8] = v638[8];
        uint64_t v639 = v166[25];
        v640 = &v9[v639];
        uint64_t v641 = &v10[v639];
        uint64_t v642 = *((void *)v641 + 1);
        *(void *)v640 = *(void *)v641;
        *((void *)v640 + 1) = v642;
        uint64_t v643 = v166[26];
        v644 = &v9[v643];
        uint64_t v645 = &v10[v643];
        uint64_t v646 = *((void *)v645 + 1);
        *(void *)v644 = *(void *)v645;
        *((void *)v644 + 1) = v646;
        uint64_t v647 = v166[27];
        v648 = &v9[v647];
        uint64_t v649 = &v10[v647];
        uint64_t v650 = *((void *)v649 + 1);
        *(void *)v648 = *(void *)v649;
        *((void *)v648 + 1) = v650;
        uint64_t v651 = v166[28];
        uint64_t v652 = &v9[v651];
        uint64_t v653 = &v10[v651];
        uint64_t v654 = *((void *)v653 + 1);
        *(void *)uint64_t v652 = *(void *)v653;
        *((void *)v652 + 1) = v654;
        uint64_t v655 = v166[29];
        uint64_t v656 = &v9[v655];
        v657 = &v10[v655];
        *(void *)uint64_t v656 = *(void *)v657;
        v656[8] = v657[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_539;
      case 0x11u:
        uint64_t v2661 = v5;
        uint64_t v169 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v169;
        uint64_t v170 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v170;
        uint64_t v171 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v171;
        uint64_t v172 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v172;
        uint64_t v173 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v173;
        uint64_t v174 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v174;
        v9[96] = v10[96];
        uint64_t v175 = *((void *)v10 + 14);
        *((void *)v9 + 13) = *((void *)v10 + 13);
        *((void *)v9 + 14) = v175;
        uint64_t v176 = *((void *)v10 + 16);
        *((void *)v9 + 15) = *((void *)v10 + 15);
        *((void *)v9 + 16) = v176;
        uint64_t v177 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v178 = v177[14];
        uint64_t v2605 = &v9[v178];
        v2622 = &v10[v178];
        uint64_t v179 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2622, 1, v179))
        {
          uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2605, v2622, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v2605, v2622, v179);
          __swift_storeEnumTagSinglePayload((uint64_t)v2605, 0, 1, v179);
        }
        uint64_t v428 = v177[15];
        uint64_t v429 = &v9[v428];
        uint64_t v430 = &v10[v428];
        uint64_t v431 = *((void *)v430 + 1);
        *(void *)uint64_t v429 = *(void *)v430;
        *((void *)v429 + 1) = v431;
        uint64_t v432 = v177[16];
        uint64_t v433 = &v9[v432];
        v434 = &v10[v432];
        uint64_t v435 = *((void *)v434 + 1);
        *(void *)uint64_t v433 = *(void *)v434;
        *((void *)v433 + 1) = v435;
        uint64_t v436 = v177[17];
        uint64_t v437 = &v9[v436];
        uint64_t v438 = &v10[v436];
        uint64_t v439 = *((void *)v438 + 1);
        *(void *)uint64_t v437 = *(void *)v438;
        *((void *)v437 + 1) = v439;
        uint64_t v440 = v177[18];
        uint64_t v441 = &v9[v440];
        uint64_t v442 = &v10[v440];
        uint64_t v443 = *((void *)v442 + 1);
        *(void *)uint64_t v441 = *(void *)v442;
        *((void *)v441 + 1) = v443;
        uint64_t v444 = v177[19];
        uint64_t v445 = &v9[v444];
        uint64_t v446 = &v10[v444];
        uint64_t v447 = *((void *)v446 + 1);
        *(void *)uint64_t v445 = *(void *)v446;
        *((void *)v445 + 1) = v447;
        *(void *)&v9[v177[20]] = *(void *)&v10[v177[20]];
        uint64_t v448 = v177[21];
        unint64_t v449 = &v9[v448];
        uint64_t v450 = &v10[v448];
        uint64_t v451 = *((void *)v450 + 1);
        *(void *)unint64_t v449 = *(void *)v450;
        *((void *)v449 + 1) = v451;
        uint64_t v452 = v177[22];
        v453 = &v9[v452];
        v454 = &v10[v452];
        uint64_t v455 = *((void *)v454 + 1);
        *(void *)v453 = *(void *)v454;
        *((void *)v453 + 1) = v455;
        uint64_t v456 = v177[23];
        uint64_t v457 = &v9[v456];
        v458 = &v10[v456];
        uint64_t v459 = *((void *)v458 + 1);
        *(void *)uint64_t v457 = *(void *)v458;
        *((void *)v457 + 1) = v459;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_539;
      case 0x12u:
        uint64_t v2664 = v5;
        uint64_t v181 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v181;
        uint64_t v182 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v182;
        uint64_t v183 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v183;
        uint64_t v184 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v184;
        uint64_t v185 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v185;
        uint64_t v186 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v186;
        uint64_t v187 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v187;
        uint64_t v188 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v188;
        v9[128] = v10[128];
        *(_WORD *)(v9 + 129) = *(_WORD *)(v10 + 129);
        uint64_t v189 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v189;
        uint64_t v190 = *((void *)v10 + 20);
        *((void *)v9 + 19) = *((void *)v10 + 19);
        *((void *)v9 + 20) = v190;
        uint64_t v191 = *((void *)v10 + 22);
        *((void *)v9 + 21) = *((void *)v10 + 21);
        *((void *)v9 + 22) = v191;
        uint64_t v192 = *((void *)v10 + 24);
        *((void *)v9 + 23) = *((void *)v10 + 23);
        *((void *)v9 + 24) = v192;
        uint64_t v193 = *((void *)v10 + 26);
        *((void *)v9 + 25) = *((void *)v10 + 25);
        *((void *)v9 + 26) = v193;
        uint64_t v194 = *((void *)v10 + 28);
        *((void *)v9 + 27) = *((void *)v10 + 27);
        *((void *)v9 + 28) = v194;
        uint64_t v195 = *((void *)v10 + 30);
        *((void *)v9 + 29) = *((void *)v10 + 29);
        *((void *)v9 + 30) = v195;
        uint64_t v2654 = *((void *)v10 + 32);
        *((void *)v9 + 31) = *((void *)v10 + 31);
        *((void *)v9 + 32) = v2654;
        uint64_t v196 = *((void *)v10 + 34);
        *((void *)v9 + 33) = *((void *)v10 + 33);
        *((void *)v9 + 34) = v196;
        uint64_t v197 = *((void *)v10 + 36);
        *((void *)v9 + 35) = *((void *)v10 + 35);
        *((void *)v9 + 36) = v197;
        uint64_t v198 = *((void *)v10 + 38);
        *((void *)v9 + 37) = *((void *)v10 + 37);
        *((void *)v9 + 38) = v198;
        uint64_t v199 = *((void *)v10 + 40);
        *((void *)v9 + 39) = *((void *)v10 + 39);
        *((void *)v9 + 40) = v199;
        uint64_t v200 = *((void *)v10 + 42);
        *((void *)v9 + 41) = *((void *)v10 + 41);
        *((void *)v9 + 42) = v200;
        uint64_t v201 = *((void *)v10 + 44);
        *((void *)v9 + 43) = *((void *)v10 + 43);
        *((void *)v9 + 44) = v201;
        uint64_t v202 = *((void *)v10 + 46);
        *((void *)v9 + 45) = *((void *)v10 + 45);
        *((void *)v9 + 46) = v202;
        uint64_t v203 = *((void *)v10 + 47);
        v9[384] = v10[384];
        *((void *)v9 + 47) = v203;
        uint64_t v204 = *((void *)v10 + 50);
        *((void *)v9 + 49) = *((void *)v10 + 49);
        *((void *)v9 + 50) = v204;
        uint64_t v205 = *((void *)v10 + 52);
        *((void *)v9 + 51) = *((void *)v10 + 51);
        *((void *)v9 + 52) = v205;
        uint64_t v206 = type metadata accessor for RentalCarReservation(0);
        uint64_t v207 = *(int *)(v206 + 140);
        __dst = &v9[v207];
        v2459 = (int *)v206;
        uint64_t v208 = &v10[v207];
        uint64_t v209 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v209))
        {
          uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v208, *(void *)(*(void *)(v210 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(__dst, v208, v209);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v209);
        }
        uint64_t v5 = v2664;
        uint64_t v460 = v2459[36];
        goto LABEL_106;
      case 0x13u:
        v2665 = v5;
        uint64_t v211 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v211;
        uint64_t v212 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v212;
        uint64_t v213 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v213;
        uint64_t v214 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v214;
        uint64_t v215 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v215;
        uint64_t v216 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v216;
        uint64_t v217 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v217;
        uint64_t v218 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v218;
        v9[128] = v10[128];
        *(_WORD *)(v9 + 129) = *(_WORD *)(v10 + 129);
        uint64_t v219 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v219;
        uint64_t v220 = *((void *)v10 + 20);
        *((void *)v9 + 19) = *((void *)v10 + 19);
        *((void *)v9 + 20) = v220;
        uint64_t v221 = *((void *)v10 + 22);
        *((void *)v9 + 21) = *((void *)v10 + 21);
        *((void *)v9 + 22) = v221;
        uint64_t v222 = *((void *)v10 + 24);
        *((void *)v9 + 23) = *((void *)v10 + 23);
        *((void *)v9 + 24) = v222;
        uint64_t v2655 = *((void *)v10 + 26);
        *((void *)v9 + 25) = *((void *)v10 + 25);
        *((void *)v9 + 26) = v2655;
        uint64_t v223 = *((void *)v10 + 28);
        *((void *)v9 + 27) = *((void *)v10 + 27);
        *((void *)v9 + 28) = v223;
        uint64_t v224 = *((void *)v10 + 30);
        *((void *)v9 + 29) = *((void *)v10 + 29);
        *((void *)v9 + 30) = v224;
        uint64_t v225 = *((void *)v10 + 32);
        *((void *)v9 + 31) = *((void *)v10 + 31);
        *((void *)v9 + 32) = v225;
        uint64_t v226 = *((void *)v10 + 34);
        *((void *)v9 + 33) = *((void *)v10 + 33);
        *((void *)v9 + 34) = v226;
        uint64_t v227 = *((void *)v10 + 36);
        uint64_t v228 = *((void *)v10 + 35);
        v9[296] = v10[296];
        *((void *)v9 + 35) = v228;
        *((void *)v9 + 36) = v227;
        uint64_t v229 = type metadata accessor for TicketedTransportation(0);
        uint64_t v230 = *(int *)(v229 + 112);
        uint64_t v2488 = &v9[v230];
        v2496 = (int *)v229;
        uint64_t v231 = &v10[v230];
        uint64_t v209 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, v209))
        {
          uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2488, v231, *(void *)(*(void *)(v232 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v2488, v231, v209);
          __swift_storeEnumTagSinglePayload((uint64_t)v2488, 0, 1, v209);
        }
        uint64_t v5 = v2665;
        uint64_t v460 = v2496[29];
        goto LABEL_106;
      case 0x14u:
        uint64_t v2666 = v5;
        uint64_t v233 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v233;
        uint64_t v234 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v234;
        uint64_t v235 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v235;
        uint64_t v236 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v236;
        uint64_t v237 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v237;
        uint64_t v238 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v238;
        uint64_t v239 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v239;
        uint64_t v240 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v240;
        v9[128] = v10[128];
        *(_WORD *)(v9 + 129) = *(_WORD *)(v10 + 129);
        uint64_t v241 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v241;
        uint64_t v242 = *((void *)v10 + 20);
        *((void *)v9 + 19) = *((void *)v10 + 19);
        *((void *)v9 + 20) = v242;
        uint64_t v243 = *((void *)v10 + 22);
        *((void *)v9 + 21) = *((void *)v10 + 21);
        *((void *)v9 + 22) = v243;
        uint64_t v244 = *((void *)v10 + 24);
        *((void *)v9 + 23) = *((void *)v10 + 23);
        *((void *)v9 + 24) = v244;
        uint64_t v245 = *((void *)v10 + 26);
        *((void *)v9 + 25) = *((void *)v10 + 25);
        *((void *)v9 + 26) = v245;
        uint64_t v246 = *((void *)v10 + 28);
        *((void *)v9 + 27) = *((void *)v10 + 27);
        *((void *)v9 + 28) = v246;
        uint64_t v2656 = *((void *)v10 + 30);
        *((void *)v9 + 29) = *((void *)v10 + 29);
        *((void *)v9 + 30) = v2656;
        uint64_t v247 = *((void *)v10 + 32);
        *((void *)v9 + 31) = *((void *)v10 + 31);
        *((void *)v9 + 32) = v247;
        uint64_t v248 = *((void *)v10 + 34);
        *((void *)v9 + 33) = *((void *)v10 + 33);
        *((void *)v9 + 34) = v248;
        uint64_t v249 = *((void *)v10 + 36);
        uint64_t v250 = *((void *)v10 + 35);
        v9[296] = v10[296];
        *((void *)v9 + 35) = v250;
        *((void *)v9 + 36) = v249;
        uint64_t v251 = *((void *)v10 + 39);
        *((void *)v9 + 38) = *((void *)v10 + 38);
        *((void *)v9 + 39) = v251;
        uint64_t v252 = type metadata accessor for TicketedShow(0);
        uint64_t v253 = *(int *)(v252 + 116);
        uint64_t v2481 = &v9[v253];
        uint64_t v2489 = (int *)v252;
        uint64_t v254 = &v10[v253];
        uint64_t v255 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v254, 1, v255))
        {
          uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2481, v254, *(void *)(*(void *)(v256 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16))(v2481, v254, v255);
          __swift_storeEnumTagSinglePayload((uint64_t)v2481, 0, 1, v255);
        }
        uint64_t v5 = v2666;
        uint64_t v461 = v2489[30];
        uint64_t v462 = &v9[v461];
        v463 = &v10[v461];
        uint64_t v464 = *((void *)v463 + 1);
        *(void *)uint64_t v462 = *(void *)v463;
        *((void *)v462 + 1) = v464;
        uint64_t v465 = v2489[31];
        uint64_t v466 = &v9[v465];
        v467 = &v10[v465];
        uint64_t v72 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v467, 1, v72))
        {
          uint64_t v468 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v466, v467, *(void *)(*(void *)(v468 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v466, v467, v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v466, 0, 1, v72);
        }
        uint64_t v367 = v2489[32];
LABEL_147:
        v658 = &v9[v367];
        uint64_t v659 = &v10[v367];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v367], 1, v72))
        {
          size_t v660 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          v661 = v658;
          v662 = v659;
          goto LABEL_156;
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v658, v659, v72);
        uint64_t v663 = (uint64_t)v658;
        uint64_t v664 = v72;
        goto LABEL_158;
      case 0x15u:
        v2667 = v5;
        uint64_t v257 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v257;
        uint64_t v258 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v258;
        uint64_t v259 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v259;
        uint64_t v260 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v260;
        uint64_t v261 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v261;
        uint64_t v262 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v262;
        uint64_t v263 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v263;
        uint64_t v264 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v264;
        v9[128] = v10[128];
        *(_WORD *)(v9 + 129) = *(_WORD *)(v10 + 129);
        uint64_t v265 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v265;
        uint64_t v266 = *((void *)v10 + 20);
        *((void *)v9 + 19) = *((void *)v10 + 19);
        *((void *)v9 + 20) = v266;
        uint64_t v267 = *((void *)v10 + 22);
        *((void *)v9 + 21) = *((void *)v10 + 21);
        *((void *)v9 + 22) = v267;
        uint64_t v268 = *((void *)v10 + 24);
        *((void *)v9 + 23) = *((void *)v10 + 23);
        *((void *)v9 + 24) = v268;
        uint64_t v269 = *((void *)v10 + 26);
        *((void *)v9 + 25) = *((void *)v10 + 25);
        *((void *)v9 + 26) = v269;
        uint64_t v270 = *((void *)v10 + 28);
        *((void *)v9 + 27) = *((void *)v10 + 27);
        *((void *)v9 + 28) = v270;
        uint64_t v271 = *((void *)v10 + 30);
        *((void *)v9 + 29) = *((void *)v10 + 29);
        *((void *)v9 + 30) = v271;
        uint64_t v272 = *((void *)v10 + 32);
        *((void *)v9 + 31) = *((void *)v10 + 31);
        *((void *)v9 + 32) = v272;
        uint64_t v273 = *((void *)v10 + 34);
        uint64_t v274 = *((void *)v10 + 33);
        v9[280] = v10[280];
        *((void *)v9 + 33) = v274;
        *((void *)v9 + 34) = v273;
        uint64_t v275 = *((void *)v10 + 37);
        *((void *)v9 + 36) = *((void *)v10 + 36);
        *((void *)v9 + 37) = v275;
        uint64_t v276 = type metadata accessor for Appointment(0);
        uint64_t v277 = *(int *)(v276 + 108);
        uint64_t v2497 = &v9[v277];
        v2502 = (int *)v276;
        uint64_t v278 = &v10[v277];
        uint64_t v209 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v209))
        {
          uint64_t v279 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2497, v278, *(void *)(*(void *)(v279 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v2497, v278, v209);
          __swift_storeEnumTagSinglePayload((uint64_t)v2497, 0, 1, v209);
        }
        uint64_t v5 = v2667;
        uint64_t v460 = v2502[28];
LABEL_106:
        uint64_t v469 = &v9[v460];
        uint64_t v470 = &v10[v460];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v460], 1, v209))
        {
          uint64_t v471 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v469, v470, *(void *)(*(void *)(v471 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v469, v470, v209);
          __swift_storeEnumTagSinglePayload((uint64_t)v469, 0, 1, v209);
        }
        goto LABEL_542;
      case 0x16u:
        v2668 = v5;
        uint64_t v280 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v280;
        uint64_t v281 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v281;
        uint64_t v282 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v282;
        uint64_t v283 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v283;
        uint64_t v284 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v284;
        uint64_t v285 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v285;
        uint64_t v286 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v286;
        uint64_t v287 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v287;
        v9[128] = v10[128];
        *(_WORD *)(v9 + 129) = *(_WORD *)(v10 + 129);
        uint64_t v288 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v288;
        uint64_t v289 = *((void *)v10 + 20);
        *((void *)v9 + 19) = *((void *)v10 + 19);
        *((void *)v9 + 20) = v289;
        uint64_t v290 = *((void *)v10 + 22);
        *((void *)v9 + 21) = *((void *)v10 + 21);
        *((void *)v9 + 22) = v290;
        uint64_t v291 = *((void *)v10 + 24);
        *((void *)v9 + 23) = *((void *)v10 + 23);
        *((void *)v9 + 24) = v291;
        uint64_t v292 = *((void *)v10 + 26);
        *((void *)v9 + 25) = *((void *)v10 + 25);
        *((void *)v9 + 26) = v292;
        uint64_t v293 = *((void *)v10 + 28);
        *((void *)v9 + 27) = *((void *)v10 + 27);
        *((void *)v9 + 28) = v293;
        uint64_t v294 = *((void *)v10 + 30);
        *((void *)v9 + 29) = *((void *)v10 + 29);
        *((void *)v9 + 30) = v294;
        *((void *)v9 + 31) = *((void *)v10 + 31);
        uint64_t v295 = type metadata accessor for Party(0);
        uint64_t v296 = *(int *)(v295 + 96);
        uint64_t v2508 = &v9[v296];
        uint64_t v2517 = (int *)v295;
        uint64_t v297 = &v10[v296];
        uint64_t v298 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v297, 1, v298))
        {
          uint64_t v299 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2508, v297, *(void *)(*(void *)(v299 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 16))(v2508, v297, v298);
          __swift_storeEnumTagSinglePayload((uint64_t)v2508, 0, 1, v298);
        }
        uint64_t v5 = v2668;
        uint64_t v472 = v2517[25];
        uint64_t v473 = &v9[v472];
        uint64_t v474 = &v10[v472];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v472], 1, v298))
        {
          uint64_t v475 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v473, v474, *(void *)(*(void *)(v475 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 16))(v473, v474, v298);
          __swift_storeEnumTagSinglePayload((uint64_t)v473, 0, 1, v298);
        }
        uint64_t v384 = v2517[26];
        goto LABEL_154;
      case 0x17u:
        uint64_t v2669 = v5;
        uint64_t v300 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v300;
        uint64_t v301 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v301;
        uint64_t v302 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v302;
        uint64_t v303 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v303;
        uint64_t v304 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v304;
        uint64_t v305 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v305;
        uint64_t v306 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v306;
        uint64_t v307 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v307;
        v9[128] = v10[128];
        *(_WORD *)(v9 + 129) = *(_WORD *)(v10 + 129);
        uint64_t v308 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v308;
        uint64_t v309 = *((void *)v10 + 20);
        *((void *)v9 + 19) = *((void *)v10 + 19);
        *((void *)v9 + 20) = v309;
        uint64_t v310 = *((void *)v10 + 22);
        *((void *)v9 + 21) = *((void *)v10 + 21);
        *((void *)v9 + 22) = v310;
        uint64_t v311 = *((void *)v10 + 24);
        *((void *)v9 + 23) = *((void *)v10 + 23);
        *((void *)v9 + 24) = v311;
        uint64_t v312 = *((void *)v10 + 26);
        *((void *)v9 + 25) = *((void *)v10 + 25);
        *((void *)v9 + 26) = v312;
        *((void *)v9 + 27) = *((void *)v10 + 27);
        uint64_t v313 = type metadata accessor for Trip(0);
        uint64_t v314 = *(int *)(v313 + 88);
        uint64_t v2527 = &v9[v314];
        v2535 = (int *)v313;
        uint64_t v2543 = &v10[v314];
        uint64_t v315 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2543, 1, v315))
        {
          uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2527, v2543, *(void *)(*(void *)(v316 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v2527, v2543, v315);
          __swift_storeEnumTagSinglePayload((uint64_t)v2527, 0, 1, v315);
        }
        uint64_t v5 = v2669;
        uint64_t v476 = v2535[23];
        uint64_t v477 = &v9[v476];
        uint64_t v478 = &v10[v476];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v476], 1, v315))
        {
          uint64_t v479 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v477, v478, *(void *)(*(void *)(v479 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v477, v478, v315);
          __swift_storeEnumTagSinglePayload((uint64_t)v477, 0, 1, v315);
        }
        uint64_t v665 = v2535[24];
        v666 = &v9[v665];
        uint64_t v667 = &v10[v665];
        *(void *)v666 = *(void *)v667;
        v666[8] = v667[8];
        uint64_t v384 = v2535[25];
LABEL_154:
        uint64_t v668 = &v9[v384];
        uint64_t v669 = (uint64_t)&v10[v384];
        uint64_t v670 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload(v669, 1, v670))
        {
          size_t v660 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          v661 = v668;
          v662 = (const void *)v669;
LABEL_156:
          memcpy(v661, v662, v660);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v670 - 8) + 16))(v668, v669, v670);
          uint64_t v663 = (uint64_t)v668;
          uint64_t v664 = v670;
LABEL_158:
          __swift_storeEnumTagSinglePayload(v663, 0, 1, v664);
        }
LABEL_542:
        swift_storeEnumTagMultiPayload();
        uint64_t v2440 = type metadata accessor for SearchResult(0);
        uint64_t v2441 = *(int *)(v2440 + 20);
        v2442 = *(void **)&v10[v2441];
        *(void *)&v9[v2441] = v2442;
        uint64_t v2443 = *(int *)(v2440 + 24);
        v2444 = &v9[v2443];
        v2445 = &v10[v2443];
        uint64_t v2446 = *((void *)v2445 + 1);
        *(void *)v2444 = *(void *)v2445;
        *((void *)v2444 + 1) = v2446;
        id v2447 = v2442;
        swift_bridgeObjectRetain();
        break;
      case 0x18u:
        uint64_t v317 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v317;
        uint64_t v318 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v318;
        uint64_t v319 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v319;
        uint64_t v320 = (int *)type metadata accessor for GlobalItem();
        uint64_t v321 = v320[7];
        uint64_t v322 = &v9[v321];
        v323 = &v10[v321];
        uint64_t v324 = type metadata accessor for GlobalDialog();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v323, 1, v324))
        {
          uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
          __swift_storeEnumTagSinglePayload((uint64_t)v322, 0, 1, v324);
        }
        uint64_t v480 = v320[8];
        uint64_t v481 = &v9[v480];
        uint64_t v482 = &v10[v480];
        unint64_t v483 = *((void *)v482 + 1);
        if (v483 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v481 = *(_OWORD *)v482;
        }
        else
        {
          uint64_t v484 = *(void *)v482;
          outlined copy of Data._Representation(*(void *)v482, *((void *)v482 + 1));
          *(void *)uint64_t v481 = v484;
          *((void *)v481 + 1) = v483;
        }
        v9[v320[9]] = v10[v320[9]];
        uint64_t v485 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)&v9[*(int *)(v485 + 48)] = *(void *)&v10[*(int *)(v485 + 48)];
        goto LABEL_165;
      case 0x19u:
        uint64_t v326 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v326;
        uint64_t v327 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v327;
        uint64_t v328 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v328;
        uint64_t v329 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v329;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_165;
      case 0x1Au:
        uint64_t v2670 = v5;
        uint64_t v330 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v330;
        uint64_t v331 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v331;
        uint64_t v332 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v332;
        *((void *)v9 + 6) = *((void *)v10 + 6);
        uint64_t v333 = (int *)type metadata accessor for Answer(0);
        uint64_t v334 = v333[9];
        v2657 = &v9[v334];
        uint64_t v335 = &v10[v334];
        uint64_t v336 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v335, 1, v336))
        {
          uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2657, v335, *(void *)(*(void *)(v337 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v2657, v335, v336);
          __swift_storeEnumTagSinglePayload((uint64_t)v2657, 0, 1, v336);
        }
        uint64_t v5 = v2670;
        v9[v333[10]] = v10[v333[10]];
        uint64_t v486 = v333[11];
        v487 = &v9[v486];
        v488 = &v10[v486];
        uint64_t v489 = *((void *)v488 + 1);
        *(void *)v487 = *(void *)v488;
        *((void *)v487 + 1) = v489;
        goto LABEL_165;
      default:
        uint64_t v2661 = v5;
        uint64_t v13 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v13;
        uint64_t v14 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v14;
        uint64_t v15 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v15;
        uint64_t v16 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v16;
        uint64_t v17 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v17;
        uint64_t v18 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v18;
        uint64_t v19 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v20 = v19[12];
        v2603 = &v10[v20];
        v2618 = &v9[v20];
        uint64_t v21 = type metadata accessor for Date();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2631 = v22;
        uint64_t v2642 = v21;
        v22(v2618, v2603, v21);
        *(void *)&v9[v19[13]] = *(void *)&v10[v19[13]];
        *(void *)&v9[v19[14]] = *(void *)&v10[v19[14]];
        *(void *)&v9[v19[15]] = *(void *)&v10[v19[15]];
        v9[v19[16]] = v10[v19[16]];
        v9[v19[17]] = v10[v19[17]];
        uint64_t v23 = v19[18];
        uint64_t v24 = &v9[v23];
        uint64_t v25 = &v10[v23];
        uint64_t v26 = *((void *)v25 + 1);
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = v26;
        uint64_t v2650 = v19;
        uint64_t v27 = v19[19];
        uint64_t v28 = &v9[v27];
        uint64_t v29 = &v10[v27];
        uint64_t v30 = *(void *)&v10[v27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30)
        {
          uint64_t v31 = *((void *)v29 + 1);
          uint64_t v32 = *((void *)v29 + 2);
          *(void *)uint64_t v28 = v30;
          *((void *)v28 + 1) = v31;
          uint64_t v33 = *((void *)v29 + 3);
          uint64_t v34 = *((void *)v29 + 4);
          *((void *)v28 + 2) = v32;
          *((void *)v28 + 3) = v33;
          *((void *)v28 + 4) = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v338 = *((_OWORD *)v29 + 1);
          *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v338;
          *((void *)v28 + 4) = *((void *)v29 + 4);
        }
        uint64_t v339 = v19[20];
        uint64_t v340 = &v9[v339];
        uint64_t v341 = &v10[v339];
        uint64_t v342 = *((void *)v341 + 1);
        *(void *)uint64_t v340 = *(void *)v341;
        *((void *)v340 + 1) = v342;
        uint64_t v343 = v19[21];
        uint64_t v344 = &v9[v343];
        uint64_t v345 = &v10[v343];
        v346 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v345, 1, (uint64_t)v346))
        {
          uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
        }
        else
        {
          uint64_t v490 = *((void *)v345 + 1);
          *(void *)uint64_t v344 = *(void *)v345;
          *((void *)v344 + 1) = v490;
          uint64_t v491 = v346[5];
          uint64_t v492 = &v344[v491];
          uint64_t v493 = &v345[v491];
          uint64_t v494 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2588 = v346;
          uint64_t v2606 = v344;
          uint64_t v2568 = v345;
          if (__swift_getEnumTagSinglePayload((uint64_t)v493, 1, v494))
          {
            uint64_t v495 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v492, v493, *(void *)(*(void *)(v495 - 8) + 64));
          }
          else
          {
            uint64_t v723 = *((void *)v493 + 1);
            *(void *)uint64_t v492 = *(void *)v493;
            *((void *)v492 + 1) = v723;
            uint64_t v724 = *((void *)v493 + 3);
            *((void *)v492 + 2) = *((void *)v493 + 2);
            *((void *)v492 + 3) = v724;
            uint64_t v725 = *((void *)v493 + 5);
            *((void *)v492 + 4) = *((void *)v493 + 4);
            *((void *)v492 + 5) = v725;
            uint64_t v726 = *((void *)v493 + 7);
            *((void *)v492 + 6) = *((void *)v493 + 6);
            *((void *)v492 + 7) = v726;
            uint64_t v727 = *((void *)v493 + 9);
            *((void *)v492 + 8) = *((void *)v493 + 8);
            *((void *)v492 + 9) = v727;
            uint64_t v728 = *((void *)v493 + 11);
            *((void *)v492 + 10) = *((void *)v493 + 10);
            *((void *)v492 + 11) = v728;
            uint64_t v729 = *((void *)v493 + 13);
            *((void *)v492 + 12) = *((void *)v493 + 12);
            *((void *)v492 + 13) = v729;
            uint64_t v730 = *((void *)v493 + 15);
            *((void *)v492 + 14) = *((void *)v493 + 14);
            *((void *)v492 + 15) = v730;
            v492[128] = v493[128];
            *(_WORD *)(v492 + 129) = *(_WORD *)(v493 + 129);
            uint64_t v731 = *((void *)v493 + 18);
            *((void *)v492 + 17) = *((void *)v493 + 17);
            *((void *)v492 + 18) = v731;
            uint64_t v732 = *((void *)v493 + 20);
            *((void *)v492 + 19) = *((void *)v493 + 19);
            *((void *)v492 + 20) = v732;
            uint64_t v733 = *((void *)v493 + 22);
            *((void *)v492 + 21) = *((void *)v493 + 21);
            *((void *)v492 + 22) = v733;
            uint64_t v2451 = *((void *)v493 + 24);
            *((void *)v492 + 23) = *((void *)v493 + 23);
            *((void *)v492 + 24) = v2451;
            uint64_t v734 = *((void *)v493 + 26);
            *((void *)v492 + 25) = *((void *)v493 + 25);
            *((void *)v492 + 26) = v734;
            uint64_t v735 = *((void *)v493 + 28);
            *((void *)v492 + 27) = *((void *)v493 + 27);
            *((void *)v492 + 28) = v735;
            uint64_t v736 = *((void *)v493 + 30);
            *((void *)v492 + 29) = *((void *)v493 + 29);
            *((void *)v492 + 30) = v736;
            uint64_t v2554 = *((void *)v493 + 32);
            *((void *)v492 + 31) = *((void *)v493 + 31);
            *((void *)v492 + 32) = v2554;
            uint64_t v737 = *((void *)v493 + 34);
            *((void *)v492 + 33) = *((void *)v493 + 33);
            *((void *)v492 + 34) = v737;
            uint64_t v738 = *((void *)v493 + 36);
            *((void *)v492 + 35) = *((void *)v493 + 35);
            *((void *)v492 + 36) = v738;
            uint64_t v739 = *((void *)v493 + 38);
            *((void *)v492 + 37) = *((void *)v493 + 37);
            *((void *)v492 + 38) = v739;
            uint64_t v740 = *((void *)v493 + 40);
            *((void *)v492 + 39) = *((void *)v493 + 39);
            *((void *)v492 + 40) = v740;
            uint64_t v741 = *((void *)v493 + 42);
            *((void *)v492 + 41) = *((void *)v493 + 41);
            *((void *)v492 + 42) = v741;
            uint64_t v742 = *((void *)v493 + 44);
            *((void *)v492 + 43) = *((void *)v493 + 43);
            *((void *)v492 + 44) = v742;
            uint64_t v743 = *((void *)v493 + 46);
            *((void *)v492 + 45) = *((void *)v493 + 45);
            *((void *)v492 + 46) = v743;
            uint64_t v744 = *((void *)v493 + 47);
            v492[384] = v493[384];
            *((void *)v492 + 47) = v744;
            uint64_t v745 = *((void *)v493 + 50);
            *((void *)v492 + 49) = *((void *)v493 + 49);
            *((void *)v492 + 50) = v745;
            uint64_t v746 = *((void *)v493 + 52);
            *((void *)v492 + 51) = *((void *)v493 + 51);
            *((void *)v492 + 52) = v746;
            uint64_t v747 = *(int *)(v494 + 140);
            v2449 = &v492[v747];
            uint64_t v748 = &v493[v747];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v748, 1, v2642))
            {
              uint64_t v749 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2449, v748, *(void *)(*(void *)(v749 - 8) + 64));
            }
            else
            {
              v2631(v2449, v748, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2449, 0, 1, v2642);
            }
            uint64_t v1347 = *(int *)(v494 + 144);
            uint64_t v1348 = &v492[v1347];
            uint64_t v1349 = &v493[v1347];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v493[v1347], 1, v2642))
            {
              uint64_t v1350 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1348, v1349, *(void *)(*(void *)(v1350 - 8) + 64));
            }
            else
            {
              v2631(v1348, v1349, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1348, 0, 1, v2642);
            }
            uint64_t v344 = v2606;
            __swift_storeEnumTagSinglePayload((uint64_t)v492, 0, 1, v494);
          }
          uint64_t v1355 = v346[6];
          uint64_t v1356 = &v344[v1355];
          uint64_t v1357 = &v345[v1355];
          uint64_t v1358 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1357, 1, v1358))
          {
            uint64_t v1359 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v1356, v1357, *(void *)(*(void *)(v1359 - 8) + 64));
          }
          else
          {
            uint64_t v1360 = *((void *)v1357 + 1);
            *(void *)uint64_t v1356 = *(void *)v1357;
            *((void *)v1356 + 1) = v1360;
            uint64_t v1361 = *((void *)v1357 + 3);
            *((void *)v1356 + 2) = *((void *)v1357 + 2);
            *((void *)v1356 + 3) = v1361;
            uint64_t v1362 = *((void *)v1357 + 5);
            *((void *)v1356 + 4) = *((void *)v1357 + 4);
            *((void *)v1356 + 5) = v1362;
            uint64_t v1363 = *((void *)v1357 + 7);
            *((void *)v1356 + 6) = *((void *)v1357 + 6);
            *((void *)v1356 + 7) = v1363;
            uint64_t v1364 = *((void *)v1357 + 9);
            *((void *)v1356 + 8) = *((void *)v1357 + 8);
            *((void *)v1356 + 9) = v1364;
            uint64_t v1365 = *((void *)v1357 + 11);
            *((void *)v1356 + 10) = *((void *)v1357 + 10);
            *((void *)v1356 + 11) = v1365;
            uint64_t v1366 = *((void *)v1357 + 13);
            *((void *)v1356 + 12) = *((void *)v1357 + 12);
            *((void *)v1356 + 13) = v1366;
            uint64_t v1367 = *((void *)v1357 + 15);
            *((void *)v1356 + 14) = *((void *)v1357 + 14);
            *((void *)v1356 + 15) = v1367;
            v1356[128] = v1357[128];
            *(_WORD *)(v1356 + 129) = *(_WORD *)(v1357 + 129);
            uint64_t v1368 = *((void *)v1357 + 18);
            *((void *)v1356 + 17) = *((void *)v1357 + 17);
            *((void *)v1356 + 18) = v1368;
            uint64_t v1369 = *((void *)v1357 + 20);
            *((void *)v1356 + 19) = *((void *)v1357 + 19);
            *((void *)v1356 + 20) = v1369;
            uint64_t v1370 = *((void *)v1357 + 22);
            *((void *)v1356 + 21) = *((void *)v1357 + 21);
            *((void *)v1356 + 22) = v1370;
            uint64_t v1371 = *((void *)v1357 + 24);
            *((void *)v1356 + 23) = *((void *)v1357 + 23);
            *((void *)v1356 + 24) = v1371;
            uint64_t v2559 = *((void *)v1357 + 26);
            *((void *)v1356 + 25) = *((void *)v1357 + 25);
            *((void *)v1356 + 26) = v2559;
            uint64_t v1372 = *((void *)v1357 + 28);
            *((void *)v1356 + 27) = *((void *)v1357 + 27);
            *((void *)v1356 + 28) = v1372;
            uint64_t v1373 = *((void *)v1357 + 30);
            *((void *)v1356 + 29) = *((void *)v1357 + 29);
            *((void *)v1356 + 30) = v1373;
            uint64_t v1374 = *((void *)v1357 + 32);
            *((void *)v1356 + 31) = *((void *)v1357 + 31);
            *((void *)v1356 + 32) = v1374;
            uint64_t v1375 = *((void *)v1357 + 34);
            *((void *)v1356 + 33) = *((void *)v1357 + 33);
            *((void *)v1356 + 34) = v1375;
            uint64_t v1376 = *((void *)v1357 + 36);
            uint64_t v1377 = *((void *)v1357 + 35);
            v1356[296] = v1357[296];
            *((void *)v1356 + 35) = v1377;
            *((void *)v1356 + 36) = v1376;
            uint64_t v1378 = *(int *)(v1358 + 112);
            __dsta = &v1356[v1378];
            v2460 = (void *)v1358;
            uint64_t v1379 = &v1357[v1378];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1379, 1, v2642))
            {
              uint64_t v1380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dsta, v1379, *(void *)(*(void *)(v1380 - 8) + 64));
            }
            else
            {
              v2631(__dsta, v1379, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v2642);
            }
            uint64_t v1407 = *(int *)(v1358 + 116);
            uint64_t v1408 = &v1356[v1407];
            uint64_t v1409 = &v1357[v1407];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1357[v1407], 1, v2642))
            {
              uint64_t v1410 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1408, v1409, *(void *)(*(void *)(v1410 - 8) + 64));
            }
            else
            {
              v2631(v1408, v1409, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1408, 0, 1, v2642);
            }
            uint64_t v344 = v2606;
            __swift_storeEnumTagSinglePayload((uint64_t)v1356, 0, 1, (uint64_t)v2460);
          }
          uint64_t v1415 = v346[7];
          uint64_t v1416 = &v344[v1415];
          uint64_t v1417 = &v345[v1415];
          uint64_t v1418 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1417, 1, (uint64_t)v1418))
          {
            uint64_t v1419 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v1416, v1417, *(void *)(*(void *)(v1419 - 8) + 64));
          }
          else
          {
            uint64_t v1420 = *((void *)v1417 + 1);
            *(void *)uint64_t v1416 = *(void *)v1417;
            *((void *)v1416 + 1) = v1420;
            uint64_t v1421 = *((void *)v1417 + 3);
            *((void *)v1416 + 2) = *((void *)v1417 + 2);
            *((void *)v1416 + 3) = v1421;
            uint64_t v1422 = *((void *)v1417 + 5);
            *((void *)v1416 + 4) = *((void *)v1417 + 4);
            *((void *)v1416 + 5) = v1422;
            uint64_t v1423 = *((void *)v1417 + 7);
            *((void *)v1416 + 6) = *((void *)v1417 + 6);
            *((void *)v1416 + 7) = v1423;
            uint64_t v1424 = *((void *)v1417 + 9);
            *((void *)v1416 + 8) = *((void *)v1417 + 8);
            *((void *)v1416 + 9) = v1424;
            uint64_t v1425 = *((void *)v1417 + 11);
            *((void *)v1416 + 10) = *((void *)v1417 + 10);
            *((void *)v1416 + 11) = v1425;
            uint64_t v1426 = *((void *)v1417 + 13);
            *((void *)v1416 + 12) = *((void *)v1417 + 12);
            *((void *)v1416 + 13) = v1426;
            uint64_t v1427 = *((void *)v1417 + 15);
            *((void *)v1416 + 14) = *((void *)v1417 + 14);
            *((void *)v1416 + 15) = v1427;
            v1416[128] = v1417[128];
            *(_WORD *)(v1416 + 129) = *(_WORD *)(v1417 + 129);
            uint64_t v1428 = *((void *)v1417 + 18);
            *((void *)v1416 + 17) = *((void *)v1417 + 17);
            *((void *)v1416 + 18) = v1428;
            uint64_t v1429 = *((void *)v1417 + 20);
            *((void *)v1416 + 19) = *((void *)v1417 + 19);
            *((void *)v1416 + 20) = v1429;
            uint64_t v1430 = *((void *)v1417 + 22);
            *((void *)v1416 + 21) = *((void *)v1417 + 21);
            *((void *)v1416 + 22) = v1430;
            uint64_t v2454 = *((void *)v1417 + 24);
            *((void *)v1416 + 23) = *((void *)v1417 + 23);
            *((void *)v1416 + 24) = v2454;
            uint64_t v1431 = *((void *)v1417 + 26);
            *((void *)v1416 + 25) = *((void *)v1417 + 25);
            *((void *)v1416 + 26) = v1431;
            uint64_t v1432 = *((void *)v1417 + 28);
            *((void *)v1416 + 27) = *((void *)v1417 + 27);
            *((void *)v1416 + 28) = v1432;
            uint64_t v2560 = *((void *)v1417 + 30);
            *((void *)v1416 + 29) = *((void *)v1417 + 29);
            *((void *)v1416 + 30) = v2560;
            uint64_t v1433 = *((void *)v1417 + 32);
            *((void *)v1416 + 31) = *((void *)v1417 + 31);
            *((void *)v1416 + 32) = v1433;
            uint64_t v1434 = *((void *)v1417 + 34);
            *((void *)v1416 + 33) = *((void *)v1417 + 33);
            *((void *)v1416 + 34) = v1434;
            uint64_t v1435 = *((void *)v1417 + 36);
            uint64_t v1436 = *((void *)v1417 + 35);
            v1416[296] = v1417[296];
            *((void *)v1416 + 35) = v1436;
            *((void *)v1416 + 36) = v1435;
            uint64_t v1437 = *((void *)v1417 + 39);
            *((void *)v1416 + 38) = *((void *)v1417 + 38);
            *((void *)v1416 + 39) = v1437;
            uint64_t v1438 = v1418[29];
            v2453 = &v1416[v1438];
            uint64_t v1439 = &v1417[v1438];
            uint64_t v1440 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1439, 1, v1440))
            {
              uint64_t v1441 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2453, v1439, *(void *)(*(void *)(v1441 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1440 - 8) + 16))(v2453, v1439, v1440);
              __swift_storeEnumTagSinglePayload((uint64_t)v2453, 0, 1, v1440);
            }
            uint64_t v1469 = v1418[30];
            uint64_t v1470 = &v1416[v1469];
            uint64_t v1471 = &v1417[v1469];
            uint64_t v1472 = *((void *)v1471 + 1);
            *(void *)uint64_t v1470 = *(void *)v1471;
            *((void *)v1470 + 1) = v1472;
            uint64_t v1473 = v1418[31];
            v1474 = &v1416[v1473];
            uint64_t v1475 = &v1417[v1473];
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1475, 1, v2642))
            {
              uint64_t v1476 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1474, v1475, *(void *)(*(void *)(v1476 - 8) + 64));
            }
            else
            {
              v2631(v1474, v1475, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1474, 0, 1, v2642);
            }
            uint64_t v1485 = v1418[32];
            uint64_t v1486 = &v1416[v1485];
            uint64_t v1487 = &v1417[v1485];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1417[v1485], 1, v2642))
            {
              uint64_t v1488 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1486, v1487, *(void *)(*(void *)(v1488 - 8) + 64));
            }
            else
            {
              v2631(v1486, v1487, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1486, 0, 1, v2642);
            }
            v346 = v2588;
            uint64_t v344 = v2606;
            __swift_storeEnumTagSinglePayload((uint64_t)v1416, 0, 1, (uint64_t)v1418);
          }
          uint64_t v1493 = v346[8];
          uint64_t v1494 = &v344[v1493];
          uint64_t v1495 = &v345[v1493];
          uint64_t v1496 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1495, 1, v1496))
          {
            uint64_t v1497 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1494, v1495, *(void *)(*(void *)(v1497 - 8) + 64));
          }
          else
          {
            uint64_t v1498 = *((void *)v1495 + 1);
            *(void *)uint64_t v1494 = *(void *)v1495;
            *((void *)v1494 + 1) = v1498;
            uint64_t v1499 = *((void *)v1495 + 3);
            *((void *)v1494 + 2) = *((void *)v1495 + 2);
            *((void *)v1494 + 3) = v1499;
            uint64_t v1500 = *((void *)v1495 + 5);
            *((void *)v1494 + 4) = *((void *)v1495 + 4);
            *((void *)v1494 + 5) = v1500;
            uint64_t v1501 = *((void *)v1495 + 7);
            *((void *)v1494 + 6) = *((void *)v1495 + 6);
            *((void *)v1494 + 7) = v1501;
            uint64_t v1502 = *((void *)v1495 + 9);
            *((void *)v1494 + 8) = *((void *)v1495 + 8);
            *((void *)v1494 + 9) = v1502;
            uint64_t v1503 = *((void *)v1495 + 11);
            *((void *)v1494 + 10) = *((void *)v1495 + 10);
            *((void *)v1494 + 11) = v1503;
            uint64_t v1504 = *((void *)v1495 + 13);
            *((void *)v1494 + 12) = *((void *)v1495 + 12);
            *((void *)v1494 + 13) = v1504;
            uint64_t v1505 = *((void *)v1495 + 15);
            *((void *)v1494 + 14) = *((void *)v1495 + 14);
            *((void *)v1494 + 15) = v1505;
            v1494[128] = v1495[128];
            *(_WORD *)(v1494 + 129) = *(_WORD *)(v1495 + 129);
            uint64_t v1506 = *((void *)v1495 + 18);
            *((void *)v1494 + 17) = *((void *)v1495 + 17);
            *((void *)v1494 + 18) = v1506;
            uint64_t v1507 = *((void *)v1495 + 20);
            *((void *)v1494 + 19) = *((void *)v1495 + 19);
            *((void *)v1494 + 20) = v1507;
            uint64_t v1508 = *((void *)v1495 + 22);
            *((void *)v1494 + 21) = *((void *)v1495 + 21);
            *((void *)v1494 + 22) = v1508;
            uint64_t v1509 = *((void *)v1495 + 24);
            *((void *)v1494 + 23) = *((void *)v1495 + 23);
            *((void *)v1494 + 24) = v1509;
            uint64_t v1510 = *((void *)v1495 + 26);
            *((void *)v1494 + 25) = *((void *)v1495 + 25);
            *((void *)v1494 + 26) = v1510;
            uint64_t v1511 = *((void *)v1495 + 28);
            *((void *)v1494 + 27) = *((void *)v1495 + 27);
            *((void *)v1494 + 28) = v1511;
            uint64_t v1512 = *((void *)v1495 + 30);
            *((void *)v1494 + 29) = *((void *)v1495 + 29);
            *((void *)v1494 + 30) = v1512;
            uint64_t v1513 = *((void *)v1495 + 32);
            *((void *)v1494 + 31) = *((void *)v1495 + 31);
            *((void *)v1494 + 32) = v1513;
            uint64_t v1515 = *((void *)v1495 + 33);
            uint64_t v1514 = *((void *)v1495 + 34);
            v1494[280] = v1495[280];
            *((void *)v1494 + 33) = v1515;
            *((void *)v1494 + 34) = v1514;
            uint64_t v1516 = (int *)v1496;
            uint64_t v1517 = *((void *)v1495 + 37);
            *((void *)v1494 + 36) = *((void *)v1495 + 36);
            *((void *)v1494 + 37) = v1517;
            uint64_t v2465 = v1516;
            uint64_t v1518 = v1516[27];
            v2463 = &v1494[v1518];
            uint64_t v1519 = &v1495[v1518];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1519, 1, v2642))
            {
              uint64_t v1520 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2463, v1519, *(void *)(*(void *)(v1520 - 8) + 64));
            }
            else
            {
              v2631(v2463, v1519, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2463, 0, 1, v2642);
            }
            uint64_t v1549 = v2465[28];
            uint64_t v1550 = &v1494[v1549];
            uint64_t v1551 = &v1495[v1549];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1495[v1549], 1, v2642))
            {
              uint64_t v1552 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1550, v1551, *(void *)(*(void *)(v1552 - 8) + 64));
            }
            else
            {
              v2631(v1550, v1551, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1550, 0, 1, v2642);
            }
            v346 = v2588;
            uint64_t v344 = v2606;
            __swift_storeEnumTagSinglePayload((uint64_t)v1494, 0, 1, (uint64_t)v2465);
          }
          uint64_t v1557 = v346[9];
          v1558 = &v344[v1557];
          uint64_t v1559 = &v345[v1557];
          uint64_t v1560 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1559, 1, v1560))
          {
            uint64_t v1561 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1558, v1559, *(void *)(*(void *)(v1561 - 8) + 64));
          }
          else
          {
            uint64_t v1562 = *((void *)v1559 + 1);
            *(void *)v1558 = *(void *)v1559;
            *((void *)v1558 + 1) = v1562;
            uint64_t v1563 = *((void *)v1559 + 3);
            *((void *)v1558 + 2) = *((void *)v1559 + 2);
            *((void *)v1558 + 3) = v1563;
            uint64_t v1564 = *((void *)v1559 + 5);
            *((void *)v1558 + 4) = *((void *)v1559 + 4);
            *((void *)v1558 + 5) = v1564;
            uint64_t v1565 = *((void *)v1559 + 7);
            *((void *)v1558 + 6) = *((void *)v1559 + 6);
            *((void *)v1558 + 7) = v1565;
            uint64_t v1566 = *((void *)v1559 + 9);
            *((void *)v1558 + 8) = *((void *)v1559 + 8);
            *((void *)v1558 + 9) = v1566;
            uint64_t v1567 = *((void *)v1559 + 11);
            *((void *)v1558 + 10) = *((void *)v1559 + 10);
            *((void *)v1558 + 11) = v1567;
            uint64_t v1568 = *((void *)v1559 + 13);
            *((void *)v1558 + 12) = *((void *)v1559 + 12);
            *((void *)v1558 + 13) = v1568;
            uint64_t v1569 = *((void *)v1559 + 15);
            *((void *)v1558 + 14) = *((void *)v1559 + 14);
            *((void *)v1558 + 15) = v1569;
            v1558[128] = v1559[128];
            *(_WORD *)(v1558 + 129) = *(_WORD *)(v1559 + 129);
            uint64_t v1570 = *((void *)v1559 + 18);
            *((void *)v1558 + 17) = *((void *)v1559 + 17);
            *((void *)v1558 + 18) = v1570;
            uint64_t v1571 = *((void *)v1559 + 20);
            *((void *)v1558 + 19) = *((void *)v1559 + 19);
            *((void *)v1558 + 20) = v1571;
            uint64_t v1572 = *((void *)v1559 + 22);
            *((void *)v1558 + 21) = *((void *)v1559 + 21);
            *((void *)v1558 + 22) = v1572;
            uint64_t v1573 = *((void *)v1559 + 24);
            *((void *)v1558 + 23) = *((void *)v1559 + 23);
            *((void *)v1558 + 24) = v1573;
            uint64_t v1574 = *((void *)v1559 + 26);
            *((void *)v1558 + 25) = *((void *)v1559 + 25);
            *((void *)v1558 + 26) = v1574;
            uint64_t v1575 = *((void *)v1559 + 28);
            *((void *)v1558 + 27) = *((void *)v1559 + 27);
            *((void *)v1558 + 28) = v1575;
            uint64_t v1576 = *((void *)v1559 + 30);
            *((void *)v1558 + 29) = *((void *)v1559 + 29);
            *((void *)v1558 + 30) = v1576;
            *((void *)v1558 + 31) = *((void *)v1559 + 31);
            uint64_t v2473 = (int *)v1560;
            uint64_t v1577 = *(int *)(v1560 + 96);
            uint64_t v2469 = &v1558[v1577];
            uint64_t v2477 = &v1559[v1577];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2477, 1, v2642))
            {
              uint64_t v1578 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2469, v2477, *(void *)(*(void *)(v1578 - 8) + 64));
            }
            else
            {
              v2631(v2469, v2477, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2469, 0, 1, v2642);
            }
            uint64_t v1601 = *(int *)(v1560 + 100);
            uint64_t v1602 = &v1558[v1601];
            uint64_t v1603 = &v1559[v1601];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1559[v1601], 1, v2642))
            {
              uint64_t v1604 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1602, v1603, *(void *)(*(void *)(v1604 - 8) + 64));
            }
            else
            {
              v2631(v1602, v1603, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1602, 0, 1, v2642);
            }
            uint64_t v1609 = v2473[26];
            uint64_t v1610 = &v1558[v1609];
            uint64_t v1611 = &v1559[v1609];
            uint64_t v1612 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1611, 1, v1612))
            {
              uint64_t v1613 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1610, v1611, *(void *)(*(void *)(v1613 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1612 - 8) + 16))(v1610, v1611, v1612);
              __swift_storeEnumTagSinglePayload((uint64_t)v1610, 0, 1, v1612);
            }
            v346 = v2588;
            uint64_t v344 = v2606;
            __swift_storeEnumTagSinglePayload((uint64_t)v1558, 0, 1, (uint64_t)v2473);
          }
          uint64_t v1618 = v346[10];
          v1619 = &v344[v1618];
          uint64_t v1620 = &v345[v1618];
          uint64_t v1621 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1620, 1, v1621))
          {
            uint64_t v1622 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1619, v1620, *(void *)(*(void *)(v1622 - 8) + 64));
          }
          else
          {
            uint64_t v1623 = *((void *)v1620 + 1);
            *(void *)v1619 = *(void *)v1620;
            *((void *)v1619 + 1) = v1623;
            uint64_t v1624 = *((void *)v1620 + 3);
            *((void *)v1619 + 2) = *((void *)v1620 + 2);
            *((void *)v1619 + 3) = v1624;
            uint64_t v1625 = *((void *)v1620 + 5);
            *((void *)v1619 + 4) = *((void *)v1620 + 4);
            *((void *)v1619 + 5) = v1625;
            uint64_t v1626 = *((void *)v1620 + 7);
            *((void *)v1619 + 6) = *((void *)v1620 + 6);
            *((void *)v1619 + 7) = v1626;
            uint64_t v1627 = *((void *)v1620 + 9);
            *((void *)v1619 + 8) = *((void *)v1620 + 8);
            *((void *)v1619 + 9) = v1627;
            uint64_t v1628 = *((void *)v1620 + 11);
            *((void *)v1619 + 10) = *((void *)v1620 + 10);
            *((void *)v1619 + 11) = v1628;
            uint64_t v1629 = *((void *)v1620 + 13);
            *((void *)v1619 + 12) = *((void *)v1620 + 12);
            *((void *)v1619 + 13) = v1629;
            uint64_t v1630 = *((void *)v1620 + 15);
            *((void *)v1619 + 14) = *((void *)v1620 + 14);
            *((void *)v1619 + 15) = v1630;
            v1619[128] = v1620[128];
            *(_WORD *)(v1619 + 129) = *(_WORD *)(v1620 + 129);
            uint64_t v1631 = *((void *)v1620 + 18);
            *((void *)v1619 + 17) = *((void *)v1620 + 17);
            *((void *)v1619 + 18) = v1631;
            uint64_t v1632 = *((void *)v1620 + 20);
            *((void *)v1619 + 19) = *((void *)v1620 + 19);
            *((void *)v1619 + 20) = v1632;
            uint64_t v1633 = *((void *)v1620 + 22);
            *((void *)v1619 + 21) = *((void *)v1620 + 21);
            *((void *)v1619 + 22) = v1633;
            uint64_t v1634 = *((void *)v1620 + 24);
            *((void *)v1619 + 23) = *((void *)v1620 + 23);
            *((void *)v1619 + 24) = v1634;
            uint64_t v1635 = *((void *)v1620 + 26);
            *((void *)v1619 + 25) = *((void *)v1620 + 25);
            *((void *)v1619 + 26) = v1635;
            *((void *)v1619 + 27) = *((void *)v1620 + 27);
            uint64_t v2484 = (int *)v1621;
            uint64_t v1636 = *(int *)(v1621 + 88);
            uint64_t v2479 = &v1619[v1636];
            uint64_t v2492 = &v1620[v1636];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2492, 1, v2642))
            {
              uint64_t v1637 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2479, v2492, *(void *)(*(void *)(v1637 - 8) + 64));
            }
            else
            {
              v2631(v2479, v2492, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2479, 0, 1, v2642);
            }
            uint64_t v1658 = *(int *)(v1621 + 92);
            uint64_t v1659 = &v1619[v1658];
            uint64_t v1660 = &v1620[v1658];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1620[v1658], 1, v2642))
            {
              uint64_t v1661 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1659, v1660, *(void *)(*(void *)(v1661 - 8) + 64));
            }
            else
            {
              v2631(v1659, v1660, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1659, 0, 1, v2642);
            }
            uint64_t v1666 = v2484[24];
            uint64_t v1667 = &v1619[v1666];
            uint64_t v1668 = &v1620[v1666];
            *(void *)uint64_t v1667 = *(void *)v1668;
            v1667[8] = v1668[8];
            uint64_t v1669 = v2484[25];
            v1670 = &v1619[v1669];
            uint64_t v1671 = &v1620[v1669];
            uint64_t v1672 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1671, 1, v1672))
            {
              uint64_t v1673 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1670, v1671, *(void *)(*(void *)(v1673 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1672 - 8) + 16))(v1670, v1671, v1672);
              __swift_storeEnumTagSinglePayload((uint64_t)v1670, 0, 1, v1672);
            }
            v346 = v2588;
            uint64_t v344 = v2606;
            __swift_storeEnumTagSinglePayload((uint64_t)v1619, 0, 1, (uint64_t)v2484);
          }
          uint64_t v1681 = v346[11];
          uint64_t v1682 = &v344[v1681];
          uint64_t v1683 = &v345[v1681];
          v1684 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1683, 1, (uint64_t)v1684))
          {
            uint64_t v1685 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1682, v1683, *(void *)(*(void *)(v1685 - 8) + 64));
          }
          else
          {
            uint64_t v1686 = *((void *)v1683 + 1);
            *(void *)uint64_t v1682 = *(void *)v1683;
            *((void *)v1682 + 1) = v1686;
            uint64_t v1687 = *((void *)v1683 + 3);
            *((void *)v1682 + 2) = *((void *)v1683 + 2);
            *((void *)v1682 + 3) = v1687;
            uint64_t v1688 = *((void *)v1683 + 5);
            *((void *)v1682 + 4) = *((void *)v1683 + 4);
            *((void *)v1682 + 5) = v1688;
            uint64_t v1689 = *((void *)v1683 + 7);
            *((void *)v1682 + 6) = *((void *)v1683 + 6);
            *((void *)v1682 + 7) = v1689;
            uint64_t v1690 = *((void *)v1683 + 9);
            *((void *)v1682 + 8) = *((void *)v1683 + 8);
            *((void *)v1682 + 9) = v1690;
            uint64_t v1691 = *((void *)v1683 + 11);
            *((void *)v1682 + 10) = *((void *)v1683 + 10);
            *((void *)v1682 + 11) = v1691;
            v1682[96] = v1683[96];
            uint64_t v1692 = *((void *)v1683 + 14);
            *((void *)v1682 + 13) = *((void *)v1683 + 13);
            *((void *)v1682 + 14) = v1692;
            uint64_t v1693 = v1684[13];
            uint64_t v2511 = &v1682[v1693];
            uint64_t v2521 = &v1683[v1693];
            uint64_t v1694 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2521, 1, v1694))
            {
              uint64_t v1695 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2511, v2521, *(void *)(*(void *)(v1695 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1694 - 8) + 16))(v2511, v2521, v1694);
              __swift_storeEnumTagSinglePayload((uint64_t)v2511, 0, 1, v1694);
            }
            uint64_t v1710 = v1684[14];
            v1711 = &v1682[v1710];
            v1712 = &v1683[v1710];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1683[v1710], 1, v1694))
            {
              uint64_t v1713 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1711, v1712, *(void *)(*(void *)(v1713 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1694 - 8) + 16))(v1711, v1712, v1694);
              __swift_storeEnumTagSinglePayload((uint64_t)v1711, 0, 1, v1694);
            }
            uint64_t v1718 = v1684[15];
            uint64_t v1719 = &v1682[v1718];
            v1720 = &v1683[v1718];
            uint64_t v2561 = *((void *)v1720 + 1);
            *(void *)uint64_t v1719 = *(void *)v1720;
            *((void *)v1719 + 1) = v2561;
            uint64_t v1721 = v1684[16];
            uint64_t v1722 = &v1682[v1721];
            v1723 = &v1683[v1721];
            uint64_t v1724 = *((void *)v1723 + 1);
            *(void *)uint64_t v1722 = *(void *)v1723;
            *((void *)v1722 + 1) = v1724;
            uint64_t v1725 = v1684[17];
            uint64_t v1726 = &v1682[v1725];
            v1727 = &v1683[v1725];
            uint64_t v1728 = *((void *)v1727 + 1);
            *(void *)uint64_t v1726 = *(void *)v1727;
            *((void *)v1726 + 1) = v1728;
            uint64_t v1729 = v1684[18];
            v2539 = &v1683[v1729];
            uint64_t v2547 = &v1682[v1729];
            uint64_t v1730 = type metadata accessor for DateComponents();
            v1731 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1730 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1731(v2547, v2539, v1730);
            v1731(&v1682[v1684[19]], &v1683[v1684[19]], v1730);
            uint64_t v1732 = v1684[20];
            uint64_t v1733 = &v1682[v1732];
            uint64_t v1734 = &v1683[v1732];
            uint64_t v1735 = *((void *)v1734 + 1);
            *(void *)uint64_t v1733 = *(void *)v1734;
            *((void *)v1733 + 1) = v1735;
            uint64_t v1736 = v1684[21];
            uint64_t v1737 = &v1682[v1736];
            uint64_t v1738 = &v1683[v1736];
            uint64_t v2562 = *((void *)v1738 + 1);
            *(void *)uint64_t v1737 = *(void *)v1738;
            *((void *)v1737 + 1) = v2562;
            uint64_t v1739 = v1684[22];
            uint64_t v1740 = &v1682[v1739];
            v1741 = &v1683[v1739];
            uint64_t v2548 = *((void *)v1741 + 1);
            *(void *)uint64_t v1740 = *(void *)v1741;
            *((void *)v1740 + 1) = v2548;
            uint64_t v1742 = v1684[23];
            uint64_t v1743 = &v1682[v1742];
            v1744 = &v1683[v1742];
            v2540 = (void *)*((void *)v1744 + 1);
            *(void *)uint64_t v1743 = *(void *)v1744;
            *((void *)v1743 + 1) = v2540;
            uint64_t v1745 = v1684[24];
            uint64_t v1746 = &v1682[v1745];
            v1747 = &v1683[v1745];
            uint64_t v2532 = (void *)*((void *)v1747 + 1);
            *(void *)uint64_t v1746 = *(void *)v1747;
            *((void *)v1746 + 1) = v2532;
            uint64_t v1748 = v1684[25];
            uint64_t v1749 = &v1682[v1748];
            uint64_t v1750 = &v1683[v1748];
            uint64_t v2522 = (void *)*((void *)v1750 + 1);
            *(void *)uint64_t v1749 = *(void *)v1750;
            *((void *)v1749 + 1) = v2522;
            uint64_t v1751 = v1684[26];
            v1752 = &v1682[v1751];
            uint64_t v1753 = &v1683[v1751];
            uint64_t v2512 = (void *)*((void *)v1753 + 1);
            *(void *)v1752 = *(void *)v1753;
            *((void *)v1752 + 1) = v2512;
            uint64_t v1754 = v1684[27];
            v1755 = &v1682[v1754];
            uint64_t v1756 = &v1683[v1754];
            uint64_t v2505 = (void *)*((void *)v1756 + 1);
            *(void *)v1755 = *(void *)v1756;
            *((void *)v1755 + 1) = v2505;
            uint64_t v1757 = v1684[28];
            v1758 = &v1682[v1757];
            v1759 = &v1683[v1757];
            uint64_t v2500 = (void *)*((void *)v1759 + 1);
            *(void *)v1758 = *(void *)v1759;
            *((void *)v1758 + 1) = v2500;
            uint64_t v1760 = v1684[29];
            v1761 = &v1682[v1760];
            v1762 = &v1683[v1760];
            uint64_t v2494 = (void *)*((void *)v1762 + 1);
            *(void *)v1761 = *(void *)v1762;
            *((void *)v1761 + 1) = v2494;
            uint64_t v1763 = v1684[30];
            v1764 = &v1682[v1763];
            v1765 = &v1683[v1763];
            uint64_t v2486 = (void *)*((void *)v1765 + 1);
            *(void *)v1764 = *(void *)v1765;
            *((void *)v1764 + 1) = v2486;
            uint64_t v1766 = v1684[31];
            v1767 = &v1682[v1766];
            v1768 = &v1683[v1766];
            uint64_t v2480 = (void *)*((void *)v1768 + 1);
            *(void *)v1767 = *(void *)v1768;
            *((void *)v1767 + 1) = v2480;
            uint64_t v1769 = v1684[32];
            v1770 = &v1682[v1769];
            v1771 = &v1683[v1769];
            uint64_t v1772 = *((void *)v1771 + 1);
            *(void *)v1770 = *(void *)v1771;
            *((void *)v1770 + 1) = v1772;
            *(void *)&v1682[v1684[33]] = *(void *)&v1683[v1684[33]];
            *(void *)&v1682[v1684[34]] = *(void *)&v1683[v1684[34]];
            uint64_t v1773 = v1684[35];
            v1774 = &v1682[v1773];
            uint64_t v1775 = &v1683[v1773];
            uint64_t v1776 = *((void *)v1775 + 1);
            *(void *)v1774 = *(void *)v1775;
            *((void *)v1774 + 1) = v1776;
            uint64_t v1777 = v1684[36];
            uint64_t v1778 = &v1682[v1777];
            v1779 = &v1683[v1777];
            uint64_t v1780 = *((void *)v1779 + 1);
            *(void *)uint64_t v1778 = *(void *)v1779;
            *((void *)v1778 + 1) = v1780;
            uint64_t v1781 = v1684[37];
            v1782 = &v1682[v1781];
            v1783 = &v1683[v1781];
            uint64_t v1784 = *((void *)v1783 + 1);
            *(void *)v1782 = *(void *)v1783;
            *((void *)v1782 + 1) = v1784;
            uint64_t v1785 = v1684[38];
            uint64_t v2467 = &v1682[v1785];
            v2470 = &v1683[v1785];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2470, 1, v2642))
            {
              uint64_t v1786 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2467, v2470, *(void *)(*(void *)(v1786 - 8) + 64));
            }
            else
            {
              v2631(v2467, v2470, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2467, 0, 1, v2642);
            }
            uint64_t v1856 = v1684[39];
            v1857 = &v1682[v1856];
            v1858 = &v1683[v1856];
            uint64_t v1859 = *((void *)v1858 + 1);
            *(void *)v1857 = *(void *)v1858;
            *((void *)v1857 + 1) = v1859;
            uint64_t v1860 = v1684[40];
            v1861 = &v1682[v1860];
            v1862 = &v1683[v1860];
            uint64_t v1863 = *((void *)v1862 + 1);
            *(void *)v1861 = *(void *)v1862;
            *((void *)v1861 + 1) = v1863;
            uint64_t v1864 = v1684[41];
            v1865 = &v1682[v1864];
            uint64_t v1866 = &v1683[v1864];
            v1865[8] = v1866[8];
            *(void *)v1865 = *(void *)v1866;
            uint64_t v1867 = v1684[42];
            v1868 = &v1682[v1867];
            uint64_t v1869 = &v1683[v1867];
            uint64_t v1870 = *((void *)v1869 + 1);
            *(void *)v1868 = *(void *)v1869;
            *((void *)v1868 + 1) = v1870;
            uint64_t v1871 = v1684[43];
            v1872 = &v1682[v1871];
            uint64_t v1873 = &v1683[v1871];
            *(_OWORD *)v1872 = *(_OWORD *)v1873;
            *(void *)(v1872 + 13) = *(void *)(v1873 + 13);
            uint64_t v1874 = v1684[44];
            v1875 = &v1682[v1874];
            uint64_t v1876 = &v1683[v1874];
            uint64_t v1877 = *((void *)v1876 + 1);
            *(void *)v1875 = *(void *)v1876;
            *((void *)v1875 + 1) = v1877;
            uint64_t v1878 = v1684[45];
            v1879 = &v1682[v1878];
            uint64_t v1880 = &v1683[v1878];
            uint64_t v1881 = *((void *)v1880 + 1);
            *(void *)v1879 = *(void *)v1880;
            *((void *)v1879 + 1) = v1881;
            uint64_t v1882 = v1684[46];
            v1883 = &v1682[v1882];
            uint64_t v1884 = &v1683[v1882];
            uint64_t v1885 = *((void *)v1884 + 1);
            *(void *)v1883 = *(void *)v1884;
            *((void *)v1883 + 1) = v1885;
            uint64_t v1886 = v1684[47];
            v1887 = &v1682[v1886];
            uint64_t v1888 = &v1683[v1886];
            uint64_t v1889 = *((void *)v1888 + 1);
            *(void *)v1887 = *(void *)v1888;
            *((void *)v1887 + 1) = v1889;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1682, 0, 1, (uint64_t)v1684);
            v346 = v2588;
            uint64_t v344 = v2606;
            uint64_t v345 = v2568;
          }
          uint64_t v1890 = v346[12];
          v1891 = &v344[v1890];
          v1892 = &v345[v1890];
          uint64_t v1893 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1892, 1, (uint64_t)v1893))
          {
            uint64_t v1894 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1891, v1892, *(void *)(*(void *)(v1894 - 8) + 64));
          }
          else
          {
            uint64_t v1895 = *((void *)v1892 + 1);
            *(void *)v1891 = *(void *)v1892;
            *((void *)v1891 + 1) = v1895;
            uint64_t v1896 = *((void *)v1892 + 3);
            *((void *)v1891 + 2) = *((void *)v1892 + 2);
            *((void *)v1891 + 3) = v1896;
            uint64_t v1897 = *((void *)v1892 + 5);
            *((void *)v1891 + 4) = *((void *)v1892 + 4);
            *((void *)v1891 + 5) = v1897;
            uint64_t v1898 = *((void *)v1892 + 7);
            *((void *)v1891 + 6) = *((void *)v1892 + 6);
            *((void *)v1891 + 7) = v1898;
            uint64_t v1899 = *((void *)v1892 + 9);
            *((void *)v1891 + 8) = *((void *)v1892 + 8);
            *((void *)v1891 + 9) = v1899;
            uint64_t v1900 = *((void *)v1892 + 11);
            *((void *)v1891 + 10) = *((void *)v1892 + 10);
            *((void *)v1891 + 11) = v1900;
            v1891[96] = v1892[96];
            uint64_t v1901 = *((void *)v1892 + 14);
            *((void *)v1891 + 13) = *((void *)v1892 + 13);
            *((void *)v1891 + 14) = v1901;
            uint64_t v1902 = *((void *)v1892 + 16);
            *((void *)v1891 + 15) = *((void *)v1892 + 15);
            *((void *)v1891 + 16) = v1902;
            uint64_t v1903 = v1893[14];
            uint64_t v2507 = &v1891[v1903];
            v1904 = &v1892[v1903];
            uint64_t v2514 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1904, 1, (uint64_t)v2514))
            {
              uint64_t v1905 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2507, v1904, *(void *)(*(void *)(v1905 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2514 - 1) + 16))(v2507, v1904, v2514);
              __swift_storeEnumTagSinglePayload((uint64_t)v2507, 0, 1, (uint64_t)v2514);
            }
            uint64_t v1956 = v1893[15];
            uint64_t v1957 = &v1891[v1956];
            uint64_t v1958 = &v1892[v1956];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1892[v1956], 1, (uint64_t)v2514))
            {
              uint64_t v1959 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1957, v1958, *(void *)(*(void *)(v1959 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2514 - 1) + 16))(v1957, v1958, v2514);
              __swift_storeEnumTagSinglePayload((uint64_t)v1957, 0, 1, (uint64_t)v2514);
            }
            uint64_t v1964 = v1893[16];
            uint64_t v1965 = &v1891[v1964];
            v1966 = &v1892[v1964];
            uint64_t v1967 = *((void *)v1966 + 1);
            *(void *)uint64_t v1965 = *(void *)v1966;
            *((void *)v1965 + 1) = v1967;
            uint64_t v1968 = v1893[17];
            uint64_t v1969 = &v1891[v1968];
            v1970 = &v1892[v1968];
            uint64_t v2565 = *((void *)v1970 + 1);
            *(void *)uint64_t v1969 = *(void *)v1970;
            *((void *)v1969 + 1) = v2565;
            uint64_t v1971 = v1893[18];
            uint64_t v1972 = &v1891[v1971];
            v1973 = &v1892[v1971];
            uint64_t v2551 = *((void *)v1973 + 1);
            *(void *)uint64_t v1972 = *(void *)v1973;
            *((void *)v1972 + 1) = v2551;
            uint64_t v1974 = v1893[19];
            uint64_t v1975 = &v1891[v1974];
            v1976 = &v1892[v1974];
            uint64_t v2542 = (void *)*((void *)v1976 + 1);
            *(void *)uint64_t v1975 = *(void *)v1976;
            *((void *)v1975 + 1) = v2542;
            uint64_t v1977 = v1893[20];
            uint64_t v1978 = &v1891[v1977];
            v1979 = &v1892[v1977];
            uint64_t v1980 = *((void *)v1979 + 1);
            *(void *)uint64_t v1978 = *(void *)v1979;
            *((void *)v1978 + 1) = v1980;
            *(void *)&v1891[v1893[21]] = *(void *)&v1892[v1893[21]];
            *(void *)&v1891[v1893[22]] = *(void *)&v1892[v1893[22]];
            uint64_t v1981 = v1893[23];
            v1982 = &v1891[v1981];
            v1983 = &v1892[v1981];
            *(void *)v1982 = *(void *)v1983;
            v1982[8] = v1983[8];
            uint64_t v1984 = v1893[24];
            v1985 = &v1891[v1984];
            v1986 = &v1892[v1984];
            *(void *)v1985 = *(void *)v1986;
            v1985[8] = v1986[8];
            uint64_t v1987 = v1893[25];
            v1988 = &v1891[v1987];
            v1989 = &v1892[v1987];
            uint64_t v1990 = *((void *)v1989 + 1);
            *(void *)v1988 = *(void *)v1989;
            *((void *)v1988 + 1) = v1990;
            uint64_t v1991 = v1893[26];
            v1992 = &v1891[v1991];
            v1993 = &v1892[v1991];
            uint64_t v1994 = *((void *)v1993 + 1);
            *(void *)v1992 = *(void *)v1993;
            *((void *)v1992 + 1) = v1994;
            uint64_t v1995 = v1893[27];
            v1996 = &v1891[v1995];
            v1997 = &v1892[v1995];
            uint64_t v1998 = *((void *)v1997 + 1);
            *(void *)v1996 = *(void *)v1997;
            *((void *)v1996 + 1) = v1998;
            uint64_t v1999 = v1893[28];
            v2000 = &v1891[v1999];
            v2001 = &v1892[v1999];
            uint64_t v2002 = *((void *)v2001 + 1);
            *(void *)v2000 = *(void *)v2001;
            *((void *)v2000 + 1) = v2002;
            uint64_t v2003 = v1893[29];
            v2004 = &v1891[v2003];
            v2005 = &v1892[v2003];
            *(void *)v2004 = *(void *)v2005;
            v2004[8] = v2005[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1891, 0, 1, (uint64_t)v1893);
            v346 = v2588;
            uint64_t v344 = v2606;
            uint64_t v345 = v2568;
          }
          uint64_t v2006 = v346[13];
          v2007 = &v344[v2006];
          v2008 = &v345[v2006];
          v2009 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2008, 1, (uint64_t)v2009))
          {
            uint64_t v2010 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v2007, v2008, *(void *)(*(void *)(v2010 - 8) + 64));
          }
          else
          {
            uint64_t v2011 = *((void *)v2008 + 1);
            *(void *)v2007 = *(void *)v2008;
            *((void *)v2007 + 1) = v2011;
            uint64_t v2012 = *((void *)v2008 + 3);
            *((void *)v2007 + 2) = *((void *)v2008 + 2);
            *((void *)v2007 + 3) = v2012;
            uint64_t v2013 = *((void *)v2008 + 5);
            *((void *)v2007 + 4) = *((void *)v2008 + 4);
            *((void *)v2007 + 5) = v2013;
            uint64_t v2014 = *((void *)v2008 + 7);
            *((void *)v2007 + 6) = *((void *)v2008 + 6);
            *((void *)v2007 + 7) = v2014;
            uint64_t v2015 = *((void *)v2008 + 9);
            *((void *)v2007 + 8) = *((void *)v2008 + 8);
            *((void *)v2007 + 9) = v2015;
            uint64_t v2016 = *((void *)v2008 + 11);
            *((void *)v2007 + 10) = *((void *)v2008 + 10);
            *((void *)v2007 + 11) = v2016;
            v2007[96] = v2008[96];
            uint64_t v2017 = *((void *)v2008 + 14);
            *((void *)v2007 + 13) = *((void *)v2008 + 13);
            *((void *)v2007 + 14) = v2017;
            uint64_t v2018 = *((void *)v2008 + 16);
            *((void *)v2007 + 15) = *((void *)v2008 + 15);
            *((void *)v2007 + 16) = v2018;
            uint64_t v2019 = v2009[14];
            uint64_t v2516 = &v2007[v2019];
            uint64_t v2525 = &v2008[v2019];
            uint64_t v2020 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2525, 1, v2020))
            {
              uint64_t v2021 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2516, v2525, *(void *)(*(void *)(v2021 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2020 - 8) + 16))(v2516, v2525, v2020);
              __swift_storeEnumTagSinglePayload((uint64_t)v2516, 0, 1, v2020);
            }
            uint64_t v2080 = v2009[15];
            uint64_t v2081 = &v2007[v2080];
            v2082 = &v2008[v2080];
            uint64_t v2083 = *((void *)v2082 + 1);
            *(void *)uint64_t v2081 = *(void *)v2082;
            *((void *)v2081 + 1) = v2083;
            uint64_t v2084 = v2009[16];
            uint64_t v2085 = &v2007[v2084];
            v2086 = &v2008[v2084];
            uint64_t v2585 = *((void *)v2086 + 1);
            *(void *)uint64_t v2085 = *(void *)v2086;
            *((void *)v2085 + 1) = v2585;
            uint64_t v2087 = v2009[17];
            uint64_t v2088 = &v2007[v2087];
            v2089 = &v2008[v2087];
            uint64_t v2567 = *((void *)v2089 + 1);
            *(void *)uint64_t v2088 = *(void *)v2089;
            *((void *)v2088 + 1) = v2567;
            uint64_t v2090 = v2009[18];
            uint64_t v2091 = &v2007[v2090];
            v2092 = &v2008[v2090];
            uint64_t v2093 = *((void *)v2092 + 1);
            *(void *)uint64_t v2091 = *(void *)v2092;
            *((void *)v2091 + 1) = v2093;
            uint64_t v2094 = v2009[19];
            uint64_t v2095 = &v2007[v2094];
            v2096 = &v2008[v2094];
            uint64_t v2097 = *((void *)v2096 + 1);
            *(void *)uint64_t v2095 = *(void *)v2096;
            *((void *)v2095 + 1) = v2097;
            *(void *)&v2007[v2009[20]] = *(void *)&v2008[v2009[20]];
            uint64_t v2098 = v2009[21];
            uint64_t v2099 = &v2007[v2098];
            v2100 = &v2008[v2098];
            uint64_t v2101 = *((void *)v2100 + 1);
            *(void *)uint64_t v2099 = *(void *)v2100;
            *((void *)v2099 + 1) = v2101;
            uint64_t v2102 = v2009[22];
            uint64_t v2103 = &v2007[v2102];
            v2104 = &v2008[v2102];
            uint64_t v2105 = *((void *)v2104 + 1);
            *(void *)uint64_t v2103 = *(void *)v2104;
            *((void *)v2103 + 1) = v2105;
            uint64_t v2106 = v2009[23];
            uint64_t v2107 = &v2007[v2106];
            v2108 = &v2008[v2106];
            uint64_t v2109 = *((void *)v2108 + 1);
            *(void *)uint64_t v2107 = *(void *)v2108;
            *((void *)v2107 + 1) = v2109;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2007, 0, 1, (uint64_t)v2009);
            v346 = v2588;
            uint64_t v344 = v2606;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v344, 0, 1, (uint64_t)v346);
        }
        uint64_t v2110 = v2650[22];
        uint64_t v2111 = &v9[v2110];
        v2112 = &v10[v2110];
        v2113 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2112, 1, (uint64_t)v2113))
        {
          uint64_t v2114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2111, v2112, *(void *)(*(void *)(v2114 - 8) + 64));
        }
        else
        {
          uint64_t v2115 = *((void *)v2112 + 1);
          *(void *)uint64_t v2111 = *(void *)v2112;
          *((void *)v2111 + 1) = v2115;
          uint64_t v2116 = *((void *)v2112 + 3);
          *((void *)v2111 + 2) = *((void *)v2112 + 2);
          *((void *)v2111 + 3) = v2116;
          uint64_t v2117 = *((void *)v2112 + 5);
          *((void *)v2111 + 4) = *((void *)v2112 + 4);
          *((void *)v2111 + 5) = v2117;
          uint64_t v2118 = *((void *)v2112 + 7);
          *((void *)v2111 + 6) = *((void *)v2112 + 6);
          *((void *)v2111 + 7) = v2118;
          uint64_t v2119 = *((void *)v2112 + 9);
          *((void *)v2111 + 8) = *((void *)v2112 + 8);
          *((void *)v2111 + 9) = v2119;
          uint64_t v2120 = *((void *)v2112 + 11);
          *((void *)v2111 + 10) = *((void *)v2112 + 10);
          *((void *)v2111 + 11) = v2120;
          uint64_t v2121 = v2113[10];
          uint64_t v2599 = &v2112[v2121];
          uint64_t v2613 = &v2111[v2121];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2599, 1, v2642))
          {
            uint64_t v2122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2613, v2599, *(void *)(*(void *)(v2122 - 8) + 64));
          }
          else
          {
            v2631(v2613, v2599, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2613, 0, 1, v2642);
          }
          uint64_t v2123 = v2113[11];
          v2124 = &v2111[v2123];
          uint64_t v2125 = &v2112[v2123];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2112[v2123], 1, v2642))
          {
            uint64_t v2126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2124, v2125, *(void *)(*(void *)(v2126 - 8) + 64));
          }
          else
          {
            v2631(v2124, v2125, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2124, 0, 1, v2642);
          }
          uint64_t v2127 = v2113[12];
          v2128 = &v2111[v2127];
          uint64_t v2129 = &v2112[v2127];
          uint64_t v2130 = *((void *)v2129 + 1);
          *(void *)v2128 = *(void *)v2129;
          *((void *)v2128 + 1) = v2130;
          uint64_t v2131 = v2113[13];
          v2132 = &v2111[v2131];
          uint64_t v2133 = &v2112[v2131];
          uint64_t v2134 = *((void *)v2133 + 1);
          *(void *)v2132 = *(void *)v2133;
          *((void *)v2132 + 1) = v2134;
          uint64_t v2135 = v2113[14];
          v2136 = &v2111[v2135];
          v2137 = &v2112[v2135];
          uint64_t v2138 = *((void *)v2137 + 1);
          *(void *)v2136 = *(void *)v2137;
          *((void *)v2136 + 1) = v2138;
          uint64_t v2139 = v2113[15];
          uint64_t v2140 = &v2111[v2139];
          uint64_t v2141 = &v2112[v2139];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2141, 1, v2642))
          {
            uint64_t v2142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2140, v2141, *(void *)(*(void *)(v2142 - 8) + 64));
          }
          else
          {
            v2631(v2140, v2141, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2140, 0, 1, v2642);
          }
          uint64_t v2143 = v2113[16];
          uint64_t v2144 = &v2111[v2143];
          uint64_t v2145 = &v2112[v2143];
          uint64_t v2146 = *((void *)v2145 + 1);
          *(void *)uint64_t v2144 = *(void *)v2145;
          *((void *)v2144 + 1) = v2146;
          uint64_t v2147 = v2113[17];
          uint64_t v2148 = &v2111[v2147];
          uint64_t v2149 = &v2112[v2147];
          uint64_t v2614 = *((void *)v2149 + 1);
          *(void *)uint64_t v2148 = *(void *)v2149;
          *((void *)v2148 + 1) = v2614;
          uint64_t v2150 = v2113[18];
          v2151 = &v2111[v2150];
          uint64_t v2152 = &v2112[v2150];
          uint64_t v2153 = *((void *)v2152 + 1);
          *(void *)v2151 = *(void *)v2152;
          *((void *)v2151 + 1) = v2153;
          uint64_t v2154 = v2113[19];
          v2155 = &v2111[v2154];
          uint64_t v2156 = &v2112[v2154];
          uint64_t v2157 = *((void *)v2156 + 1);
          *(void *)v2155 = *(void *)v2156;
          *((void *)v2155 + 1) = v2157;
          uint64_t v2158 = v2113[20];
          v2159 = &v2111[v2158];
          uint64_t v2160 = &v2112[v2158];
          uint64_t v2161 = *((void *)v2160 + 1);
          *(void *)v2159 = *(void *)v2160;
          *((void *)v2159 + 1) = v2161;
          uint64_t v2162 = v2113[21];
          v2163 = &v2111[v2162];
          uint64_t v2164 = &v2112[v2162];
          uint64_t v2165 = *((void *)v2164 + 1);
          *(void *)v2163 = *(void *)v2164;
          *((void *)v2163 + 1) = v2165;
          uint64_t v2166 = v2113[22];
          v2167 = &v2111[v2166];
          uint64_t v2168 = &v2112[v2166];
          uint64_t v2169 = *((void *)v2168 + 1);
          *(void *)v2167 = *(void *)v2168;
          *((void *)v2167 + 1) = v2169;
          uint64_t v2170 = v2113[23];
          uint64_t v2171 = &v2111[v2170];
          uint64_t v2172 = &v2112[v2170];
          uint64_t v2173 = *((void *)v2172 + 1);
          *(void *)uint64_t v2171 = *(void *)v2172;
          *((void *)v2171 + 1) = v2173;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2111, 0, 1, (uint64_t)v2113);
        }
        uint64_t v2174 = v2650[23];
        uint64_t v2175 = &v9[v2174];
        uint64_t v2176 = &v10[v2174];
        v2177 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2176, 1, (uint64_t)v2177))
        {
          uint64_t v2178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2175, v2176, *(void *)(*(void *)(v2178 - 8) + 64));
        }
        else
        {
          uint64_t v2179 = *((void *)v2176 + 1);
          *(void *)uint64_t v2175 = *(void *)v2176;
          *((void *)v2175 + 1) = v2179;
          uint64_t v2180 = *((void *)v2176 + 3);
          *((void *)v2175 + 2) = *((void *)v2176 + 2);
          *((void *)v2175 + 3) = v2180;
          uint64_t v2181 = *((void *)v2176 + 5);
          *((void *)v2175 + 4) = *((void *)v2176 + 4);
          *((void *)v2175 + 5) = v2181;
          uint64_t v2182 = *((void *)v2176 + 7);
          *((void *)v2175 + 6) = *((void *)v2176 + 6);
          *((void *)v2175 + 7) = v2182;
          uint64_t v2183 = *((void *)v2176 + 9);
          *((void *)v2175 + 8) = *((void *)v2176 + 8);
          *((void *)v2175 + 9) = v2183;
          uint64_t v2184 = *((void *)v2176 + 11);
          *((void *)v2175 + 10) = *((void *)v2176 + 10);
          *((void *)v2175 + 11) = v2184;
          uint64_t v2185 = v2177[11];
          v2615 = &v2175[v2185];
          v2586 = &v2176[v2185];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2586, 1, v2642))
          {
            uint64_t v2186 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2615, v2586, *(void *)(*(void *)(v2186 - 8) + 64));
          }
          else
          {
            v2631(v2615, v2586, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2615, 0, 1, v2642);
          }
          uint64_t v2187 = v2177[12];
          uint64_t v2188 = &v2175[v2187];
          v2189 = &v2176[v2187];
          uint64_t v2190 = *((void *)v2189 + 1);
          *(void *)uint64_t v2188 = *(void *)v2189;
          *((void *)v2188 + 1) = v2190;
          *(void *)&v2175[v2177[13]] = *(void *)&v2176[v2177[13]];
          uint64_t v2191 = v2177[14];
          uint64_t v2192 = &v2175[v2191];
          uint64_t v2193 = &v2176[v2191];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2193, 1, v2642))
          {
            uint64_t v2194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2192, v2193, *(void *)(*(void *)(v2194 - 8) + 64));
          }
          else
          {
            v2631(v2192, v2193, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2192, 0, 1, v2642);
          }
          *(void *)&v2175[v2177[15]] = *(void *)&v2176[v2177[15]];
          *(void *)&v2175[v2177[16]] = *(void *)&v2176[v2177[16]];
          uint64_t v2195 = v2177[17];
          uint64_t v2196 = &v2175[v2195];
          uint64_t v2197 = &v2176[v2195];
          uint64_t v2198 = *((void *)v2197 + 1);
          *(void *)uint64_t v2196 = *(void *)v2197;
          *((void *)v2196 + 1) = v2198;
          *(void *)&v2175[v2177[18]] = *(void *)&v2176[v2177[18]];
          *(void *)&v2175[v2177[19]] = *(void *)&v2176[v2177[19]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2175, 0, 1, (uint64_t)v2177);
        }
        uint64_t v2199 = v2650[24];
        v2200 = &v9[v2199];
        v2201 = &v10[v2199];
        uint64_t v2202 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2201, 1, (uint64_t)v2202))
        {
          uint64_t v2203 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2200, v2201, *(void *)(*(void *)(v2203 - 8) + 64));
        }
        else
        {
          uint64_t v2204 = *((void *)v2201 + 1);
          *(void *)v2200 = *(void *)v2201;
          *((void *)v2200 + 1) = v2204;
          uint64_t v2205 = *((void *)v2201 + 3);
          *((void *)v2200 + 2) = *((void *)v2201 + 2);
          *((void *)v2200 + 3) = v2205;
          uint64_t v2206 = *((void *)v2201 + 5);
          *((void *)v2200 + 4) = *((void *)v2201 + 4);
          *((void *)v2200 + 5) = v2206;
          uint64_t v2207 = *((void *)v2201 + 7);
          *((void *)v2200 + 6) = *((void *)v2201 + 6);
          *((void *)v2200 + 7) = v2207;
          uint64_t v2208 = v2202[8];
          v2600 = &v2201[v2208];
          uint64_t v2616 = &v2200[v2208];
          uint64_t v2209 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2600, 1, v2209))
          {
            uint64_t v2210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2616, v2600, *(void *)(*(void *)(v2210 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2209 - 8) + 16))(v2616, v2600, v2209);
            __swift_storeEnumTagSinglePayload((uint64_t)v2616, 0, 1, v2209);
          }
          uint64_t v2211 = v2202[9];
          uint64_t v2212 = &v2200[v2211];
          v2213 = &v2201[v2211];
          uint64_t v2214 = *((void *)v2213 + 1);
          *(void *)uint64_t v2212 = *(void *)v2213;
          *((void *)v2212 + 1) = v2214;
          uint64_t v2215 = v2202[10];
          uint64_t v2216 = &v2200[v2215];
          v2217 = &v2201[v2215];
          uint64_t v2218 = *((void *)v2217 + 1);
          *(void *)uint64_t v2216 = *(void *)v2217;
          *((void *)v2216 + 1) = v2218;
          uint64_t v2219 = v2202[11];
          uint64_t v2220 = &v2200[v2219];
          v2221 = &v2201[v2219];
          uint64_t v2222 = *((void *)v2221 + 1);
          *(void *)uint64_t v2220 = *(void *)v2221;
          *((void *)v2220 + 1) = v2222;
          uint64_t v2223 = v2202[12];
          uint64_t v2224 = &v2200[v2223];
          v2225 = &v2201[v2223];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2225, 1, v2642))
          {
            uint64_t v2226 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2224, v2225, *(void *)(*(void *)(v2226 - 8) + 64));
          }
          else
          {
            v2631(v2224, v2225, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2224, 0, 1, v2642);
          }
          uint64_t v2227 = v2202[13];
          uint64_t v2228 = &v2200[v2227];
          v2229 = &v2201[v2227];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2201[v2227], 1, v2642))
          {
            uint64_t v2230 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2228, v2229, *(void *)(*(void *)(v2230 - 8) + 64));
          }
          else
          {
            v2631(v2228, v2229, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2228, 0, 1, v2642);
          }
          uint64_t v2231 = v2202[14];
          uint64_t v2232 = &v2200[v2231];
          uint64_t v2233 = &v2201[v2231];
          *(void *)uint64_t v2232 = *(void *)v2233;
          v2232[8] = v2233[8];
          uint64_t v2234 = v2202[15];
          v2235 = &v2200[v2234];
          uint64_t v2236 = &v2201[v2234];
          uint64_t v2237 = *((void *)v2236 + 1);
          *(void *)v2235 = *(void *)v2236;
          *((void *)v2235 + 1) = v2237;
          uint64_t v2238 = v2202[16];
          uint64_t v2239 = &v2200[v2238];
          uint64_t v2240 = &v2201[v2238];
          uint64_t v2241 = *((void *)v2240 + 1);
          *(void *)uint64_t v2239 = *(void *)v2240;
          *((void *)v2239 + 1) = v2241;
          uint64_t v2242 = v2202[17];
          v2243 = &v2200[v2242];
          v2244 = &v2201[v2242];
          uint64_t v2245 = *((void *)v2244 + 1);
          *(void *)v2243 = *(void *)v2244;
          *((void *)v2243 + 1) = v2245;
          uint64_t v2246 = v2202[18];
          v2247 = &v2200[v2246];
          v2248 = &v2201[v2246];
          uint64_t v2249 = *((void *)v2248 + 1);
          *(void *)v2247 = *(void *)v2248;
          *((void *)v2247 + 1) = v2249;
          uint64_t v2250 = v2202[19];
          v2251 = &v2200[v2250];
          v2252 = &v2201[v2250];
          uint64_t v2253 = *((void *)v2252 + 1);
          *(void *)v2251 = *(void *)v2252;
          *((void *)v2251 + 1) = v2253;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2200, 0, 1, (uint64_t)v2202);
        }
        uint64_t v1346 = v2650[25];
LABEL_537:
        v2429 = &v9[v1346];
        v2430 = &v10[v1346];
        uint64_t v2431 = *(void *)&v10[v1346 + 8];
        if (v2431)
        {
          *(void *)v2429 = *(void *)v2430;
          *((void *)v2429 + 1) = v2431;
          uint64_t v2432 = *((void *)v2430 + 3);
          *((void *)v2429 + 2) = *((void *)v2430 + 2);
          *((void *)v2429 + 3) = v2432;
          uint64_t v2433 = *((void *)v2430 + 5);
          *((void *)v2429 + 4) = *((void *)v2430 + 4);
          *((void *)v2429 + 5) = v2433;
          uint64_t v2434 = *((void *)v2430 + 7);
          *((void *)v2429 + 6) = *((void *)v2430 + 6);
          *((void *)v2429 + 7) = v2434;
          uint64_t v2435 = *((void *)v2430 + 9);
          *((void *)v2429 + 8) = *((void *)v2430 + 8);
          *((void *)v2429 + 9) = v2435;
          uint64_t v2436 = *((void *)v2430 + 11);
          *((void *)v2429 + 10) = *((void *)v2430 + 10);
          *((void *)v2429 + 11) = v2436;
          uint64_t v2437 = *((void *)v2430 + 13);
          *((void *)v2429 + 12) = *((void *)v2430 + 12);
          *((void *)v2429 + 13) = v2437;
          uint64_t v2438 = *((void *)v2430 + 15);
          *((void *)v2429 + 14) = *((void *)v2430 + 14);
          *((void *)v2429 + 15) = v2438;
          uint64_t v2439 = *((void *)v2430 + 17);
          *((void *)v2429 + 16) = *((void *)v2430 + 16);
          *((void *)v2429 + 17) = v2439;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_539:
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v2429, v2430, 0x90uLL);
        }
        uint64_t v5 = v2661;
        goto LABEL_542;
    }
    goto LABEL_543;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  return v5;
}

void *assignWithCopy for ResultsDialog(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = a2[2] - 1;
  if ((unint64_t)(a1[2] - 1) < 3)
  {
    if (v6 >= 3)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 < 3)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)(a1 + 1), &demangling cache variable for type metadata for (disambiguationDialog: String?));
LABEL_6:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    goto LABEL_8;
  }
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    outlined destroy of AnswerSynthesisResult((uint64_t)a1 + v7, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
    uint64_t v10 = type metadata accessor for AnswerSynthesisResult();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = *((void *)v9 + 1);
      *((void *)v8 + 2) = *((void *)v9 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_545:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          uint64_t v1757 = (int *)type metadata accessor for MobileSMSDocument(0);
          uint64_t v23 = v1757[10];
          uint64_t v1743 = &v8[v23];
          uint64_t v24 = &v9[v23];
          uint64_t v25 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
          {
            uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1743, v24, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v1743, v24, v25);
            __swift_storeEnumTagSinglePayload((uint64_t)v1743, 0, 1, v25);
          }
          uint64_t v144 = v1757[11];
          uint64_t v145 = &v8[v144];
          uint64_t v146 = &v9[v144];
          uint64_t v147 = type metadata accessor for URL();
          uint64_t v1746 = v147;
          uint64_t v1750 = v25;
          if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, v147))
          {
            uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v145, v146, *(void *)(*(void *)(v148 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
            __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v147);
          }
          *(void *)&v8[v1757[12]] = *(void *)&v9[v1757[12]];
          uint64_t v281 = v1757[13];
          uint64_t v282 = &v8[v281];
          uint64_t v283 = &v9[v281];
          *(void *)uint64_t v282 = *(void *)v283;
          *((void *)v282 + 1) = *((void *)v283 + 1);
          uint64_t v284 = v1757[14];
          uint64_t v285 = &v8[v284];
          uint64_t v286 = &v9[v284];
          *(void *)uint64_t v285 = *(void *)v286;
          *((void *)v285 + 1) = *((void *)v286 + 1);
          *(void *)&v8[v1757[15]] = *(void *)&v9[v1757[15]];
          *(void *)&v8[v1757[16]] = *(void *)&v9[v1757[16]];
          uint64_t v287 = v1757[17];
          uint64_t v288 = &v8[v287];
          uint64_t v289 = &v9[v287];
          uint64_t v290 = *(void *)&v9[v287];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v290)
          {
            *(void *)uint64_t v288 = v290;
            *((void *)v288 + 1) = *((void *)v289 + 1);
            *((void *)v288 + 2) = *((void *)v289 + 2);
            *((void *)v288 + 3) = *((void *)v289 + 3);
            *((void *)v288 + 4) = *((void *)v289 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v422 = *(_OWORD *)v289;
            long long v423 = *((_OWORD *)v289 + 1);
            *((void *)v288 + 4) = *((void *)v289 + 4);
            *(_OWORD *)uint64_t v288 = v422;
            *((_OWORD *)v288 + 1) = v423;
          }
          uint64_t v424 = v1757[18];
          uint64_t v425 = &v8[v424];
          uint64_t v426 = &v9[v424];
          *(void *)uint64_t v425 = *(void *)v426;
          *((void *)v425 + 1) = *((void *)v426 + 1);
          uint64_t v427 = v1757[19];
          uint64_t v428 = &v8[v427];
          uint64_t v429 = &v9[v427];
          uint64_t v430 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v429, 1, (uint64_t)v430))
          {
            uint64_t v431 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v428, v429, *(void *)(*(void *)(v431 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v428 = *(void *)v429;
            *((void *)v428 + 1) = *((void *)v429 + 1);
            uint64_t v464 = v430[5];
            uint64_t v465 = &v428[v464];
            uint64_t v466 = &v429[v464];
            uint64_t v467 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v1736 = v430;
            uint64_t v1707 = v429;
            if (__swift_getEnumTagSinglePayload((uint64_t)v466, 1, v467))
            {
              uint64_t v468 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v465, v466, *(void *)(*(void *)(v468 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v465 = *(void *)v466;
              *((void *)v465 + 1) = *((void *)v466 + 1);
              *((void *)v465 + 2) = *((void *)v466 + 2);
              *((void *)v465 + 3) = *((void *)v466 + 3);
              *((void *)v465 + 4) = *((void *)v466 + 4);
              *((void *)v465 + 5) = *((void *)v466 + 5);
              *((void *)v465 + 6) = *((void *)v466 + 6);
              *((void *)v465 + 7) = *((void *)v466 + 7);
              *((void *)v465 + 8) = *((void *)v466 + 8);
              *((void *)v465 + 9) = *((void *)v466 + 9);
              *((void *)v465 + 10) = *((void *)v466 + 10);
              *((void *)v465 + 11) = *((void *)v466 + 11);
              *((void *)v465 + 12) = *((void *)v466 + 12);
              *((void *)v465 + 13) = *((void *)v466 + 13);
              *((void *)v465 + 14) = *((void *)v466 + 14);
              *((void *)v465 + 15) = *((void *)v466 + 15);
              v465[128] = v466[128];
              v465[129] = v466[129];
              v465[130] = v466[130];
              *((void *)v465 + 17) = *((void *)v466 + 17);
              *((void *)v465 + 18) = *((void *)v466 + 18);
              *((void *)v465 + 19) = *((void *)v466 + 19);
              *((void *)v465 + 20) = *((void *)v466 + 20);
              *((void *)v465 + 21) = *((void *)v466 + 21);
              *((void *)v465 + 22) = *((void *)v466 + 22);
              *((void *)v465 + 23) = *((void *)v466 + 23);
              *((void *)v465 + 24) = *((void *)v466 + 24);
              *((void *)v465 + 25) = *((void *)v466 + 25);
              *((void *)v465 + 26) = *((void *)v466 + 26);
              *((void *)v465 + 27) = *((void *)v466 + 27);
              *((void *)v465 + 28) = *((void *)v466 + 28);
              *((void *)v465 + 29) = *((void *)v466 + 29);
              *((void *)v465 + 30) = *((void *)v466 + 30);
              *((void *)v465 + 31) = *((void *)v466 + 31);
              *((void *)v465 + 32) = *((void *)v466 + 32);
              *((void *)v465 + 33) = *((void *)v466 + 33);
              *((void *)v465 + 34) = *((void *)v466 + 34);
              *((void *)v465 + 35) = *((void *)v466 + 35);
              *((void *)v465 + 36) = *((void *)v466 + 36);
              *((void *)v465 + 37) = *((void *)v466 + 37);
              *((void *)v465 + 38) = *((void *)v466 + 38);
              *((void *)v465 + 39) = *((void *)v466 + 39);
              *((void *)v465 + 40) = *((void *)v466 + 40);
              *((void *)v465 + 41) = *((void *)v466 + 41);
              *((void *)v465 + 42) = *((void *)v466 + 42);
              *((void *)v465 + 43) = *((void *)v466 + 43);
              *((void *)v465 + 44) = *((void *)v466 + 44);
              *((void *)v465 + 45) = *((void *)v466 + 45);
              *((void *)v465 + 46) = *((void *)v466 + 46);
              uint64_t v477 = *((void *)v466 + 47);
              v465[384] = v466[384];
              *((void *)v465 + 47) = v477;
              *((void *)v465 + 49) = *((void *)v466 + 49);
              *((void *)v465 + 50) = *((void *)v466 + 50);
              *((void *)v465 + 51) = *((void *)v466 + 51);
              *((void *)v465 + 52) = *((void *)v466 + 52);
              uint64_t v478 = *(int *)(v467 + 140);
              uint64_t v1630 = &v465[v478];
              uint64_t v479 = &v466[v478];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v479, 1, v1750))
              {
                uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1630, v479, *(void *)(*(void *)(v480 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1630, v479, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1630, 0, 1, v1750);
              }
              uint64_t v866 = *(int *)(v467 + 144);
              uint64_t v867 = &v465[v866];
              uint64_t v868 = &v466[v866];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v466[v866], 1, v1750))
              {
                uint64_t v869 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v867, v868, *(void *)(*(void *)(v869 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v867, v868, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v867, 0, 1, v1750);
              }
              uint64_t v430 = v1736;
              __swift_storeEnumTagSinglePayload((uint64_t)v465, 0, 1, v467);
            }
            uint64_t v879 = v430[6];
            uint64_t v880 = &v428[v879];
            uint64_t v881 = &v429[v879];
            uint64_t v882 = type metadata accessor for TicketedTransportation(0);
            v1727 = v428;
            if (__swift_getEnumTagSinglePayload((uint64_t)v881, 1, v882))
            {
              uint64_t v883 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v880, v881, *(void *)(*(void *)(v883 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v880 = *(void *)v881;
              *((void *)v880 + 1) = *((void *)v881 + 1);
              *((void *)v880 + 2) = *((void *)v881 + 2);
              *((void *)v880 + 3) = *((void *)v881 + 3);
              *((void *)v880 + 4) = *((void *)v881 + 4);
              *((void *)v880 + 5) = *((void *)v881 + 5);
              *((void *)v880 + 6) = *((void *)v881 + 6);
              *((void *)v880 + 7) = *((void *)v881 + 7);
              *((void *)v880 + 8) = *((void *)v881 + 8);
              *((void *)v880 + 9) = *((void *)v881 + 9);
              *((void *)v880 + 10) = *((void *)v881 + 10);
              *((void *)v880 + 11) = *((void *)v881 + 11);
              *((void *)v880 + 12) = *((void *)v881 + 12);
              *((void *)v880 + 13) = *((void *)v881 + 13);
              *((void *)v880 + 14) = *((void *)v881 + 14);
              *((void *)v880 + 15) = *((void *)v881 + 15);
              v880[128] = v881[128];
              v880[129] = v881[129];
              v880[130] = v881[130];
              *((void *)v880 + 17) = *((void *)v881 + 17);
              *((void *)v880 + 18) = *((void *)v881 + 18);
              *((void *)v880 + 19) = *((void *)v881 + 19);
              *((void *)v880 + 20) = *((void *)v881 + 20);
              *((void *)v880 + 21) = *((void *)v881 + 21);
              *((void *)v880 + 22) = *((void *)v881 + 22);
              *((void *)v880 + 23) = *((void *)v881 + 23);
              *((void *)v880 + 24) = *((void *)v881 + 24);
              *((void *)v880 + 25) = *((void *)v881 + 25);
              *((void *)v880 + 26) = *((void *)v881 + 26);
              *((void *)v880 + 27) = *((void *)v881 + 27);
              *((void *)v880 + 28) = *((void *)v881 + 28);
              *((void *)v880 + 29) = *((void *)v881 + 29);
              *((void *)v880 + 30) = *((void *)v881 + 30);
              *((void *)v880 + 31) = *((void *)v881 + 31);
              *((void *)v880 + 32) = *((void *)v881 + 32);
              *((void *)v880 + 33) = *((void *)v881 + 33);
              *((void *)v880 + 34) = *((void *)v881 + 34);
              uint64_t v1697 = v882;
              *((void *)v880 + 35) = *((void *)v881 + 35);
              uint64_t v884 = *((void *)v881 + 36);
              v880[296] = v881[296];
              *((void *)v880 + 36) = v884;
              uint64_t v885 = *(int *)(v882 + 112);
              uint64_t v1636 = &v880[v885];
              uint64_t v886 = &v881[v885];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v886, 1, v1750))
              {
                uint64_t v887 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1636, v886, *(void *)(*(void *)(v887 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1636, v886, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1636, 0, 1, v1750);
              }
              uint64_t v892 = *(int *)(v882 + 116);
              uint64_t v893 = &v880[v892];
              uint64_t v894 = &v881[v892];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v881[v892], 1, v1750))
              {
                uint64_t v895 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v893, v894, *(void *)(*(void *)(v895 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v893, v894, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v893, 0, 1, v1750);
              }
              uint64_t v430 = v1736;
              __swift_storeEnumTagSinglePayload((uint64_t)v880, 0, 1, v1697);
            }
            uint64_t v906 = v430[7];
            uint64_t v907 = &v428[v906];
            uint64_t v908 = &v429[v906];
            uint64_t v909 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v908, 1, (uint64_t)v909))
            {
              uint64_t v910 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v907, v908, *(void *)(*(void *)(v910 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v907 = *(void *)v908;
              *((void *)v907 + 1) = *((void *)v908 + 1);
              *((void *)v907 + 2) = *((void *)v908 + 2);
              *((void *)v907 + 3) = *((void *)v908 + 3);
              *((void *)v907 + 4) = *((void *)v908 + 4);
              *((void *)v907 + 5) = *((void *)v908 + 5);
              *((void *)v907 + 6) = *((void *)v908 + 6);
              *((void *)v907 + 7) = *((void *)v908 + 7);
              *((void *)v907 + 8) = *((void *)v908 + 8);
              *((void *)v907 + 9) = *((void *)v908 + 9);
              *((void *)v907 + 10) = *((void *)v908 + 10);
              *((void *)v907 + 11) = *((void *)v908 + 11);
              *((void *)v907 + 12) = *((void *)v908 + 12);
              *((void *)v907 + 13) = *((void *)v908 + 13);
              *((void *)v907 + 14) = *((void *)v908 + 14);
              *((void *)v907 + 15) = *((void *)v908 + 15);
              v907[128] = v908[128];
              v907[129] = v908[129];
              v907[130] = v908[130];
              *((void *)v907 + 17) = *((void *)v908 + 17);
              *((void *)v907 + 18) = *((void *)v908 + 18);
              *((void *)v907 + 19) = *((void *)v908 + 19);
              *((void *)v907 + 20) = *((void *)v908 + 20);
              *((void *)v907 + 21) = *((void *)v908 + 21);
              *((void *)v907 + 22) = *((void *)v908 + 22);
              *((void *)v907 + 23) = *((void *)v908 + 23);
              *((void *)v907 + 24) = *((void *)v908 + 24);
              *((void *)v907 + 25) = *((void *)v908 + 25);
              *((void *)v907 + 26) = *((void *)v908 + 26);
              *((void *)v907 + 27) = *((void *)v908 + 27);
              *((void *)v907 + 28) = *((void *)v908 + 28);
              *((void *)v907 + 29) = *((void *)v908 + 29);
              *((void *)v907 + 30) = *((void *)v908 + 30);
              *((void *)v907 + 31) = *((void *)v908 + 31);
              *((void *)v907 + 32) = *((void *)v908 + 32);
              *((void *)v907 + 33) = *((void *)v908 + 33);
              *((void *)v907 + 34) = *((void *)v908 + 34);
              *((void *)v907 + 35) = *((void *)v908 + 35);
              uint64_t v911 = *((void *)v908 + 36);
              v907[296] = v908[296];
              *((void *)v907 + 36) = v911;
              *((void *)v907 + 38) = *((void *)v908 + 38);
              *((void *)v907 + 39) = *((void *)v908 + 39);
              uint64_t v1698 = (uint64_t)v909;
              uint64_t v912 = v909[29];
              __dstb = &v907[v912];
              uint64_t v913 = &v908[v912];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v913, 1, v1746))
              {
                uint64_t v914 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(__dstb, v913, *(void *)(*(void *)(v914 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1746 - 8) + 16))(__dstb, v913, v1746);
                __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v1746);
              }
              uint64_t v922 = v909[30];
              uint64_t v923 = &v907[v922];
              uint64_t v924 = &v908[v922];
              *(void *)uint64_t v923 = *(void *)v924;
              *((void *)v923 + 1) = *((void *)v924 + 1);
              uint64_t v925 = v909[31];
              uint64_t v926 = &v907[v925];
              uint64_t v927 = &v908[v925];
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v927, 1, v1750))
              {
                uint64_t v928 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v926, v927, *(void *)(*(void *)(v928 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v926, v927, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v926, 0, 1, v1750);
              }
              uint64_t v933 = *(int *)(v1698 + 128);
              uint64_t v934 = &v907[v933];
              uint64_t v935 = &v908[v933];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v908[v933], 1, v1750))
              {
                uint64_t v936 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v934, v935, *(void *)(*(void *)(v936 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v934, v935, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v934, 0, 1, v1750);
              }
              uint64_t v430 = v1736;
              uint64_t v429 = v1707;
              __swift_storeEnumTagSinglePayload((uint64_t)v907, 0, 1, v1698);
            }
            uint64_t v946 = v430[8];
            uint64_t v947 = &v428[v946];
            uint64_t v948 = &v429[v946];
            uint64_t v949 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v948, 1, v949))
            {
              uint64_t v950 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v947, v948, *(void *)(*(void *)(v950 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v947 = *(void *)v948;
              *((void *)v947 + 1) = *((void *)v948 + 1);
              *((void *)v947 + 2) = *((void *)v948 + 2);
              *((void *)v947 + 3) = *((void *)v948 + 3);
              *((void *)v947 + 4) = *((void *)v948 + 4);
              *((void *)v947 + 5) = *((void *)v948 + 5);
              *((void *)v947 + 6) = *((void *)v948 + 6);
              *((void *)v947 + 7) = *((void *)v948 + 7);
              *((void *)v947 + 8) = *((void *)v948 + 8);
              *((void *)v947 + 9) = *((void *)v948 + 9);
              *((void *)v947 + 10) = *((void *)v948 + 10);
              *((void *)v947 + 11) = *((void *)v948 + 11);
              *((void *)v947 + 12) = *((void *)v948 + 12);
              *((void *)v947 + 13) = *((void *)v948 + 13);
              *((void *)v947 + 14) = *((void *)v948 + 14);
              *((void *)v947 + 15) = *((void *)v948 + 15);
              v947[128] = v948[128];
              v947[129] = v948[129];
              v947[130] = v948[130];
              *((void *)v947 + 17) = *((void *)v948 + 17);
              *((void *)v947 + 18) = *((void *)v948 + 18);
              *((void *)v947 + 19) = *((void *)v948 + 19);
              *((void *)v947 + 20) = *((void *)v948 + 20);
              *((void *)v947 + 21) = *((void *)v948 + 21);
              *((void *)v947 + 22) = *((void *)v948 + 22);
              *((void *)v947 + 23) = *((void *)v948 + 23);
              *((void *)v947 + 24) = *((void *)v948 + 24);
              *((void *)v947 + 25) = *((void *)v948 + 25);
              *((void *)v947 + 26) = *((void *)v948 + 26);
              *((void *)v947 + 27) = *((void *)v948 + 27);
              *((void *)v947 + 28) = *((void *)v948 + 28);
              *((void *)v947 + 29) = *((void *)v948 + 29);
              *((void *)v947 + 30) = *((void *)v948 + 30);
              *((void *)v947 + 31) = *((void *)v948 + 31);
              *((void *)v947 + 32) = *((void *)v948 + 32);
              *((void *)v947 + 33) = *((void *)v948 + 33);
              uint64_t v951 = *((void *)v948 + 34);
              v947[280] = v948[280];
              *((void *)v947 + 34) = v951;
              *((void *)v947 + 36) = *((void *)v948 + 36);
              *((void *)v947 + 37) = *((void *)v948 + 37);
              uint64_t v1699 = v949;
              uint64_t v952 = *(int *)(v949 + 108);
              uint64_t v1638 = &v947[v952];
              uint64_t v953 = &v948[v952];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v953, 1, v1750))
              {
                uint64_t v954 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1638, v953, *(void *)(*(void *)(v954 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1638, v953, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1638, 0, 1, v1750);
              }
              uint64_t v959 = *(int *)(v949 + 112);
              uint64_t v960 = &v947[v959];
              uint64_t v961 = &v948[v959];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v948[v959], 1, v1750))
              {
                uint64_t v962 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v960, v961, *(void *)(*(void *)(v962 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v960, v961, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v960, 0, 1, v1750);
              }
              uint64_t v430 = v1736;
              uint64_t v429 = v1707;
              __swift_storeEnumTagSinglePayload((uint64_t)v947, 0, 1, v1699);
            }
            uint64_t v971 = v430[9];
            uint64_t v972 = &v428[v971];
            v973 = &v429[v971];
            uint64_t v974 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v973, 1, v974))
            {
              uint64_t v975 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v972, v973, *(void *)(*(void *)(v975 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v972 = *(void *)v973;
              *((void *)v972 + 1) = *((void *)v973 + 1);
              *((void *)v972 + 2) = *((void *)v973 + 2);
              *((void *)v972 + 3) = *((void *)v973 + 3);
              *((void *)v972 + 4) = *((void *)v973 + 4);
              *((void *)v972 + 5) = *((void *)v973 + 5);
              *((void *)v972 + 6) = *((void *)v973 + 6);
              *((void *)v972 + 7) = *((void *)v973 + 7);
              *((void *)v972 + 8) = *((void *)v973 + 8);
              *((void *)v972 + 9) = *((void *)v973 + 9);
              *((void *)v972 + 10) = *((void *)v973 + 10);
              *((void *)v972 + 11) = *((void *)v973 + 11);
              *((void *)v972 + 12) = *((void *)v973 + 12);
              *((void *)v972 + 13) = *((void *)v973 + 13);
              *((void *)v972 + 14) = *((void *)v973 + 14);
              *((void *)v972 + 15) = *((void *)v973 + 15);
              v972[128] = v973[128];
              v972[129] = v973[129];
              v972[130] = v973[130];
              *((void *)v972 + 17) = *((void *)v973 + 17);
              *((void *)v972 + 18) = *((void *)v973 + 18);
              *((void *)v972 + 19) = *((void *)v973 + 19);
              *((void *)v972 + 20) = *((void *)v973 + 20);
              *((void *)v972 + 21) = *((void *)v973 + 21);
              *((void *)v972 + 22) = *((void *)v973 + 22);
              *((void *)v972 + 23) = *((void *)v973 + 23);
              *((void *)v972 + 24) = *((void *)v973 + 24);
              *((void *)v972 + 25) = *((void *)v973 + 25);
              *((void *)v972 + 26) = *((void *)v973 + 26);
              *((void *)v972 + 27) = *((void *)v973 + 27);
              *((void *)v972 + 28) = *((void *)v973 + 28);
              *((void *)v972 + 29) = *((void *)v973 + 29);
              *((void *)v972 + 30) = *((void *)v973 + 30);
              uint64_t v1700 = v974;
              *((void *)v972 + 31) = *((void *)v973 + 31);
              uint64_t v976 = *(int *)(v974 + 96);
              uint64_t v1644 = &v972[v976];
              uint64_t v977 = &v973[v976];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v977, 1, v1750))
              {
                uint64_t v978 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1644, v977, *(void *)(*(void *)(v978 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1644, v977, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1644, 0, 1, v1750);
              }
              uint64_t v983 = *(int *)(v974 + 100);
              uint64_t v984 = &v972[v983];
              uint64_t v985 = &v973[v983];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v973[v983], 1, v1750))
              {
                uint64_t v986 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v984, v985, *(void *)(*(void *)(v986 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v984, v985, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v984, 0, 1, v1750);
              }
              uint64_t v992 = *(int *)(v1700 + 104);
              v993 = &v972[v992];
              uint64_t v994 = &v973[v992];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v973[v992], 1, v1746))
              {
                uint64_t v995 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v993, v994, *(void *)(*(void *)(v995 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1746 - 8) + 16))(v993, v994, v1746);
                __swift_storeEnumTagSinglePayload((uint64_t)v993, 0, 1, v1746);
              }
              uint64_t v430 = v1736;
              uint64_t v429 = v1707;
              __swift_storeEnumTagSinglePayload((uint64_t)v972, 0, 1, v1700);
            }
            uint64_t v1003 = v430[10];
            v1004 = &v428[v1003];
            uint64_t v1005 = &v429[v1003];
            uint64_t v1006 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1005, 1, v1006))
            {
              uint64_t v1007 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1004, v1005, *(void *)(*(void *)(v1007 - 8) + 64));
            }
            else
            {
              *(void *)v1004 = *(void *)v1005;
              *((void *)v1004 + 1) = *((void *)v1005 + 1);
              *((void *)v1004 + 2) = *((void *)v1005 + 2);
              *((void *)v1004 + 3) = *((void *)v1005 + 3);
              *((void *)v1004 + 4) = *((void *)v1005 + 4);
              *((void *)v1004 + 5) = *((void *)v1005 + 5);
              *((void *)v1004 + 6) = *((void *)v1005 + 6);
              *((void *)v1004 + 7) = *((void *)v1005 + 7);
              *((void *)v1004 + 8) = *((void *)v1005 + 8);
              *((void *)v1004 + 9) = *((void *)v1005 + 9);
              *((void *)v1004 + 10) = *((void *)v1005 + 10);
              *((void *)v1004 + 11) = *((void *)v1005 + 11);
              *((void *)v1004 + 12) = *((void *)v1005 + 12);
              *((void *)v1004 + 13) = *((void *)v1005 + 13);
              *((void *)v1004 + 14) = *((void *)v1005 + 14);
              *((void *)v1004 + 15) = *((void *)v1005 + 15);
              v1004[128] = v1005[128];
              v1004[129] = v1005[129];
              v1004[130] = v1005[130];
              *((void *)v1004 + 17) = *((void *)v1005 + 17);
              *((void *)v1004 + 18) = *((void *)v1005 + 18);
              *((void *)v1004 + 19) = *((void *)v1005 + 19);
              *((void *)v1004 + 20) = *((void *)v1005 + 20);
              *((void *)v1004 + 21) = *((void *)v1005 + 21);
              *((void *)v1004 + 22) = *((void *)v1005 + 22);
              *((void *)v1004 + 23) = *((void *)v1005 + 23);
              *((void *)v1004 + 24) = *((void *)v1005 + 24);
              *((void *)v1004 + 25) = *((void *)v1005 + 25);
              *((void *)v1004 + 26) = *((void *)v1005 + 26);
              uint64_t v1701 = v1006;
              *((void *)v1004 + 27) = *((void *)v1005 + 27);
              uint64_t v1008 = *(int *)(v1006 + 88);
              uint64_t v1649 = &v1004[v1008];
              uint64_t v1652 = &v1005[v1008];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1652, 1, v1750))
              {
                uint64_t v1009 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1649, v1652, *(void *)(*(void *)(v1009 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1649, v1652, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1649, 0, 1, v1750);
              }
              uint64_t v1014 = *(int *)(v1006 + 92);
              uint64_t v1015 = &v1004[v1014];
              uint64_t v1016 = &v1005[v1014];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1005[v1014], 1, v1750))
              {
                uint64_t v1017 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1015, v1016, *(void *)(*(void *)(v1017 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1015, v1016, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1015, 0, 1, v1750);
              }
              uint64_t v1027 = *(int *)(v1701 + 96);
              uint64_t v1028 = &v1004[v1027];
              v1029 = &v1005[v1027];
              uint64_t v1030 = *(void *)v1029;
              v1028[8] = v1029[8];
              *(void *)uint64_t v1028 = v1030;
              uint64_t v1031 = *(int *)(v1701 + 100);
              uint64_t v1032 = &v1004[v1031];
              uint64_t v1033 = &v1005[v1031];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1005[v1031], 1, v1746))
              {
                uint64_t v1034 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1032, v1033, *(void *)(*(void *)(v1034 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1746 - 8) + 16))(v1032, v1033, v1746);
                __swift_storeEnumTagSinglePayload((uint64_t)v1032, 0, 1, v1746);
              }
              uint64_t v430 = v1736;
              uint64_t v429 = v1707;
              __swift_storeEnumTagSinglePayload((uint64_t)v1004, 0, 1, v1701);
            }
            uint64_t v1043 = v430[11];
            v1044 = &v428[v1043];
            uint64_t v1045 = &v429[v1043];
            uint64_t v1046 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1045, 1, (uint64_t)v1046))
            {
              uint64_t v1047 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1044, v1045, *(void *)(*(void *)(v1047 - 8) + 64));
            }
            else
            {
              *(void *)v1044 = *(void *)v1045;
              *((void *)v1044 + 1) = *((void *)v1045 + 1);
              *((void *)v1044 + 2) = *((void *)v1045 + 2);
              *((void *)v1044 + 3) = *((void *)v1045 + 3);
              *((void *)v1044 + 4) = *((void *)v1045 + 4);
              *((void *)v1044 + 5) = *((void *)v1045 + 5);
              *((void *)v1044 + 6) = *((void *)v1045 + 6);
              *((void *)v1044 + 7) = *((void *)v1045 + 7);
              *((void *)v1044 + 8) = *((void *)v1045 + 8);
              *((void *)v1044 + 9) = *((void *)v1045 + 9);
              *((void *)v1044 + 10) = *((void *)v1045 + 10);
              *((void *)v1044 + 11) = *((void *)v1045 + 11);
              v1044[96] = v1045[96];
              *((void *)v1044 + 13) = *((void *)v1045 + 13);
              *((void *)v1044 + 14) = *((void *)v1045 + 14);
              uint64_t v1048 = v1046[13];
              uint64_t v1677 = &v1044[v1048];
              uint64_t v1680 = &v1045[v1048];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1680, 1, v1746))
              {
                uint64_t v1049 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1677, v1680, *(void *)(*(void *)(v1049 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1746 - 8) + 16))(v1677, v1680, v1746);
                __swift_storeEnumTagSinglePayload((uint64_t)v1677, 0, 1, v1746);
              }
              uint64_t v1054 = v1046[14];
              uint64_t v1055 = &v1044[v1054];
              uint64_t v1056 = &v1045[v1054];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1045[v1054], 1, v1746))
              {
                uint64_t v1057 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1055, v1056, *(void *)(*(void *)(v1057 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1746 - 8) + 16))(v1055, v1056, v1746);
                __swift_storeEnumTagSinglePayload((uint64_t)v1055, 0, 1, v1746);
              }
              uint64_t v1120 = v1046[15];
              uint64_t v1121 = &v1044[v1120];
              uint64_t v1122 = &v1045[v1120];
              *(void *)uint64_t v1121 = *(void *)v1122;
              *((void *)v1121 + 1) = *((void *)v1122 + 1);
              uint64_t v1123 = v1046[16];
              uint64_t v1124 = &v1044[v1123];
              v1125 = &v1045[v1123];
              *(void *)uint64_t v1124 = *(void *)v1125;
              *((void *)v1124 + 1) = *((void *)v1125 + 1);
              uint64_t v1126 = v1046[17];
              uint64_t v1127 = &v1044[v1126];
              v1128 = &v1045[v1126];
              *(void *)uint64_t v1127 = *(void *)v1128;
              *((void *)v1127 + 1) = *((void *)v1128 + 1);
              uint64_t v1129 = v1046[18];
              uint64_t v1682 = &v1045[v1129];
              v1684 = &v1044[v1129];
              uint64_t v1130 = type metadata accessor for DateComponents();
              uint64_t v1131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1130 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1131(v1684, v1682, v1130);
              v1131(&v1044[v1046[19]], &v1045[v1046[19]], v1130);
              uint64_t v1132 = v1046[20];
              v1133 = &v1044[v1132];
              uint64_t v1134 = &v1045[v1132];
              *(void *)v1133 = *(void *)v1134;
              *((void *)v1133 + 1) = *((void *)v1134 + 1);
              uint64_t v1135 = v1046[21];
              v1136 = &v1044[v1135];
              uint64_t v1137 = &v1045[v1135];
              *(void *)v1136 = *(void *)v1137;
              *((void *)v1136 + 1) = *((void *)v1137 + 1);
              uint64_t v1138 = v1046[22];
              v1139 = &v1044[v1138];
              uint64_t v1140 = &v1045[v1138];
              *(void *)v1139 = *(void *)v1140;
              *((void *)v1139 + 1) = *((void *)v1140 + 1);
              uint64_t v1141 = v1046[23];
              v1142 = &v1044[v1141];
              v1143 = &v1045[v1141];
              *(void *)v1142 = *(void *)v1143;
              *((void *)v1142 + 1) = *((void *)v1143 + 1);
              uint64_t v1144 = v1046[24];
              uint64_t v1145 = &v1044[v1144];
              v1146 = &v1045[v1144];
              *(void *)uint64_t v1145 = *(void *)v1146;
              *((void *)v1145 + 1) = *((void *)v1146 + 1);
              uint64_t v1147 = v1046[25];
              uint64_t v1148 = &v1044[v1147];
              uint64_t v1149 = &v1045[v1147];
              *(void *)uint64_t v1148 = *(void *)v1149;
              *((void *)v1148 + 1) = *((void *)v1149 + 1);
              uint64_t v1150 = v1046[26];
              v1151 = &v1044[v1150];
              uint64_t v1152 = &v1045[v1150];
              *(void *)v1151 = *(void *)v1152;
              *((void *)v1151 + 1) = *((void *)v1152 + 1);
              uint64_t v1153 = v1046[27];
              v1154 = &v1044[v1153];
              v1155 = &v1045[v1153];
              *(void *)v1154 = *(void *)v1155;
              *((void *)v1154 + 1) = *((void *)v1155 + 1);
              uint64_t v1156 = v1046[28];
              uint64_t v1157 = &v1044[v1156];
              v1158 = &v1045[v1156];
              *(void *)uint64_t v1157 = *(void *)v1158;
              *((void *)v1157 + 1) = *((void *)v1158 + 1);
              uint64_t v1159 = v1046[29];
              uint64_t v1160 = &v1044[v1159];
              uint64_t v1161 = &v1045[v1159];
              *(void *)uint64_t v1160 = *(void *)v1161;
              *((void *)v1160 + 1) = *((void *)v1161 + 1);
              uint64_t v1162 = v1046[30];
              uint64_t v1163 = &v1044[v1162];
              uint64_t v1164 = &v1045[v1162];
              *(void *)uint64_t v1163 = *(void *)v1164;
              *((void *)v1163 + 1) = *((void *)v1164 + 1);
              uint64_t v1165 = v1046[31];
              uint64_t v1166 = &v1044[v1165];
              uint64_t v1167 = &v1045[v1165];
              *(void *)uint64_t v1166 = *(void *)v1167;
              *((void *)v1166 + 1) = *((void *)v1167 + 1);
              uint64_t v1168 = v1046[32];
              uint64_t v1169 = &v1044[v1168];
              uint64_t v1170 = &v1045[v1168];
              *(void *)uint64_t v1169 = *(void *)v1170;
              *((void *)v1169 + 1) = *((void *)v1170 + 1);
              *(void *)&v1044[v1046[33]] = *(void *)&v1045[v1046[33]];
              *(void *)&v1044[v1046[34]] = *(void *)&v1045[v1046[34]];
              uint64_t v1171 = v1046[35];
              uint64_t v1172 = &v1044[v1171];
              uint64_t v1173 = &v1045[v1171];
              *(void *)uint64_t v1172 = *(void *)v1173;
              *((void *)v1172 + 1) = *((void *)v1173 + 1);
              uint64_t v1174 = v1046[36];
              uint64_t v1175 = &v1044[v1174];
              uint64_t v1176 = &v1045[v1174];
              *(void *)uint64_t v1175 = *(void *)v1176;
              *((void *)v1175 + 1) = *((void *)v1176 + 1);
              uint64_t v1177 = v1046[37];
              uint64_t v1178 = &v1044[v1177];
              uint64_t v1179 = &v1045[v1177];
              *(void *)uint64_t v1178 = *(void *)v1179;
              *((void *)v1178 + 1) = *((void *)v1179 + 1);
              uint64_t v1180 = v1046[38];
              uint64_t v1642 = &v1044[v1180];
              uint64_t v1645 = &v1045[v1180];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1645, 1, v1750))
              {
                uint64_t v1181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1642, v1645, *(void *)(*(void *)(v1181 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1642, v1645, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1642, 0, 1, v1750);
              }
              uint64_t v1218 = v1046[39];
              uint64_t v1219 = &v1044[v1218];
              uint64_t v1220 = &v1045[v1218];
              *(void *)uint64_t v1219 = *(void *)v1220;
              *((void *)v1219 + 1) = *((void *)v1220 + 1);
              uint64_t v1221 = v1046[40];
              uint64_t v1222 = &v1044[v1221];
              uint64_t v1223 = &v1045[v1221];
              *(void *)uint64_t v1222 = *(void *)v1223;
              *((void *)v1222 + 1) = *((void *)v1223 + 1);
              uint64_t v1224 = v1046[41];
              uint64_t v1225 = &v1044[v1224];
              uint64_t v1226 = &v1045[v1224];
              uint64_t v1227 = *(void *)v1226;
              v1225[8] = v1226[8];
              *(void *)uint64_t v1225 = v1227;
              uint64_t v1228 = v1046[42];
              uint64_t v1229 = &v1044[v1228];
              uint64_t v1230 = &v1045[v1228];
              *(void *)uint64_t v1229 = *(void *)v1230;
              *((void *)v1229 + 1) = *((void *)v1230 + 1);
              uint64_t v1231 = v1046[43];
              uint64_t v1232 = &v1044[v1231];
              uint64_t v1233 = &v1045[v1231];
              long long v1234 = *(_OWORD *)v1233;
              *(void *)(v1232 + 13) = *(void *)(v1233 + 13);
              *(_OWORD *)uint64_t v1232 = v1234;
              uint64_t v1235 = v1046[44];
              uint64_t v1236 = &v1044[v1235];
              uint64_t v1237 = &v1045[v1235];
              *(void *)uint64_t v1236 = *(void *)v1237;
              *((void *)v1236 + 1) = *((void *)v1237 + 1);
              uint64_t v1238 = v1046[45];
              uint64_t v1239 = &v1044[v1238];
              uint64_t v1240 = &v1045[v1238];
              *(void *)uint64_t v1239 = *(void *)v1240;
              *((void *)v1239 + 1) = *((void *)v1240 + 1);
              uint64_t v1241 = v1046[46];
              uint64_t v1242 = &v1044[v1241];
              v1243 = &v1045[v1241];
              *(void *)uint64_t v1242 = *(void *)v1243;
              *((void *)v1242 + 1) = *((void *)v1243 + 1);
              uint64_t v1244 = v1046[47];
              uint64_t v1245 = &v1044[v1244];
              uint64_t v1246 = &v1045[v1244];
              *(void *)uint64_t v1245 = *(void *)v1246;
              *((void *)v1245 + 1) = *((void *)v1246 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1044, 0, 1, (uint64_t)v1046);
              uint64_t v428 = v1727;
              uint64_t v430 = v1736;
              uint64_t v429 = v1707;
            }
            uint64_t v1247 = v430[12];
            v1248 = &v428[v1247];
            uint64_t v1249 = &v429[v1247];
            uint64_t v1250 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1249, 1, (uint64_t)v1250))
            {
              uint64_t v1251 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1248, v1249, *(void *)(*(void *)(v1251 - 8) + 64));
            }
            else
            {
              *(void *)v1248 = *(void *)v1249;
              *((void *)v1248 + 1) = *((void *)v1249 + 1);
              *((void *)v1248 + 2) = *((void *)v1249 + 2);
              *((void *)v1248 + 3) = *((void *)v1249 + 3);
              *((void *)v1248 + 4) = *((void *)v1249 + 4);
              *((void *)v1248 + 5) = *((void *)v1249 + 5);
              *((void *)v1248 + 6) = *((void *)v1249 + 6);
              *((void *)v1248 + 7) = *((void *)v1249 + 7);
              *((void *)v1248 + 8) = *((void *)v1249 + 8);
              *((void *)v1248 + 9) = *((void *)v1249 + 9);
              *((void *)v1248 + 10) = *((void *)v1249 + 10);
              *((void *)v1248 + 11) = *((void *)v1249 + 11);
              v1248[96] = v1249[96];
              *((void *)v1248 + 13) = *((void *)v1249 + 13);
              *((void *)v1248 + 14) = *((void *)v1249 + 14);
              *((void *)v1248 + 15) = *((void *)v1249 + 15);
              *((void *)v1248 + 16) = *((void *)v1249 + 16);
              uint64_t v1252 = v1250[14];
              uint64_t v1660 = &v1248[v1252];
              uint64_t v1673 = &v1249[v1252];
              uint64_t v1666 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1673, 1, (uint64_t)v1666))
              {
                uint64_t v1253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1660, v1673, *(void *)(*(void *)(v1253 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1666 - 1) + 16))(v1660, v1673, v1666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1660, 0, 1, (uint64_t)v1666);
              }
              uint64_t v1258 = v1250[15];
              v1259 = &v1248[v1258];
              uint64_t v1260 = &v1249[v1258];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1249[v1258], 1, (uint64_t)v1666))
              {
                uint64_t v1261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1259, v1260, *(void *)(*(void *)(v1261 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1666 - 1) + 16))(v1259, v1260, v1666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1259, 0, 1, (uint64_t)v1666);
              }
              uint64_t v1308 = v1250[16];
              uint64_t v1309 = &v1248[v1308];
              uint64_t v1310 = &v1249[v1308];
              *(void *)uint64_t v1309 = *(void *)v1310;
              *((void *)v1309 + 1) = *((void *)v1310 + 1);
              uint64_t v1311 = v1250[17];
              uint64_t v1312 = &v1248[v1311];
              uint64_t v1313 = &v1249[v1311];
              *(void *)uint64_t v1312 = *(void *)v1313;
              *((void *)v1312 + 1) = *((void *)v1313 + 1);
              uint64_t v1314 = v1250[18];
              uint64_t v1315 = &v1248[v1314];
              uint64_t v1316 = &v1249[v1314];
              *(void *)uint64_t v1315 = *(void *)v1316;
              *((void *)v1315 + 1) = *((void *)v1316 + 1);
              uint64_t v1317 = v1250[19];
              uint64_t v1318 = &v1248[v1317];
              uint64_t v1319 = &v1249[v1317];
              *(void *)uint64_t v1318 = *(void *)v1319;
              *((void *)v1318 + 1) = *((void *)v1319 + 1);
              uint64_t v1320 = v1250[20];
              uint64_t v1321 = &v1248[v1320];
              uint64_t v1322 = &v1249[v1320];
              *(void *)uint64_t v1321 = *(void *)v1322;
              *((void *)v1321 + 1) = *((void *)v1322 + 1);
              *(void *)&v1248[v1250[21]] = *(void *)&v1249[v1250[21]];
              *(void *)&v1248[v1250[22]] = *(void *)&v1249[v1250[22]];
              uint64_t v1323 = v1250[23];
              uint64_t v1324 = &v1248[v1323];
              uint64_t v1325 = &v1249[v1323];
              uint64_t v1326 = *(void *)v1325;
              v1324[8] = v1325[8];
              *(void *)uint64_t v1324 = v1326;
              uint64_t v1327 = v1250[24];
              uint64_t v1328 = &v1248[v1327];
              uint64_t v1329 = &v1249[v1327];
              uint64_t v1330 = *(void *)v1329;
              v1328[8] = v1329[8];
              *(void *)uint64_t v1328 = v1330;
              uint64_t v1331 = v1250[25];
              uint64_t v1332 = &v1248[v1331];
              uint64_t v1333 = &v1249[v1331];
              *(void *)uint64_t v1332 = *(void *)v1333;
              *((void *)v1332 + 1) = *((void *)v1333 + 1);
              uint64_t v1334 = v1250[26];
              uint64_t v1335 = &v1248[v1334];
              v1336 = &v1249[v1334];
              *(void *)uint64_t v1335 = *(void *)v1336;
              *((void *)v1335 + 1) = *((void *)v1336 + 1);
              uint64_t v1337 = v1250[27];
              uint64_t v1338 = &v1248[v1337];
              uint64_t v1339 = &v1249[v1337];
              *(void *)uint64_t v1338 = *(void *)v1339;
              *((void *)v1338 + 1) = *((void *)v1339 + 1);
              uint64_t v1340 = v1250[28];
              uint64_t v1341 = &v1248[v1340];
              uint64_t v1342 = &v1249[v1340];
              *(void *)uint64_t v1341 = *(void *)v1342;
              *((void *)v1341 + 1) = *((void *)v1342 + 1);
              uint64_t v1343 = v1250[29];
              uint64_t v1344 = &v1248[v1343];
              uint64_t v1345 = &v1249[v1343];
              uint64_t v1346 = *(void *)v1345;
              v1344[8] = v1345[8];
              *(void *)uint64_t v1344 = v1346;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1248, 0, 1, (uint64_t)v1250);
              uint64_t v428 = v1727;
              uint64_t v430 = v1736;
              uint64_t v429 = v1707;
            }
            uint64_t v1347 = v430[13];
            uint64_t v1348 = &v428[v1347];
            uint64_t v1349 = &v429[v1347];
            uint64_t v1350 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1349, 1, (uint64_t)v1350))
            {
              uint64_t v1351 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1348, v1349, *(void *)(*(void *)(v1351 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v1348 = *(void *)v1349;
              *((void *)v1348 + 1) = *((void *)v1349 + 1);
              *((void *)v1348 + 2) = *((void *)v1349 + 2);
              *((void *)v1348 + 3) = *((void *)v1349 + 3);
              *((void *)v1348 + 4) = *((void *)v1349 + 4);
              *((void *)v1348 + 5) = *((void *)v1349 + 5);
              *((void *)v1348 + 6) = *((void *)v1349 + 6);
              *((void *)v1348 + 7) = *((void *)v1349 + 7);
              *((void *)v1348 + 8) = *((void *)v1349 + 8);
              *((void *)v1348 + 9) = *((void *)v1349 + 9);
              *((void *)v1348 + 10) = *((void *)v1349 + 10);
              *((void *)v1348 + 11) = *((void *)v1349 + 11);
              v1348[96] = v1349[96];
              *((void *)v1348 + 13) = *((void *)v1349 + 13);
              *((void *)v1348 + 14) = *((void *)v1349 + 14);
              *((void *)v1348 + 15) = *((void *)v1349 + 15);
              *((void *)v1348 + 16) = *((void *)v1349 + 16);
              uint64_t v1352 = v1350[14];
              uint64_t v1668 = &v1348[v1352];
              v1679 = &v1349[v1352];
              uint64_t v1675 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1679, 1, (uint64_t)v1675))
              {
                uint64_t v1353 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1668, v1679, *(void *)(*(void *)(v1353 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1675 - 1) + 16))(v1668, v1679, v1675);
                __swift_storeEnumTagSinglePayload((uint64_t)v1668, 0, 1, (uint64_t)v1675);
              }
              uint64_t v1486 = v1350[15];
              uint64_t v1487 = &v1348[v1486];
              uint64_t v1488 = &v1349[v1486];
              *(void *)uint64_t v1487 = *(void *)v1488;
              *((void *)v1487 + 1) = *((void *)v1488 + 1);
              uint64_t v1489 = v1350[16];
              uint64_t v1490 = &v1348[v1489];
              uint64_t v1491 = &v1349[v1489];
              *(void *)uint64_t v1490 = *(void *)v1491;
              *((void *)v1490 + 1) = *((void *)v1491 + 1);
              uint64_t v1492 = v1350[17];
              uint64_t v1493 = &v1348[v1492];
              uint64_t v1494 = &v1349[v1492];
              *(void *)uint64_t v1493 = *(void *)v1494;
              *((void *)v1493 + 1) = *((void *)v1494 + 1);
              uint64_t v1495 = v1350[18];
              uint64_t v1496 = &v1348[v1495];
              uint64_t v1497 = &v1349[v1495];
              *(void *)uint64_t v1496 = *(void *)v1497;
              *((void *)v1496 + 1) = *((void *)v1497 + 1);
              uint64_t v1498 = v1350[19];
              uint64_t v1499 = &v1348[v1498];
              uint64_t v1500 = &v1349[v1498];
              *(void *)uint64_t v1499 = *(void *)v1500;
              *((void *)v1499 + 1) = *((void *)v1500 + 1);
              *(void *)&v1348[v1350[20]] = *(void *)&v1349[v1350[20]];
              uint64_t v1501 = v1350[21];
              uint64_t v1502 = &v1348[v1501];
              uint64_t v1503 = &v1349[v1501];
              *(void *)uint64_t v1502 = *(void *)v1503;
              *((void *)v1502 + 1) = *((void *)v1503 + 1);
              uint64_t v1504 = v1350[22];
              uint64_t v1505 = &v1348[v1504];
              uint64_t v1506 = &v1349[v1504];
              *(void *)uint64_t v1505 = *(void *)v1506;
              *((void *)v1505 + 1) = *((void *)v1506 + 1);
              uint64_t v1507 = v1350[23];
              uint64_t v1508 = &v1348[v1507];
              uint64_t v1509 = &v1349[v1507];
              *(void *)uint64_t v1508 = *(void *)v1509;
              *((void *)v1508 + 1) = *((void *)v1509 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1348, 0, 1, (uint64_t)v1350);
              uint64_t v428 = v1727;
              uint64_t v430 = v1736;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v428, 0, 1, (uint64_t)v430);
          }
          uint64_t v1510 = v1757[20];
          uint64_t v1511 = &v8[v1510];
          uint64_t v1512 = &v9[v1510];
          uint64_t v1513 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1512, 1, v1513))
          {
            uint64_t v1514 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1511, v1512, *(void *)(*(void *)(v1514 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1511 = *(void *)v1512;
            *((void *)v1511 + 1) = *((void *)v1512 + 1);
            *((void *)v1511 + 2) = *((void *)v1512 + 2);
            *((void *)v1511 + 3) = *((void *)v1512 + 3);
            *((void *)v1511 + 4) = *((void *)v1512 + 4);
            *((void *)v1511 + 5) = *((void *)v1512 + 5);
            *((void *)v1511 + 6) = *((void *)v1512 + 6);
            *((void *)v1511 + 7) = *((void *)v1512 + 7);
            *((void *)v1511 + 8) = *((void *)v1512 + 8);
            *((void *)v1511 + 9) = *((void *)v1512 + 9);
            *((void *)v1511 + 10) = *((void *)v1512 + 10);
            *((void *)v1511 + 11) = *((void *)v1512 + 11);
            uint64_t v1739 = (int *)v1513;
            uint64_t v1515 = *(int *)(v1513 + 40);
            uint64_t v1716 = &v1512[v1515];
            v1731 = &v1511[v1515];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1716, 1, v1750))
            {
              uint64_t v1516 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1731, v1716, *(void *)(*(void *)(v1516 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1731, v1716, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1731, 0, 1, v1750);
            }
            uint64_t v1517 = *(int *)(v1513 + 44);
            uint64_t v1518 = &v1511[v1517];
            uint64_t v1519 = &v1512[v1517];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1512[v1517], 1, v1750))
            {
              uint64_t v1520 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1518, v1519, *(void *)(*(void *)(v1520 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1518, v1519, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1518, 0, 1, v1750);
            }
            uint64_t v1521 = v1739[12];
            uint64_t v1522 = &v1511[v1521];
            uint64_t v1523 = &v1512[v1521];
            *(void *)uint64_t v1522 = *(void *)v1523;
            *((void *)v1522 + 1) = *((void *)v1523 + 1);
            uint64_t v1524 = v1739[13];
            uint64_t v1525 = &v1511[v1524];
            uint64_t v1526 = &v1512[v1524];
            *(void *)uint64_t v1525 = *(void *)v1526;
            *((void *)v1525 + 1) = *((void *)v1526 + 1);
            uint64_t v1527 = v1739[14];
            uint64_t v1528 = &v1511[v1527];
            uint64_t v1529 = &v1512[v1527];
            *(void *)uint64_t v1528 = *(void *)v1529;
            *((void *)v1528 + 1) = *((void *)v1529 + 1);
            uint64_t v1530 = v1739[15];
            uint64_t v1531 = &v1511[v1530];
            uint64_t v1532 = &v1512[v1530];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1532, 1, v1750))
            {
              uint64_t v1533 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1531, v1532, *(void *)(*(void *)(v1533 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1531, v1532, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1531, 0, 1, v1750);
            }
            uint64_t v1534 = v1739[16];
            uint64_t v1535 = &v1511[v1534];
            uint64_t v1536 = &v1512[v1534];
            *(void *)uint64_t v1535 = *(void *)v1536;
            *((void *)v1535 + 1) = *((void *)v1536 + 1);
            uint64_t v1537 = v1739[17];
            uint64_t v1538 = &v1511[v1537];
            uint64_t v1539 = &v1512[v1537];
            *(void *)uint64_t v1538 = *(void *)v1539;
            *((void *)v1538 + 1) = *((void *)v1539 + 1);
            uint64_t v1540 = v1739[18];
            uint64_t v1541 = &v1511[v1540];
            uint64_t v1542 = &v1512[v1540];
            *(void *)uint64_t v1541 = *(void *)v1542;
            *((void *)v1541 + 1) = *((void *)v1542 + 1);
            uint64_t v1543 = v1739[19];
            uint64_t v1544 = &v1511[v1543];
            uint64_t v1545 = &v1512[v1543];
            *(void *)uint64_t v1544 = *(void *)v1545;
            *((void *)v1544 + 1) = *((void *)v1545 + 1);
            uint64_t v1546 = v1739[20];
            uint64_t v1547 = &v1511[v1546];
            uint64_t v1548 = &v1512[v1546];
            *(void *)uint64_t v1547 = *(void *)v1548;
            *((void *)v1547 + 1) = *((void *)v1548 + 1);
            uint64_t v1549 = v1739[21];
            uint64_t v1550 = &v1511[v1549];
            uint64_t v1551 = &v1512[v1549];
            *(void *)uint64_t v1550 = *(void *)v1551;
            *((void *)v1550 + 1) = *((void *)v1551 + 1);
            uint64_t v1552 = v1739[22];
            uint64_t v1553 = &v1511[v1552];
            uint64_t v1554 = &v1512[v1552];
            *(void *)uint64_t v1553 = *(void *)v1554;
            *((void *)v1553 + 1) = *((void *)v1554 + 1);
            uint64_t v1555 = v1739[23];
            uint64_t v1556 = &v1511[v1555];
            uint64_t v1557 = &v1512[v1555];
            *(void *)uint64_t v1556 = *(void *)v1557;
            *((void *)v1556 + 1) = *((void *)v1557 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1511, 0, 1, (uint64_t)v1739);
          }
          uint64_t v1558 = v1757[21];
          uint64_t v1559 = &v8[v1558];
          uint64_t v1560 = &v9[v1558];
          uint64_t v1561 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1560, 1, (uint64_t)v1561))
          {
            uint64_t v1562 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1559, v1560, *(void *)(*(void *)(v1562 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1559 = *(void *)v1560;
            *((void *)v1559 + 1) = *((void *)v1560 + 1);
            *((void *)v1559 + 2) = *((void *)v1560 + 2);
            *((void *)v1559 + 3) = *((void *)v1560 + 3);
            *((void *)v1559 + 4) = *((void *)v1560 + 4);
            *((void *)v1559 + 5) = *((void *)v1560 + 5);
            *((void *)v1559 + 6) = *((void *)v1560 + 6);
            *((void *)v1559 + 7) = *((void *)v1560 + 7);
            *((void *)v1559 + 8) = *((void *)v1560 + 8);
            *((void *)v1559 + 9) = *((void *)v1560 + 9);
            *((void *)v1559 + 10) = *((void *)v1560 + 10);
            *((void *)v1559 + 11) = *((void *)v1560 + 11);
            uint64_t v1563 = v1561[11];
            uint64_t v1740 = &v1559[v1563];
            uint64_t v1704 = &v1560[v1563];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1704, 1, v1750))
            {
              uint64_t v1564 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1740, v1704, *(void *)(*(void *)(v1564 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1740, v1704, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1740, 0, 1, v1750);
            }
            uint64_t v1565 = v1561[12];
            uint64_t v1566 = &v1559[v1565];
            uint64_t v1567 = &v1560[v1565];
            *(void *)uint64_t v1566 = *(void *)v1567;
            *((void *)v1566 + 1) = *((void *)v1567 + 1);
            *(void *)&v1559[v1561[13]] = *(void *)&v1560[v1561[13]];
            uint64_t v1568 = v1561[14];
            uint64_t v1569 = &v1559[v1568];
            uint64_t v1570 = &v1560[v1568];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1570, 1, v1750))
            {
              uint64_t v1571 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1569, v1570, *(void *)(*(void *)(v1571 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1569, v1570, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1569, 0, 1, v1750);
            }
            *(void *)&v1559[v1561[15]] = *(void *)&v1560[v1561[15]];
            *(void *)&v1559[v1561[16]] = *(void *)&v1560[v1561[16]];
            uint64_t v1572 = v1561[17];
            uint64_t v1573 = &v1559[v1572];
            uint64_t v1574 = &v1560[v1572];
            *(void *)uint64_t v1573 = *(void *)v1574;
            *((void *)v1573 + 1) = *((void *)v1574 + 1);
            *(void *)&v1559[v1561[18]] = *(void *)&v1560[v1561[18]];
            *(void *)&v1559[v1561[19]] = *(void *)&v1560[v1561[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1559, 0, 1, (uint64_t)v1561);
          }
          uint64_t v1575 = v1757[22];
          uint64_t v1576 = &v8[v1575];
          uint64_t v1577 = &v9[v1575];
          uint64_t v1578 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1577, 1, (uint64_t)v1578))
          {
            uint64_t v1579 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1576, v1577, *(void *)(*(void *)(v1579 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1576 = *(void *)v1577;
            *((void *)v1576 + 1) = *((void *)v1577 + 1);
            *((void *)v1576 + 2) = *((void *)v1577 + 2);
            *((void *)v1576 + 3) = *((void *)v1577 + 3);
            *((void *)v1576 + 4) = *((void *)v1577 + 4);
            *((void *)v1576 + 5) = *((void *)v1577 + 5);
            *((void *)v1576 + 6) = *((void *)v1577 + 6);
            *((void *)v1576 + 7) = *((void *)v1577 + 7);
            uint64_t v1580 = v1578[8];
            v1741 = &v1576[v1580];
            uint64_t v1581 = &v1577[v1580];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1581, 1, v1746))
            {
              uint64_t v1582 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1741, v1581, *(void *)(*(void *)(v1582 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1746 - 8) + 16))(v1741, v1581, v1746);
              __swift_storeEnumTagSinglePayload((uint64_t)v1741, 0, 1, v1746);
            }
            uint64_t v1583 = v1578[9];
            uint64_t v1584 = &v1576[v1583];
            uint64_t v1585 = &v1577[v1583];
            *(void *)uint64_t v1584 = *(void *)v1585;
            *((void *)v1584 + 1) = *((void *)v1585 + 1);
            uint64_t v1586 = v1578[10];
            uint64_t v1587 = &v1576[v1586];
            uint64_t v1588 = &v1577[v1586];
            *(void *)uint64_t v1587 = *(void *)v1588;
            *((void *)v1587 + 1) = *((void *)v1588 + 1);
            uint64_t v1589 = v1578[11];
            uint64_t v1590 = &v1576[v1589];
            uint64_t v1591 = &v1577[v1589];
            *(void *)uint64_t v1590 = *(void *)v1591;
            *((void *)v1590 + 1) = *((void *)v1591 + 1);
            uint64_t v1592 = v1578[12];
            uint64_t v1593 = &v1576[v1592];
            uint64_t v1594 = &v1577[v1592];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1594, 1, v1750))
            {
              uint64_t v1595 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1593, v1594, *(void *)(*(void *)(v1595 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1593, v1594, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1593, 0, 1, v1750);
            }
            uint64_t v1596 = v1578[13];
            uint64_t v1597 = &v1576[v1596];
            uint64_t v1598 = &v1577[v1596];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1577[v1596], 1, v1750))
            {
              uint64_t v1599 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1597, v1598, *(void *)(*(void *)(v1599 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1597, v1598, v1750);
              __swift_storeEnumTagSinglePayload((uint64_t)v1597, 0, 1, v1750);
            }
            uint64_t v1600 = v1578[14];
            uint64_t v1601 = &v1576[v1600];
            uint64_t v1602 = &v1577[v1600];
            uint64_t v1603 = *(void *)v1602;
            v1601[8] = v1602[8];
            *(void *)uint64_t v1601 = v1603;
            uint64_t v1604 = v1578[15];
            uint64_t v1605 = &v1576[v1604];
            uint64_t v1606 = &v1577[v1604];
            *(void *)uint64_t v1605 = *(void *)v1606;
            *((void *)v1605 + 1) = *((void *)v1606 + 1);
            uint64_t v1607 = v1578[16];
            uint64_t v1608 = &v1576[v1607];
            uint64_t v1609 = &v1577[v1607];
            *(void *)uint64_t v1608 = *(void *)v1609;
            *((void *)v1608 + 1) = *((void *)v1609 + 1);
            uint64_t v1610 = v1578[17];
            uint64_t v1611 = &v1576[v1610];
            uint64_t v1612 = &v1577[v1610];
            *(void *)uint64_t v1611 = *(void *)v1612;
            *((void *)v1611 + 1) = *((void *)v1612 + 1);
            uint64_t v1613 = v1578[18];
            uint64_t v1614 = &v1576[v1613];
            v1615 = &v1577[v1613];
            *(void *)uint64_t v1614 = *(void *)v1615;
            *((void *)v1614 + 1) = *((void *)v1615 + 1);
            uint64_t v1616 = v1578[19];
            uint64_t v1617 = &v1576[v1616];
            uint64_t v1618 = &v1577[v1616];
            *(void *)uint64_t v1617 = *(void *)v1618;
            *((void *)v1617 + 1) = *((void *)v1618 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1576, 0, 1, (uint64_t)v1578);
          }
          uint64_t v861 = v1757[23];
          goto LABEL_541;
        case 2u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v27 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v28 = v27[7];
          uint64_t v29 = &v8[v28];
          uint64_t v30 = &v9[v28];
          uint64_t v31 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
          {
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
            __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
          }
          uint64_t v149 = v27[8];
          uint64_t v150 = &v8[v149];
          uint64_t v151 = &v9[v149];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v149], 1, v31))
          {
            uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v150, v151, v31);
            __swift_storeEnumTagSinglePayload((uint64_t)v150, 0, 1, v31);
          }
          uint64_t v291 = v27[9];
          uint64_t v292 = &v8[v291];
          uint64_t v293 = &v9[v291];
          *(void *)uint64_t v292 = *(void *)v293;
          *((void *)v292 + 1) = *((void *)v293 + 1);
          *(void *)&v8[v27[10]] = *(void *)&v9[v27[10]];
          *(void *)&v8[v27[11]] = *(void *)&v9[v27[11]];
          uint64_t v294 = v27[12];
          uint64_t v295 = &v8[v294];
          uint64_t v296 = &v9[v294];
          *(void *)uint64_t v295 = *(void *)v296;
          *((void *)v295 + 1) = *((void *)v296 + 1);
          uint64_t v297 = v27[13];
          uint64_t v298 = &v8[v297];
          uint64_t v299 = &v9[v297];
          uint64_t v300 = *(void *)&v9[v297];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v300)
          {
            long long v432 = *(_OWORD *)v299;
            long long v433 = *((_OWORD *)v299 + 1);
            *((void *)v298 + 4) = *((void *)v299 + 4);
            *(_OWORD *)uint64_t v298 = v432;
            *((_OWORD *)v298 + 1) = v433;
            goto LABEL_544;
          }
          *(void *)uint64_t v298 = v300;
          *((void *)v298 + 1) = *((void *)v299 + 1);
          *((void *)v298 + 2) = *((void *)v299 + 2);
          *((void *)v298 + 3) = *((void *)v299 + 3);
          *((void *)v298 + 4) = *((void *)v299 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_153:
          swift_bridgeObjectRetain();
          goto LABEL_543;
        case 3u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          v1758 = (int *)type metadata accessor for Photo(0);
          uint64_t v33 = v1758[11];
          uint64_t v1718 = &v8[v33];
          uint64_t v1733 = &v9[v33];
          uint64_t v34 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v1744 = v34;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1733, 1, v34))
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1718, v1733, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v1718, v1733, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)v1718, 0, 1, v34);
          }
          *(void *)&v8[v1758[12]] = *(void *)&v9[v1758[12]];
          *(void *)&v8[v1758[13]] = *(void *)&v9[v1758[13]];
          *(void *)&v8[v1758[14]] = *(void *)&v9[v1758[14]];
          *(void *)&v8[v1758[15]] = *(void *)&v9[v1758[15]];
          uint64_t v153 = v1758[16];
          uint64_t v154 = &v8[v153];
          uint64_t v155 = &v9[v153];
          *(void *)uint64_t v154 = *(void *)v155;
          *((void *)v154 + 1) = *((void *)v155 + 1);
          uint64_t v156 = v1758[17];
          uint64_t v1751 = &v8[v156];
          uint64_t v157 = &v9[v156];
          uint64_t v158 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          uint64_t v159 = (int *)v158;
          swift_bridgeObjectRetain();
          uint64_t v160 = v157;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v157, 1, v158))
          {
            uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v1751, v157, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1751 = *(void *)v157;
            *((void *)v1751 + 1) = *((void *)v157 + 1);
            uint64_t v301 = *(int *)(v158 + 20);
            uint64_t v302 = &v1751[v301];
            uint64_t v303 = &v157[v301];
            uint64_t v304 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v1723 = v157;
            uint64_t v1735 = v159;
            if (__swift_getEnumTagSinglePayload((uint64_t)v303, 1, v304))
            {
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v302, v303, *(void *)(*(void *)(v306 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v302 = *(void *)v303;
              *((void *)v302 + 1) = *((void *)v303 + 1);
              *((void *)v302 + 2) = *((void *)v303 + 2);
              *((void *)v302 + 3) = *((void *)v303 + 3);
              *((void *)v302 + 4) = *((void *)v303 + 4);
              *((void *)v302 + 5) = *((void *)v303 + 5);
              *((void *)v302 + 6) = *((void *)v303 + 6);
              *((void *)v302 + 7) = *((void *)v303 + 7);
              *((void *)v302 + 8) = *((void *)v303 + 8);
              *((void *)v302 + 9) = *((void *)v303 + 9);
              *((void *)v302 + 10) = *((void *)v303 + 10);
              *((void *)v302 + 11) = *((void *)v303 + 11);
              *((void *)v302 + 12) = *((void *)v303 + 12);
              *((void *)v302 + 13) = *((void *)v303 + 13);
              *((void *)v302 + 14) = *((void *)v303 + 14);
              *((void *)v302 + 15) = *((void *)v303 + 15);
              v302[128] = v303[128];
              v302[129] = v303[129];
              v302[130] = v303[130];
              *((void *)v302 + 17) = *((void *)v303 + 17);
              *((void *)v302 + 18) = *((void *)v303 + 18);
              *((void *)v302 + 19) = *((void *)v303 + 19);
              *((void *)v302 + 20) = *((void *)v303 + 20);
              *((void *)v302 + 21) = *((void *)v303 + 21);
              *((void *)v302 + 22) = *((void *)v303 + 22);
              *((void *)v302 + 23) = *((void *)v303 + 23);
              *((void *)v302 + 24) = *((void *)v303 + 24);
              *((void *)v302 + 25) = *((void *)v303 + 25);
              *((void *)v302 + 26) = *((void *)v303 + 26);
              *((void *)v302 + 27) = *((void *)v303 + 27);
              *((void *)v302 + 28) = *((void *)v303 + 28);
              *((void *)v302 + 29) = *((void *)v303 + 29);
              *((void *)v302 + 30) = *((void *)v303 + 30);
              *((void *)v302 + 31) = *((void *)v303 + 31);
              *((void *)v302 + 32) = *((void *)v303 + 32);
              *((void *)v302 + 33) = *((void *)v303 + 33);
              *((void *)v302 + 34) = *((void *)v303 + 34);
              *((void *)v302 + 35) = *((void *)v303 + 35);
              *((void *)v302 + 36) = *((void *)v303 + 36);
              *((void *)v302 + 37) = *((void *)v303 + 37);
              *((void *)v302 + 38) = *((void *)v303 + 38);
              *((void *)v302 + 39) = *((void *)v303 + 39);
              *((void *)v302 + 40) = *((void *)v303 + 40);
              *((void *)v302 + 41) = *((void *)v303 + 41);
              *((void *)v302 + 42) = *((void *)v303 + 42);
              *((void *)v302 + 43) = *((void *)v303 + 43);
              *((void *)v302 + 44) = *((void *)v303 + 44);
              *((void *)v302 + 45) = *((void *)v303 + 45);
              *((void *)v302 + 46) = *((void *)v303 + 46);
              uint64_t v473 = *((void *)v303 + 47);
              v302[384] = v303[384];
              *((void *)v302 + 47) = v473;
              *((void *)v302 + 49) = *((void *)v303 + 49);
              *((void *)v302 + 50) = *((void *)v303 + 50);
              *((void *)v302 + 51) = *((void *)v303 + 51);
              *((void *)v302 + 52) = *((void *)v303 + 52);
              uint64_t v474 = *(int *)(v304 + 140);
              uint64_t v1708 = &v302[v474];
              uint64_t v475 = &v303[v474];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v475, 1, v1744))
              {
                uint64_t v476 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1708, v475, *(void *)(*(void *)(v476 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1708, v475, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v1708, 0, 1, v1744);
              }
              uint64_t v481 = *(int *)(v304 + 144);
              uint64_t v482 = &v302[v481];
              unint64_t v483 = &v303[v481];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v303[v481], 1, v1744))
              {
                uint64_t v484 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v482, v483, *(void *)(*(void *)(v484 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v482, v483, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v482, 0, 1, v1744);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v302, 0, 1, v304);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            uint64_t v485 = v159[6];
            uint64_t v486 = (void *)(v305 + v485);
            v487 = &v157[v485];
            uint64_t v488 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v487, 1, v488))
            {
              uint64_t v489 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v486, v487, *(void *)(*(void *)(v489 - 8) + 64));
            }
            else
            {
              *uint64_t v486 = *(void *)v487;
              v486[1] = *((void *)v487 + 1);
              v486[2] = *((void *)v487 + 2);
              v486[3] = *((void *)v487 + 3);
              v486[4] = *((void *)v487 + 4);
              v486[5] = *((void *)v487 + 5);
              v486[6] = *((void *)v487 + 6);
              v486[7] = *((void *)v487 + 7);
              v486[8] = *((void *)v487 + 8);
              v486[9] = *((void *)v487 + 9);
              v486[10] = *((void *)v487 + 10);
              v486[11] = *((void *)v487 + 11);
              v486[12] = *((void *)v487 + 12);
              v486[13] = *((void *)v487 + 13);
              v486[14] = *((void *)v487 + 14);
              v486[15] = *((void *)v487 + 15);
              *((unsigned char *)v486 + 128) = v487[128];
              *((unsigned char *)v486 + 129) = v487[129];
              *((unsigned char *)v486 + 130) = v487[130];
              v486[17] = *((void *)v487 + 17);
              v486[18] = *((void *)v487 + 18);
              v486[19] = *((void *)v487 + 19);
              v486[20] = *((void *)v487 + 20);
              v486[21] = *((void *)v487 + 21);
              v486[22] = *((void *)v487 + 22);
              v486[23] = *((void *)v487 + 23);
              v486[24] = *((void *)v487 + 24);
              v486[25] = *((void *)v487 + 25);
              v486[26] = *((void *)v487 + 26);
              v486[27] = *((void *)v487 + 27);
              v486[28] = *((void *)v487 + 28);
              v486[29] = *((void *)v487 + 29);
              v486[30] = *((void *)v487 + 30);
              v486[31] = *((void *)v487 + 31);
              v486[32] = *((void *)v487 + 32);
              v486[33] = *((void *)v487 + 33);
              v486[34] = *((void *)v487 + 34);
              v486[35] = *((void *)v487 + 35);
              uint64_t v490 = *((void *)v487 + 36);
              *((unsigned char *)v486 + 296) = v487[296];
              v486[36] = v490;
              uint64_t v491 = *(int *)(v488 + 112);
              uint64_t v1692 = (char *)v486 + v491;
              uint64_t v492 = &v487[v491];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v492, 1, v1744))
              {
                uint64_t v493 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1692, v492, *(void *)(*(void *)(v493 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1692, v492, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v1692, 0, 1, v1744);
              }
              uint64_t v494 = *(int *)(v488 + 116);
              uint64_t v495 = (char *)v486 + v494;
              uint64_t v496 = &v487[v494];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v487[v494], 1, v1744))
              {
                uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v495, v496, *(void *)(*(void *)(v497 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v495, v496, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v495, 0, 1, v1744);
              }
              uint64_t v160 = v157;
              __swift_storeEnumTagSinglePayload((uint64_t)v486, 0, 1, v488);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            uint64_t v498 = v159[7];
            uint64_t v499 = (void *)(v305 + v498);
            uint64_t v500 = (void *)((char *)v160 + v498);
            uint64_t v501 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v500, 1, (uint64_t)v501))
            {
              uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v499, v500, *(void *)(*(void *)(v502 - 8) + 64));
            }
            else
            {
              *uint64_t v499 = *v500;
              v499[1] = v500[1];
              v499[2] = v500[2];
              v499[3] = v500[3];
              v499[4] = v500[4];
              v499[5] = v500[5];
              v499[6] = v500[6];
              v499[7] = v500[7];
              v499[8] = v500[8];
              v499[9] = v500[9];
              v499[10] = v500[10];
              v499[11] = v500[11];
              v499[12] = v500[12];
              v499[13] = v500[13];
              v499[14] = v500[14];
              v499[15] = v500[15];
              *((unsigned char *)v499 + 128) = *((unsigned char *)v500 + 128);
              *((unsigned char *)v499 + 129) = *((unsigned char *)v500 + 129);
              *((unsigned char *)v499 + 130) = *((unsigned char *)v500 + 130);
              v499[17] = v500[17];
              v499[18] = v500[18];
              v499[19] = v500[19];
              v499[20] = v500[20];
              v499[21] = v500[21];
              v499[22] = v500[22];
              v499[23] = v500[23];
              v499[24] = v500[24];
              v499[25] = v500[25];
              v499[26] = v500[26];
              v499[27] = v500[27];
              v499[28] = v500[28];
              v499[29] = v500[29];
              v499[30] = v500[30];
              v499[31] = v500[31];
              v499[32] = v500[32];
              v499[33] = v500[33];
              v499[34] = v500[34];
              v499[35] = v500[35];
              uint64_t v503 = v500[36];
              *((unsigned char *)v499 + 296) = *((unsigned char *)v500 + 296);
              v499[36] = v503;
              v499[38] = v500[38];
              v499[39] = v500[39];
              uint64_t v504 = v501[29];
              uint64_t v1709 = (char *)v499 + v504;
              uint64_t v505 = (char *)v500 + v504;
              uint64_t v506 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v505, 1, v506))
              {
                uint64_t v507 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1709, v505, *(void *)(*(void *)(v507 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v506 - 8) + 16))(v1709, v505, v506);
                __swift_storeEnumTagSinglePayload((uint64_t)v1709, 0, 1, v506);
              }
              uint64_t v508 = v501[30];
              uint64_t v509 = (void *)((char *)v499 + v508);
              uint64_t v510 = (void *)((char *)v500 + v508);
              *uint64_t v509 = *v510;
              v509[1] = v510[1];
              uint64_t v511 = v501[31];
              uint64_t v512 = (char *)v499 + v511;
              v513 = (char *)v500 + v511;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v513, 1, v1744))
              {
                uint64_t v514 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v512, v513, *(void *)(*(void *)(v514 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v512, v513, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v512, 0, 1, v1744);
              }
              uint64_t v515 = v501[32];
              uint64_t v516 = (char *)v499 + v515;
              v517 = (char *)v500 + v515;
              if (__swift_getEnumTagSinglePayload((uint64_t)v500 + v515, 1, v1744))
              {
                uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v516, v517, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, v1744);
              }
              uint64_t v160 = v1723;
              __swift_storeEnumTagSinglePayload((uint64_t)v499, 0, 1, (uint64_t)v501);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            uint64_t v519 = v159[8];
            uint64_t v520 = (void *)(v305 + v519);
            v521 = (void *)((char *)v160 + v519);
            uint64_t v522 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v521, 1, v522))
            {
              uint64_t v523 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v520, v521, *(void *)(*(void *)(v523 - 8) + 64));
            }
            else
            {
              void *v520 = *v521;
              v520[1] = v521[1];
              v520[2] = v521[2];
              v520[3] = v521[3];
              v520[4] = v521[4];
              v520[5] = v521[5];
              v520[6] = v521[6];
              v520[7] = v521[7];
              v520[8] = v521[8];
              v520[9] = v521[9];
              v520[10] = v521[10];
              v520[11] = v521[11];
              v520[12] = v521[12];
              v520[13] = v521[13];
              v520[14] = v521[14];
              v520[15] = v521[15];
              *((unsigned char *)v520 + 128) = *((unsigned char *)v521 + 128);
              *((unsigned char *)v520 + 129) = *((unsigned char *)v521 + 129);
              *((unsigned char *)v520 + 130) = *((unsigned char *)v521 + 130);
              v520[17] = v521[17];
              v520[18] = v521[18];
              v520[19] = v521[19];
              v520[20] = v521[20];
              v520[21] = v521[21];
              v520[22] = v521[22];
              v520[23] = v521[23];
              v520[24] = v521[24];
              v520[25] = v521[25];
              v520[26] = v521[26];
              v520[27] = v521[27];
              v520[28] = v521[28];
              v520[29] = v521[29];
              v520[30] = v521[30];
              v520[31] = v521[31];
              v520[32] = v521[32];
              v520[33] = v521[33];
              uint64_t v524 = v521[34];
              *((unsigned char *)v520 + 280) = *((unsigned char *)v521 + 280);
              v520[34] = v524;
              v520[36] = v521[36];
              v520[37] = v521[37];
              uint64_t v525 = *(int *)(v522 + 108);
              uint64_t v1693 = (char *)v520 + v525;
              uint64_t v526 = (char *)v521 + v525;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v526, 1, v1744))
              {
                uint64_t v527 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1693, v526, *(void *)(*(void *)(v527 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1693, v526, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v1693, 0, 1, v1744);
              }
              uint64_t v528 = *(int *)(v522 + 112);
              uint64_t v529 = (char *)v520 + v528;
              v530 = (char *)v521 + v528;
              if (__swift_getEnumTagSinglePayload((uint64_t)v521 + v528, 1, v1744))
              {
                uint64_t v531 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v529, v530, *(void *)(*(void *)(v531 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v529, v530, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v529, 0, 1, v1744);
              }
              uint64_t v160 = v1723;
              __swift_storeEnumTagSinglePayload((uint64_t)v520, 0, 1, v522);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            uint64_t v532 = v159[9];
            uint64_t v533 = (void *)(v305 + v532);
            uint64_t v534 = (void *)((char *)v160 + v532);
            uint64_t v535 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v534, 1, (uint64_t)v535))
            {
              uint64_t v536 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v533, v534, *(void *)(*(void *)(v536 - 8) + 64));
            }
            else
            {
              void *v533 = *v534;
              v533[1] = v534[1];
              v533[2] = v534[2];
              v533[3] = v534[3];
              v533[4] = v534[4];
              v533[5] = v534[5];
              v533[6] = v534[6];
              v533[7] = v534[7];
              v533[8] = v534[8];
              v533[9] = v534[9];
              v533[10] = v534[10];
              v533[11] = v534[11];
              v533[12] = v534[12];
              v533[13] = v534[13];
              v533[14] = v534[14];
              v533[15] = v534[15];
              *((unsigned char *)v533 + 128) = *((unsigned char *)v534 + 128);
              *((unsigned char *)v533 + 129) = *((unsigned char *)v534 + 129);
              *((unsigned char *)v533 + 130) = *((unsigned char *)v534 + 130);
              v533[17] = v534[17];
              v533[18] = v534[18];
              v533[19] = v534[19];
              v533[20] = v534[20];
              v533[21] = v534[21];
              v533[22] = v534[22];
              v533[23] = v534[23];
              v533[24] = v534[24];
              v533[25] = v534[25];
              v533[26] = v534[26];
              v533[27] = v534[27];
              v533[28] = v534[28];
              v533[29] = v534[29];
              v533[30] = v534[30];
              v533[31] = v534[31];
              uint64_t v537 = v535[24];
              uint64_t v1694 = (char *)v533 + v537;
              uint64_t v538 = (char *)v534 + v537;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v538, 1, v1744))
              {
                uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1694, v538, *(void *)(*(void *)(v539 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1694, v538, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v1694, 0, 1, v1744);
              }
              uint64_t v540 = v535[25];
              uint64_t v541 = (char *)v533 + v540;
              uint64_t v542 = (char *)v534 + v540;
              if (__swift_getEnumTagSinglePayload((uint64_t)v534 + v540, 1, v1744))
              {
                uint64_t v543 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v541, v542, *(void *)(*(void *)(v543 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v541, v542, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v541, 0, 1, v1744);
              }
              uint64_t v544 = v535[26];
              uint64_t v545 = (char *)v533 + v544;
              v546 = (char *)v534 + v544;
              uint64_t v547 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v546, 1, v547))
              {
                uint64_t v548 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v545, v546, *(void *)(*(void *)(v548 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v547 - 8) + 16))(v545, v546, v547);
                __swift_storeEnumTagSinglePayload((uint64_t)v545, 0, 1, v547);
              }
              uint64_t v160 = v1723;
              __swift_storeEnumTagSinglePayload((uint64_t)v533, 0, 1, (uint64_t)v535);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            uint64_t v549 = v159[10];
            uint64_t v550 = (void *)(v305 + v549);
            v551 = (void *)((char *)v160 + v549);
            uint64_t v552 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v551, 1, (uint64_t)v552))
            {
              uint64_t v553 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v550, v551, *(void *)(*(void *)(v553 - 8) + 64));
            }
            else
            {
              *uint64_t v550 = *v551;
              v550[1] = v551[1];
              v550[2] = v551[2];
              v550[3] = v551[3];
              v550[4] = v551[4];
              v550[5] = v551[5];
              v550[6] = v551[6];
              v550[7] = v551[7];
              v550[8] = v551[8];
              v550[9] = v551[9];
              v550[10] = v551[10];
              v550[11] = v551[11];
              v550[12] = v551[12];
              v550[13] = v551[13];
              v550[14] = v551[14];
              v550[15] = v551[15];
              *((unsigned char *)v550 + 128) = *((unsigned char *)v551 + 128);
              *((unsigned char *)v550 + 129) = *((unsigned char *)v551 + 129);
              *((unsigned char *)v550 + 130) = *((unsigned char *)v551 + 130);
              v550[17] = v551[17];
              v550[18] = v551[18];
              v550[19] = v551[19];
              v550[20] = v551[20];
              v550[21] = v551[21];
              v550[22] = v551[22];
              v550[23] = v551[23];
              v550[24] = v551[24];
              v550[25] = v551[25];
              v550[26] = v551[26];
              v550[27] = v551[27];
              uint64_t v554 = v552[22];
              uint64_t v1695 = (char *)v550 + v554;
              uint64_t v1651 = (char *)v551 + v554;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1651, 1, v1744))
              {
                uint64_t v555 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1695, v1651, *(void *)(*(void *)(v555 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1695, v1651, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v1695, 0, 1, v1744);
              }
              uint64_t v556 = v552[23];
              uint64_t v557 = (char *)v550 + v556;
              v558 = (char *)v551 + v556;
              if (__swift_getEnumTagSinglePayload((uint64_t)v551 + v556, 1, v1744))
              {
                uint64_t v559 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v557, v558, *(void *)(*(void *)(v559 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v557, v558, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v557, 0, 1, v1744);
              }
              uint64_t v560 = v552[24];
              uint64_t v561 = (char *)v550 + v560;
              uint64_t v562 = (char *)v551 + v560;
              uint64_t v563 = *(void *)v562;
              v561[8] = v562[8];
              *(void *)uint64_t v561 = v563;
              uint64_t v564 = v552[25];
              uint64_t v565 = (char *)v550 + v564;
              uint64_t v566 = (char *)v551 + v564;
              uint64_t v567 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v566, 1, v567))
              {
                uint64_t v568 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v565, v566, *(void *)(*(void *)(v568 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v567 - 8) + 16))(v565, v566, v567);
                __swift_storeEnumTagSinglePayload((uint64_t)v565, 0, 1, v567);
              }
              uint64_t v160 = v1723;
              __swift_storeEnumTagSinglePayload((uint64_t)v550, 0, 1, (uint64_t)v552);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            uint64_t v569 = v159[11];
            uint64_t v570 = (void *)(v305 + v569);
            v571 = (void *)((char *)v160 + v569);
            v572 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v571, 1, (uint64_t)v572))
            {
              uint64_t v573 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v570, v571, *(void *)(*(void *)(v573 - 8) + 64));
            }
            else
            {
              *uint64_t v570 = *v571;
              v570[1] = v571[1];
              v570[2] = v571[2];
              v570[3] = v571[3];
              v570[4] = v571[4];
              v570[5] = v571[5];
              v570[6] = v571[6];
              v570[7] = v571[7];
              v570[8] = v571[8];
              v570[9] = v571[9];
              v570[10] = v571[10];
              v570[11] = v571[11];
              *((unsigned char *)v570 + 96) = *((unsigned char *)v571 + 96);
              v570[13] = v571[13];
              v570[14] = v571[14];
              uint64_t v574 = v572[13];
              uint64_t v1710 = (char *)v570 + v574;
              v575 = (char *)v571 + v574;
              v1670 = (void *)type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v575, 1, (uint64_t)v1670))
              {
                uint64_t v576 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1710, v575, *(void *)(*(void *)(v576 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1670 - 1) + 16))(v1710, v575, v1670);
                __swift_storeEnumTagSinglePayload((uint64_t)v1710, 0, 1, (uint64_t)v1670);
              }
              uint64_t v577 = v572[14];
              uint64_t v578 = (char *)v570 + v577;
              uint64_t v579 = (char *)v571 + v577;
              if (__swift_getEnumTagSinglePayload((uint64_t)v571 + v577, 1, (uint64_t)v1670))
              {
                uint64_t v580 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v578, v579, *(void *)(*(void *)(v580 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1670 - 1) + 16))(v578, v579, v1670);
                __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, (uint64_t)v1670);
              }
              uint64_t v581 = v572[15];
              uint64_t v582 = (void *)((char *)v570 + v581);
              uint64_t v583 = (void *)((char *)v571 + v581);
              void *v582 = *v583;
              v582[1] = v583[1];
              uint64_t v584 = v572[16];
              uint64_t v585 = (void *)((char *)v570 + v584);
              v586 = (void *)((char *)v571 + v584);
              void *v585 = *v586;
              v585[1] = v586[1];
              uint64_t v587 = v572[17];
              uint64_t v588 = (void *)((char *)v570 + v587);
              v589 = (void *)((char *)v571 + v587);
              void *v588 = *v589;
              v588[1] = v589[1];
              uint64_t v590 = v572[18];
              uint64_t v1685 = (char *)v570 + v590;
              uint64_t v1683 = (char *)v571 + v590;
              uint64_t v591 = type metadata accessor for DateComponents();
              v592 = *(void (**)(char *, char *, uint64_t))(*(void *)(v591 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v592(v1685, v1683, v591);
              v592((char *)v570 + v572[19], (char *)v571 + v572[19], v591);
              uint64_t v593 = v572[20];
              uint64_t v594 = (void *)((char *)v570 + v593);
              v595 = (void *)((char *)v571 + v593);
              void *v594 = *v595;
              v594[1] = v595[1];
              uint64_t v596 = v572[21];
              uint64_t v597 = (void *)((char *)v570 + v596);
              uint64_t v598 = (void *)((char *)v571 + v596);
              *uint64_t v597 = *v598;
              v597[1] = v598[1];
              uint64_t v599 = v572[22];
              uint64_t v600 = (void *)((char *)v570 + v599);
              uint64_t v601 = (void *)((char *)v571 + v599);
              *uint64_t v600 = *v601;
              v600[1] = v601[1];
              uint64_t v602 = v572[23];
              uint64_t v603 = (void *)((char *)v570 + v602);
              v604 = (void *)((char *)v571 + v602);
              *uint64_t v603 = *v604;
              v603[1] = v604[1];
              uint64_t v605 = v572[24];
              uint64_t v606 = (void *)((char *)v570 + v605);
              uint64_t v607 = (void *)((char *)v571 + v605);
              *uint64_t v606 = *v607;
              v606[1] = v607[1];
              uint64_t v608 = v572[25];
              uint64_t v609 = (void *)((char *)v570 + v608);
              uint64_t v610 = (void *)((char *)v571 + v608);
              void *v609 = *v610;
              v609[1] = v610[1];
              uint64_t v611 = v572[26];
              v612 = (void *)((char *)v570 + v611);
              uint64_t v613 = (void *)((char *)v571 + v611);
              void *v612 = *v613;
              v612[1] = v613[1];
              uint64_t v614 = v572[27];
              uint64_t v615 = (void *)((char *)v570 + v614);
              uint64_t v616 = (void *)((char *)v571 + v614);
              *uint64_t v615 = *v616;
              v615[1] = v616[1];
              uint64_t v617 = v572[28];
              uint64_t v618 = (void *)((char *)v570 + v617);
              uint64_t v619 = (void *)((char *)v571 + v617);
              *uint64_t v618 = *v619;
              v618[1] = v619[1];
              uint64_t v620 = v572[29];
              v621 = (void *)((char *)v570 + v620);
              uint64_t v622 = (void *)((char *)v571 + v620);
              void *v621 = *v622;
              v621[1] = v622[1];
              uint64_t v623 = v572[30];
              uint64_t v624 = (void *)((char *)v570 + v623);
              v625 = (void *)((char *)v571 + v623);
              *uint64_t v624 = *v625;
              v624[1] = v625[1];
              uint64_t v626 = v572[31];
              long long v627 = (void *)((char *)v570 + v626);
              uint64_t v628 = (void *)((char *)v571 + v626);
              *long long v627 = *v628;
              v627[1] = v628[1];
              uint64_t v629 = v572[32];
              v630 = (void *)((char *)v570 + v629);
              uint64_t v631 = (void *)((char *)v571 + v629);
              void *v630 = *v631;
              v630[1] = v631[1];
              *(void *)((char *)v570 + v572[33]) = *(void *)((char *)v571 + v572[33]);
              *(void *)((char *)v570 + v572[34]) = *(void *)((char *)v571 + v572[34]);
              uint64_t v632 = v572[35];
              uint64_t v633 = (void *)((char *)v570 + v632);
              v634 = (void *)((char *)v571 + v632);
              void *v633 = *v634;
              v633[1] = v634[1];
              uint64_t v635 = v572[36];
              uint64_t v636 = (void *)((char *)v570 + v635);
              long long v637 = (void *)((char *)v571 + v635);
              *uint64_t v636 = *v637;
              v636[1] = v637[1];
              uint64_t v638 = v572[37];
              uint64_t v639 = (void *)((char *)v570 + v638);
              v640 = (void *)((char *)v571 + v638);
              void *v639 = *v640;
              v639[1] = v640[1];
              uint64_t v641 = v572[38];
              uint64_t v1696 = (char *)v570 + v641;
              uint64_t v1643 = (char *)v571 + v641;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1643, 1, v1744))
              {
                uint64_t v642 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1696, v1643, *(void *)(*(void *)(v642 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1696, v1643, v1744);
                __swift_storeEnumTagSinglePayload((uint64_t)v1696, 0, 1, v1744);
              }
              uint64_t v643 = v572[39];
              v644 = (void *)((char *)v570 + v643);
              uint64_t v645 = (void *)((char *)v571 + v643);
              void *v644 = *v645;
              v644[1] = v645[1];
              uint64_t v646 = v572[40];
              uint64_t v647 = (void *)((char *)v570 + v646);
              v648 = (void *)((char *)v571 + v646);
              void *v647 = *v648;
              v647[1] = v648[1];
              uint64_t v649 = v572[41];
              uint64_t v650 = (char *)v570 + v649;
              uint64_t v651 = (char *)v571 + v649;
              uint64_t v652 = *(void *)v651;
              v650[8] = v651[8];
              *(void *)uint64_t v650 = v652;
              uint64_t v653 = v572[42];
              uint64_t v654 = (void *)((char *)v570 + v653);
              uint64_t v655 = (void *)((char *)v571 + v653);
              void *v654 = *v655;
              v654[1] = v655[1];
              uint64_t v656 = v572[43];
              v657 = (char *)v570 + v656;
              v658 = (char *)v571 + v656;
              long long v659 = *(_OWORD *)v658;
              *(void *)(v657 + 13) = *(void *)(v658 + 13);
              *(_OWORD *)v657 = v659;
              uint64_t v660 = v572[44];
              v661 = (void *)((char *)v570 + v660);
              v662 = (void *)((char *)v571 + v660);
              void *v661 = *v662;
              v661[1] = v662[1];
              uint64_t v663 = v572[45];
              uint64_t v664 = (void *)((char *)v570 + v663);
              uint64_t v665 = (void *)((char *)v571 + v663);
              *uint64_t v664 = *v665;
              v664[1] = v665[1];
              uint64_t v666 = v572[46];
              uint64_t v667 = (void *)((char *)v570 + v666);
              uint64_t v668 = (void *)((char *)v571 + v666);
              *uint64_t v667 = *v668;
              v667[1] = v668[1];
              uint64_t v669 = v572[47];
              uint64_t v670 = (void *)((char *)v570 + v669);
              long long v671 = (void *)((char *)v571 + v669);
              void *v670 = *v671;
              v670[1] = v671[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v570, 0, 1, (uint64_t)v572);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v160 = v1723;
              uint64_t v159 = v1735;
            }
            uint64_t v672 = v159[12];
            uint64_t v673 = (void *)(v305 + v672);
            uint64_t v674 = (void *)((char *)v160 + v672);
            uint64_t v675 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v674, 1, (uint64_t)v675))
            {
              uint64_t v676 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v673, v674, *(void *)(*(void *)(v676 - 8) + 64));
            }
            else
            {
              *uint64_t v673 = *v674;
              v673[1] = v674[1];
              v673[2] = v674[2];
              v673[3] = v674[3];
              v673[4] = v674[4];
              v673[5] = v674[5];
              v673[6] = v674[6];
              v673[7] = v674[7];
              v673[8] = v674[8];
              v673[9] = v674[9];
              v673[10] = v674[10];
              v673[11] = v674[11];
              *((unsigned char *)v673 + 96) = *((unsigned char *)v674 + 96);
              v673[13] = v674[13];
              v673[14] = v674[14];
              v673[15] = v674[15];
              v673[16] = v674[16];
              uint64_t v677 = v675[14];
              v1711 = (char *)v673 + v677;
              uint64_t v1671 = (char *)v674 + v677;
              uint64_t v1663 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1671, 1, (uint64_t)v1663))
              {
                uint64_t v678 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1711, v1671, *(void *)(*(void *)(v678 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1663 - 1) + 16))(v1711, v1671, v1663);
                __swift_storeEnumTagSinglePayload((uint64_t)v1711, 0, 1, (uint64_t)v1663);
              }
              uint64_t v679 = v675[15];
              uint64_t v680 = (char *)v673 + v679;
              long long v681 = (char *)v674 + v679;
              if (__swift_getEnumTagSinglePayload((uint64_t)v674 + v679, 1, (uint64_t)v1663))
              {
                uint64_t v682 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v680, v681, *(void *)(*(void *)(v682 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1663 - 1) + 16))(v680, v681, v1663);
                __swift_storeEnumTagSinglePayload((uint64_t)v680, 0, 1, (uint64_t)v1663);
              }
              uint64_t v683 = v675[16];
              uint64_t v684 = (void *)((char *)v673 + v683);
              uint64_t v685 = (void *)((char *)v674 + v683);
              *uint64_t v684 = *v685;
              v684[1] = v685[1];
              uint64_t v686 = v675[17];
              uint64_t v687 = (void *)((char *)v673 + v686);
              uint64_t v688 = (void *)((char *)v674 + v686);
              *uint64_t v687 = *v688;
              v687[1] = v688[1];
              uint64_t v689 = v675[18];
              uint64_t v690 = (void *)((char *)v673 + v689);
              uint64_t v691 = (void *)((char *)v674 + v689);
              *uint64_t v690 = *v691;
              v690[1] = v691[1];
              uint64_t v692 = v675[19];
              uint64_t v693 = (void *)((char *)v673 + v692);
              uint64_t v694 = (void *)((char *)v674 + v692);
              *uint64_t v693 = *v694;
              v693[1] = v694[1];
              uint64_t v695 = v675[20];
              uint64_t v696 = (void *)((char *)v673 + v695);
              uint64_t v697 = (void *)((char *)v674 + v695);
              *uint64_t v696 = *v697;
              v696[1] = v697[1];
              *(void *)((char *)v673 + v675[21]) = *(void *)((char *)v674 + v675[21]);
              *(void *)((char *)v673 + v675[22]) = *(void *)((char *)v674 + v675[22]);
              uint64_t v698 = v675[23];
              uint64_t v699 = (char *)v673 + v698;
              uint64_t v700 = (char *)v674 + v698;
              uint64_t v701 = *(void *)v700;
              v699[8] = v700[8];
              *(void *)uint64_t v699 = v701;
              uint64_t v702 = v675[24];
              uint64_t v703 = (char *)v673 + v702;
              uint64_t v704 = (char *)v674 + v702;
              uint64_t v705 = *(void *)v704;
              v703[8] = v704[8];
              *(void *)uint64_t v703 = v705;
              uint64_t v706 = v675[25];
              uint64_t v707 = (void *)((char *)v673 + v706);
              uint64_t v708 = (void *)((char *)v674 + v706);
              *uint64_t v707 = *v708;
              v707[1] = v708[1];
              uint64_t v709 = v675[26];
              uint64_t v710 = (void *)((char *)v673 + v709);
              uint64_t v711 = (void *)((char *)v674 + v709);
              *uint64_t v710 = *v711;
              v710[1] = v711[1];
              uint64_t v712 = v675[27];
              uint64_t v713 = (void *)((char *)v673 + v712);
              uint64_t v714 = (void *)((char *)v674 + v712);
              *uint64_t v713 = *v714;
              v713[1] = v714[1];
              uint64_t v715 = v675[28];
              uint64_t v716 = (void *)((char *)v673 + v715);
              uint64_t v717 = (void *)((char *)v674 + v715);
              *uint64_t v716 = *v717;
              v716[1] = v717[1];
              uint64_t v718 = v675[29];
              uint64_t v719 = (char *)v673 + v718;
              uint64_t v720 = (char *)v674 + v718;
              uint64_t v721 = *(void *)v720;
              v719[8] = v720[8];
              *(void *)uint64_t v719 = v721;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v673, 0, 1, (uint64_t)v675);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v160 = v1723;
              uint64_t v159 = v1735;
            }
            uint64_t v722 = v159[13];
            uint64_t v723 = (void *)(v305 + v722);
            uint64_t v724 = (void *)((char *)v160 + v722);
            uint64_t v725 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v724, 1, (uint64_t)v725))
            {
              uint64_t v726 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v723, v724, *(void *)(*(void *)(v726 - 8) + 64));
            }
            else
            {
              *uint64_t v723 = *v724;
              v723[1] = v724[1];
              v723[2] = v724[2];
              v723[3] = v724[3];
              v723[4] = v724[4];
              v723[5] = v724[5];
              v723[6] = v724[6];
              v723[7] = v724[7];
              v723[8] = v724[8];
              v723[9] = v724[9];
              v723[10] = v724[10];
              v723[11] = v724[11];
              *((unsigned char *)v723 + 96) = *((unsigned char *)v724 + 96);
              v723[13] = v724[13];
              v723[14] = v724[14];
              v723[15] = v724[15];
              v723[16] = v724[16];
              uint64_t v727 = v725[14];
              uint64_t v1724 = (char *)v723 + v727;
              v1676 = (char *)v724 + v727;
              uint64_t v1672 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1676, 1, (uint64_t)v1672))
              {
                uint64_t v728 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1724, v1676, *(void *)(*(void *)(v728 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1672 - 1) + 16))(v1724, v1676, v1672);
                __swift_storeEnumTagSinglePayload((uint64_t)v1724, 0, 1, (uint64_t)v1672);
              }
              uint64_t v729 = v725[15];
              uint64_t v730 = (void *)((char *)v723 + v729);
              uint64_t v731 = (void *)((char *)v724 + v729);
              *uint64_t v730 = *v731;
              v730[1] = v731[1];
              uint64_t v732 = v725[16];
              uint64_t v733 = (void *)((char *)v723 + v732);
              uint64_t v734 = (void *)((char *)v724 + v732);
              *uint64_t v733 = *v734;
              v733[1] = v734[1];
              uint64_t v735 = v725[17];
              uint64_t v736 = (void *)((char *)v723 + v735);
              uint64_t v737 = (void *)((char *)v724 + v735);
              *uint64_t v736 = *v737;
              v736[1] = v737[1];
              uint64_t v738 = v725[18];
              uint64_t v739 = (void *)((char *)v723 + v738);
              uint64_t v740 = (void *)((char *)v724 + v738);
              *uint64_t v739 = *v740;
              v739[1] = v740[1];
              uint64_t v741 = v725[19];
              uint64_t v742 = (void *)((char *)v723 + v741);
              uint64_t v743 = (void *)((char *)v724 + v741);
              *uint64_t v742 = *v743;
              v742[1] = v743[1];
              *(void *)((char *)v723 + v725[20]) = *(void *)((char *)v724 + v725[20]);
              uint64_t v744 = v725[21];
              uint64_t v745 = (void *)((char *)v723 + v744);
              uint64_t v746 = (void *)((char *)v724 + v744);
              *uint64_t v745 = *v746;
              v745[1] = v746[1];
              uint64_t v747 = v725[22];
              uint64_t v748 = (void *)((char *)v723 + v747);
              uint64_t v749 = (void *)((char *)v724 + v747);
              *uint64_t v748 = *v749;
              v748[1] = v749[1];
              uint64_t v750 = v725[23];
              uint64_t v751 = (void *)((char *)v723 + v750);
              uint64_t v752 = (void *)((char *)v724 + v750);
              *uint64_t v751 = *v752;
              v751[1] = v752[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v723, 0, 1, (uint64_t)v725);
              uint64_t v305 = (uint64_t)v1751;
              uint64_t v159 = v1735;
            }
            __swift_storeEnumTagSinglePayload(v305, 0, 1, (uint64_t)v159);
          }
          uint64_t v753 = v1758[18];
          uint64_t v754 = &v8[v753];
          uint64_t v755 = &v9[v753];
          uint64_t v756 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v755, 1, v756))
          {
            uint64_t v757 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v754, v755, *(void *)(*(void *)(v757 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v754 = *(void *)v755;
            *((void *)v754 + 1) = *((void *)v755 + 1);
            *((void *)v754 + 2) = *((void *)v755 + 2);
            *((void *)v754 + 3) = *((void *)v755 + 3);
            *((void *)v754 + 4) = *((void *)v755 + 4);
            *((void *)v754 + 5) = *((void *)v755 + 5);
            *((void *)v754 + 6) = *((void *)v755 + 6);
            *((void *)v754 + 7) = *((void *)v755 + 7);
            *((void *)v754 + 8) = *((void *)v755 + 8);
            *((void *)v754 + 9) = *((void *)v755 + 9);
            *((void *)v754 + 10) = *((void *)v755 + 10);
            *((void *)v754 + 11) = *((void *)v755 + 11);
            uint64_t v1753 = (int *)v756;
            uint64_t v758 = *(int *)(v756 + 40);
            uint64_t v1725 = &v755[v758];
            uint64_t v1737 = &v754[v758];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1725, 1, v1744))
            {
              uint64_t v759 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1737, v1725, *(void *)(*(void *)(v759 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1737, v1725, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v1737, 0, 1, v1744);
            }
            uint64_t v760 = *(int *)(v756 + 44);
            uint64_t v761 = &v754[v760];
            uint64_t v762 = &v755[v760];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v755[v760], 1, v1744))
            {
              uint64_t v763 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v761, v762, *(void *)(*(void *)(v763 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v761, v762, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v761, 0, 1, v1744);
            }
            uint64_t v764 = v1753[12];
            uint64_t v765 = &v754[v764];
            uint64_t v766 = &v755[v764];
            *(void *)uint64_t v765 = *(void *)v766;
            *((void *)v765 + 1) = *((void *)v766 + 1);
            uint64_t v767 = v1753[13];
            uint64_t v768 = &v754[v767];
            uint64_t v769 = &v755[v767];
            *(void *)uint64_t v768 = *(void *)v769;
            *((void *)v768 + 1) = *((void *)v769 + 1);
            uint64_t v770 = v1753[14];
            uint64_t v771 = &v754[v770];
            uint64_t v772 = &v755[v770];
            *(void *)uint64_t v771 = *(void *)v772;
            *((void *)v771 + 1) = *((void *)v772 + 1);
            uint64_t v773 = v1753[15];
            uint64_t v774 = &v754[v773];
            uint64_t v775 = &v755[v773];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v775, 1, v1744))
            {
              uint64_t v776 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v774, v775, *(void *)(*(void *)(v776 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v774, v775, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v774, 0, 1, v1744);
            }
            uint64_t v777 = v1753[16];
            uint64_t v778 = &v754[v777];
            uint64_t v779 = &v755[v777];
            *(void *)uint64_t v778 = *(void *)v779;
            *((void *)v778 + 1) = *((void *)v779 + 1);
            uint64_t v780 = v1753[17];
            uint64_t v781 = &v754[v780];
            uint64_t v782 = &v755[v780];
            *(void *)uint64_t v781 = *(void *)v782;
            *((void *)v781 + 1) = *((void *)v782 + 1);
            uint64_t v783 = v1753[18];
            uint64_t v784 = &v754[v783];
            uint64_t v785 = &v755[v783];
            *(void *)uint64_t v784 = *(void *)v785;
            *((void *)v784 + 1) = *((void *)v785 + 1);
            uint64_t v786 = v1753[19];
            uint64_t v787 = &v754[v786];
            uint64_t v788 = &v755[v786];
            *(void *)uint64_t v787 = *(void *)v788;
            *((void *)v787 + 1) = *((void *)v788 + 1);
            uint64_t v789 = v1753[20];
            uint64_t v790 = &v754[v789];
            uint64_t v791 = &v755[v789];
            *(void *)uint64_t v790 = *(void *)v791;
            *((void *)v790 + 1) = *((void *)v791 + 1);
            uint64_t v792 = v1753[21];
            uint64_t v793 = &v754[v792];
            uint64_t v794 = &v755[v792];
            *(void *)uint64_t v793 = *(void *)v794;
            *((void *)v793 + 1) = *((void *)v794 + 1);
            uint64_t v795 = v1753[22];
            uint64_t v796 = &v754[v795];
            uint64_t v797 = &v755[v795];
            *(void *)uint64_t v796 = *(void *)v797;
            *((void *)v796 + 1) = *((void *)v797 + 1);
            uint64_t v798 = v1753[23];
            uint64_t v799 = &v754[v798];
            uint64_t v800 = &v755[v798];
            *(void *)uint64_t v799 = *(void *)v800;
            *((void *)v799 + 1) = *((void *)v800 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v754, 0, 1, (uint64_t)v1753);
          }
          uint64_t v801 = v1758[19];
          uint64_t v802 = &v8[v801];
          uint64_t v803 = &v9[v801];
          uint64_t v804 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v803, 1, (uint64_t)v804))
          {
            uint64_t v805 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v802, v803, *(void *)(*(void *)(v805 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v802 = *(void *)v803;
            *((void *)v802 + 1) = *((void *)v803 + 1);
            *((void *)v802 + 2) = *((void *)v803 + 2);
            *((void *)v802 + 3) = *((void *)v803 + 3);
            *((void *)v802 + 4) = *((void *)v803 + 4);
            *((void *)v802 + 5) = *((void *)v803 + 5);
            *((void *)v802 + 6) = *((void *)v803 + 6);
            *((void *)v802 + 7) = *((void *)v803 + 7);
            *((void *)v802 + 8) = *((void *)v803 + 8);
            *((void *)v802 + 9) = *((void *)v803 + 9);
            *((void *)v802 + 10) = *((void *)v803 + 10);
            *((void *)v802 + 11) = *((void *)v803 + 11);
            uint64_t v806 = v804[11];
            uint64_t v1754 = &v802[v806];
            v1712 = &v803[v806];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1712, 1, v1744))
            {
              uint64_t v807 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1754, v1712, *(void *)(*(void *)(v807 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v1754, v1712, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v1754, 0, 1, v1744);
            }
            uint64_t v808 = v804[12];
            uint64_t v809 = &v802[v808];
            uint64_t v810 = &v803[v808];
            *(void *)uint64_t v809 = *(void *)v810;
            *((void *)v809 + 1) = *((void *)v810 + 1);
            *(void *)&v802[v804[13]] = *(void *)&v803[v804[13]];
            uint64_t v811 = v804[14];
            uint64_t v812 = &v802[v811];
            uint64_t v813 = &v803[v811];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v813, 1, v1744))
            {
              uint64_t v814 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v812, v813, *(void *)(*(void *)(v814 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v812, v813, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v812, 0, 1, v1744);
            }
            *(void *)&v802[v804[15]] = *(void *)&v803[v804[15]];
            *(void *)&v802[v804[16]] = *(void *)&v803[v804[16]];
            uint64_t v815 = v804[17];
            uint64_t v816 = &v802[v815];
            uint64_t v817 = &v803[v815];
            *(void *)uint64_t v816 = *(void *)v817;
            *((void *)v816 + 1) = *((void *)v817 + 1);
            *(void *)&v802[v804[18]] = *(void *)&v803[v804[18]];
            *(void *)&v802[v804[19]] = *(void *)&v803[v804[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v802, 0, 1, (uint64_t)v804);
          }
          uint64_t v818 = v1758[20];
          uint64_t v819 = &v8[v818];
          uint64_t v820 = &v9[v818];
          uint64_t v821 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v820, 1, (uint64_t)v821))
          {
            uint64_t v822 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v819, v820, *(void *)(*(void *)(v822 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v819 = *(void *)v820;
            *((void *)v819 + 1) = *((void *)v820 + 1);
            *((void *)v819 + 2) = *((void *)v820 + 2);
            *((void *)v819 + 3) = *((void *)v820 + 3);
            *((void *)v819 + 4) = *((void *)v820 + 4);
            *((void *)v819 + 5) = *((void *)v820 + 5);
            *((void *)v819 + 6) = *((void *)v820 + 6);
            *((void *)v819 + 7) = *((void *)v820 + 7);
            uint64_t v823 = v821[8];
            v1755 = &v819[v823];
            uint64_t v1738 = &v820[v823];
            uint64_t v1726 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1738, 1, v1726))
            {
              uint64_t v824 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1755, v1738, *(void *)(*(void *)(v824 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1726 - 8) + 16))(v1755, v1738, v1726);
              __swift_storeEnumTagSinglePayload((uint64_t)v1755, 0, 1, v1726);
            }
            uint64_t v825 = v821[9];
            uint64_t v826 = &v819[v825];
            uint64_t v827 = &v820[v825];
            *(void *)uint64_t v826 = *(void *)v827;
            *((void *)v826 + 1) = *((void *)v827 + 1);
            uint64_t v828 = v821[10];
            uint64_t v829 = &v819[v828];
            uint64_t v830 = &v820[v828];
            *(void *)uint64_t v829 = *(void *)v830;
            *((void *)v829 + 1) = *((void *)v830 + 1);
            uint64_t v831 = v821[11];
            uint64_t v832 = &v819[v831];
            v833 = &v820[v831];
            *(void *)uint64_t v832 = *(void *)v833;
            *((void *)v832 + 1) = *((void *)v833 + 1);
            uint64_t v834 = v821[12];
            uint64_t v835 = &v819[v834];
            uint64_t v836 = &v820[v834];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v836, 1, v1744))
            {
              uint64_t v837 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v835, v836, *(void *)(*(void *)(v837 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v835, v836, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v835, 0, 1, v1744);
            }
            uint64_t v838 = v821[13];
            uint64_t v839 = &v819[v838];
            uint64_t v840 = &v820[v838];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v820[v838], 1, v1744))
            {
              uint64_t v841 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v839, v840, *(void *)(*(void *)(v841 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1744 - 8) + 16))(v839, v840, v1744);
              __swift_storeEnumTagSinglePayload((uint64_t)v839, 0, 1, v1744);
            }
            uint64_t v842 = v821[14];
            uint64_t v843 = &v819[v842];
            uint64_t v844 = &v820[v842];
            uint64_t v845 = *(void *)v844;
            v843[8] = v844[8];
            *(void *)uint64_t v843 = v845;
            uint64_t v846 = v821[15];
            uint64_t v847 = &v819[v846];
            uint64_t v848 = &v820[v846];
            *(void *)uint64_t v847 = *(void *)v848;
            *((void *)v847 + 1) = *((void *)v848 + 1);
            uint64_t v849 = v821[16];
            uint64_t v850 = &v819[v849];
            uint64_t v851 = &v820[v849];
            *(void *)uint64_t v850 = *(void *)v851;
            *((void *)v850 + 1) = *((void *)v851 + 1);
            uint64_t v852 = v821[17];
            uint64_t v853 = &v819[v852];
            uint64_t v854 = &v820[v852];
            *(void *)uint64_t v853 = *(void *)v854;
            *((void *)v853 + 1) = *((void *)v854 + 1);
            uint64_t v855 = v821[18];
            uint64_t v856 = &v819[v855];
            uint64_t v857 = &v820[v855];
            *(void *)uint64_t v856 = *(void *)v857;
            *((void *)v856 + 1) = *((void *)v857 + 1);
            uint64_t v858 = v821[19];
            uint64_t v859 = &v819[v858];
            uint64_t v860 = &v820[v858];
            *(void *)uint64_t v859 = *(void *)v860;
            *((void *)v859 + 1) = *((void *)v860 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v819, 0, 1, (uint64_t)v821);
          }
          uint64_t v861 = v1758[21];
          goto LABEL_541;
        case 4u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          uint64_t v36 = type metadata accessor for NoteDocument(0);
          uint64_t v37 = *(int *)(v36 + 32);
          v1759 = &v8[v37];
          uint64_t v38 = &v9[v37];
          uint64_t v39 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
          {
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1759, v38, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v1759, v38, v39);
            __swift_storeEnumTagSinglePayload((uint64_t)v1759, 0, 1, v39);
          }
          uint64_t v162 = *(int *)(v36 + 36);
          uint64_t v163 = &v8[v162];
          uint64_t v164 = (uint64_t)&v9[v162];
          if (!__swift_getEnumTagSinglePayload((uint64_t)&v9[v162], 1, v39)) {
            goto LABEL_146;
          }
          goto LABEL_156;
        case 5u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v41 = (int *)type metadata accessor for Reminder(0);
          uint64_t v42 = v41[7];
          uint64_t v43 = &v8[v42];
          uint64_t v44 = &v9[v42];
          uint64_t v45 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
            __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v165 = v41[8];
          uint64_t v166 = &v8[v165];
          uint64_t v167 = &v9[v165];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v165], 1, v45))
          {
            uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v166, v167, v45);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v45);
          }
          v8[v41[9]] = v9[v41[9]];
          uint64_t v307 = v41[10];
          uint64_t v308 = &v8[v307];
          uint64_t v309 = &v9[v307];
          *(void *)uint64_t v308 = *(void *)v309;
          *((void *)v308 + 1) = *((void *)v309 + 1);
          uint64_t v310 = v41[11];
          uint64_t v311 = &v8[v310];
          uint64_t v312 = &v9[v310];
          *(void *)uint64_t v311 = *(void *)v312;
          *((void *)v311 + 1) = *((void *)v312 + 1);
          uint64_t v313 = v41[12];
          uint64_t v58 = &v8[v313];
          uint64_t v59 = &v9[v313];
          uint64_t v60 = type metadata accessor for URL();
          goto LABEL_144;
        case 6u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          uint64_t v47 = type metadata accessor for PhoneHistory(0);
          uint64_t v48 = *(int *)(v47 + 40);
          uint64_t v1745 = &v8[v48];
          uint64_t v1748 = &v9[v48];
          uint64_t v1760 = (int *)v47;
          uint64_t v49 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1748, 1, v49))
          {
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1745, v1748, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v1745, v1748, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v1745, 0, 1, v49);
          }
          uint64_t v169 = v1760[11];
          uint64_t v170 = &v8[v169];
          uint64_t v171 = &v9[v169];
          *(void *)uint64_t v170 = *(void *)v171;
          *((void *)v170 + 1) = *((void *)v171 + 1);
          uint64_t v172 = v1760[12];
          uint64_t v173 = &v8[v172];
          uint64_t v174 = &v9[v172];
          *(void *)uint64_t v173 = *(void *)v174;
          *((void *)v173 + 1) = *((void *)v174 + 1);
          uint64_t v175 = v1760[13];
          uint64_t v58 = &v8[v175];
          uint64_t v59 = &v9[v175];
          uint64_t v60 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60)) {
            goto LABEL_84;
          }
          goto LABEL_145;
        case 7u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v51 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v52 = *(int *)(v51 + 28);
          uint64_t v53 = &v8[v52];
          uint64_t v54 = &v9[v52];
          uint64_t v55 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v176 = *(int *)(v51 + 32);
          uint64_t v177 = &v8[v176];
          uint64_t v178 = (uint64_t)&v9[v176];
          uint64_t v179 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v178, 1, v179);
          goto LABEL_89;
        case 8u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v57 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          uint64_t v58 = &v8[v57];
          uint64_t v59 = &v9[v57];
          uint64_t v60 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
LABEL_144:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
          {
LABEL_145:
            uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v58, v59, *(void *)(*(void *)(v314 - 8) + 64));
          }
          else
          {
LABEL_84:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
            __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
          }
          goto LABEL_544;
        case 9u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          uint64_t v61 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v62 = v61[6];
          uint64_t v63 = &v8[v62];
          uint64_t v64 = &v9[v62];
          uint64_t v65 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
          {
            uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
            __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
          }
          uint64_t v181 = v61[7];
          uint64_t v182 = &v8[v181];
          uint64_t v183 = &v9[v181];
          uint64_t v184 = *(void *)v183;
          v182[8] = v183[8];
          *(void *)uint64_t v182 = v184;
          uint64_t v185 = v61[8];
          uint64_t v177 = &v8[v185];
          uint64_t v178 = (uint64_t)&v9[v185];
          uint64_t v179 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v178, 1, v179);
LABEL_89:
          if (EnumTagSinglePayload) {
            goto LABEL_90;
          }
          goto LABEL_163;
        case 0xAu:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          uint64_t v67 = (int *)type metadata accessor for Safari(0);
          uint64_t v68 = v67[6];
          uint64_t v69 = &v8[v68];
          uint64_t v70 = &v9[v68];
          uint64_t v39 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v39))
          {
            uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v69, v70, v39);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v39);
          }
          uint64_t v189 = v67[7];
          uint64_t v190 = &v8[v189];
          uint64_t v191 = &v9[v189];
          *(void *)uint64_t v190 = *(void *)v191;
          *((void *)v190 + 1) = *((void *)v191 + 1);
          uint64_t v192 = v67[8];
          uint64_t v193 = &v8[v192];
          uint64_t v194 = &v9[v192];
          *(void *)uint64_t v193 = *(void *)v194;
          *((void *)v193 + 1) = *((void *)v194 + 1);
          uint64_t v195 = v67[9];
          uint64_t v163 = &v8[v195];
          uint64_t v164 = (uint64_t)&v9[v195];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload(v164, 1, v39)) {
            goto LABEL_146;
          }
          size_t v186 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          uint64_t v187 = v163;
          uint64_t v188 = (const void *)v164;
          goto LABEL_157;
        case 0xBu:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          uint64_t v72 = (void *)*((void *)v9 + 2);
          *((void *)v8 + 2) = v72;
          swift_bridgeObjectRetain();
          id v73 = v72;
          goto LABEL_544;
        case 0xCu:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v74 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v75 = v74[7];
          uint64_t v76 = &v8[v75];
          uint64_t v77 = &v9[v75];
          uint64_t v78 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
          {
            uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
            __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
          }
          uint64_t v196 = v74[8];
          uint64_t v197 = &v8[v196];
          uint64_t v198 = &v9[v196];
          *(void *)uint64_t v197 = *(void *)v198;
          *((void *)v197 + 1) = *((void *)v198 + 1);
          uint64_t v199 = v74[9];
          uint64_t v200 = &v8[v199];
          uint64_t v201 = &v9[v199];
          *(void *)uint64_t v200 = *(void *)v201;
          *((void *)v200 + 1) = *((void *)v201 + 1);
          uint64_t v202 = v74[10];
          uint64_t v203 = &v8[v202];
          uint64_t v204 = &v9[v202];
          *(void *)uint64_t v203 = *(void *)v204;
          *((void *)v203 + 1) = *((void *)v204 + 1);
          uint64_t v205 = v74[11];
          uint64_t v206 = &v8[v205];
          uint64_t v207 = &v9[v205];
          long long v208 = *(_OWORD *)v207;
          *(void *)(v206 + 13) = *(void *)(v207 + 13);
          *(_OWORD *)uint64_t v206 = v208;
          uint64_t v209 = v74[12];
          uint64_t v210 = &v8[v209];
          uint64_t v211 = &v9[v209];
          *(void *)uint64_t v210 = *(void *)v211;
          *((void *)v210 + 1) = *((void *)v211 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_153;
        case 0xDu:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v80 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v81 = v80[7];
          uint64_t v82 = &v8[v81];
          uint64_t v83 = &v9[v81];
          uint64_t v84 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
          {
            uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
            __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v84);
          }
          uint64_t v212 = v80[8];
          uint64_t v213 = &v8[v212];
          uint64_t v214 = &v9[v212];
          *(void *)uint64_t v213 = *(void *)v214;
          *((void *)v213 + 1) = *((void *)v214 + 1);
          *(void *)&v8[v80[9]] = *(void *)&v9[v80[9]];
          goto LABEL_153;
        case 0xEu:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_543;
        case 0xFu:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          v8[96] = v9[96];
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          uint64_t v86 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v87 = v86[13];
          uint64_t v1719 = &v8[v87];
          uint64_t v88 = &v9[v87];
          uint64_t v1734 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v1734))
          {
            uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1719, v88, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1734 - 8) + 16))(v1719, v88, v1734);
            __swift_storeEnumTagSinglePayload((uint64_t)v1719, 0, 1, v1734);
          }
          uint64_t v215 = v86[14];
          uint64_t v216 = &v8[v215];
          uint64_t v217 = &v9[v215];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v215], 1, v1734))
          {
            uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1734 - 8) + 16))(v216, v217, v1734);
            __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, v1734);
          }
          uint64_t v315 = v86[15];
          uint64_t v316 = &v8[v315];
          uint64_t v317 = &v9[v315];
          *(void *)uint64_t v316 = *(void *)v317;
          *((void *)v316 + 1) = *((void *)v317 + 1);
          uint64_t v318 = v86[16];
          uint64_t v319 = &v8[v318];
          uint64_t v320 = &v9[v318];
          *(void *)uint64_t v319 = *(void *)v320;
          *((void *)v319 + 1) = *((void *)v320 + 1);
          uint64_t v321 = v86[17];
          uint64_t v322 = &v8[v321];
          v323 = &v9[v321];
          *(void *)uint64_t v322 = *(void *)v323;
          *((void *)v322 + 1) = *((void *)v323 + 1);
          uint64_t v324 = v86[18];
          v1752 = &v9[v324];
          v1768 = &v8[v324];
          uint64_t v325 = type metadata accessor for DateComponents();
          uint64_t v326 = *(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v326(v1768, v1752, v325);
          v326(&v8[v86[19]], &v9[v86[19]], v325);
          uint64_t v327 = v86[20];
          uint64_t v328 = &v8[v327];
          uint64_t v329 = &v9[v327];
          *(void *)uint64_t v328 = *(void *)v329;
          *((void *)v328 + 1) = *((void *)v329 + 1);
          uint64_t v330 = v86[21];
          uint64_t v331 = &v8[v330];
          uint64_t v332 = &v9[v330];
          *(void *)uint64_t v331 = *(void *)v332;
          *((void *)v331 + 1) = *((void *)v332 + 1);
          uint64_t v333 = v86[22];
          uint64_t v334 = &v8[v333];
          uint64_t v335 = &v9[v333];
          *(void *)uint64_t v334 = *(void *)v335;
          *((void *)v334 + 1) = *((void *)v335 + 1);
          uint64_t v336 = v86[23];
          uint64_t v337 = &v8[v336];
          long long v338 = &v9[v336];
          *(void *)uint64_t v337 = *(void *)v338;
          *((void *)v337 + 1) = *((void *)v338 + 1);
          uint64_t v339 = v86[24];
          uint64_t v340 = &v8[v339];
          uint64_t v341 = &v9[v339];
          *(void *)uint64_t v340 = *(void *)v341;
          *((void *)v340 + 1) = *((void *)v341 + 1);
          uint64_t v342 = v86[25];
          uint64_t v343 = &v8[v342];
          uint64_t v344 = &v9[v342];
          *(void *)uint64_t v343 = *(void *)v344;
          *((void *)v343 + 1) = *((void *)v344 + 1);
          uint64_t v345 = v86[26];
          v346 = &v8[v345];
          uint64_t v347 = &v9[v345];
          *(void *)v346 = *(void *)v347;
          *((void *)v346 + 1) = *((void *)v347 + 1);
          uint64_t v348 = v86[27];
          v349 = &v8[v348];
          uint64_t v350 = &v9[v348];
          *(void *)v349 = *(void *)v350;
          *((void *)v349 + 1) = *((void *)v350 + 1);
          uint64_t v351 = v86[28];
          uint64_t v352 = &v8[v351];
          uint64_t v353 = &v9[v351];
          *(void *)uint64_t v352 = *(void *)v353;
          *((void *)v352 + 1) = *((void *)v353 + 1);
          uint64_t v354 = v86[29];
          uint64_t v355 = &v8[v354];
          uint64_t v356 = &v9[v354];
          *(void *)uint64_t v355 = *(void *)v356;
          *((void *)v355 + 1) = *((void *)v356 + 1);
          uint64_t v357 = v86[30];
          uint64_t v358 = &v8[v357];
          uint64_t v359 = &v9[v357];
          *(void *)uint64_t v358 = *(void *)v359;
          *((void *)v358 + 1) = *((void *)v359 + 1);
          uint64_t v360 = v86[31];
          uint64_t v361 = &v8[v360];
          uint64_t v362 = &v9[v360];
          *(void *)uint64_t v361 = *(void *)v362;
          *((void *)v361 + 1) = *((void *)v362 + 1);
          uint64_t v363 = v86[32];
          uint64_t v364 = &v8[v363];
          uint64_t v365 = &v9[v363];
          *(void *)uint64_t v364 = *(void *)v365;
          *((void *)v364 + 1) = *((void *)v365 + 1);
          *(void *)&v8[v86[33]] = *(void *)&v9[v86[33]];
          *(void *)&v8[v86[34]] = *(void *)&v9[v86[34]];
          uint64_t v366 = v86[35];
          uint64_t v367 = &v8[v366];
          uint64_t v368 = &v9[v366];
          *(void *)uint64_t v367 = *(void *)v368;
          *((void *)v367 + 1) = *((void *)v368 + 1);
          uint64_t v369 = v86[36];
          uint64_t v370 = &v8[v369];
          uint64_t v371 = &v9[v369];
          *(void *)uint64_t v370 = *(void *)v371;
          *((void *)v370 + 1) = *((void *)v371 + 1);
          uint64_t v372 = v86[37];
          uint64_t v373 = &v8[v372];
          uint64_t v374 = &v9[v372];
          *(void *)uint64_t v373 = *(void *)v374;
          *((void *)v373 + 1) = *((void *)v374 + 1);
          uint64_t v375 = v86[38];
          uint64_t v1654 = &v8[v375];
          uint64_t v1662 = &v9[v375];
          uint64_t v1657 = (void *)type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1662, 1, (uint64_t)v1657))
          {
            uint64_t v376 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1654, v1662, *(void *)(*(void *)(v376 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1657 - 1) + 16))(v1654, v1662, v1657);
            __swift_storeEnumTagSinglePayload((uint64_t)v1654, 0, 1, (uint64_t)v1657);
          }
          uint64_t v434 = v86[39];
          uint64_t v435 = &v8[v434];
          uint64_t v436 = &v9[v434];
          *(void *)uint64_t v435 = *(void *)v436;
          *((void *)v435 + 1) = *((void *)v436 + 1);
          uint64_t v437 = v86[40];
          uint64_t v438 = &v8[v437];
          uint64_t v439 = &v9[v437];
          *(void *)uint64_t v438 = *(void *)v439;
          *((void *)v438 + 1) = *((void *)v439 + 1);
          uint64_t v440 = v86[41];
          uint64_t v441 = &v8[v440];
          uint64_t v442 = &v9[v440];
          uint64_t v443 = *(void *)v442;
          v441[8] = v442[8];
          *(void *)uint64_t v441 = v443;
          uint64_t v444 = v86[42];
          uint64_t v445 = &v8[v444];
          uint64_t v446 = &v9[v444];
          *(void *)uint64_t v445 = *(void *)v446;
          *((void *)v445 + 1) = *((void *)v446 + 1);
          uint64_t v447 = v86[43];
          uint64_t v448 = &v8[v447];
          unint64_t v449 = &v9[v447];
          long long v450 = *(_OWORD *)v449;
          *(void *)(v448 + 13) = *(void *)(v449 + 13);
          *(_OWORD *)uint64_t v448 = v450;
          uint64_t v451 = v86[44];
          uint64_t v452 = &v8[v451];
          v453 = &v9[v451];
          *(void *)uint64_t v452 = *(void *)v453;
          *((void *)v452 + 1) = *((void *)v453 + 1);
          uint64_t v454 = v86[45];
          uint64_t v455 = &v8[v454];
          uint64_t v456 = &v9[v454];
          *(void *)uint64_t v455 = *(void *)v456;
          *((void *)v455 + 1) = *((void *)v456 + 1);
          uint64_t v457 = v86[46];
          v458 = &v8[v457];
          uint64_t v459 = &v9[v457];
          *(void *)v458 = *(void *)v459;
          *((void *)v458 + 1) = *((void *)v459 + 1);
          uint64_t v460 = v86[47];
          uint64_t v461 = &v8[v460];
          uint64_t v462 = &v9[v460];
          *(void *)uint64_t v461 = *(void *)v462;
          *((void *)v461 + 1) = *((void *)v462 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v463 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)&v8[*(int *)(v463 + 48)] = *(void *)&v9[*(int *)(v463 + 48)];
          swift_bridgeObjectRetain();
          goto LABEL_544;
        case 0x10u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          v8[96] = v9[96];
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          *((void *)v8 + 16) = *((void *)v9 + 16);
          uint64_t v90 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v91 = v90[14];
          uint64_t v1705 = &v8[v91];
          uint64_t v92 = &v9[v91];
          uint64_t v1720 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v1720))
          {
            uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v1705, v92, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1720 - 8) + 16))(v1705, v92, v1720);
            __swift_storeEnumTagSinglePayload((uint64_t)v1705, 0, 1, v1720);
          }
          uint64_t v219 = v90[15];
          uint64_t v220 = &v8[v219];
          uint64_t v221 = &v9[v219];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v219], 1, v1720))
          {
            uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1720 - 8) + 16))(v220, v221, v1720);
            __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v1720);
          }
          uint64_t v377 = v90[16];
          uint64_t v378 = &v8[v377];
          uint64_t v379 = &v9[v377];
          *(void *)uint64_t v378 = *(void *)v379;
          *((void *)v378 + 1) = *((void *)v379 + 1);
          uint64_t v380 = v90[17];
          uint64_t v381 = &v8[v380];
          uint64_t v382 = &v9[v380];
          *(void *)uint64_t v381 = *(void *)v382;
          *((void *)v381 + 1) = *((void *)v382 + 1);
          uint64_t v383 = v90[18];
          uint64_t v384 = &v8[v383];
          uint64_t v385 = &v9[v383];
          *(void *)uint64_t v384 = *(void *)v385;
          *((void *)v384 + 1) = *((void *)v385 + 1);
          uint64_t v386 = v90[19];
          v387 = &v8[v386];
          uint64_t v388 = &v9[v386];
          *(void *)v387 = *(void *)v388;
          *((void *)v387 + 1) = *((void *)v388 + 1);
          uint64_t v389 = v90[20];
          uint64_t v390 = &v8[v389];
          v391 = &v9[v389];
          *(void *)uint64_t v390 = *(void *)v391;
          *((void *)v390 + 1) = *((void *)v391 + 1);
          *(void *)&v8[v90[21]] = *(void *)&v9[v90[21]];
          *(void *)&v8[v90[22]] = *(void *)&v9[v90[22]];
          uint64_t v392 = v90[23];
          uint64_t v393 = &v8[v392];
          uint64_t v394 = &v9[v392];
          uint64_t v395 = *(void *)v394;
          v393[8] = v394[8];
          *(void *)uint64_t v393 = v395;
          uint64_t v396 = v90[24];
          uint64_t v397 = &v8[v396];
          uint64_t v398 = &v9[v396];
          uint64_t v399 = *(void *)v398;
          v397[8] = v398[8];
          *(void *)uint64_t v397 = v399;
          uint64_t v400 = v90[25];
          uint64_t v401 = &v8[v400];
          v402 = &v9[v400];
          *(void *)uint64_t v401 = *(void *)v402;
          *((void *)v401 + 1) = *((void *)v402 + 1);
          uint64_t v403 = v90[26];
          uint64_t v404 = &v8[v403];
          uint64_t v405 = &v9[v403];
          *(void *)uint64_t v404 = *(void *)v405;
          *((void *)v404 + 1) = *((void *)v405 + 1);
          uint64_t v406 = v90[27];
          v407 = &v8[v406];
          uint64_t v408 = &v9[v406];
          *(void *)v407 = *(void *)v408;
          *((void *)v407 + 1) = *((void *)v408 + 1);
          uint64_t v409 = v90[28];
          v410 = &v8[v409];
          v411 = &v9[v409];
          *(void *)v410 = *(void *)v411;
          *((void *)v410 + 1) = *((void *)v411 + 1);
          uint64_t v412 = v90[29];
          uint64_t v413 = &v8[v412];
          v414 = &v9[v412];
          uint64_t v415 = *(void *)v414;
          v413[8] = v414[8];
          *(void *)uint64_t v413 = v415;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_153;
        case 0x11u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          v8[96] = v9[96];
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          *((void *)v8 + 16) = *((void *)v9 + 16);
          uint64_t v94 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v95 = v94[14];
          uint64_t v1706 = &v8[v95];
          uint64_t v1721 = &v9[v95];
          uint64_t v96 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1721, 1, v96))
          {
            uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v1706, v1721, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v1706, v1721, v96);
            __swift_storeEnumTagSinglePayload((uint64_t)v1706, 0, 1, v96);
          }
          uint64_t v223 = v94[15];
          uint64_t v224 = &v8[v223];
          uint64_t v225 = &v9[v223];
          *(void *)uint64_t v224 = *(void *)v225;
          *((void *)v224 + 1) = *((void *)v225 + 1);
          uint64_t v226 = v94[16];
          uint64_t v227 = &v8[v226];
          uint64_t v228 = &v9[v226];
          *(void *)uint64_t v227 = *(void *)v228;
          *((void *)v227 + 1) = *((void *)v228 + 1);
          uint64_t v229 = v94[17];
          uint64_t v230 = &v8[v229];
          uint64_t v231 = &v9[v229];
          *(void *)uint64_t v230 = *(void *)v231;
          *((void *)v230 + 1) = *((void *)v231 + 1);
          uint64_t v232 = v94[18];
          uint64_t v233 = &v8[v232];
          uint64_t v234 = &v9[v232];
          *(void *)uint64_t v233 = *(void *)v234;
          *((void *)v233 + 1) = *((void *)v234 + 1);
          uint64_t v235 = v94[19];
          uint64_t v236 = &v8[v235];
          uint64_t v237 = &v9[v235];
          *(void *)uint64_t v236 = *(void *)v237;
          *((void *)v236 + 1) = *((void *)v237 + 1);
          *(void *)&v8[v94[20]] = *(void *)&v9[v94[20]];
          uint64_t v238 = v94[21];
          uint64_t v239 = &v8[v238];
          uint64_t v240 = &v9[v238];
          *(void *)uint64_t v239 = *(void *)v240;
          *((void *)v239 + 1) = *((void *)v240 + 1);
          uint64_t v241 = v94[22];
          uint64_t v242 = &v8[v241];
          uint64_t v243 = &v9[v241];
          *(void *)uint64_t v242 = *(void *)v243;
          *((void *)v242 + 1) = *((void *)v243 + 1);
          uint64_t v244 = v94[23];
          uint64_t v245 = &v8[v244];
          uint64_t v246 = &v9[v244];
          *(void *)uint64_t v245 = *(void *)v246;
          *((void *)v245 + 1) = *((void *)v246 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_543;
        case 0x12u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          v8[128] = v9[128];
          v8[129] = v9[129];
          v8[130] = v9[130];
          *((void *)v8 + 17) = *((void *)v9 + 17);
          *((void *)v8 + 18) = *((void *)v9 + 18);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          *((void *)v8 + 20) = *((void *)v9 + 20);
          *((void *)v8 + 21) = *((void *)v9 + 21);
          *((void *)v8 + 22) = *((void *)v9 + 22);
          *((void *)v8 + 23) = *((void *)v9 + 23);
          *((void *)v8 + 24) = *((void *)v9 + 24);
          *((void *)v8 + 25) = *((void *)v9 + 25);
          *((void *)v8 + 26) = *((void *)v9 + 26);
          *((void *)v8 + 27) = *((void *)v9 + 27);
          *((void *)v8 + 28) = *((void *)v9 + 28);
          *((void *)v8 + 29) = *((void *)v9 + 29);
          *((void *)v8 + 30) = *((void *)v9 + 30);
          *((void *)v8 + 31) = *((void *)v9 + 31);
          *((void *)v8 + 32) = *((void *)v9 + 32);
          *((void *)v8 + 33) = *((void *)v9 + 33);
          *((void *)v8 + 34) = *((void *)v9 + 34);
          *((void *)v8 + 35) = *((void *)v9 + 35);
          *((void *)v8 + 36) = *((void *)v9 + 36);
          *((void *)v8 + 37) = *((void *)v9 + 37);
          *((void *)v8 + 38) = *((void *)v9 + 38);
          *((void *)v8 + 39) = *((void *)v9 + 39);
          *((void *)v8 + 40) = *((void *)v9 + 40);
          *((void *)v8 + 41) = *((void *)v9 + 41);
          *((void *)v8 + 42) = *((void *)v9 + 42);
          *((void *)v8 + 43) = *((void *)v9 + 43);
          *((void *)v8 + 44) = *((void *)v9 + 44);
          *((void *)v8 + 45) = *((void *)v9 + 45);
          *((void *)v8 + 46) = *((void *)v9 + 46);
          uint64_t v98 = *((void *)v9 + 47);
          v8[384] = v9[384];
          *((void *)v8 + 47) = v98;
          *((void *)v8 + 49) = *((void *)v9 + 49);
          *((void *)v8 + 50) = *((void *)v9 + 50);
          *((void *)v8 + 51) = *((void *)v9 + 51);
          *((void *)v8 + 52) = *((void *)v9 + 52);
          uint64_t v1761 = type metadata accessor for RentalCarReservation(0);
          uint64_t v99 = *(int *)(v1761 + 140);
          __dst = &v8[v99];
          uint64_t v1635 = &v9[v99];
          uint64_t v100 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1635, 1, v100))
          {
            uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(__dst, v1635, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(__dst, v1635, v100);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v100);
          }
          uint64_t v247 = *(int *)(v1761 + 144);
          goto LABEL_115;
        case 0x13u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          v8[128] = v9[128];
          v8[129] = v9[129];
          v8[130] = v9[130];
          *((void *)v8 + 17) = *((void *)v9 + 17);
          *((void *)v8 + 18) = *((void *)v9 + 18);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          *((void *)v8 + 20) = *((void *)v9 + 20);
          *((void *)v8 + 21) = *((void *)v9 + 21);
          *((void *)v8 + 22) = *((void *)v9 + 22);
          *((void *)v8 + 23) = *((void *)v9 + 23);
          *((void *)v8 + 24) = *((void *)v9 + 24);
          *((void *)v8 + 25) = *((void *)v9 + 25);
          *((void *)v8 + 26) = *((void *)v9 + 26);
          *((void *)v8 + 27) = *((void *)v9 + 27);
          *((void *)v8 + 28) = *((void *)v9 + 28);
          *((void *)v8 + 29) = *((void *)v9 + 29);
          *((void *)v8 + 30) = *((void *)v9 + 30);
          *((void *)v8 + 31) = *((void *)v9 + 31);
          *((void *)v8 + 32) = *((void *)v9 + 32);
          *((void *)v8 + 33) = *((void *)v9 + 33);
          *((void *)v8 + 34) = *((void *)v9 + 34);
          *((void *)v8 + 35) = *((void *)v9 + 35);
          uint64_t v102 = *((void *)v9 + 36);
          v8[296] = v9[296];
          *((void *)v8 + 36) = v102;
          uint64_t v1762 = type metadata accessor for TicketedTransportation(0);
          uint64_t v103 = *(int *)(v1762 + 112);
          uint64_t v1650 = &v8[v103];
          uint64_t v104 = &v9[v103];
          uint64_t v100 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v100))
          {
            uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1650, v104, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v1650, v104, v100);
            __swift_storeEnumTagSinglePayload((uint64_t)v1650, 0, 1, v100);
          }
          uint64_t v247 = *(int *)(v1762 + 116);
          goto LABEL_115;
        case 0x14u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          v8[128] = v9[128];
          v8[129] = v9[129];
          v8[130] = v9[130];
          *((void *)v8 + 17) = *((void *)v9 + 17);
          *((void *)v8 + 18) = *((void *)v9 + 18);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          *((void *)v8 + 20) = *((void *)v9 + 20);
          *((void *)v8 + 21) = *((void *)v9 + 21);
          *((void *)v8 + 22) = *((void *)v9 + 22);
          *((void *)v8 + 23) = *((void *)v9 + 23);
          *((void *)v8 + 24) = *((void *)v9 + 24);
          *((void *)v8 + 25) = *((void *)v9 + 25);
          *((void *)v8 + 26) = *((void *)v9 + 26);
          *((void *)v8 + 27) = *((void *)v9 + 27);
          *((void *)v8 + 28) = *((void *)v9 + 28);
          *((void *)v8 + 29) = *((void *)v9 + 29);
          *((void *)v8 + 30) = *((void *)v9 + 30);
          *((void *)v8 + 31) = *((void *)v9 + 31);
          *((void *)v8 + 32) = *((void *)v9 + 32);
          *((void *)v8 + 33) = *((void *)v9 + 33);
          *((void *)v8 + 34) = *((void *)v9 + 34);
          *((void *)v8 + 35) = *((void *)v9 + 35);
          uint64_t v106 = *((void *)v9 + 36);
          v8[296] = v9[296];
          *((void *)v8 + 36) = v106;
          *((void *)v8 + 38) = *((void *)v9 + 38);
          *((void *)v8 + 39) = *((void *)v9 + 39);
          uint64_t v1763 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v107 = v1763[29];
          uint64_t v1647 = &v8[v107];
          uint64_t v108 = &v9[v107];
          uint64_t v109 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109))
          {
            uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1647, v108, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v1647, v108, v109);
            __swift_storeEnumTagSinglePayload((uint64_t)v1647, 0, 1, v109);
          }
          uint64_t v248 = v1763[30];
          uint64_t v249 = &v8[v248];
          uint64_t v250 = &v9[v248];
          *(void *)uint64_t v249 = *(void *)v250;
          *((void *)v249 + 1) = *((void *)v250 + 1);
          uint64_t v251 = v1763[31];
          uint64_t v252 = &v8[v251];
          uint64_t v253 = &v9[v251];
          uint64_t v39 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v253, 1, v39))
          {
            uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v252, v253, v39);
            __swift_storeEnumTagSinglePayload((uint64_t)v252, 0, 1, v39);
          }
          uint64_t v416 = v1763[32];
          uint64_t v163 = &v8[v416];
          uint64_t v164 = (uint64_t)&v9[v416];
          if (!__swift_getEnumTagSinglePayload((uint64_t)&v9[v416], 1, v39))
          {
LABEL_146:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v163, v164, v39);
            uint64_t v257 = (uint64_t)v163;
            uint64_t v258 = v39;
            goto LABEL_147;
          }
LABEL_156:
          size_t v186 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          uint64_t v187 = v163;
          uint64_t v188 = (const void *)v164;
          goto LABEL_157;
        case 0x15u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          v8[128] = v9[128];
          v8[129] = v9[129];
          v8[130] = v9[130];
          *((void *)v8 + 17) = *((void *)v9 + 17);
          *((void *)v8 + 18) = *((void *)v9 + 18);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          *((void *)v8 + 20) = *((void *)v9 + 20);
          *((void *)v8 + 21) = *((void *)v9 + 21);
          *((void *)v8 + 22) = *((void *)v9 + 22);
          *((void *)v8 + 23) = *((void *)v9 + 23);
          *((void *)v8 + 24) = *((void *)v9 + 24);
          *((void *)v8 + 25) = *((void *)v9 + 25);
          *((void *)v8 + 26) = *((void *)v9 + 26);
          *((void *)v8 + 27) = *((void *)v9 + 27);
          *((void *)v8 + 28) = *((void *)v9 + 28);
          *((void *)v8 + 29) = *((void *)v9 + 29);
          *((void *)v8 + 30) = *((void *)v9 + 30);
          *((void *)v8 + 31) = *((void *)v9 + 31);
          *((void *)v8 + 32) = *((void *)v9 + 32);
          *((void *)v8 + 33) = *((void *)v9 + 33);
          uint64_t v111 = *((void *)v9 + 34);
          v8[280] = v9[280];
          *((void *)v8 + 34) = v111;
          *((void *)v8 + 36) = *((void *)v9 + 36);
          *((void *)v8 + 37) = *((void *)v9 + 37);
          uint64_t v1764 = type metadata accessor for Appointment(0);
          uint64_t v112 = *(int *)(v1764 + 108);
          uint64_t v1653 = &v8[v112];
          uint64_t v113 = &v9[v112];
          uint64_t v100 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v100))
          {
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1653, v113, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v1653, v113, v100);
            __swift_storeEnumTagSinglePayload((uint64_t)v1653, 0, 1, v100);
          }
          uint64_t v247 = *(int *)(v1764 + 112);
LABEL_115:
          uint64_t v255 = &v8[v247];
          uint64_t v256 = &v9[v247];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v247], 1, v100))
          {
            size_t v186 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                         - 8)
                             + 64);
            uint64_t v187 = v255;
            uint64_t v188 = v256;
            goto LABEL_157;
          }
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v255, v256, v100);
          uint64_t v257 = (uint64_t)v255;
          uint64_t v258 = v100;
          goto LABEL_147;
        case 0x16u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          v8[128] = v9[128];
          v8[129] = v9[129];
          v8[130] = v9[130];
          *((void *)v8 + 17) = *((void *)v9 + 17);
          *((void *)v8 + 18) = *((void *)v9 + 18);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          *((void *)v8 + 20) = *((void *)v9 + 20);
          *((void *)v8 + 21) = *((void *)v9 + 21);
          *((void *)v8 + 22) = *((void *)v9 + 22);
          *((void *)v8 + 23) = *((void *)v9 + 23);
          *((void *)v8 + 24) = *((void *)v9 + 24);
          *((void *)v8 + 25) = *((void *)v9 + 25);
          *((void *)v8 + 26) = *((void *)v9 + 26);
          *((void *)v8 + 27) = *((void *)v9 + 27);
          *((void *)v8 + 28) = *((void *)v9 + 28);
          *((void *)v8 + 29) = *((void *)v9 + 29);
          *((void *)v8 + 30) = *((void *)v9 + 30);
          *((void *)v8 + 31) = *((void *)v9 + 31);
          v1765 = (int *)type metadata accessor for Party(0);
          uint64_t v115 = v1765[24];
          uint64_t v1656 = &v8[v115];
          uint64_t v116 = &v9[v115];
          uint64_t v117 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, v117))
          {
            uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1656, v116, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v1656, v116, v117);
            __swift_storeEnumTagSinglePayload((uint64_t)v1656, 0, 1, v117);
          }
          uint64_t v259 = v1765[25];
          uint64_t v260 = &v8[v259];
          uint64_t v261 = &v9[v259];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v259], 1, v117))
          {
            uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v260, v261, *(void *)(*(void *)(v262 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v260, v261, v117);
            __swift_storeEnumTagSinglePayload((uint64_t)v260, 0, 1, v117);
          }
          uint64_t v417 = v1765[26];
          goto LABEL_162;
        case 0x17u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((void *)v8 + 14) = *((void *)v9 + 14);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          v8[128] = v9[128];
          v8[129] = v9[129];
          v8[130] = v9[130];
          *((void *)v8 + 17) = *((void *)v9 + 17);
          *((void *)v8 + 18) = *((void *)v9 + 18);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          *((void *)v8 + 20) = *((void *)v9 + 20);
          *((void *)v8 + 21) = *((void *)v9 + 21);
          *((void *)v8 + 22) = *((void *)v9 + 22);
          *((void *)v8 + 23) = *((void *)v9 + 23);
          *((void *)v8 + 24) = *((void *)v9 + 24);
          *((void *)v8 + 25) = *((void *)v9 + 25);
          *((void *)v8 + 26) = *((void *)v9 + 26);
          *((void *)v8 + 27) = *((void *)v9 + 27);
          uint64_t v1766 = (int *)type metadata accessor for Trip(0);
          uint64_t v119 = v1766[22];
          uint64_t v1669 = &v8[v119];
          uint64_t v120 = &v9[v119];
          uint64_t v121 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v121))
          {
            uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1669, v120, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v1669, v120, v121);
            __swift_storeEnumTagSinglePayload((uint64_t)v1669, 0, 1, v121);
          }
          uint64_t v263 = v1766[23];
          uint64_t v264 = &v8[v263];
          uint64_t v265 = &v9[v263];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v263], 1, v121))
          {
            uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v264, v265, v121);
            __swift_storeEnumTagSinglePayload((uint64_t)v264, 0, 1, v121);
          }
          uint64_t v418 = v1766[24];
          uint64_t v419 = &v8[v418];
          uint64_t v420 = &v9[v418];
          uint64_t v421 = *(void *)v420;
          v419[8] = v420[8];
          *(void *)uint64_t v419 = v421;
          uint64_t v417 = v1766[25];
LABEL_162:
          uint64_t v177 = &v8[v417];
          uint64_t v178 = (uint64_t)&v9[v417];
          uint64_t v179 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload(v178, 1, v179))
          {
LABEL_90:
            size_t v186 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                         - 8)
                             + 64);
            uint64_t v187 = v177;
            uint64_t v188 = (const void *)v178;
LABEL_157:
            memcpy(v187, v188, v186);
          }
          else
          {
LABEL_163:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
            uint64_t v257 = (uint64_t)v177;
            uint64_t v258 = v179;
LABEL_147:
            __swift_storeEnumTagSinglePayload(v257, 0, 1, v258);
          }
LABEL_544:
          swift_storeEnumTagMultiPayload();
          uint64_t v1621 = type metadata accessor for SearchResult(0);
          uint64_t v1622 = *(int *)(v1621 + 20);
          uint64_t v1623 = *(void **)&v9[v1622];
          *(void *)&v8[v1622] = v1623;
          uint64_t v1624 = *(int *)(v1621 + 24);
          uint64_t v1625 = &v8[v1624];
          uint64_t v1626 = &v9[v1624];
          *(void *)uint64_t v1625 = *(void *)v1626;
          *((void *)v1625 + 1) = *((void *)v1626 + 1);
          id v1627 = v1623;
          swift_bridgeObjectRetain();
          break;
        case 0x18u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          uint64_t v123 = (int *)type metadata accessor for GlobalItem();
          uint64_t v124 = v123[7];
          uint64_t v125 = &v8[v124];
          uint64_t v126 = &v9[v124];
          uint64_t v127 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v126, 1, v127))
          {
            uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
            __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v127);
          }
          uint64_t v267 = v123[8];
          uint64_t v268 = &v8[v267];
          uint64_t v269 = &v9[v267];
          unint64_t v270 = *((void *)v269 + 1);
          if (v270 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v268 = *(_OWORD *)v269;
          }
          else
          {
            uint64_t v271 = *(void *)v269;
            outlined copy of Data._Representation(*(void *)v269, *((void *)v269 + 1));
            *(void *)uint64_t v268 = v271;
            *((void *)v268 + 1) = v270;
          }
          v8[v123[9]] = v9[v123[9]];
          uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)&v8[*(int *)(v272 + 48)] = *(void *)&v9[*(int *)(v272 + 48)];
          swift_bridgeObjectRetain();
          goto LABEL_544;
        case 0x19u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_543;
        case 0x1Au:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          uint64_t v129 = type metadata accessor for Answer(0);
          uint64_t v130 = *(int *)(v129 + 36);
          uint64_t v1749 = &v8[v130];
          uint64_t v1767 = v129;
          uint64_t v131 = &v9[v130];
          uint64_t v132 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
          {
            uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1749, v131, *(void *)(*(void *)(v133 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v1749, v131, v132);
            __swift_storeEnumTagSinglePayload((uint64_t)v1749, 0, 1, v132);
          }
          v8[*(int *)(v1767 + 40)] = v9[*(int *)(v1767 + 40)];
          uint64_t v273 = *(int *)(v1767 + 44);
          uint64_t v274 = &v8[v273];
          uint64_t v275 = &v9[v273];
          *(void *)uint64_t v274 = *(void *)v275;
          *((void *)v274 + 1) = *((void *)v275 + 1);
          goto LABEL_543;
        default:
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = *((void *)v9 + 7);
          *((void *)v8 + 8) = *((void *)v9 + 8);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((void *)v8 + 10) = *((void *)v9 + 10);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v12 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v13 = v12[12];
          uint64_t v1717 = &v9[v13];
          uint64_t v1732 = &v8[v13];
          uint64_t v14 = type metadata accessor for Date();
          uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v1742 = v15;
          uint64_t v1747 = v14;
          v15(v1732, v1717, v14);
          *(void *)&v8[v12[13]] = *(void *)&v9[v12[13]];
          *(void *)&v8[v12[14]] = *(void *)&v9[v12[14]];
          *(void *)&v8[v12[15]] = *(void *)&v9[v12[15]];
          v8[v12[16]] = v9[v12[16]];
          v8[v12[17]] = v9[v12[17]];
          uint64_t v16 = v12[18];
          uint64_t v17 = &v8[v16];
          uint64_t v18 = &v9[v16];
          *(void *)uint64_t v17 = *(void *)v18;
          *((void *)v17 + 1) = *((void *)v18 + 1);
          uint64_t v1756 = v12;
          uint64_t v19 = v12[19];
          uint64_t v20 = &v8[v19];
          uint64_t v21 = &v9[v19];
          uint64_t v22 = *(void *)&v9[v19];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v22)
          {
            *(void *)uint64_t v20 = v22;
            *((void *)v20 + 1) = *((void *)v21 + 1);
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((void *)v20 + 3) = *((void *)v21 + 3);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v134 = *(_OWORD *)v21;
            long long v135 = *((_OWORD *)v21 + 1);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            *(_OWORD *)uint64_t v20 = v134;
            *((_OWORD *)v20 + 1) = v135;
          }
          uint64_t v136 = v12[20];
          uint64_t v137 = &v8[v136];
          uint64_t v138 = &v9[v136];
          *(void *)uint64_t v137 = *(void *)v138;
          *((void *)v137 + 1) = *((void *)v138 + 1);
          uint64_t v139 = v12[21];
          uint64_t v140 = &v8[v139];
          uint64_t v141 = &v9[v139];
          uint64_t v142 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, (uint64_t)v142))
          {
            uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v140 = *(void *)v141;
            *((void *)v140 + 1) = *((void *)v141 + 1);
            uint64_t v276 = v142[5];
            uint64_t v277 = &v140[v276];
            uint64_t v278 = &v141[v276];
            uint64_t v279 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v1722 = v142;
            uint64_t v1691 = v141;
            if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v279))
            {
              uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v277 = *(void *)v278;
              *((void *)v277 + 1) = *((void *)v278 + 1);
              *((void *)v277 + 2) = *((void *)v278 + 2);
              *((void *)v277 + 3) = *((void *)v278 + 3);
              *((void *)v277 + 4) = *((void *)v278 + 4);
              *((void *)v277 + 5) = *((void *)v278 + 5);
              *((void *)v277 + 6) = *((void *)v278 + 6);
              *((void *)v277 + 7) = *((void *)v278 + 7);
              *((void *)v277 + 8) = *((void *)v278 + 8);
              *((void *)v277 + 9) = *((void *)v278 + 9);
              *((void *)v277 + 10) = *((void *)v278 + 10);
              *((void *)v277 + 11) = *((void *)v278 + 11);
              *((void *)v277 + 12) = *((void *)v278 + 12);
              *((void *)v277 + 13) = *((void *)v278 + 13);
              *((void *)v277 + 14) = *((void *)v278 + 14);
              *((void *)v277 + 15) = *((void *)v278 + 15);
              v277[128] = v278[128];
              v277[129] = v278[129];
              v277[130] = v278[130];
              *((void *)v277 + 17) = *((void *)v278 + 17);
              *((void *)v277 + 18) = *((void *)v278 + 18);
              *((void *)v277 + 19) = *((void *)v278 + 19);
              *((void *)v277 + 20) = *((void *)v278 + 20);
              *((void *)v277 + 21) = *((void *)v278 + 21);
              *((void *)v277 + 22) = *((void *)v278 + 22);
              *((void *)v277 + 23) = *((void *)v278 + 23);
              *((void *)v277 + 24) = *((void *)v278 + 24);
              *((void *)v277 + 25) = *((void *)v278 + 25);
              *((void *)v277 + 26) = *((void *)v278 + 26);
              *((void *)v277 + 27) = *((void *)v278 + 27);
              *((void *)v277 + 28) = *((void *)v278 + 28);
              *((void *)v277 + 29) = *((void *)v278 + 29);
              *((void *)v277 + 30) = *((void *)v278 + 30);
              *((void *)v277 + 31) = *((void *)v278 + 31);
              *((void *)v277 + 32) = *((void *)v278 + 32);
              *((void *)v277 + 33) = *((void *)v278 + 33);
              *((void *)v277 + 34) = *((void *)v278 + 34);
              *((void *)v277 + 35) = *((void *)v278 + 35);
              *((void *)v277 + 36) = *((void *)v278 + 36);
              *((void *)v277 + 37) = *((void *)v278 + 37);
              *((void *)v277 + 38) = *((void *)v278 + 38);
              *((void *)v277 + 39) = *((void *)v278 + 39);
              *((void *)v277 + 40) = *((void *)v278 + 40);
              *((void *)v277 + 41) = *((void *)v278 + 41);
              *((void *)v277 + 42) = *((void *)v278 + 42);
              *((void *)v277 + 43) = *((void *)v278 + 43);
              *((void *)v277 + 44) = *((void *)v278 + 44);
              *((void *)v277 + 45) = *((void *)v278 + 45);
              *((void *)v277 + 46) = *((void *)v278 + 46);
              uint64_t v469 = *((void *)v278 + 47);
              v277[384] = v278[384];
              *((void *)v277 + 47) = v469;
              *((void *)v277 + 49) = *((void *)v278 + 49);
              *((void *)v277 + 50) = *((void *)v278 + 50);
              *((void *)v277 + 51) = *((void *)v278 + 51);
              *((void *)v277 + 52) = *((void *)v278 + 52);
              uint64_t v470 = *(int *)(v279 + 140);
              uint64_t v1629 = &v277[v470];
              uint64_t v471 = &v278[v470];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v471, 1, v1747))
              {
                uint64_t v472 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1629, v471, *(void *)(*(void *)(v472 - 8) + 64));
              }
              else
              {
                v1742(v1629, v471, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v1629, 0, 1, v1747);
              }
              uint64_t v862 = *(int *)(v279 + 144);
              uint64_t v863 = &v277[v862];
              uint64_t v864 = &v278[v862];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v278[v862], 1, v1747))
              {
                uint64_t v865 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v863, v864, *(void *)(*(void *)(v865 - 8) + 64));
              }
              else
              {
                v1742(v863, v864, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v863, 0, 1, v1747);
              }
              uint64_t v142 = v1722;
              __swift_storeEnumTagSinglePayload((uint64_t)v277, 0, 1, v279);
            }
            uint64_t v870 = v142[6];
            uint64_t v871 = &v140[v870];
            uint64_t v872 = &v141[v870];
            uint64_t v873 = type metadata accessor for TicketedTransportation(0);
            uint64_t v1713 = v140;
            if (__swift_getEnumTagSinglePayload((uint64_t)v872, 1, v873))
            {
              uint64_t v874 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v871, v872, *(void *)(*(void *)(v874 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v871 = *(void *)v872;
              *((void *)v871 + 1) = *((void *)v872 + 1);
              *((void *)v871 + 2) = *((void *)v872 + 2);
              *((void *)v871 + 3) = *((void *)v872 + 3);
              *((void *)v871 + 4) = *((void *)v872 + 4);
              *((void *)v871 + 5) = *((void *)v872 + 5);
              *((void *)v871 + 6) = *((void *)v872 + 6);
              *((void *)v871 + 7) = *((void *)v872 + 7);
              *((void *)v871 + 8) = *((void *)v872 + 8);
              *((void *)v871 + 9) = *((void *)v872 + 9);
              *((void *)v871 + 10) = *((void *)v872 + 10);
              *((void *)v871 + 11) = *((void *)v872 + 11);
              *((void *)v871 + 12) = *((void *)v872 + 12);
              *((void *)v871 + 13) = *((void *)v872 + 13);
              *((void *)v871 + 14) = *((void *)v872 + 14);
              *((void *)v871 + 15) = *((void *)v872 + 15);
              v871[128] = v872[128];
              v871[129] = v872[129];
              v871[130] = v872[130];
              *((void *)v871 + 17) = *((void *)v872 + 17);
              *((void *)v871 + 18) = *((void *)v872 + 18);
              *((void *)v871 + 19) = *((void *)v872 + 19);
              *((void *)v871 + 20) = *((void *)v872 + 20);
              *((void *)v871 + 21) = *((void *)v872 + 21);
              *((void *)v871 + 22) = *((void *)v872 + 22);
              *((void *)v871 + 23) = *((void *)v872 + 23);
              *((void *)v871 + 24) = *((void *)v872 + 24);
              *((void *)v871 + 25) = *((void *)v872 + 25);
              *((void *)v871 + 26) = *((void *)v872 + 26);
              *((void *)v871 + 27) = *((void *)v872 + 27);
              *((void *)v871 + 28) = *((void *)v872 + 28);
              *((void *)v871 + 29) = *((void *)v872 + 29);
              *((void *)v871 + 30) = *((void *)v872 + 30);
              *((void *)v871 + 31) = *((void *)v872 + 31);
              *((void *)v871 + 32) = *((void *)v872 + 32);
              *((void *)v871 + 33) = *((void *)v872 + 33);
              *((void *)v871 + 34) = *((void *)v872 + 34);
              *((void *)v871 + 35) = *((void *)v872 + 35);
              uint64_t v875 = *((void *)v872 + 36);
              v871[296] = v872[296];
              *((void *)v871 + 36) = v875;
              uint64_t v1686 = v873;
              uint64_t v876 = *(int *)(v873 + 112);
              __dsta = &v871[v876];
              uint64_t v877 = &v872[v876];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v877, 1, v1747))
              {
                uint64_t v878 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(__dsta, v877, *(void *)(*(void *)(v878 - 8) + 64));
              }
              else
              {
                v1742(__dsta, v877, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v1747);
              }
              uint64_t v888 = *(int *)(v873 + 116);
              uint64_t v889 = &v871[v888];
              uint64_t v890 = &v872[v888];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v872[v888], 1, v1747))
              {
                uint64_t v891 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v889, v890, *(void *)(*(void *)(v891 - 8) + 64));
              }
              else
              {
                v1742(v889, v890, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v889, 0, 1, v1747);
              }
              uint64_t v142 = v1722;
              __swift_storeEnumTagSinglePayload((uint64_t)v871, 0, 1, v1686);
            }
            uint64_t v896 = v142[7];
            uint64_t v897 = &v140[v896];
            uint64_t v898 = &v141[v896];
            uint64_t v899 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v898, 1, (uint64_t)v899))
            {
              uint64_t v900 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v897, v898, *(void *)(*(void *)(v900 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v897 = *(void *)v898;
              *((void *)v897 + 1) = *((void *)v898 + 1);
              *((void *)v897 + 2) = *((void *)v898 + 2);
              *((void *)v897 + 3) = *((void *)v898 + 3);
              *((void *)v897 + 4) = *((void *)v898 + 4);
              *((void *)v897 + 5) = *((void *)v898 + 5);
              *((void *)v897 + 6) = *((void *)v898 + 6);
              *((void *)v897 + 7) = *((void *)v898 + 7);
              *((void *)v897 + 8) = *((void *)v898 + 8);
              *((void *)v897 + 9) = *((void *)v898 + 9);
              *((void *)v897 + 10) = *((void *)v898 + 10);
              *((void *)v897 + 11) = *((void *)v898 + 11);
              *((void *)v897 + 12) = *((void *)v898 + 12);
              *((void *)v897 + 13) = *((void *)v898 + 13);
              *((void *)v897 + 14) = *((void *)v898 + 14);
              *((void *)v897 + 15) = *((void *)v898 + 15);
              v897[128] = v898[128];
              v897[129] = v898[129];
              v897[130] = v898[130];
              *((void *)v897 + 17) = *((void *)v898 + 17);
              *((void *)v897 + 18) = *((void *)v898 + 18);
              *((void *)v897 + 19) = *((void *)v898 + 19);
              *((void *)v897 + 20) = *((void *)v898 + 20);
              *((void *)v897 + 21) = *((void *)v898 + 21);
              *((void *)v897 + 22) = *((void *)v898 + 22);
              *((void *)v897 + 23) = *((void *)v898 + 23);
              *((void *)v897 + 24) = *((void *)v898 + 24);
              *((void *)v897 + 25) = *((void *)v898 + 25);
              *((void *)v897 + 26) = *((void *)v898 + 26);
              *((void *)v897 + 27) = *((void *)v898 + 27);
              *((void *)v897 + 28) = *((void *)v898 + 28);
              *((void *)v897 + 29) = *((void *)v898 + 29);
              *((void *)v897 + 30) = *((void *)v898 + 30);
              *((void *)v897 + 31) = *((void *)v898 + 31);
              *((void *)v897 + 32) = *((void *)v898 + 32);
              *((void *)v897 + 33) = *((void *)v898 + 33);
              *((void *)v897 + 34) = *((void *)v898 + 34);
              *((void *)v897 + 35) = *((void *)v898 + 35);
              uint64_t v901 = *((void *)v898 + 36);
              v897[296] = v898[296];
              *((void *)v897 + 36) = v901;
              *((void *)v897 + 38) = *((void *)v898 + 38);
              *((void *)v897 + 39) = *((void *)v898 + 39);
              uint64_t v902 = v899[29];
              uint64_t v1631 = &v897[v902];
              uint64_t v903 = &v898[v902];
              uint64_t v904 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v903, 1, v904))
              {
                uint64_t v905 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1631, v903, *(void *)(*(void *)(v905 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v904 - 8) + 16))(v1631, v903, v904);
                __swift_storeEnumTagSinglePayload((uint64_t)v1631, 0, 1, v904);
              }
              uint64_t v915 = v899[30];
              uint64_t v916 = &v897[v915];
              uint64_t v917 = &v898[v915];
              *(void *)uint64_t v916 = *(void *)v917;
              *((void *)v916 + 1) = *((void *)v917 + 1);
              uint64_t v918 = v899[31];
              uint64_t v919 = &v897[v918];
              uint64_t v920 = &v898[v918];
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v920, 1, v1747))
              {
                uint64_t v921 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v919, v920, *(void *)(*(void *)(v921 - 8) + 64));
              }
              else
              {
                v1742(v919, v920, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, v1747);
              }
              uint64_t v929 = v899[32];
              uint64_t v930 = &v897[v929];
              uint64_t v931 = &v898[v929];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v898[v929], 1, v1747))
              {
                uint64_t v932 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v930, v931, *(void *)(*(void *)(v932 - 8) + 64));
              }
              else
              {
                v1742(v930, v931, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v930, 0, 1, v1747);
              }
              uint64_t v142 = v1722;
              uint64_t v141 = v1691;
              __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, (uint64_t)v899);
            }
            uint64_t v937 = v142[8];
            uint64_t v938 = &v140[v937];
            uint64_t v939 = &v141[v937];
            uint64_t v940 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v939, 1, v940))
            {
              uint64_t v941 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v938, v939, *(void *)(*(void *)(v941 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v938 = *(void *)v939;
              *((void *)v938 + 1) = *((void *)v939 + 1);
              *((void *)v938 + 2) = *((void *)v939 + 2);
              *((void *)v938 + 3) = *((void *)v939 + 3);
              *((void *)v938 + 4) = *((void *)v939 + 4);
              *((void *)v938 + 5) = *((void *)v939 + 5);
              *((void *)v938 + 6) = *((void *)v939 + 6);
              *((void *)v938 + 7) = *((void *)v939 + 7);
              *((void *)v938 + 8) = *((void *)v939 + 8);
              *((void *)v938 + 9) = *((void *)v939 + 9);
              *((void *)v938 + 10) = *((void *)v939 + 10);
              *((void *)v938 + 11) = *((void *)v939 + 11);
              *((void *)v938 + 12) = *((void *)v939 + 12);
              *((void *)v938 + 13) = *((void *)v939 + 13);
              *((void *)v938 + 14) = *((void *)v939 + 14);
              *((void *)v938 + 15) = *((void *)v939 + 15);
              v938[128] = v939[128];
              v938[129] = v939[129];
              v938[130] = v939[130];
              *((void *)v938 + 17) = *((void *)v939 + 17);
              *((void *)v938 + 18) = *((void *)v939 + 18);
              *((void *)v938 + 19) = *((void *)v939 + 19);
              *((void *)v938 + 20) = *((void *)v939 + 20);
              *((void *)v938 + 21) = *((void *)v939 + 21);
              *((void *)v938 + 22) = *((void *)v939 + 22);
              *((void *)v938 + 23) = *((void *)v939 + 23);
              *((void *)v938 + 24) = *((void *)v939 + 24);
              *((void *)v938 + 25) = *((void *)v939 + 25);
              *((void *)v938 + 26) = *((void *)v939 + 26);
              *((void *)v938 + 27) = *((void *)v939 + 27);
              *((void *)v938 + 28) = *((void *)v939 + 28);
              *((void *)v938 + 29) = *((void *)v939 + 29);
              *((void *)v938 + 30) = *((void *)v939 + 30);
              *((void *)v938 + 31) = *((void *)v939 + 31);
              *((void *)v938 + 32) = *((void *)v939 + 32);
              *((void *)v938 + 33) = *((void *)v939 + 33);
              uint64_t v942 = *((void *)v939 + 34);
              v938[280] = v939[280];
              *((void *)v938 + 34) = v942;
              *((void *)v938 + 36) = *((void *)v939 + 36);
              *((void *)v938 + 37) = *((void *)v939 + 37);
              uint64_t v1687 = v940;
              uint64_t v943 = *(int *)(v940 + 108);
              uint64_t v1637 = &v938[v943];
              uint64_t v944 = &v939[v943];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v944, 1, v1747))
              {
                uint64_t v945 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1637, v944, *(void *)(*(void *)(v945 - 8) + 64));
              }
              else
              {
                v1742(v1637, v944, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v1637, 0, 1, v1747);
              }
              uint64_t v955 = *(int *)(v940 + 112);
              uint64_t v956 = &v938[v955];
              uint64_t v957 = &v939[v955];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v939[v955], 1, v1747))
              {
                uint64_t v958 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v956, v957, *(void *)(*(void *)(v958 - 8) + 64));
              }
              else
              {
                v1742(v956, v957, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v956, 0, 1, v1747);
              }
              uint64_t v142 = v1722;
              uint64_t v141 = v1691;
              __swift_storeEnumTagSinglePayload((uint64_t)v938, 0, 1, v1687);
            }
            uint64_t v963 = v142[9];
            uint64_t v964 = &v140[v963];
            uint64_t v965 = &v141[v963];
            uint64_t v966 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v965, 1, v966))
            {
              uint64_t v967 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v964, v965, *(void *)(*(void *)(v967 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v964 = *(void *)v965;
              *((void *)v964 + 1) = *((void *)v965 + 1);
              *((void *)v964 + 2) = *((void *)v965 + 2);
              *((void *)v964 + 3) = *((void *)v965 + 3);
              *((void *)v964 + 4) = *((void *)v965 + 4);
              *((void *)v964 + 5) = *((void *)v965 + 5);
              *((void *)v964 + 6) = *((void *)v965 + 6);
              *((void *)v964 + 7) = *((void *)v965 + 7);
              *((void *)v964 + 8) = *((void *)v965 + 8);
              *((void *)v964 + 9) = *((void *)v965 + 9);
              *((void *)v964 + 10) = *((void *)v965 + 10);
              *((void *)v964 + 11) = *((void *)v965 + 11);
              *((void *)v964 + 12) = *((void *)v965 + 12);
              *((void *)v964 + 13) = *((void *)v965 + 13);
              *((void *)v964 + 14) = *((void *)v965 + 14);
              *((void *)v964 + 15) = *((void *)v965 + 15);
              v964[128] = v965[128];
              v964[129] = v965[129];
              v964[130] = v965[130];
              *((void *)v964 + 17) = *((void *)v965 + 17);
              *((void *)v964 + 18) = *((void *)v965 + 18);
              *((void *)v964 + 19) = *((void *)v965 + 19);
              *((void *)v964 + 20) = *((void *)v965 + 20);
              *((void *)v964 + 21) = *((void *)v965 + 21);
              *((void *)v964 + 22) = *((void *)v965 + 22);
              *((void *)v964 + 23) = *((void *)v965 + 23);
              *((void *)v964 + 24) = *((void *)v965 + 24);
              *((void *)v964 + 25) = *((void *)v965 + 25);
              *((void *)v964 + 26) = *((void *)v965 + 26);
              *((void *)v964 + 27) = *((void *)v965 + 27);
              *((void *)v964 + 28) = *((void *)v965 + 28);
              *((void *)v964 + 29) = *((void *)v965 + 29);
              *((void *)v964 + 30) = *((void *)v965 + 30);
              *((void *)v964 + 31) = *((void *)v965 + 31);
              uint64_t v1688 = v966;
              uint64_t v968 = *(int *)(v966 + 96);
              uint64_t v1640 = &v964[v968];
              v969 = &v965[v968];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v969, 1, v1747))
              {
                uint64_t v970 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1640, v969, *(void *)(*(void *)(v970 - 8) + 64));
              }
              else
              {
                v1742(v1640, v969, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v1640, 0, 1, v1747);
              }
              uint64_t v979 = *(int *)(v966 + 100);
              uint64_t v980 = &v964[v979];
              uint64_t v981 = &v965[v979];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v965[v979], 1, v1747))
              {
                uint64_t v982 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v980, v981, *(void *)(*(void *)(v982 - 8) + 64));
              }
              else
              {
                v1742(v980, v981, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v980, 0, 1, v1747);
              }
              uint64_t v987 = *(int *)(v1688 + 104);
              v988 = &v964[v987];
              uint64_t v989 = &v965[v987];
              uint64_t v990 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v989, 1, v990))
              {
                uint64_t v991 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v988, v989, *(void *)(*(void *)(v991 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v990 - 8) + 16))(v988, v989, v990);
                __swift_storeEnumTagSinglePayload((uint64_t)v988, 0, 1, v990);
              }
              uint64_t v142 = v1722;
              uint64_t v141 = v1691;
              __swift_storeEnumTagSinglePayload((uint64_t)v964, 0, 1, v1688);
            }
            uint64_t v996 = v142[10];
            uint64_t v997 = &v140[v996];
            uint64_t v998 = &v141[v996];
            uint64_t v999 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v998, 1, v999))
            {
              uint64_t v1000 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v997, v998, *(void *)(*(void *)(v1000 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v997 = *(void *)v998;
              *((void *)v997 + 1) = *((void *)v998 + 1);
              *((void *)v997 + 2) = *((void *)v998 + 2);
              *((void *)v997 + 3) = *((void *)v998 + 3);
              *((void *)v997 + 4) = *((void *)v998 + 4);
              *((void *)v997 + 5) = *((void *)v998 + 5);
              *((void *)v997 + 6) = *((void *)v998 + 6);
              *((void *)v997 + 7) = *((void *)v998 + 7);
              *((void *)v997 + 8) = *((void *)v998 + 8);
              *((void *)v997 + 9) = *((void *)v998 + 9);
              *((void *)v997 + 10) = *((void *)v998 + 10);
              *((void *)v997 + 11) = *((void *)v998 + 11);
              *((void *)v997 + 12) = *((void *)v998 + 12);
              *((void *)v997 + 13) = *((void *)v998 + 13);
              *((void *)v997 + 14) = *((void *)v998 + 14);
              *((void *)v997 + 15) = *((void *)v998 + 15);
              v997[128] = v998[128];
              v997[129] = v998[129];
              v997[130] = v998[130];
              *((void *)v997 + 17) = *((void *)v998 + 17);
              *((void *)v997 + 18) = *((void *)v998 + 18);
              *((void *)v997 + 19) = *((void *)v998 + 19);
              *((void *)v997 + 20) = *((void *)v998 + 20);
              *((void *)v997 + 21) = *((void *)v998 + 21);
              *((void *)v997 + 22) = *((void *)v998 + 22);
              *((void *)v997 + 23) = *((void *)v998 + 23);
              *((void *)v997 + 24) = *((void *)v998 + 24);
              *((void *)v997 + 25) = *((void *)v998 + 25);
              *((void *)v997 + 26) = *((void *)v998 + 26);
              *((void *)v997 + 27) = *((void *)v998 + 27);
              uint64_t v1689 = v999;
              uint64_t v1001 = *(int *)(v999 + 88);
              uint64_t v1646 = &v997[v1001];
              uint64_t v1648 = &v998[v1001];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1648, 1, v1747))
              {
                uint64_t v1002 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1646, v1648, *(void *)(*(void *)(v1002 - 8) + 64));
              }
              else
              {
                v1742(v1646, v1648, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v1646, 0, 1, v1747);
              }
              uint64_t v1010 = *(int *)(v999 + 92);
              v1011 = &v997[v1010];
              uint64_t v1012 = &v998[v1010];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v998[v1010], 1, v1747))
              {
                uint64_t v1013 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1011, v1012, *(void *)(*(void *)(v1013 - 8) + 64));
              }
              else
              {
                v1742(v1011, v1012, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v1011, 0, 1, v1747);
              }
              uint64_t v1018 = *(int *)(v1689 + 96);
              v1019 = &v997[v1018];
              uint64_t v1020 = &v998[v1018];
              uint64_t v1021 = *(void *)v1020;
              v1019[8] = v1020[8];
              *(void *)v1019 = v1021;
              uint64_t v1022 = *(int *)(v1689 + 100);
              v1023 = &v997[v1022];
              uint64_t v1024 = &v998[v1022];
              uint64_t v1025 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1024, 1, v1025))
              {
                uint64_t v1026 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1023, v1024, *(void *)(*(void *)(v1026 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1025 - 8) + 16))(v1023, v1024, v1025);
                __swift_storeEnumTagSinglePayload((uint64_t)v1023, 0, 1, v1025);
              }
              uint64_t v142 = v1722;
              uint64_t v141 = v1691;
              __swift_storeEnumTagSinglePayload((uint64_t)v997, 0, 1, v1689);
            }
            uint64_t v1035 = v142[11];
            uint64_t v1036 = &v140[v1035];
            v1037 = &v141[v1035];
            uint64_t v1038 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1037, 1, (uint64_t)v1038))
            {
              uint64_t v1039 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1036, v1037, *(void *)(*(void *)(v1039 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v1036 = *(void *)v1037;
              *((void *)v1036 + 1) = *((void *)v1037 + 1);
              *((void *)v1036 + 2) = *((void *)v1037 + 2);
              *((void *)v1036 + 3) = *((void *)v1037 + 3);
              *((void *)v1036 + 4) = *((void *)v1037 + 4);
              *((void *)v1036 + 5) = *((void *)v1037 + 5);
              *((void *)v1036 + 6) = *((void *)v1037 + 6);
              *((void *)v1036 + 7) = *((void *)v1037 + 7);
              *((void *)v1036 + 8) = *((void *)v1037 + 8);
              *((void *)v1036 + 9) = *((void *)v1037 + 9);
              *((void *)v1036 + 10) = *((void *)v1037 + 10);
              *((void *)v1036 + 11) = *((void *)v1037 + 11);
              v1036[96] = v1037[96];
              *((void *)v1036 + 13) = *((void *)v1037 + 13);
              *((void *)v1036 + 14) = *((void *)v1037 + 14);
              uint64_t v1040 = v1038[13];
              uint64_t v1658 = &v1036[v1040];
              v1041 = &v1037[v1040];
              uint64_t v1664 = (void *)type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1041, 1, (uint64_t)v1664))
              {
                uint64_t v1042 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1658, v1041, *(void *)(*(void *)(v1042 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1664 - 1) + 16))(v1658, v1041, v1664);
                __swift_storeEnumTagSinglePayload((uint64_t)v1658, 0, 1, (uint64_t)v1664);
              }
              uint64_t v1050 = v1038[14];
              uint64_t v1051 = &v1036[v1050];
              v1052 = &v1037[v1050];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1037[v1050], 1, (uint64_t)v1664))
              {
                uint64_t v1053 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1051, v1052, *(void *)(*(void *)(v1053 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1664 - 1) + 16))(v1051, v1052, v1664);
                __swift_storeEnumTagSinglePayload((uint64_t)v1051, 0, 1, (uint64_t)v1664);
              }
              uint64_t v1058 = v1038[15];
              uint64_t v1059 = &v1036[v1058];
              uint64_t v1060 = &v1037[v1058];
              *(void *)uint64_t v1059 = *(void *)v1060;
              *((void *)v1059 + 1) = *((void *)v1060 + 1);
              uint64_t v1061 = v1038[16];
              uint64_t v1062 = &v1036[v1061];
              uint64_t v1063 = &v1037[v1061];
              *(void *)uint64_t v1062 = *(void *)v1063;
              *((void *)v1062 + 1) = *((void *)v1063 + 1);
              uint64_t v1064 = v1038[17];
              uint64_t v1065 = &v1036[v1064];
              uint64_t v1066 = &v1037[v1064];
              *(void *)uint64_t v1065 = *(void *)v1066;
              *((void *)v1065 + 1) = *((void *)v1066 + 1);
              uint64_t v1067 = v1038[18];
              uint64_t v1678 = &v1037[v1067];
              uint64_t v1681 = &v1036[v1067];
              uint64_t v1068 = type metadata accessor for DateComponents();
              v1069 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1068 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1069(v1681, v1678, v1068);
              v1069(&v1036[v1038[19]], &v1037[v1038[19]], v1068);
              uint64_t v1070 = v1038[20];
              uint64_t v1071 = &v1036[v1070];
              v1072 = &v1037[v1070];
              *(void *)uint64_t v1071 = *(void *)v1072;
              *((void *)v1071 + 1) = *((void *)v1072 + 1);
              uint64_t v1073 = v1038[21];
              uint64_t v1074 = &v1036[v1073];
              uint64_t v1075 = &v1037[v1073];
              *(void *)uint64_t v1074 = *(void *)v1075;
              *((void *)v1074 + 1) = *((void *)v1075 + 1);
              uint64_t v1076 = v1038[22];
              v1077 = &v1036[v1076];
              uint64_t v1078 = &v1037[v1076];
              *(void *)v1077 = *(void *)v1078;
              *((void *)v1077 + 1) = *((void *)v1078 + 1);
              uint64_t v1079 = v1038[23];
              v1080 = &v1036[v1079];
              uint64_t v1081 = &v1037[v1079];
              *(void *)v1080 = *(void *)v1081;
              *((void *)v1080 + 1) = *((void *)v1081 + 1);
              uint64_t v1082 = v1038[24];
              v1083 = &v1036[v1082];
              v1084 = &v1037[v1082];
              *(void *)v1083 = *(void *)v1084;
              *((void *)v1083 + 1) = *((void *)v1084 + 1);
              uint64_t v1085 = v1038[25];
              uint64_t v1086 = &v1036[v1085];
              v1087 = &v1037[v1085];
              *(void *)uint64_t v1086 = *(void *)v1087;
              *((void *)v1086 + 1) = *((void *)v1087 + 1);
              uint64_t v1088 = v1038[26];
              uint64_t v1089 = &v1036[v1088];
              uint64_t v1090 = &v1037[v1088];
              *(void *)uint64_t v1089 = *(void *)v1090;
              *((void *)v1089 + 1) = *((void *)v1090 + 1);
              uint64_t v1091 = v1038[27];
              v1092 = &v1036[v1091];
              uint64_t v1093 = &v1037[v1091];
              *(void *)v1092 = *(void *)v1093;
              *((void *)v1092 + 1) = *((void *)v1093 + 1);
              uint64_t v1094 = v1038[28];
              v1095 = &v1036[v1094];
              v1096 = &v1037[v1094];
              *(void *)v1095 = *(void *)v1096;
              *((void *)v1095 + 1) = *((void *)v1096 + 1);
              uint64_t v1097 = v1038[29];
              uint64_t v1098 = &v1036[v1097];
              uint64_t v1099 = &v1037[v1097];
              *(void *)uint64_t v1098 = *(void *)v1099;
              *((void *)v1098 + 1) = *((void *)v1099 + 1);
              uint64_t v1100 = v1038[30];
              uint64_t v1101 = &v1036[v1100];
              uint64_t v1102 = &v1037[v1100];
              *(void *)uint64_t v1101 = *(void *)v1102;
              *((void *)v1101 + 1) = *((void *)v1102 + 1);
              uint64_t v1103 = v1038[31];
              uint64_t v1104 = &v1036[v1103];
              uint64_t v1105 = &v1037[v1103];
              *(void *)uint64_t v1104 = *(void *)v1105;
              *((void *)v1104 + 1) = *((void *)v1105 + 1);
              uint64_t v1106 = v1038[32];
              uint64_t v1107 = &v1036[v1106];
              v1108 = &v1037[v1106];
              *(void *)uint64_t v1107 = *(void *)v1108;
              *((void *)v1107 + 1) = *((void *)v1108 + 1);
              *(void *)&v1036[v1038[33]] = *(void *)&v1037[v1038[33]];
              *(void *)&v1036[v1038[34]] = *(void *)&v1037[v1038[34]];
              uint64_t v1109 = v1038[35];
              uint64_t v1110 = &v1036[v1109];
              v1111 = &v1037[v1109];
              *(void *)uint64_t v1110 = *(void *)v1111;
              *((void *)v1110 + 1) = *((void *)v1111 + 1);
              uint64_t v1112 = v1038[36];
              uint64_t v1113 = &v1036[v1112];
              uint64_t v1114 = &v1037[v1112];
              *(void *)uint64_t v1113 = *(void *)v1114;
              *((void *)v1113 + 1) = *((void *)v1114 + 1);
              uint64_t v1115 = v1038[37];
              v1116 = &v1036[v1115];
              uint64_t v1117 = &v1037[v1115];
              *(void *)v1116 = *(void *)v1117;
              *((void *)v1116 + 1) = *((void *)v1117 + 1);
              uint64_t v1118 = v1038[38];
              v1639 = &v1036[v1118];
              uint64_t v1641 = &v1037[v1118];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1641, 1, v1747))
              {
                uint64_t v1119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1639, v1641, *(void *)(*(void *)(v1119 - 8) + 64));
              }
              else
              {
                v1742(v1639, v1641, v1747);
                __swift_storeEnumTagSinglePayload((uint64_t)v1639, 0, 1, v1747);
              }
              uint64_t v1182 = v1038[39];
              v1183 = &v1036[v1182];
              v1184 = &v1037[v1182];
              *(void *)v1183 = *(void *)v1184;
              *((void *)v1183 + 1) = *((void *)v1184 + 1);
              uint64_t v1185 = v1038[40];
              uint64_t v1186 = &v1036[v1185];
              v1187 = &v1037[v1185];
              *(void *)uint64_t v1186 = *(void *)v1187;
              *((void *)v1186 + 1) = *((void *)v1187 + 1);
              uint64_t v1188 = v1038[41];
              uint64_t v1189 = &v1036[v1188];
              uint64_t v1190 = &v1037[v1188];
              uint64_t v1191 = *(void *)v1190;
              v1189[8] = v1190[8];
              *(void *)uint64_t v1189 = v1191;
              uint64_t v1192 = v1038[42];
              uint64_t v1193 = &v1036[v1192];
              uint64_t v1194 = &v1037[v1192];
              *(void *)uint64_t v1193 = *(void *)v1194;
              *((void *)v1193 + 1) = *((void *)v1194 + 1);
              uint64_t v1195 = v1038[43];
              v1196 = &v1036[v1195];
              uint64_t v1197 = &v1037[v1195];
              long long v1198 = *(_OWORD *)v1197;
              *(void *)(v1196 + 13) = *(void *)(v1197 + 13);
              *(_OWORD *)v1196 = v1198;
              uint64_t v1199 = v1038[44];
              uint64_t v1200 = &v1036[v1199];
              uint64_t v1201 = &v1037[v1199];
              *(void *)uint64_t v1200 = *(void *)v1201;
              *((void *)v1200 + 1) = *((void *)v1201 + 1);
              uint64_t v1202 = v1038[45];
              v1203 = &v1036[v1202];
              uint64_t v1204 = &v1037[v1202];
              *(void *)v1203 = *(void *)v1204;
              *((void *)v1203 + 1) = *((void *)v1204 + 1);
              uint64_t v1205 = v1038[46];
              uint64_t v1206 = &v1036[v1205];
              uint64_t v1207 = &v1037[v1205];
              *(void *)uint64_t v1206 = *(void *)v1207;
              *((void *)v1206 + 1) = *((void *)v1207 + 1);
              uint64_t v1208 = v1038[47];
              uint64_t v1209 = &v1036[v1208];
              uint64_t v1210 = &v1037[v1208];
              *(void *)uint64_t v1209 = *(void *)v1210;
              *((void *)v1209 + 1) = *((void *)v1210 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1036, 0, 1, (uint64_t)v1038);
              uint64_t v140 = v1713;
              uint64_t v142 = v1722;
              uint64_t v141 = v1691;
            }
            uint64_t v1211 = v142[12];
            uint64_t v1212 = &v140[v1211];
            uint64_t v1213 = &v141[v1211];
            uint64_t v1214 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1213, 1, (uint64_t)v1214))
            {
              uint64_t v1215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1212, v1213, *(void *)(*(void *)(v1215 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v1212 = *(void *)v1213;
              *((void *)v1212 + 1) = *((void *)v1213 + 1);
              *((void *)v1212 + 2) = *((void *)v1213 + 2);
              *((void *)v1212 + 3) = *((void *)v1213 + 3);
              *((void *)v1212 + 4) = *((void *)v1213 + 4);
              *((void *)v1212 + 5) = *((void *)v1213 + 5);
              *((void *)v1212 + 6) = *((void *)v1213 + 6);
              *((void *)v1212 + 7) = *((void *)v1213 + 7);
              *((void *)v1212 + 8) = *((void *)v1213 + 8);
              *((void *)v1212 + 9) = *((void *)v1213 + 9);
              *((void *)v1212 + 10) = *((void *)v1213 + 10);
              *((void *)v1212 + 11) = *((void *)v1213 + 11);
              v1212[96] = v1213[96];
              *((void *)v1212 + 13) = *((void *)v1213 + 13);
              *((void *)v1212 + 14) = *((void *)v1213 + 14);
              *((void *)v1212 + 15) = *((void *)v1213 + 15);
              *((void *)v1212 + 16) = *((void *)v1213 + 16);
              uint64_t v1216 = v1214[14];
              uint64_t v1655 = &v1212[v1216];
              uint64_t v1665 = &v1213[v1216];
              uint64_t v1659 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1665, 1, (uint64_t)v1659))
              {
                uint64_t v1217 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1655, v1665, *(void *)(*(void *)(v1217 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1659 - 1) + 16))(v1655, v1665, v1659);
                __swift_storeEnumTagSinglePayload((uint64_t)v1655, 0, 1, (uint64_t)v1659);
              }
              uint64_t v1254 = v1214[15];
              uint64_t v1255 = &v1212[v1254];
              uint64_t v1256 = &v1213[v1254];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v1213[v1254], 1, (uint64_t)v1659))
              {
                uint64_t v1257 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1255, v1256, *(void *)(*(void *)(v1257 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1659 - 1) + 16))(v1255, v1256, v1659);
                __swift_storeEnumTagSinglePayload((uint64_t)v1255, 0, 1, (uint64_t)v1659);
              }
              uint64_t v1262 = v1214[16];
              v1263 = &v1212[v1262];
              uint64_t v1264 = &v1213[v1262];
              *(void *)v1263 = *(void *)v1264;
              *((void *)v1263 + 1) = *((void *)v1264 + 1);
              uint64_t v1265 = v1214[17];
              uint64_t v1266 = &v1212[v1265];
              v1267 = &v1213[v1265];
              *(void *)uint64_t v1266 = *(void *)v1267;
              *((void *)v1266 + 1) = *((void *)v1267 + 1);
              uint64_t v1268 = v1214[18];
              uint64_t v1269 = &v1212[v1268];
              uint64_t v1270 = &v1213[v1268];
              *(void *)uint64_t v1269 = *(void *)v1270;
              *((void *)v1269 + 1) = *((void *)v1270 + 1);
              uint64_t v1271 = v1214[19];
              uint64_t v1272 = &v1212[v1271];
              uint64_t v1273 = &v1213[v1271];
              *(void *)uint64_t v1272 = *(void *)v1273;
              *((void *)v1272 + 1) = *((void *)v1273 + 1);
              uint64_t v1274 = v1214[20];
              uint64_t v1275 = &v1212[v1274];
              uint64_t v1276 = &v1213[v1274];
              *(void *)uint64_t v1275 = *(void *)v1276;
              *((void *)v1275 + 1) = *((void *)v1276 + 1);
              *(void *)&v1212[v1214[21]] = *(void *)&v1213[v1214[21]];
              *(void *)&v1212[v1214[22]] = *(void *)&v1213[v1214[22]];
              uint64_t v1277 = v1214[23];
              uint64_t v1278 = &v1212[v1277];
              uint64_t v1279 = &v1213[v1277];
              uint64_t v1280 = *(void *)v1279;
              v1278[8] = v1279[8];
              *(void *)uint64_t v1278 = v1280;
              uint64_t v1281 = v1214[24];
              uint64_t v1282 = &v1212[v1281];
              uint64_t v1283 = &v1213[v1281];
              uint64_t v1284 = *(void *)v1283;
              v1282[8] = v1283[8];
              *(void *)uint64_t v1282 = v1284;
              uint64_t v1285 = v1214[25];
              uint64_t v1286 = &v1212[v1285];
              uint64_t v1287 = &v1213[v1285];
              *(void *)uint64_t v1286 = *(void *)v1287;
              *((void *)v1286 + 1) = *((void *)v1287 + 1);
              uint64_t v1288 = v1214[26];
              v1289 = &v1212[v1288];
              uint64_t v1290 = &v1213[v1288];
              *(void *)v1289 = *(void *)v1290;
              *((void *)v1289 + 1) = *((void *)v1290 + 1);
              uint64_t v1291 = v1214[27];
              uint64_t v1292 = &v1212[v1291];
              v1293 = &v1213[v1291];
              *(void *)uint64_t v1292 = *(void *)v1293;
              *((void *)v1292 + 1) = *((void *)v1293 + 1);
              uint64_t v1294 = v1214[28];
              uint64_t v1295 = &v1212[v1294];
              uint64_t v1296 = &v1213[v1294];
              *(void *)uint64_t v1295 = *(void *)v1296;
              *((void *)v1295 + 1) = *((void *)v1296 + 1);
              uint64_t v1297 = v1214[29];
              uint64_t v1298 = &v1212[v1297];
              uint64_t v1299 = &v1213[v1297];
              uint64_t v1300 = *(void *)v1299;
              v1298[8] = v1299[8];
              *(void *)uint64_t v1298 = v1300;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1212, 0, 1, (uint64_t)v1214);
              uint64_t v140 = v1713;
              uint64_t v142 = v1722;
              uint64_t v141 = v1691;
            }
            uint64_t v1301 = v142[13];
            uint64_t v1302 = &v140[v1301];
            uint64_t v1303 = &v141[v1301];
            uint64_t v1304 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1303, 1, (uint64_t)v1304))
            {
              uint64_t v1305 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1302, v1303, *(void *)(*(void *)(v1305 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v1302 = *(void *)v1303;
              *((void *)v1302 + 1) = *((void *)v1303 + 1);
              *((void *)v1302 + 2) = *((void *)v1303 + 2);
              *((void *)v1302 + 3) = *((void *)v1303 + 3);
              *((void *)v1302 + 4) = *((void *)v1303 + 4);
              *((void *)v1302 + 5) = *((void *)v1303 + 5);
              *((void *)v1302 + 6) = *((void *)v1303 + 6);
              *((void *)v1302 + 7) = *((void *)v1303 + 7);
              *((void *)v1302 + 8) = *((void *)v1303 + 8);
              *((void *)v1302 + 9) = *((void *)v1303 + 9);
              *((void *)v1302 + 10) = *((void *)v1303 + 10);
              *((void *)v1302 + 11) = *((void *)v1303 + 11);
              v1302[96] = v1303[96];
              *((void *)v1302 + 13) = *((void *)v1303 + 13);
              *((void *)v1302 + 14) = *((void *)v1303 + 14);
              *((void *)v1302 + 15) = *((void *)v1303 + 15);
              *((void *)v1302 + 16) = *((void *)v1303 + 16);
              uint64_t v1306 = v1304[14];
              uint64_t v1661 = &v1302[v1306];
              uint64_t v1674 = &v1303[v1306];
              uint64_t v1667 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1674, 1, (uint64_t)v1667))
              {
                uint64_t v1307 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1661, v1674, *(void *)(*(void *)(v1307 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v1667 - 1) + 16))(v1661, v1674, v1667);
                __swift_storeEnumTagSinglePayload((uint64_t)v1661, 0, 1, (uint64_t)v1667);
              }
              uint64_t v1354 = v1304[15];
              uint64_t v1355 = &v1302[v1354];
              uint64_t v1356 = &v1303[v1354];
              *(void *)uint64_t v1355 = *(void *)v1356;
              *((void *)v1355 + 1) = *((void *)v1356 + 1);
              uint64_t v1357 = v1304[16];
              uint64_t v1358 = &v1302[v1357];
              uint64_t v1359 = &v1303[v1357];
              *(void *)uint64_t v1358 = *(void *)v1359;
              *((void *)v1358 + 1) = *((void *)v1359 + 1);
              uint64_t v1360 = v1304[17];
              uint64_t v1361 = &v1302[v1360];
              uint64_t v1362 = &v1303[v1360];
              *(void *)uint64_t v1361 = *(void *)v1362;
              *((void *)v1361 + 1) = *((void *)v1362 + 1);
              uint64_t v1363 = v1304[18];
              uint64_t v1364 = &v1302[v1363];
              uint64_t v1365 = &v1303[v1363];
              *(void *)uint64_t v1364 = *(void *)v1365;
              *((void *)v1364 + 1) = *((void *)v1365 + 1);
              uint64_t v1366 = v1304[19];
              uint64_t v1367 = &v1302[v1366];
              uint64_t v1368 = &v1303[v1366];
              *(void *)uint64_t v1367 = *(void *)v1368;
              *((void *)v1367 + 1) = *((void *)v1368 + 1);
              *(void *)&v1302[v1304[20]] = *(void *)&v1303[v1304[20]];
              uint64_t v1369 = v1304[21];
              uint64_t v1370 = &v1302[v1369];
              uint64_t v1371 = &v1303[v1369];
              *(void *)uint64_t v1370 = *(void *)v1371;
              *((void *)v1370 + 1) = *((void *)v1371 + 1);
              uint64_t v1372 = v1304[22];
              uint64_t v1373 = &v1302[v1372];
              uint64_t v1374 = &v1303[v1372];
              *(void *)uint64_t v1373 = *(void *)v1374;
              *((void *)v1373 + 1) = *((void *)v1374 + 1);
              uint64_t v1375 = v1304[23];
              uint64_t v1376 = &v1302[v1375];
              uint64_t v1377 = &v1303[v1375];
              *(void *)uint64_t v1376 = *(void *)v1377;
              *((void *)v1376 + 1) = *((void *)v1377 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1302, 0, 1, (uint64_t)v1304);
              uint64_t v140 = v1713;
              uint64_t v142 = v1722;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, (uint64_t)v142);
          }
          uint64_t v1378 = v1756[22];
          uint64_t v1379 = &v8[v1378];
          uint64_t v1380 = &v9[v1378];
          uint64_t v1381 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1380, 1, v1381))
          {
            uint64_t v1382 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1379, v1380, *(void *)(*(void *)(v1382 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1379 = *(void *)v1380;
            *((void *)v1379 + 1) = *((void *)v1380 + 1);
            *((void *)v1379 + 2) = *((void *)v1380 + 2);
            *((void *)v1379 + 3) = *((void *)v1380 + 3);
            *((void *)v1379 + 4) = *((void *)v1380 + 4);
            *((void *)v1379 + 5) = *((void *)v1380 + 5);
            *((void *)v1379 + 6) = *((void *)v1380 + 6);
            *((void *)v1379 + 7) = *((void *)v1380 + 7);
            *((void *)v1379 + 8) = *((void *)v1380 + 8);
            *((void *)v1379 + 9) = *((void *)v1380 + 9);
            *((void *)v1379 + 10) = *((void *)v1380 + 10);
            *((void *)v1379 + 11) = *((void *)v1380 + 11);
            uint64_t v1728 = (int *)v1381;
            uint64_t v1383 = *(int *)(v1381 + 40);
            uint64_t v1702 = &v1380[v1383];
            uint64_t v1714 = &v1379[v1383];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1702, 1, v1747))
            {
              uint64_t v1384 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1714, v1702, *(void *)(*(void *)(v1384 - 8) + 64));
            }
            else
            {
              v1742(v1714, v1702, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1714, 0, 1, v1747);
            }
            uint64_t v1385 = *(int *)(v1381 + 44);
            uint64_t v1386 = &v1379[v1385];
            uint64_t v1387 = &v1380[v1385];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1380[v1385], 1, v1747))
            {
              uint64_t v1388 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1386, v1387, *(void *)(*(void *)(v1388 - 8) + 64));
            }
            else
            {
              v1742(v1386, v1387, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1386, 0, 1, v1747);
            }
            uint64_t v1389 = v1728[12];
            uint64_t v1390 = &v1379[v1389];
            uint64_t v1391 = &v1380[v1389];
            *(void *)uint64_t v1390 = *(void *)v1391;
            *((void *)v1390 + 1) = *((void *)v1391 + 1);
            uint64_t v1392 = v1728[13];
            uint64_t v1393 = &v1379[v1392];
            uint64_t v1394 = &v1380[v1392];
            *(void *)uint64_t v1393 = *(void *)v1394;
            *((void *)v1393 + 1) = *((void *)v1394 + 1);
            uint64_t v1395 = v1728[14];
            uint64_t v1396 = &v1379[v1395];
            uint64_t v1397 = &v1380[v1395];
            *(void *)uint64_t v1396 = *(void *)v1397;
            *((void *)v1396 + 1) = *((void *)v1397 + 1);
            uint64_t v1398 = v1728[15];
            uint64_t v1399 = &v1379[v1398];
            uint64_t v1400 = &v1380[v1398];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1400, 1, v1747))
            {
              uint64_t v1401 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1399, v1400, *(void *)(*(void *)(v1401 - 8) + 64));
            }
            else
            {
              v1742(v1399, v1400, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1399, 0, 1, v1747);
            }
            uint64_t v1402 = v1728[16];
            uint64_t v1403 = &v1379[v1402];
            uint64_t v1404 = &v1380[v1402];
            *(void *)uint64_t v1403 = *(void *)v1404;
            *((void *)v1403 + 1) = *((void *)v1404 + 1);
            uint64_t v1405 = v1728[17];
            uint64_t v1406 = &v1379[v1405];
            uint64_t v1407 = &v1380[v1405];
            *(void *)uint64_t v1406 = *(void *)v1407;
            *((void *)v1406 + 1) = *((void *)v1407 + 1);
            uint64_t v1408 = v1728[18];
            uint64_t v1409 = &v1379[v1408];
            uint64_t v1410 = &v1380[v1408];
            *(void *)uint64_t v1409 = *(void *)v1410;
            *((void *)v1409 + 1) = *((void *)v1410 + 1);
            uint64_t v1411 = v1728[19];
            uint64_t v1412 = &v1379[v1411];
            uint64_t v1413 = &v1380[v1411];
            *(void *)uint64_t v1412 = *(void *)v1413;
            *((void *)v1412 + 1) = *((void *)v1413 + 1);
            uint64_t v1414 = v1728[20];
            uint64_t v1415 = &v1379[v1414];
            uint64_t v1416 = &v1380[v1414];
            *(void *)uint64_t v1415 = *(void *)v1416;
            *((void *)v1415 + 1) = *((void *)v1416 + 1);
            uint64_t v1417 = v1728[21];
            uint64_t v1418 = &v1379[v1417];
            uint64_t v1419 = &v1380[v1417];
            *(void *)uint64_t v1418 = *(void *)v1419;
            *((void *)v1418 + 1) = *((void *)v1419 + 1);
            uint64_t v1420 = v1728[22];
            uint64_t v1421 = &v1379[v1420];
            uint64_t v1422 = &v1380[v1420];
            *(void *)uint64_t v1421 = *(void *)v1422;
            *((void *)v1421 + 1) = *((void *)v1422 + 1);
            uint64_t v1423 = v1728[23];
            uint64_t v1424 = &v1379[v1423];
            uint64_t v1425 = &v1380[v1423];
            *(void *)uint64_t v1424 = *(void *)v1425;
            *((void *)v1424 + 1) = *((void *)v1425 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1379, 0, 1, (uint64_t)v1728);
          }
          uint64_t v1426 = v1756[23];
          uint64_t v1427 = &v8[v1426];
          uint64_t v1428 = &v9[v1426];
          uint64_t v1429 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1428, 1, (uint64_t)v1429))
          {
            uint64_t v1430 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1427, v1428, *(void *)(*(void *)(v1430 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1427 = *(void *)v1428;
            *((void *)v1427 + 1) = *((void *)v1428 + 1);
            *((void *)v1427 + 2) = *((void *)v1428 + 2);
            *((void *)v1427 + 3) = *((void *)v1428 + 3);
            *((void *)v1427 + 4) = *((void *)v1428 + 4);
            *((void *)v1427 + 5) = *((void *)v1428 + 5);
            *((void *)v1427 + 6) = *((void *)v1428 + 6);
            *((void *)v1427 + 7) = *((void *)v1428 + 7);
            *((void *)v1427 + 8) = *((void *)v1428 + 8);
            *((void *)v1427 + 9) = *((void *)v1428 + 9);
            *((void *)v1427 + 10) = *((void *)v1428 + 10);
            *((void *)v1427 + 11) = *((void *)v1428 + 11);
            uint64_t v1431 = v1429[11];
            uint64_t v1729 = &v1427[v1431];
            uint64_t v1690 = &v1428[v1431];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1690, 1, v1747))
            {
              uint64_t v1432 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1729, v1690, *(void *)(*(void *)(v1432 - 8) + 64));
            }
            else
            {
              v1742(v1729, v1690, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1729, 0, 1, v1747);
            }
            uint64_t v1433 = v1429[12];
            uint64_t v1434 = &v1427[v1433];
            uint64_t v1435 = &v1428[v1433];
            *(void *)uint64_t v1434 = *(void *)v1435;
            *((void *)v1434 + 1) = *((void *)v1435 + 1);
            *(void *)&v1427[v1429[13]] = *(void *)&v1428[v1429[13]];
            uint64_t v1436 = v1429[14];
            uint64_t v1437 = &v1427[v1436];
            uint64_t v1438 = &v1428[v1436];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1438, 1, v1747))
            {
              uint64_t v1439 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1437, v1438, *(void *)(*(void *)(v1439 - 8) + 64));
            }
            else
            {
              v1742(v1437, v1438, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1437, 0, 1, v1747);
            }
            *(void *)&v1427[v1429[15]] = *(void *)&v1428[v1429[15]];
            *(void *)&v1427[v1429[16]] = *(void *)&v1428[v1429[16]];
            uint64_t v1440 = v1429[17];
            uint64_t v1441 = &v1427[v1440];
            uint64_t v1442 = &v1428[v1440];
            *(void *)uint64_t v1441 = *(void *)v1442;
            *((void *)v1441 + 1) = *((void *)v1442 + 1);
            *(void *)&v1427[v1429[18]] = *(void *)&v1428[v1429[18]];
            *(void *)&v1427[v1429[19]] = *(void *)&v1428[v1429[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1427, 0, 1, (uint64_t)v1429);
          }
          uint64_t v1443 = v1756[24];
          uint64_t v1444 = &v8[v1443];
          v1445 = &v9[v1443];
          uint64_t v1446 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1445, 1, (uint64_t)v1446))
          {
            uint64_t v1447 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1444, v1445, *(void *)(*(void *)(v1447 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v1444 = *(void *)v1445;
            *((void *)v1444 + 1) = *((void *)v1445 + 1);
            *((void *)v1444 + 2) = *((void *)v1445 + 2);
            *((void *)v1444 + 3) = *((void *)v1445 + 3);
            *((void *)v1444 + 4) = *((void *)v1445 + 4);
            *((void *)v1444 + 5) = *((void *)v1445 + 5);
            *((void *)v1444 + 6) = *((void *)v1445 + 6);
            *((void *)v1444 + 7) = *((void *)v1445 + 7);
            uint64_t v1448 = v1446[8];
            v1715 = &v1445[v1448];
            uint64_t v1730 = &v1444[v1448];
            uint64_t v1703 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1715, 1, v1703))
            {
              uint64_t v1449 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1730, v1715, *(void *)(*(void *)(v1449 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1703 - 8) + 16))(v1730, v1715, v1703);
              __swift_storeEnumTagSinglePayload((uint64_t)v1730, 0, 1, v1703);
            }
            uint64_t v1450 = v1446[9];
            uint64_t v1451 = &v1444[v1450];
            uint64_t v1452 = &v1445[v1450];
            *(void *)uint64_t v1451 = *(void *)v1452;
            *((void *)v1451 + 1) = *((void *)v1452 + 1);
            uint64_t v1453 = v1446[10];
            uint64_t v1454 = &v1444[v1453];
            uint64_t v1455 = &v1445[v1453];
            *(void *)uint64_t v1454 = *(void *)v1455;
            *((void *)v1454 + 1) = *((void *)v1455 + 1);
            uint64_t v1456 = v1446[11];
            uint64_t v1457 = &v1444[v1456];
            uint64_t v1458 = &v1445[v1456];
            *(void *)uint64_t v1457 = *(void *)v1458;
            *((void *)v1457 + 1) = *((void *)v1458 + 1);
            uint64_t v1459 = v1446[12];
            uint64_t v1460 = &v1444[v1459];
            uint64_t v1461 = &v1445[v1459];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1461, 1, v1747))
            {
              uint64_t v1462 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1460, v1461, *(void *)(*(void *)(v1462 - 8) + 64));
            }
            else
            {
              v1742(v1460, v1461, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1460, 0, 1, v1747);
            }
            uint64_t v1463 = v1446[13];
            uint64_t v1464 = &v1444[v1463];
            uint64_t v1465 = &v1445[v1463];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1445[v1463], 1, v1747))
            {
              uint64_t v1466 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1464, v1465, *(void *)(*(void *)(v1466 - 8) + 64));
            }
            else
            {
              v1742(v1464, v1465, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v1464, 0, 1, v1747);
            }
            uint64_t v1467 = v1446[14];
            uint64_t v1468 = &v1444[v1467];
            uint64_t v1469 = &v1445[v1467];
            uint64_t v1470 = *(void *)v1469;
            v1468[8] = v1469[8];
            *(void *)uint64_t v1468 = v1470;
            uint64_t v1471 = v1446[15];
            uint64_t v1472 = &v1444[v1471];
            uint64_t v1473 = &v1445[v1471];
            *(void *)uint64_t v1472 = *(void *)v1473;
            *((void *)v1472 + 1) = *((void *)v1473 + 1);
            uint64_t v1474 = v1446[16];
            uint64_t v1475 = &v1444[v1474];
            uint64_t v1476 = &v1445[v1474];
            *(void *)uint64_t v1475 = *(void *)v1476;
            *((void *)v1475 + 1) = *((void *)v1476 + 1);
            uint64_t v1477 = v1446[17];
            v1478 = &v1444[v1477];
            uint64_t v1479 = &v1445[v1477];
            *(void *)v1478 = *(void *)v1479;
            *((void *)v1478 + 1) = *((void *)v1479 + 1);
            uint64_t v1480 = v1446[18];
            uint64_t v1481 = &v1444[v1480];
            uint64_t v1482 = &v1445[v1480];
            *(void *)uint64_t v1481 = *(void *)v1482;
            *((void *)v1481 + 1) = *((void *)v1482 + 1);
            uint64_t v1483 = v1446[19];
            uint64_t v1484 = &v1444[v1483];
            uint64_t v1485 = &v1445[v1483];
            *(void *)uint64_t v1484 = *(void *)v1485;
            *((void *)v1484 + 1) = *((void *)v1485 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1444, 0, 1, (uint64_t)v1446);
          }
          uint64_t v861 = v1756[25];
LABEL_541:
          v1619 = &v8[v861];
          uint64_t v1620 = &v9[v861];
          if (*(void *)&v9[v861 + 8])
          {
            *(void *)v1619 = *(void *)v1620;
            *((void *)v1619 + 1) = *((void *)v1620 + 1);
            *((void *)v1619 + 2) = *((void *)v1620 + 2);
            *((void *)v1619 + 3) = *((void *)v1620 + 3);
            *((void *)v1619 + 4) = *((void *)v1620 + 4);
            *((void *)v1619 + 5) = *((void *)v1620 + 5);
            *((void *)v1619 + 6) = *((void *)v1620 + 6);
            *((void *)v1619 + 7) = *((void *)v1620 + 7);
            *((void *)v1619 + 8) = *((void *)v1620 + 8);
            *((void *)v1619 + 9) = *((void *)v1620 + 9);
            *((void *)v1619 + 10) = *((void *)v1620 + 10);
            *((void *)v1619 + 11) = *((void *)v1620 + 11);
            *((void *)v1619 + 12) = *((void *)v1620 + 12);
            *((void *)v1619 + 13) = *((void *)v1620 + 13);
            *((void *)v1619 + 14) = *((void *)v1620 + 14);
            *((void *)v1619 + 15) = *((void *)v1620 + 15);
            *((void *)v1619 + 16) = *((void *)v1620 + 16);
            *((void *)v1619 + 17) = *((void *)v1620 + 17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_543:
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v1619, v1620, 0x90uLL);
          }
          goto LABEL_544;
      }
      goto LABEL_545;
    }
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t initializeWithTake for ResultsDialog(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  unint64_t v6 = (_OWORD *)(a2 + v4);
  uint64_t v7 = type metadata accessor for AnswerSynthesisResult();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v9 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v9;
        long long v10 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v10;
        long long v11 = v6[5];
        v5[4] = v6[4];
        v5[5] = v11;
        uint64_t v12 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v13 = v12[12];
        uint64_t v14 = (char *)v5 + v13;
        uint64_t v15 = (char *)v6 + v13;
        uint64_t v16 = type metadata accessor for Date();
        uint64_t v1149 = *(void (**)(char *, char *))(*(void *)(v16 - 8) + 32);
        uint64_t v1152 = (void *)v16;
        v1149(v14, v15);
        *(void *)((char *)v5 + v12[13]) = *(void *)((char *)v6 + v12[13]);
        *(void *)((char *)v5 + v12[14]) = *(void *)((char *)v6 + v12[14]);
        *(void *)((char *)v5 + v12[15]) = *(void *)((char *)v6 + v12[15]);
        *((unsigned char *)v5 + v12[16]) = *((unsigned char *)v6 + v12[16]);
        *((unsigned char *)v5 + v12[17]) = *((unsigned char *)v6 + v12[17]);
        *(_OWORD *)((char *)v5 + v12[18]) = *(_OWORD *)((char *)v6 + v12[18]);
        uint64_t v17 = v12[19];
        uint64_t v18 = (char *)v5 + v17;
        uint64_t v19 = (char *)v6 + v17;
        long long v20 = *((_OWORD *)v19 + 1);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v20;
        *((void *)v18 + 4) = *((void *)v19 + 4);
        *(_OWORD *)((char *)v5 + v12[20]) = *(_OWORD *)((char *)v6 + v12[20]);
        uint64_t v1156 = v12;
        uint64_t v21 = v12[21];
        uint64_t v22 = (_OWORD *)((char *)v5 + v21);
        uint64_t v23 = (_OWORD *)((char *)v6 + v21);
        uint64_t v24 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, (uint64_t)v24))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
          uint64_t v26 = v1156;
        }
        else
        {
          *uint64_t v22 = *v23;
          uint64_t v228 = v24[5];
          uint64_t v229 = (_OWORD *)((char *)v22 + v228);
          uint64_t v230 = (_OWORD *)((char *)v23 + v228);
          uint64_t v231 = type metadata accessor for RentalCarReservation(0);
          __dst = v22;
          uint64_t v1144 = v24;
          uint64_t v1134 = v23;
          if (__swift_getEnumTagSinglePayload((uint64_t)v230, 1, v231))
          {
            uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v229, v230, *(void *)(*(void *)(v232 - 8) + 64));
          }
          else
          {
            long long v352 = v230[1];
            *uint64_t v229 = *v230;
            v229[1] = v352;
            long long v353 = v230[3];
            v229[2] = v230[2];
            v229[3] = v353;
            long long v354 = v230[5];
            v229[4] = v230[4];
            v229[5] = v354;
            long long v355 = v230[7];
            v229[6] = v230[6];
            v229[7] = v355;
            *((unsigned char *)v229 + 128) = *((unsigned char *)v230 + 128);
            *(_WORD *)((char *)v229 + 129) = *(_WORD *)((char *)v230 + 129);
            *((void *)v229 + 17) = *((void *)v230 + 17);
            long long v356 = v230[10];
            v229[9] = v230[9];
            v229[10] = v356;
            long long v357 = v230[12];
            v229[11] = v230[11];
            v229[12] = v357;
            long long v358 = v230[14];
            v229[13] = v230[13];
            v229[14] = v358;
            v229[15] = v230[15];
            *((void *)v229 + 32) = *((void *)v230 + 32);
            *(_OWORD *)((char *)v229 + 264) = *(_OWORD *)((char *)v230 + 264);
            *(_OWORD *)((char *)v229 + 280) = *(_OWORD *)((char *)v230 + 280);
            *(_OWORD *)((char *)v229 + 296) = *(_OWORD *)((char *)v230 + 296);
            *(_OWORD *)((char *)v229 + 312) = *(_OWORD *)((char *)v230 + 312);
            *(_OWORD *)((char *)v229 + 328) = *(_OWORD *)((char *)v230 + 328);
            *(_OWORD *)((char *)v229 + 344) = *(_OWORD *)((char *)v230 + 344);
            *(_OWORD *)((char *)v229 + 360) = *(_OWORD *)((char *)v230 + 360);
            *((unsigned char *)v229 + 384) = *((unsigned char *)v230 + 384);
            *((void *)v229 + 47) = *((void *)v230 + 47);
            *(_OWORD *)((char *)v229 + 392) = *(_OWORD *)((char *)v230 + 392);
            *(_OWORD *)((char *)v229 + 408) = *(_OWORD *)((char *)v230 + 408);
            uint64_t v359 = *(int *)(v231 + 140);
            uint64_t v360 = (char *)v229 + v359;
            uint64_t v361 = (char *)v230 + v359;
            if (__swift_getEnumTagSinglePayload((uint64_t)v230 + v359, 1, (uint64_t)v1152))
            {
              uint64_t v362 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v360, v361, *(void *)(*(void *)(v362 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v360, v361, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, (uint64_t)v1152);
            }
            uint64_t v385 = *(int *)(v231 + 144);
            uint64_t v386 = (char *)v229 + v385;
            v387 = (char *)v230 + v385;
            if (__swift_getEnumTagSinglePayload((uint64_t)v230 + v385, 1, (uint64_t)v1152))
            {
              uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v386, v387, *(void *)(*(void *)(v388 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v386, v387, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v386, 0, 1, (uint64_t)v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v229, 0, 1, v231);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          uint64_t v397 = v24[6];
          uint64_t v398 = (_OWORD *)((char *)v22 + v397);
          uint64_t v399 = (_OWORD *)((char *)v23 + v397);
          uint64_t v400 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v399, 1, v400))
          {
            uint64_t v401 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v398, v399, *(void *)(*(void *)(v401 - 8) + 64));
          }
          else
          {
            long long v402 = v399[1];
            *uint64_t v398 = *v399;
            v398[1] = v402;
            long long v403 = v399[3];
            v398[2] = v399[2];
            v398[3] = v403;
            long long v404 = v399[5];
            v398[4] = v399[4];
            v398[5] = v404;
            long long v405 = v399[7];
            v398[6] = v399[6];
            v398[7] = v405;
            *((unsigned char *)v398 + 128) = *((unsigned char *)v399 + 128);
            *(_WORD *)((char *)v398 + 129) = *(_WORD *)((char *)v399 + 129);
            *((void *)v398 + 17) = *((void *)v399 + 17);
            long long v406 = v399[10];
            v398[9] = v399[9];
            v398[10] = v406;
            long long v407 = v399[12];
            v398[11] = v399[11];
            v398[12] = v407;
            *((void *)v398 + 26) = *((void *)v399 + 26);
            *(_OWORD *)((char *)v398 + 216) = *(_OWORD *)((char *)v399 + 216);
            *(_OWORD *)((char *)v398 + 232) = *(_OWORD *)((char *)v399 + 232);
            *(_OWORD *)((char *)v398 + 248) = *(_OWORD *)((char *)v399 + 248);
            *(_OWORD *)((char *)v398 + 264) = *(_OWORD *)((char *)v399 + 264);
            *((unsigned char *)v398 + 296) = *((unsigned char *)v399 + 296);
            uint64_t v408 = *((void *)v399 + 36);
            *((void *)v398 + 35) = *((void *)v399 + 35);
            *((void *)v398 + 36) = v408;
            uint64_t v409 = *(int *)(v400 + 112);
            v410 = (char *)v398 + v409;
            v411 = (char *)v399 + v409;
            if (__swift_getEnumTagSinglePayload((uint64_t)v399 + v409, 1, (uint64_t)v1152))
            {
              uint64_t v412 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v410, v411, *(void *)(*(void *)(v412 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v410, v411, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v410, 0, 1, (uint64_t)v1152);
            }
            uint64_t v445 = *(int *)(v400 + 116);
            uint64_t v446 = (char *)v398 + v445;
            uint64_t v447 = (char *)v399 + v445;
            if (__swift_getEnumTagSinglePayload((uint64_t)v399 + v445, 1, (uint64_t)v1152))
            {
              uint64_t v448 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v446, v447, *(void *)(*(void *)(v448 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v446, v447, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v446, 0, 1, (uint64_t)v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, v400);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          uint64_t v457 = v24[7];
          v458 = (_OWORD *)((char *)v22 + v457);
          uint64_t v459 = (_OWORD *)((char *)v23 + v457);
          uint64_t v460 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v459, 1, (uint64_t)v460))
          {
            uint64_t v461 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v458, v459, *(void *)(*(void *)(v461 - 8) + 64));
          }
          else
          {
            long long v462 = v459[1];
            _OWORD *v458 = *v459;
            v458[1] = v462;
            long long v463 = v459[3];
            v458[2] = v459[2];
            v458[3] = v463;
            long long v464 = v459[5];
            v458[4] = v459[4];
            v458[5] = v464;
            long long v465 = v459[7];
            v458[6] = v459[6];
            v458[7] = v465;
            *((unsigned char *)v458 + 128) = *((unsigned char *)v459 + 128);
            *(_WORD *)((char *)v458 + 129) = *(_WORD *)((char *)v459 + 129);
            *((void *)v458 + 17) = *((void *)v459 + 17);
            long long v466 = v459[10];
            v458[9] = v459[9];
            v458[10] = v466;
            long long v467 = v459[12];
            v458[11] = v459[11];
            v458[12] = v467;
            long long v468 = v459[14];
            v458[13] = v459[13];
            v458[14] = v468;
            *((void *)v458 + 30) = *((void *)v459 + 30);
            *(_OWORD *)((char *)v458 + 248) = *(_OWORD *)((char *)v459 + 248);
            *(_OWORD *)((char *)v458 + 264) = *(_OWORD *)((char *)v459 + 264);
            *((unsigned char *)v458 + 296) = *((unsigned char *)v459 + 296);
            uint64_t v469 = *((void *)v459 + 36);
            *((void *)v458 + 35) = *((void *)v459 + 35);
            *((void *)v458 + 36) = v469;
            v458[19] = v459[19];
            uint64_t v470 = v460[29];
            uint64_t v471 = (char *)v458 + v470;
            uint64_t v472 = (char *)v459 + v470;
            uint64_t v473 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v472, 1, v473))
            {
              uint64_t v474 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v471, v472, *(void *)(*(void *)(v474 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v473 - 8) + 32))(v471, v472, v473);
              __swift_storeEnumTagSinglePayload((uint64_t)v471, 0, 1, v473);
            }
            *(_OWORD *)((char *)v458 + v460[30]) = *(_OWORD *)((char *)v459 + v460[30]);
            uint64_t v510 = v460[31];
            uint64_t v511 = (char *)v458 + v510;
            uint64_t v512 = (char *)v459 + v510;
            if (__swift_getEnumTagSinglePayload((uint64_t)v459 + v510, 1, (uint64_t)v1152))
            {
              uint64_t v513 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v511, v512, *(void *)(*(void *)(v513 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v511, v512, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v511, 0, 1, (uint64_t)v1152);
            }
            uint64_t v522 = v460[32];
            uint64_t v523 = (char *)v458 + v522;
            uint64_t v524 = (char *)v459 + v522;
            if (__swift_getEnumTagSinglePayload((uint64_t)v459 + v522, 1, (uint64_t)v1152))
            {
              uint64_t v525 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v523, v524, *(void *)(*(void *)(v525 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v523, v524, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v523, 0, 1, (uint64_t)v1152);
            }
            uint64_t v23 = v1134;
            __swift_storeEnumTagSinglePayload((uint64_t)v458, 0, 1, (uint64_t)v460);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          uint64_t v534 = v24[8];
          uint64_t v535 = (_OWORD *)((char *)v22 + v534);
          uint64_t v536 = (_OWORD *)((char *)v23 + v534);
          uint64_t v537 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v536, 1, v537))
          {
            uint64_t v538 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v535, v536, *(void *)(*(void *)(v538 - 8) + 64));
          }
          else
          {
            long long v539 = v536[1];
            *uint64_t v535 = *v536;
            v535[1] = v539;
            long long v540 = v536[3];
            v535[2] = v536[2];
            v535[3] = v540;
            long long v541 = v536[5];
            v535[4] = v536[4];
            v535[5] = v541;
            long long v542 = v536[7];
            v535[6] = v536[6];
            v535[7] = v542;
            *((unsigned char *)v535 + 128) = *((unsigned char *)v536 + 128);
            *(_WORD *)((char *)v535 + 129) = *(_WORD *)((char *)v536 + 129);
            *((void *)v535 + 17) = *((void *)v536 + 17);
            long long v543 = v536[10];
            v535[9] = v536[9];
            v535[10] = v543;
            long long v544 = v536[12];
            v535[11] = v536[11];
            v535[12] = v544;
            long long v545 = v536[14];
            v535[13] = v536[13];
            v535[14] = v545;
            long long v546 = v536[16];
            v535[15] = v536[15];
            v535[16] = v546;
            *((unsigned char *)v535 + 280) = *((unsigned char *)v536 + 280);
            *((void *)v535 + 34) = *((void *)v536 + 34);
            v535[18] = v536[18];
            uint64_t v547 = *(int *)(v537 + 108);
            uint64_t v548 = (char *)v535 + v547;
            uint64_t v549 = (char *)v536 + v547;
            if (__swift_getEnumTagSinglePayload((uint64_t)v536 + v547, 1, (uint64_t)v1152))
            {
              uint64_t v550 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v548, v549, *(void *)(*(void *)(v550 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v548, v549, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v548, 0, 1, (uint64_t)v1152);
            }
            uint64_t v585 = *(int *)(v537 + 112);
            v586 = (char *)v535 + v585;
            uint64_t v587 = (char *)v536 + v585;
            if (__swift_getEnumTagSinglePayload((uint64_t)v536 + v585, 1, (uint64_t)v1152))
            {
              uint64_t v588 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v586, v587, *(void *)(*(void *)(v588 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v586, v587, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v586, 0, 1, (uint64_t)v1152);
            }
            uint64_t v23 = v1134;
            __swift_storeEnumTagSinglePayload((uint64_t)v535, 0, 1, v537);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          uint64_t v597 = v24[9];
          uint64_t v598 = (_OWORD *)((char *)v22 + v597);
          uint64_t v599 = (_OWORD *)((char *)v23 + v597);
          uint64_t v600 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v599, 1, (uint64_t)v600))
          {
            uint64_t v601 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v598, v599, *(void *)(*(void *)(v601 - 8) + 64));
          }
          else
          {
            long long v602 = v599[1];
            _OWORD *v598 = *v599;
            v598[1] = v602;
            long long v603 = v599[3];
            v598[2] = v599[2];
            v598[3] = v603;
            long long v604 = v599[5];
            v598[4] = v599[4];
            v598[5] = v604;
            long long v605 = v599[7];
            v598[6] = v599[6];
            v598[7] = v605;
            *((unsigned char *)v598 + 128) = *((unsigned char *)v599 + 128);
            *(_WORD *)((char *)v598 + 129) = *(_WORD *)((char *)v599 + 129);
            *((void *)v598 + 17) = *((void *)v599 + 17);
            long long v606 = v599[10];
            v598[9] = v599[9];
            v598[10] = v606;
            long long v607 = v599[12];
            v598[11] = v599[11];
            v598[12] = v607;
            long long v608 = v599[14];
            v598[13] = v599[13];
            v598[14] = v608;
            v598[15] = v599[15];
            uint64_t v609 = v600[24];
            uint64_t v610 = (char *)v598 + v609;
            uint64_t v611 = (char *)v599 + v609;
            if (__swift_getEnumTagSinglePayload((uint64_t)v599 + v609, 1, (uint64_t)v1152))
            {
              uint64_t v612 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v610, v611, *(void *)(*(void *)(v612 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v610, v611, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v610, 0, 1, (uint64_t)v1152);
            }
            uint64_t v645 = v600[25];
            uint64_t v646 = (char *)v598 + v645;
            uint64_t v647 = (char *)v599 + v645;
            if (__swift_getEnumTagSinglePayload((uint64_t)v599 + v645, 1, (uint64_t)v1152))
            {
              uint64_t v648 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v646, v647, *(void *)(*(void *)(v648 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v646, v647, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v646, 0, 1, (uint64_t)v1152);
            }
            uint64_t v657 = v600[26];
            v658 = (char *)v598 + v657;
            long long v659 = (char *)v599 + v657;
            uint64_t v660 = type metadata accessor for URL();
            uint64_t v22 = __dst;
            if (__swift_getEnumTagSinglePayload((uint64_t)v659, 1, v660))
            {
              uint64_t v661 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v658, v659, *(void *)(*(void *)(v661 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v660 - 8) + 32))(v658, v659, v660);
              __swift_storeEnumTagSinglePayload((uint64_t)v658, 0, 1, v660);
            }
            uint64_t v24 = v1144;
            __swift_storeEnumTagSinglePayload((uint64_t)v598, 0, 1, (uint64_t)v600);
            uint64_t v23 = v1134;
          }
          uint64_t v671 = v24[10];
          uint64_t v672 = (_OWORD *)((char *)v22 + v671);
          uint64_t v673 = (_OWORD *)((char *)v23 + v671);
          uint64_t v674 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v673, 1, (uint64_t)v674))
          {
            uint64_t v675 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v672, v673, *(void *)(*(void *)(v675 - 8) + 64));
          }
          else
          {
            long long v676 = v673[1];
            *uint64_t v672 = *v673;
            v672[1] = v676;
            long long v677 = v673[3];
            v672[2] = v673[2];
            v672[3] = v677;
            long long v678 = v673[5];
            v672[4] = v673[4];
            v672[5] = v678;
            long long v679 = v673[7];
            v672[6] = v673[6];
            v672[7] = v679;
            *((unsigned char *)v672 + 128) = *((unsigned char *)v673 + 128);
            *(_WORD *)((char *)v672 + 129) = *(_WORD *)((char *)v673 + 129);
            *((void *)v672 + 17) = *((void *)v673 + 17);
            long long v680 = v673[10];
            v672[9] = v673[9];
            v672[10] = v680;
            long long v681 = v673[12];
            v672[11] = v673[11];
            v672[12] = v681;
            v672[13] = v673[13];
            uint64_t v682 = v674[22];
            uint64_t v683 = (char *)v672 + v682;
            uint64_t v684 = (char *)v673 + v682;
            if (__swift_getEnumTagSinglePayload((uint64_t)v673 + v682, 1, (uint64_t)v1152))
            {
              uint64_t v685 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v683, v684, *(void *)(*(void *)(v685 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v683, v684, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v683, 0, 1, (uint64_t)v1152);
            }
            uint64_t v716 = v674[23];
            uint64_t v717 = (char *)v672 + v716;
            uint64_t v718 = (char *)v673 + v716;
            if (__swift_getEnumTagSinglePayload((uint64_t)v673 + v716, 1, (uint64_t)v1152))
            {
              uint64_t v719 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v717, v718, *(void *)(*(void *)(v719 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v717, v718, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v717, 0, 1, (uint64_t)v1152);
            }
            uint64_t v728 = v674[24];
            uint64_t v729 = (char *)v672 + v728;
            uint64_t v730 = (char *)v673 + v728;
            *(void *)uint64_t v729 = *(void *)v730;
            v729[8] = v730[8];
            uint64_t v731 = v674[25];
            uint64_t v732 = (char *)v672 + v731;
            uint64_t v733 = (char *)v673 + v731;
            uint64_t v734 = type metadata accessor for URL();
            uint64_t v22 = __dst;
            if (__swift_getEnumTagSinglePayload((uint64_t)v733, 1, v734))
            {
              uint64_t v735 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v732, v733, *(void *)(*(void *)(v735 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v734 - 8) + 32))(v732, v733, v734);
              __swift_storeEnumTagSinglePayload((uint64_t)v732, 0, 1, v734);
            }
            uint64_t v24 = v1144;
            __swift_storeEnumTagSinglePayload((uint64_t)v672, 0, 1, (uint64_t)v674);
            uint64_t v23 = v1134;
          }
          uint64_t v751 = v24[11];
          uint64_t v752 = (_OWORD *)((char *)v22 + v751);
          uint64_t v753 = (_OWORD *)((char *)v23 + v751);
          uint64_t v754 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v753, 1, (uint64_t)v754))
          {
            uint64_t v755 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v752, v753, *(void *)(*(void *)(v755 - 8) + 64));
          }
          else
          {
            long long v756 = v753[1];
            *uint64_t v752 = *v753;
            v752[1] = v756;
            long long v757 = v753[3];
            v752[2] = v753[2];
            v752[3] = v757;
            long long v758 = v753[5];
            v752[4] = v753[4];
            v752[5] = v758;
            *((unsigned char *)v752 + 96) = *((unsigned char *)v753 + 96);
            *(_OWORD *)((char *)v752 + 104) = *(_OWORD *)((char *)v753 + 104);
            uint64_t v759 = v754[13];
            uint64_t v760 = (char *)v752 + v759;
            uint64_t v761 = (char *)v753 + v759;
            uint64_t v762 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v761, 1, v762))
            {
              uint64_t v763 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v760, v761, *(void *)(*(void *)(v763 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v762 - 8) + 32))(v760, v761, v762);
              __swift_storeEnumTagSinglePayload((uint64_t)v760, 0, 1, v762);
            }
            uint64_t v789 = v754[14];
            uint64_t v790 = (char *)v752 + v789;
            uint64_t v791 = (char *)v753 + v789;
            if (__swift_getEnumTagSinglePayload((uint64_t)v753 + v789, 1, v762))
            {
              uint64_t v792 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v790, v791, *(void *)(*(void *)(v792 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v762 - 8) + 32))(v790, v791, v762);
              __swift_storeEnumTagSinglePayload((uint64_t)v790, 0, 1, v762);
            }
            *(_OWORD *)((char *)v752 + v754[15]) = *(_OWORD *)((char *)v753 + v754[15]);
            *(_OWORD *)((char *)v752 + v754[16]) = *(_OWORD *)((char *)v753 + v754[16]);
            *(_OWORD *)((char *)v752 + v754[17]) = *(_OWORD *)((char *)v753 + v754[17]);
            uint64_t v801 = v754[18];
            uint64_t v1131 = (char *)v753 + v801;
            uint64_t v1132 = (char *)v752 + v801;
            uint64_t v802 = type metadata accessor for DateComponents();
            uint64_t v803 = *(void (**)(char *, char *, uint64_t))(*(void *)(v802 - 8) + 32);
            v803(v1132, v1131, v802);
            v803((char *)v752 + v754[19], (char *)v753 + v754[19], v802);
            *(_OWORD *)((char *)v752 + v754[20]) = *(_OWORD *)((char *)v753 + v754[20]);
            *(_OWORD *)((char *)v752 + v754[21]) = *(_OWORD *)((char *)v753 + v754[21]);
            *(_OWORD *)((char *)v752 + v754[22]) = *(_OWORD *)((char *)v753 + v754[22]);
            *(_OWORD *)((char *)v752 + v754[23]) = *(_OWORD *)((char *)v753 + v754[23]);
            *(_OWORD *)((char *)v752 + v754[24]) = *(_OWORD *)((char *)v753 + v754[24]);
            *(_OWORD *)((char *)v752 + v754[25]) = *(_OWORD *)((char *)v753 + v754[25]);
            *(_OWORD *)((char *)v752 + v754[26]) = *(_OWORD *)((char *)v753 + v754[26]);
            *(_OWORD *)((char *)v752 + v754[27]) = *(_OWORD *)((char *)v753 + v754[27]);
            *(_OWORD *)((char *)v752 + v754[28]) = *(_OWORD *)((char *)v753 + v754[28]);
            *(_OWORD *)((char *)v752 + v754[29]) = *(_OWORD *)((char *)v753 + v754[29]);
            *(_OWORD *)((char *)v752 + v754[30]) = *(_OWORD *)((char *)v753 + v754[30]);
            *(_OWORD *)((char *)v752 + v754[31]) = *(_OWORD *)((char *)v753 + v754[31]);
            *(_OWORD *)((char *)v752 + v754[32]) = *(_OWORD *)((char *)v753 + v754[32]);
            *(void *)((char *)v752 + v754[33]) = *(void *)((char *)v753 + v754[33]);
            *(void *)((char *)v752 + v754[34]) = *(void *)((char *)v753 + v754[34]);
            *(_OWORD *)((char *)v752 + v754[35]) = *(_OWORD *)((char *)v753 + v754[35]);
            *(_OWORD *)((char *)v752 + v754[36]) = *(_OWORD *)((char *)v753 + v754[36]);
            *(_OWORD *)((char *)v752 + v754[37]) = *(_OWORD *)((char *)v753 + v754[37]);
            uint64_t v804 = v754[38];
            uint64_t v805 = (char *)v752 + v804;
            uint64_t v806 = (char *)v753 + v804;
            if (__swift_getEnumTagSinglePayload((uint64_t)v753 + v804, 1, (uint64_t)v1152))
            {
              uint64_t v807 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v805, v806, *(void *)(*(void *)(v807 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v805, v806, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v805, 0, 1, (uint64_t)v1152);
            }
            uint64_t v23 = v1134;
            *(_OWORD *)((char *)v752 + v754[39]) = *(_OWORD *)((char *)v753 + v754[39]);
            *(_OWORD *)((char *)v752 + v754[40]) = *(_OWORD *)((char *)v753 + v754[40]);
            uint64_t v822 = v754[41];
            uint64_t v823 = (char *)v752 + v822;
            uint64_t v824 = (char *)v753 + v822;
            *(void *)uint64_t v823 = *(void *)v824;
            v823[8] = v824[8];
            *(_OWORD *)((char *)v752 + v754[42]) = *(_OWORD *)((char *)v753 + v754[42]);
            uint64_t v825 = v754[43];
            uint64_t v826 = (char *)v752 + v825;
            uint64_t v827 = (char *)v753 + v825;
            *(_OWORD *)uint64_t v826 = *(_OWORD *)v827;
            *(void *)(v826 + 13) = *(void *)(v827 + 13);
            *(_OWORD *)((char *)v752 + v754[44]) = *(_OWORD *)((char *)v753 + v754[44]);
            *(_OWORD *)((char *)v752 + v754[45]) = *(_OWORD *)((char *)v753 + v754[45]);
            *(_OWORD *)((char *)v752 + v754[46]) = *(_OWORD *)((char *)v753 + v754[46]);
            *(_OWORD *)((char *)v752 + v754[47]) = *(_OWORD *)((char *)v753 + v754[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v752, 0, 1, (uint64_t)v754);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          uint64_t v828 = v24[12];
          uint64_t v829 = (_OWORD *)((char *)v22 + v828);
          uint64_t v830 = (_OWORD *)((char *)v23 + v828);
          uint64_t v831 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v830, 1, (uint64_t)v831))
          {
            uint64_t v832 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v829, v830, *(void *)(*(void *)(v832 - 8) + 64));
          }
          else
          {
            long long v833 = v830[1];
            _OWORD *v829 = *v830;
            v829[1] = v833;
            long long v834 = v830[3];
            v829[2] = v830[2];
            v829[3] = v834;
            long long v835 = v830[5];
            v829[4] = v830[4];
            v829[5] = v835;
            *((unsigned char *)v829 + 96) = *((unsigned char *)v830 + 96);
            *(_OWORD *)((char *)v829 + 104) = *(_OWORD *)((char *)v830 + 104);
            *(_OWORD *)((char *)v829 + 120) = *(_OWORD *)((char *)v830 + 120);
            uint64_t v836 = v831[14];
            uint64_t v837 = (char *)v829 + v836;
            uint64_t v838 = (char *)v830 + v836;
            uint64_t v839 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v838, 1, v839))
            {
              uint64_t v840 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v837, v838, *(void *)(*(void *)(v840 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v839 - 8) + 32))(v837, v838, v839);
              __swift_storeEnumTagSinglePayload((uint64_t)v837, 0, 1, v839);
            }
            uint64_t v877 = v831[15];
            uint64_t v878 = (char *)v829 + v877;
            uint64_t v879 = (char *)v830 + v877;
            if (__swift_getEnumTagSinglePayload((uint64_t)v830 + v877, 1, v839))
            {
              uint64_t v880 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v878, v879, *(void *)(*(void *)(v880 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v839 - 8) + 32))(v878, v879, v839);
              __swift_storeEnumTagSinglePayload((uint64_t)v878, 0, 1, v839);
            }
            uint64_t v23 = v1134;
            *(_OWORD *)((char *)v829 + v831[16]) = *(_OWORD *)((char *)v830 + v831[16]);
            *(_OWORD *)((char *)v829 + v831[17]) = *(_OWORD *)((char *)v830 + v831[17]);
            *(_OWORD *)((char *)v829 + v831[18]) = *(_OWORD *)((char *)v830 + v831[18]);
            *(_OWORD *)((char *)v829 + v831[19]) = *(_OWORD *)((char *)v830 + v831[19]);
            *(_OWORD *)((char *)v829 + v831[20]) = *(_OWORD *)((char *)v830 + v831[20]);
            *(void *)((char *)v829 + v831[21]) = *(void *)((char *)v830 + v831[21]);
            *(void *)((char *)v829 + v831[22]) = *(void *)((char *)v830 + v831[22]);
            uint64_t v887 = v831[23];
            uint64_t v888 = (char *)v829 + v887;
            uint64_t v889 = (char *)v830 + v887;
            v888[8] = v889[8];
            *(void *)uint64_t v888 = *(void *)v889;
            uint64_t v890 = v831[24];
            uint64_t v891 = (char *)v829 + v890;
            uint64_t v892 = (char *)v830 + v890;
            v891[8] = v892[8];
            *(void *)uint64_t v891 = *(void *)v892;
            *(_OWORD *)((char *)v829 + v831[25]) = *(_OWORD *)((char *)v830 + v831[25]);
            *(_OWORD *)((char *)v829 + v831[26]) = *(_OWORD *)((char *)v830 + v831[26]);
            *(_OWORD *)((char *)v829 + v831[27]) = *(_OWORD *)((char *)v830 + v831[27]);
            *(_OWORD *)((char *)v829 + v831[28]) = *(_OWORD *)((char *)v830 + v831[28]);
            uint64_t v893 = v831[29];
            uint64_t v894 = (char *)v829 + v893;
            uint64_t v895 = (char *)v830 + v893;
            *(void *)uint64_t v894 = *(void *)v895;
            v894[8] = v895[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v829, 0, 1, (uint64_t)v831);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          uint64_t v896 = v24[13];
          uint64_t v897 = (_OWORD *)((char *)v22 + v896);
          uint64_t v898 = (_OWORD *)((char *)v23 + v896);
          uint64_t v899 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v898, 1, (uint64_t)v899))
          {
            uint64_t v900 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v897, v898, *(void *)(*(void *)(v900 - 8) + 64));
            uint64_t v26 = v1156;
          }
          else
          {
            long long v901 = v898[1];
            _OWORD *v897 = *v898;
            v897[1] = v901;
            long long v902 = v898[3];
            v897[2] = v898[2];
            v897[3] = v902;
            long long v903 = v898[5];
            v897[4] = v898[4];
            v897[5] = v903;
            *((unsigned char *)v897 + 96) = *((unsigned char *)v898 + 96);
            *(_OWORD *)((char *)v897 + 104) = *(_OWORD *)((char *)v898 + 104);
            *(_OWORD *)((char *)v897 + 120) = *(_OWORD *)((char *)v898 + 120);
            uint64_t v904 = v899[14];
            uint64_t v905 = (char *)v897 + v904;
            uint64_t v906 = (char *)v898 + v904;
            uint64_t v907 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v906, 1, v907))
            {
              uint64_t v908 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v905, v906, *(void *)(*(void *)(v908 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v907 - 8) + 32))(v905, v906, v907);
              __swift_storeEnumTagSinglePayload((uint64_t)v905, 0, 1, v907);
            }
            uint64_t v26 = v1156;
            *(_OWORD *)((char *)v897 + v899[15]) = *(_OWORD *)((char *)v898 + v899[15]);
            *(_OWORD *)((char *)v897 + v899[16]) = *(_OWORD *)((char *)v898 + v899[16]);
            *(_OWORD *)((char *)v897 + v899[17]) = *(_OWORD *)((char *)v898 + v899[17]);
            *(_OWORD *)((char *)v897 + v899[18]) = *(_OWORD *)((char *)v898 + v899[18]);
            *(_OWORD *)((char *)v897 + v899[19]) = *(_OWORD *)((char *)v898 + v899[19]);
            *(void *)((char *)v897 + v899[20]) = *(void *)((char *)v898 + v899[20]);
            *(_OWORD *)((char *)v897 + v899[21]) = *(_OWORD *)((char *)v898 + v899[21]);
            *(_OWORD *)((char *)v897 + v899[22]) = *(_OWORD *)((char *)v898 + v899[22]);
            *(_OWORD *)((char *)v897 + v899[23]) = *(_OWORD *)((char *)v898 + v899[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, (uint64_t)v899);
            uint64_t v22 = __dst;
            uint64_t v24 = v1144;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, (uint64_t)v24);
        }
        uint64_t v953 = v26[22];
        uint64_t v954 = (_OWORD *)((char *)v5 + v953);
        uint64_t v955 = (_OWORD *)((char *)v6 + v953);
        uint64_t v956 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v955, 1, (uint64_t)v956))
        {
          uint64_t v957 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v954, v955, *(void *)(*(void *)(v957 - 8) + 64));
        }
        else
        {
          long long v958 = v955[1];
          *uint64_t v954 = *v955;
          v954[1] = v958;
          long long v959 = v955[3];
          v954[2] = v955[2];
          v954[3] = v959;
          long long v960 = v955[5];
          v954[4] = v955[4];
          v954[5] = v960;
          uint64_t v961 = v956[10];
          uint64_t v962 = (char *)v954 + v961;
          uint64_t v963 = (char *)v955 + v961;
          if (__swift_getEnumTagSinglePayload((uint64_t)v955 + v961, 1, (uint64_t)v1152))
          {
            uint64_t v964 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v962, v963, *(void *)(*(void *)(v964 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v962, v963, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v962, 0, 1, (uint64_t)v1152);
          }
          uint64_t v965 = v956[11];
          uint64_t v966 = (char *)v954 + v965;
          uint64_t v967 = (char *)v955 + v965;
          if (__swift_getEnumTagSinglePayload((uint64_t)v955 + v965, 1, (uint64_t)v1152))
          {
            uint64_t v968 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v966, v967, *(void *)(*(void *)(v968 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v966, v967, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v966, 0, 1, (uint64_t)v1152);
          }
          *(_OWORD *)((char *)v954 + v956[12]) = *(_OWORD *)((char *)v955 + v956[12]);
          *(_OWORD *)((char *)v954 + v956[13]) = *(_OWORD *)((char *)v955 + v956[13]);
          *(_OWORD *)((char *)v954 + v956[14]) = *(_OWORD *)((char *)v955 + v956[14]);
          uint64_t v969 = v956[15];
          uint64_t v970 = (char *)v954 + v969;
          uint64_t v971 = (char *)v955 + v969;
          if (__swift_getEnumTagSinglePayload((uint64_t)v955 + v969, 1, (uint64_t)v1152))
          {
            uint64_t v972 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v970, v971, *(void *)(*(void *)(v972 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v970, v971, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v970, 0, 1, (uint64_t)v1152);
          }
          uint64_t v26 = v1156;
          *(_OWORD *)((char *)v954 + v956[16]) = *(_OWORD *)((char *)v955 + v956[16]);
          *(_OWORD *)((char *)v954 + v956[17]) = *(_OWORD *)((char *)v955 + v956[17]);
          *(_OWORD *)((char *)v954 + v956[18]) = *(_OWORD *)((char *)v955 + v956[18]);
          *(_OWORD *)((char *)v954 + v956[19]) = *(_OWORD *)((char *)v955 + v956[19]);
          *(_OWORD *)((char *)v954 + v956[20]) = *(_OWORD *)((char *)v955 + v956[20]);
          *(_OWORD *)((char *)v954 + v956[21]) = *(_OWORD *)((char *)v955 + v956[21]);
          *(_OWORD *)((char *)v954 + v956[22]) = *(_OWORD *)((char *)v955 + v956[22]);
          *(_OWORD *)((char *)v954 + v956[23]) = *(_OWORD *)((char *)v955 + v956[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v954, 0, 1, (uint64_t)v956);
        }
        uint64_t v973 = v26[23];
        uint64_t v974 = (_OWORD *)((char *)v5 + v973);
        uint64_t v975 = (_OWORD *)((char *)v6 + v973);
        uint64_t v976 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v975, 1, (uint64_t)v976))
        {
          uint64_t v977 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v974, v975, *(void *)(*(void *)(v977 - 8) + 64));
        }
        else
        {
          long long v978 = v975[1];
          *uint64_t v974 = *v975;
          v974[1] = v978;
          long long v979 = v975[3];
          v974[2] = v975[2];
          v974[3] = v979;
          long long v980 = v975[5];
          v974[4] = v975[4];
          v974[5] = v980;
          uint64_t v981 = v976[11];
          uint64_t v982 = (char *)v974 + v981;
          uint64_t v983 = (char *)v975 + v981;
          if (__swift_getEnumTagSinglePayload((uint64_t)v975 + v981, 1, (uint64_t)v1152))
          {
            uint64_t v984 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v982, v983, *(void *)(*(void *)(v984 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v982, v983, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v982, 0, 1, (uint64_t)v1152);
          }
          *(_OWORD *)((char *)v974 + v976[12]) = *(_OWORD *)((char *)v975 + v976[12]);
          *(void *)((char *)v974 + v976[13]) = *(void *)((char *)v975 + v976[13]);
          uint64_t v985 = v976[14];
          uint64_t v986 = (char *)v974 + v985;
          uint64_t v987 = (char *)v975 + v985;
          if (__swift_getEnumTagSinglePayload((uint64_t)v975 + v985, 1, (uint64_t)v1152))
          {
            uint64_t v988 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v986, v987, *(void *)(*(void *)(v988 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v986, v987, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v986, 0, 1, (uint64_t)v1152);
          }
          uint64_t v26 = v1156;
          *(void *)((char *)v974 + v976[15]) = *(void *)((char *)v975 + v976[15]);
          *(void *)((char *)v974 + v976[16]) = *(void *)((char *)v975 + v976[16]);
          *(_OWORD *)((char *)v974 + v976[17]) = *(_OWORD *)((char *)v975 + v976[17]);
          *(void *)((char *)v974 + v976[18]) = *(void *)((char *)v975 + v976[18]);
          *(void *)((char *)v974 + v976[19]) = *(void *)((char *)v975 + v976[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v974, 0, 1, (uint64_t)v976);
        }
        uint64_t v989 = v26[24];
        uint64_t v990 = (_OWORD *)((char *)v5 + v989);
        uint64_t v991 = (_OWORD *)((char *)v6 + v989);
        uint64_t v992 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v991, 1, (uint64_t)v992))
        {
          uint64_t v993 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v990, v991, *(void *)(*(void *)(v993 - 8) + 64));
        }
        else
        {
          long long v994 = v991[1];
          _OWORD *v990 = *v991;
          v990[1] = v994;
          long long v995 = v991[3];
          v990[2] = v991[2];
          v990[3] = v995;
          uint64_t v996 = v992[8];
          uint64_t v997 = (char *)v990 + v996;
          uint64_t v998 = (char *)v991 + v996;
          uint64_t v999 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v998, 1, v999))
          {
            uint64_t v1000 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v997, v998, *(void *)(*(void *)(v1000 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v999 - 8) + 32))(v997, v998, v999);
            __swift_storeEnumTagSinglePayload((uint64_t)v997, 0, 1, v999);
          }
          *(_OWORD *)((char *)v990 + v992[9]) = *(_OWORD *)((char *)v991 + v992[9]);
          *(_OWORD *)((char *)v990 + v992[10]) = *(_OWORD *)((char *)v991 + v992[10]);
          *(_OWORD *)((char *)v990 + v992[11]) = *(_OWORD *)((char *)v991 + v992[11]);
          uint64_t v1001 = v992[12];
          uint64_t v1002 = (char *)v990 + v1001;
          uint64_t v1003 = (char *)v991 + v1001;
          if (__swift_getEnumTagSinglePayload((uint64_t)v991 + v1001, 1, (uint64_t)v1152))
          {
            uint64_t v1004 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1002, v1003, *(void *)(*(void *)(v1004 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v1002, v1003, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v1002, 0, 1, (uint64_t)v1152);
          }
          uint64_t v1005 = v992[13];
          uint64_t v1006 = (char *)v990 + v1005;
          uint64_t v1007 = (char *)v991 + v1005;
          if (__swift_getEnumTagSinglePayload((uint64_t)v991 + v1005, 1, (uint64_t)v1152))
          {
            uint64_t v1008 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1006, v1007, *(void *)(*(void *)(v1008 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v1006, v1007, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v1006, 0, 1, (uint64_t)v1152);
          }
          uint64_t v26 = v1156;
          uint64_t v1009 = v992[14];
          uint64_t v1010 = (char *)v990 + v1009;
          v1011 = (char *)v991 + v1009;
          *(void *)uint64_t v1010 = *(void *)v1011;
          v1010[8] = v1011[8];
          *(_OWORD *)((char *)v990 + v992[15]) = *(_OWORD *)((char *)v991 + v992[15]);
          *(_OWORD *)((char *)v990 + v992[16]) = *(_OWORD *)((char *)v991 + v992[16]);
          *(_OWORD *)((char *)v990 + v992[17]) = *(_OWORD *)((char *)v991 + v992[17]);
          *(_OWORD *)((char *)v990 + v992[18]) = *(_OWORD *)((char *)v991 + v992[18]);
          *(_OWORD *)((char *)v990 + v992[19]) = *(_OWORD *)((char *)v991 + v992[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v990, 0, 1, (uint64_t)v992);
        }
        memcpy((char *)v5 + v26[25], (char *)v6 + v26[25], 0x90uLL);
        goto LABEL_524;
      case 1u:
        long long v27 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v27;
        long long v28 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v28;
        v5[4] = v6[4];
        uint64_t v29 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v30 = v29[10];
        uint64_t v31 = (char *)v5 + v30;
        uint64_t v32 = (char *)v6 + v30;
        uint64_t v33 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
          __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
        }
        uint64_t v233 = v29[11];
        uint64_t v234 = (char *)v5 + v233;
        uint64_t v235 = (char *)v6 + v233;
        uint64_t v236 = type metadata accessor for URL();
        uint64_t v1150 = v33;
        if (__swift_getEnumTagSinglePayload((uint64_t)v235, 1, v236))
        {
          uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v234, v235, *(void *)(*(void *)(v237 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
          __swift_storeEnumTagSinglePayload((uint64_t)v234, 0, 1, v236);
        }
        *(void *)((char *)v5 + v29[12]) = *(void *)((char *)v6 + v29[12]);
        *(_OWORD *)((char *)v5 + v29[13]) = *(_OWORD *)((char *)v6 + v29[13]);
        *(_OWORD *)((char *)v5 + v29[14]) = *(_OWORD *)((char *)v6 + v29[14]);
        *(void *)((char *)v5 + v29[15]) = *(void *)((char *)v6 + v29[15]);
        *(void *)((char *)v5 + v29[16]) = *(void *)((char *)v6 + v29[16]);
        uint64_t v291 = v29[17];
        uint64_t v292 = (char *)v5 + v291;
        uint64_t v293 = (char *)v6 + v291;
        long long v294 = *((_OWORD *)v293 + 1);
        *(_OWORD *)uint64_t v292 = *(_OWORD *)v293;
        *((_OWORD *)v292 + 1) = v294;
        *((void *)v292 + 4) = *((void *)v293 + 4);
        *(_OWORD *)((char *)v5 + v29[18]) = *(_OWORD *)((char *)v6 + v29[18]);
        uint64_t v295 = v29[19];
        uint64_t v296 = (_OWORD *)((char *)v5 + v295);
        uint64_t v297 = (_OWORD *)((char *)v6 + v295);
        uint64_t v298 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1147 = v236;
        v1158 = v29;
        if (__swift_getEnumTagSinglePayload((uint64_t)v297, 1, (uint64_t)v298))
        {
          uint64_t v299 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v296, v297, *(void *)(*(void *)(v299 - 8) + 64));
          uint64_t v300 = v1150;
        }
        else
        {
          *uint64_t v296 = *v297;
          uint64_t v340 = v298[5];
          uint64_t v341 = (_OWORD *)((char *)v296 + v340);
          v1154 = (char *)v297;
          uint64_t v342 = (_OWORD *)((char *)v297 + v340);
          uint64_t v343 = type metadata accessor for RentalCarReservation(0);
          __dsta = v296;
          v1146 = v298;
          if (__swift_getEnumTagSinglePayload((uint64_t)v342, 1, v343))
          {
            uint64_t v344 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v341, v342, *(void *)(*(void *)(v344 - 8) + 64));
          }
          else
          {
            long long v374 = v342[1];
            *uint64_t v341 = *v342;
            v341[1] = v374;
            long long v375 = v342[3];
            v341[2] = v342[2];
            v341[3] = v375;
            long long v376 = v342[5];
            v341[4] = v342[4];
            v341[5] = v376;
            long long v377 = v342[7];
            v341[6] = v342[6];
            v341[7] = v377;
            *((unsigned char *)v341 + 128) = *((unsigned char *)v342 + 128);
            *(_WORD *)((char *)v341 + 129) = *(_WORD *)((char *)v342 + 129);
            *((void *)v341 + 17) = *((void *)v342 + 17);
            long long v378 = v342[10];
            v341[9] = v342[9];
            v341[10] = v378;
            long long v379 = v342[12];
            v341[11] = v342[11];
            v341[12] = v379;
            long long v380 = v342[14];
            v341[13] = v342[13];
            v341[14] = v380;
            v341[15] = v342[15];
            *((void *)v341 + 32) = *((void *)v342 + 32);
            *(_OWORD *)((char *)v341 + 264) = *(_OWORD *)((char *)v342 + 264);
            *(_OWORD *)((char *)v341 + 280) = *(_OWORD *)((char *)v342 + 280);
            *(_OWORD *)((char *)v341 + 296) = *(_OWORD *)((char *)v342 + 296);
            *(_OWORD *)((char *)v341 + 312) = *(_OWORD *)((char *)v342 + 312);
            *(_OWORD *)((char *)v341 + 328) = *(_OWORD *)((char *)v342 + 328);
            *(_OWORD *)((char *)v341 + 344) = *(_OWORD *)((char *)v342 + 344);
            *(_OWORD *)((char *)v341 + 360) = *(_OWORD *)((char *)v342 + 360);
            *((unsigned char *)v341 + 384) = *((unsigned char *)v342 + 384);
            *((void *)v341 + 47) = *((void *)v342 + 47);
            *(_OWORD *)((char *)v341 + 392) = *(_OWORD *)((char *)v342 + 392);
            *(_OWORD *)((char *)v341 + 408) = *(_OWORD *)((char *)v342 + 408);
            uint64_t v381 = *(int *)(v343 + 140);
            uint64_t v382 = (char *)v341 + v381;
            uint64_t v383 = (char *)v342 + v381;
            if (__swift_getEnumTagSinglePayload((uint64_t)v342 + v381, 1, v1150))
            {
              uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v382, v383, *(void *)(*(void *)(v384 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v382, v383, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v382, 0, 1, v1150);
            }
            uint64_t v393 = *(int *)(v343 + 144);
            uint64_t v394 = (char *)v341 + v393;
            uint64_t v395 = (char *)v342 + v393;
            if (__swift_getEnumTagSinglePayload((uint64_t)v342 + v393, 1, v1150))
            {
              uint64_t v396 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v394, v395, *(void *)(*(void *)(v396 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v394, v395, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v341, 0, 1, v343);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v429 = v298[6];
          uint64_t v430 = (_OWORD *)((char *)v296 + v429);
          uint64_t v431 = (_OWORD *)((char *)v297 + v429);
          uint64_t v432 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v431, 1, v432))
          {
            uint64_t v433 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v430, v431, *(void *)(*(void *)(v433 - 8) + 64));
          }
          else
          {
            long long v434 = v431[1];
            *uint64_t v430 = *v431;
            v430[1] = v434;
            long long v435 = v431[3];
            v430[2] = v431[2];
            v430[3] = v435;
            long long v436 = v431[5];
            v430[4] = v431[4];
            v430[5] = v436;
            long long v437 = v431[7];
            v430[6] = v431[6];
            v430[7] = v437;
            *((unsigned char *)v430 + 128) = *((unsigned char *)v431 + 128);
            *(_WORD *)((char *)v430 + 129) = *(_WORD *)((char *)v431 + 129);
            *((void *)v430 + 17) = *((void *)v431 + 17);
            long long v438 = v431[10];
            v430[9] = v431[9];
            v430[10] = v438;
            long long v439 = v431[12];
            v430[11] = v431[11];
            v430[12] = v439;
            *((void *)v430 + 26) = *((void *)v431 + 26);
            *(_OWORD *)((char *)v430 + 216) = *(_OWORD *)((char *)v431 + 216);
            *(_OWORD *)((char *)v430 + 232) = *(_OWORD *)((char *)v431 + 232);
            *(_OWORD *)((char *)v430 + 248) = *(_OWORD *)((char *)v431 + 248);
            *(_OWORD *)((char *)v430 + 264) = *(_OWORD *)((char *)v431 + 264);
            *((unsigned char *)v430 + 296) = *((unsigned char *)v431 + 296);
            uint64_t v440 = *((void *)v431 + 36);
            *((void *)v430 + 35) = *((void *)v431 + 35);
            *((void *)v430 + 36) = v440;
            uint64_t v441 = *(int *)(v432 + 112);
            uint64_t v442 = (char *)v430 + v441;
            uint64_t v443 = (char *)v431 + v441;
            if (__swift_getEnumTagSinglePayload((uint64_t)v431 + v441, 1, v1150))
            {
              uint64_t v444 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v442, v443, *(void *)(*(void *)(v444 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v442, v443, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v442, 0, 1, v1150);
            }
            uint64_t v453 = *(int *)(v432 + 116);
            uint64_t v454 = (char *)v430 + v453;
            uint64_t v455 = (char *)v431 + v453;
            if (__swift_getEnumTagSinglePayload((uint64_t)v431 + v453, 1, v1150))
            {
              uint64_t v456 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v454, v455, *(void *)(*(void *)(v456 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v454, v455, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v454, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v430, 0, 1, v432);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v493 = v298[7];
          uint64_t v494 = (_OWORD *)((char *)v296 + v493);
          uint64_t v495 = (_OWORD *)((char *)v297 + v493);
          uint64_t v496 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, (uint64_t)v496))
          {
            uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v494, v495, *(void *)(*(void *)(v497 - 8) + 64));
          }
          else
          {
            long long v498 = v495[1];
            *uint64_t v494 = *v495;
            v494[1] = v498;
            long long v499 = v495[3];
            v494[2] = v495[2];
            v494[3] = v499;
            long long v500 = v495[5];
            v494[4] = v495[4];
            v494[5] = v500;
            long long v501 = v495[7];
            v494[6] = v495[6];
            v494[7] = v501;
            *((unsigned char *)v494 + 128) = *((unsigned char *)v495 + 128);
            *(_WORD *)((char *)v494 + 129) = *(_WORD *)((char *)v495 + 129);
            *((void *)v494 + 17) = *((void *)v495 + 17);
            long long v502 = v495[10];
            v494[9] = v495[9];
            v494[10] = v502;
            long long v503 = v495[12];
            v494[11] = v495[11];
            v494[12] = v503;
            long long v504 = v495[14];
            v494[13] = v495[13];
            v494[14] = v504;
            *((void *)v494 + 30) = *((void *)v495 + 30);
            *(_OWORD *)((char *)v494 + 248) = *(_OWORD *)((char *)v495 + 248);
            *(_OWORD *)((char *)v494 + 264) = *(_OWORD *)((char *)v495 + 264);
            *((unsigned char *)v494 + 296) = *((unsigned char *)v495 + 296);
            uint64_t v505 = *((void *)v495 + 36);
            *((void *)v494 + 35) = *((void *)v495 + 35);
            *((void *)v494 + 36) = v505;
            v494[19] = v495[19];
            uint64_t v506 = v496[29];
            uint64_t v507 = (char *)v494 + v506;
            uint64_t v508 = (char *)v495 + v506;
            if (__swift_getEnumTagSinglePayload((uint64_t)v495 + v506, 1, v1147))
            {
              uint64_t v509 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v507, v508, *(void *)(*(void *)(v509 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v507, v508, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v507, 0, 1, v1147);
            }
            *(_OWORD *)((char *)v494 + v496[30]) = *(_OWORD *)((char *)v495 + v496[30]);
            uint64_t v518 = v496[31];
            uint64_t v519 = (char *)v494 + v518;
            uint64_t v520 = (char *)v495 + v518;
            if (__swift_getEnumTagSinglePayload((uint64_t)v495 + v518, 1, v1150))
            {
              uint64_t v521 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v519, v520, *(void *)(*(void *)(v521 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v519, v520, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v519, 0, 1, v1150);
            }
            uint64_t v530 = v496[32];
            uint64_t v531 = (char *)v494 + v530;
            uint64_t v532 = (char *)v495 + v530;
            if (__swift_getEnumTagSinglePayload((uint64_t)v495 + v530, 1, v1150))
            {
              uint64_t v533 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v531, v532, *(void *)(*(void *)(v533 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v531, v532, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v531, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v494, 0, 1, (uint64_t)v496);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v568 = v298[8];
          uint64_t v569 = (_OWORD *)((char *)v296 + v568);
          uint64_t v570 = (_OWORD *)((char *)v297 + v568);
          uint64_t v571 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v570, 1, v571))
          {
            uint64_t v572 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v569, v570, *(void *)(*(void *)(v572 - 8) + 64));
          }
          else
          {
            long long v573 = v570[1];
            *uint64_t v569 = *v570;
            v569[1] = v573;
            long long v574 = v570[3];
            v569[2] = v570[2];
            v569[3] = v574;
            long long v575 = v570[5];
            v569[4] = v570[4];
            v569[5] = v575;
            long long v576 = v570[7];
            v569[6] = v570[6];
            v569[7] = v576;
            *((unsigned char *)v569 + 128) = *((unsigned char *)v570 + 128);
            *(_WORD *)((char *)v569 + 129) = *(_WORD *)((char *)v570 + 129);
            *((void *)v569 + 17) = *((void *)v570 + 17);
            long long v577 = v570[10];
            v569[9] = v570[9];
            v569[10] = v577;
            long long v578 = v570[12];
            v569[11] = v570[11];
            v569[12] = v578;
            long long v579 = v570[14];
            v569[13] = v570[13];
            v569[14] = v579;
            long long v580 = v570[16];
            v569[15] = v570[15];
            v569[16] = v580;
            *((unsigned char *)v569 + 280) = *((unsigned char *)v570 + 280);
            *((void *)v569 + 34) = *((void *)v570 + 34);
            v569[18] = v570[18];
            uint64_t v581 = *(int *)(v571 + 108);
            uint64_t v582 = (char *)v569 + v581;
            uint64_t v583 = (char *)v570 + v581;
            if (__swift_getEnumTagSinglePayload((uint64_t)v570 + v581, 1, v1150))
            {
              uint64_t v584 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v582, v583, *(void *)(*(void *)(v584 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v582, v583, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v582, 0, 1, v1150);
            }
            uint64_t v593 = *(int *)(v571 + 112);
            uint64_t v594 = (char *)v569 + v593;
            v595 = (char *)v570 + v593;
            if (__swift_getEnumTagSinglePayload((uint64_t)v570 + v593, 1, v1150))
            {
              uint64_t v596 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v594, v595, *(void *)(*(void *)(v596 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v594, v595, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v594, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v569, 0, 1, v571);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v629 = v298[9];
          v630 = (_OWORD *)((char *)v296 + v629);
          uint64_t v631 = (_OWORD *)((char *)v297 + v629);
          uint64_t v632 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v631, 1, (uint64_t)v632))
          {
            uint64_t v633 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v630, v631, *(void *)(*(void *)(v633 - 8) + 64));
          }
          else
          {
            long long v634 = v631[1];
            _OWORD *v630 = *v631;
            v630[1] = v634;
            long long v635 = v631[3];
            v630[2] = v631[2];
            v630[3] = v635;
            long long v636 = v631[5];
            v630[4] = v631[4];
            v630[5] = v636;
            long long v637 = v631[7];
            v630[6] = v631[6];
            v630[7] = v637;
            *((unsigned char *)v630 + 128) = *((unsigned char *)v631 + 128);
            *(_WORD *)((char *)v630 + 129) = *(_WORD *)((char *)v631 + 129);
            *((void *)v630 + 17) = *((void *)v631 + 17);
            long long v638 = v631[10];
            v630[9] = v631[9];
            v630[10] = v638;
            long long v639 = v631[12];
            v630[11] = v631[11];
            v630[12] = v639;
            long long v640 = v631[14];
            v630[13] = v631[13];
            v630[14] = v640;
            v630[15] = v631[15];
            uint64_t v641 = v632[24];
            uint64_t v642 = (char *)v630 + v641;
            uint64_t v643 = (char *)v631 + v641;
            if (__swift_getEnumTagSinglePayload((uint64_t)v631 + v641, 1, v1150))
            {
              uint64_t v644 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v642, v643, *(void *)(*(void *)(v644 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v642, v643, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v642, 0, 1, v1150);
            }
            uint64_t v653 = v632[25];
            uint64_t v654 = (char *)v630 + v653;
            uint64_t v655 = (char *)v631 + v653;
            if (__swift_getEnumTagSinglePayload((uint64_t)v631 + v653, 1, v1150))
            {
              uint64_t v656 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v654, v655, *(void *)(*(void *)(v656 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v654, v655, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v654, 0, 1, v1150);
            }
            uint64_t v667 = v632[26];
            uint64_t v668 = (char *)v630 + v667;
            uint64_t v669 = (char *)v631 + v667;
            if (__swift_getEnumTagSinglePayload((uint64_t)v631 + v667, 1, v1147))
            {
              uint64_t v670 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v668, v669, *(void *)(*(void *)(v670 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v668, v669, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v668, 0, 1, v1147);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v630, 0, 1, (uint64_t)v632);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v701 = v298[10];
          uint64_t v702 = (_OWORD *)((char *)v296 + v701);
          uint64_t v703 = (_OWORD *)((char *)v297 + v701);
          uint64_t v704 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v703, 1, (uint64_t)v704))
          {
            uint64_t v705 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v702, v703, *(void *)(*(void *)(v705 - 8) + 64));
          }
          else
          {
            long long v706 = v703[1];
            *uint64_t v702 = *v703;
            v702[1] = v706;
            long long v707 = v703[3];
            v702[2] = v703[2];
            v702[3] = v707;
            long long v708 = v703[5];
            v702[4] = v703[4];
            v702[5] = v708;
            long long v709 = v703[7];
            v702[6] = v703[6];
            v702[7] = v709;
            *((unsigned char *)v702 + 128) = *((unsigned char *)v703 + 128);
            *(_WORD *)((char *)v702 + 129) = *(_WORD *)((char *)v703 + 129);
            *((void *)v702 + 17) = *((void *)v703 + 17);
            long long v710 = v703[10];
            v702[9] = v703[9];
            v702[10] = v710;
            long long v711 = v703[12];
            v702[11] = v703[11];
            v702[12] = v711;
            v702[13] = v703[13];
            uint64_t v712 = v704[22];
            uint64_t v713 = (char *)v702 + v712;
            uint64_t v714 = (char *)v703 + v712;
            if (__swift_getEnumTagSinglePayload((uint64_t)v703 + v712, 1, v1150))
            {
              uint64_t v715 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v713, v714, *(void *)(*(void *)(v715 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v713, v714, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v713, 0, 1, v1150);
            }
            uint64_t v724 = v704[23];
            uint64_t v725 = (char *)v702 + v724;
            uint64_t v726 = (char *)v703 + v724;
            if (__swift_getEnumTagSinglePayload((uint64_t)v703 + v724, 1, v1150))
            {
              uint64_t v727 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v725, v726, *(void *)(*(void *)(v727 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v725, v726, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, v1150);
            }
            uint64_t v744 = v704[24];
            uint64_t v745 = (char *)v702 + v744;
            uint64_t v746 = (char *)v703 + v744;
            *(void *)uint64_t v745 = *(void *)v746;
            v745[8] = v746[8];
            uint64_t v747 = v704[25];
            uint64_t v748 = (char *)v702 + v747;
            uint64_t v749 = (char *)v703 + v747;
            if (__swift_getEnumTagSinglePayload((uint64_t)v703 + v747, 1, v1147))
            {
              uint64_t v750 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v748, v749, *(void *)(*(void *)(v750 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v748, v749, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v748, 0, 1, v1147);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v702, 0, 1, (uint64_t)v704);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v777 = v298[11];
          uint64_t v778 = (_OWORD *)((char *)v296 + v777);
          uint64_t v779 = (_OWORD *)((char *)v297 + v777);
          uint64_t v780 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v779, 1, (uint64_t)v780))
          {
            uint64_t v781 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v778, v779, *(void *)(*(void *)(v781 - 8) + 64));
            uint64_t v300 = v1150;
          }
          else
          {
            long long v782 = v779[1];
            *uint64_t v778 = *v779;
            v778[1] = v782;
            long long v783 = v779[3];
            v778[2] = v779[2];
            v778[3] = v783;
            long long v784 = v779[5];
            v778[4] = v779[4];
            v778[5] = v784;
            *((unsigned char *)v778 + 96) = *((unsigned char *)v779 + 96);
            *(_OWORD *)((char *)v778 + 104) = *(_OWORD *)((char *)v779 + 104);
            uint64_t v785 = v780[13];
            uint64_t v786 = (char *)v778 + v785;
            uint64_t v787 = (char *)v779 + v785;
            if (__swift_getEnumTagSinglePayload((uint64_t)v779 + v785, 1, v1147))
            {
              uint64_t v788 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v786, v787, *(void *)(*(void *)(v788 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v786, v787, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v786, 0, 1, v1147);
            }
            uint64_t v797 = v780[14];
            uint64_t v798 = (char *)v778 + v797;
            uint64_t v799 = (char *)v779 + v797;
            if (__swift_getEnumTagSinglePayload((uint64_t)v779 + v797, 1, v1147))
            {
              uint64_t v800 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v798, v799, *(void *)(*(void *)(v800 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v798, v799, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v798, 0, 1, v1147);
            }
            *(_OWORD *)((char *)v778 + v780[15]) = *(_OWORD *)((char *)v779 + v780[15]);
            *(_OWORD *)((char *)v778 + v780[16]) = *(_OWORD *)((char *)v779 + v780[16]);
            *(_OWORD *)((char *)v778 + v780[17]) = *(_OWORD *)((char *)v779 + v780[17]);
            uint64_t v815 = v780[18];
            v1133 = (char *)v779 + v815;
            v1136 = (char *)v778 + v815;
            uint64_t v816 = type metadata accessor for DateComponents();
            uint64_t v817 = *(void (**)(char *, char *, uint64_t))(*(void *)(v816 - 8) + 32);
            v817(v1136, v1133, v816);
            v817((char *)v778 + v780[19], (char *)v779 + v780[19], v816);
            *(_OWORD *)((char *)v778 + v780[20]) = *(_OWORD *)((char *)v779 + v780[20]);
            *(_OWORD *)((char *)v778 + v780[21]) = *(_OWORD *)((char *)v779 + v780[21]);
            *(_OWORD *)((char *)v778 + v780[22]) = *(_OWORD *)((char *)v779 + v780[22]);
            *(_OWORD *)((char *)v778 + v780[23]) = *(_OWORD *)((char *)v779 + v780[23]);
            *(_OWORD *)((char *)v778 + v780[24]) = *(_OWORD *)((char *)v779 + v780[24]);
            *(_OWORD *)((char *)v778 + v780[25]) = *(_OWORD *)((char *)v779 + v780[25]);
            *(_OWORD *)((char *)v778 + v780[26]) = *(_OWORD *)((char *)v779 + v780[26]);
            *(_OWORD *)((char *)v778 + v780[27]) = *(_OWORD *)((char *)v779 + v780[27]);
            *(_OWORD *)((char *)v778 + v780[28]) = *(_OWORD *)((char *)v779 + v780[28]);
            *(_OWORD *)((char *)v778 + v780[29]) = *(_OWORD *)((char *)v779 + v780[29]);
            *(_OWORD *)((char *)v778 + v780[30]) = *(_OWORD *)((char *)v779 + v780[30]);
            *(_OWORD *)((char *)v778 + v780[31]) = *(_OWORD *)((char *)v779 + v780[31]);
            *(_OWORD *)((char *)v778 + v780[32]) = *(_OWORD *)((char *)v779 + v780[32]);
            *(void *)((char *)v778 + v780[33]) = *(void *)((char *)v779 + v780[33]);
            *(void *)((char *)v778 + v780[34]) = *(void *)((char *)v779 + v780[34]);
            *(_OWORD *)((char *)v778 + v780[35]) = *(_OWORD *)((char *)v779 + v780[35]);
            *(_OWORD *)((char *)v778 + v780[36]) = *(_OWORD *)((char *)v779 + v780[36]);
            *(_OWORD *)((char *)v778 + v780[37]) = *(_OWORD *)((char *)v779 + v780[37]);
            uint64_t v818 = v780[38];
            uint64_t v819 = (char *)v778 + v818;
            uint64_t v820 = (char *)v779 + v818;
            uint64_t v300 = v1150;
            if (__swift_getEnumTagSinglePayload((uint64_t)v779 + v818, 1, v1150))
            {
              uint64_t v821 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v819, v820, *(void *)(*(void *)(v821 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v819, v820, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v819, 0, 1, v1150);
            }
            *(_OWORD *)((char *)v778 + v780[39]) = *(_OWORD *)((char *)v779 + v780[39]);
            *(_OWORD *)((char *)v778 + v780[40]) = *(_OWORD *)((char *)v779 + v780[40]);
            uint64_t v859 = v780[41];
            uint64_t v860 = (char *)v778 + v859;
            uint64_t v861 = (char *)v779 + v859;
            *(void *)uint64_t v860 = *(void *)v861;
            v860[8] = v861[8];
            *(_OWORD *)((char *)v778 + v780[42]) = *(_OWORD *)((char *)v779 + v780[42]);
            uint64_t v862 = v780[43];
            uint64_t v863 = (char *)v778 + v862;
            uint64_t v864 = (char *)v779 + v862;
            *(_OWORD *)uint64_t v863 = *(_OWORD *)v864;
            *(void *)(v863 + 13) = *(void *)(v864 + 13);
            *(_OWORD *)((char *)v778 + v780[44]) = *(_OWORD *)((char *)v779 + v780[44]);
            *(_OWORD *)((char *)v778 + v780[45]) = *(_OWORD *)((char *)v779 + v780[45]);
            *(_OWORD *)((char *)v778 + v780[46]) = *(_OWORD *)((char *)v779 + v780[46]);
            *(_OWORD *)((char *)v778 + v780[47]) = *(_OWORD *)((char *)v779 + v780[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v778, 0, 1, (uint64_t)v780);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          uint64_t v865 = v298[12];
          uint64_t v866 = (_OWORD *)((char *)v296 + v865);
          uint64_t v867 = &v1154[v865];
          uint64_t v868 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v867, 1, (uint64_t)v868))
          {
            uint64_t v869 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v866, v867, *(void *)(*(void *)(v869 - 8) + 64));
          }
          else
          {
            long long v870 = *((_OWORD *)v867 + 1);
            _OWORD *v866 = *(_OWORD *)v867;
            v866[1] = v870;
            long long v871 = *((_OWORD *)v867 + 3);
            v866[2] = *((_OWORD *)v867 + 2);
            v866[3] = v871;
            long long v872 = *((_OWORD *)v867 + 5);
            v866[4] = *((_OWORD *)v867 + 4);
            v866[5] = v872;
            *((unsigned char *)v866 + 96) = v867[96];
            *(_OWORD *)((char *)v866 + 104) = *(_OWORD *)(v867 + 104);
            *(_OWORD *)((char *)v866 + 120) = *(_OWORD *)(v867 + 120);
            uint64_t v873 = v868[14];
            uint64_t v1137 = (char *)v866 + v873;
            uint64_t v874 = &v867[v873];
            uint64_t v875 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v874, 1, v875))
            {
              uint64_t v876 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1137, v874, *(void *)(*(void *)(v876 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v875 - 8) + 32))(v1137, v874, v875);
              __swift_storeEnumTagSinglePayload((uint64_t)v1137, 0, 1, v875);
            }
            uint64_t v884 = v868[15];
            uint64_t v1138 = (char *)v866 + v884;
            uint64_t v885 = &v867[v884];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v867[v884], 1, v875))
            {
              uint64_t v886 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1138, v885, *(void *)(*(void *)(v886 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v875 - 8) + 32))(v1138, v885, v875);
              __swift_storeEnumTagSinglePayload((uint64_t)v1138, 0, 1, v875);
            }
            uint64_t v298 = v1146;
            *(_OWORD *)((char *)v866 + v868[16]) = *(_OWORD *)&v867[v868[16]];
            *(_OWORD *)((char *)v866 + v868[17]) = *(_OWORD *)&v867[v868[17]];
            *(_OWORD *)((char *)v866 + v868[18]) = *(_OWORD *)&v867[v868[18]];
            *(_OWORD *)((char *)v866 + v868[19]) = *(_OWORD *)&v867[v868[19]];
            *(_OWORD *)((char *)v866 + v868[20]) = *(_OWORD *)&v867[v868[20]];
            *(void *)((char *)v866 + v868[21]) = *(void *)&v867[v868[21]];
            *(void *)((char *)v866 + v868[22]) = *(void *)&v867[v868[22]];
            uint64_t v931 = v868[23];
            uint64_t v932 = (char *)v866 + v931;
            uint64_t v933 = &v867[v931];
            v932[8] = v933[8];
            *(void *)uint64_t v932 = *(void *)v933;
            uint64_t v934 = v868[24];
            uint64_t v935 = (char *)v866 + v934;
            uint64_t v936 = &v867[v934];
            v935[8] = v936[8];
            *(void *)uint64_t v935 = *(void *)v936;
            *(_OWORD *)((char *)v866 + v868[25]) = *(_OWORD *)&v867[v868[25]];
            *(_OWORD *)((char *)v866 + v868[26]) = *(_OWORD *)&v867[v868[26]];
            *(_OWORD *)((char *)v866 + v868[27]) = *(_OWORD *)&v867[v868[27]];
            *(_OWORD *)((char *)v866 + v868[28]) = *(_OWORD *)&v867[v868[28]];
            uint64_t v937 = v868[29];
            uint64_t v938 = (char *)v866 + v937;
            uint64_t v939 = &v867[v937];
            *(void *)uint64_t v938 = *(void *)v939;
            v938[8] = v939[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v866, 0, 1, (uint64_t)v868);
            uint64_t v296 = __dsta;
          }
          uint64_t v940 = v298[13];
          uint64_t v941 = (_OWORD *)((char *)v296 + v940);
          uint64_t v942 = &v1154[v940];
          uint64_t v943 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v942, 1, (uint64_t)v943))
          {
            uint64_t v944 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v941, v942, *(void *)(*(void *)(v944 - 8) + 64));
          }
          else
          {
            long long v945 = *((_OWORD *)v942 + 1);
            *uint64_t v941 = *(_OWORD *)v942;
            v941[1] = v945;
            long long v946 = *((_OWORD *)v942 + 3);
            v941[2] = *((_OWORD *)v942 + 2);
            v941[3] = v946;
            long long v947 = *((_OWORD *)v942 + 5);
            v941[4] = *((_OWORD *)v942 + 4);
            v941[5] = v947;
            *((unsigned char *)v941 + 96) = v942[96];
            *(_OWORD *)((char *)v941 + 104) = *(_OWORD *)(v942 + 104);
            *(_OWORD *)((char *)v941 + 120) = *(_OWORD *)(v942 + 120);
            uint64_t v948 = v943[14];
            uint64_t v949 = (char *)v941 + v948;
            uint64_t v950 = &v942[v948];
            uint64_t v951 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v950, 1, v951))
            {
              uint64_t v952 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v949, v950, *(void *)(*(void *)(v952 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v951 - 8) + 32))(v949, v950, v951);
              __swift_storeEnumTagSinglePayload((uint64_t)v949, 0, 1, v951);
            }
            uint64_t v300 = v1150;
            *(_OWORD *)((char *)v941 + v943[15]) = *(_OWORD *)&v942[v943[15]];
            *(_OWORD *)((char *)v941 + v943[16]) = *(_OWORD *)&v942[v943[16]];
            *(_OWORD *)((char *)v941 + v943[17]) = *(_OWORD *)&v942[v943[17]];
            *(_OWORD *)((char *)v941 + v943[18]) = *(_OWORD *)&v942[v943[18]];
            *(_OWORD *)((char *)v941 + v943[19]) = *(_OWORD *)&v942[v943[19]];
            *(void *)((char *)v941 + v943[20]) = *(void *)&v942[v943[20]];
            *(_OWORD *)((char *)v941 + v943[21]) = *(_OWORD *)&v942[v943[21]];
            *(_OWORD *)((char *)v941 + v943[22]) = *(_OWORD *)&v942[v943[22]];
            *(_OWORD *)((char *)v941 + v943[23]) = *(_OWORD *)&v942[v943[23]];
            __swift_storeEnumTagSinglePayload((uint64_t)v941, 0, 1, (uint64_t)v943);
            uint64_t v296 = __dsta;
            uint64_t v298 = v1146;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v296, 0, 1, (uint64_t)v298);
          uint64_t v29 = v1158;
        }
        uint64_t v1071 = v29[20];
        v1072 = (_OWORD *)((char *)v5 + v1071);
        uint64_t v1073 = (_OWORD *)((char *)v6 + v1071);
        uint64_t v1074 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1073, 1, (uint64_t)v1074))
        {
          uint64_t v1075 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1072, v1073, *(void *)(*(void *)(v1075 - 8) + 64));
        }
        else
        {
          long long v1076 = v1073[1];
          _OWORD *v1072 = *v1073;
          v1072[1] = v1076;
          long long v1077 = v1073[3];
          v1072[2] = v1073[2];
          v1072[3] = v1077;
          long long v1078 = v1073[5];
          v1072[4] = v1073[4];
          v1072[5] = v1078;
          uint64_t v1079 = v1074[10];
          v1080 = (char *)v1072 + v1079;
          uint64_t v1081 = (char *)v1073 + v1079;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1073 + v1079, 1, v300))
          {
            uint64_t v1082 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1080, v1081, *(void *)(*(void *)(v1082 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v1080, v1081, v300);
            __swift_storeEnumTagSinglePayload((uint64_t)v1080, 0, 1, v300);
          }
          uint64_t v1083 = v1074[11];
          v1084 = (char *)v1072 + v1083;
          uint64_t v1085 = (char *)v1073 + v1083;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1073 + v1083, 1, v300))
          {
            uint64_t v1086 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1084, v1085, *(void *)(*(void *)(v1086 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v1084, v1085, v300);
            __swift_storeEnumTagSinglePayload((uint64_t)v1084, 0, 1, v300);
          }
          *(_OWORD *)((char *)v1072 + v1074[12]) = *(_OWORD *)((char *)v1073 + v1074[12]);
          *(_OWORD *)((char *)v1072 + v1074[13]) = *(_OWORD *)((char *)v1073 + v1074[13]);
          *(_OWORD *)((char *)v1072 + v1074[14]) = *(_OWORD *)((char *)v1073 + v1074[14]);
          uint64_t v1087 = v1074[15];
          uint64_t v1088 = (char *)v1072 + v1087;
          uint64_t v1089 = (char *)v1073 + v1087;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1073 + v1087, 1, v300))
          {
            uint64_t v1090 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1088, v1089, *(void *)(*(void *)(v1090 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v1088, v1089, v300);
            __swift_storeEnumTagSinglePayload((uint64_t)v1088, 0, 1, v300);
          }
          *(_OWORD *)((char *)v1072 + v1074[16]) = *(_OWORD *)((char *)v1073 + v1074[16]);
          *(_OWORD *)((char *)v1072 + v1074[17]) = *(_OWORD *)((char *)v1073 + v1074[17]);
          *(_OWORD *)((char *)v1072 + v1074[18]) = *(_OWORD *)((char *)v1073 + v1074[18]);
          *(_OWORD *)((char *)v1072 + v1074[19]) = *(_OWORD *)((char *)v1073 + v1074[19]);
          *(_OWORD *)((char *)v1072 + v1074[20]) = *(_OWORD *)((char *)v1073 + v1074[20]);
          *(_OWORD *)((char *)v1072 + v1074[21]) = *(_OWORD *)((char *)v1073 + v1074[21]);
          *(_OWORD *)((char *)v1072 + v1074[22]) = *(_OWORD *)((char *)v1073 + v1074[22]);
          *(_OWORD *)((char *)v1072 + v1074[23]) = *(_OWORD *)((char *)v1073 + v1074[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1072, 0, 1, (uint64_t)v1074);
        }
        uint64_t v1091 = v1158[21];
        v1092 = (_OWORD *)((char *)v5 + v1091);
        uint64_t v1093 = (_OWORD *)((char *)v6 + v1091);
        uint64_t v1094 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1093, 1, (uint64_t)v1094))
        {
          uint64_t v1095 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1092, v1093, *(void *)(*(void *)(v1095 - 8) + 64));
        }
        else
        {
          long long v1096 = v1093[1];
          _OWORD *v1092 = *v1093;
          v1092[1] = v1096;
          long long v1097 = v1093[3];
          v1092[2] = v1093[2];
          v1092[3] = v1097;
          long long v1098 = v1093[5];
          v1092[4] = v1093[4];
          v1092[5] = v1098;
          uint64_t v1099 = v1094[11];
          uint64_t v1100 = (char *)v1092 + v1099;
          uint64_t v1101 = (char *)v1093 + v1099;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1093 + v1099, 1, v300))
          {
            uint64_t v1102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1100, v1101, *(void *)(*(void *)(v1102 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v1100, v1101, v300);
            __swift_storeEnumTagSinglePayload((uint64_t)v1100, 0, 1, v300);
          }
          *(_OWORD *)((char *)v1092 + v1094[12]) = *(_OWORD *)((char *)v1093 + v1094[12]);
          *(void *)((char *)v1092 + v1094[13]) = *(void *)((char *)v1093 + v1094[13]);
          uint64_t v1103 = v1094[14];
          uint64_t v1104 = (char *)v1092 + v1103;
          uint64_t v1105 = (char *)v1093 + v1103;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1093 + v1103, 1, v300))
          {
            uint64_t v1106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1104, v1105, *(void *)(*(void *)(v1106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v1104, v1105, v300);
            __swift_storeEnumTagSinglePayload((uint64_t)v1104, 0, 1, v300);
          }
          *(void *)((char *)v1092 + v1094[15]) = *(void *)((char *)v1093 + v1094[15]);
          *(void *)((char *)v1092 + v1094[16]) = *(void *)((char *)v1093 + v1094[16]);
          *(_OWORD *)((char *)v1092 + v1094[17]) = *(_OWORD *)((char *)v1093 + v1094[17]);
          *(void *)((char *)v1092 + v1094[18]) = *(void *)((char *)v1093 + v1094[18]);
          *(void *)((char *)v1092 + v1094[19]) = *(void *)((char *)v1093 + v1094[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1092, 0, 1, (uint64_t)v1094);
        }
        uint64_t v1107 = v1158;
        uint64_t v1108 = v1158[22];
        uint64_t v1109 = (_OWORD *)((char *)v5 + v1108);
        uint64_t v1110 = (_OWORD *)((char *)v6 + v1108);
        v1111 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1110, 1, (uint64_t)v1111))
        {
          uint64_t v1112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1109, v1110, *(void *)(*(void *)(v1112 - 8) + 64));
        }
        else
        {
          long long v1113 = v1110[1];
          *uint64_t v1109 = *v1110;
          v1109[1] = v1113;
          long long v1114 = v1110[3];
          v1109[2] = v1110[2];
          v1109[3] = v1114;
          uint64_t v1115 = v1111[8];
          v1116 = (char *)v1109 + v1115;
          uint64_t v1117 = (char *)v1110 + v1115;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1110 + v1115, 1, v1147))
          {
            uint64_t v1118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1116, v1117, *(void *)(*(void *)(v1118 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v1116, v1117, v1147);
            __swift_storeEnumTagSinglePayload((uint64_t)v1116, 0, 1, v1147);
          }
          *(_OWORD *)((char *)v1109 + v1111[9]) = *(_OWORD *)((char *)v1110 + v1111[9]);
          *(_OWORD *)((char *)v1109 + v1111[10]) = *(_OWORD *)((char *)v1110 + v1111[10]);
          *(_OWORD *)((char *)v1109 + v1111[11]) = *(_OWORD *)((char *)v1110 + v1111[11]);
          uint64_t v1119 = v1111[12];
          uint64_t v1120 = (char *)v1109 + v1119;
          uint64_t v1121 = (char *)v1110 + v1119;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1110 + v1119, 1, v1150))
          {
            uint64_t v1122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1120, v1121, *(void *)(*(void *)(v1122 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v1120, v1121, v1150);
            __swift_storeEnumTagSinglePayload((uint64_t)v1120, 0, 1, v1150);
          }
          uint64_t v1123 = v1111[13];
          v1155 = (char *)v1109 + v1123;
          uint64_t v1124 = (char *)v1110 + v1123;
          uint64_t v1107 = v1158;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1110 + v1123, 1, v1150))
          {
            uint64_t v1125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1155, v1124, *(void *)(*(void *)(v1125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v1155, v1124, v1150);
            __swift_storeEnumTagSinglePayload((uint64_t)v1155, 0, 1, v1150);
          }
          uint64_t v1126 = v1111[14];
          uint64_t v1127 = (char *)v1109 + v1126;
          v1128 = (char *)v1110 + v1126;
          *(void *)uint64_t v1127 = *(void *)v1128;
          v1127[8] = v1128[8];
          *(_OWORD *)((char *)v1109 + v1111[15]) = *(_OWORD *)((char *)v1110 + v1111[15]);
          *(_OWORD *)((char *)v1109 + v1111[16]) = *(_OWORD *)((char *)v1110 + v1111[16]);
          *(_OWORD *)((char *)v1109 + v1111[17]) = *(_OWORD *)((char *)v1110 + v1111[17]);
          *(_OWORD *)((char *)v1109 + v1111[18]) = *(_OWORD *)((char *)v1110 + v1111[18]);
          *(_OWORD *)((char *)v1109 + v1111[19]) = *(_OWORD *)((char *)v1110 + v1111[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1109, 0, 1, (uint64_t)v1111);
        }
        memcpy((char *)v5 + v1107[23], (char *)v6 + v1107[23], 0x90uLL);
        goto LABEL_524;
      case 2u:
        long long v35 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v35;
        _OWORD v5[2] = v6[2];
        uint64_t v36 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v37 = v36[7];
        uint64_t v38 = (char *)v5 + v37;
        uint64_t v39 = (char *)v6 + v37;
        uint64_t v40 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
          __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
        }
        uint64_t v238 = v36[8];
        uint64_t v239 = (char *)v5 + v238;
        uint64_t v240 = (char *)v6 + v238;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v238, 1, v40))
        {
          uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v239, v240, v40);
          __swift_storeEnumTagSinglePayload((uint64_t)v239, 0, 1, v40);
        }
        *(_OWORD *)((char *)v5 + v36[9]) = *(_OWORD *)((char *)v6 + v36[9]);
        *(void *)((char *)v5 + v36[10]) = *(void *)((char *)v6 + v36[10]);
        *(void *)((char *)v5 + v36[11]) = *(void *)((char *)v6 + v36[11]);
        *(_OWORD *)((char *)v5 + v36[12]) = *(_OWORD *)((char *)v6 + v36[12]);
        uint64_t v301 = v36[13];
        uint64_t v302 = (char *)v5 + v301;
        uint64_t v303 = (char *)v6 + v301;
        long long v304 = *((_OWORD *)v303 + 1);
        *(_OWORD *)uint64_t v302 = *(_OWORD *)v303;
        *((_OWORD *)v302 + 1) = v304;
        *((void *)v302 + 4) = *((void *)v303 + 4);
        goto LABEL_524;
      case 3u:
        long long v42 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v42;
        _OWORD v5[2] = v6[2];
        *((void *)v5 + 6) = *((void *)v6 + 6);
        *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
        *(_OWORD *)((char *)v5 + 72) = *(_OWORD *)((char *)v6 + 72);
        uint64_t v43 = (int *)type metadata accessor for Photo(0);
        uint64_t v44 = v43[11];
        uint64_t v45 = (char *)v5 + v44;
        uint64_t v46 = (char *)v6 + v44;
        uint64_t v47 = type metadata accessor for Date();
        uint64_t v1153 = (void *)v47;
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
        }
        *(void *)((char *)v5 + v43[12]) = *(void *)((char *)v6 + v43[12]);
        *(void *)((char *)v5 + v43[13]) = *(void *)((char *)v6 + v43[13]);
        *(void *)((char *)v5 + v43[14]) = *(void *)((char *)v6 + v43[14]);
        *(void *)((char *)v5 + v43[15]) = *(void *)((char *)v6 + v43[15]);
        *(_OWORD *)((char *)v5 + v43[16]) = *(_OWORD *)((char *)v6 + v43[16]);
        uint64_t v242 = v43[17];
        uint64_t v243 = (_OWORD *)((char *)v5 + v242);
        uint64_t v244 = (_OWORD *)((char *)v6 + v242);
        uint64_t v245 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1157 = v43;
        if (__swift_getEnumTagSinglePayload((uint64_t)v244, 1, (uint64_t)v245))
        {
          uint64_t v246 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v243, v244, *(void *)(*(void *)(v246 - 8) + 64));
        }
        else
        {
          *uint64_t v243 = *v244;
          uint64_t v305 = v245[5];
          uint64_t v306 = (_OWORD *)((char *)v243 + v305);
          uint64_t v307 = (_OWORD *)((char *)v244 + v305);
          uint64_t v308 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1148 = v243;
          v1151 = v245;
          uint64_t v1145 = v244;
          if (__swift_getEnumTagSinglePayload((uint64_t)v307, 1, v308))
          {
            uint64_t v309 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v306, v307, *(void *)(*(void *)(v309 - 8) + 64));
          }
          else
          {
            long long v363 = v307[1];
            *uint64_t v306 = *v307;
            v306[1] = v363;
            long long v364 = v307[3];
            v306[2] = v307[2];
            v306[3] = v364;
            long long v365 = v307[5];
            v306[4] = v307[4];
            v306[5] = v365;
            long long v366 = v307[7];
            v306[6] = v307[6];
            v306[7] = v366;
            *((unsigned char *)v306 + 128) = *((unsigned char *)v307 + 128);
            *(_WORD *)((char *)v306 + 129) = *(_WORD *)((char *)v307 + 129);
            *((void *)v306 + 17) = *((void *)v307 + 17);
            long long v367 = v307[10];
            v306[9] = v307[9];
            v306[10] = v367;
            long long v368 = v307[12];
            v306[11] = v307[11];
            v306[12] = v368;
            long long v369 = v307[14];
            v306[13] = v307[13];
            v306[14] = v369;
            v306[15] = v307[15];
            *((void *)v306 + 32) = *((void *)v307 + 32);
            *(_OWORD *)((char *)v306 + 264) = *(_OWORD *)((char *)v307 + 264);
            *(_OWORD *)((char *)v306 + 280) = *(_OWORD *)((char *)v307 + 280);
            *(_OWORD *)((char *)v306 + 296) = *(_OWORD *)((char *)v307 + 296);
            *(_OWORD *)((char *)v306 + 312) = *(_OWORD *)((char *)v307 + 312);
            *(_OWORD *)((char *)v306 + 328) = *(_OWORD *)((char *)v307 + 328);
            *(_OWORD *)((char *)v306 + 344) = *(_OWORD *)((char *)v307 + 344);
            *(_OWORD *)((char *)v306 + 360) = *(_OWORD *)((char *)v307 + 360);
            *((unsigned char *)v306 + 384) = *((unsigned char *)v307 + 384);
            *((void *)v306 + 47) = *((void *)v307 + 47);
            *(_OWORD *)((char *)v306 + 392) = *(_OWORD *)((char *)v307 + 392);
            *(_OWORD *)((char *)v306 + 408) = *(_OWORD *)((char *)v307 + 408);
            uint64_t v370 = *(int *)(v308 + 140);
            uint64_t v371 = (char *)v306 + v370;
            uint64_t v372 = (char *)v307 + v370;
            if (__swift_getEnumTagSinglePayload((uint64_t)v307 + v370, 1, (uint64_t)v1153))
            {
              uint64_t v373 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v371, v372, *(void *)(*(void *)(v373 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v371, v372, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v371, 0, 1, (uint64_t)v1153);
            }
            uint64_t v389 = *(int *)(v308 + 144);
            uint64_t v390 = (char *)v306 + v389;
            v391 = (char *)v307 + v389;
            if (__swift_getEnumTagSinglePayload((uint64_t)v307 + v389, 1, (uint64_t)v1153))
            {
              uint64_t v392 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v390, v391, *(void *)(*(void *)(v392 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v390, v391, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v390, 0, 1, (uint64_t)v1153);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v306, 0, 1, v308);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v413 = v245[6];
          v414 = (_OWORD *)((char *)v243 + v413);
          uint64_t v415 = (_OWORD *)((char *)v244 + v413);
          uint64_t v416 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v415, 1, v416))
          {
            uint64_t v417 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v414, v415, *(void *)(*(void *)(v417 - 8) + 64));
          }
          else
          {
            long long v418 = v415[1];
            _OWORD *v414 = *v415;
            v414[1] = v418;
            long long v419 = v415[3];
            v414[2] = v415[2];
            v414[3] = v419;
            long long v420 = v415[5];
            v414[4] = v415[4];
            v414[5] = v420;
            long long v421 = v415[7];
            v414[6] = v415[6];
            v414[7] = v421;
            *((unsigned char *)v414 + 128) = *((unsigned char *)v415 + 128);
            *(_WORD *)((char *)v414 + 129) = *(_WORD *)((char *)v415 + 129);
            *((void *)v414 + 17) = *((void *)v415 + 17);
            long long v422 = v415[10];
            v414[9] = v415[9];
            v414[10] = v422;
            long long v423 = v415[12];
            v414[11] = v415[11];
            v414[12] = v423;
            *((void *)v414 + 26) = *((void *)v415 + 26);
            *(_OWORD *)((char *)v414 + 216) = *(_OWORD *)((char *)v415 + 216);
            *(_OWORD *)((char *)v414 + 232) = *(_OWORD *)((char *)v415 + 232);
            *(_OWORD *)((char *)v414 + 248) = *(_OWORD *)((char *)v415 + 248);
            *(_OWORD *)((char *)v414 + 264) = *(_OWORD *)((char *)v415 + 264);
            *((unsigned char *)v414 + 296) = *((unsigned char *)v415 + 296);
            uint64_t v424 = *((void *)v415 + 36);
            *((void *)v414 + 35) = *((void *)v415 + 35);
            *((void *)v414 + 36) = v424;
            uint64_t v425 = *(int *)(v416 + 112);
            uint64_t v426 = (char *)v414 + v425;
            uint64_t v427 = (char *)v415 + v425;
            if (__swift_getEnumTagSinglePayload((uint64_t)v415 + v425, 1, (uint64_t)v1153))
            {
              uint64_t v428 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v426, v427, *(void *)(*(void *)(v428 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v426, v427, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v426, 0, 1, (uint64_t)v1153);
            }
            uint64_t v449 = *(int *)(v416 + 116);
            long long v450 = (char *)v414 + v449;
            uint64_t v451 = (char *)v415 + v449;
            if (__swift_getEnumTagSinglePayload((uint64_t)v415 + v449, 1, (uint64_t)v1153))
            {
              uint64_t v452 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v450, v451, *(void *)(*(void *)(v452 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v450, v451, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v450, 0, 1, (uint64_t)v1153);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v414, 0, 1, v416);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v475 = v245[7];
          uint64_t v476 = (_OWORD *)((char *)v243 + v475);
          uint64_t v477 = (_OWORD *)((char *)v244 + v475);
          uint64_t v478 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v477, 1, (uint64_t)v478))
          {
            uint64_t v479 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v476, v477, *(void *)(*(void *)(v479 - 8) + 64));
          }
          else
          {
            long long v480 = v477[1];
            *uint64_t v476 = *v477;
            v476[1] = v480;
            long long v481 = v477[3];
            v476[2] = v477[2];
            v476[3] = v481;
            long long v482 = v477[5];
            v476[4] = v477[4];
            v476[5] = v482;
            long long v483 = v477[7];
            v476[6] = v477[6];
            v476[7] = v483;
            *((unsigned char *)v476 + 128) = *((unsigned char *)v477 + 128);
            *(_WORD *)((char *)v476 + 129) = *(_WORD *)((char *)v477 + 129);
            *((void *)v476 + 17) = *((void *)v477 + 17);
            long long v484 = v477[10];
            v476[9] = v477[9];
            v476[10] = v484;
            long long v485 = v477[12];
            v476[11] = v477[11];
            v476[12] = v485;
            long long v486 = v477[14];
            v476[13] = v477[13];
            v476[14] = v486;
            *((void *)v476 + 30) = *((void *)v477 + 30);
            *(_OWORD *)((char *)v476 + 248) = *(_OWORD *)((char *)v477 + 248);
            *(_OWORD *)((char *)v476 + 264) = *(_OWORD *)((char *)v477 + 264);
            *((unsigned char *)v476 + 296) = *((unsigned char *)v477 + 296);
            uint64_t v487 = *((void *)v477 + 36);
            *((void *)v476 + 35) = *((void *)v477 + 35);
            *((void *)v476 + 36) = v487;
            v476[19] = v477[19];
            uint64_t v488 = v478[29];
            uint64_t v489 = (char *)v476 + v488;
            uint64_t v490 = (char *)v477 + v488;
            uint64_t v491 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v490, 1, v491))
            {
              uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v489, v490, *(void *)(*(void *)(v492 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v491 - 8) + 32))(v489, v490, v491);
              __swift_storeEnumTagSinglePayload((uint64_t)v489, 0, 1, v491);
            }
            *(_OWORD *)((char *)v476 + v478[30]) = *(_OWORD *)((char *)v477 + v478[30]);
            uint64_t v514 = v478[31];
            uint64_t v515 = (char *)v476 + v514;
            uint64_t v516 = (char *)v477 + v514;
            if (__swift_getEnumTagSinglePayload((uint64_t)v477 + v514, 1, (uint64_t)v1153))
            {
              uint64_t v517 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v515, v516, *(void *)(*(void *)(v517 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v515, v516, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v515, 0, 1, (uint64_t)v1153);
            }
            uint64_t v526 = v478[32];
            uint64_t v527 = (char *)v476 + v526;
            uint64_t v528 = (char *)v477 + v526;
            if (__swift_getEnumTagSinglePayload((uint64_t)v477 + v526, 1, (uint64_t)v1153))
            {
              uint64_t v529 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v527, v528, *(void *)(*(void *)(v529 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v527, v528, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v527, 0, 1, (uint64_t)v1153);
            }
            uint64_t v243 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v476, 0, 1, (uint64_t)v478);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v551 = v245[8];
          uint64_t v552 = (_OWORD *)((char *)v243 + v551);
          uint64_t v553 = (_OWORD *)((char *)v244 + v551);
          uint64_t v554 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v553, 1, v554))
          {
            uint64_t v555 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v552, v553, *(void *)(*(void *)(v555 - 8) + 64));
          }
          else
          {
            long long v556 = v553[1];
            _OWORD *v552 = *v553;
            v552[1] = v556;
            long long v557 = v553[3];
            v552[2] = v553[2];
            v552[3] = v557;
            long long v558 = v553[5];
            v552[4] = v553[4];
            v552[5] = v558;
            long long v559 = v553[7];
            v552[6] = v553[6];
            v552[7] = v559;
            *((unsigned char *)v552 + 128) = *((unsigned char *)v553 + 128);
            *(_WORD *)((char *)v552 + 129) = *(_WORD *)((char *)v553 + 129);
            *((void *)v552 + 17) = *((void *)v553 + 17);
            long long v560 = v553[10];
            v552[9] = v553[9];
            v552[10] = v560;
            long long v561 = v553[12];
            v552[11] = v553[11];
            v552[12] = v561;
            long long v562 = v553[14];
            v552[13] = v553[13];
            v552[14] = v562;
            long long v563 = v553[16];
            v552[15] = v553[15];
            v552[16] = v563;
            *((unsigned char *)v552 + 280) = *((unsigned char *)v553 + 280);
            *((void *)v552 + 34) = *((void *)v553 + 34);
            v552[18] = v553[18];
            uint64_t v564 = *(int *)(v554 + 108);
            uint64_t v565 = (char *)v552 + v564;
            uint64_t v566 = (char *)v553 + v564;
            if (__swift_getEnumTagSinglePayload((uint64_t)v553 + v564, 1, (uint64_t)v1153))
            {
              uint64_t v567 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v565, v566, *(void *)(*(void *)(v567 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v565, v566, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v565, 0, 1, (uint64_t)v1153);
            }
            uint64_t v589 = *(int *)(v554 + 112);
            uint64_t v590 = (char *)v552 + v589;
            uint64_t v591 = (char *)v553 + v589;
            if (__swift_getEnumTagSinglePayload((uint64_t)v553 + v589, 1, (uint64_t)v1153))
            {
              uint64_t v592 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v590, v591, *(void *)(*(void *)(v592 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v590, v591, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v590, 0, 1, (uint64_t)v1153);
            }
            uint64_t v243 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v552, 0, 1, v554);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v613 = v245[9];
          uint64_t v614 = (_OWORD *)((char *)v243 + v613);
          uint64_t v615 = (_OWORD *)((char *)v244 + v613);
          uint64_t v616 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v615, 1, (uint64_t)v616))
          {
            uint64_t v617 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v614, v615, *(void *)(*(void *)(v617 - 8) + 64));
          }
          else
          {
            long long v618 = v615[1];
            *uint64_t v614 = *v615;
            v614[1] = v618;
            long long v619 = v615[3];
            v614[2] = v615[2];
            v614[3] = v619;
            long long v620 = v615[5];
            v614[4] = v615[4];
            v614[5] = v620;
            long long v621 = v615[7];
            v614[6] = v615[6];
            v614[7] = v621;
            *((unsigned char *)v614 + 128) = *((unsigned char *)v615 + 128);
            *(_WORD *)((char *)v614 + 129) = *(_WORD *)((char *)v615 + 129);
            *((void *)v614 + 17) = *((void *)v615 + 17);
            long long v622 = v615[10];
            v614[9] = v615[9];
            v614[10] = v622;
            long long v623 = v615[12];
            v614[11] = v615[11];
            v614[12] = v623;
            long long v624 = v615[14];
            v614[13] = v615[13];
            v614[14] = v624;
            v614[15] = v615[15];
            uint64_t v625 = v616[24];
            uint64_t v626 = (char *)v614 + v625;
            long long v627 = (char *)v615 + v625;
            if (__swift_getEnumTagSinglePayload((uint64_t)v615 + v625, 1, (uint64_t)v1153))
            {
              uint64_t v628 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v626, v627, *(void *)(*(void *)(v628 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v626, v627, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v626, 0, 1, (uint64_t)v1153);
            }
            uint64_t v649 = v616[25];
            uint64_t v650 = (char *)v614 + v649;
            uint64_t v651 = (char *)v615 + v649;
            if (__swift_getEnumTagSinglePayload((uint64_t)v615 + v649, 1, (uint64_t)v1153))
            {
              uint64_t v652 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v650, v651, *(void *)(*(void *)(v652 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v650, v651, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v650, 0, 1, (uint64_t)v1153);
            }
            uint64_t v662 = v616[26];
            uint64_t v663 = (char *)v614 + v662;
            uint64_t v664 = (char *)v615 + v662;
            uint64_t v665 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v664, 1, v665))
            {
              uint64_t v666 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v663, v664, *(void *)(*(void *)(v666 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v665 - 8) + 32))(v663, v664, v665);
              __swift_storeEnumTagSinglePayload((uint64_t)v663, 0, 1, v665);
            }
            uint64_t v243 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v614, 0, 1, (uint64_t)v616);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v686 = v245[10];
          uint64_t v687 = (_OWORD *)((char *)v243 + v686);
          uint64_t v688 = (_OWORD *)((char *)v244 + v686);
          uint64_t v689 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v688, 1, (uint64_t)v689))
          {
            uint64_t v690 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v687, v688, *(void *)(*(void *)(v690 - 8) + 64));
          }
          else
          {
            long long v691 = v688[1];
            *uint64_t v687 = *v688;
            v687[1] = v691;
            long long v692 = v688[3];
            v687[2] = v688[2];
            v687[3] = v692;
            long long v693 = v688[5];
            v687[4] = v688[4];
            v687[5] = v693;
            long long v694 = v688[7];
            v687[6] = v688[6];
            v687[7] = v694;
            *((unsigned char *)v687 + 128) = *((unsigned char *)v688 + 128);
            *(_WORD *)((char *)v687 + 129) = *(_WORD *)((char *)v688 + 129);
            *((void *)v687 + 17) = *((void *)v688 + 17);
            long long v695 = v688[10];
            v687[9] = v688[9];
            v687[10] = v695;
            long long v696 = v688[12];
            v687[11] = v688[11];
            v687[12] = v696;
            v687[13] = v688[13];
            uint64_t v697 = v689[22];
            uint64_t v698 = (char *)v687 + v697;
            uint64_t v699 = (char *)v688 + v697;
            if (__swift_getEnumTagSinglePayload((uint64_t)v688 + v697, 1, (uint64_t)v1153))
            {
              uint64_t v700 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v698, v699, *(void *)(*(void *)(v700 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v698, v699, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v698, 0, 1, (uint64_t)v1153);
            }
            uint64_t v720 = v689[23];
            uint64_t v721 = (char *)v687 + v720;
            uint64_t v722 = (char *)v688 + v720;
            if (__swift_getEnumTagSinglePayload((uint64_t)v688 + v720, 1, (uint64_t)v1153))
            {
              uint64_t v723 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v721, v722, *(void *)(*(void *)(v723 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v721, v722, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v721, 0, 1, (uint64_t)v1153);
            }
            uint64_t v736 = v689[24];
            uint64_t v737 = (char *)v687 + v736;
            uint64_t v738 = (char *)v688 + v736;
            *(void *)uint64_t v737 = *(void *)v738;
            v737[8] = v738[8];
            uint64_t v739 = v689[25];
            uint64_t v740 = (char *)v687 + v739;
            uint64_t v741 = (char *)v688 + v739;
            uint64_t v742 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v741, 1, v742))
            {
              uint64_t v743 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v740, v741, *(void *)(*(void *)(v743 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v742 - 8) + 32))(v740, v741, v742);
              __swift_storeEnumTagSinglePayload((uint64_t)v740, 0, 1, v742);
            }
            uint64_t v243 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v687, 0, 1, (uint64_t)v689);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v764 = v245[11];
          uint64_t v765 = (_OWORD *)((char *)v243 + v764);
          uint64_t v766 = (_OWORD *)((char *)v244 + v764);
          uint64_t v767 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v766, 1, (uint64_t)v767))
          {
            uint64_t v768 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v765, v766, *(void *)(*(void *)(v768 - 8) + 64));
          }
          else
          {
            long long v769 = v766[1];
            _OWORD *v765 = *v766;
            v765[1] = v769;
            long long v770 = v766[3];
            v765[2] = v766[2];
            v765[3] = v770;
            long long v771 = v766[5];
            v765[4] = v766[4];
            v765[5] = v771;
            *((unsigned char *)v765 + 96) = *((unsigned char *)v766 + 96);
            *(_OWORD *)((char *)v765 + 104) = *(_OWORD *)((char *)v766 + 104);
            uint64_t v772 = v767[13];
            uint64_t v773 = (char *)v765 + v772;
            uint64_t v774 = (char *)v766 + v772;
            uint64_t v775 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v774, 1, v775))
            {
              uint64_t v776 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v773, v774, *(void *)(*(void *)(v776 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v775 - 8) + 32))(v773, v774, v775);
              __swift_storeEnumTagSinglePayload((uint64_t)v773, 0, 1, v775);
            }
            uint64_t v793 = v767[14];
            uint64_t v794 = (char *)v765 + v793;
            uint64_t v795 = (char *)v766 + v793;
            if (__swift_getEnumTagSinglePayload((uint64_t)v766 + v793, 1, v775))
            {
              uint64_t v796 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v794, v795, *(void *)(*(void *)(v796 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v775 - 8) + 32))(v794, v795, v775);
              __swift_storeEnumTagSinglePayload((uint64_t)v794, 0, 1, v775);
            }
            *(_OWORD *)((char *)v765 + v767[15]) = *(_OWORD *)((char *)v766 + v767[15]);
            *(_OWORD *)((char *)v765 + v767[16]) = *(_OWORD *)((char *)v766 + v767[16]);
            *(_OWORD *)((char *)v765 + v767[17]) = *(_OWORD *)((char *)v766 + v767[17]);
            uint64_t v808 = v767[18];
            uint64_t v1135 = (char *)v766 + v808;
            __dstd = (char *)v765 + v808;
            uint64_t v809 = type metadata accessor for DateComponents();
            uint64_t v810 = *(void (**)(char *, char *, uint64_t))(*(void *)(v809 - 8) + 32);
            v810(__dstd, v1135, v809);
            v810((char *)v765 + v767[19], (char *)v766 + v767[19], v809);
            *(_OWORD *)((char *)v765 + v767[20]) = *(_OWORD *)((char *)v766 + v767[20]);
            *(_OWORD *)((char *)v765 + v767[21]) = *(_OWORD *)((char *)v766 + v767[21]);
            *(_OWORD *)((char *)v765 + v767[22]) = *(_OWORD *)((char *)v766 + v767[22]);
            *(_OWORD *)((char *)v765 + v767[23]) = *(_OWORD *)((char *)v766 + v767[23]);
            *(_OWORD *)((char *)v765 + v767[24]) = *(_OWORD *)((char *)v766 + v767[24]);
            *(_OWORD *)((char *)v765 + v767[25]) = *(_OWORD *)((char *)v766 + v767[25]);
            *(_OWORD *)((char *)v765 + v767[26]) = *(_OWORD *)((char *)v766 + v767[26]);
            *(_OWORD *)((char *)v765 + v767[27]) = *(_OWORD *)((char *)v766 + v767[27]);
            *(_OWORD *)((char *)v765 + v767[28]) = *(_OWORD *)((char *)v766 + v767[28]);
            *(_OWORD *)((char *)v765 + v767[29]) = *(_OWORD *)((char *)v766 + v767[29]);
            *(_OWORD *)((char *)v765 + v767[30]) = *(_OWORD *)((char *)v766 + v767[30]);
            *(_OWORD *)((char *)v765 + v767[31]) = *(_OWORD *)((char *)v766 + v767[31]);
            *(_OWORD *)((char *)v765 + v767[32]) = *(_OWORD *)((char *)v766 + v767[32]);
            *(void *)((char *)v765 + v767[33]) = *(void *)((char *)v766 + v767[33]);
            *(void *)((char *)v765 + v767[34]) = *(void *)((char *)v766 + v767[34]);
            *(_OWORD *)((char *)v765 + v767[35]) = *(_OWORD *)((char *)v766 + v767[35]);
            *(_OWORD *)((char *)v765 + v767[36]) = *(_OWORD *)((char *)v766 + v767[36]);
            *(_OWORD *)((char *)v765 + v767[37]) = *(_OWORD *)((char *)v766 + v767[37]);
            uint64_t v811 = v767[38];
            uint64_t v812 = (char *)v765 + v811;
            uint64_t v813 = (char *)v766 + v811;
            if (__swift_getEnumTagSinglePayload((uint64_t)v766 + v811, 1, (uint64_t)v1153))
            {
              uint64_t v814 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v812, v813, *(void *)(*(void *)(v814 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v812, v813, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v812, 0, 1, (uint64_t)v1153);
            }
            uint64_t v243 = v1148;
            *(_OWORD *)((char *)v765 + v767[39]) = *(_OWORD *)((char *)v766 + v767[39]);
            *(_OWORD *)((char *)v765 + v767[40]) = *(_OWORD *)((char *)v766 + v767[40]);
            uint64_t v841 = v767[41];
            uint64_t v842 = (char *)v765 + v841;
            uint64_t v843 = (char *)v766 + v841;
            *(void *)uint64_t v842 = *(void *)v843;
            v842[8] = v843[8];
            *(_OWORD *)((char *)v765 + v767[42]) = *(_OWORD *)((char *)v766 + v767[42]);
            uint64_t v844 = v767[43];
            uint64_t v845 = (char *)v765 + v844;
            uint64_t v846 = (char *)v766 + v844;
            *(_OWORD *)uint64_t v845 = *(_OWORD *)v846;
            *(void *)(v845 + 13) = *(void *)(v846 + 13);
            *(_OWORD *)((char *)v765 + v767[44]) = *(_OWORD *)((char *)v766 + v767[44]);
            *(_OWORD *)((char *)v765 + v767[45]) = *(_OWORD *)((char *)v766 + v767[45]);
            *(_OWORD *)((char *)v765 + v767[46]) = *(_OWORD *)((char *)v766 + v767[46]);
            *(_OWORD *)((char *)v765 + v767[47]) = *(_OWORD *)((char *)v766 + v767[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v765, 0, 1, (uint64_t)v767);
            uint64_t v245 = v1151;
            uint64_t v244 = v1145;
          }
          uint64_t v847 = v245[12];
          uint64_t v848 = (_OWORD *)((char *)v243 + v847);
          uint64_t v849 = (_OWORD *)((char *)v244 + v847);
          uint64_t v850 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v849, 1, (uint64_t)v850))
          {
            uint64_t v851 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v848, v849, *(void *)(*(void *)(v851 - 8) + 64));
          }
          else
          {
            long long v852 = v849[1];
            *uint64_t v848 = *v849;
            v848[1] = v852;
            long long v853 = v849[3];
            v848[2] = v849[2];
            v848[3] = v853;
            long long v854 = v849[5];
            v848[4] = v849[4];
            v848[5] = v854;
            *((unsigned char *)v848 + 96) = *((unsigned char *)v849 + 96);
            *(_OWORD *)((char *)v848 + 104) = *(_OWORD *)((char *)v849 + 104);
            *(_OWORD *)((char *)v848 + 120) = *(_OWORD *)((char *)v849 + 120);
            uint64_t v855 = v850[14];
            __dstb = (char *)v848 + v855;
            uint64_t v856 = (char *)v849 + v855;
            uint64_t v857 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v856, 1, v857))
            {
              uint64_t v858 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstb, v856, *(void *)(*(void *)(v858 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v857 - 8) + 32))(__dstb, v856, v857);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v857);
            }
            uint64_t v881 = v850[15];
            __dstc = (char *)v848 + v881;
            uint64_t v882 = (char *)v849 + v881;
            if (__swift_getEnumTagSinglePayload((uint64_t)v849 + v881, 1, v857))
            {
              uint64_t v883 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstc, v882, *(void *)(*(void *)(v883 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v857 - 8) + 32))(__dstc, v882, v857);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v857);
            }
            uint64_t v245 = v1151;
            *(_OWORD *)((char *)v848 + v850[16]) = *(_OWORD *)((char *)v849 + v850[16]);
            *(_OWORD *)((char *)v848 + v850[17]) = *(_OWORD *)((char *)v849 + v850[17]);
            *(_OWORD *)((char *)v848 + v850[18]) = *(_OWORD *)((char *)v849 + v850[18]);
            *(_OWORD *)((char *)v848 + v850[19]) = *(_OWORD *)((char *)v849 + v850[19]);
            *(_OWORD *)((char *)v848 + v850[20]) = *(_OWORD *)((char *)v849 + v850[20]);
            *(void *)((char *)v848 + v850[21]) = *(void *)((char *)v849 + v850[21]);
            *(void *)((char *)v848 + v850[22]) = *(void *)((char *)v849 + v850[22]);
            uint64_t v909 = v850[23];
            uint64_t v910 = (char *)v848 + v909;
            uint64_t v911 = (char *)v849 + v909;
            v910[8] = v911[8];
            *(void *)uint64_t v910 = *(void *)v911;
            uint64_t v912 = v850[24];
            uint64_t v913 = (char *)v848 + v912;
            uint64_t v914 = (char *)v849 + v912;
            v913[8] = v914[8];
            *(void *)uint64_t v913 = *(void *)v914;
            *(_OWORD *)((char *)v848 + v850[25]) = *(_OWORD *)((char *)v849 + v850[25]);
            *(_OWORD *)((char *)v848 + v850[26]) = *(_OWORD *)((char *)v849 + v850[26]);
            *(_OWORD *)((char *)v848 + v850[27]) = *(_OWORD *)((char *)v849 + v850[27]);
            *(_OWORD *)((char *)v848 + v850[28]) = *(_OWORD *)((char *)v849 + v850[28]);
            uint64_t v915 = v850[29];
            uint64_t v916 = (char *)v848 + v915;
            uint64_t v917 = (char *)v849 + v915;
            *(void *)uint64_t v916 = *(void *)v917;
            v916[8] = v917[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v848, 0, 1, (uint64_t)v850);
            uint64_t v244 = v1145;
          }
          uint64_t v918 = v245[13];
          uint64_t v919 = (_OWORD *)((char *)v243 + v918);
          uint64_t v920 = (_OWORD *)((char *)v244 + v918);
          uint64_t v921 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v920, 1, (uint64_t)v921))
          {
            uint64_t v922 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v919, v920, *(void *)(*(void *)(v922 - 8) + 64));
          }
          else
          {
            long long v923 = v920[1];
            *uint64_t v919 = *v920;
            v919[1] = v923;
            long long v924 = v920[3];
            v919[2] = v920[2];
            v919[3] = v924;
            long long v925 = v920[5];
            v919[4] = v920[4];
            v919[5] = v925;
            *((unsigned char *)v919 + 96) = *((unsigned char *)v920 + 96);
            *(_OWORD *)((char *)v919 + 104) = *(_OWORD *)((char *)v920 + 104);
            *(_OWORD *)((char *)v919 + 120) = *(_OWORD *)((char *)v920 + 120);
            uint64_t v926 = v921[14];
            uint64_t v927 = (char *)v919 + v926;
            uint64_t v928 = (char *)v920 + v926;
            uint64_t v929 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v928, 1, v929))
            {
              uint64_t v930 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v927, v928, *(void *)(*(void *)(v930 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v929 - 8) + 32))(v927, v928, v929);
              __swift_storeEnumTagSinglePayload((uint64_t)v927, 0, 1, v929);
            }
            *(_OWORD *)((char *)v919 + v921[15]) = *(_OWORD *)((char *)v920 + v921[15]);
            *(_OWORD *)((char *)v919 + v921[16]) = *(_OWORD *)((char *)v920 + v921[16]);
            *(_OWORD *)((char *)v919 + v921[17]) = *(_OWORD *)((char *)v920 + v921[17]);
            *(_OWORD *)((char *)v919 + v921[18]) = *(_OWORD *)((char *)v920 + v921[18]);
            *(_OWORD *)((char *)v919 + v921[19]) = *(_OWORD *)((char *)v920 + v921[19]);
            *(void *)((char *)v919 + v921[20]) = *(void *)((char *)v920 + v921[20]);
            *(_OWORD *)((char *)v919 + v921[21]) = *(_OWORD *)((char *)v920 + v921[21]);
            *(_OWORD *)((char *)v919 + v921[22]) = *(_OWORD *)((char *)v920 + v921[22]);
            *(_OWORD *)((char *)v919 + v921[23]) = *(_OWORD *)((char *)v920 + v921[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, (uint64_t)v921);
            uint64_t v243 = v1148;
            uint64_t v245 = v1151;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v243, 0, 1, (uint64_t)v245);
          uint64_t v43 = v1157;
        }
        uint64_t v1012 = v43[18];
        uint64_t v1013 = (_OWORD *)((char *)v5 + v1012);
        uint64_t v1014 = (_OWORD *)((char *)v6 + v1012);
        uint64_t v1015 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1014, 1, (uint64_t)v1015))
        {
          uint64_t v1016 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1013, v1014, *(void *)(*(void *)(v1016 - 8) + 64));
        }
        else
        {
          long long v1017 = v1014[1];
          *uint64_t v1013 = *v1014;
          v1013[1] = v1017;
          long long v1018 = v1014[3];
          v1013[2] = v1014[2];
          v1013[3] = v1018;
          long long v1019 = v1014[5];
          v1013[4] = v1014[4];
          v1013[5] = v1019;
          uint64_t v1020 = v1015[10];
          uint64_t v1021 = (char *)v1013 + v1020;
          uint64_t v1022 = (char *)v1014 + v1020;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1014 + v1020, 1, (uint64_t)v1153))
          {
            uint64_t v1023 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1021, v1022, *(void *)(*(void *)(v1023 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1021, v1022, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1021, 0, 1, (uint64_t)v1153);
          }
          uint64_t v1024 = v1015[11];
          uint64_t v1025 = (char *)v1013 + v1024;
          uint64_t v1026 = (char *)v1014 + v1024;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1014 + v1024, 1, (uint64_t)v1153))
          {
            uint64_t v1027 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1025, v1026, *(void *)(*(void *)(v1027 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1025, v1026, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1025, 0, 1, (uint64_t)v1153);
          }
          *(_OWORD *)((char *)v1013 + v1015[12]) = *(_OWORD *)((char *)v1014 + v1015[12]);
          *(_OWORD *)((char *)v1013 + v1015[13]) = *(_OWORD *)((char *)v1014 + v1015[13]);
          *(_OWORD *)((char *)v1013 + v1015[14]) = *(_OWORD *)((char *)v1014 + v1015[14]);
          uint64_t v1028 = v1015[15];
          v1029 = (char *)v1013 + v1028;
          uint64_t v1030 = (char *)v1014 + v1028;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1014 + v1028, 1, (uint64_t)v1153))
          {
            uint64_t v1031 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1029, v1030, *(void *)(*(void *)(v1031 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1029, v1030, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1029, 0, 1, (uint64_t)v1153);
          }
          *(_OWORD *)((char *)v1013 + v1015[16]) = *(_OWORD *)((char *)v1014 + v1015[16]);
          *(_OWORD *)((char *)v1013 + v1015[17]) = *(_OWORD *)((char *)v1014 + v1015[17]);
          *(_OWORD *)((char *)v1013 + v1015[18]) = *(_OWORD *)((char *)v1014 + v1015[18]);
          *(_OWORD *)((char *)v1013 + v1015[19]) = *(_OWORD *)((char *)v1014 + v1015[19]);
          *(_OWORD *)((char *)v1013 + v1015[20]) = *(_OWORD *)((char *)v1014 + v1015[20]);
          *(_OWORD *)((char *)v1013 + v1015[21]) = *(_OWORD *)((char *)v1014 + v1015[21]);
          *(_OWORD *)((char *)v1013 + v1015[22]) = *(_OWORD *)((char *)v1014 + v1015[22]);
          *(_OWORD *)((char *)v1013 + v1015[23]) = *(_OWORD *)((char *)v1014 + v1015[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1013, 0, 1, (uint64_t)v1015);
        }
        uint64_t v1032 = v1157[19];
        uint64_t v1033 = (_OWORD *)((char *)v5 + v1032);
        uint64_t v1034 = (_OWORD *)((char *)v6 + v1032);
        uint64_t v1035 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1034, 1, (uint64_t)v1035))
        {
          uint64_t v1036 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1033, v1034, *(void *)(*(void *)(v1036 - 8) + 64));
        }
        else
        {
          long long v1037 = v1034[1];
          _OWORD *v1033 = *v1034;
          v1033[1] = v1037;
          long long v1038 = v1034[3];
          v1033[2] = v1034[2];
          v1033[3] = v1038;
          long long v1039 = v1034[5];
          v1033[4] = v1034[4];
          v1033[5] = v1039;
          uint64_t v1040 = v1035[11];
          v1041 = (char *)v1033 + v1040;
          uint64_t v1042 = (char *)v1034 + v1040;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1034 + v1040, 1, (uint64_t)v1153))
          {
            uint64_t v1043 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1041, v1042, *(void *)(*(void *)(v1043 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1041, v1042, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1041, 0, 1, (uint64_t)v1153);
          }
          *(_OWORD *)((char *)v1033 + v1035[12]) = *(_OWORD *)((char *)v1034 + v1035[12]);
          *(void *)((char *)v1033 + v1035[13]) = *(void *)((char *)v1034 + v1035[13]);
          uint64_t v1044 = v1035[14];
          uint64_t v1045 = (char *)v1033 + v1044;
          uint64_t v1046 = (char *)v1034 + v1044;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1034 + v1044, 1, (uint64_t)v1153))
          {
            uint64_t v1047 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1045, v1046, *(void *)(*(void *)(v1047 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1045, v1046, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1045, 0, 1, (uint64_t)v1153);
          }
          *(void *)((char *)v1033 + v1035[15]) = *(void *)((char *)v1034 + v1035[15]);
          *(void *)((char *)v1033 + v1035[16]) = *(void *)((char *)v1034 + v1035[16]);
          *(_OWORD *)((char *)v1033 + v1035[17]) = *(_OWORD *)((char *)v1034 + v1035[17]);
          *(void *)((char *)v1033 + v1035[18]) = *(void *)((char *)v1034 + v1035[18]);
          *(void *)((char *)v1033 + v1035[19]) = *(void *)((char *)v1034 + v1035[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1033, 0, 1, (uint64_t)v1035);
        }
        uint64_t v1048 = v1157[20];
        uint64_t v1049 = (_OWORD *)((char *)v5 + v1048);
        uint64_t v1050 = (_OWORD *)((char *)v6 + v1048);
        uint64_t v1051 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1050, 1, (uint64_t)v1051))
        {
          uint64_t v1052 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1049, v1050, *(void *)(*(void *)(v1052 - 8) + 64));
        }
        else
        {
          long long v1053 = v1050[1];
          _OWORD *v1049 = *v1050;
          v1049[1] = v1053;
          long long v1054 = v1050[3];
          v1049[2] = v1050[2];
          v1049[3] = v1054;
          uint64_t v1055 = v1051[8];
          uint64_t v1056 = (char *)v1049 + v1055;
          uint64_t v1057 = (char *)v1050 + v1055;
          uint64_t v1058 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1057, 1, v1058))
          {
            uint64_t v1059 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1056, v1057, *(void *)(*(void *)(v1059 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1058 - 8) + 32))(v1056, v1057, v1058);
            __swift_storeEnumTagSinglePayload((uint64_t)v1056, 0, 1, v1058);
          }
          *(_OWORD *)((char *)v1049 + v1051[9]) = *(_OWORD *)((char *)v1050 + v1051[9]);
          *(_OWORD *)((char *)v1049 + v1051[10]) = *(_OWORD *)((char *)v1050 + v1051[10]);
          *(_OWORD *)((char *)v1049 + v1051[11]) = *(_OWORD *)((char *)v1050 + v1051[11]);
          uint64_t v1060 = v1051[12];
          uint64_t v1061 = (char *)v1049 + v1060;
          uint64_t v1062 = (char *)v1050 + v1060;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1050 + v1060, 1, (uint64_t)v1153))
          {
            uint64_t v1063 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1061, v1062, *(void *)(*(void *)(v1063 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1061, v1062, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1061, 0, 1, (uint64_t)v1153);
          }
          uint64_t v1064 = v1051[13];
          uint64_t v1065 = (char *)v1049 + v1064;
          uint64_t v1066 = (char *)v1050 + v1064;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1050 + v1064, 1, (uint64_t)v1153))
          {
            uint64_t v1067 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1065, v1066, *(void *)(*(void *)(v1067 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1065, v1066, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1065, 0, 1, (uint64_t)v1153);
          }
          uint64_t v1068 = v1051[14];
          v1069 = (char *)v1049 + v1068;
          uint64_t v1070 = (char *)v1050 + v1068;
          *(void *)v1069 = *(void *)v1070;
          v1069[8] = v1070[8];
          *(_OWORD *)((char *)v1049 + v1051[15]) = *(_OWORD *)((char *)v1050 + v1051[15]);
          *(_OWORD *)((char *)v1049 + v1051[16]) = *(_OWORD *)((char *)v1050 + v1051[16]);
          *(_OWORD *)((char *)v1049 + v1051[17]) = *(_OWORD *)((char *)v1050 + v1051[17]);
          *(_OWORD *)((char *)v1049 + v1051[18]) = *(_OWORD *)((char *)v1050 + v1051[18]);
          *(_OWORD *)((char *)v1049 + v1051[19]) = *(_OWORD *)((char *)v1050 + v1051[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1049, 0, 1, (uint64_t)v1051);
        }
        memcpy((char *)v5 + v1157[21], (char *)v6 + v1157[21], 0x90uLL);
        goto LABEL_524;
      case 4u:
        long long v49 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v49;
        long long v50 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v50;
        uint64_t v51 = type metadata accessor for NoteDocument(0);
        uint64_t v52 = *(int *)(v51 + 32);
        uint64_t v53 = (char *)v5 + v52;
        uint64_t v54 = (char *)v6 + v52;
        uint64_t v55 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
        }
        uint64_t v247 = *(int *)(v51 + 36);
        uint64_t v248 = (char *)v5 + v247;
        uint64_t v249 = (char *)v6 + v247;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v247, 1, v55)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 5u:
        long long v57 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v57;
        _OWORD v5[2] = v6[2];
        uint64_t v58 = (int *)type metadata accessor for Reminder(0);
        uint64_t v59 = v58[7];
        uint64_t v60 = (char *)v5 + v59;
        uint64_t v61 = (char *)v6 + v59;
        uint64_t v62 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        uint64_t v250 = v58[8];
        uint64_t v251 = (char *)v5 + v250;
        uint64_t v252 = (char *)v6 + v250;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v250, 1, v62))
        {
          uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v251, v252, *(void *)(*(void *)(v253 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v251, v252, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v62);
        }
        *((unsigned char *)v5 + v58[9]) = *((unsigned char *)v6 + v58[9]);
        *(_OWORD *)((char *)v5 + v58[10]) = *(_OWORD *)((char *)v6 + v58[10]);
        *(_OWORD *)((char *)v5 + v58[11]) = *(_OWORD *)((char *)v6 + v58[11]);
        uint64_t v310 = v58[12];
        uint64_t v81 = (char *)v5 + v310;
        uint64_t v82 = (char *)v6 + v310;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 6u:
        long long v64 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v64;
        long long v65 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v65;
        uint64_t v66 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v67 = v66[10];
        uint64_t v68 = (char *)v5 + v67;
        uint64_t v69 = (char *)v6 + v67;
        uint64_t v70 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
        }
        *(_OWORD *)((char *)v5 + v66[11]) = *(_OWORD *)((char *)v6 + v66[11]);
        *(_OWORD *)((char *)v5 + v66[12]) = *(_OWORD *)((char *)v6 + v66[12]);
        uint64_t v254 = v66[13];
        uint64_t v81 = (char *)v5 + v254;
        uint64_t v82 = (char *)v6 + v254;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 7u:
        long long v72 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v72;
        _OWORD v5[2] = v6[2];
        uint64_t v73 = type metadata accessor for VoicemailTranscript(0);
        uint64_t v74 = *(int *)(v73 + 28);
        uint64_t v75 = (char *)v5 + v74;
        uint64_t v76 = (char *)v6 + v74;
        uint64_t v77 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
          __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
        }
        uint64_t v255 = *(int *)(v73 + 32);
        uint64_t v81 = (char *)v5 + v255;
        uint64_t v82 = (char *)v6 + v255;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 8u:
        long long v79 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v79;
        _OWORD v5[2] = v6[2];
        uint64_t v80 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v81 = (char *)v5 + v80;
        uint64_t v82 = (char *)v6 + v80;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 9u:
        long long v84 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v84;
        uint64_t v85 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v86 = v85[6];
        uint64_t v87 = (char *)v5 + v86;
        uint64_t v88 = (char *)v6 + v86;
        uint64_t v89 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v89);
        }
        uint64_t v256 = v85[7];
        uint64_t v257 = (char *)v5 + v256;
        uint64_t v258 = (char *)v6 + v256;
        *(void *)uint64_t v257 = *(void *)v258;
        v257[8] = v258[8];
        uint64_t v259 = v85[8];
        uint64_t v81 = (char *)v5 + v259;
        uint64_t v82 = (char *)v6 + v259;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0xAu:
        long long v91 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v91;
        uint64_t v92 = (int *)type metadata accessor for Safari(0);
        uint64_t v93 = v92[6];
        uint64_t v94 = (char *)v5 + v93;
        uint64_t v95 = (char *)v6 + v93;
        uint64_t v55 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v55))
        {
          uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v94, v95, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v55);
        }
        *(_OWORD *)((char *)v5 + v92[7]) = *(_OWORD *)((char *)v6 + v92[7]);
        *(_OWORD *)((char *)v5 + v92[8]) = *(_OWORD *)((char *)v6 + v92[8]);
        uint64_t v260 = v92[9];
        uint64_t v248 = (char *)v5 + v260;
        uint64_t v249 = (char *)v6 + v260;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v6 + v260, 1, v55)) {
          goto LABEL_136;
        }
        uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v248, v249, *(void *)(*(void *)(v261 - 8) + 64));
        goto LABEL_524;
      case 0xCu:
        long long v97 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v97;
        _OWORD v5[2] = v6[2];
        uint64_t v98 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v99 = v98[7];
        uint64_t v100 = (char *)v5 + v99;
        uint64_t v101 = (char *)v6 + v99;
        uint64_t v102 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v102))
        {
          uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v102);
        }
        *(_OWORD *)((char *)v5 + v98[8]) = *(_OWORD *)((char *)v6 + v98[8]);
        *(_OWORD *)((char *)v5 + v98[9]) = *(_OWORD *)((char *)v6 + v98[9]);
        *(_OWORD *)((char *)v5 + v98[10]) = *(_OWORD *)((char *)v6 + v98[10]);
        uint64_t v262 = v98[11];
        uint64_t v263 = (char *)v5 + v262;
        uint64_t v264 = (char *)v6 + v262;
        *(void *)(v263 + 13) = *(void *)(v264 + 13);
        *(_OWORD *)uint64_t v263 = *(_OWORD *)v264;
        *(_OWORD *)((char *)v5 + v98[12]) = *(_OWORD *)((char *)v6 + v98[12]);
        goto LABEL_524;
      case 0xDu:
        long long v104 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v104;
        _OWORD v5[2] = v6[2];
        uint64_t v105 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v106 = v105[7];
        uint64_t v107 = (char *)v5 + v106;
        uint64_t v108 = (char *)v6 + v106;
        uint64_t v109 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
          __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v109);
        }
        *(_OWORD *)((char *)v5 + v105[8]) = *(_OWORD *)((char *)v6 + v105[8]);
        *(void *)((char *)v5 + v105[9]) = *(void *)((char *)v6 + v105[9]);
        goto LABEL_524;
      case 0xFu:
        long long v111 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v111;
        long long v112 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v112;
        long long v113 = v6[5];
        v5[4] = v6[4];
        v5[5] = v113;
        *((unsigned char *)v5 + 96) = *((unsigned char *)v6 + 96);
        *(_OWORD *)((char *)v5 + 104) = *(_OWORD *)((char *)v6 + 104);
        uint64_t v114 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v115 = v114[13];
        uint64_t v116 = (char *)v5 + v115;
        uint64_t v117 = (char *)v6 + v115;
        uint64_t v118 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
        {
          uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
        }
        uint64_t v265 = v114[14];
        uint64_t v266 = (char *)v5 + v265;
        uint64_t v267 = (char *)v6 + v265;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v265, 1, v118))
        {
          uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v266, v267, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v118);
        }
        *(_OWORD *)((char *)v5 + v114[15]) = *(_OWORD *)((char *)v6 + v114[15]);
        *(_OWORD *)((char *)v5 + v114[16]) = *(_OWORD *)((char *)v6 + v114[16]);
        *(_OWORD *)((char *)v5 + v114[17]) = *(_OWORD *)((char *)v6 + v114[17]);
        uint64_t v311 = v114[18];
        uint64_t v312 = (char *)v5 + v311;
        uint64_t v313 = (char *)v6 + v311;
        uint64_t v314 = type metadata accessor for DateComponents();
        uint64_t v315 = *(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32);
        v315(v312, v313, v314);
        v315((char *)v5 + v114[19], (char *)v6 + v114[19], v314);
        *(_OWORD *)((char *)v5 + v114[20]) = *(_OWORD *)((char *)v6 + v114[20]);
        *(_OWORD *)((char *)v5 + v114[21]) = *(_OWORD *)((char *)v6 + v114[21]);
        *(_OWORD *)((char *)v5 + v114[22]) = *(_OWORD *)((char *)v6 + v114[22]);
        *(_OWORD *)((char *)v5 + v114[23]) = *(_OWORD *)((char *)v6 + v114[23]);
        *(_OWORD *)((char *)v5 + v114[24]) = *(_OWORD *)((char *)v6 + v114[24]);
        *(_OWORD *)((char *)v5 + v114[25]) = *(_OWORD *)((char *)v6 + v114[25]);
        *(_OWORD *)((char *)v5 + v114[26]) = *(_OWORD *)((char *)v6 + v114[26]);
        *(_OWORD *)((char *)v5 + v114[27]) = *(_OWORD *)((char *)v6 + v114[27]);
        *(_OWORD *)((char *)v5 + v114[28]) = *(_OWORD *)((char *)v6 + v114[28]);
        *(_OWORD *)((char *)v5 + v114[29]) = *(_OWORD *)((char *)v6 + v114[29]);
        *(_OWORD *)((char *)v5 + v114[30]) = *(_OWORD *)((char *)v6 + v114[30]);
        *(_OWORD *)((char *)v5 + v114[31]) = *(_OWORD *)((char *)v6 + v114[31]);
        *(_OWORD *)((char *)v5 + v114[32]) = *(_OWORD *)((char *)v6 + v114[32]);
        *(void *)((char *)v5 + v114[33]) = *(void *)((char *)v6 + v114[33]);
        *(void *)((char *)v5 + v114[34]) = *(void *)((char *)v6 + v114[34]);
        *(_OWORD *)((char *)v5 + v114[35]) = *(_OWORD *)((char *)v6 + v114[35]);
        *(_OWORD *)((char *)v5 + v114[36]) = *(_OWORD *)((char *)v6 + v114[36]);
        *(_OWORD *)((char *)v5 + v114[37]) = *(_OWORD *)((char *)v6 + v114[37]);
        uint64_t v316 = v114[38];
        uint64_t v317 = (char *)v5 + v316;
        uint64_t v318 = (char *)v6 + v316;
        uint64_t v319 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v318, 1, v319))
        {
          uint64_t v320 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v317, v318, *(void *)(*(void *)(v320 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v317, v318, v319);
          __swift_storeEnumTagSinglePayload((uint64_t)v317, 0, 1, v319);
        }
        *(_OWORD *)((char *)v5 + v114[39]) = *(_OWORD *)((char *)v6 + v114[39]);
        *(_OWORD *)((char *)v5 + v114[40]) = *(_OWORD *)((char *)v6 + v114[40]);
        uint64_t v345 = v114[41];
        v346 = (char *)v5 + v345;
        uint64_t v347 = (char *)v6 + v345;
        *(void *)v346 = *(void *)v347;
        v346[8] = v347[8];
        *(_OWORD *)((char *)v5 + v114[42]) = *(_OWORD *)((char *)v6 + v114[42]);
        uint64_t v348 = v114[43];
        v349 = (char *)v5 + v348;
        uint64_t v350 = (char *)v6 + v348;
        *(_OWORD *)v349 = *(_OWORD *)v350;
        *(void *)(v349 + 13) = *(void *)(v350 + 13);
        *(_OWORD *)((char *)v5 + v114[44]) = *(_OWORD *)((char *)v6 + v114[44]);
        *(_OWORD *)((char *)v5 + v114[45]) = *(_OWORD *)((char *)v6 + v114[45]);
        *(_OWORD *)((char *)v5 + v114[46]) = *(_OWORD *)((char *)v6 + v114[46]);
        *(_OWORD *)((char *)v5 + v114[47]) = *(_OWORD *)((char *)v6 + v114[47]);
        uint64_t v351 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v5 + *(int *)(v351 + 48)) = *(void *)((char *)v6 + *(int *)(v351 + 48));
        goto LABEL_524;
      case 0x10u:
        long long v120 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v120;
        long long v121 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v121;
        long long v122 = v6[5];
        v5[4] = v6[4];
        v5[5] = v122;
        *((unsigned char *)v5 + 96) = *((unsigned char *)v6 + 96);
        *(_OWORD *)((char *)v5 + 104) = *(_OWORD *)((char *)v6 + 104);
        *(_OWORD *)((char *)v5 + 120) = *(_OWORD *)((char *)v6 + 120);
        uint64_t v123 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v124 = v123[14];
        uint64_t v125 = (char *)v5 + v124;
        uint64_t v126 = (char *)v6 + v124;
        uint64_t v127 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v126, 1, v127))
        {
          uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
          __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v127);
        }
        uint64_t v269 = v123[15];
        unint64_t v270 = (char *)v5 + v269;
        uint64_t v271 = (char *)v6 + v269;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v269, 1, v127))
        {
          uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v270, v271, *(void *)(*(void *)(v272 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v270, v271, v127);
          __swift_storeEnumTagSinglePayload((uint64_t)v270, 0, 1, v127);
        }
        *(_OWORD *)((char *)v5 + v123[16]) = *(_OWORD *)((char *)v6 + v123[16]);
        *(_OWORD *)((char *)v5 + v123[17]) = *(_OWORD *)((char *)v6 + v123[17]);
        *(_OWORD *)((char *)v5 + v123[18]) = *(_OWORD *)((char *)v6 + v123[18]);
        *(_OWORD *)((char *)v5 + v123[19]) = *(_OWORD *)((char *)v6 + v123[19]);
        *(_OWORD *)((char *)v5 + v123[20]) = *(_OWORD *)((char *)v6 + v123[20]);
        *(void *)((char *)v5 + v123[21]) = *(void *)((char *)v6 + v123[21]);
        *(void *)((char *)v5 + v123[22]) = *(void *)((char *)v6 + v123[22]);
        uint64_t v321 = v123[23];
        uint64_t v322 = (char *)v5 + v321;
        v323 = (char *)v6 + v321;
        v322[8] = v323[8];
        *(void *)uint64_t v322 = *(void *)v323;
        uint64_t v324 = v123[24];
        uint64_t v325 = (char *)v5 + v324;
        uint64_t v326 = (char *)v6 + v324;
        v325[8] = v326[8];
        *(void *)uint64_t v325 = *(void *)v326;
        *(_OWORD *)((char *)v5 + v123[25]) = *(_OWORD *)((char *)v6 + v123[25]);
        *(_OWORD *)((char *)v5 + v123[26]) = *(_OWORD *)((char *)v6 + v123[26]);
        *(_OWORD *)((char *)v5 + v123[27]) = *(_OWORD *)((char *)v6 + v123[27]);
        *(_OWORD *)((char *)v5 + v123[28]) = *(_OWORD *)((char *)v6 + v123[28]);
        uint64_t v327 = v123[29];
        uint64_t v328 = (char *)v5 + v327;
        uint64_t v329 = (char *)v6 + v327;
        *(void *)uint64_t v328 = *(void *)v329;
        v328[8] = v329[8];
        goto LABEL_524;
      case 0x11u:
        long long v129 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v129;
        long long v130 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v130;
        long long v131 = v6[5];
        v5[4] = v6[4];
        v5[5] = v131;
        *((unsigned char *)v5 + 96) = *((unsigned char *)v6 + 96);
        *(_OWORD *)((char *)v5 + 104) = *(_OWORD *)((char *)v6 + 104);
        *(_OWORD *)((char *)v5 + 120) = *(_OWORD *)((char *)v6 + 120);
        uint64_t v132 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v133 = v132[14];
        long long v134 = (char *)v5 + v133;
        long long v135 = (char *)v6 + v133;
        uint64_t v136 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v136))
        {
          uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v134, v135, *(void *)(*(void *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
          __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v136);
        }
        *(_OWORD *)((char *)v5 + v132[15]) = *(_OWORD *)((char *)v6 + v132[15]);
        *(_OWORD *)((char *)v5 + v132[16]) = *(_OWORD *)((char *)v6 + v132[16]);
        *(_OWORD *)((char *)v5 + v132[17]) = *(_OWORD *)((char *)v6 + v132[17]);
        *(_OWORD *)((char *)v5 + v132[18]) = *(_OWORD *)((char *)v6 + v132[18]);
        *(_OWORD *)((char *)v5 + v132[19]) = *(_OWORD *)((char *)v6 + v132[19]);
        *(void *)((char *)v5 + v132[20]) = *(void *)((char *)v6 + v132[20]);
        *(_OWORD *)((char *)v5 + v132[21]) = *(_OWORD *)((char *)v6 + v132[21]);
        *(_OWORD *)((char *)v5 + v132[22]) = *(_OWORD *)((char *)v6 + v132[22]);
        *(_OWORD *)((char *)v5 + v132[23]) = *(_OWORD *)((char *)v6 + v132[23]);
        goto LABEL_524;
      case 0x12u:
        long long v138 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v138;
        long long v139 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v139;
        long long v140 = v6[5];
        v5[4] = v6[4];
        v5[5] = v140;
        long long v141 = v6[7];
        v5[6] = v6[6];
        v5[7] = v141;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v142 = v6[10];
        v5[9] = v6[9];
        v5[10] = v142;
        long long v143 = v6[12];
        v5[11] = v6[11];
        v5[12] = v143;
        long long v144 = v6[14];
        v5[13] = v6[13];
        v5[14] = v144;
        v5[15] = v6[15];
        *((void *)v5 + 32) = *((void *)v6 + 32);
        *(_OWORD *)((char *)v5 + 264) = *(_OWORD *)((char *)v6 + 264);
        *(_OWORD *)((char *)v5 + 280) = *(_OWORD *)((char *)v6 + 280);
        *(_OWORD *)((char *)v5 + 296) = *(_OWORD *)((char *)v6 + 296);
        *(_OWORD *)((char *)v5 + 312) = *(_OWORD *)((char *)v6 + 312);
        *(_OWORD *)((char *)v5 + 328) = *(_OWORD *)((char *)v6 + 328);
        *(_OWORD *)((char *)v5 + 344) = *(_OWORD *)((char *)v6 + 344);
        *(_OWORD *)((char *)v5 + 360) = *(_OWORD *)((char *)v6 + 360);
        *((unsigned char *)v5 + 384) = *((unsigned char *)v6 + 384);
        *((void *)v5 + 47) = *((void *)v6 + 47);
        *(_OWORD *)((char *)v5 + 392) = *(_OWORD *)((char *)v6 + 392);
        *(_OWORD *)((char *)v5 + 408) = *(_OWORD *)((char *)v6 + 408);
        uint64_t v145 = type metadata accessor for RentalCarReservation(0);
        uint64_t v146 = *(int *)(v145 + 140);
        uint64_t v147 = (char *)v5 + v146;
        uint64_t v148 = (char *)v6 + v146;
        uint64_t v55 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v148, 1, v55))
        {
          uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v147, v148, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, v55);
        }
        uint64_t v273 = *(int *)(v145 + 144);
        uint64_t v248 = (char *)v5 + v273;
        uint64_t v249 = (char *)v6 + v273;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v273, 1, v55)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 0x13u:
        long long v150 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v150;
        long long v151 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v151;
        long long v152 = v6[5];
        v5[4] = v6[4];
        v5[5] = v152;
        long long v153 = v6[7];
        v5[6] = v6[6];
        v5[7] = v153;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v154 = v6[10];
        v5[9] = v6[9];
        v5[10] = v154;
        long long v155 = v6[12];
        v5[11] = v6[11];
        v5[12] = v155;
        *((void *)v5 + 26) = *((void *)v6 + 26);
        *(_OWORD *)((char *)v5 + 216) = *(_OWORD *)((char *)v6 + 216);
        *(_OWORD *)((char *)v5 + 232) = *(_OWORD *)((char *)v6 + 232);
        *(_OWORD *)((char *)v5 + 248) = *(_OWORD *)((char *)v6 + 248);
        *(_OWORD *)((char *)v5 + 264) = *(_OWORD *)((char *)v6 + 264);
        *((unsigned char *)v5 + 296) = *((unsigned char *)v6 + 296);
        uint64_t v156 = *((void *)v6 + 36);
        *((void *)v5 + 35) = *((void *)v6 + 35);
        *((void *)v5 + 36) = v156;
        uint64_t v157 = type metadata accessor for TicketedTransportation(0);
        uint64_t v158 = *(int *)(v157 + 112);
        uint64_t v159 = (char *)v5 + v158;
        uint64_t v160 = (char *)v6 + v158;
        uint64_t v55 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v160, 1, v55))
        {
          uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v159, v160, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v159, 0, 1, v55);
        }
        uint64_t v274 = *(int *)(v157 + 116);
        uint64_t v248 = (char *)v5 + v274;
        uint64_t v249 = (char *)v6 + v274;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v274, 1, v55)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 0x14u:
        long long v162 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v162;
        long long v163 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v163;
        long long v164 = v6[5];
        v5[4] = v6[4];
        v5[5] = v164;
        long long v165 = v6[7];
        v5[6] = v6[6];
        v5[7] = v165;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v166 = v6[10];
        v5[9] = v6[9];
        v5[10] = v166;
        long long v167 = v6[12];
        v5[11] = v6[11];
        v5[12] = v167;
        long long v168 = v6[14];
        v5[13] = v6[13];
        v5[14] = v168;
        *((void *)v5 + 30) = *((void *)v6 + 30);
        *(_OWORD *)((char *)v5 + 248) = *(_OWORD *)((char *)v6 + 248);
        *(_OWORD *)((char *)v5 + 264) = *(_OWORD *)((char *)v6 + 264);
        *((unsigned char *)v5 + 296) = *((unsigned char *)v6 + 296);
        uint64_t v169 = *((void *)v6 + 36);
        *((void *)v5 + 35) = *((void *)v6 + 35);
        *((void *)v5 + 36) = v169;
        v5[19] = v6[19];
        uint64_t v170 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v171 = v170[29];
        uint64_t v172 = (char *)v5 + v171;
        uint64_t v173 = (char *)v6 + v171;
        uint64_t v174 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v173, 1, v174))
        {
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v172, v173, *(void *)(*(void *)(v175 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
          __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v174);
        }
        *(_OWORD *)((char *)v5 + v170[30]) = *(_OWORD *)((char *)v6 + v170[30]);
        uint64_t v275 = v170[31];
        uint64_t v276 = (char *)v5 + v275;
        uint64_t v277 = (char *)v6 + v275;
        uint64_t v278 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v277, 1, v278))
        {
          uint64_t v279 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 32))(v276, v277, v278);
          __swift_storeEnumTagSinglePayload((uint64_t)v276, 0, 1, v278);
        }
        uint64_t v330 = v170[32];
        uint64_t v331 = (char *)v5 + v330;
        uint64_t v332 = (char *)v6 + v330;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v330, 1, v278))
        {
          uint64_t v333 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v331, v332, *(void *)(*(void *)(v333 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 32))(v331, v332, v278);
          __swift_storeEnumTagSinglePayload((uint64_t)v331, 0, 1, v278);
        }
        goto LABEL_524;
      case 0x15u:
        long long v176 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v176;
        long long v177 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v177;
        long long v178 = v6[5];
        v5[4] = v6[4];
        v5[5] = v178;
        long long v179 = v6[7];
        v5[6] = v6[6];
        v5[7] = v179;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v180 = v6[10];
        v5[9] = v6[9];
        v5[10] = v180;
        long long v181 = v6[12];
        v5[11] = v6[11];
        v5[12] = v181;
        long long v182 = v6[14];
        v5[13] = v6[13];
        v5[14] = v182;
        long long v183 = v6[16];
        v5[15] = v6[15];
        v5[16] = v183;
        *((unsigned char *)v5 + 280) = *((unsigned char *)v6 + 280);
        *((void *)v5 + 34) = *((void *)v6 + 34);
        v5[18] = v6[18];
        uint64_t v184 = type metadata accessor for Appointment(0);
        uint64_t v185 = *(int *)(v184 + 108);
        size_t v186 = (char *)v5 + v185;
        uint64_t v187 = (char *)v6 + v185;
        uint64_t v55 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v187, 1, v55))
        {
          uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v186, v187, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, v55);
        }
        uint64_t v280 = *(int *)(v184 + 112);
        uint64_t v248 = (char *)v5 + v280;
        uint64_t v249 = (char *)v6 + v280;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v280, 1, v55))
        {
LABEL_106:
          uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v248, v249, *(void *)(*(void *)(v281 - 8) + 64));
        }
        else
        {
LABEL_136:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v248, v249, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v55);
        }
        goto LABEL_524;
      case 0x16u:
        long long v189 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v189;
        long long v190 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v190;
        long long v191 = v6[5];
        v5[4] = v6[4];
        v5[5] = v191;
        long long v192 = v6[7];
        v5[6] = v6[6];
        v5[7] = v192;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v193 = v6[10];
        v5[9] = v6[9];
        v5[10] = v193;
        long long v194 = v6[12];
        v5[11] = v6[11];
        v5[12] = v194;
        long long v195 = v6[14];
        v5[13] = v6[13];
        v5[14] = v195;
        v5[15] = v6[15];
        uint64_t v196 = (int *)type metadata accessor for Party(0);
        uint64_t v197 = v196[24];
        uint64_t v198 = (char *)v5 + v197;
        uint64_t v199 = (char *)v6 + v197;
        uint64_t v200 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v200))
        {
          uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
          __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v200);
        }
        uint64_t v282 = v196[25];
        uint64_t v283 = (char *)v5 + v282;
        uint64_t v284 = (char *)v6 + v282;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v282, 1, v200))
        {
          uint64_t v285 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v283, v284, *(void *)(*(void *)(v285 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v283, v284, v200);
          __swift_storeEnumTagSinglePayload((uint64_t)v283, 0, 1, v200);
        }
        uint64_t v334 = v196[26];
        uint64_t v81 = (char *)v5 + v334;
        uint64_t v82 = (char *)v6 + v334;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0x17u:
        long long v202 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v202;
        long long v203 = v6[3];
        _OWORD v5[2] = v6[2];
        v5[3] = v203;
        long long v204 = v6[5];
        v5[4] = v6[4];
        v5[5] = v204;
        long long v205 = v6[7];
        v5[6] = v6[6];
        v5[7] = v205;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v206 = v6[10];
        v5[9] = v6[9];
        v5[10] = v206;
        long long v207 = v6[12];
        v5[11] = v6[11];
        v5[12] = v207;
        v5[13] = v6[13];
        long long v208 = (int *)type metadata accessor for Trip(0);
        uint64_t v209 = v208[22];
        uint64_t v210 = (char *)v5 + v209;
        uint64_t v211 = (char *)v6 + v209;
        uint64_t v212 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v211, 1, v212))
        {
          uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v210, v211, *(void *)(*(void *)(v213 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 32))(v210, v211, v212);
          __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v212);
        }
        uint64_t v286 = v208[23];
        uint64_t v287 = (char *)v5 + v286;
        uint64_t v288 = (char *)v6 + v286;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v286, 1, v212))
        {
          uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v287, v288, *(void *)(*(void *)(v289 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 32))(v287, v288, v212);
          __swift_storeEnumTagSinglePayload((uint64_t)v287, 0, 1, v212);
        }
        uint64_t v335 = v208[24];
        uint64_t v336 = (char *)v5 + v335;
        uint64_t v337 = (char *)v6 + v335;
        *(void *)uint64_t v336 = *(void *)v337;
        v336[8] = v337[8];
        uint64_t v338 = v208[25];
        uint64_t v81 = (char *)v5 + v338;
        uint64_t v82 = (char *)v6 + v338;
        uint64_t v83 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
        {
LABEL_146:
          uint64_t v339 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v81, v82, *(void *)(*(void *)(v339 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
        }
        goto LABEL_524;
      case 0x18u:
        long long v214 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v214;
        _OWORD v5[2] = v6[2];
        uint64_t v215 = (int *)type metadata accessor for GlobalItem();
        uint64_t v216 = v215[7];
        uint64_t v217 = (char *)v5 + v216;
        uint64_t v218 = (char *)v6 + v216;
        uint64_t v219 = type metadata accessor for GlobalDialog();
        if (__swift_getEnumTagSinglePayload((uint64_t)v218, 1, v219))
        {
          uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
          __swift_storeEnumTagSinglePayload((uint64_t)v217, 0, 1, v219);
        }
        *(_OWORD *)((char *)v5 + v215[8]) = *(_OWORD *)((char *)v6 + v215[8]);
        *((unsigned char *)v5 + v215[9]) = *((unsigned char *)v6 + v215[9]);
        uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v5 + *(int *)(v290 + 48)) = *(void *)((char *)v6 + *(int *)(v290 + 48));
        goto LABEL_524;
      case 0x1Au:
        long long v221 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v221;
        _OWORD v5[2] = v6[2];
        *((void *)v5 + 6) = *((void *)v6 + 6);
        uint64_t v222 = (int *)type metadata accessor for Answer(0);
        uint64_t v223 = v222[9];
        uint64_t v224 = (char *)v5 + v223;
        uint64_t v225 = (char *)v6 + v223;
        uint64_t v226 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v225, 1, v226))
        {
          uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v224, v225, *(void *)(*(void *)(v227 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 32))(v224, v225, v226);
          __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v226);
        }
        *((unsigned char *)v5 + v222[10]) = *((unsigned char *)v6 + v222[10]);
        *(_OWORD *)((char *)v5 + v222[11]) = *(_OWORD *)((char *)v6 + v222[11]);
LABEL_524:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
    uint64_t v1129 = type metadata accessor for SearchResult(0);
    *(void *)((char *)v5 + *(int *)(v1129 + 20)) = *(void *)((char *)v6 + *(int *)(v1129 + 20));
    *(_OWORD *)((char *)v5 + *(int *)(v1129 + 24)) = *(_OWORD *)((char *)v6 + *(int *)(v1129 + 24));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for ResultsDialog(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v6 = a2 + 1;
  if ((unint64_t)(*(void *)(a1 + 16) - 1) < 3) {
    goto LABEL_4;
  }
  uint64_t v7 = a2[2];
  if ((unint64_t)(v7 - 1) < 3)
  {
    outlined destroy of PQAVerificationModelProtocol?(a1 + 8, &demangling cache variable for type metadata for (disambiguationDialog: String?));
LABEL_4:
    *(_OWORD *)(a1 + 8) = *v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = *(void *)v6;
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  if ((void *)a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    long long v9 = (_OWORD *)(a1 + v8);
    long long v10 = (_OWORD *)((char *)a2 + v8);
    outlined destroy of AnswerSynthesisResult(a1 + v8, (void (*)(void))type metadata accessor for AnswerSynthesisResult);
    uint64_t v11 = type metadata accessor for AnswerSynthesisResult();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          long long v13 = v10[1];
          *long long v9 = *v10;
          v9[1] = v13;
          long long v14 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v14;
          long long v15 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v15;
          uint64_t v16 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v17 = v16[12];
          uint64_t v18 = (char *)v9 + v17;
          uint64_t v19 = (char *)v10 + v17;
          uint64_t v1163 = type metadata accessor for Date();
          uint64_t v1160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1163 - 8) + 32);
          v1160(v18, v19, v1163);
          *(void *)((char *)v9 + v16[13]) = *(void *)((char *)v10 + v16[13]);
          *(void *)((char *)v9 + v16[14]) = *(void *)((char *)v10 + v16[14]);
          *(void *)((char *)v9 + v16[15]) = *(void *)((char *)v10 + v16[15]);
          *((unsigned char *)v9 + v16[16]) = *((unsigned char *)v10 + v16[16]);
          *((unsigned char *)v9 + v16[17]) = *((unsigned char *)v10 + v16[17]);
          *(_OWORD *)((char *)v9 + v16[18]) = *(_OWORD *)((char *)v10 + v16[18]);
          uint64_t v20 = v16[19];
          uint64_t v21 = (char *)v9 + v20;
          uint64_t v22 = (char *)v10 + v20;
          long long v23 = *((_OWORD *)v22 + 1);
          *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
          *((_OWORD *)v21 + 1) = v23;
          *((void *)v21 + 4) = *((void *)v22 + 4);
          *(_OWORD *)((char *)v9 + v16[20]) = *(_OWORD *)((char *)v10 + v16[20]);
          uint64_t v1166 = v16;
          uint64_t v24 = v16[21];
          uint64_t v25 = (_OWORD *)((char *)v9 + v24);
          uint64_t v26 = (_OWORD *)((char *)v10 + v24);
          long long v27 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27))
          {
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
            uint64_t v29 = v1166;
          }
          else
          {
            *uint64_t v25 = *v26;
            uint64_t v230 = v27[5];
            uint64_t v231 = (_OWORD *)((char *)v25 + v230);
            uint64_t v232 = (_OWORD *)((char *)v26 + v230);
            uint64_t v233 = type metadata accessor for RentalCarReservation(0);
            uint64_t v1153 = v27;
            uint64_t v1156 = v25;
            __dst = v26;
            if (__swift_getEnumTagSinglePayload((uint64_t)v232, 1, v233))
            {
              uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
            }
            else
            {
              long long v359 = v232[1];
              *uint64_t v231 = *v232;
              v231[1] = v359;
              long long v360 = v232[3];
              v231[2] = v232[2];
              v231[3] = v360;
              long long v361 = v232[5];
              v231[4] = v232[4];
              v231[5] = v361;
              long long v362 = v232[7];
              v231[6] = v232[6];
              v231[7] = v362;
              *((unsigned char *)v231 + 128) = *((unsigned char *)v232 + 128);
              *(_WORD *)((char *)v231 + 129) = *(_WORD *)((char *)v232 + 129);
              *((void *)v231 + 17) = *((void *)v232 + 17);
              long long v363 = v232[10];
              v231[9] = v232[9];
              v231[10] = v363;
              long long v364 = v232[12];
              v231[11] = v232[11];
              v231[12] = v364;
              long long v365 = v232[14];
              v231[13] = v232[13];
              v231[14] = v365;
              v231[15] = v232[15];
              *((void *)v231 + 32) = *((void *)v232 + 32);
              *(_OWORD *)((char *)v231 + 264) = *(_OWORD *)((char *)v232 + 264);
              *(_OWORD *)((char *)v231 + 280) = *(_OWORD *)((char *)v232 + 280);
              *(_OWORD *)((char *)v231 + 296) = *(_OWORD *)((char *)v232 + 296);
              *(_OWORD *)((char *)v231 + 312) = *(_OWORD *)((char *)v232 + 312);
              *(_OWORD *)((char *)v231 + 328) = *(_OWORD *)((char *)v232 + 328);
              *(_OWORD *)((char *)v231 + 344) = *(_OWORD *)((char *)v232 + 344);
              *(_OWORD *)((char *)v231 + 360) = *(_OWORD *)((char *)v232 + 360);
              *((unsigned char *)v231 + 384) = *((unsigned char *)v232 + 384);
              *((void *)v231 + 47) = *((void *)v232 + 47);
              *(_OWORD *)((char *)v231 + 392) = *(_OWORD *)((char *)v232 + 392);
              *(_OWORD *)((char *)v231 + 408) = *(_OWORD *)((char *)v232 + 408);
              uint64_t v366 = *(int *)(v233 + 140);
              long long v367 = (char *)v231 + v366;
              long long v368 = (char *)v232 + v366;
              if (__swift_getEnumTagSinglePayload((uint64_t)v232 + v366, 1, v1163))
              {
                uint64_t v369 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v367, v368, *(void *)(*(void *)(v369 - 8) + 64));
              }
              else
              {
                v1160(v367, v368, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v367, 0, 1, v1163);
              }
              uint64_t v392 = *(int *)(v233 + 144);
              uint64_t v393 = (char *)v231 + v392;
              uint64_t v394 = (char *)v232 + v392;
              if (__swift_getEnumTagSinglePayload((uint64_t)v232 + v392, 1, v1163))
              {
                uint64_t v395 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v393, v394, *(void *)(*(void *)(v395 - 8) + 64));
              }
              else
              {
                v1160(v393, v394, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v393, 0, 1, v1163);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v231, 0, 1, v233);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            uint64_t v404 = v27[6];
            long long v405 = (_OWORD *)((char *)v25 + v404);
            long long v406 = (_OWORD *)((char *)v26 + v404);
            uint64_t v407 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v406, 1, v407))
            {
              uint64_t v408 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v405, v406, *(void *)(*(void *)(v408 - 8) + 64));
            }
            else
            {
              long long v409 = v406[1];
              *long long v405 = *v406;
              v405[1] = v409;
              long long v410 = v406[3];
              v405[2] = v406[2];
              v405[3] = v410;
              long long v411 = v406[5];
              v405[4] = v406[4];
              v405[5] = v411;
              long long v412 = v406[7];
              v405[6] = v406[6];
              v405[7] = v412;
              *((unsigned char *)v405 + 128) = *((unsigned char *)v406 + 128);
              *(_WORD *)((char *)v405 + 129) = *(_WORD *)((char *)v406 + 129);
              *((void *)v405 + 17) = *((void *)v406 + 17);
              long long v413 = v406[10];
              v405[9] = v406[9];
              v405[10] = v413;
              long long v414 = v406[12];
              v405[11] = v406[11];
              v405[12] = v414;
              *((void *)v405 + 26) = *((void *)v406 + 26);
              *(_OWORD *)((char *)v405 + 216) = *(_OWORD *)((char *)v406 + 216);
              *(_OWORD *)((char *)v405 + 232) = *(_OWORD *)((char *)v406 + 232);
              *(_OWORD *)((char *)v405 + 248) = *(_OWORD *)((char *)v406 + 248);
              *(_OWORD *)((char *)v405 + 264) = *(_OWORD *)((char *)v406 + 264);
              *((unsigned char *)v405 + 296) = *((unsigned char *)v406 + 296);
              uint64_t v415 = *((void *)v406 + 36);
              *((void *)v405 + 35) = *((void *)v406 + 35);
              *((void *)v405 + 36) = v415;
              uint64_t v416 = *(int *)(v407 + 112);
              uint64_t v417 = (char *)v405 + v416;
              long long v418 = (char *)v406 + v416;
              if (__swift_getEnumTagSinglePayload((uint64_t)v406 + v416, 1, v1163))
              {
                uint64_t v419 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v417, v418, *(void *)(*(void *)(v419 - 8) + 64));
              }
              else
              {
                v1160(v417, v418, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v417, 0, 1, v1163);
              }
              uint64_t v453 = *(int *)(v407 + 116);
              uint64_t v454 = (char *)v405 + v453;
              uint64_t v455 = (char *)v406 + v453;
              if (__swift_getEnumTagSinglePayload((uint64_t)v406 + v453, 1, v1163))
              {
                uint64_t v456 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v454, v455, *(void *)(*(void *)(v456 - 8) + 64));
              }
              else
              {
                v1160(v454, v455, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v454, 0, 1, v1163);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v405, 0, 1, v407);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            uint64_t v465 = v27[7];
            long long v466 = (_OWORD *)((char *)v25 + v465);
            long long v467 = (_OWORD *)((char *)v26 + v465);
            long long v468 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v467, 1, (uint64_t)v468))
            {
              uint64_t v469 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v466, v467, *(void *)(*(void *)(v469 - 8) + 64));
            }
            else
            {
              long long v470 = v467[1];
              *long long v466 = *v467;
              v466[1] = v470;
              long long v471 = v467[3];
              v466[2] = v467[2];
              v466[3] = v471;
              long long v472 = v467[5];
              v466[4] = v467[4];
              v466[5] = v472;
              long long v473 = v467[7];
              v466[6] = v467[6];
              v466[7] = v473;
              *((unsigned char *)v466 + 128) = *((unsigned char *)v467 + 128);
              *(_WORD *)((char *)v466 + 129) = *(_WORD *)((char *)v467 + 129);
              *((void *)v466 + 17) = *((void *)v467 + 17);
              long long v474 = v467[10];
              v466[9] = v467[9];
              v466[10] = v474;
              long long v475 = v467[12];
              v466[11] = v467[11];
              v466[12] = v475;
              long long v476 = v467[14];
              v466[13] = v467[13];
              v466[14] = v476;
              *((void *)v466 + 30) = *((void *)v467 + 30);
              *(_OWORD *)((char *)v466 + 248) = *(_OWORD *)((char *)v467 + 248);
              *(_OWORD *)((char *)v466 + 264) = *(_OWORD *)((char *)v467 + 264);
              *((unsigned char *)v466 + 296) = *((unsigned char *)v467 + 296);
              uint64_t v477 = *((void *)v467 + 36);
              *((void *)v466 + 35) = *((void *)v467 + 35);
              *((void *)v466 + 36) = v477;
              v466[19] = v467[19];
              uint64_t v478 = v468[29];
              uint64_t v479 = (char *)v466 + v478;
              long long v480 = (char *)v467 + v478;
              uint64_t v481 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v480, 1, v481))
              {
                uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v479, v480, *(void *)(*(void *)(v482 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v481 - 8) + 32))(v479, v480, v481);
                __swift_storeEnumTagSinglePayload((uint64_t)v479, 0, 1, v481);
              }
              *(_OWORD *)((char *)v466 + v468[30]) = *(_OWORD *)((char *)v467 + v468[30]);
              uint64_t v519 = v468[31];
              uint64_t v520 = (char *)v466 + v519;
              uint64_t v521 = (char *)v467 + v519;
              if (__swift_getEnumTagSinglePayload((uint64_t)v467 + v519, 1, v1163))
              {
                uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v520, v521, *(void *)(*(void *)(v522 - 8) + 64));
              }
              else
              {
                v1160(v520, v521, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v520, 0, 1, v1163);
              }
              uint64_t v531 = v468[32];
              uint64_t v532 = (char *)v466 + v531;
              uint64_t v533 = (char *)v467 + v531;
              if (__swift_getEnumTagSinglePayload((uint64_t)v467 + v531, 1, v1163))
              {
                uint64_t v534 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v532, v533, *(void *)(*(void *)(v534 - 8) + 64));
              }
              else
              {
                v1160(v532, v533, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v532, 0, 1, v1163);
              }
              uint64_t v26 = __dst;
              __swift_storeEnumTagSinglePayload((uint64_t)v466, 0, 1, (uint64_t)v468);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            uint64_t v543 = v27[8];
            long long v544 = (_OWORD *)((char *)v25 + v543);
            long long v545 = (_OWORD *)((char *)v26 + v543);
            uint64_t v546 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v545, 1, v546))
            {
              uint64_t v547 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v544, v545, *(void *)(*(void *)(v547 - 8) + 64));
            }
            else
            {
              long long v548 = v545[1];
              *long long v544 = *v545;
              v544[1] = v548;
              long long v549 = v545[3];
              v544[2] = v545[2];
              v544[3] = v549;
              long long v550 = v545[5];
              v544[4] = v545[4];
              v544[5] = v550;
              long long v551 = v545[7];
              v544[6] = v545[6];
              v544[7] = v551;
              *((unsigned char *)v544 + 128) = *((unsigned char *)v545 + 128);
              *(_WORD *)((char *)v544 + 129) = *(_WORD *)((char *)v545 + 129);
              *((void *)v544 + 17) = *((void *)v545 + 17);
              long long v552 = v545[10];
              v544[9] = v545[9];
              v544[10] = v552;
              long long v553 = v545[12];
              v544[11] = v545[11];
              v544[12] = v553;
              long long v554 = v545[14];
              v544[13] = v545[13];
              v544[14] = v554;
              long long v555 = v545[16];
              v544[15] = v545[15];
              v544[16] = v555;
              *((unsigned char *)v544 + 280) = *((unsigned char *)v545 + 280);
              *((void *)v544 + 34) = *((void *)v545 + 34);
              v544[18] = v545[18];
              uint64_t v556 = *(int *)(v546 + 108);
              long long v557 = (char *)v544 + v556;
              long long v558 = (char *)v545 + v556;
              if (__swift_getEnumTagSinglePayload((uint64_t)v545 + v556, 1, v1163))
              {
                uint64_t v559 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v557, v558, *(void *)(*(void *)(v559 - 8) + 64));
              }
              else
              {
                v1160(v557, v558, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v557, 0, 1, v1163);
              }
              uint64_t v595 = *(int *)(v546 + 112);
              uint64_t v596 = (char *)v544 + v595;
              uint64_t v597 = (char *)v545 + v595;
              if (__swift_getEnumTagSinglePayload((uint64_t)v545 + v595, 1, v1163))
              {
                uint64_t v598 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v596, v597, *(void *)(*(void *)(v598 - 8) + 64));
              }
              else
              {
                v1160(v596, v597, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v596, 0, 1, v1163);
              }
              uint64_t v26 = __dst;
              __swift_storeEnumTagSinglePayload((uint64_t)v544, 0, 1, v546);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            uint64_t v607 = v27[9];
            long long v608 = (_OWORD *)((char *)v25 + v607);
            uint64_t v609 = (_OWORD *)((char *)v26 + v607);
            uint64_t v610 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v609, 1, (uint64_t)v610))
            {
              uint64_t v611 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v608, v609, *(void *)(*(void *)(v611 - 8) + 64));
            }
            else
            {
              long long v612 = v609[1];
              _OWORD *v608 = *v609;
              v608[1] = v612;
              long long v613 = v609[3];
              v608[2] = v609[2];
              v608[3] = v613;
              long long v614 = v609[5];
              v608[4] = v609[4];
              v608[5] = v614;
              long long v615 = v609[7];
              v608[6] = v609[6];
              v608[7] = v615;
              *((unsigned char *)v608 + 128) = *((unsigned char *)v609 + 128);
              *(_WORD *)((char *)v608 + 129) = *(_WORD *)((char *)v609 + 129);
              *((void *)v608 + 17) = *((void *)v609 + 17);
              long long v616 = v609[10];
              v608[9] = v609[9];
              v608[10] = v616;
              long long v617 = v609[12];
              v608[11] = v609[11];
              v608[12] = v617;
              long long v618 = v609[14];
              v608[13] = v609[13];
              v608[14] = v618;
              v608[15] = v609[15];
              uint64_t v619 = v610[24];
              long long v620 = (char *)v608 + v619;
              long long v621 = (char *)v609 + v619;
              if (__swift_getEnumTagSinglePayload((uint64_t)v609 + v619, 1, v1163))
              {
                uint64_t v622 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v620, v621, *(void *)(*(void *)(v622 - 8) + 64));
              }
              else
              {
                v1160(v620, v621, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v620, 0, 1, v1163);
              }
              uint64_t v656 = v610[25];
              uint64_t v657 = (char *)v608 + v656;
              v658 = (char *)v609 + v656;
              if (__swift_getEnumTagSinglePayload((uint64_t)v609 + v656, 1, v1163))
              {
                uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v657, v658, *(void *)(*(void *)(v659 - 8) + 64));
              }
              else
              {
                v1160(v657, v658, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v1163);
              }
              uint64_t v668 = v610[26];
              uint64_t v669 = (char *)v608 + v668;
              uint64_t v670 = (char *)v609 + v668;
              uint64_t v671 = type metadata accessor for URL();
              uint64_t v25 = v1156;
              if (__swift_getEnumTagSinglePayload((uint64_t)v670, 1, v671))
              {
                uint64_t v672 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v669, v670, *(void *)(*(void *)(v672 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 32))(v669, v670, v671);
                __swift_storeEnumTagSinglePayload((uint64_t)v669, 0, 1, v671);
              }
              long long v27 = v1153;
              __swift_storeEnumTagSinglePayload((uint64_t)v608, 0, 1, (uint64_t)v610);
              uint64_t v26 = __dst;
            }
            uint64_t v682 = v27[10];
            uint64_t v683 = (_OWORD *)((char *)v25 + v682);
            uint64_t v684 = (_OWORD *)((char *)v26 + v682);
            uint64_t v685 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v684, 1, (uint64_t)v685))
            {
              uint64_t v686 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v683, v684, *(void *)(*(void *)(v686 - 8) + 64));
            }
            else
            {
              long long v687 = v684[1];
              *uint64_t v683 = *v684;
              v683[1] = v687;
              long long v688 = v684[3];
              v683[2] = v684[2];
              v683[3] = v688;
              long long v689 = v684[5];
              v683[4] = v684[4];
              v683[5] = v689;
              long long v690 = v684[7];
              v683[6] = v684[6];
              v683[7] = v690;
              *((unsigned char *)v683 + 128) = *((unsigned char *)v684 + 128);
              *(_WORD *)((char *)v683 + 129) = *(_WORD *)((char *)v684 + 129);
              *((void *)v683 + 17) = *((void *)v684 + 17);
              long long v691 = v684[10];
              v683[9] = v684[9];
              v683[10] = v691;
              long long v692 = v684[12];
              v683[11] = v684[11];
              v683[12] = v692;
              v683[13] = v684[13];
              uint64_t v693 = v685[22];
              long long v694 = (char *)v683 + v693;
              long long v695 = (char *)v684 + v693;
              if (__swift_getEnumTagSinglePayload((uint64_t)v684 + v693, 1, v1163))
              {
                uint64_t v696 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v694, v695, *(void *)(*(void *)(v696 - 8) + 64));
              }
              else
              {
                v1160(v694, v695, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v694, 0, 1, v1163);
              }
              uint64_t v728 = v685[23];
              uint64_t v729 = (char *)v683 + v728;
              uint64_t v730 = (char *)v684 + v728;
              if (__swift_getEnumTagSinglePayload((uint64_t)v684 + v728, 1, v1163))
              {
                uint64_t v731 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v729, v730, *(void *)(*(void *)(v731 - 8) + 64));
              }
              else
              {
                v1160(v729, v730, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v729, 0, 1, v1163);
              }
              uint64_t v740 = v685[24];
              uint64_t v741 = (char *)v683 + v740;
              uint64_t v742 = (char *)v684 + v740;
              *(void *)uint64_t v741 = *(void *)v742;
              v741[8] = v742[8];
              uint64_t v743 = v685[25];
              uint64_t v744 = (char *)v683 + v743;
              uint64_t v745 = (char *)v684 + v743;
              uint64_t v746 = type metadata accessor for URL();
              uint64_t v25 = v1156;
              if (__swift_getEnumTagSinglePayload((uint64_t)v745, 1, v746))
              {
                uint64_t v747 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v744, v745, *(void *)(*(void *)(v747 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v746 - 8) + 32))(v744, v745, v746);
                __swift_storeEnumTagSinglePayload((uint64_t)v744, 0, 1, v746);
              }
              long long v27 = v1153;
              __swift_storeEnumTagSinglePayload((uint64_t)v683, 0, 1, (uint64_t)v685);
              uint64_t v26 = __dst;
            }
            uint64_t v763 = v27[11];
            uint64_t v764 = (_OWORD *)((char *)v25 + v763);
            uint64_t v765 = (_OWORD *)((char *)v26 + v763);
            uint64_t v766 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v765, 1, (uint64_t)v766))
            {
              uint64_t v767 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v764, v765, *(void *)(*(void *)(v767 - 8) + 64));
            }
            else
            {
              long long v768 = v765[1];
              _OWORD *v764 = *v765;
              v764[1] = v768;
              long long v769 = v765[3];
              v764[2] = v765[2];
              v764[3] = v769;
              long long v770 = v765[5];
              v764[4] = v765[4];
              v764[5] = v770;
              *((unsigned char *)v764 + 96) = *((unsigned char *)v765 + 96);
              *(_OWORD *)((char *)v764 + 104) = *(_OWORD *)((char *)v765 + 104);
              uint64_t v771 = v766[13];
              uint64_t v772 = (char *)v764 + v771;
              uint64_t v773 = (char *)v765 + v771;
              uint64_t v774 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v773, 1, v774))
              {
                uint64_t v775 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v772, v773, *(void *)(*(void *)(v775 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v774 - 8) + 32))(v772, v773, v774);
                __swift_storeEnumTagSinglePayload((uint64_t)v772, 0, 1, v774);
              }
              uint64_t v801 = v766[14];
              uint64_t v802 = (char *)v764 + v801;
              uint64_t v803 = (char *)v765 + v801;
              if (__swift_getEnumTagSinglePayload((uint64_t)v765 + v801, 1, v774))
              {
                uint64_t v804 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v802, v803, *(void *)(*(void *)(v804 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v774 - 8) + 32))(v802, v803, v774);
                __swift_storeEnumTagSinglePayload((uint64_t)v802, 0, 1, v774);
              }
              *(_OWORD *)((char *)v764 + v766[15]) = *(_OWORD *)((char *)v765 + v766[15]);
              *(_OWORD *)((char *)v764 + v766[16]) = *(_OWORD *)((char *)v765 + v766[16]);
              *(_OWORD *)((char *)v764 + v766[17]) = *(_OWORD *)((char *)v765 + v766[17]);
              uint64_t v813 = v766[18];
              uint64_t v1144 = (char *)v765 + v813;
              uint64_t v1145 = (char *)v764 + v813;
              uint64_t v814 = type metadata accessor for DateComponents();
              uint64_t v815 = *(void (**)(char *, char *, uint64_t))(*(void *)(v814 - 8) + 32);
              v815(v1145, v1144, v814);
              v815((char *)v764 + v766[19], (char *)v765 + v766[19], v814);
              *(_OWORD *)((char *)v764 + v766[20]) = *(_OWORD *)((char *)v765 + v766[20]);
              *(_OWORD *)((char *)v764 + v766[21]) = *(_OWORD *)((char *)v765 + v766[21]);
              *(_OWORD *)((char *)v764 + v766[22]) = *(_OWORD *)((char *)v765 + v766[22]);
              *(_OWORD *)((char *)v764 + v766[23]) = *(_OWORD *)((char *)v765 + v766[23]);
              *(_OWORD *)((char *)v764 + v766[24]) = *(_OWORD *)((char *)v765 + v766[24]);
              *(_OWORD *)((char *)v764 + v766[25]) = *(_OWORD *)((char *)v765 + v766[25]);
              *(_OWORD *)((char *)v764 + v766[26]) = *(_OWORD *)((char *)v765 + v766[26]);
              *(_OWORD *)((char *)v764 + v766[27]) = *(_OWORD *)((char *)v765 + v766[27]);
              *(_OWORD *)((char *)v764 + v766[28]) = *(_OWORD *)((char *)v765 + v766[28]);
              *(_OWORD *)((char *)v764 + v766[29]) = *(_OWORD *)((char *)v765 + v766[29]);
              *(_OWORD *)((char *)v764 + v766[30]) = *(_OWORD *)((char *)v765 + v766[30]);
              *(_OWORD *)((char *)v764 + v766[31]) = *(_OWORD *)((char *)v765 + v766[31]);
              *(_OWORD *)((char *)v764 + v766[32]) = *(_OWORD *)((char *)v765 + v766[32]);
              *(void *)((char *)v764 + v766[33]) = *(void *)((char *)v765 + v766[33]);
              *(void *)((char *)v764 + v766[34]) = *(void *)((char *)v765 + v766[34]);
              *(_OWORD *)((char *)v764 + v766[35]) = *(_OWORD *)((char *)v765 + v766[35]);
              *(_OWORD *)((char *)v764 + v766[36]) = *(_OWORD *)((char *)v765 + v766[36]);
              *(_OWORD *)((char *)v764 + v766[37]) = *(_OWORD *)((char *)v765 + v766[37]);
              uint64_t v816 = v766[38];
              uint64_t v817 = (char *)v764 + v816;
              uint64_t v818 = (char *)v765 + v816;
              if (__swift_getEnumTagSinglePayload((uint64_t)v765 + v816, 1, v1163))
              {
                uint64_t v819 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v817, v818, *(void *)(*(void *)(v819 - 8) + 64));
              }
              else
              {
                v1160(v817, v818, v1163);
                __swift_storeEnumTagSinglePayload((uint64_t)v817, 0, 1, v1163);
              }
              uint64_t v26 = __dst;
              *(_OWORD *)((char *)v764 + v766[39]) = *(_OWORD *)((char *)v765 + v766[39]);
              *(_OWORD *)((char *)v764 + v766[40]) = *(_OWORD *)((char *)v765 + v766[40]);
              uint64_t v834 = v766[41];
              long long v835 = (char *)v764 + v834;
              uint64_t v836 = (char *)v765 + v834;
              *(void *)long long v835 = *(void *)v836;
              v835[8] = v836[8];
              *(_OWORD *)((char *)v764 + v766[42]) = *(_OWORD *)((char *)v765 + v766[42]);
              uint64_t v837 = v766[43];
              uint64_t v838 = (char *)v764 + v837;
              uint64_t v839 = (char *)v765 + v837;
              *(_OWORD *)uint64_t v838 = *(_OWORD *)v839;
              *(void *)(v838 + 13) = *(void *)(v839 + 13);
              *(_OWORD *)((char *)v764 + v766[44]) = *(_OWORD *)((char *)v765 + v766[44]);
              *(_OWORD *)((char *)v764 + v766[45]) = *(_OWORD *)((char *)v765 + v766[45]);
              *(_OWORD *)((char *)v764 + v766[46]) = *(_OWORD *)((char *)v765 + v766[46]);
              *(_OWORD *)((char *)v764 + v766[47]) = *(_OWORD *)((char *)v765 + v766[47]);
              __swift_storeEnumTagSinglePayload((uint64_t)v764, 0, 1, (uint64_t)v766);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            uint64_t v840 = v27[12];
            uint64_t v841 = (_OWORD *)((char *)v25 + v840);
            uint64_t v842 = (_OWORD *)((char *)v26 + v840);
            uint64_t v843 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v842, 1, (uint64_t)v843))
            {
              uint64_t v844 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v841, v842, *(void *)(*(void *)(v844 - 8) + 64));
            }
            else
            {
              long long v845 = v842[1];
              *uint64_t v841 = *v842;
              v841[1] = v845;
              long long v846 = v842[3];
              v841[2] = v842[2];
              v841[3] = v846;
              long long v847 = v842[5];
              v841[4] = v842[4];
              v841[5] = v847;
              *((unsigned char *)v841 + 96) = *((unsigned char *)v842 + 96);
              *(_OWORD *)((char *)v841 + 104) = *(_OWORD *)((char *)v842 + 104);
              *(_OWORD *)((char *)v841 + 120) = *(_OWORD *)((char *)v842 + 120);
              uint64_t v848 = v843[14];
              uint64_t v849 = (char *)v841 + v848;
              uint64_t v850 = (char *)v842 + v848;
              uint64_t v851 = type metadata accessor for DateComponents();
              if (__swift_getEnumTagSinglePayload((uint64_t)v850, 1, v851))
              {
                uint64_t v852 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v849, v850, *(void *)(*(void *)(v852 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v851 - 8) + 32))(v849, v850, v851);
                __swift_storeEnumTagSinglePayload((uint64_t)v849, 0, 1, v851);
              }
              uint64_t v890 = v843[15];
              uint64_t v891 = (char *)v841 + v890;
              uint64_t v892 = (char *)v842 + v890;
              if (__swift_getEnumTagSinglePayload((uint64_t)v842 + v890, 1, v851))
              {
                uint64_t v893 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v891, v892, *(void *)(*(void *)(v893 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v851 - 8) + 32))(v891, v892, v851);
                __swift_storeEnumTagSinglePayload((uint64_t)v891, 0, 1, v851);
              }
              uint64_t v26 = __dst;
              *(_OWORD *)((char *)v841 + v843[16]) = *(_OWORD *)((char *)v842 + v843[16]);
              *(_OWORD *)((char *)v841 + v843[17]) = *(_OWORD *)((char *)v842 + v843[17]);
              *(_OWORD *)((char *)v841 + v843[18]) = *(_OWORD *)((char *)v842 + v843[18]);
              *(_OWORD *)((char *)v841 + v843[19]) = *(_OWORD *)((char *)v842 + v843[19]);
              *(_OWORD *)((char *)v841 + v843[20]) = *(_OWORD *)((char *)v842 + v843[20]);
              *(void *)((char *)v841 + v843[21]) = *(void *)((char *)v842 + v843[21]);
              *(void *)((char *)v841 + v843[22]) = *(void *)((char *)v842 + v843[22]);
              uint64_t v901 = v843[23];
              long long v902 = (char *)v841 + v901;
              long long v903 = (char *)v842 + v901;
              v902[8] = v903[8];
              *(void *)long long v902 = *(void *)v903;
              uint64_t v904 = v843[24];
              uint64_t v905 = (char *)v841 + v904;
              uint64_t v906 = (char *)v842 + v904;
              v905[8] = v906[8];
              *(void *)uint64_t v905 = *(void *)v906;
              *(_OWORD *)((char *)v841 + v843[25]) = *(_OWORD *)((char *)v842 + v843[25]);
              *(_OWORD *)((char *)v841 + v843[26]) = *(_OWORD *)((char *)v842 + v843[26]);
              *(_OWORD *)((char *)v841 + v843[27]) = *(_OWORD *)((char *)v842 + v843[27]);
              *(_OWORD *)((char *)v841 + v843[28]) = *(_OWORD *)((char *)v842 + v843[28]);
              uint64_t v907 = v843[29];
              uint64_t v908 = (char *)v841 + v907;
              uint64_t v909 = (char *)v842 + v907;
              *(void *)uint64_t v908 = *(void *)v909;
              v908[8] = v909[8];
              __swift_storeEnumTagSinglePayload((uint64_t)v841, 0, 1, (uint64_t)v843);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            uint64_t v910 = v27[13];
            uint64_t v911 = (_OWORD *)((char *)v25 + v910);
            uint64_t v912 = (_OWORD *)((char *)v26 + v910);
            uint64_t v913 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v912, 1, (uint64_t)v913))
            {
              uint64_t v914 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v911, v912, *(void *)(*(void *)(v914 - 8) + 64));
              uint64_t v29 = v1166;
            }
            else
            {
              long long v915 = v912[1];
              *uint64_t v911 = *v912;
              v911[1] = v915;
              long long v916 = v912[3];
              v911[2] = v912[2];
              v911[3] = v916;
              long long v917 = v912[5];
              v911[4] = v912[4];
              v911[5] = v917;
              *((unsigned char *)v911 + 96) = *((unsigned char *)v912 + 96);
              *(_OWORD *)((char *)v911 + 104) = *(_OWORD *)((char *)v912 + 104);
              *(_OWORD *)((char *)v911 + 120) = *(_OWORD *)((char *)v912 + 120);
              uint64_t v918 = v913[14];
              uint64_t v919 = (char *)v911 + v918;
              uint64_t v920 = (char *)v912 + v918;
              uint64_t v921 = type metadata accessor for DateComponents();
              if (__swift_getEnumTagSinglePayload((uint64_t)v920, 1, v921))
              {
                uint64_t v922 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v919, v920, *(void *)(*(void *)(v922 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v921 - 8) + 32))(v919, v920, v921);
                __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, v921);
              }
              uint64_t v29 = v1166;
              *(_OWORD *)((char *)v911 + v913[15]) = *(_OWORD *)((char *)v912 + v913[15]);
              *(_OWORD *)((char *)v911 + v913[16]) = *(_OWORD *)((char *)v912 + v913[16]);
              *(_OWORD *)((char *)v911 + v913[17]) = *(_OWORD *)((char *)v912 + v913[17]);
              *(_OWORD *)((char *)v911 + v913[18]) = *(_OWORD *)((char *)v912 + v913[18]);
              *(_OWORD *)((char *)v911 + v913[19]) = *(_OWORD *)((char *)v912 + v913[19]);
              *(void *)((char *)v911 + v913[20]) = *(void *)((char *)v912 + v913[20]);
              *(_OWORD *)((char *)v911 + v913[21]) = *(_OWORD *)((char *)v912 + v913[21]);
              *(_OWORD *)((char *)v911 + v913[22]) = *(_OWORD *)((char *)v912 + v913[22]);
              *(_OWORD *)((char *)v911 + v913[23]) = *(_OWORD *)((char *)v912 + v913[23]);
              __swift_storeEnumTagSinglePayload((uint64_t)v911, 0, 1, (uint64_t)v913);
              long long v27 = v1153;
              uint64_t v25 = v1156;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v27);
          }
          uint64_t v967 = v29[22];
          uint64_t v968 = (_OWORD *)((char *)v9 + v967);
          uint64_t v969 = (_OWORD *)((char *)v10 + v967);
          uint64_t v970 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v969, 1, (uint64_t)v970))
          {
            uint64_t v971 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v968, v969, *(void *)(*(void *)(v971 - 8) + 64));
          }
          else
          {
            long long v972 = v969[1];
            *uint64_t v968 = *v969;
            v968[1] = v972;
            long long v973 = v969[3];
            v968[2] = v969[2];
            v968[3] = v973;
            long long v974 = v969[5];
            v968[4] = v969[4];
            v968[5] = v974;
            uint64_t v975 = v970[10];
            uint64_t v976 = (char *)v968 + v975;
            uint64_t v977 = (char *)v969 + v975;
            if (__swift_getEnumTagSinglePayload((uint64_t)v969 + v975, 1, v1163))
            {
              uint64_t v978 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v976, v977, *(void *)(*(void *)(v978 - 8) + 64));
            }
            else
            {
              v1160(v976, v977, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v976, 0, 1, v1163);
            }
            uint64_t v979 = v970[11];
            long long v980 = (char *)v968 + v979;
            uint64_t v981 = (char *)v969 + v979;
            if (__swift_getEnumTagSinglePayload((uint64_t)v969 + v979, 1, v1163))
            {
              uint64_t v982 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v980, v981, *(void *)(*(void *)(v982 - 8) + 64));
            }
            else
            {
              v1160(v980, v981, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v980, 0, 1, v1163);
            }
            *(_OWORD *)((char *)v968 + v970[12]) = *(_OWORD *)((char *)v969 + v970[12]);
            *(_OWORD *)((char *)v968 + v970[13]) = *(_OWORD *)((char *)v969 + v970[13]);
            *(_OWORD *)((char *)v968 + v970[14]) = *(_OWORD *)((char *)v969 + v970[14]);
            uint64_t v983 = v970[15];
            uint64_t v984 = (char *)v968 + v983;
            uint64_t v985 = (char *)v969 + v983;
            if (__swift_getEnumTagSinglePayload((uint64_t)v969 + v983, 1, v1163))
            {
              uint64_t v986 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v984, v985, *(void *)(*(void *)(v986 - 8) + 64));
            }
            else
            {
              v1160(v984, v985, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v984, 0, 1, v1163);
            }
            uint64_t v29 = v1166;
            *(_OWORD *)((char *)v968 + v970[16]) = *(_OWORD *)((char *)v969 + v970[16]);
            *(_OWORD *)((char *)v968 + v970[17]) = *(_OWORD *)((char *)v969 + v970[17]);
            *(_OWORD *)((char *)v968 + v970[18]) = *(_OWORD *)((char *)v969 + v970[18]);
            *(_OWORD *)((char *)v968 + v970[19]) = *(_OWORD *)((char *)v969 + v970[19]);
            *(_OWORD *)((char *)v968 + v970[20]) = *(_OWORD *)((char *)v969 + v970[20]);
            *(_OWORD *)((char *)v968 + v970[21]) = *(_OWORD *)((char *)v969 + v970[21]);
            *(_OWORD *)((char *)v968 + v970[22]) = *(_OWORD *)((char *)v969 + v970[22]);
            *(_OWORD *)((char *)v968 + v970[23]) = *(_OWORD *)((char *)v969 + v970[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v968, 0, 1, (uint64_t)v970);
          }
          uint64_t v987 = v29[23];
          uint64_t v988 = (_OWORD *)((char *)v9 + v987);
          uint64_t v989 = (_OWORD *)((char *)v10 + v987);
          uint64_t v990 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v989, 1, (uint64_t)v990))
          {
            uint64_t v991 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v988, v989, *(void *)(*(void *)(v991 - 8) + 64));
          }
          else
          {
            long long v992 = v989[1];
            _OWORD *v988 = *v989;
            v988[1] = v992;
            long long v993 = v989[3];
            v988[2] = v989[2];
            v988[3] = v993;
            long long v994 = v989[5];
            v988[4] = v989[4];
            v988[5] = v994;
            uint64_t v995 = v990[11];
            uint64_t v996 = (char *)v988 + v995;
            uint64_t v997 = (char *)v989 + v995;
            if (__swift_getEnumTagSinglePayload((uint64_t)v989 + v995, 1, v1163))
            {
              uint64_t v998 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v996, v997, *(void *)(*(void *)(v998 - 8) + 64));
            }
            else
            {
              v1160(v996, v997, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v996, 0, 1, v1163);
            }
            *(_OWORD *)((char *)v988 + v990[12]) = *(_OWORD *)((char *)v989 + v990[12]);
            *(void *)((char *)v988 + v990[13]) = *(void *)((char *)v989 + v990[13]);
            uint64_t v999 = v990[14];
            uint64_t v1000 = (char *)v988 + v999;
            uint64_t v1001 = (char *)v989 + v999;
            if (__swift_getEnumTagSinglePayload((uint64_t)v989 + v999, 1, v1163))
            {
              uint64_t v1002 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1000, v1001, *(void *)(*(void *)(v1002 - 8) + 64));
            }
            else
            {
              v1160(v1000, v1001, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v1000, 0, 1, v1163);
            }
            uint64_t v29 = v1166;
            *(void *)((char *)v988 + v990[15]) = *(void *)((char *)v989 + v990[15]);
            *(void *)((char *)v988 + v990[16]) = *(void *)((char *)v989 + v990[16]);
            *(_OWORD *)((char *)v988 + v990[17]) = *(_OWORD *)((char *)v989 + v990[17]);
            *(void *)((char *)v988 + v990[18]) = *(void *)((char *)v989 + v990[18]);
            *(void *)((char *)v988 + v990[19]) = *(void *)((char *)v989 + v990[19]);
            __swift_storeEnumTagSinglePayload((uint64_t)v988, 0, 1, (uint64_t)v990);
          }
          uint64_t v1003 = v29[24];
          uint64_t v1004 = (_OWORD *)((char *)v9 + v1003);
          uint64_t v1005 = (_OWORD *)((char *)v10 + v1003);
          uint64_t v1006 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1005, 1, (uint64_t)v1006))
          {
            uint64_t v1007 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1004, v1005, *(void *)(*(void *)(v1007 - 8) + 64));
          }
          else
          {
            long long v1008 = v1005[1];
            _OWORD *v1004 = *v1005;
            v1004[1] = v1008;
            long long v1009 = v1005[3];
            v1004[2] = v1005[2];
            v1004[3] = v1009;
            uint64_t v1010 = v1006[8];
            v1011 = (char *)v1004 + v1010;
            uint64_t v1012 = (char *)v1005 + v1010;
            uint64_t v1013 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1012, 1, v1013))
            {
              uint64_t v1014 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1011, v1012, *(void *)(*(void *)(v1014 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1013 - 8) + 32))(v1011, v1012, v1013);
              __swift_storeEnumTagSinglePayload((uint64_t)v1011, 0, 1, v1013);
            }
            *(_OWORD *)((char *)v1004 + v1006[9]) = *(_OWORD *)((char *)v1005 + v1006[9]);
            *(_OWORD *)((char *)v1004 + v1006[10]) = *(_OWORD *)((char *)v1005 + v1006[10]);
            *(_OWORD *)((char *)v1004 + v1006[11]) = *(_OWORD *)((char *)v1005 + v1006[11]);
            uint64_t v1015 = v1006[12];
            uint64_t v1016 = (char *)v1004 + v1015;
            long long v1017 = (char *)v1005 + v1015;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1005 + v1015, 1, v1163))
            {
              uint64_t v1018 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1016, v1017, *(void *)(*(void *)(v1018 - 8) + 64));
            }
            else
            {
              v1160(v1016, v1017, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v1016, 0, 1, v1163);
            }
            uint64_t v1019 = v1006[13];
            uint64_t v1020 = (char *)v1004 + v1019;
            uint64_t v1021 = (char *)v1005 + v1019;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1005 + v1019, 1, v1163))
            {
              uint64_t v1022 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1020, v1021, *(void *)(*(void *)(v1022 - 8) + 64));
            }
            else
            {
              v1160(v1020, v1021, v1163);
              __swift_storeEnumTagSinglePayload((uint64_t)v1020, 0, 1, v1163);
            }
            uint64_t v29 = v1166;
            uint64_t v1023 = v1006[14];
            uint64_t v1024 = (char *)v1004 + v1023;
            uint64_t v1025 = (char *)v1005 + v1023;
            *(void *)uint64_t v1024 = *(void *)v1025;
            v1024[8] = v1025[8];
            *(_OWORD *)((char *)v1004 + v1006[15]) = *(_OWORD *)((char *)v1005 + v1006[15]);
            *(_OWORD *)((char *)v1004 + v1006[16]) = *(_OWORD *)((char *)v1005 + v1006[16]);
            *(_OWORD *)((char *)v1004 + v1006[17]) = *(_OWORD *)((char *)v1005 + v1006[17]);
            *(_OWORD *)((char *)v1004 + v1006[18]) = *(_OWORD *)((char *)v1005 + v1006[18]);
            *(_OWORD *)((char *)v1004 + v1006[19]) = *(_OWORD *)((char *)v1005 + v1006[19]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1004, 0, 1, (uint64_t)v1006);
          }
          memcpy((char *)v9 + v29[25], (char *)v10 + v29[25], 0x90uLL);
          goto LABEL_530;
        case 1u:
          long long v30 = v10[1];
          *long long v9 = *v10;
          v9[1] = v30;
          long long v31 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v31;
          v9[4] = v10[4];
          uint64_t v32 = (int *)type metadata accessor for MobileSMSDocument(0);
          uint64_t v33 = v32[10];
          uint64_t v34 = (char *)v9 + v33;
          long long v35 = (char *)v10 + v33;
          uint64_t v36 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
          {
            uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
            __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
          }
          uint64_t v235 = v32[11];
          uint64_t v236 = (char *)v9 + v235;
          uint64_t v237 = (char *)v10 + v235;
          uint64_t v238 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, v238))
          {
            uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(v236, v237, v238);
            __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, v238);
          }
          *(void *)((char *)v9 + v32[12]) = *(void *)((char *)v10 + v32[12]);
          *(_OWORD *)((char *)v9 + v32[13]) = *(_OWORD *)((char *)v10 + v32[13]);
          *(_OWORD *)((char *)v9 + v32[14]) = *(_OWORD *)((char *)v10 + v32[14]);
          *(void *)((char *)v9 + v32[15]) = *(void *)((char *)v10 + v32[15]);
          *(void *)((char *)v9 + v32[16]) = *(void *)((char *)v10 + v32[16]);
          uint64_t v294 = v32[17];
          uint64_t v295 = (char *)v9 + v294;
          uint64_t v296 = (char *)v10 + v294;
          long long v297 = *((_OWORD *)v296 + 1);
          *(_OWORD *)uint64_t v295 = *(_OWORD *)v296;
          *((_OWORD *)v295 + 1) = v297;
          *((void *)v295 + 4) = *((void *)v296 + 4);
          *(_OWORD *)((char *)v9 + v32[18]) = *(_OWORD *)((char *)v10 + v32[18]);
          uint64_t v298 = v32[19];
          uint64_t v299 = (_OWORD *)((char *)v9 + v298);
          uint64_t v300 = v32;
          uint64_t v301 = (_OWORD *)((char *)v10 + v298);
          uint64_t v302 = type metadata accessor for PartialExtractedAttributes(0);
          uint64_t v1162 = v300;
          uint64_t v1164 = v36;
          uint64_t v1158 = v238;
          if (__swift_getEnumTagSinglePayload((uint64_t)v301, 1, v302))
          {
            uint64_t v303 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v299, v301, *(void *)(*(void *)(v303 - 8) + 64));
            long long v304 = v300;
          }
          else
          {
            *uint64_t v299 = *v301;
            uint64_t v344 = *(int *)(v302 + 20);
            uint64_t v345 = (_OWORD *)((char *)v299 + v344);
            uint64_t v1168 = (char *)v301;
            v346 = (_OWORD *)((char *)v301 + v344);
            uint64_t v347 = type metadata accessor for RentalCarReservation(0);
            v1154 = (int *)v302;
            if (__swift_getEnumTagSinglePayload((uint64_t)v346, 1, v347))
            {
              uint64_t v348 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v345, v346, *(void *)(*(void *)(v348 - 8) + 64));
              v349 = v1168;
              uint64_t v350 = (int *)v302;
              uint64_t v351 = (uint64_t)v299;
            }
            else
            {
              long long v381 = v346[1];
              *uint64_t v345 = *v346;
              v345[1] = v381;
              long long v382 = v346[3];
              v345[2] = v346[2];
              v345[3] = v382;
              long long v383 = v346[5];
              v345[4] = v346[4];
              v345[5] = v383;
              long long v384 = v346[7];
              v345[6] = v346[6];
              v345[7] = v384;
              *((unsigned char *)v345 + 128) = *((unsigned char *)v346 + 128);
              *(_WORD *)((char *)v345 + 129) = *(_WORD *)((char *)v346 + 129);
              *((void *)v345 + 17) = *((void *)v346 + 17);
              long long v385 = v346[10];
              v345[9] = v346[9];
              v345[10] = v385;
              long long v386 = v346[12];
              v345[11] = v346[11];
              v345[12] = v386;
              long long v387 = v346[14];
              v345[13] = v346[13];
              v345[14] = v387;
              v345[15] = v346[15];
              *((void *)v345 + 32) = *((void *)v346 + 32);
              *(_OWORD *)((char *)v345 + 264) = *(_OWORD *)((char *)v346 + 264);
              *(_OWORD *)((char *)v345 + 280) = *(_OWORD *)((char *)v346 + 280);
              *(_OWORD *)((char *)v345 + 296) = *(_OWORD *)((char *)v346 + 296);
              *(_OWORD *)((char *)v345 + 312) = *(_OWORD *)((char *)v346 + 312);
              *(_OWORD *)((char *)v345 + 328) = *(_OWORD *)((char *)v346 + 328);
              *(_OWORD *)((char *)v345 + 344) = *(_OWORD *)((char *)v346 + 344);
              *(_OWORD *)((char *)v345 + 360) = *(_OWORD *)((char *)v346 + 360);
              *((unsigned char *)v345 + 384) = *((unsigned char *)v346 + 384);
              *((void *)v345 + 47) = *((void *)v346 + 47);
              *(_OWORD *)((char *)v345 + 392) = *(_OWORD *)((char *)v346 + 392);
              *(_OWORD *)((char *)v345 + 408) = *(_OWORD *)((char *)v346 + 408);
              uint64_t v388 = *(int *)(v347 + 140);
              uint64_t v389 = (char *)v345 + v388;
              uint64_t v390 = (char *)v346 + v388;
              if (__swift_getEnumTagSinglePayload((uint64_t)v346 + v388, 1, v1164))
              {
                uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v389, v390, *(void *)(*(void *)(v391 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v389, v390, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v389, 0, 1, v1164);
              }
              __dsta = (void *)v347;
              uint64_t v400 = *(int *)(v347 + 144);
              uint64_t v401 = (char *)v345 + v400;
              long long v402 = (char *)v346 + v400;
              if (__swift_getEnumTagSinglePayload((uint64_t)v346 + v400, 1, v1164))
              {
                uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v401, v402, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v1164);
              }
              v349 = v1168;
              __swift_storeEnumTagSinglePayload((uint64_t)v345, 0, 1, (uint64_t)__dsta);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v436 = v350[6];
            long long v437 = (_OWORD *)(v351 + v436);
            long long v438 = &v349[v436];
            uint64_t v439 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v438, 1, v439))
            {
              uint64_t v440 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v437, v438, *(void *)(*(void *)(v440 - 8) + 64));
              uint64_t v441 = v1168;
            }
            else
            {
              long long v442 = *((_OWORD *)v438 + 1);
              *long long v437 = *(_OWORD *)v438;
              v437[1] = v442;
              long long v443 = *((_OWORD *)v438 + 3);
              v437[2] = *((_OWORD *)v438 + 2);
              v437[3] = v443;
              long long v444 = *((_OWORD *)v438 + 5);
              v437[4] = *((_OWORD *)v438 + 4);
              v437[5] = v444;
              long long v445 = *((_OWORD *)v438 + 7);
              v437[6] = *((_OWORD *)v438 + 6);
              v437[7] = v445;
              *((unsigned char *)v437 + 128) = v438[128];
              *(_WORD *)((char *)v437 + 129) = *(_WORD *)(v438 + 129);
              *((void *)v437 + 17) = *((void *)v438 + 17);
              long long v446 = *((_OWORD *)v438 + 10);
              v437[9] = *((_OWORD *)v438 + 9);
              v437[10] = v446;
              long long v447 = *((_OWORD *)v438 + 12);
              v437[11] = *((_OWORD *)v438 + 11);
              v437[12] = v447;
              *((void *)v437 + 26) = *((void *)v438 + 26);
              *(_OWORD *)((char *)v437 + 216) = *(_OWORD *)(v438 + 216);
              *(_OWORD *)((char *)v437 + 232) = *(_OWORD *)(v438 + 232);
              *(_OWORD *)((char *)v437 + 248) = *(_OWORD *)(v438 + 248);
              *(_OWORD *)((char *)v437 + 264) = *(_OWORD *)(v438 + 264);
              *((unsigned char *)v437 + 296) = v438[296];
              uint64_t v448 = *((void *)v438 + 36);
              *((void *)v437 + 35) = *((void *)v438 + 35);
              *((void *)v437 + 36) = v448;
              uint64_t v449 = *(int *)(v439 + 112);
              long long v450 = (char *)v437 + v449;
              uint64_t v451 = &v438[v449];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v438[v449], 1, v1164))
              {
                uint64_t v452 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v450, v451, *(void *)(*(void *)(v452 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v450, v451, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v450, 0, 1, v1164);
              }
              uint64_t v461 = *(int *)(v439 + 116);
              long long v462 = (char *)v437 + v461;
              long long v463 = &v438[v461];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v438[v461], 1, v1164))
              {
                uint64_t v464 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v462, v463, *(void *)(*(void *)(v464 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v462, v463, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v462, 0, 1, v1164);
              }
              uint64_t v441 = v1168;
              __swift_storeEnumTagSinglePayload((uint64_t)v437, 0, 1, v439);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v501 = v350[7];
            long long v502 = (_OWORD *)(v351 + v501);
            long long v503 = &v441[v501];
            long long v504 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v503, 1, (uint64_t)v504))
            {
              uint64_t v505 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v502, v503, *(void *)(*(void *)(v505 - 8) + 64));
              uint64_t v506 = v1168;
            }
            else
            {
              long long v507 = *((_OWORD *)v503 + 1);
              _OWORD *v502 = *(_OWORD *)v503;
              v502[1] = v507;
              long long v508 = *((_OWORD *)v503 + 3);
              v502[2] = *((_OWORD *)v503 + 2);
              v502[3] = v508;
              long long v509 = *((_OWORD *)v503 + 5);
              v502[4] = *((_OWORD *)v503 + 4);
              v502[5] = v509;
              long long v510 = *((_OWORD *)v503 + 7);
              v502[6] = *((_OWORD *)v503 + 6);
              v502[7] = v510;
              *((unsigned char *)v502 + 128) = v503[128];
              *(_WORD *)((char *)v502 + 129) = *(_WORD *)(v503 + 129);
              *((void *)v502 + 17) = *((void *)v503 + 17);
              long long v511 = *((_OWORD *)v503 + 10);
              v502[9] = *((_OWORD *)v503 + 9);
              v502[10] = v511;
              long long v512 = *((_OWORD *)v503 + 12);
              v502[11] = *((_OWORD *)v503 + 11);
              v502[12] = v512;
              long long v513 = *((_OWORD *)v503 + 14);
              v502[13] = *((_OWORD *)v503 + 13);
              v502[14] = v513;
              *((void *)v502 + 30) = *((void *)v503 + 30);
              *(_OWORD *)((char *)v502 + 248) = *(_OWORD *)(v503 + 248);
              *(_OWORD *)((char *)v502 + 264) = *(_OWORD *)(v503 + 264);
              *((unsigned char *)v502 + 296) = v503[296];
              uint64_t v514 = *((void *)v503 + 36);
              *((void *)v502 + 35) = *((void *)v503 + 35);
              *((void *)v502 + 36) = v514;
              v502[19] = *((_OWORD *)v503 + 19);
              uint64_t v515 = v504[29];
              uint64_t v516 = (char *)v502 + v515;
              uint64_t v517 = &v503[v515];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v503[v515], 1, v1158))
              {
                uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1158 - 8) + 32))(v516, v517, v1158);
                __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, v1158);
              }
              *(_OWORD *)((char *)v502 + v504[30]) = *(_OWORD *)&v503[v504[30]];
              uint64_t v527 = v504[31];
              uint64_t v528 = (char *)v502 + v527;
              uint64_t v529 = &v503[v527];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v503[v527], 1, v1164))
              {
                uint64_t v530 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v528, v529, *(void *)(*(void *)(v530 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v528, v529, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v528, 0, 1, v1164);
              }
              uint64_t v539 = v504[32];
              long long v540 = (char *)v502 + v539;
              long long v541 = &v503[v539];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v503[v539], 1, v1164))
              {
                uint64_t v542 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v540, v541, *(void *)(*(void *)(v542 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v540, v541, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v540, 0, 1, v1164);
              }
              uint64_t v506 = v1168;
              __swift_storeEnumTagSinglePayload((uint64_t)v502, 0, 1, (uint64_t)v504);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v577 = v350[8];
            long long v578 = (_OWORD *)(v351 + v577);
            long long v579 = &v506[v577];
            uint64_t v580 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v579, 1, v580))
            {
              uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v578, v579, *(void *)(*(void *)(v581 - 8) + 64));
              uint64_t v582 = v1168;
            }
            else
            {
              long long v583 = *((_OWORD *)v579 + 1);
              *long long v578 = *(_OWORD *)v579;
              v578[1] = v583;
              long long v584 = *((_OWORD *)v579 + 3);
              v578[2] = *((_OWORD *)v579 + 2);
              v578[3] = v584;
              long long v585 = *((_OWORD *)v579 + 5);
              v578[4] = *((_OWORD *)v579 + 4);
              v578[5] = v585;
              long long v586 = *((_OWORD *)v579 + 7);
              v578[6] = *((_OWORD *)v579 + 6);
              v578[7] = v586;
              *((unsigned char *)v578 + 128) = v579[128];
              *(_WORD *)((char *)v578 + 129) = *(_WORD *)(v579 + 129);
              *((void *)v578 + 17) = *((void *)v579 + 17);
              long long v587 = *((_OWORD *)v579 + 10);
              v578[9] = *((_OWORD *)v579 + 9);
              v578[10] = v587;
              long long v588 = *((_OWORD *)v579 + 12);
              v578[11] = *((_OWORD *)v579 + 11);
              v578[12] = v588;
              long long v589 = *((_OWORD *)v579 + 14);
              v578[13] = *((_OWORD *)v579 + 13);
              v578[14] = v589;
              long long v590 = *((_OWORD *)v579 + 16);
              v578[15] = *((_OWORD *)v579 + 15);
              v578[16] = v590;
              *((unsigned char *)v578 + 280) = v579[280];
              *((void *)v578 + 34) = *((void *)v579 + 34);
              v578[18] = *((_OWORD *)v579 + 18);
              uint64_t v591 = *(int *)(v580 + 108);
              uint64_t v592 = (char *)v578 + v591;
              uint64_t v593 = &v579[v591];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v579[v591], 1, v1164))
              {
                uint64_t v594 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v592, v593, *(void *)(*(void *)(v594 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v592, v593, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v592, 0, 1, v1164);
              }
              uint64_t v603 = *(int *)(v580 + 112);
              long long v604 = (char *)v578 + v603;
              long long v605 = &v579[v603];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v579[v603], 1, v1164))
              {
                uint64_t v606 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v604, v605, *(void *)(*(void *)(v606 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v604, v605, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v604, 0, 1, v1164);
              }
              uint64_t v582 = v1168;
              __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, v580);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v639 = v350[9];
            long long v640 = (_OWORD *)(v351 + v639);
            uint64_t v641 = &v582[v639];
            uint64_t v642 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v641, 1, (uint64_t)v642))
            {
              uint64_t v643 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v640, v641, *(void *)(*(void *)(v643 - 8) + 64));
              uint64_t v644 = v1168;
            }
            else
            {
              long long v645 = *((_OWORD *)v641 + 1);
              _OWORD *v640 = *(_OWORD *)v641;
              v640[1] = v645;
              long long v646 = *((_OWORD *)v641 + 3);
              v640[2] = *((_OWORD *)v641 + 2);
              v640[3] = v646;
              long long v647 = *((_OWORD *)v641 + 5);
              v640[4] = *((_OWORD *)v641 + 4);
              v640[5] = v647;
              long long v648 = *((_OWORD *)v641 + 7);
              v640[6] = *((_OWORD *)v641 + 6);
              v640[7] = v648;
              *((unsigned char *)v640 + 128) = v641[128];
              *(_WORD *)((char *)v640 + 129) = *(_WORD *)(v641 + 129);
              *((void *)v640 + 17) = *((void *)v641 + 17);
              long long v649 = *((_OWORD *)v641 + 10);
              v640[9] = *((_OWORD *)v641 + 9);
              v640[10] = v649;
              long long v650 = *((_OWORD *)v641 + 12);
              v640[11] = *((_OWORD *)v641 + 11);
              v640[12] = v650;
              long long v651 = *((_OWORD *)v641 + 14);
              v640[13] = *((_OWORD *)v641 + 13);
              v640[14] = v651;
              v640[15] = *((_OWORD *)v641 + 15);
              uint64_t v652 = v642[24];
              uint64_t v653 = (char *)v640 + v652;
              uint64_t v654 = &v641[v652];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v641[v652], 1, v1164))
              {
                uint64_t v655 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v653, v654, *(void *)(*(void *)(v655 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v653, v654, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v653, 0, 1, v1164);
              }
              uint64_t v664 = v642[25];
              uint64_t v665 = (char *)v640 + v664;
              uint64_t v666 = &v641[v664];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v641[v664], 1, v1164))
              {
                uint64_t v667 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v665, v666, *(void *)(*(void *)(v667 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v665, v666, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v665, 0, 1, v1164);
              }
              uint64_t v678 = v642[26];
              long long v679 = (char *)v640 + v678;
              long long v680 = &v641[v678];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v641[v678], 1, v1158))
              {
                uint64_t v681 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v679, v680, *(void *)(*(void *)(v681 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1158 - 8) + 32))(v679, v680, v1158);
                __swift_storeEnumTagSinglePayload((uint64_t)v679, 0, 1, v1158);
              }
              uint64_t v644 = v1168;
              __swift_storeEnumTagSinglePayload((uint64_t)v640, 0, 1, (uint64_t)v642);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v712 = v350[10];
            uint64_t v713 = (_OWORD *)(v351 + v712);
            uint64_t v714 = &v644[v712];
            uint64_t v715 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v714, 1, (uint64_t)v715))
            {
              uint64_t v716 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v713, v714, *(void *)(*(void *)(v716 - 8) + 64));
              uint64_t v717 = v1168;
            }
            else
            {
              long long v718 = *((_OWORD *)v714 + 1);
              *uint64_t v713 = *(_OWORD *)v714;
              v713[1] = v718;
              long long v719 = *((_OWORD *)v714 + 3);
              v713[2] = *((_OWORD *)v714 + 2);
              v713[3] = v719;
              long long v720 = *((_OWORD *)v714 + 5);
              v713[4] = *((_OWORD *)v714 + 4);
              v713[5] = v720;
              long long v721 = *((_OWORD *)v714 + 7);
              v713[6] = *((_OWORD *)v714 + 6);
              v713[7] = v721;
              *((unsigned char *)v713 + 128) = v714[128];
              *(_WORD *)((char *)v713 + 129) = *(_WORD *)(v714 + 129);
              *((void *)v713 + 17) = *((void *)v714 + 17);
              long long v722 = *((_OWORD *)v714 + 10);
              v713[9] = *((_OWORD *)v714 + 9);
              v713[10] = v722;
              long long v723 = *((_OWORD *)v714 + 12);
              v713[11] = *((_OWORD *)v714 + 11);
              v713[12] = v723;
              v713[13] = *((_OWORD *)v714 + 13);
              uint64_t v724 = v715[22];
              uint64_t v725 = (char *)v713 + v724;
              uint64_t v726 = &v714[v724];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v714[v724], 1, v1164))
              {
                uint64_t v727 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v725, v726, *(void *)(*(void *)(v727 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v725, v726, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, v1164);
              }
              uint64_t v736 = v715[23];
              uint64_t v737 = (char *)v713 + v736;
              uint64_t v738 = &v714[v736];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v714[v736], 1, v1164))
              {
                uint64_t v739 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v737, v738, *(void *)(*(void *)(v739 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v737, v738, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v737, 0, 1, v1164);
              }
              uint64_t v756 = v715[24];
              long long v757 = (char *)v713 + v756;
              long long v758 = &v714[v756];
              *(void *)long long v757 = *(void *)v758;
              v757[8] = v758[8];
              uint64_t v759 = v715[25];
              uint64_t v760 = (char *)v713 + v759;
              uint64_t v761 = &v714[v759];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v714[v759], 1, v1158))
              {
                uint64_t v762 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v760, v761, *(void *)(*(void *)(v762 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1158 - 8) + 32))(v760, v761, v1158);
                __swift_storeEnumTagSinglePayload((uint64_t)v760, 0, 1, v1158);
              }
              uint64_t v717 = v1168;
              __swift_storeEnumTagSinglePayload((uint64_t)v713, 0, 1, (uint64_t)v715);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v789 = v350[11];
            uint64_t v790 = (_OWORD *)(v351 + v789);
            uint64_t v791 = &v717[v789];
            uint64_t v792 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v791, 1, (uint64_t)v792))
            {
              uint64_t v793 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v790, v791, *(void *)(*(void *)(v793 - 8) + 64));
              long long v304 = v1162;
            }
            else
            {
              long long v794 = *((_OWORD *)v791 + 1);
              _OWORD *v790 = *(_OWORD *)v791;
              v790[1] = v794;
              long long v795 = *((_OWORD *)v791 + 3);
              v790[2] = *((_OWORD *)v791 + 2);
              v790[3] = v795;
              long long v796 = *((_OWORD *)v791 + 5);
              v790[4] = *((_OWORD *)v791 + 4);
              v790[5] = v796;
              *((unsigned char *)v790 + 96) = v791[96];
              *(_OWORD *)((char *)v790 + 104) = *(_OWORD *)(v791 + 104);
              uint64_t v797 = v792[13];
              uint64_t v798 = (char *)v790 + v797;
              uint64_t v799 = &v791[v797];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v791[v797], 1, v1158))
              {
                uint64_t v800 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v798, v799, *(void *)(*(void *)(v800 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1158 - 8) + 32))(v798, v799, v1158);
                __swift_storeEnumTagSinglePayload((uint64_t)v798, 0, 1, v1158);
              }
              uint64_t v809 = v792[14];
              uint64_t v810 = (char *)v790 + v809;
              uint64_t v811 = &v791[v809];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v791[v809], 1, v1158))
              {
                uint64_t v812 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v810, v811, *(void *)(*(void *)(v812 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1158 - 8) + 32))(v810, v811, v1158);
                __swift_storeEnumTagSinglePayload((uint64_t)v810, 0, 1, v1158);
              }
              *(_OWORD *)((char *)v790 + v792[15]) = *(_OWORD *)&v791[v792[15]];
              *(_OWORD *)((char *)v790 + v792[16]) = *(_OWORD *)&v791[v792[16]];
              *(_OWORD *)((char *)v790 + v792[17]) = *(_OWORD *)&v791[v792[17]];
              uint64_t v827 = v792[18];
              v1146 = &v791[v827];
              __dste = (char *)v790 + v827;
              uint64_t v828 = type metadata accessor for DateComponents();
              uint64_t v829 = *(void (**)(char *, char *, uint64_t))(*(void *)(v828 - 8) + 32);
              v829(__dste, v1146, v828);
              v829((char *)v790 + v792[19], &v791[v792[19]], v828);
              *(_OWORD *)((char *)v790 + v792[20]) = *(_OWORD *)&v791[v792[20]];
              *(_OWORD *)((char *)v790 + v792[21]) = *(_OWORD *)&v791[v792[21]];
              *(_OWORD *)((char *)v790 + v792[22]) = *(_OWORD *)&v791[v792[22]];
              *(_OWORD *)((char *)v790 + v792[23]) = *(_OWORD *)&v791[v792[23]];
              *(_OWORD *)((char *)v790 + v792[24]) = *(_OWORD *)&v791[v792[24]];
              *(_OWORD *)((char *)v790 + v792[25]) = *(_OWORD *)&v791[v792[25]];
              *(_OWORD *)((char *)v790 + v792[26]) = *(_OWORD *)&v791[v792[26]];
              *(_OWORD *)((char *)v790 + v792[27]) = *(_OWORD *)&v791[v792[27]];
              *(_OWORD *)((char *)v790 + v792[28]) = *(_OWORD *)&v791[v792[28]];
              *(_OWORD *)((char *)v790 + v792[29]) = *(_OWORD *)&v791[v792[29]];
              *(_OWORD *)((char *)v790 + v792[30]) = *(_OWORD *)&v791[v792[30]];
              *(_OWORD *)((char *)v790 + v792[31]) = *(_OWORD *)&v791[v792[31]];
              *(_OWORD *)((char *)v790 + v792[32]) = *(_OWORD *)&v791[v792[32]];
              *(void *)((char *)v790 + v792[33]) = *(void *)&v791[v792[33]];
              *(void *)((char *)v790 + v792[34]) = *(void *)&v791[v792[34]];
              *(_OWORD *)((char *)v790 + v792[35]) = *(_OWORD *)&v791[v792[35]];
              *(_OWORD *)((char *)v790 + v792[36]) = *(_OWORD *)&v791[v792[36]];
              *(_OWORD *)((char *)v790 + v792[37]) = *(_OWORD *)&v791[v792[37]];
              uint64_t v830 = v792[38];
              uint64_t v831 = (char *)v790 + v830;
              uint64_t v832 = &v791[v830];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v791[v830], 1, v1164))
              {
                uint64_t v833 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v831, v832, *(void *)(*(void *)(v833 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v831, v832, v1164);
                __swift_storeEnumTagSinglePayload((uint64_t)v831, 0, 1, v1164);
              }
              long long v304 = v1162;
              *(_OWORD *)((char *)v790 + v792[39]) = *(_OWORD *)&v791[v792[39]];
              *(_OWORD *)((char *)v790 + v792[40]) = *(_OWORD *)&v791[v792[40]];
              uint64_t v872 = v792[41];
              uint64_t v873 = (char *)v790 + v872;
              uint64_t v874 = &v791[v872];
              *(void *)uint64_t v873 = *(void *)v874;
              v873[8] = v874[8];
              *(_OWORD *)((char *)v790 + v792[42]) = *(_OWORD *)&v791[v792[42]];
              uint64_t v875 = v792[43];
              uint64_t v876 = (char *)v790 + v875;
              uint64_t v877 = &v791[v875];
              *(_OWORD *)uint64_t v876 = *(_OWORD *)v877;
              *(void *)(v876 + 13) = *(void *)(v877 + 13);
              *(_OWORD *)((char *)v790 + v792[44]) = *(_OWORD *)&v791[v792[44]];
              *(_OWORD *)((char *)v790 + v792[45]) = *(_OWORD *)&v791[v792[45]];
              *(_OWORD *)((char *)v790 + v792[46]) = *(_OWORD *)&v791[v792[46]];
              *(_OWORD *)((char *)v790 + v792[47]) = *(_OWORD *)&v791[v792[47]];
              __swift_storeEnumTagSinglePayload((uint64_t)v790, 0, 1, (uint64_t)v792);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v878 = v350[12];
            uint64_t v879 = (_OWORD *)(v351 + v878);
            uint64_t v880 = &v1168[v878];
            uint64_t v881 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v880, 1, (uint64_t)v881))
            {
              uint64_t v882 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v879, v880, *(void *)(*(void *)(v882 - 8) + 64));
            }
            else
            {
              long long v883 = *((_OWORD *)v880 + 1);
              *uint64_t v879 = *(_OWORD *)v880;
              v879[1] = v883;
              long long v884 = *((_OWORD *)v880 + 3);
              v879[2] = *((_OWORD *)v880 + 2);
              v879[3] = v884;
              long long v885 = *((_OWORD *)v880 + 5);
              v879[4] = *((_OWORD *)v880 + 4);
              v879[5] = v885;
              *((unsigned char *)v879 + 96) = v880[96];
              *(_OWORD *)((char *)v879 + 104) = *(_OWORD *)(v880 + 104);
              *(_OWORD *)((char *)v879 + 120) = *(_OWORD *)(v880 + 120);
              uint64_t v886 = v881[14];
              __dstb = (char *)v879 + v886;
              uint64_t v887 = &v880[v886];
              uint64_t v888 = type metadata accessor for DateComponents();
              if (__swift_getEnumTagSinglePayload((uint64_t)v887, 1, v888))
              {
                uint64_t v889 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(__dstb, v887, *(void *)(*(void *)(v889 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v888 - 8) + 32))(__dstb, v887, v888);
                __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v888);
              }
              uint64_t v898 = v881[15];
              __dstc = (char *)v879 + v898;
              uint64_t v899 = &v880[v898];
              if (__swift_getEnumTagSinglePayload((uint64_t)&v880[v898], 1, v888))
              {
                uint64_t v900 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(__dstc, v899, *(void *)(*(void *)(v900 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v888 - 8) + 32))(__dstc, v899, v888);
                __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v888);
              }
              uint64_t v350 = v1154;
              *(_OWORD *)((char *)v879 + v881[16]) = *(_OWORD *)&v880[v881[16]];
              *(_OWORD *)((char *)v879 + v881[17]) = *(_OWORD *)&v880[v881[17]];
              *(_OWORD *)((char *)v879 + v881[18]) = *(_OWORD *)&v880[v881[18]];
              *(_OWORD *)((char *)v879 + v881[19]) = *(_OWORD *)&v880[v881[19]];
              *(_OWORD *)((char *)v879 + v881[20]) = *(_OWORD *)&v880[v881[20]];
              *(void *)((char *)v879 + v881[21]) = *(void *)&v880[v881[21]];
              *(void *)((char *)v879 + v881[22]) = *(void *)&v880[v881[22]];
              uint64_t v945 = v881[23];
              long long v946 = (char *)v879 + v945;
              long long v947 = &v880[v945];
              v946[8] = v947[8];
              *(void *)long long v946 = *(void *)v947;
              uint64_t v948 = v881[24];
              uint64_t v949 = (char *)v879 + v948;
              uint64_t v950 = &v880[v948];
              v949[8] = v950[8];
              *(void *)uint64_t v949 = *(void *)v950;
              *(_OWORD *)((char *)v879 + v881[25]) = *(_OWORD *)&v880[v881[25]];
              *(_OWORD *)((char *)v879 + v881[26]) = *(_OWORD *)&v880[v881[26]];
              *(_OWORD *)((char *)v879 + v881[27]) = *(_OWORD *)&v880[v881[27]];
              *(_OWORD *)((char *)v879 + v881[28]) = *(_OWORD *)&v880[v881[28]];
              uint64_t v951 = v881[29];
              uint64_t v952 = (char *)v879 + v951;
              uint64_t v953 = &v880[v951];
              *(void *)uint64_t v952 = *(void *)v953;
              v952[8] = v953[8];
              __swift_storeEnumTagSinglePayload((uint64_t)v879, 0, 1, (uint64_t)v881);
              uint64_t v351 = (uint64_t)v299;
            }
            uint64_t v954 = v350[13];
            uint64_t v955 = (_OWORD *)(v351 + v954);
            uint64_t v956 = &v1168[v954];
            uint64_t v957 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v956, 1, (uint64_t)v957))
            {
              uint64_t v958 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v955, v956, *(void *)(*(void *)(v958 - 8) + 64));
            }
            else
            {
              long long v959 = *((_OWORD *)v956 + 1);
              _OWORD *v955 = *(_OWORD *)v956;
              v955[1] = v959;
              long long v960 = *((_OWORD *)v956 + 3);
              v955[2] = *((_OWORD *)v956 + 2);
              v955[3] = v960;
              long long v961 = *((_OWORD *)v956 + 5);
              v955[4] = *((_OWORD *)v956 + 4);
              v955[5] = v961;
              *((unsigned char *)v955 + 96) = v956[96];
              *(_OWORD *)((char *)v955 + 104) = *(_OWORD *)(v956 + 104);
              *(_OWORD *)((char *)v955 + 120) = *(_OWORD *)(v956 + 120);
              uint64_t v962 = v957[14];
              uint64_t v963 = (char *)v955 + v962;
              uint64_t v964 = &v956[v962];
              uint64_t v965 = type metadata accessor for DateComponents();
              if (__swift_getEnumTagSinglePayload((uint64_t)v964, 1, v965))
              {
                uint64_t v966 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v963, v964, *(void *)(*(void *)(v966 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v965 - 8) + 32))(v963, v964, v965);
                __swift_storeEnumTagSinglePayload((uint64_t)v963, 0, 1, v965);
              }
              long long v304 = v1162;
              *(_OWORD *)((char *)v955 + v957[15]) = *(_OWORD *)&v956[v957[15]];
              *(_OWORD *)((char *)v955 + v957[16]) = *(_OWORD *)&v956[v957[16]];
              *(_OWORD *)((char *)v955 + v957[17]) = *(_OWORD *)&v956[v957[17]];
              *(_OWORD *)((char *)v955 + v957[18]) = *(_OWORD *)&v956[v957[18]];
              *(_OWORD *)((char *)v955 + v957[19]) = *(_OWORD *)&v956[v957[19]];
              *(void *)((char *)v955 + v957[20]) = *(void *)&v956[v957[20]];
              *(_OWORD *)((char *)v955 + v957[21]) = *(_OWORD *)&v956[v957[21]];
              *(_OWORD *)((char *)v955 + v957[22]) = *(_OWORD *)&v956[v957[22]];
              *(_OWORD *)((char *)v955 + v957[23]) = *(_OWORD *)&v956[v957[23]];
              __swift_storeEnumTagSinglePayload((uint64_t)v955, 0, 1, (uint64_t)v957);
              uint64_t v350 = v1154;
              uint64_t v351 = (uint64_t)v299;
            }
            __swift_storeEnumTagSinglePayload(v351, 0, 1, (uint64_t)v350);
          }
          uint64_t v1085 = v304[20];
          uint64_t v1086 = (_OWORD *)((char *)v9 + v1085);
          uint64_t v1087 = (_OWORD *)((char *)v10 + v1085);
          uint64_t v1088 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1087, 1, (uint64_t)v1088))
          {
            uint64_t v1089 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1086, v1087, *(void *)(*(void *)(v1089 - 8) + 64));
          }
          else
          {
            long long v1090 = v1087[1];
            _OWORD *v1086 = *v1087;
            v1086[1] = v1090;
            long long v1091 = v1087[3];
            v1086[2] = v1087[2];
            v1086[3] = v1091;
            long long v1092 = v1087[5];
            v1086[4] = v1087[4];
            v1086[5] = v1092;
            uint64_t v1093 = v1088[10];
            uint64_t v1094 = (char *)v1086 + v1093;
            uint64_t v1095 = (char *)v1087 + v1093;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1087 + v1093, 1, v1164))
            {
              uint64_t v1096 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1094, v1095, *(void *)(*(void *)(v1096 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1094, v1095, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1094, 0, 1, v1164);
            }
            uint64_t v1097 = v1088[11];
            long long v1098 = (char *)v1086 + v1097;
            uint64_t v1099 = (char *)v1087 + v1097;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1087 + v1097, 1, v1164))
            {
              uint64_t v1100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1098, v1099, *(void *)(*(void *)(v1100 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1098, v1099, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1098, 0, 1, v1164);
            }
            *(_OWORD *)((char *)v1086 + v1088[12]) = *(_OWORD *)((char *)v1087 + v1088[12]);
            *(_OWORD *)((char *)v1086 + v1088[13]) = *(_OWORD *)((char *)v1087 + v1088[13]);
            *(_OWORD *)((char *)v1086 + v1088[14]) = *(_OWORD *)((char *)v1087 + v1088[14]);
            uint64_t v1101 = v1088[15];
            uint64_t v1102 = (char *)v1086 + v1101;
            uint64_t v1103 = (char *)v1087 + v1101;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1087 + v1101, 1, v1164))
            {
              uint64_t v1104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1102, v1103, *(void *)(*(void *)(v1104 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1102, v1103, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1102, 0, 1, v1164);
            }
            long long v304 = v1162;
            *(_OWORD *)((char *)v1086 + v1088[16]) = *(_OWORD *)((char *)v1087 + v1088[16]);
            *(_OWORD *)((char *)v1086 + v1088[17]) = *(_OWORD *)((char *)v1087 + v1088[17]);
            *(_OWORD *)((char *)v1086 + v1088[18]) = *(_OWORD *)((char *)v1087 + v1088[18]);
            *(_OWORD *)((char *)v1086 + v1088[19]) = *(_OWORD *)((char *)v1087 + v1088[19]);
            *(_OWORD *)((char *)v1086 + v1088[20]) = *(_OWORD *)((char *)v1087 + v1088[20]);
            *(_OWORD *)((char *)v1086 + v1088[21]) = *(_OWORD *)((char *)v1087 + v1088[21]);
            *(_OWORD *)((char *)v1086 + v1088[22]) = *(_OWORD *)((char *)v1087 + v1088[22]);
            *(_OWORD *)((char *)v1086 + v1088[23]) = *(_OWORD *)((char *)v1087 + v1088[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1086, 0, 1, (uint64_t)v1088);
          }
          uint64_t v1105 = v304[21];
          uint64_t v1106 = (_OWORD *)((char *)v9 + v1105);
          uint64_t v1107 = (_OWORD *)((char *)v10 + v1105);
          uint64_t v1108 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1107, 1, (uint64_t)v1108))
          {
            uint64_t v1109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1106, v1107, *(void *)(*(void *)(v1109 - 8) + 64));
          }
          else
          {
            long long v1110 = v1107[1];
            *uint64_t v1106 = *v1107;
            v1106[1] = v1110;
            long long v1111 = v1107[3];
            v1106[2] = v1107[2];
            v1106[3] = v1111;
            long long v1112 = v1107[5];
            v1106[4] = v1107[4];
            v1106[5] = v1112;
            uint64_t v1113 = v1108[11];
            long long v1114 = (char *)v1106 + v1113;
            uint64_t v1115 = (char *)v1107 + v1113;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1107 + v1113, 1, v1164))
            {
              uint64_t v1116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1114, v1115, *(void *)(*(void *)(v1116 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1114, v1115, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1114, 0, 1, v1164);
            }
            *(_OWORD *)((char *)v1106 + v1108[12]) = *(_OWORD *)((char *)v1107 + v1108[12]);
            *(void *)((char *)v1106 + v1108[13]) = *(void *)((char *)v1107 + v1108[13]);
            uint64_t v1117 = v1108[14];
            uint64_t v1118 = (char *)v1106 + v1117;
            uint64_t v1119 = (char *)v1107 + v1117;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1107 + v1117, 1, v1164))
            {
              uint64_t v1120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1118, v1119, *(void *)(*(void *)(v1120 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1118, v1119, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1118, 0, 1, v1164);
            }
            long long v304 = v1162;
            *(void *)((char *)v1106 + v1108[15]) = *(void *)((char *)v1107 + v1108[15]);
            *(void *)((char *)v1106 + v1108[16]) = *(void *)((char *)v1107 + v1108[16]);
            *(_OWORD *)((char *)v1106 + v1108[17]) = *(_OWORD *)((char *)v1107 + v1108[17]);
            *(void *)((char *)v1106 + v1108[18]) = *(void *)((char *)v1107 + v1108[18]);
            *(void *)((char *)v1106 + v1108[19]) = *(void *)((char *)v1107 + v1108[19]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1106, 0, 1, (uint64_t)v1108);
          }
          uint64_t v1121 = v304[22];
          uint64_t v1122 = (_OWORD *)((char *)v9 + v1121);
          uint64_t v1123 = (_OWORD *)((char *)v10 + v1121);
          uint64_t v1124 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1123, 1, (uint64_t)v1124))
          {
            uint64_t v1125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1122, v1123, *(void *)(*(void *)(v1125 - 8) + 64));
          }
          else
          {
            long long v1126 = v1123[1];
            *uint64_t v1122 = *v1123;
            v1122[1] = v1126;
            long long v1127 = v1123[3];
            v1122[2] = v1123[2];
            v1122[3] = v1127;
            uint64_t v1128 = v1124[8];
            uint64_t v1169 = (char *)v1122 + v1128;
            uint64_t v1129 = (char *)v1123 + v1128;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1123 + v1128, 1, v1158))
            {
              uint64_t v1130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1169, v1129, *(void *)(*(void *)(v1130 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1158 - 8) + 32))(v1169, v1129, v1158);
              __swift_storeEnumTagSinglePayload((uint64_t)v1169, 0, 1, v1158);
            }
            *(_OWORD *)((char *)v1122 + v1124[9]) = *(_OWORD *)((char *)v1123 + v1124[9]);
            *(_OWORD *)((char *)v1122 + v1124[10]) = *(_OWORD *)((char *)v1123 + v1124[10]);
            *(_OWORD *)((char *)v1122 + v1124[11]) = *(_OWORD *)((char *)v1123 + v1124[11]);
            uint64_t v1131 = v1124[12];
            uint64_t v1132 = (char *)v1122 + v1131;
            v1133 = (char *)v1123 + v1131;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1123 + v1131, 1, v1164))
            {
              uint64_t v1134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1132, v1133, *(void *)(*(void *)(v1134 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1132, v1133, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1132, 0, 1, v1164);
            }
            uint64_t v1135 = v1124[13];
            v1136 = (char *)v1122 + v1135;
            uint64_t v1137 = (char *)v1123 + v1135;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1123 + v1135, 1, v1164))
            {
              uint64_t v1138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1136, v1137, *(void *)(*(void *)(v1138 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 32))(v1136, v1137, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1136, 0, 1, v1164);
            }
            long long v304 = v1162;
            uint64_t v1139 = v1124[14];
            uint64_t v1140 = (char *)v1122 + v1139;
            uint64_t v1141 = (char *)v1123 + v1139;
            *(void *)uint64_t v1140 = *(void *)v1141;
            v1140[8] = v1141[8];
            *(_OWORD *)((char *)v1122 + v1124[15]) = *(_OWORD *)((char *)v1123 + v1124[15]);
            *(_OWORD *)((char *)v1122 + v1124[16]) = *(_OWORD *)((char *)v1123 + v1124[16]);
            *(_OWORD *)((char *)v1122 + v1124[17]) = *(_OWORD *)((char *)v1123 + v1124[17]);
            *(_OWORD *)((char *)v1122 + v1124[18]) = *(_OWORD *)((char *)v1123 + v1124[18]);
            *(_OWORD *)((char *)v1122 + v1124[19]) = *(_OWORD *)((char *)v1123 + v1124[19]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1122, 0, 1, (uint64_t)v1124);
          }
          memcpy((char *)v9 + v304[23], (char *)v10 + v304[23], 0x90uLL);
          goto LABEL_530;
        case 2u:
          long long v38 = v10[1];
          *long long v9 = *v10;
          v9[1] = v38;
          void v9[2] = v10[2];
          uint64_t v39 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v40 = v39[7];
          uint64_t v41 = (char *)v9 + v40;
          long long v42 = (char *)v10 + v40;
          uint64_t v43 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
          }
          uint64_t v240 = v39[8];
          uint64_t v241 = (char *)v9 + v240;
          uint64_t v242 = (char *)v10 + v240;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v240, 1, v43))
          {
            uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v241, v242, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)v241, 0, 1, v43);
          }
          *(_OWORD *)((char *)v9 + v39[9]) = *(_OWORD *)((char *)v10 + v39[9]);
          *(void *)((char *)v9 + v39[10]) = *(void *)((char *)v10 + v39[10]);
          *(void *)((char *)v9 + v39[11]) = *(void *)((char *)v10 + v39[11]);
          *(_OWORD *)((char *)v9 + v39[12]) = *(_OWORD *)((char *)v10 + v39[12]);
          uint64_t v305 = v39[13];
          uint64_t v306 = (char *)v9 + v305;
          uint64_t v307 = (char *)v10 + v305;
          long long v308 = *((_OWORD *)v307 + 1);
          *(_OWORD *)uint64_t v306 = *(_OWORD *)v307;
          *((_OWORD *)v306 + 1) = v308;
          *((void *)v306 + 4) = *((void *)v307 + 4);
          goto LABEL_530;
        case 3u:
          long long v45 = v10[1];
          *long long v9 = *v10;
          v9[1] = v45;
          void v9[2] = v10[2];
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
          *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
          uint64_t v1167 = (int *)type metadata accessor for Photo(0);
          uint64_t v46 = v1167[11];
          uint64_t v47 = (char *)v9 + v46;
          uint64_t v48 = (char *)v10 + v46;
          uint64_t v49 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
          {
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
          }
          uint64_t v244 = v1167;
          *(void *)((char *)v9 + v1167[12]) = *(void *)((char *)v10 + v1167[12]);
          *(void *)((char *)v9 + v1167[13]) = *(void *)((char *)v10 + v1167[13]);
          *(void *)((char *)v9 + v1167[14]) = *(void *)((char *)v10 + v1167[14]);
          *(void *)((char *)v9 + v1167[15]) = *(void *)((char *)v10 + v1167[15]);
          *(_OWORD *)((char *)v9 + v1167[16]) = *(_OWORD *)((char *)v10 + v1167[16]);
          uint64_t v245 = v1167[17];
          uint64_t v246 = (_OWORD *)((char *)v9 + v245);
          uint64_t v247 = (_OWORD *)((char *)v10 + v245);
          uint64_t v248 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          uint64_t v1161 = v49;
          if (__swift_getEnumTagSinglePayload((uint64_t)v247, 1, (uint64_t)v248))
          {
            uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v246, v247, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            *uint64_t v246 = *v247;
            uint64_t v309 = v248[5];
            uint64_t v310 = (_OWORD *)((char *)v246 + v309);
            uint64_t v1165 = v247;
            uint64_t v311 = (_OWORD *)((char *)v247 + v309);
            uint64_t v312 = type metadata accessor for RentalCarReservation(0);
            uint64_t v1159 = v246;
            uint64_t v1157 = v248;
            if (__swift_getEnumTagSinglePayload((uint64_t)v311, 1, v312))
            {
              uint64_t v313 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v310, v311, *(void *)(*(void *)(v313 - 8) + 64));
            }
            else
            {
              long long v370 = v311[1];
              *uint64_t v310 = *v311;
              v310[1] = v370;
              long long v371 = v311[3];
              v310[2] = v311[2];
              v310[3] = v371;
              long long v372 = v311[5];
              v310[4] = v311[4];
              v310[5] = v372;
              long long v373 = v311[7];
              v310[6] = v311[6];
              v310[7] = v373;
              *((unsigned char *)v310 + 128) = *((unsigned char *)v311 + 128);
              *(_WORD *)((char *)v310 + 129) = *(_WORD *)((char *)v311 + 129);
              *((void *)v310 + 17) = *((void *)v311 + 17);
              long long v374 = v311[10];
              v310[9] = v311[9];
              v310[10] = v374;
              long long v375 = v311[12];
              v310[11] = v311[11];
              v310[12] = v375;
              long long v376 = v311[14];
              v310[13] = v311[13];
              v310[14] = v376;
              v310[15] = v311[15];
              *((void *)v310 + 32) = *((void *)v311 + 32);
              *(_OWORD *)((char *)v310 + 264) = *(_OWORD *)((char *)v311 + 264);
              *(_OWORD *)((char *)v310 + 280) = *(_OWORD *)((char *)v311 + 280);
              *(_OWORD *)((char *)v310 + 296) = *(_OWORD *)((char *)v311 + 296);
              *(_OWORD *)((char *)v310 + 312) = *(_OWORD *)((char *)v311 + 312);
              *(_OWORD *)((char *)v310 + 328) = *(_OWORD *)((char *)v311 + 328);
              *(_OWORD *)((char *)v310 + 344) = *(_OWORD *)((char *)v311 + 344);
              *(_OWORD *)((char *)v310 + 360) = *(_OWORD *)((char *)v311 + 360);
              *((unsigned char *)v310 + 384) = *((unsigned char *)v311 + 384);
              *((void *)v310 + 47) = *((void *)v311 + 47);
              *(_OWORD *)((char *)v310 + 392) = *(_OWORD *)((char *)v311 + 392);
              *(_OWORD *)((char *)v310 + 408) = *(_OWORD *)((char *)v311 + 408);
              uint64_t v377 = *(int *)(v312 + 140);
              long long v378 = (char *)v310 + v377;
              long long v379 = (char *)v311 + v377;
              if (__swift_getEnumTagSinglePayload((uint64_t)v311 + v377, 1, v1161))
              {
                uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v378, v379, *(void *)(*(void *)(v380 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v378, v379, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v378, 0, 1, v1161);
              }
              uint64_t v396 = *(int *)(v312 + 144);
              uint64_t v397 = (char *)v310 + v396;
              uint64_t v398 = (char *)v311 + v396;
              if (__swift_getEnumTagSinglePayload((uint64_t)v311 + v396, 1, v1161))
              {
                uint64_t v399 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v397, v398, *(void *)(*(void *)(v399 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v397, v398, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v397, 0, 1, v1161);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v310, 0, 1, v312);
              uint64_t v244 = v1167;
              uint64_t v246 = v1159;
            }
            uint64_t v420 = v248[6];
            long long v421 = (_OWORD *)((char *)v246 + v420);
            long long v422 = (_OWORD *)((char *)v1165 + v420);
            uint64_t v423 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v422, 1, v423))
            {
              uint64_t v424 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v421, v422, *(void *)(*(void *)(v424 - 8) + 64));
            }
            else
            {
              long long v425 = v422[1];
              *long long v421 = *v422;
              v421[1] = v425;
              long long v426 = v422[3];
              v421[2] = v422[2];
              v421[3] = v426;
              long long v427 = v422[5];
              v421[4] = v422[4];
              v421[5] = v427;
              long long v428 = v422[7];
              v421[6] = v422[6];
              v421[7] = v428;
              *((unsigned char *)v421 + 128) = *((unsigned char *)v422 + 128);
              *(_WORD *)((char *)v421 + 129) = *(_WORD *)((char *)v422 + 129);
              *((void *)v421 + 17) = *((void *)v422 + 17);
              long long v429 = v422[10];
              v421[9] = v422[9];
              v421[10] = v429;
              long long v430 = v422[12];
              v421[11] = v422[11];
              v421[12] = v430;
              *((void *)v421 + 26) = *((void *)v422 + 26);
              *(_OWORD *)((char *)v421 + 216) = *(_OWORD *)((char *)v422 + 216);
              *(_OWORD *)((char *)v421 + 232) = *(_OWORD *)((char *)v422 + 232);
              *(_OWORD *)((char *)v421 + 248) = *(_OWORD *)((char *)v422 + 248);
              *(_OWORD *)((char *)v421 + 264) = *(_OWORD *)((char *)v422 + 264);
              *((unsigned char *)v421 + 296) = *((unsigned char *)v422 + 296);
              uint64_t v431 = *((void *)v422 + 36);
              *((void *)v421 + 35) = *((void *)v422 + 35);
              *((void *)v421 + 36) = v431;
              uint64_t v432 = *(int *)(v423 + 112);
              uint64_t v433 = (char *)v421 + v432;
              long long v434 = (char *)v422 + v432;
              if (__swift_getEnumTagSinglePayload((uint64_t)v422 + v432, 1, v1161))
              {
                uint64_t v435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v433, v434, *(void *)(*(void *)(v435 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v433, v434, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v433, 0, 1, v1161);
              }
              uint64_t v457 = *(int *)(v423 + 116);
              v458 = (char *)v421 + v457;
              uint64_t v459 = (char *)v422 + v457;
              if (__swift_getEnumTagSinglePayload((uint64_t)v422 + v457, 1, v1161))
              {
                uint64_t v460 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v458, v459, *(void *)(*(void *)(v460 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v458, v459, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v458, 0, 1, v1161);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v421, 0, 1, v423);
              uint64_t v244 = v1167;
              uint64_t v246 = v1159;
            }
            uint64_t v483 = v248[7];
            long long v484 = (_OWORD *)((char *)v246 + v483);
            long long v485 = (_OWORD *)((char *)v1165 + v483);
            long long v486 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v485, 1, (uint64_t)v486))
            {
              uint64_t v487 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v484, v485, *(void *)(*(void *)(v487 - 8) + 64));
            }
            else
            {
              long long v488 = v485[1];
              _OWORD *v484 = *v485;
              v484[1] = v488;
              long long v489 = v485[3];
              v484[2] = v485[2];
              v484[3] = v489;
              long long v490 = v485[5];
              v484[4] = v485[4];
              v484[5] = v490;
              long long v491 = v485[7];
              v484[6] = v485[6];
              v484[7] = v491;
              *((unsigned char *)v484 + 128) = *((unsigned char *)v485 + 128);
              *(_WORD *)((char *)v484 + 129) = *(_WORD *)((char *)v485 + 129);
              *((void *)v484 + 17) = *((void *)v485 + 17);
              long long v492 = v485[10];
              v484[9] = v485[9];
              v484[10] = v492;
              long long v493 = v485[12];
              v484[11] = v485[11];
              v484[12] = v493;
              long long v494 = v485[14];
              v484[13] = v485[13];
              v484[14] = v494;
              *((void *)v484 + 30) = *((void *)v485 + 30);
              *(_OWORD *)((char *)v484 + 248) = *(_OWORD *)((char *)v485 + 248);
              *(_OWORD *)((char *)v484 + 264) = *(_OWORD *)((char *)v485 + 264);
              *((unsigned char *)v484 + 296) = *((unsigned char *)v485 + 296);
              uint64_t v495 = *((void *)v485 + 36);
              *((void *)v484 + 35) = *((void *)v485 + 35);
              *((void *)v484 + 36) = v495;
              v484[19] = v485[19];
              uint64_t v496 = v486[29];
              uint64_t v497 = (char *)v484 + v496;
              long long v498 = (char *)v485 + v496;
              uint64_t v499 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v498, 1, v499))
              {
                uint64_t v500 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v497, v498, *(void *)(*(void *)(v500 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v499 - 8) + 32))(v497, v498, v499);
                __swift_storeEnumTagSinglePayload((uint64_t)v497, 0, 1, v499);
              }
              *(_OWORD *)((char *)v484 + v486[30]) = *(_OWORD *)((char *)v485 + v486[30]);
              uint64_t v523 = v486[31];
              uint64_t v524 = (char *)v484 + v523;
              uint64_t v525 = (char *)v485 + v523;
              if (__swift_getEnumTagSinglePayload((uint64_t)v485 + v523, 1, v1161))
              {
                uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v524, v525, *(void *)(*(void *)(v526 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v524, v525, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v524, 0, 1, v1161);
              }
              uint64_t v535 = v486[32];
              uint64_t v536 = (char *)v484 + v535;
              uint64_t v537 = (char *)v485 + v535;
              if (__swift_getEnumTagSinglePayload((uint64_t)v485 + v535, 1, v1161))
              {
                uint64_t v538 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v536, v537, *(void *)(*(void *)(v538 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v536, v537, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v536, 0, 1, v1161);
              }
              uint64_t v248 = v1157;
              __swift_storeEnumTagSinglePayload((uint64_t)v484, 0, 1, (uint64_t)v486);
              uint64_t v244 = v1167;
              uint64_t v246 = v1159;
            }
            uint64_t v560 = v248[8];
            long long v561 = (_OWORD *)((char *)v246 + v560);
            long long v562 = (_OWORD *)((char *)v1165 + v560);
            uint64_t v563 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v562, 1, v563))
            {
              uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v561, v562, *(void *)(*(void *)(v564 - 8) + 64));
            }
            else
            {
              long long v565 = v562[1];
              _OWORD *v561 = *v562;
              v561[1] = v565;
              long long v566 = v562[3];
              v561[2] = v562[2];
              v561[3] = v566;
              long long v567 = v562[5];
              v561[4] = v562[4];
              v561[5] = v567;
              long long v568 = v562[7];
              v561[6] = v562[6];
              v561[7] = v568;
              *((unsigned char *)v561 + 128) = *((unsigned char *)v562 + 128);
              *(_WORD *)((char *)v561 + 129) = *(_WORD *)((char *)v562 + 129);
              *((void *)v561 + 17) = *((void *)v562 + 17);
              long long v569 = v562[10];
              v561[9] = v562[9];
              v561[10] = v569;
              long long v570 = v562[12];
              v561[11] = v562[11];
              v561[12] = v570;
              long long v571 = v562[14];
              v561[13] = v562[13];
              v561[14] = v571;
              long long v572 = v562[16];
              v561[15] = v562[15];
              v561[16] = v572;
              *((unsigned char *)v561 + 280) = *((unsigned char *)v562 + 280);
              *((void *)v561 + 34) = *((void *)v562 + 34);
              v561[18] = v562[18];
              uint64_t v573 = *(int *)(v563 + 108);
              long long v574 = (char *)v561 + v573;
              long long v575 = (char *)v562 + v573;
              if (__swift_getEnumTagSinglePayload((uint64_t)v562 + v573, 1, v1161))
              {
                uint64_t v576 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v574, v575, *(void *)(*(void *)(v576 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v574, v575, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v574, 0, 1, v1161);
              }
              uint64_t v599 = *(int *)(v563 + 112);
              uint64_t v600 = (char *)v561 + v599;
              uint64_t v601 = (char *)v562 + v599;
              if (__swift_getEnumTagSinglePayload((uint64_t)v562 + v599, 1, v1161))
              {
                uint64_t v602 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v600, v601, *(void *)(*(void *)(v602 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v600, v601, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v600, 0, 1, v1161);
              }
              uint64_t v248 = v1157;
              __swift_storeEnumTagSinglePayload((uint64_t)v561, 0, 1, v563);
              uint64_t v244 = v1167;
              uint64_t v246 = v1159;
            }
            uint64_t v623 = v248[9];
            long long v624 = (_OWORD *)((char *)v246 + v623);
            uint64_t v625 = (_OWORD *)((char *)v1165 + v623);
            uint64_t v626 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v625, 1, (uint64_t)v626))
            {
              uint64_t v627 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v624, v625, *(void *)(*(void *)(v627 - 8) + 64));
            }
            else
            {
              long long v628 = v625[1];
              *long long v624 = *v625;
              v624[1] = v628;
              long long v629 = v625[3];
              v624[2] = v625[2];
              v624[3] = v629;
              long long v630 = v625[5];
              v624[4] = v625[4];
              v624[5] = v630;
              long long v631 = v625[7];
              v624[6] = v625[6];
              v624[7] = v631;
              *((unsigned char *)v624 + 128) = *((unsigned char *)v625 + 128);
              *(_WORD *)((char *)v624 + 129) = *(_WORD *)((char *)v625 + 129);
              *((void *)v624 + 17) = *((void *)v625 + 17);
              long long v632 = v625[10];
              v624[9] = v625[9];
              v624[10] = v632;
              long long v633 = v625[12];
              v624[11] = v625[11];
              v624[12] = v633;
              long long v634 = v625[14];
              v624[13] = v625[13];
              v624[14] = v634;
              v624[15] = v625[15];
              uint64_t v635 = v626[24];
              long long v636 = (char *)v624 + v635;
              long long v637 = (char *)v625 + v635;
              if (__swift_getEnumTagSinglePayload((uint64_t)v625 + v635, 1, v1161))
              {
                uint64_t v638 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v636, v637, *(void *)(*(void *)(v638 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v636, v637, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v636, 0, 1, v1161);
              }
              uint64_t v660 = v626[25];
              uint64_t v661 = (char *)v624 + v660;
              uint64_t v662 = (char *)v625 + v660;
              if (__swift_getEnumTagSinglePayload((uint64_t)v625 + v660, 1, v1161))
              {
                uint64_t v663 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v661, v662, *(void *)(*(void *)(v663 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v661, v662, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v661, 0, 1, v1161);
              }
              uint64_t v673 = v626[26];
              uint64_t v674 = (char *)v624 + v673;
              uint64_t v675 = (char *)v625 + v673;
              uint64_t v676 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v675, 1, v676))
              {
                uint64_t v677 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v674, v675, *(void *)(*(void *)(v677 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v676 - 8) + 32))(v674, v675, v676);
                __swift_storeEnumTagSinglePayload((uint64_t)v674, 0, 1, v676);
              }
              uint64_t v244 = v1167;
              uint64_t v248 = v1157;
              __swift_storeEnumTagSinglePayload((uint64_t)v624, 0, 1, (uint64_t)v626);
              uint64_t v246 = v1159;
            }
            uint64_t v697 = v248[10];
            uint64_t v698 = (_OWORD *)((char *)v246 + v697);
            uint64_t v699 = (_OWORD *)((char *)v1165 + v697);
            uint64_t v700 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v699, 1, (uint64_t)v700))
            {
              uint64_t v701 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v698, v699, *(void *)(*(void *)(v701 - 8) + 64));
            }
            else
            {
              long long v702 = v699[1];
              *uint64_t v698 = *v699;
              v698[1] = v702;
              long long v703 = v699[3];
              v698[2] = v699[2];
              v698[3] = v703;
              long long v704 = v699[5];
              v698[4] = v699[4];
              v698[5] = v704;
              long long v705 = v699[7];
              v698[6] = v699[6];
              v698[7] = v705;
              *((unsigned char *)v698 + 128) = *((unsigned char *)v699 + 128);
              *(_WORD *)((char *)v698 + 129) = *(_WORD *)((char *)v699 + 129);
              *((void *)v698 + 17) = *((void *)v699 + 17);
              long long v706 = v699[10];
              v698[9] = v699[9];
              v698[10] = v706;
              long long v707 = v699[12];
              v698[11] = v699[11];
              v698[12] = v707;
              v698[13] = v699[13];
              uint64_t v708 = v700[22];
              long long v709 = (char *)v698 + v708;
              long long v710 = (char *)v699 + v708;
              if (__swift_getEnumTagSinglePayload((uint64_t)v699 + v708, 1, v1161))
              {
                uint64_t v711 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v709, v710, *(void *)(*(void *)(v711 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v709, v710, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v709, 0, 1, v1161);
              }
              uint64_t v732 = v700[23];
              uint64_t v733 = (char *)v698 + v732;
              uint64_t v734 = (char *)v699 + v732;
              if (__swift_getEnumTagSinglePayload((uint64_t)v699 + v732, 1, v1161))
              {
                uint64_t v735 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v733, v734, *(void *)(*(void *)(v735 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v733, v734, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v733, 0, 1, v1161);
              }
              uint64_t v748 = v700[24];
              uint64_t v749 = (char *)v698 + v748;
              uint64_t v750 = (char *)v699 + v748;
              *(void *)uint64_t v749 = *(void *)v750;
              v749[8] = v750[8];
              uint64_t v751 = v700[25];
              uint64_t v752 = (char *)v698 + v751;
              uint64_t v753 = (char *)v699 + v751;
              uint64_t v754 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v753, 1, v754))
              {
                uint64_t v755 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v752, v753, *(void *)(*(void *)(v755 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v754 - 8) + 32))(v752, v753, v754);
                __swift_storeEnumTagSinglePayload((uint64_t)v752, 0, 1, v754);
              }
              uint64_t v244 = v1167;
              uint64_t v248 = v1157;
              __swift_storeEnumTagSinglePayload((uint64_t)v698, 0, 1, (uint64_t)v700);
              uint64_t v246 = v1159;
            }
            uint64_t v776 = v248[11];
            uint64_t v777 = (_OWORD *)((char *)v246 + v776);
            uint64_t v778 = (_OWORD *)((char *)v1165 + v776);
            uint64_t v779 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v778, 1, (uint64_t)v779))
            {
              uint64_t v780 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v777, v778, *(void *)(*(void *)(v780 - 8) + 64));
            }
            else
            {
              long long v781 = v778[1];
              *uint64_t v777 = *v778;
              v777[1] = v781;
              long long v782 = v778[3];
              v777[2] = v778[2];
              v777[3] = v782;
              long long v783 = v778[5];
              v777[4] = v778[4];
              v777[5] = v783;
              *((unsigned char *)v777 + 96) = *((unsigned char *)v778 + 96);
              *(_OWORD *)((char *)v777 + 104) = *(_OWORD *)((char *)v778 + 104);
              uint64_t v784 = v779[13];
              uint64_t v785 = (char *)v777 + v784;
              uint64_t v786 = (char *)v778 + v784;
              uint64_t v787 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v786, 1, v787))
              {
                uint64_t v788 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v785, v786, *(void *)(*(void *)(v788 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v787 - 8) + 32))(v785, v786, v787);
                __swift_storeEnumTagSinglePayload((uint64_t)v785, 0, 1, v787);
              }
              uint64_t v805 = v779[14];
              uint64_t v806 = (char *)v777 + v805;
              uint64_t v807 = (char *)v778 + v805;
              if (__swift_getEnumTagSinglePayload((uint64_t)v778 + v805, 1, v787))
              {
                uint64_t v808 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v806, v807, *(void *)(*(void *)(v808 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v787 - 8) + 32))(v806, v807, v787);
                __swift_storeEnumTagSinglePayload((uint64_t)v806, 0, 1, v787);
              }
              *(_OWORD *)((char *)v777 + v779[15]) = *(_OWORD *)((char *)v778 + v779[15]);
              *(_OWORD *)((char *)v777 + v779[16]) = *(_OWORD *)((char *)v778 + v779[16]);
              *(_OWORD *)((char *)v777 + v779[17]) = *(_OWORD *)((char *)v778 + v779[17]);
              uint64_t v820 = v779[18];
              __dstd = (char *)v778 + v820;
              v1155 = (char *)v777 + v820;
              uint64_t v821 = type metadata accessor for DateComponents();
              uint64_t v822 = *(void (**)(char *, char *, uint64_t))(*(void *)(v821 - 8) + 32);
              v822(v1155, __dstd, v821);
              v822((char *)v777 + v779[19], (char *)v778 + v779[19], v821);
              *(_OWORD *)((char *)v777 + v779[20]) = *(_OWORD *)((char *)v778 + v779[20]);
              *(_OWORD *)((char *)v777 + v779[21]) = *(_OWORD *)((char *)v778 + v779[21]);
              *(_OWORD *)((char *)v777 + v779[22]) = *(_OWORD *)((char *)v778 + v779[22]);
              *(_OWORD *)((char *)v777 + v779[23]) = *(_OWORD *)((char *)v778 + v779[23]);
              *(_OWORD *)((char *)v777 + v779[24]) = *(_OWORD *)((char *)v778 + v779[24]);
              *(_OWORD *)((char *)v777 + v779[25]) = *(_OWORD *)((char *)v778 + v779[25]);
              *(_OWORD *)((char *)v777 + v779[26]) = *(_OWORD *)((char *)v778 + v779[26]);
              *(_OWORD *)((char *)v777 + v779[27]) = *(_OWORD *)((char *)v778 + v779[27]);
              *(_OWORD *)((char *)v777 + v779[28]) = *(_OWORD *)((char *)v778 + v779[28]);
              *(_OWORD *)((char *)v777 + v779[29]) = *(_OWORD *)((char *)v778 + v779[29]);
              *(_OWORD *)((char *)v777 + v779[30]) = *(_OWORD *)((char *)v778 + v779[30]);
              *(_OWORD *)((char *)v777 + v779[31]) = *(_OWORD *)((char *)v778 + v779[31]);
              *(_OWORD *)((char *)v777 + v779[32]) = *(_OWORD *)((char *)v778 + v779[32]);
              *(void *)((char *)v777 + v779[33]) = *(void *)((char *)v778 + v779[33]);
              *(void *)((char *)v777 + v779[34]) = *(void *)((char *)v778 + v779[34]);
              *(_OWORD *)((char *)v777 + v779[35]) = *(_OWORD *)((char *)v778 + v779[35]);
              *(_OWORD *)((char *)v777 + v779[36]) = *(_OWORD *)((char *)v778 + v779[36]);
              *(_OWORD *)((char *)v777 + v779[37]) = *(_OWORD *)((char *)v778 + v779[37]);
              uint64_t v823 = v779[38];
              uint64_t v824 = (char *)v777 + v823;
              uint64_t v825 = (char *)v778 + v823;
              if (__swift_getEnumTagSinglePayload((uint64_t)v778 + v823, 1, v1161))
              {
                uint64_t v826 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v824, v825, *(void *)(*(void *)(v826 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v824, v825, v1161);
                __swift_storeEnumTagSinglePayload((uint64_t)v824, 0, 1, v1161);
              }
              uint64_t v244 = v1167;
              uint64_t v248 = v1157;
              *(_OWORD *)((char *)v777 + v779[39]) = *(_OWORD *)((char *)v778 + v779[39]);
              *(_OWORD *)((char *)v777 + v779[40]) = *(_OWORD *)((char *)v778 + v779[40]);
              uint64_t v853 = v779[41];
              long long v854 = (char *)v777 + v853;
              uint64_t v855 = (char *)v778 + v853;
              *(void *)long long v854 = *(void *)v855;
              v854[8] = v855[8];
              *(_OWORD *)((char *)v777 + v779[42]) = *(_OWORD *)((char *)v778 + v779[42]);
              uint64_t v856 = v779[43];
              uint64_t v857 = (char *)v777 + v856;
              uint64_t v858 = (char *)v778 + v856;
              *(_OWORD *)uint64_t v857 = *(_OWORD *)v858;
              *(void *)(v857 + 13) = *(void *)(v858 + 13);
              *(_OWORD *)((char *)v777 + v779[44]) = *(_OWORD *)((char *)v778 + v779[44]);
              *(_OWORD *)((char *)v777 + v779[45]) = *(_OWORD *)((char *)v778 + v779[45]);
              *(_OWORD *)((char *)v777 + v779[46]) = *(_OWORD *)((char *)v778 + v779[46]);
              *(_OWORD *)((char *)v777 + v779[47]) = *(_OWORD *)((char *)v778 + v779[47]);
              __swift_storeEnumTagSinglePayload((uint64_t)v777, 0, 1, (uint64_t)v779);
              uint64_t v246 = v1159;
            }
            uint64_t v859 = v248[12];
            uint64_t v860 = (_OWORD *)((char *)v246 + v859);
            uint64_t v861 = (_OWORD *)((char *)v1165 + v859);
            uint64_t v862 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v861, 1, (uint64_t)v862))
            {
              uint64_t v863 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v860, v861, *(void *)(*(void *)(v863 - 8) + 64));
            }
            else
            {
              long long v864 = v861[1];
              _OWORD *v860 = *v861;
              v860[1] = v864;
              long long v865 = v861[3];
              v860[2] = v861[2];
              v860[3] = v865;
              long long v866 = v861[5];
              v860[4] = v861[4];
              v860[5] = v866;
              *((unsigned char *)v860 + 96) = *((unsigned char *)v861 + 96);
              *(_OWORD *)((char *)v860 + 104) = *(_OWORD *)((char *)v861 + 104);
              *(_OWORD *)((char *)v860 + 120) = *(_OWORD *)((char *)v861 + 120);
              uint64_t v867 = v862[14];
              uint64_t v868 = (char *)v860 + v867;
              uint64_t v869 = (char *)v861 + v867;
              uint64_t v870 = type metadata accessor for DateComponents();
              if (__swift_getEnumTagSinglePayload((uint64_t)v869, 1, v870))
              {
                uint64_t v871 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v868, v869, *(void *)(*(void *)(v871 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v870 - 8) + 32))(v868, v869, v870);
                __swift_storeEnumTagSinglePayload((uint64_t)v868, 0, 1, v870);
              }
              uint64_t v894 = v862[15];
              uint64_t v895 = (char *)v860 + v894;
              uint64_t v896 = (char *)v861 + v894;
              if (__swift_getEnumTagSinglePayload((uint64_t)v861 + v894, 1, v870))
              {
                uint64_t v897 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v895, v896, *(void *)(*(void *)(v897 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v870 - 8) + 32))(v895, v896, v870);
                __swift_storeEnumTagSinglePayload((uint64_t)v895, 0, 1, v870);
              }
              uint64_t v244 = v1167;
              *(_OWORD *)((char *)v860 + v862[16]) = *(_OWORD *)((char *)v861 + v862[16]);
              *(_OWORD *)((char *)v860 + v862[17]) = *(_OWORD *)((char *)v861 + v862[17]);
              *(_OWORD *)((char *)v860 + v862[18]) = *(_OWORD *)((char *)v861 + v862[18]);
              *(_OWORD *)((char *)v860 + v862[19]) = *(_OWORD *)((char *)v861 + v862[19]);
              *(_OWORD *)((char *)v860 + v862[20]) = *(_OWORD *)((char *)v861 + v862[20]);
              *(void *)((char *)v860 + v862[21]) = *(void *)((char *)v861 + v862[21]);
              *(void *)((char *)v860 + v862[22]) = *(void *)((char *)v861 + v862[22]);
              uint64_t v923 = v862[23];
              long long v924 = (char *)v860 + v923;
              long long v925 = (char *)v861 + v923;
              v924[8] = v925[8];
              *(void *)long long v924 = *(void *)v925;
              uint64_t v926 = v862[24];
              uint64_t v927 = (char *)v860 + v926;
              uint64_t v928 = (char *)v861 + v926;
              v927[8] = v928[8];
              *(void *)uint64_t v927 = *(void *)v928;
              *(_OWORD *)((char *)v860 + v862[25]) = *(_OWORD *)((char *)v861 + v862[25]);
              *(_OWORD *)((char *)v860 + v862[26]) = *(_OWORD *)((char *)v861 + v862[26]);
              *(_OWORD *)((char *)v860 + v862[27]) = *(_OWORD *)((char *)v861 + v862[27]);
              *(_OWORD *)((char *)v860 + v862[28]) = *(_OWORD *)((char *)v861 + v862[28]);
              uint64_t v929 = v862[29];
              uint64_t v930 = (char *)v860 + v929;
              uint64_t v931 = (char *)v861 + v929;
              *(void *)uint64_t v930 = *(void *)v931;
              v930[8] = v931[8];
              __swift_storeEnumTagSinglePayload((uint64_t)v860, 0, 1, (uint64_t)v862);
              uint64_t v246 = v1159;
              uint64_t v248 = v1157;
            }
            uint64_t v932 = v248[13];
            uint64_t v933 = (_OWORD *)((char *)v246 + v932);
            uint64_t v934 = (_OWORD *)((char *)v1165 + v932);
            uint64_t v935 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v934, 1, (uint64_t)v935))
            {
              uint64_t v936 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v933, v934, *(void *)(*(void *)(v936 - 8) + 64));
            }
            else
            {
              long long v937 = v934[1];
              *uint64_t v933 = *v934;
              v933[1] = v937;
              long long v938 = v934[3];
              v933[2] = v934[2];
              v933[3] = v938;
              long long v939 = v934[5];
              v933[4] = v934[4];
              v933[5] = v939;
              *((unsigned char *)v933 + 96) = *((unsigned char *)v934 + 96);
              *(_OWORD *)((char *)v933 + 104) = *(_OWORD *)((char *)v934 + 104);
              *(_OWORD *)((char *)v933 + 120) = *(_OWORD *)((char *)v934 + 120);
              uint64_t v940 = v935[14];
              uint64_t v941 = (char *)v933 + v940;
              uint64_t v942 = (char *)v934 + v940;
              uint64_t v943 = type metadata accessor for DateComponents();
              if (__swift_getEnumTagSinglePayload((uint64_t)v942, 1, v943))
              {
                uint64_t v944 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v941, v942, *(void *)(*(void *)(v944 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v943 - 8) + 32))(v941, v942, v943);
                __swift_storeEnumTagSinglePayload((uint64_t)v941, 0, 1, v943);
              }
              uint64_t v244 = v1167;
              *(_OWORD *)((char *)v933 + v935[15]) = *(_OWORD *)((char *)v934 + v935[15]);
              *(_OWORD *)((char *)v933 + v935[16]) = *(_OWORD *)((char *)v934 + v935[16]);
              *(_OWORD *)((char *)v933 + v935[17]) = *(_OWORD *)((char *)v934 + v935[17]);
              *(_OWORD *)((char *)v933 + v935[18]) = *(_OWORD *)((char *)v934 + v935[18]);
              *(_OWORD *)((char *)v933 + v935[19]) = *(_OWORD *)((char *)v934 + v935[19]);
              *(void *)((char *)v933 + v935[20]) = *(void *)((char *)v934 + v935[20]);
              *(_OWORD *)((char *)v933 + v935[21]) = *(_OWORD *)((char *)v934 + v935[21]);
              *(_OWORD *)((char *)v933 + v935[22]) = *(_OWORD *)((char *)v934 + v935[22]);
              *(_OWORD *)((char *)v933 + v935[23]) = *(_OWORD *)((char *)v934 + v935[23]);
              __swift_storeEnumTagSinglePayload((uint64_t)v933, 0, 1, (uint64_t)v935);
              uint64_t v246 = v1159;
              uint64_t v248 = v1157;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, (uint64_t)v248);
          }
          uint64_t v1026 = v244[18];
          uint64_t v1027 = (_OWORD *)((char *)v9 + v1026);
          uint64_t v1028 = (_OWORD *)((char *)v10 + v1026);
          v1029 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1028, 1, (uint64_t)v1029))
          {
            uint64_t v1030 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1027, v1028, *(void *)(*(void *)(v1030 - 8) + 64));
          }
          else
          {
            long long v1031 = v1028[1];
            _OWORD *v1027 = *v1028;
            v1027[1] = v1031;
            long long v1032 = v1028[3];
            v1027[2] = v1028[2];
            v1027[3] = v1032;
            long long v1033 = v1028[5];
            v1027[4] = v1028[4];
            v1027[5] = v1033;
            uint64_t v1034 = v1029[10];
            uint64_t v1035 = (char *)v1027 + v1034;
            uint64_t v1036 = (char *)v1028 + v1034;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1028 + v1034, 1, v1161))
            {
              uint64_t v1037 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1035, v1036, *(void *)(*(void *)(v1037 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1035, v1036, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1035, 0, 1, v1161);
            }
            uint64_t v1038 = v1029[11];
            long long v1039 = (char *)v1027 + v1038;
            uint64_t v1040 = (char *)v1028 + v1038;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1028 + v1038, 1, v1161))
            {
              uint64_t v1041 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1039, v1040, *(void *)(*(void *)(v1041 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1039, v1040, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1039, 0, 1, v1161);
            }
            *(_OWORD *)((char *)v1027 + v1029[12]) = *(_OWORD *)((char *)v1028 + v1029[12]);
            *(_OWORD *)((char *)v1027 + v1029[13]) = *(_OWORD *)((char *)v1028 + v1029[13]);
            *(_OWORD *)((char *)v1027 + v1029[14]) = *(_OWORD *)((char *)v1028 + v1029[14]);
            uint64_t v1042 = v1029[15];
            uint64_t v1043 = (char *)v1027 + v1042;
            uint64_t v1044 = (char *)v1028 + v1042;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1028 + v1042, 1, v1161))
            {
              uint64_t v1045 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1043, v1044, *(void *)(*(void *)(v1045 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1043, v1044, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1043, 0, 1, v1161);
            }
            *(_OWORD *)((char *)v1027 + v1029[16]) = *(_OWORD *)((char *)v1028 + v1029[16]);
            *(_OWORD *)((char *)v1027 + v1029[17]) = *(_OWORD *)((char *)v1028 + v1029[17]);
            *(_OWORD *)((char *)v1027 + v1029[18]) = *(_OWORD *)((char *)v1028 + v1029[18]);
            *(_OWORD *)((char *)v1027 + v1029[19]) = *(_OWORD *)((char *)v1028 + v1029[19]);
            *(_OWORD *)((char *)v1027 + v1029[20]) = *(_OWORD *)((char *)v1028 + v1029[20]);
            *(_OWORD *)((char *)v1027 + v1029[21]) = *(_OWORD *)((char *)v1028 + v1029[21]);
            *(_OWORD *)((char *)v1027 + v1029[22]) = *(_OWORD *)((char *)v1028 + v1029[22]);
            *(_OWORD *)((char *)v1027 + v1029[23]) = *(_OWORD *)((char *)v1028 + v1029[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1027, 0, 1, (uint64_t)v1029);
            uint64_t v244 = v1167;
          }
          uint64_t v1046 = v244[19];
          uint64_t v1047 = (_OWORD *)((char *)v9 + v1046);
          uint64_t v1048 = (_OWORD *)((char *)v10 + v1046);
          uint64_t v1049 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1048, 1, (uint64_t)v1049))
          {
            uint64_t v1050 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1047, v1048, *(void *)(*(void *)(v1050 - 8) + 64));
          }
          else
          {
            long long v1051 = v1048[1];
            *uint64_t v1047 = *v1048;
            v1047[1] = v1051;
            long long v1052 = v1048[3];
            v1047[2] = v1048[2];
            v1047[3] = v1052;
            long long v1053 = v1048[5];
            v1047[4] = v1048[4];
            v1047[5] = v1053;
            uint64_t v1054 = v1049[11];
            uint64_t v1055 = (char *)v1047 + v1054;
            uint64_t v1056 = (char *)v1048 + v1054;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1048 + v1054, 1, v1161))
            {
              uint64_t v1057 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1055, v1056, *(void *)(*(void *)(v1057 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1055, v1056, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1055, 0, 1, v1161);
            }
            *(_OWORD *)((char *)v1047 + v1049[12]) = *(_OWORD *)((char *)v1048 + v1049[12]);
            *(void *)((char *)v1047 + v1049[13]) = *(void *)((char *)v1048 + v1049[13]);
            uint64_t v1058 = v1049[14];
            uint64_t v1059 = (char *)v1047 + v1058;
            uint64_t v1060 = (char *)v1048 + v1058;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1048 + v1058, 1, v1161))
            {
              uint64_t v1061 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1059, v1060, *(void *)(*(void *)(v1061 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1059, v1060, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1059, 0, 1, v1161);
            }
            *(void *)((char *)v1047 + v1049[15]) = *(void *)((char *)v1048 + v1049[15]);
            *(void *)((char *)v1047 + v1049[16]) = *(void *)((char *)v1048 + v1049[16]);
            *(_OWORD *)((char *)v1047 + v1049[17]) = *(_OWORD *)((char *)v1048 + v1049[17]);
            *(void *)((char *)v1047 + v1049[18]) = *(void *)((char *)v1048 + v1049[18]);
            *(void *)((char *)v1047 + v1049[19]) = *(void *)((char *)v1048 + v1049[19]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1047, 0, 1, (uint64_t)v1049);
            uint64_t v244 = v1167;
          }
          uint64_t v1062 = v244[20];
          uint64_t v1063 = (_OWORD *)((char *)v9 + v1062);
          uint64_t v1064 = (_OWORD *)((char *)v10 + v1062);
          uint64_t v1065 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1064, 1, (uint64_t)v1065))
          {
            uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1063, v1064, *(void *)(*(void *)(v1066 - 8) + 64));
          }
          else
          {
            long long v1067 = v1064[1];
            *uint64_t v1063 = *v1064;
            v1063[1] = v1067;
            long long v1068 = v1064[3];
            v1063[2] = v1064[2];
            v1063[3] = v1068;
            uint64_t v1069 = v1065[8];
            uint64_t v1070 = (char *)v1063 + v1069;
            uint64_t v1071 = (char *)v1064 + v1069;
            uint64_t v1072 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1071, 1, v1072))
            {
              uint64_t v1073 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1070, v1071, *(void *)(*(void *)(v1073 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1072 - 8) + 32))(v1070, v1071, v1072);
              __swift_storeEnumTagSinglePayload((uint64_t)v1070, 0, 1, v1072);
            }
            *(_OWORD *)((char *)v1063 + v1065[9]) = *(_OWORD *)((char *)v1064 + v1065[9]);
            *(_OWORD *)((char *)v1063 + v1065[10]) = *(_OWORD *)((char *)v1064 + v1065[10]);
            *(_OWORD *)((char *)v1063 + v1065[11]) = *(_OWORD *)((char *)v1064 + v1065[11]);
            uint64_t v1074 = v1065[12];
            uint64_t v1075 = (char *)v1063 + v1074;
            long long v1076 = (char *)v1064 + v1074;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1064 + v1074, 1, v1161))
            {
              uint64_t v1077 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1075, v1076, *(void *)(*(void *)(v1077 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1075, v1076, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1075, 0, 1, v1161);
            }
            uint64_t v1078 = v1065[13];
            uint64_t v1079 = (char *)v1063 + v1078;
            v1080 = (char *)v1064 + v1078;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1064 + v1078, 1, v1161))
            {
              uint64_t v1081 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1079, v1080, *(void *)(*(void *)(v1081 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1161 - 8) + 32))(v1079, v1080, v1161);
              __swift_storeEnumTagSinglePayload((uint64_t)v1079, 0, 1, v1161);
            }
            uint64_t v1082 = v1065[14];
            uint64_t v1083 = (char *)v1063 + v1082;
            v1084 = (char *)v1064 + v1082;
            *(void *)uint64_t v1083 = *(void *)v1084;
            v1083[8] = v1084[8];
            *(_OWORD *)((char *)v1063 + v1065[15]) = *(_OWORD *)((char *)v1064 + v1065[15]);
            *(_OWORD *)((char *)v1063 + v1065[16]) = *(_OWORD *)((char *)v1064 + v1065[16]);
            *(_OWORD *)((char *)v1063 + v1065[17]) = *(_OWORD *)((char *)v1064 + v1065[17]);
            *(_OWORD *)((char *)v1063 + v1065[18]) = *(_OWORD *)((char *)v1064 + v1065[18]);
            *(_OWORD *)((char *)v1063 + v1065[19]) = *(_OWORD *)((char *)v1064 + v1065[19]);
            __swift_storeEnumTagSinglePayload((uint64_t)v1063, 0, 1, (uint64_t)v1065);
            uint64_t v244 = v1167;
          }
          memcpy((char *)v9 + v244[21], (char *)v10 + v244[21], 0x90uLL);
          goto LABEL_530;
        case 4u:
          long long v51 = v10[1];
          *long long v9 = *v10;
          v9[1] = v51;
          long long v52 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v52;
          uint64_t v53 = type metadata accessor for NoteDocument(0);
          uint64_t v54 = *(int *)(v53 + 32);
          uint64_t v55 = (char *)v9 + v54;
          uint64_t v56 = (char *)v10 + v54;
          uint64_t v57 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
          {
            uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
          }
          uint64_t v250 = *(int *)(v53 + 36);
          uint64_t v251 = (char *)v9 + v250;
          uint64_t v252 = (char *)v10 + v250;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v250, 1, v57)) {
            goto LABEL_112;
          }
          goto LABEL_142;
        case 5u:
          long long v59 = v10[1];
          *long long v9 = *v10;
          v9[1] = v59;
          void v9[2] = v10[2];
          uint64_t v60 = (int *)type metadata accessor for Reminder(0);
          uint64_t v61 = v60[7];
          uint64_t v62 = (char *)v9 + v61;
          uint64_t v63 = (char *)v10 + v61;
          uint64_t v64 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
          }
          uint64_t v253 = v60[8];
          uint64_t v254 = (char *)v9 + v253;
          uint64_t v255 = (char *)v10 + v253;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v253, 1, v64))
          {
            uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v254, v255, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v64);
          }
          *((unsigned char *)v9 + v60[9]) = *((unsigned char *)v10 + v60[9]);
          *(_OWORD *)((char *)v9 + v60[10]) = *(_OWORD *)((char *)v10 + v60[10]);
          *(_OWORD *)((char *)v9 + v60[11]) = *(_OWORD *)((char *)v10 + v60[11]);
          uint64_t v314 = v60[12];
          uint64_t v83 = (char *)v9 + v314;
          long long v84 = (char *)v10 + v314;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85)) {
            goto LABEL_152;
          }
          goto LABEL_134;
        case 6u:
          long long v66 = v10[1];
          *long long v9 = *v10;
          v9[1] = v66;
          long long v67 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v67;
          uint64_t v68 = (int *)type metadata accessor for PhoneHistory(0);
          uint64_t v69 = v68[10];
          uint64_t v70 = (char *)v9 + v69;
          uint64_t v71 = (char *)v10 + v69;
          uint64_t v72 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
          {
            uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
            __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
          }
          *(_OWORD *)((char *)v9 + v68[11]) = *(_OWORD *)((char *)v10 + v68[11]);
          *(_OWORD *)((char *)v9 + v68[12]) = *(_OWORD *)((char *)v10 + v68[12]);
          uint64_t v257 = v68[13];
          uint64_t v83 = (char *)v9 + v257;
          long long v84 = (char *)v10 + v257;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85)) {
            goto LABEL_152;
          }
          goto LABEL_134;
        case 7u:
          long long v74 = v10[1];
          *long long v9 = *v10;
          v9[1] = v74;
          void v9[2] = v10[2];
          uint64_t v75 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v76 = *(int *)(v75 + 28);
          uint64_t v77 = (char *)v9 + v76;
          uint64_t v78 = (char *)v10 + v76;
          uint64_t v79 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
          {
            uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
            __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
          }
          uint64_t v258 = *(int *)(v75 + 32);
          uint64_t v83 = (char *)v9 + v258;
          long long v84 = (char *)v10 + v258;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85)) {
            goto LABEL_152;
          }
          goto LABEL_134;
        case 8u:
          long long v81 = v10[1];
          *long long v9 = *v10;
          v9[1] = v81;
          void v9[2] = v10[2];
          uint64_t v82 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          uint64_t v83 = (char *)v9 + v82;
          long long v84 = (char *)v10 + v82;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85)) {
            goto LABEL_152;
          }
          goto LABEL_134;
        case 9u:
          long long v86 = v10[1];
          *long long v9 = *v10;
          v9[1] = v86;
          uint64_t v87 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v88 = v87[6];
          uint64_t v89 = (char *)v9 + v88;
          uint64_t v90 = (char *)v10 + v88;
          uint64_t v91 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
          {
            uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
            __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
          }
          uint64_t v259 = v87[7];
          uint64_t v260 = (char *)v9 + v259;
          uint64_t v261 = (char *)v10 + v259;
          *(void *)uint64_t v260 = *(void *)v261;
          v260[8] = v261[8];
          uint64_t v262 = v87[8];
          uint64_t v83 = (char *)v9 + v262;
          long long v84 = (char *)v10 + v262;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85)) {
            goto LABEL_152;
          }
          goto LABEL_134;
        case 0xAu:
          long long v93 = v10[1];
          *long long v9 = *v10;
          v9[1] = v93;
          uint64_t v94 = (int *)type metadata accessor for Safari(0);
          uint64_t v95 = v94[6];
          uint64_t v96 = (char *)v9 + v95;
          long long v97 = (char *)v10 + v95;
          uint64_t v57 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v57))
          {
            uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v96, v97, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v57);
          }
          *(_OWORD *)((char *)v9 + v94[7]) = *(_OWORD *)((char *)v10 + v94[7]);
          *(_OWORD *)((char *)v9 + v94[8]) = *(_OWORD *)((char *)v10 + v94[8]);
          uint64_t v263 = v94[9];
          uint64_t v251 = (char *)v9 + v263;
          uint64_t v252 = (char *)v10 + v263;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v10 + v263, 1, v57)) {
            goto LABEL_142;
          }
          uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v251, v252, *(void *)(*(void *)(v264 - 8) + 64));
          goto LABEL_530;
        case 0xCu:
          long long v99 = v10[1];
          *long long v9 = *v10;
          v9[1] = v99;
          void v9[2] = v10[2];
          uint64_t v100 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v101 = v100[7];
          uint64_t v102 = (char *)v9 + v101;
          uint64_t v103 = (char *)v10 + v101;
          uint64_t v104 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
            __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v104);
          }
          *(_OWORD *)((char *)v9 + v100[8]) = *(_OWORD *)((char *)v10 + v100[8]);
          *(_OWORD *)((char *)v9 + v100[9]) = *(_OWORD *)((char *)v10 + v100[9]);
          *(_OWORD *)((char *)v9 + v100[10]) = *(_OWORD *)((char *)v10 + v100[10]);
          uint64_t v265 = v100[11];
          uint64_t v266 = (char *)v9 + v265;
          uint64_t v267 = (char *)v10 + v265;
          *(void *)(v266 + 13) = *(void *)(v267 + 13);
          *(_OWORD *)uint64_t v266 = *(_OWORD *)v267;
          *(_OWORD *)((char *)v9 + v100[12]) = *(_OWORD *)((char *)v10 + v100[12]);
          goto LABEL_530;
        case 0xDu:
          long long v106 = v10[1];
          *long long v9 = *v10;
          v9[1] = v106;
          void v9[2] = v10[2];
          uint64_t v107 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v108 = v107[7];
          uint64_t v109 = (char *)v9 + v108;
          uint64_t v110 = (char *)v10 + v108;
          uint64_t v111 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
          {
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
          }
          *(_OWORD *)((char *)v9 + v107[8]) = *(_OWORD *)((char *)v10 + v107[8]);
          *(void *)((char *)v9 + v107[9]) = *(void *)((char *)v10 + v107[9]);
          goto LABEL_530;
        case 0xFu:
          long long v113 = v10[1];
          *long long v9 = *v10;
          v9[1] = v113;
          long long v114 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v114;
          long long v115 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v115;
          *((unsigned char *)v9 + 96) = *((unsigned char *)v10 + 96);
          *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
          uint64_t v116 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v117 = v116[13];
          uint64_t v118 = (char *)v9 + v117;
          uint64_t v119 = (char *)v10 + v117;
          uint64_t v120 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v119, 1, v120))
          {
            uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v120);
          }
          uint64_t v268 = v116[14];
          uint64_t v269 = (char *)v9 + v268;
          unint64_t v270 = (char *)v10 + v268;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v268, 1, v120))
          {
            uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v269, v270, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)v269, 0, 1, v120);
          }
          *(_OWORD *)((char *)v9 + v116[15]) = *(_OWORD *)((char *)v10 + v116[15]);
          *(_OWORD *)((char *)v9 + v116[16]) = *(_OWORD *)((char *)v10 + v116[16]);
          *(_OWORD *)((char *)v9 + v116[17]) = *(_OWORD *)((char *)v10 + v116[17]);
          uint64_t v315 = v116[18];
          uint64_t v316 = (char *)v9 + v315;
          uint64_t v317 = (char *)v10 + v315;
          uint64_t v318 = type metadata accessor for DateComponents();
          uint64_t v319 = *(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 32);
          v319(v316, v317, v318);
          v319((char *)v9 + v116[19], (char *)v10 + v116[19], v318);
          *(_OWORD *)((char *)v9 + v116[20]) = *(_OWORD *)((char *)v10 + v116[20]);
          *(_OWORD *)((char *)v9 + v116[21]) = *(_OWORD *)((char *)v10 + v116[21]);
          *(_OWORD *)((char *)v9 + v116[22]) = *(_OWORD *)((char *)v10 + v116[22]);
          *(_OWORD *)((char *)v9 + v116[23]) = *(_OWORD *)((char *)v10 + v116[23]);
          *(_OWORD *)((char *)v9 + v116[24]) = *(_OWORD *)((char *)v10 + v116[24]);
          *(_OWORD *)((char *)v9 + v116[25]) = *(_OWORD *)((char *)v10 + v116[25]);
          *(_OWORD *)((char *)v9 + v116[26]) = *(_OWORD *)((char *)v10 + v116[26]);
          *(_OWORD *)((char *)v9 + v116[27]) = *(_OWORD *)((char *)v10 + v116[27]);
          *(_OWORD *)((char *)v9 + v116[28]) = *(_OWORD *)((char *)v10 + v116[28]);
          *(_OWORD *)((char *)v9 + v116[29]) = *(_OWORD *)((char *)v10 + v116[29]);
          *(_OWORD *)((char *)v9 + v116[30]) = *(_OWORD *)((char *)v10 + v116[30]);
          *(_OWORD *)((char *)v9 + v116[31]) = *(_OWORD *)((char *)v10 + v116[31]);
          *(_OWORD *)((char *)v9 + v116[32]) = *(_OWORD *)((char *)v10 + v116[32]);
          *(void *)((char *)v9 + v116[33]) = *(void *)((char *)v10 + v116[33]);
          *(void *)((char *)v9 + v116[34]) = *(void *)((char *)v10 + v116[34]);
          *(_OWORD *)((char *)v9 + v116[35]) = *(_OWORD *)((char *)v10 + v116[35]);
          *(_OWORD *)((char *)v9 + v116[36]) = *(_OWORD *)((char *)v10 + v116[36]);
          *(_OWORD *)((char *)v9 + v116[37]) = *(_OWORD *)((char *)v10 + v116[37]);
          uint64_t v320 = v116[38];
          uint64_t v321 = (char *)v9 + v320;
          uint64_t v322 = (char *)v10 + v320;
          uint64_t v323 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v322, 1, v323))
          {
            uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v321, v322, *(void *)(*(void *)(v324 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 32))(v321, v322, v323);
            __swift_storeEnumTagSinglePayload((uint64_t)v321, 0, 1, v323);
          }
          *(_OWORD *)((char *)v9 + v116[39]) = *(_OWORD *)((char *)v10 + v116[39]);
          *(_OWORD *)((char *)v9 + v116[40]) = *(_OWORD *)((char *)v10 + v116[40]);
          uint64_t v352 = v116[41];
          long long v353 = (char *)v9 + v352;
          long long v354 = (char *)v10 + v352;
          *(void *)long long v353 = *(void *)v354;
          v353[8] = v354[8];
          *(_OWORD *)((char *)v9 + v116[42]) = *(_OWORD *)((char *)v10 + v116[42]);
          uint64_t v355 = v116[43];
          long long v356 = (char *)v9 + v355;
          long long v357 = (char *)v10 + v355;
          *(_OWORD *)long long v356 = *(_OWORD *)v357;
          *(void *)(v356 + 13) = *(void *)(v357 + 13);
          *(_OWORD *)((char *)v9 + v116[44]) = *(_OWORD *)((char *)v10 + v116[44]);
          *(_OWORD *)((char *)v9 + v116[45]) = *(_OWORD *)((char *)v10 + v116[45]);
          *(_OWORD *)((char *)v9 + v116[46]) = *(_OWORD *)((char *)v10 + v116[46]);
          *(_OWORD *)((char *)v9 + v116[47]) = *(_OWORD *)((char *)v10 + v116[47]);
          uint64_t v358 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)((char *)v9 + *(int *)(v358 + 48)) = *(void *)((char *)v10 + *(int *)(v358 + 48));
          goto LABEL_530;
        case 0x10u:
          long long v122 = v10[1];
          *long long v9 = *v10;
          v9[1] = v122;
          long long v123 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v123;
          long long v124 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v124;
          *((unsigned char *)v9 + 96) = *((unsigned char *)v10 + 96);
          *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
          *(_OWORD *)((char *)v9 + 120) = *(_OWORD *)((char *)v10 + 120);
          uint64_t v125 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v126 = v125[14];
          uint64_t v127 = (char *)v9 + v126;
          uint64_t v128 = (char *)v10 + v126;
          uint64_t v129 = type metadata accessor for DateComponents();
          if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v129))
          {
            uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
            __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v129);
          }
          uint64_t v272 = v125[15];
          uint64_t v273 = (char *)v9 + v272;
          uint64_t v274 = (char *)v10 + v272;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v272, 1, v129))
          {
            uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v273, v274, *(void *)(*(void *)(v275 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v273, v274, v129);
            __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, v129);
          }
          *(_OWORD *)((char *)v9 + v125[16]) = *(_OWORD *)((char *)v10 + v125[16]);
          *(_OWORD *)((char *)v9 + v125[17]) = *(_OWORD *)((char *)v10 + v125[17]);
          *(_OWORD *)((char *)v9 + v125[18]) = *(_OWORD *)((char *)v10 + v125[18]);
          *(_OWORD *)((char *)v9 + v125[19]) = *(_OWORD *)((char *)v10 + v125[19]);
          *(_OWORD *)((char *)v9 + v125[20]) = *(_OWORD *)((char *)v10 + v125[20]);
          *(void *)((char *)v9 + v125[21]) = *(void *)((char *)v10 + v125[21]);
          *(void *)((char *)v9 + v125[22]) = *(void *)((char *)v10 + v125[22]);
          uint64_t v325 = v125[23];
          uint64_t v326 = (char *)v9 + v325;
          uint64_t v327 = (char *)v10 + v325;
          v326[8] = v327[8];
          *(void *)uint64_t v326 = *(void *)v327;
          uint64_t v328 = v125[24];
          uint64_t v329 = (char *)v9 + v328;
          uint64_t v330 = (char *)v10 + v328;
          v329[8] = v330[8];
          *(void *)uint64_t v329 = *(void *)v330;
          *(_OWORD *)((char *)v9 + v125[25]) = *(_OWORD *)((char *)v10 + v125[25]);
          *(_OWORD *)((char *)v9 + v125[26]) = *(_OWORD *)((char *)v10 + v125[26]);
          *(_OWORD *)((char *)v9 + v125[27]) = *(_OWORD *)((char *)v10 + v125[27]);
          *(_OWORD *)((char *)v9 + v125[28]) = *(_OWORD *)((char *)v10 + v125[28]);
          uint64_t v331 = v125[29];
          uint64_t v332 = (char *)v9 + v331;
          uint64_t v333 = (char *)v10 + v331;
          *(void *)uint64_t v332 = *(void *)v333;
          v332[8] = v333[8];
          goto LABEL_530;
        case 0x11u:
          long long v131 = v10[1];
          *long long v9 = *v10;
          v9[1] = v131;
          long long v132 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v132;
          long long v133 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v133;
          *((unsigned char *)v9 + 96) = *((unsigned char *)v10 + 96);
          *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
          *(_OWORD *)((char *)v9 + 120) = *(_OWORD *)((char *)v10 + 120);
          long long v134 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v135 = v134[14];
          uint64_t v136 = (char *)v9 + v135;
          uint64_t v137 = (char *)v10 + v135;
          uint64_t v138 = type metadata accessor for DateComponents();
          if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v138))
          {
            uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
            __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v138);
          }
          *(_OWORD *)((char *)v9 + v134[15]) = *(_OWORD *)((char *)v10 + v134[15]);
          *(_OWORD *)((char *)v9 + v134[16]) = *(_OWORD *)((char *)v10 + v134[16]);
          *(_OWORD *)((char *)v9 + v134[17]) = *(_OWORD *)((char *)v10 + v134[17]);
          *(_OWORD *)((char *)v9 + v134[18]) = *(_OWORD *)((char *)v10 + v134[18]);
          *(_OWORD *)((char *)v9 + v134[19]) = *(_OWORD *)((char *)v10 + v134[19]);
          *(void *)((char *)v9 + v134[20]) = *(void *)((char *)v10 + v134[20]);
          *(_OWORD *)((char *)v9 + v134[21]) = *(_OWORD *)((char *)v10 + v134[21]);
          *(_OWORD *)((char *)v9 + v134[22]) = *(_OWORD *)((char *)v10 + v134[22]);
          *(_OWORD *)((char *)v9 + v134[23]) = *(_OWORD *)((char *)v10 + v134[23]);
          goto LABEL_530;
        case 0x12u:
          long long v140 = v10[1];
          *long long v9 = *v10;
          v9[1] = v140;
          long long v141 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v141;
          long long v142 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v142;
          long long v143 = v10[7];
          v9[6] = v10[6];
          v9[7] = v143;
          *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
          *(_WORD *)((char *)v9 + 129) = *(_WORD *)((char *)v10 + 129);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          long long v144 = v10[10];
          v9[9] = v10[9];
          v9[10] = v144;
          long long v145 = v10[12];
          v9[11] = v10[11];
          v9[12] = v145;
          long long v146 = v10[14];
          v9[13] = v10[13];
          v9[14] = v146;
          v9[15] = v10[15];
          *((void *)v9 + 32) = *((void *)v10 + 32);
          *(_OWORD *)((char *)v9 + 264) = *(_OWORD *)((char *)v10 + 264);
          *(_OWORD *)((char *)v9 + 280) = *(_OWORD *)((char *)v10 + 280);
          *(_OWORD *)((char *)v9 + 296) = *(_OWORD *)((char *)v10 + 296);
          *(_OWORD *)((char *)v9 + 312) = *(_OWORD *)((char *)v10 + 312);
          *(_OWORD *)((char *)v9 + 328) = *(_OWORD *)((char *)v10 + 328);
          *(_OWORD *)((char *)v9 + 344) = *(_OWORD *)((char *)v10 + 344);
          *(_OWORD *)((char *)v9 + 360) = *(_OWORD *)((char *)v10 + 360);
          *((unsigned char *)v9 + 384) = *((unsigned char *)v10 + 384);
          *((void *)v9 + 47) = *((void *)v10 + 47);
          *(_OWORD *)((char *)v9 + 392) = *(_OWORD *)((char *)v10 + 392);
          *(_OWORD *)((char *)v9 + 408) = *(_OWORD *)((char *)v10 + 408);
          uint64_t v147 = type metadata accessor for RentalCarReservation(0);
          uint64_t v148 = *(int *)(v147 + 140);
          uint64_t v149 = (char *)v9 + v148;
          long long v150 = (char *)v10 + v148;
          uint64_t v57 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v57))
          {
            uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v149, v150, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v57);
          }
          uint64_t v276 = *(int *)(v147 + 144);
          uint64_t v251 = (char *)v9 + v276;
          uint64_t v252 = (char *)v10 + v276;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v276, 1, v57)) {
            goto LABEL_112;
          }
          goto LABEL_142;
        case 0x13u:
          long long v152 = v10[1];
          *long long v9 = *v10;
          v9[1] = v152;
          long long v153 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v153;
          long long v154 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v154;
          long long v155 = v10[7];
          v9[6] = v10[6];
          v9[7] = v155;
          *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
          *(_WORD *)((char *)v9 + 129) = *(_WORD *)((char *)v10 + 129);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          long long v156 = v10[10];
          v9[9] = v10[9];
          v9[10] = v156;
          long long v157 = v10[12];
          v9[11] = v10[11];
          v9[12] = v157;
          *((void *)v9 + 26) = *((void *)v10 + 26);
          *(_OWORD *)((char *)v9 + 216) = *(_OWORD *)((char *)v10 + 216);
          *(_OWORD *)((char *)v9 + 232) = *(_OWORD *)((char *)v10 + 232);
          *(_OWORD *)((char *)v9 + 248) = *(_OWORD *)((char *)v10 + 248);
          *(_OWORD *)((char *)v9 + 264) = *(_OWORD *)((char *)v10 + 264);
          *((unsigned char *)v9 + 296) = *((unsigned char *)v10 + 296);
          uint64_t v158 = *((void *)v10 + 36);
          *((void *)v9 + 35) = *((void *)v10 + 35);
          *((void *)v9 + 36) = v158;
          uint64_t v159 = type metadata accessor for TicketedTransportation(0);
          uint64_t v160 = *(int *)(v159 + 112);
          uint64_t v161 = (char *)v9 + v160;
          long long v162 = (char *)v10 + v160;
          uint64_t v57 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v162, 1, v57))
          {
            uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v161, v162, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v57);
          }
          uint64_t v277 = *(int *)(v159 + 116);
          uint64_t v251 = (char *)v9 + v277;
          uint64_t v252 = (char *)v10 + v277;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v277, 1, v57)) {
            goto LABEL_112;
          }
          goto LABEL_142;
        case 0x14u:
          long long v164 = v10[1];
          *long long v9 = *v10;
          v9[1] = v164;
          long long v165 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v165;
          long long v166 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v166;
          long long v167 = v10[7];
          v9[6] = v10[6];
          v9[7] = v167;
          *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
          *(_WORD *)((char *)v9 + 129) = *(_WORD *)((char *)v10 + 129);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          long long v168 = v10[10];
          v9[9] = v10[9];
          v9[10] = v168;
          long long v169 = v10[12];
          v9[11] = v10[11];
          v9[12] = v169;
          long long v170 = v10[14];
          v9[13] = v10[13];
          v9[14] = v170;
          *((void *)v9 + 30) = *((void *)v10 + 30);
          *(_OWORD *)((char *)v9 + 248) = *(_OWORD *)((char *)v10 + 248);
          *(_OWORD *)((char *)v9 + 264) = *(_OWORD *)((char *)v10 + 264);
          *((unsigned char *)v9 + 296) = *((unsigned char *)v10 + 296);
          uint64_t v171 = *((void *)v10 + 36);
          *((void *)v9 + 35) = *((void *)v10 + 35);
          *((void *)v9 + 36) = v171;
          v9[19] = v10[19];
          uint64_t v172 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v173 = v172[29];
          uint64_t v174 = (char *)v9 + v173;
          uint64_t v175 = (char *)v10 + v173;
          uint64_t v176 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v175, 1, v176))
          {
            uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v174, v175, v176);
            __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v176);
          }
          *(_OWORD *)((char *)v9 + v172[30]) = *(_OWORD *)((char *)v10 + v172[30]);
          uint64_t v278 = v172[31];
          uint64_t v279 = (char *)v9 + v278;
          uint64_t v280 = (char *)v10 + v278;
          uint64_t v281 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v280, 1, v281))
          {
            uint64_t v282 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v279, v280, *(void *)(*(void *)(v282 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v279, v280, v281);
            __swift_storeEnumTagSinglePayload((uint64_t)v279, 0, 1, v281);
          }
          uint64_t v334 = v172[32];
          uint64_t v335 = (char *)v9 + v334;
          uint64_t v336 = (char *)v10 + v334;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v334, 1, v281))
          {
            uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v335, v336, *(void *)(*(void *)(v337 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v335, v336, v281);
            __swift_storeEnumTagSinglePayload((uint64_t)v335, 0, 1, v281);
          }
          goto LABEL_530;
        case 0x15u:
          long long v178 = v10[1];
          *long long v9 = *v10;
          v9[1] = v178;
          long long v179 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v179;
          long long v180 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v180;
          long long v181 = v10[7];
          v9[6] = v10[6];
          v9[7] = v181;
          *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
          *(_WORD *)((char *)v9 + 129) = *(_WORD *)((char *)v10 + 129);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          long long v182 = v10[10];
          v9[9] = v10[9];
          v9[10] = v182;
          long long v183 = v10[12];
          v9[11] = v10[11];
          v9[12] = v183;
          long long v184 = v10[14];
          v9[13] = v10[13];
          v9[14] = v184;
          long long v185 = v10[16];
          v9[15] = v10[15];
          v9[16] = v185;
          *((unsigned char *)v9 + 280) = *((unsigned char *)v10 + 280);
          *((void *)v9 + 34) = *((void *)v10 + 34);
          v9[18] = v10[18];
          uint64_t v186 = type metadata accessor for Appointment(0);
          uint64_t v187 = *(int *)(v186 + 108);
          uint64_t v188 = (char *)v9 + v187;
          long long v189 = (char *)v10 + v187;
          uint64_t v57 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v189, 1, v57))
          {
            uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v188, v189, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v57);
          }
          uint64_t v283 = *(int *)(v186 + 112);
          uint64_t v251 = (char *)v9 + v283;
          uint64_t v252 = (char *)v10 + v283;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v283, 1, v57))
          {
LABEL_112:
            uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v251, v252, *(void *)(*(void *)(v284 - 8) + 64));
          }
          else
          {
LABEL_142:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v251, v252, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v57);
          }
          goto LABEL_530;
        case 0x16u:
          long long v191 = v10[1];
          *long long v9 = *v10;
          v9[1] = v191;
          long long v192 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v192;
          long long v193 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v193;
          long long v194 = v10[7];
          v9[6] = v10[6];
          v9[7] = v194;
          *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
          *(_WORD *)((char *)v9 + 129) = *(_WORD *)((char *)v10 + 129);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          long long v195 = v10[10];
          v9[9] = v10[9];
          v9[10] = v195;
          long long v196 = v10[12];
          v9[11] = v10[11];
          v9[12] = v196;
          long long v197 = v10[14];
          v9[13] = v10[13];
          v9[14] = v197;
          v9[15] = v10[15];
          uint64_t v198 = (int *)type metadata accessor for Party(0);
          uint64_t v199 = v198[24];
          uint64_t v200 = (char *)v9 + v199;
          uint64_t v201 = (char *)v10 + v199;
          uint64_t v202 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202))
          {
            uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v200, v201, *(void *)(*(void *)(v203 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v200, v201, v202);
            __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v202);
          }
          uint64_t v285 = v198[25];
          uint64_t v286 = (char *)v9 + v285;
          uint64_t v287 = (char *)v10 + v285;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v285, 1, v202))
          {
            uint64_t v288 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v286, v287, v202);
            __swift_storeEnumTagSinglePayload((uint64_t)v286, 0, 1, v202);
          }
          uint64_t v338 = v198[26];
          uint64_t v83 = (char *)v9 + v338;
          long long v84 = (char *)v10 + v338;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85)) {
            goto LABEL_152;
          }
          goto LABEL_134;
        case 0x17u:
          long long v204 = v10[1];
          *long long v9 = *v10;
          v9[1] = v204;
          long long v205 = v10[3];
          void v9[2] = v10[2];
          v9[3] = v205;
          long long v206 = v10[5];
          v9[4] = v10[4];
          uint64_t v9[5] = v206;
          long long v207 = v10[7];
          v9[6] = v10[6];
          v9[7] = v207;
          *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
          *(_WORD *)((char *)v9 + 129) = *(_WORD *)((char *)v10 + 129);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          long long v208 = v10[10];
          v9[9] = v10[9];
          v9[10] = v208;
          long long v209 = v10[12];
          v9[11] = v10[11];
          v9[12] = v209;
          v9[13] = v10[13];
          uint64_t v210 = (int *)type metadata accessor for Trip(0);
          uint64_t v211 = v210[22];
          uint64_t v212 = (char *)v9 + v211;
          uint64_t v213 = (char *)v10 + v211;
          uint64_t v214 = type metadata accessor for Date();
          if (__swift_getEnumTagSinglePayload((uint64_t)v213, 1, v214))
          {
            uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
            __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v214);
          }
          uint64_t v289 = v210[23];
          uint64_t v290 = (char *)v9 + v289;
          uint64_t v291 = (char *)v10 + v289;
          if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v289, 1, v214))
          {
            uint64_t v292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v290, v291, v214);
            __swift_storeEnumTagSinglePayload((uint64_t)v290, 0, 1, v214);
          }
          uint64_t v339 = v210[24];
          uint64_t v340 = (char *)v9 + v339;
          uint64_t v341 = (char *)v10 + v339;
          *(void *)uint64_t v340 = *(void *)v341;
          v340[8] = v341[8];
          uint64_t v342 = v210[25];
          uint64_t v83 = (char *)v9 + v342;
          long long v84 = (char *)v10 + v342;
          uint64_t v85 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
          {
LABEL_152:
            uint64_t v343 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v83, v84, *(void *)(*(void *)(v343 - 8) + 64));
          }
          else
          {
LABEL_134:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
            __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
          }
          goto LABEL_530;
        case 0x18u:
          long long v216 = v10[1];
          *long long v9 = *v10;
          v9[1] = v216;
          void v9[2] = v10[2];
          uint64_t v217 = (int *)type metadata accessor for GlobalItem();
          uint64_t v218 = v217[7];
          uint64_t v219 = (char *)v9 + v218;
          uint64_t v220 = (char *)v10 + v218;
          uint64_t v221 = type metadata accessor for GlobalDialog();
          if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v221))
          {
            uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v219, v220, *(void *)(*(void *)(v222 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 32))(v219, v220, v221);
            __swift_storeEnumTagSinglePayload((uint64_t)v219, 0, 1, v221);
          }
          *(_OWORD *)((char *)v9 + v217[8]) = *(_OWORD *)((char *)v10 + v217[8]);
          *((unsigned char *)v9 + v217[9]) = *((unsigned char *)v10 + v217[9]);
          uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)((char *)v9 + *(int *)(v293 + 48)) = *(void *)((char *)v10 + *(int *)(v293 + 48));
          goto LABEL_530;
        case 0x1Au:
          long long v223 = v10[1];
          *long long v9 = *v10;
          v9[1] = v223;
          void v9[2] = v10[2];
          *((void *)v9 + 6) = *((void *)v10 + 6);
          uint64_t v224 = (int *)type metadata accessor for Answer(0);
          uint64_t v225 = v224[9];
          uint64_t v226 = (char *)v9 + v225;
          uint64_t v227 = (char *)v10 + v225;
          uint64_t v228 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v227, 1, v228))
          {
            uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v226, v227, *(void *)(*(void *)(v229 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 32))(v226, v227, v228);
            __swift_storeEnumTagSinglePayload((uint64_t)v226, 0, 1, v228);
          }
          *((unsigned char *)v9 + v224[10]) = *((unsigned char *)v10 + v224[10]);
          *(_OWORD *)((char *)v9 + v224[11]) = *(_OWORD *)((char *)v10 + v224[11]);
LABEL_530:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      uint64_t v1142 = type metadata accessor for SearchResult(0);
      *(void *)((char *)v9 + *(int *)(v1142 + 20)) = *(void *)((char *)v10 + *(int *)(v1142 + 20));
      *(_OWORD *)((char *)v9 + *(int *)(v1142 + 24)) = *(_OWORD *)((char *)v10 + *(int *)(v1142 + 24));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ResultsDialog(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_257E45058);
}

uint64_t sub_257E45058(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AnswerSynthesisResult();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ResultsDialog(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_257E450F4);
}

void *sub_257E450F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AnswerSynthesisResult();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for ResultsDialog()
{
  uint64_t result = type metadata accessor for AnswerSynthesisResult();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for ResultsDialog.RenderOption(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ResultsDialog.RenderOption(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for ResultsDialog.RenderOption(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for ResultsDialog.RenderOption(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ResultsDialog.RenderOption(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ResultsDialog.RenderOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t getEnumTag for ResultsDialog.RenderOption(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *destructiveInjectEnumTag for ResultsDialog.RenderOption(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultsDialog.RenderOption()
{
  return &type metadata for ResultsDialog.RenderOption;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisModelResult.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnswerSynthesisModelResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257E4561CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *destructiveInjectEnumTag for AnswerSynthesisModelResult.AnswerResponse.CodingKeys(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

void *type metadata accessor for AnswerSynthesisModelResult.AnswerResponse.CodingKeys()
{
  return &unk_2706A8C00;
}

char *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CustomStringConvertible?>);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    long long v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  long long v13 = (char *)(a4 + 32);
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GeoLocation>);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    long long v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  long long v13 = (char *)(a4 + 32);
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    long long v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  long long v13 = (char *)(a4 + 32);
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    long long v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  long long v13 = (char *)(a4 + 32);
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_23_2();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)swift_allocObject();
    uint64_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_152(v9 - 32);
  }
  long long v10 = OUTLINED_FUNCTION_44_1();
  if (v2)
  {
    v1(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v10, v11);
  }
  swift_release();
  OUTLINED_FUNCTION_141_0();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_23_2();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_204();
    uint64_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_114(v9 - 32);
  }
  long long v10 = OUTLINED_FUNCTION_44_1();
  if (v2)
  {
    v1(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v10, v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_23_2();
  if (v5)
  {
    OUTLINED_FUNCTION_60();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_93();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)OUTLINED_FUNCTION_204();
    long long v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_114(v10 - 32);
  }
  size_t v11 = OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_23_2();
  if (v5)
  {
    OUTLINED_FUNCTION_60();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_93();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)OUTLINED_FUNCTION_204();
    long long v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_114(v10 - 32);
  }
  size_t v11 = OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t, unint64_t);
  void (*v3)(uint64_t, uint64_t, unint64_t);
  uint64_t (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  size_t v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_104_0();
  int v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  if (v10)
  {
    OUTLINED_FUNCTION_60();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_93();
      if (v12)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  else
  {
    size_t v11 = v0;
  }
  long long v14 = *(void *)(v7 + 16);
  if (v11 <= v14) {
    long long v15 = *(void *)(v7 + 16);
  }
  else {
    long long v15 = v11;
  }
  if (!v15)
  {
    uint64_t v21 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(v1);
  uint64_t v16 = v5(0);
  OUTLINED_FUNCTION_12_0(v16);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = _swift_stdlib_malloc_size(v21);
  if (!v18)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v22 - v20 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_23;
  }
  v21[2] = v14;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v18);
LABEL_18:
  v5(0);
  OUTLINED_FUNCTION_137();
  uint64_t v25 = (unint64_t)v21 + v24;
  uint64_t v26 = v7 + v24;
  if (v9)
  {
    v3(v26, v14, v25);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v26, v14, v25);
  }
  swift_release();
  OUTLINED_FUNCTION_119_0();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_23_2();
  if (v5)
  {
    OUTLINED_FUNCTION_60();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_93();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    long long v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_152(v10 - 32);
  }
  size_t v11 = OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
  OUTLINED_FUNCTION_141_0();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, unint64_t);
  uint64_t *v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const void *v17;
  size_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_23_2();
  if (v6)
  {
    OUTLINED_FUNCTION_60();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_93();
      if (v8)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  long long v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    size_t v11 = *(void *)(v0 + 16);
  }
  else {
    size_t v11 = v7;
  }
  if (!v11)
  {
    uint64_t v17 = (const void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(v5);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(v2);
  OUTLINED_FUNCTION_12_0(v12);
  long long v14 = *(void *)(v13 + 72);
  uint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (const void *)swift_allocObject();
  uint64_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v14)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v18 - v16 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_152(v18 - v16);
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(v2);
  OUTLINED_FUNCTION_137();
  uint64_t v21 = (unint64_t)v17 + v20;
  uint64_t v22 = v0 + v20;
  if (v3)
  {
    v1(v22, v10, v21);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v22, v10, v21);
  }
  swift_release();
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_23_2();
  if (v4)
  {
    OUTLINED_FUNCTION_60();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_93();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  OUTLINED_FUNCTION_70();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_204();
    uint64_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_114(v9 - 32);
  }
  long long v10 = OUTLINED_FUNCTION_44_1();
  if (v2)
  {
    v1(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v10, v11);
  }
  swift_release();
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_60();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_93();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_59();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, ChatMessageRecord)>);
    uint64_t v11 = swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size((const void *)v11);
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  long long v13 = (char *)(a4 + 32);
  if (a1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v9, (char *)(v11 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((uint64_t)v13, v9);
  }
  swift_release();
}

uint64_t specialized _NativeDictionary.merge<A>(_:isUnique:uniquingKeysWith:)(uint64_t a1, char a2, void *a3)
{
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for SearchResult(0);
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v43 = (uint64_t)&v42 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (String, SearchResult));
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = a1;
  uint64_t v47 = (uint64_t)v16 + *(int *)(v13 + 48);
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v45 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v46 = v16;
  while (1)
  {
    outlined init with copy of PQAVerificationModelProtocol?(v18, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for (String, SearchResult));
    uint64_t v19 = *v16;
    uint64_t v20 = v16[1];
    uint64_t v21 = (uint64_t)v11;
    outlined init with take of ResultsDialog(v47, (uint64_t)v11, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v22 = *v49;
    unint64_t v24 = specialized __RawDictionaryStorage.find<A>(_:)(v19, v20);
    uint64_t v25 = *(void *)(v22 + 16);
    BOOL v26 = (v23 & 1) == 0;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v27 = v23;
    if (*(void *)(v22 + 24) >= v25 + v26)
    {
      if (a2)
      {
        uint64_t v28 = v49;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, SearchResult>);
        uint64_t v28 = v49;
        _NativeDictionary.copy()();
      }
    }
    else
    {
      uint64_t v28 = v49;
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)();
      unint64_t v29 = specialized __RawDictionaryStorage.find<A>(_:)(v19, v20);
      if ((v27 & 1) != (v30 & 1)) {
        goto LABEL_20;
      }
      unint64_t v24 = v29;
    }
    long long v31 = (void *)*v28;
    if (v27)
    {
      uint64_t v32 = v31[7];
      unint64_t v33 = *(void *)(v48 + 72) * v24;
      uint64_t v34 = v44;
      outlined init with copy of AnswerSynthesisResult(v32 + v33, v44, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v35 = v43;
      outlined init with copy of AnswerSynthesisResult(v34, v43, (void (*)(void))type metadata accessor for SearchResult);
      outlined destroy of AnswerSynthesisResult(v34, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v11 = (char *)v21;
      outlined destroy of AnswerSynthesisResult(v21, (void (*)(void))type metadata accessor for SearchResult);
      swift_bridgeObjectRelease();
      outlined assign with take of SearchResult(v35, *(void *)(*v28 + 56) + v33);
    }
    else
    {
      v31[(v24 >> 6) + 8] |= 1 << v24;
      uint64_t v36 = (uint64_t *)(v31[6] + 16 * v24);
      *uint64_t v36 = v19;
      v36[1] = v20;
      uint64_t v37 = v31[7] + *(void *)(v48 + 72) * v24;
      uint64_t v11 = (char *)v21;
      outlined init with take of ResultsDialog(v21, v37, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v38 = v31[2];
      BOOL v39 = __OFADD__(v38, 1);
      uint64_t v40 = v38 + 1;
      if (v39) {
        goto LABEL_19;
      }
      v31[2] = v40;
    }
    uint64_t v16 = v46;
    v18 += v45;
    a2 = 1;
    if (!--v17) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t specialized Array._copyContents(initializing:)(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          lazy protocol witness table accessor for type [SFResultSection] and conformance [A](&lazy protocol witness table cache variable for type [MemoryCreationQUParseAttributes] and conformance [A], &demangling cache variable for type metadata for [MemoryCreationQUParseAttributes]);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MemoryCreationQUParseAttributes]);
            uint64_t v10 = specialized protocol witness for Collection.subscript.read in conformance [A]();
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t *, void))v10)(&v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        specialized UnsafeMutablePointer.initialize(from:count:)((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t (*v10)();
  id *v11;
  id v12;
  uint64_t v13;

  unint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          lazy protocol witness table accessor for type [SFResultSection] and conformance [A](&lazy protocol witness table cache variable for type [SFCardSection] and conformance [A], &demangling cache variable for type metadata for [SFCardSection]);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SFCardSection]);
            uint64_t v10 = specialized protocol witness for Collection.subscript.read in conformance [A]();
            uint64_t v12 = *v11;
            ((void (*)(uint64_t *, void))v10)(&v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        specialized UnsafeMutablePointer.initialize(from:count:)((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t (*v10)();
  id *v11;
  id v12;
  uint64_t v13;

  unint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          lazy protocol witness table accessor for type [SFResultSection] and conformance [A](&lazy protocol witness table cache variable for type [SFResultSection] and conformance [A], &demangling cache variable for type metadata for [SFResultSection]);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SFResultSection]);
            uint64_t v10 = specialized protocol witness for Collection.subscript.read in conformance [A]();
            uint64_t v12 = *v11;
            ((void (*)(uint64_t *, void))v10)(&v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        specialized UnsafeMutablePointer.initialize(from:count:)((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t specialized StrideTo.underestimatedCount.getter(int64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  while (1)
  {
    BOOL v5 = a1 <= a2;
    if (a3 > 0) {
      BOOL v5 = a1 >= a2;
    }
    if (v5) {
      break;
    }
    BOOL v6 = __OFADD__(a1, a3);
    a1 += a3;
    if (v6) {
      a1 = (a1 >> 63) ^ 0x8000000000000000;
    }
    BOOL v6 = __OFADD__(result++, 1);
    if (v6)
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

uint64_t specialized Dictionary.Values.startIndex.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t specialized Dictionary.Values.subscript.getter(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = *(void *)(*(void *)(a4 + 56) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t lazy protocol witness table accessor for type [SFResultSection] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t lazy protocol witness table accessor for type [AnswerSynthesisModelResult.AnswerResponse] and conformance <A> [A](unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [AnswerSynthesisModelResult.AnswerResponse]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StreamingError and conformance StreamingError()
{
  unint64_t result = lazy protocol witness table cache variable for type StreamingError and conformance StreamingError;
  if (!lazy protocol witness table cache variable for type StreamingError and conformance StreamingError)
  {
    type metadata accessor for StreamingError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StreamingError and conformance StreamingError);
  }
  return result;
}

uint64_t outlined init with copy of PQAVerificationModelProtocol?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t outlined assign with take of SearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PQAVerificationModelProtocol?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t outlined release of String(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of [String](uint64_t a1)
{
  return a1;
}

uint64_t outlined init with take of PQAVerificationModelProtocol?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return *(void *)(v0 + 744);
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return v0;
}

void OUTLINED_FUNCTION_22_2(void *a1@<X8>)
{
  uint64_t v4 = v1[53];
  *(void *)(v2 - 160) = v1[54];
  *(void *)(v2 - 152) = v4;
  uint64_t v5 = v1[51];
  *(void *)(v2 - 144) = v1[52];
  *(void *)(v2 - 136) = v5;
  uint64_t v6 = v1[49];
  *(void *)(v2 - 128) = v1[50];
  *(void *)(v2 - 120) = v6;
  uint64_t v7 = v1[45];
  *(void *)(v2 - 112) = v1[48];
  *(void *)(v2 - 104) = v7;
}

BOOL OUTLINED_FUNCTION_24_2(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_32_1(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_40_1(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_41_1(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_43_1(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return swift_task_alloc();
}

BOOL OUTLINED_FUNCTION_51_1(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  *(void *)(v2 + 16) = v0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_63_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x4D6D726177657270, 0xEE0029286C65646FLL, a3);
}

void OUTLINED_FUNCTION_65_0()
{
}

_WORD *OUTLINED_FUNCTION_67_0(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return v0;
}

void OUTLINED_FUNCTION_73()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_74_0()
{
  return v0;
}

void OUTLINED_FUNCTION_75(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_81(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_84()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return OS_os_log.signpostsEnabled.getter();
}

void OUTLINED_FUNCTION_90_0(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return v0;
}

void OUTLINED_FUNCTION_94_0()
{
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return *(void *)(v0 + 104) + *(int *)(*(void *)(v0 + 96) + 20);
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_101_0(uint64_t result)
{
  return result;
}

void OUTLINED_FUNCTION_103_0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_107_0@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8 * *(void *)(a1 + 16) + 32;
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_109_0()
{
  return 0;
}

void OUTLINED_FUNCTION_110_0()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return outlined consume of PQAVerificationRequest?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_114_0()
{
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_128_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(v3, 1, a3);
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  return v0;
}

_WORD *OUTLINED_FUNCTION_130_0(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_132_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_135_0@<X0>(uint64_t a1@<X8>)
{
  return v1 + ((*(unsigned __int8 *)(a1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a1 + 80));
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_140_0(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_143_0()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_146_0()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  return swift_allocError();
}

double OUTLINED_FUNCTION_148_0(double a1)
{
  return v1 * a1;
}

uint64_t OUTLINED_FUNCTION_155_0(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

void OUTLINED_FUNCTION_156_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_158_0()
{
  *(void *)(v1 - 328) = v0;
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_166_0()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_171_0(float a1)
{
  float *v1 = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_172_0@<X0>(int a1@<W8>)
{
  if (a1 == 1) {
    return v1;
  }
  else {
    return 0x64696C6176;
  }
}

void OUTLINED_FUNCTION_173_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_174_0()
{
  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_175_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_180_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_181_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_182_0(uint64_t a1, uint64_t a2)
{
  return __swift_getEnumTagSinglePayload(a2, 1, v2);
}

uint64_t static AnswerSynthesisRequest.calculateCharLimitForUserPrompt(tokenLimit:)(uint64_t a1)
{
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  uint64_t v3 = static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.getter();
  uint64_t v4 = a1 - v3;
  if (__OFSUB__(a1, v3))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = static NSUserDefaults.answerSynthesisTokenLimitOutput.getter();
  if (__OFSUB__(v4, v5))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = v4 - v5;
  float v1 = static NSUserDefaults.answerSynthesisTokenCharMultiplier.getter() * (float)v6;
  if ((~LODWORD(v1) & 0x7F800000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v1 <= -9.2234e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v1 < 9.2234e18)
  {
    if (one-time initialization token for answerSynthesis == -1) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  swift_once();
LABEL_7:
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logging.answerSynthesis);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136316418;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002CLL, 0x800000025867DEA0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2048;
    static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.getter();
    OUTLINED_FUNCTION_14_3();
    *(_WORD *)(v10 + 32) = 2048;
    static NSUserDefaults.answerSynthesisTokenLimitOutput.getter();
    OUTLINED_FUNCTION_14_3();
    *(_WORD *)(v10 + 42) = 2048;
    static NSUserDefaults.answerSynthesisTokenCharMultiplier.getter();
    OUTLINED_FUNCTION_14_3();
    *(_WORD *)(v10 + 52) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_257DC6000, v8, v9, "%s\ntokenLimit=%ld\ntokenLimitNonUserPrompt=%ld\ntokenLimitOutput=%ld\ntokenCharMultiplier=%f\n-> charLimitForUserPrompt=%ld\")", (uint8_t *)v10, 0x3Eu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }

  return (uint64_t)v1;
}

void AnswerSynthesisRequest.init(query:documents:context:charLimit:enableTruncation:)()
{
  OUTLINED_FUNCTION_104_0();
  int v68 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v75 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for SearchResult(0);
  uint64_t v78 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_15();
  uint64_t v77 = v19 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult)?);
  uint64_t v21 = OUTLINED_FUNCTION_81(v20);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  unint64_t v24 = (uint64_t *)((char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v22);
  BOOL v26 = (char *)&v63 - v25;
  char v27 = (uint64_t *)(v4 + *(int *)(type metadata accessor for AnswerSynthesisRequestContext() + 24));
  uint64_t v28 = v27[1];
  uint64_t v72 = *v27;
  uint64_t v73 = v28;
  swift_bridgeObjectRetain();
  uint64_t v74 = v4;
  uint64_t v29 = AnswerSynthesisRequestContext.llmPromptString.getter();
  uint64_t v79 = v6;
  uint64_t v31 = *(void *)(v6 + 16);
  if (!v31)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v69 = v30;
  uint64_t v70 = v29;
  if (one-time initialization token for answerSynthesis != -1) {
LABEL_24:
  }
    swift_once();
  *(void *)&long long v67 = v2;
  uint64_t v32 = v2 / v31;
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logging.answerSynthesis);
  uint64_t v34 = v79;
  swift_bridgeObjectRetain();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  LODWORD(v76) = v36;
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v71 = v9;
  uint64_t v64 = v32;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    v81[0] = v66;
    *(_DWORD *)uint64_t v38 = 136315906;
    os_log_t v65 = v35;
    uint64_t v63 = v38 + 4;
    uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x800000025867DED0, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 12) = 2048;
    uint64_t v80 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 22) = 2048;
    uint64_t v80 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 32) = 2048;
    uint64_t v80 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v39 = v65;
    _os_log_impl(&dword_257DC6000, v65, (os_log_type_t)v76, "%s charLimit=%ld, documents.count=%ld charLimitPerDocument=%ld", (uint8_t *)v38, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v34;
  uint64_t v31 = 0;
  uint64_t v2 = *(void *)(v34 + 16);
  uint64_t v76 = MEMORY[0x263F8EE78];
  long long v67 = xmmword_258661700;
  while (1)
  {
    if (v31 == v2)
    {
      uint64_t v40 = 1;
      uint64_t v31 = v2;
    }
    else
    {
      if ((unint64_t)v31 >= *(void *)(v9 + 16))
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v41 = v77 + *(int *)(v16 + 48);
      outlined init with copy of SearchResult(v9+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v31, v41, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v42 = (uint64_t)v24 + *(int *)(v16 + 48);
      *unint64_t v24 = v31;
      outlined init with take of SearchResult(v41, v42);
      uint64_t v40 = 0;
      ++v31;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v24, v40, 1, v16);
    outlined init with take of (offset: Int, element: SearchResult)?((uint64_t)v24, (uint64_t)v26);
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v16) == 1) {
      break;
    }
    outlined init with take of SearchResult((uint64_t)&v26[*(int *)(v16 + 48)], v15);
    keyForSearchResult(_:idx:)();
    if (v44)
    {
      uint64_t v45 = v43;
      uint64_t v46 = v44;
      uint64_t v66 = (uint64_t)v11;
      SearchResultItem.associatedValue.getter((uint64_t)v81);
      uint64_t v47 = v83;
      os_log_t v65 = v82;
      __swift_project_boxed_opaque_existential_1(v81, (uint64_t)v82);
      uint64_t v48 = (*(uint64_t (**)(os_log_t, uint64_t))(v47 + 48))(v65, v47);
      uint64_t v50 = v49;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
      if (v68)
      {
        uint64_t v51 = specialized Collection.prefix(_:)(v64);
        os_log_t v65 = v52;
        uint64_t v48 = MEMORY[0x25A2C7B70](v51);
        uint64_t v50 = v53;
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v67;
      *(void *)(inited + 32) = v45;
      *(void *)(inited + 40) = v46;
      *(void *)(inited + 48) = v48;
      *(void *)(inited + 56) = v50;
      uint64_t v55 = Dictionary.init(dictionaryLiteral:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v76 = v58;
      }
      uint64_t v11 = (void *)v66;
      unint64_t v56 = *(void *)(v76 + 16);
      if (v56 >= *(void *)(v76 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v76 = v59;
      }
      uint64_t v57 = v76;
      *(void *)(v76 + 16) = v56 + 1;
      *(void *)(v57 + 8 * v56 + 32) = v55;
    }
    outlined destroy of AnswerSynthesisRequestContext(v15, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v9 = v79;
  }
  outlined destroy of AnswerSynthesisRequestContext(v74, (void (*)(void))type metadata accessor for AnswerSynthesisRequestContext);
  swift_bridgeObjectRelease();
  uint64_t v60 = v75;
  void *v11 = v71;
  v11[1] = v60;
  v11[2] = 0;
  v11[3] = 0;
  uint64_t v61 = v73;
  v11[4] = v72;
  v11[5] = v61;
  uint64_t v62 = v70;
  v11[6] = v76;
  v11[7] = v62;
  v11[8] = v69;
  OUTLINED_FUNCTION_119_0();
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnswerSynthesisRequest.userPrompt()()
{
  unint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for String.Encoding();
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_17_1();
  uint64_t v5 = type metadata accessor for JSONEncoder.OutputFormatting();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_39();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.sortedKeys.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  lazy protocol witness table accessor for type AnswerSynthesisRequest and conformance AnswerSynthesisRequest();
  uint64_t v7 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
  }
  else
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    static String.Encoding.utf8.getter();
    uint64_t v11 = String.init(data:encoding:)();
    if (v12)
    {
      uint64_t v0 = v11;
      unint64_t v2 = v12;
      outlined consume of Data._Representation(v9, v10);
      swift_release();
    }
    else
    {
      outlined consume of Data._Representation(v9, v10);
      swift_release();
      uint64_t v0 = 0;
      unint64_t v2 = 0xE000000000000000;
    }
  }
  uint64_t v13 = v0;
  uint64_t v14 = (void *)v2;
  result._object = v14;
  result._countAndFlagsBits = v13;
  return result;
}

void keyForSearchResult(_:idx:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for SearchResult(0);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_17_1();
  BOOL v7 = __OFADD__(v2, 1);
  uint64_t v8 = v2 + 1;
  if (v7)
  {
    __break(1u);
LABEL_25:
    swift_once();
LABEL_10:
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logging.answerSynthesis);
    outlined init with copy of SearchResult(v4, v0, (void (*)(void))type metadata accessor for SearchResult);
    unint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      SearchResultItem.type.getter((char *)&v20);
      unint64_t v15 = SearchResultKey.rawValue.getter();
      uint64_t v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AnswerSynthesisRequestContext(v0, (void (*)(void))type metadata accessor for SearchResult);
      _os_log_impl(&dword_257DC6000, v12, v13, "Search result type not supported for answer synthesis: %s", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_34();
    }
    else
    {
      outlined destroy of AnswerSynthesisRequestContext(v0, (void (*)(void))type metadata accessor for SearchResult);
    }
  }
  else
  {
    SearchResultItem.type.getter(&v21);
    switch(v21)
    {
      case 0:
        unint64_t v9 = 0x5F6C69616D65;
        goto LABEL_8;
      case 1:
        unint64_t v9 = 0x5F6567617373656DLL;
        goto LABEL_19;
      case 2:
        unint64_t v9 = 0x7261646E656C6163;
        goto LABEL_14;
      case 3:
        unint64_t v9 = 0x5F6567616D69;
        goto LABEL_8;
      case 5:
        uint64_t v17 = 1702129518;
        goto LABEL_16;
      case 6:
        unint64_t v9 = 0x7265646E696D6572;
LABEL_14:
        uint64_t v10 = 0xE90000000000005FLL;
        break;
      case 12:
        uint64_t v17 = 1701603686;
LABEL_16:
        unint64_t v9 = v17 & 0xFFFF0000FFFFFFFFLL | 0x5F00000000;
        uint64_t v10 = 0xE500000000000000;
        break;
      case 14:
        unint64_t v9 = 0x705F74656C6C6177;
        uint64_t v10 = 0xEC0000005F737361;
        break;
      case 15:
        unint64_t v9 = 0x5F746361746E6F63;
LABEL_19:
        uint64_t v10 = 0xE800000000000000;
        break;
      case 16:
      case 17:
      case 18:
        unint64_t v9 = 0x5F746E657665;
LABEL_8:
        uint64_t v10 = 0xE600000000000000;
        break;
      default:
        if (one-time initialization token for answerSynthesis == -1) {
          goto LABEL_10;
        }
        goto LABEL_25;
    }
    v19[0] = v9;
    v19[1] = v10;
    uint64_t v20 = v8;
    v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_119_0();
}

uint64_t AnswerSynthesisRequestContext.contacts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnswerSynthesisRequestContext.contacts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*AnswerSynthesisRequestContext.contacts.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequestContext.mode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnswerSynthesisRequestContext() + 20);
  return outlined init with copy of IntentSystemContext.AssistantContext.InteractionMode?(v3, a1);
}

uint64_t AnswerSynthesisRequestContext.mode.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnswerSynthesisRequestContext() + 20);
  return outlined assign with take of IntentSystemContext.AssistantContext.InteractionMode?(a1, v3);
}

uint64_t (*AnswerSynthesisRequestContext.mode.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequestContext.assistantLocale.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisRequestContext.assistantLocale.setter()
{
  OUTLINED_FUNCTION_20_2();
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AnswerSynthesisRequestContext() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v3 = v2;
  v3[1] = v0;
  return result;
}

uint64_t (*AnswerSynthesisRequestContext.assistantLocale.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequestContext.Contact.names.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*AnswerSynthesisRequestContext.Contact.names.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequestContext.Contact.relationship.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AnswerSynthesisRequestContext.Contact.relationship.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*AnswerSynthesisRequestContext.Contact.relationship.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static AnswerSynthesisRequestContext.Contact.== infix(_:_:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    if (!a4 || (specialized static Array<A>.== infix(_:_:)(a1, a4) & 1) == 0) {
      return 0;
    }
  }
  else if (a4)
  {
    return 0;
  }
  if (a3)
  {
    if (!a6) {
      return 0;
    }
    BOOL v10 = a2 == a5 && a3 == a6;
    return v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0;
  }
  return !a6;
}

BOOL static AnswerSynthesisRequestContext.Contact.CodingKeys.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void AnswerSynthesisRequestContext.Contact.CodingKeys.hash(into:)(uint64_t a1, char a2)
{
}

uint64_t AnswerSynthesisRequestContext.Contact.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656D616ELL && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xEC00000070696873)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t AnswerSynthesisRequestContext.Contact.CodingKeys.init(intValue:)()
{
  return 2;
}

Swift::Int AnswerSynthesisRequestContext.Contact.CodingKeys.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

uint64_t AnswerSynthesisRequestContext.Contact.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x6E6F6974616C6572;
  }
  else {
    return 0x73656D616ELL;
  }
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AnswerSynthesisRequestContext.Contact.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static AnswerSynthesisRequestContext.Contact.CodingKeys.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnswerSynthesisRequestContext.Contact.CodingKeys()
{
  return AnswerSynthesisRequestContext.Contact.CodingKeys.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance AnswerSynthesisRequestContext.Contact.CodingKeys(uint64_t a1)
{
  AnswerSynthesisRequestContext.Contact.CodingKeys.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AnswerSynthesisRequestContext.Contact.CodingKeys()
{
  return AnswerSynthesisRequestContext.Contact.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisRequestContext.Contact.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = AnswerSynthesisRequestContext.Contact.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance AnswerSynthesisRequestContext.Contact.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AnswerSynthesisRequestContext.Contact.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisRequestContext.Contact.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisRequestContext.Contact.CodingKeys and conformance AnswerSynthesisRequestContext.Contact.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisRequestContext.Contact.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisRequestContext.Contact.CodingKeys and conformance AnswerSynthesisRequestContext.Contact.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnswerSynthesisRequestContext.Contact.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnswerSynthesisRequestContext.Contact.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_39();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AnswerSynthesisRequestContext.Contact.CodingKeys and conformance AnswerSynthesisRequestContext.Contact.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1) {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t AnswerSynthesisRequestContext.Contact.init()()
{
  return 0;
}

uint64_t AnswerSynthesisRequestContext.Contact.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisRequestContext.Contact.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_39();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AnswerSynthesisRequestContext.Contact.CodingKeys and conformance AnswerSynthesisRequestContext.Contact.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    uint64_t v5 = 0;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v5 = v8;
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v6 = OUTLINED_FUNCTION_21_2();
    v7(v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v5;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AnswerSynthesisRequestContext.Contact@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = AnswerSynthesisRequestContext.Contact.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AnswerSynthesisRequestContext.Contact(void *a1)
{
  return AnswerSynthesisRequestContext.Contact.encode(to:)(a1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AnswerSynthesisRequestContext.Contact(uint64_t a1, uint64_t a2)
{
  return static AnswerSynthesisRequestContext.Contact.== infix(_:_:)(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t AnswerSynthesisRequestContext.init(contacts:mode:assistantLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for AnswerSynthesisRequestContext();
  uint64_t v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for IntentSystemContext.AssistantContext.InteractionMode();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  os_log_type_t v13 = (void *)((char *)a5 + *(int *)(v10 + 24));
  void *v13 = 0;
  v13[1] = 0;
  *a5 = a1;
  outlined assign with take of IntentSystemContext.AssistantContext.InteractionMode?(a2, v11);
  uint64_t result = swift_bridgeObjectRelease();
  void *v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t AnswerSynthesisRequestContext.init(query:mode:assistantLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](AnswerSynthesisRequestContext.init(query:mode:assistantLocale:), 0, 0);
}

uint64_t AnswerSynthesisRequestContext.init(query:mode:assistantLocale:)()
{
  uint64_t v1 = (void *)v0[2];
  void *v1 = MEMORY[0x263F8EE78];
  uint64_t v2 = type metadata accessor for AnswerSynthesisRequestContext();
  uint64_t v3 = (uint64_t)v1 + *(int *)(v2 + 20);
  uint64_t v4 = type metadata accessor for IntentSystemContext.AssistantContext.InteractionMode();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  uint64_t v5 = (void *)((char *)v1 + *(int *)(v2 + 24));
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for CNContactStore);
  *uint64_t v5 = 0;
  v5[1] = 0;
  id v6 = static CNContactStore.inProcessStore()();
  unint64_t v7 = (unint64_t)CNContactStore.findMeCard()();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_258661D70;
    id v10 = objc_msgSend(v8, sel_givenName);
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v13;
    id v14 = objc_msgSend(v8, sel_middleName);
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    *(void *)(v9 + 48) = v15;
    *(void *)(v9 + 56) = v17;
    id v18 = objc_msgSend(v8, sel_familyName);
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *(void *)(v9 + 64) = v19;
    *(void *)(v9 + 72) = v21;
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v23 = v22;
    unint64_t v24 = *(void *)(v22 + 16);
    if (v24 >= *(void *)(v22 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v23 = v36;
    }
    *(void *)(v23 + 16) = v24 + 1;
    uint64_t v25 = v23 + 24 * v24;
    *(void *)(v25 + 32) = v9;
    *(_OWORD *)(v25 + 40) = xmmword_258662340;
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logging.search);
    char v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_257DC6000, v27, v28, "Failed to retrieve mecard from contacts store", v29, 2u);
      OUTLINED_FUNCTION_34();
    }
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t v8 = v6;
    id v6 = v27;
  }

  uint64_t v31 = v0[4];
  uint64_t v30 = v0[5];
  uint64_t v33 = (void *)v0[2];
  uint64_t v32 = v0[3];
  swift_bridgeObjectRelease();
  *uint64_t v33 = v23;
  outlined assign with take of IntentSystemContext.AssistantContext.InteractionMode?(v32, v3);
  swift_bridgeObjectRelease();
  *uint64_t v5 = v31;
  v5[1] = v30;
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t AnswerSynthesisRequestContext.llmPromptString.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  uint64_t v2 = (void *)(swift_bridgeObjectRetain() + 48);
  do
  {
    if (*v2)
    {
      uint64_t v3 = *(v2 - 2);
      BOOL v4 = *(v2 - 1) == 1718379891 && *v2 == 0xE400000000000000;
      if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        *(void *)&long long v16 = 0;
        *((void *)&v16 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        MEMORY[0x25A2C7B90](16);
        long long v19 = v16;
        v5._countAndFlagsBits = 0x206D612049;
        v5._object = (void *)0xE500000000000000;
        String.append(_:)(v5);
        if (v3)
        {
          *(void *)&long long v16 = v3;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
          lazy protocol witness table accessor for type [String] and conformance [A]();
          uint64_t v6 = BidirectionalCollection<>.joined(separator:)();
          uint64_t v8 = v7;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          *((void *)&v17 + 1) = MEMORY[0x263F8D310];
          uint64_t v18 = MEMORY[0x263F8D378];
          *(void *)&long long v16 = v6;
          *((void *)&v16 + 1) = v8;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = 0;
          long long v16 = 0u;
          long long v17 = 0u;
        }
        LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v16);
        outlined destroy of CustomStringConvertible?((uint64_t)&v16);
        v9._countAndFlagsBits = 46;
        v9._object = (void *)0xE100000000000000;
        String.append(_:)(v9);
        LLMFormatter.sanitized.getter();
        uint64_t v11 = v10;
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        v14._countAndFlagsBits = v11;
        v14._object = v13;
        String.append(_:)(v14);
        swift_bridgeObjectRelease();
      }
    }
    v2 += 3;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t AnswerSynthesisRequestContext.matchECR(query:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](AnswerSynthesisRequestContext.matchECR(query:), 0, 0);
}

uint64_t AnswerSynthesisRequestContext.matchECR(query:)()
{
  if (v0[3]
    && (type metadata accessor for ECRClient(), swift_allocObject(), uint64_t v1 = ECRClient.init()(), (v0[4] = v1) != 0))
  {
    uint64_t v2 = v0[3];
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))(*(void *)(*(void *)v1 + 96)
                                                                   + **(int **)(*(void *)v1 + 96));
    uint64_t v3 = (void *)swift_task_alloc();
    v0[5] = v3;
    *uint64_t v3 = v0;
    v3[1] = AnswerSynthesisRequestContext.matchECR(query:);
    uint64_t v4 = v0[2];
    return v8(v4, v2, 0, 1);
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_4();
    return v7(v6);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  if (v0[6] == 1)
  {
    swift_release();
    uint64_t v1 = 0;
    uint64_t v2 = 0;
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v4 = (void *)v0[8];
    if (v4 && v4[2])
    {
      uint64_t v1 = v4[4];
      uint64_t v2 = v4[5];
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v1 = 0;
      uint64_t v2 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v0[6];
  }
  Swift::String v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v5(v3, v1, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v10;

  swift_release();
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.search);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.info.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  Swift::String v5 = *(void **)(v0 + 72);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_257DC6000, v2, v3, "Error during ECR match for relationship", v6, 2u);
    OUTLINED_FUNCTION_34();
  }

  uint64_t v7 = OUTLINED_FUNCTION_13_4();
  return v8(v7);
}

uint64_t AnswerSynthesisRequestContext.matchECR(query:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v5 = (void *)*v4;
  v5[6] = a1;
  v5[7] = a2;
  v5[8] = a3;
  v5[9] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = AnswerSynthesisRequestContext.matchECR(query:);
  }
  else {
    uint64_t v6 = AnswerSynthesisRequestContext.matchECR(query:);
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t AnswerSynthesisRequest.query.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisRequest.query.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*AnswerSynthesisRequest.query.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequest.mode.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisRequest.mode.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*AnswerSynthesisRequest.mode.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequest.locale.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisRequest.locale.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*AnswerSynthesisRequest.locale.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequest.personal_data_sources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnswerSynthesisRequest.personal_data_sources.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*AnswerSynthesisRequest.personal_data_sources.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t AnswerSynthesisRequest.context.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t AnswerSynthesisRequest.context.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*AnswerSynthesisRequest.context.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t specialized Collection.prefix(_:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    uint64_t v1 = String.subscript.getter();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t specialized Collection.prefix(_:)(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = OUTLINED_FUNCTION_18_2(result, a2);
  if (v4) {
    unint64_t v5 = result;
  }
  else {
    unint64_t v5 = v3;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = OUTLINED_FUNCTION_18_2(result, a2);
  if (v4) {
    unint64_t v5 = result;
  }
  else {
    unint64_t v5 = v3;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5)
  {
    type metadata accessor for SearchEntity(0);
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t AnswerSynthesisRequest.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701080941 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x800000025867DF10 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

uint64_t AnswerSynthesisRequest.CodingKeys.init(intValue:)()
{
  return 5;
}

unint64_t AnswerSynthesisRequest.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0x7972657571;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701080941;
      break;
    case 2:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x747865746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance AnswerSynthesisRequest.CodingKeys()
{
  return AnswerSynthesisRequest.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisRequest.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = AnswerSynthesisRequest.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance AnswerSynthesisRequest.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AnswerSynthesisRequest.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisRequest.CodingKeys and conformance AnswerSynthesisRequest.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnswerSynthesisRequest.CodingKeys and conformance AnswerSynthesisRequest.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnswerSynthesisRequest.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnswerSynthesisRequest.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  lazy protocol witness table accessor for type AnswerSynthesisRequest.CodingKeys and conformance AnswerSynthesisRequest.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_12_2();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_12_2();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[String : String]]);
    lazy protocol witness table accessor for type [[String : String]] and conformance <A> [A]();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v12);
}

uint64_t AnswerSynthesisRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisRequest.CodingKeys>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AnswerSynthesisRequest.CodingKeys and conformance AnswerSynthesisRequest.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v9 = v8;
    uint64_t v25 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = OUTLINED_FUNCTION_15_1();
    uint64_t v12 = v11;
    uint64_t v23 = v10;
    unint64_t v24 = a2;
    swift_bridgeObjectRetain();
    uint64_t v13 = OUTLINED_FUNCTION_15_1();
    uint64_t v15 = v14;
    uint64_t v22 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[String : String]]);
    lazy protocol witness table accessor for type [[String : String]] and conformance <A> [A]();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    uint64_t v16 = OUTLINED_FUNCTION_15_1();
    uint64_t v18 = v17;
    uint64_t v21 = v16;
    uint64_t v19 = OUTLINED_FUNCTION_1_1();
    v20(v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *unint64_t v24 = v25;
    v24[1] = v9;
    v24[2] = v23;
    v24[3] = v12;
    v24[4] = v22;
    v24[5] = v15;
    v24[6] = v26;
    v24[7] = v21;
    v24[8] = v18;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}